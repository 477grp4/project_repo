

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Nov 05 11:16:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  028C                     	;# 
   179  028D                     	;# 
   180  028E                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  030C                     	;# 
   190  030D                     	;# 
   191  030E                     	;# 
   192  038C                     	;# 
   193  038D                     	;# 
   194  038E                     	;# 
   195  0390                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  0397                     	;# 
   203  0398                     	;# 
   204  0399                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0511                     	;# 
   209  0513                     	;# 
   210  051A                     	;# 
   211  0811                     	;# 
   212  0812                     	;# 
   213  0813                     	;# 
   214  0814                     	;# 
   215  0815                     	;# 
   216  0816                     	;# 
   217  0817                     	;# 
   218  0818                     	;# 
   219  0819                     	;# 
   220  081A                     	;# 
   221  081B                     	;# 
   222  081C                     	;# 
   223  081D                     	;# 
   224  081E                     	;# 
   225  081F                     	;# 
   226  0820                     	;# 
   227  0821                     	;# 
   228  0821                     	;# 
   229  0822                     	;# 
   230  0823                     	;# 
   231  0823                     	;# 
   232  0824                     	;# 
   233  0825                     	;# 
   234  0825                     	;# 
   235  0826                     	;# 
   236  0827                     	;# 
   237  0827                     	;# 
   238  0828                     	;# 
   239  0829                     	;# 
   240  082A                     	;# 
   241  082B                     	;# 
   242  082C                     	;# 
   243  082D                     	;# 
   244  082E                     	;# 
   245  082F                     	;# 
   246  0831                     	;# 
   247  0832                     	;# 
   248  0833                     	;# 
   249  0834                     	;# 
   250  0835                     	;# 
   251  0836                     	;# 
   252  0837                     	;# 
   253  0838                     	;# 
   254  0839                     	;# 
   255  083A                     	;# 
   256  083B                     	;# 
   257  083C                     	;# 
   258  083D                     	;# 
   259  083E                     	;# 
   260  083F                     	;# 
   261  0840                     	;# 
   262  0841                     	;# 
   263  0841                     	;# 
   264  0842                     	;# 
   265  0843                     	;# 
   266  0843                     	;# 
   267  0844                     	;# 
   268  0845                     	;# 
   269  0845                     	;# 
   270  0846                     	;# 
   271  0847                     	;# 
   272  0847                     	;# 
   273  0848                     	;# 
   274  0849                     	;# 
   275  084A                     	;# 
   276  084B                     	;# 
   277  084C                     	;# 
   278  084D                     	;# 
   279  084E                     	;# 
   280  084F                     	;# 
   281  0FE4                     	;# 
   282  0FE5                     	;# 
   283  0FE6                     	;# 
   284  0FE7                     	;# 
   285  0FE8                     	;# 
   286  0FE9                     	;# 
   287  0FEA                     	;# 
   288  0FEB                     	;# 
   289  0FED                     	;# 
   290  0FEE                     	;# 
   291  0FEF                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  0090                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0094                     	;# 
   327  0095                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  0111                     	;# 
   343  0112                     	;# 
   344  0113                     	;# 
   345  0114                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0117                     	;# 
   349  0118                     	;# 
   350  0119                     	;# 
   351  011D                     	;# 
   352  011D                     	;# 
   353  011E                     	;# 
   354  011F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  0199                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019A                     	;# 
   371  019A                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019C                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019D                     	;# 
   381  019D                     	;# 
   382  019D                     	;# 
   383  019E                     	;# 
   384  019E                     	;# 
   385  019E                     	;# 
   386  019F                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  019F                     	;# 
   391  020C                     	;# 
   392  020D                     	;# 
   393  020E                     	;# 
   394  0210                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0216                     	;# 
   407  0216                     	;# 
   408  0217                     	;# 
   409  0217                     	;# 
   410  028C                     	;# 
   411  028D                     	;# 
   412  028E                     	;# 
   413  0291                     	;# 
   414  0291                     	;# 
   415  0292                     	;# 
   416  0293                     	;# 
   417  0298                     	;# 
   418  0298                     	;# 
   419  0299                     	;# 
   420  029A                     	;# 
   421  030C                     	;# 
   422  030D                     	;# 
   423  030E                     	;# 
   424  038C                     	;# 
   425  038D                     	;# 
   426  038E                     	;# 
   427  0390                     	;# 
   428  0391                     	;# 
   429  0392                     	;# 
   430  0393                     	;# 
   431  0394                     	;# 
   432  0395                     	;# 
   433  0396                     	;# 
   434  0397                     	;# 
   435  0398                     	;# 
   436  0399                     	;# 
   437  039D                     	;# 
   438  039E                     	;# 
   439  039F                     	;# 
   440  0511                     	;# 
   441  0513                     	;# 
   442  051A                     	;# 
   443  0811                     	;# 
   444  0812                     	;# 
   445  0813                     	;# 
   446  0814                     	;# 
   447  0815                     	;# 
   448  0816                     	;# 
   449  0817                     	;# 
   450  0818                     	;# 
   451  0819                     	;# 
   452  081A                     	;# 
   453  081B                     	;# 
   454  081C                     	;# 
   455  081D                     	;# 
   456  081E                     	;# 
   457  081F                     	;# 
   458  0820                     	;# 
   459  0821                     	;# 
   460  0821                     	;# 
   461  0822                     	;# 
   462  0823                     	;# 
   463  0823                     	;# 
   464  0824                     	;# 
   465  0825                     	;# 
   466  0825                     	;# 
   467  0826                     	;# 
   468  0827                     	;# 
   469  0827                     	;# 
   470  0828                     	;# 
   471  0829                     	;# 
   472  082A                     	;# 
   473  082B                     	;# 
   474  082C                     	;# 
   475  082D                     	;# 
   476  082E                     	;# 
   477  082F                     	;# 
   478  0831                     	;# 
   479  0832                     	;# 
   480  0833                     	;# 
   481  0834                     	;# 
   482  0835                     	;# 
   483  0836                     	;# 
   484  0837                     	;# 
   485  0838                     	;# 
   486  0839                     	;# 
   487  083A                     	;# 
   488  083B                     	;# 
   489  083C                     	;# 
   490  083D                     	;# 
   491  083E                     	;# 
   492  083F                     	;# 
   493  0840                     	;# 
   494  0841                     	;# 
   495  0841                     	;# 
   496  0842                     	;# 
   497  0843                     	;# 
   498  0843                     	;# 
   499  0844                     	;# 
   500  0845                     	;# 
   501  0845                     	;# 
   502  0846                     	;# 
   503  0847                     	;# 
   504  0847                     	;# 
   505  0848                     	;# 
   506  0849                     	;# 
   507  084A                     	;# 
   508  084B                     	;# 
   509  084C                     	;# 
   510  084D                     	;# 
   511  084E                     	;# 
   512  084F                     	;# 
   513  0FE4                     	;# 
   514  0FE5                     	;# 
   515  0FE6                     	;# 
   516  0FE7                     	;# 
   517  0FE8                     	;# 
   518  0FE9                     	;# 
   519  0FEA                     	;# 
   520  0FEB                     	;# 
   521  0FED                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  0010                     	;# 
   540  0011                     	;# 
   541  0012                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0016                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  008C                     	;# 
   553  008D                     	;# 
   554  008E                     	;# 
   555  0090                     	;# 
   556  0091                     	;# 
   557  0092                     	;# 
   558  0094                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011D                     	;# 
   584  011D                     	;# 
   585  011E                     	;# 
   586  011F                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  020E                     	;# 
   626  0210                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  028C                     	;# 
   643  028D                     	;# 
   644  028E                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  030C                     	;# 
   654  030D                     	;# 
   655  030E                     	;# 
   656  038C                     	;# 
   657  038D                     	;# 
   658  038E                     	;# 
   659  0390                     	;# 
   660  0391                     	;# 
   661  0392                     	;# 
   662  0393                     	;# 
   663  0394                     	;# 
   664  0395                     	;# 
   665  0396                     	;# 
   666  0397                     	;# 
   667  0398                     	;# 
   668  0399                     	;# 
   669  039D                     	;# 
   670  039E                     	;# 
   671  039F                     	;# 
   672  0511                     	;# 
   673  0513                     	;# 
   674  051A                     	;# 
   675  0811                     	;# 
   676  0812                     	;# 
   677  0813                     	;# 
   678  0814                     	;# 
   679  0815                     	;# 
   680  0816                     	;# 
   681  0817                     	;# 
   682  0818                     	;# 
   683  0819                     	;# 
   684  081A                     	;# 
   685  081B                     	;# 
   686  081C                     	;# 
   687  081D                     	;# 
   688  081E                     	;# 
   689  081F                     	;# 
   690  0820                     	;# 
   691  0821                     	;# 
   692  0821                     	;# 
   693  0822                     	;# 
   694  0823                     	;# 
   695  0823                     	;# 
   696  0824                     	;# 
   697  0825                     	;# 
   698  0825                     	;# 
   699  0826                     	;# 
   700  0827                     	;# 
   701  0827                     	;# 
   702  0828                     	;# 
   703  0829                     	;# 
   704  082A                     	;# 
   705  082B                     	;# 
   706  082C                     	;# 
   707  082D                     	;# 
   708  082E                     	;# 
   709  082F                     	;# 
   710  0831                     	;# 
   711  0832                     	;# 
   712  0833                     	;# 
   713  0834                     	;# 
   714  0835                     	;# 
   715  0836                     	;# 
   716  0837                     	;# 
   717  0838                     	;# 
   718  0839                     	;# 
   719  083A                     	;# 
   720  083B                     	;# 
   721  083C                     	;# 
   722  083D                     	;# 
   723  083E                     	;# 
   724  083F                     	;# 
   725  0840                     	;# 
   726  0841                     	;# 
   727  0841                     	;# 
   728  0842                     	;# 
   729  0843                     	;# 
   730  0843                     	;# 
   731  0844                     	;# 
   732  0845                     	;# 
   733  0845                     	;# 
   734  0846                     	;# 
   735  0847                     	;# 
   736  0847                     	;# 
   737  0848                     	;# 
   738  0849                     	;# 
   739  084A                     	;# 
   740  084B                     	;# 
   741  084C                     	;# 
   742  084D                     	;# 
   743  084E                     	;# 
   744  084F                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756                           
   757                           	psect	idataBANK0
   758  0C02                     __pidataBANK0:	
   759                           
   760                           ;initializer for _validLatitude
   761  0C02  3428               	retlw	40
   762  0C03  3419               	retlw	25
   763  0C04  3414               	retlw	20
   764                           
   765                           ;initializer for _gpsInvalidFlag
   766  0C05  3401               	retlw	1
   767                           
   768                           ;initializer for _validEastWest
   769  0C06  3445               	retlw	69
   770                           
   771                           ;initializer for _validNorthSouth
   772  0C07  344E               	retlw	78
   773                           
   774                           	psect	idataBANK1
   775  0C0F                     __pidataBANK1:	
   776                           
   777                           ;initializer for SetupGPS@F4926
   778  0C0F  3431               	retlw	49
   779  0C10  3430               	retlw	48
   780  0C11  3433               	retlw	51
   781  0C12  3400               	retlw	0
   782                           
   783                           ;initializer for _validLongitude
   784  0C13  3456               	retlw	86
   785  0C14  3444               	retlw	68
   786  0C15  3414               	retlw	20
   787                           
   788                           	psect	idataBANK2
   789  0D26                     __pidataBANK2:	
   790                           
   791                           ;initializer for DisableGPS@F4921
   792  0D26  3424               	retlw	36
   793  0D27  3450               	retlw	80
   794  0D28  3453               	retlw	83
   795  0D29  3452               	retlw	82
   796  0D2A  3446               	retlw	70
   797  0D2B  3431               	retlw	49
   798  0D2C  3431               	retlw	49
   799  0D2D  3437               	retlw	55
   800  0D2E  342C               	retlw	44
   801  0D2F  3431               	retlw	49
   802  0D30  3436               	retlw	54
   803  0D31  342A               	retlw	42
   804  0D32  3400               	retlw	0
   805                           
   806                           ;initializer for DecodeGPS@F4933
   807  0D33  3424               	retlw	36
   808  0D34  3447               	retlw	71
   809  0D35  3450               	retlw	80
   810  0D36  3447               	retlw	71
   811  0D37  344C               	retlw	76
   812  0D38  344C               	retlw	76
   813  0D39  3400               	retlw	0
   814                           
   815                           ;initializer for SetupGPS@F4924
   816  0D3A  3424               	retlw	36
   817  0D3B  3450               	retlw	80
   818  0D3C  3453               	retlw	83
   819  0D3D  3452               	retlw	82
   820  0D3E  3446               	retlw	70
   821  0D3F  3400               	retlw	0
   822                           
   823                           	psect	idataBANK3
   824  0CAF                     __pidataBANK3:	
   825                           
   826                           ;initializer for UpdateGPS@F4931
   827  0CAF  3424               	retlw	36
   828  0CB0  3450               	retlw	80
   829  0CB1  3453               	retlw	83
   830  0CB2  3452               	retlw	82
   831  0CB3  3446               	retlw	70
   832  0CB4  3431               	retlw	49
   833  0CB5  3430               	retlw	48
   834  0CB6  3433               	retlw	51
   835  0CB7  342C               	retlw	44
   836  0CB8  3430               	retlw	48
   837  0CB9  3431               	retlw	49
   838  0CBA  342C               	retlw	44
   839  0CBB  3430               	retlw	48
   840  0CBC  3431               	retlw	49
   841  0CBD  342C               	retlw	44
   842  0CBE  3430               	retlw	48
   843  0CBF  3431               	retlw	49
   844  0CC0  342C               	retlw	44
   845  0CC1  3430               	retlw	48
   846  0CC2  3430               	retlw	48
   847  0CC3  342A               	retlw	42
   848  0CC4  3400               	retlw	0
   849                           
   850                           	psect	stringtext
   851  0800                     __pstringtext:	
   852  0800                     _dpowers:	
   853  0800  3401               	retlw	1
   854  0801  3400               	retlw	0
   855  0802  340A               	retlw	10
   856  0803  3400               	retlw	0
   857  0804  3464               	retlw	100
   858  0805  3400               	retlw	0
   859  0806  34E8               	retlw	232
   860  0807  3403               	retlw	3
   861  0808  3410               	retlw	16
   862  0809  3427               	retlw	39
   863  080A                     __end_of_dpowers:	
   864  000B                     _INTCONbits	set	11
   865  0011                     _PIR1bits	set	17
   866  000C                     _PORTAbits	set	12
   867  000D                     _PORTBbits	set	13
   868  000E                     _PORTCbits	set	14
   869  0018                     _T1CONbits	set	24
   870  0019                     _T1GCONbits	set	25
   871  0017                     _TMR1H	set	23
   872  0016                     _TMR1L	set	22
   873  008E                     _ADIF	set	142
   874  005F                     _GIE	set	95
   875  005E                     _PEIE	set	94
   876  0088                     _TMR1IF	set	136
   877  00C0                     _TMR1ON	set	192
   878  009D                     _ADCON0bits	set	157
   879  009E                     _ADCON1bits	set	158
   880  009F                     _ADCON2bits	set	159
   881  009C                     _ADRESH	set	156
   882  0095                     _OPTION_REGbits	set	149
   883  0099                     _OSCCONbits	set	153
   884  0091                     _PIE1bits	set	145
   885  008C                     _TRISAbits	set	140
   886  008D                     _TRISBbits	set	141
   887  008E                     _TRISCbits	set	142
   888  0097                     _WDTCONbits	set	151
   889  048E                     _ADIE	set	1166
   890  048D                     _RCIE	set	1165
   891  0488                     _TMR1IE	set	1160
   892  010D                     _LATBbits	set	269
   893  0872                     _LATC2	set	2162
   894  018C                     _ANSELAbits	set	396
   895  018D                     _ANSELBbits	set	397
   896  0199                     _RCREG	set	409
   897  019D                     _RCSTAbits	set	413
   898  019C                     _SPBRGH	set	412
   899  019B                     _SPBRGL	set	411
   900  019A                     _TXREG	set	410
   901  019E                     _TXSTAbits	set	414
   902  0CE9                     _OERR	set	3305
   903  0211                     _SSPBUF	set	529
   904  0215                     _SSPCON1bits	set	533
   905  0214                     _SSPSTATbits	set	532
   906  0393                     _IOCAF	set	915
   907  0393                     _IOCAFbits	set	915
   908  0392                     _IOCANbits	set	914
   909  0391                     _IOCAPbits	set	913
   910  0396                     _IOCBF	set	918
   911  0396                     _IOCBFbits	set	918
   912  0395                     _IOCBNbits	set	917
   913  0394                     _IOCBPbits	set	916
   914  080A                     __stringdata:	
   915  080A                     STR_2:	
   916  080A  3425               	retlw	37	;'%'
   917  080B  3473               	retlw	115	;'s'
   918  080C  3431               	retlw	49	;'1'
   919  080D  3430               	retlw	48	;'0'
   920  080E  3434               	retlw	52	;'4'
   921  080F  342C               	retlw	44	;','
   922  0810  3434               	retlw	52	;'4'
   923  0811  3430               	retlw	48	;'0'
   924  0812  342E               	retlw	46	;'.'
   925  0813  3434               	retlw	52	;'4'
   926  0814  3434               	retlw	52	;'4'
   927  0815  3431               	retlw	49	;'1'
   928  0816  3439               	retlw	57	;'9'
   929  0817  3434               	retlw	52	;'4'
   930  0818  3434               	retlw	52	;'4'
   931  0819  342C               	retlw	44	;','
   932  081A  342D               	retlw	45	;'-'
   933  081B  3438               	retlw	56	;'8'
   934  081C  3436               	retlw	54	;'6'
   935  081D  342E               	retlw	46	;'.'
   936  081E  3439               	retlw	57	;'9'
   937  081F  3431               	retlw	49	;'1'
   938  0820  3432               	retlw	50	;'2'
   939  0821  3435               	retlw	53	;'5'
   940  0822  342C               	retlw	44	;','
   941  0823  3430               	retlw	48	;'0'
   942  0824  342C               	retlw	44	;','
   943  0825  3430               	retlw	48	;'0'
   944  0826  342C               	retlw	44	;','
   945  0827  3430               	retlw	48	;'0'
   946  0828  342C               	retlw	44	;','
   947  0829  3430               	retlw	48	;'0'
   948  082A  342C               	retlw	44	;','
   949  082B  3431               	retlw	49	;'1'
   950  082C  3432               	retlw	50	;'2'
   951  082D  342C               	retlw	44	;','
   952  082E  3432               	retlw	50	;'2'
   953  082F  342A               	retlw	42	;'*'
   954  0830  3400               	retlw	0
   955  0831                     STR_1:	
   956  0831  3425               	retlw	37	;'%'
   957  0832  3473               	retlw	115	;'s'
   958  0833  3425               	retlw	37	;'%'
   959  0834  3473               	retlw	115	;'s'
   960  0835  342C               	retlw	44	;','
   961  0836  3430               	retlw	48	;'0'
   962  0837  3425               	retlw	37	;'%'
   963  0838  3464               	retlw	100	;'d'
   964  0839  342C               	retlw	44	;','
   965  083A  3430               	retlw	48	;'0'
   966  083B  3430               	retlw	48	;'0'
   967  083C  342C               	retlw	44	;','
   968  083D  3430               	retlw	48	;'0'
   969  083E  3430               	retlw	48	;'0'
   970  083F  342C               	retlw	44	;','
   971  0840  3430               	retlw	48	;'0'
   972  0841  3430               	retlw	48	;'0'
   973  0842  342A               	retlw	42	;'*'
   974  0843  3400               	retlw	0
   975  0844                     STR_3:	
   976  0844  3428               	retlw	40	;'('
   977  0845  346E               	retlw	110	;'n'
   978  0846  3475               	retlw	117	;'u'
   979  0847  346C               	retlw	108	;'l'
   980  0848  346C               	retlw	108	;'l'
   981  0849  3429               	retlw	41	;')'
   982  084A  3400               	retlw	0
   983  084B                     __end_of__stringdata:	
   984                           
   985                           ; #config settings
   986  0000                     
   987                           	psect	cinit
   988  00E1                     start_initialization:	
   989  00E1                     __initialization:	
   990                           
   991                           ; Clear objects allocated to COMMON
   992  00E1  01F9               	clrf	__pbssCOMMON& (0+127)
   993  00E2  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   994  00E3  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   995  00E4  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   996  00E5  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   997                           
   998                           ; Clear objects allocated to BANK0
   999  00E6  01E9               	clrf	__pbssBANK0& (0+127)
  1000  00E7  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  1001  00E8  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  1002  00E9  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  1003  00EA  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  1004                           
  1005                           ; Clear objects allocated to BANK1
  1006  00EB  30DE               	movlw	low __pbssBANK1
  1007  00EC  0084               	movwf	4
  1008  00ED  3000               	movlw	high __pbssBANK1
  1009  00EE  0085               	movwf	5
  1010  00EF  300A               	movlw	10
  1011  00F0  318B  23FC  3180   	fcall	clear_ram0
  1012                           
  1013                           ; Clear objects allocated to BANK2
  1014  00F3  3020               	movlw	low __pbssBANK2
  1015  00F4  0084               	movwf	4
  1016  00F5  3001               	movlw	high __pbssBANK2
  1017  00F6  0085               	movwf	5
  1018  00F7  3032               	movlw	50
  1019  00F8  318B  23FC  3180   	fcall	clear_ram0
  1020                           
  1021                           ; Clear objects allocated to BANK3
  1022  00FB  30A0               	movlw	low __pbssBANK3
  1023  00FC  0084               	movwf	4
  1024  00FD  3001               	movlw	high __pbssBANK3
  1025  00FE  0085               	movwf	5
  1026  00FF  3033               	movlw	51
  1027  0100  318B  23FC  3180   	fcall	clear_ram0
  1028                           
  1029                           ; Clear objects allocated to BANK4
  1030  0103  3020               	movlw	low __pbssBANK4
  1031  0104  0084               	movwf	4
  1032  0105  3002               	movlw	high __pbssBANK4
  1033  0106  0085               	movwf	5
  1034  0107  3048               	movlw	72
  1035  0108  318B  23FC  3180   	fcall	clear_ram0
  1036                           
  1037                           ; Initialize objects allocated to BANK0
  1038  010B  3002               	movlw	low __pidataBANK0
  1039  010C  0084               	movwf	4
  1040  010D  308C               	movlw	(high __pidataBANK0)| (0+128)
  1041  010E  0085               	movwf	5
  1042  010F  3063               	movlw	low __pdataBANK0
  1043  0110  0086               	movwf	6
  1044  0111  3000               	movlw	high __pdataBANK0
  1045  0112  0087               	movwf	7
  1046  0113  3006               	movlw	6
  1047  0114  318B  23F6  3180   	fcall	init_ram
  1048                           
  1049                           ; Initialize objects allocated to BANK1
  1050  0117  300F               	movlw	low __pidataBANK1
  1051  0118  0084               	movwf	4
  1052  0119  308C               	movlw	(high __pidataBANK1)| (0+128)
  1053  011A  0085               	movwf	5
  1054  011B  30E8               	movlw	low __pdataBANK1
  1055  011C  0086               	movwf	6
  1056  011D  3000               	movlw	high __pdataBANK1
  1057  011E  0087               	movwf	7
  1058  011F  3007               	movlw	7
  1059  0120  318B  23F6  3180   	fcall	init_ram
  1060                           
  1061                           ; Initialize objects allocated to BANK2
  1062  0123  3026               	movlw	low __pidataBANK2
  1063  0124  0084               	movwf	4
  1064  0125  308D               	movlw	(high __pidataBANK2)| (0+128)
  1065  0126  0085               	movwf	5
  1066  0127  3052               	movlw	low __pdataBANK2
  1067  0128  0086               	movwf	6
  1068  0129  3001               	movlw	high __pdataBANK2
  1069  012A  0087               	movwf	7
  1070  012B  301A               	movlw	26
  1071  012C  318B  23F6  3180   	fcall	init_ram
  1072                           
  1073                           ; Initialize objects allocated to BANK3
  1074  012F  30AF               	movlw	low __pidataBANK3
  1075  0130  0084               	movwf	4
  1076  0131  308C               	movlw	(high __pidataBANK3)| (0+128)
  1077  0132  0085               	movwf	5
  1078  0133  30D3               	movlw	low __pdataBANK3
  1079  0134  0086               	movwf	6
  1080  0135  3001               	movlw	high __pdataBANK3
  1081  0136  0087               	movwf	7
  1082  0137  3016               	movlw	22
  1083  0138  318B  23F6         	fcall	init_ram
  1084  013A                     end_of_initialization:	
  1085                           ;End of C runtime variable initialization code
  1086                           
  1087  013A                     __end_of__initialization:	
  1088  013A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1089  013B  0020               	movlb	0
  1090  013C  3186  2E2B         	ljmp	_main	;jump to C main() function
  1091                           
  1092                           	psect	bssCOMMON
  1093  0079                     __pbssCOMMON:	
  1094  0079                     _end:	
  1095  0079                     	ds	2
  1096  007B                     _start:	
  1097  007B                     	ds	2
  1098  007D                     _gpsIndex:	
  1099  007D                     	ds	1
  1100                           
  1101                           	psect	bssBANK0
  1102  0069                     __pbssBANK0:	
  1103  0069                     _eeprom_timeoutFlag:	
  1104  0069                     	ds	1
  1105  006A                     _hasValidGPSFlag:	
  1106  006A                     	ds	1
  1107  006B                     _messageDoneFlag:	
  1108  006B                     	ds	1
  1109  006C                     _recordFlag:	
  1110  006C                     	ds	1
  1111  006D                     _strobeFlag:	
  1112  006D                     	ds	1
  1113                           
  1114                           	psect	dataBANK0
  1115  0063                     __pdataBANK0:	
  1116  0063                     _validLatitude:	
  1117  0063                     	ds	3
  1118  0066                     _gpsInvalidFlag:	
  1119  0066                     	ds	1
  1120  0067                     _validEastWest:	
  1121  0067                     	ds	1
  1122  0068                     _validNorthSouth:	
  1123  0068                     	ds	1
  1124                           
  1125                           	psect	bssBANK1
  1126  00DE                     __pbssBANK1:	
  1127  00DE                     _recordEndAdress:	
  1128  00DE                     	ds	4
  1129  00E2                     DecodeGPS@F4935:	
  1130  00E2                     	ds	3
  1131  00E5                     DecodeGPS@F4937:	
  1132  00E5                     	ds	3
  1133                           
  1134                           	psect	dataBANK1
  1135  00E8                     __pdataBANK1:	
  1136  00E8                     SetupGPS@F4926:	
  1137  00E8                     	ds	4
  1138  00EC                     _validLongitude:	
  1139  00EC                     	ds	3
  1140                           
  1141                           	psect	bssBANK2
  1142  0120                     __pbssBANK2:	
  1143  0120                     _gpsMessage:	
  1144  0120                     	ds	50
  1145                           
  1146                           	psect	dataBANK2
  1147  0152                     __pdataBANK2:	
  1148  0152                     DisableGPS@F4921:	
  1149  0152                     	ds	13
  1150  015F                     DecodeGPS@F4933:	
  1151  015F                     	ds	7
  1152  0166                     SetupGPS@F4924:	
  1153  0166                     	ds	6
  1154                           
  1155                           	psect	bssBANK3
  1156  01A0                     __pbssBANK3:	
  1157  01A0                     _buffer:	
  1158  01A0                     	ds	51
  1159                           
  1160                           	psect	dataBANK3
  1161  01D3                     __pdataBANK3:	
  1162  01D3                     UpdateGPS@F4931:	
  1163  01D3                     	ds	22
  1164                           
  1165                           	psect	bssBANK4
  1166  0220                     __pbssBANK4:	
  1167  0220                     _preRecordingAddresses:	
  1168  0220                     	ds	72
  1169                           
  1170                           	psect	clrtext
  1171  0BFC                     clear_ram0:	
  1172                           ;	Called with FSR0 containing the base address, and
  1173                           ;	WREG with the size to clear
  1174                           
  1175  0BFC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1176  0BFD                     clrloop0:	
  1177  0BFD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1178  0BFE  3101               	addfsr 0,1
  1179  0BFF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1180  0C00  2BFD               	goto	clrloop0	;have we reached the end yet?
  1181  0C01  3400               	retlw	0	;all done for this memory range, return
  1182                           
  1183                           	psect	inittext
  1184  0BF6                     init_ram:	
  1185  0BF6  00FE               	movwf	126
  1186  0BF7                     initloop:	
  1187  0BF7  0012               	moviw fsr0++
  1188  0BF8  001E               	movwi fsr1++
  1189  0BF9  0BFE               	decfsz	126,f
  1190  0BFA  2BF7               	goto	initloop
  1191  0BFB  3400               	retlw	0
  1192                           
  1193                           	psect	cstackBANK1
  1194  00A0                     __pcstackBANK1:	
  1195  00A0                     SetupGPS@message:	
  1196                           
  1197                           ; 50 bytes @ 0x0
  1198  00A0                     	ds	50
  1199  00D2                     SetupGPS@startSequence:	
  1200                           
  1201                           ; 6 bytes @ 0x32
  1202  00D2                     	ds	6
  1203  00D8                     SetupGPS@MID:	
  1204                           
  1205                           ; 4 bytes @ 0x38
  1206  00D8                     	ds	4
  1207  00DC                     SetupGPS@x:	
  1208                           
  1209                           ; 2 bytes @ 0x3C
  1210  00DC                     	ds	2
  1211                           
  1212                           	psect	cstackCOMMON
  1213  0070                     __pcstackCOMMON:	
  1214  0070                     ?_InitCLK:	
  1215  0070                     ?_InitGPIO:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0070                     ?_InitADC:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0070                     ?_InitTimer1:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0070                     ?_InitWatchdog:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0070                     ?_InitUART:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0070                     ?_SetupGPS:	
  1231                           ; 0 bytes @ 0x0
  1232                           
  1233  0070                     ?_RecordMode:	
  1234                           ; 0 bytes @ 0x0
  1235                           
  1236  0070                     ?_UpdateGPS:	
  1237                           ; 0 bytes @ 0x0
  1238                           
  1239  0070                     ?_GoToSleep:	
  1240                           ; 0 bytes @ 0x0
  1241                           
  1242  0070                     ?_ToggleSleepGPS:	
  1243                           ; 0 bytes @ 0x0
  1244                           
  1245  0070                     ?_Hibernate:	
  1246                           ; 0 bytes @ 0x0
  1247                           
  1248  0070                     ?_WriteBuffer:	
  1249                           ; 0 bytes @ 0x0
  1250                           
  1251  0070                     ??_WriteBuffer:	
  1252                           ; 0 bytes @ 0x0
  1253                           
  1254  0070                     ?_DecodeGPS:	
  1255                           ; 0 bytes @ 0x0
  1256                           
  1257  0070                     ?_SendGPSSPI:	
  1258                           ; 0 bytes @ 0x0
  1259                           
  1260  0070                     ?_isr:	
  1261                           ; 0 bytes @ 0x0
  1262                           
  1263  0070                     ?_InitSPI:	
  1264                           ; 0 bytes @ 0x0
  1265                           
  1266  0070                     ?_WriteSPI:	
  1267                           ; 0 bytes @ 0x0
  1268                           
  1269  0070                     ?_uart_xmit:	
  1270                           ; 0 bytes @ 0x0
  1271                           
  1272  0070                     ?_CheckDisconnect:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0070                     ?_ReadSPI:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_ReadStatusSPI:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_ReadBuffer:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x0
  1286  0070                     	ds	1
  1287  0071                     WriteBuffer@data:	
  1288                           
  1289                           ; 1 bytes @ 0x1
  1290  0071                     	ds	1
  1291  0072                     ??_isr:	
  1292                           
  1293                           ; 0 bytes @ 0x2
  1294  0072                     	ds	5
  1295  0077                     _isr$536:	
  1296                           
  1297                           ; 2 bytes @ 0x7
  1298  0077                     	ds	2
  1299                           
  1300                           	psect	cstackBANK0
  1301  0020                     __pcstackBANK0:	
  1302  0020                     ??_InitCLK:	
  1303  0020                     ??_InitGPIO:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0020                     ??_InitADC:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0020                     ??_InitTimer1:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0020                     ??_InitWatchdog:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0020                     ??_InitUART:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0020                     ??_GoToSleep:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0020                     ??_ToggleSleepGPS:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0020                     ??_Hibernate:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0020                     ??_InitSPI:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0020                     ??_WriteSPI:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0020                     ??_ReadSPI:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0020                     ??_ReadBuffer:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0020                     ??_uart_xmit:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0020                     ?_compute_checksum:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0020                     ?___bmul:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0020                     ?___wmul:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0020                     ?___lwdiv:	
  1352                           ; 2 bytes @ 0x0
  1353                           
  1354  0020                     uart_xmit@mydata_byte:	
  1355                           ; 2 bytes @ 0x0
  1356                           
  1357  0020                     ___bmul@multiplicand:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0020                     compute_checksum@size:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0020                     ___wmul@multiplier:	
  1364                           ; 2 bytes @ 0x0
  1365                           
  1366  0020                     ___lwdiv@divisor:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x0
  1371  0020                     	ds	1
  1372  0021                     ??___bmul:	
  1373  0021                     ReadSPI@dataByte:	
  1374                           ; 0 bytes @ 0x1
  1375                           
  1376  0021                     ReadBuffer@read_data:	
  1377                           ; 1 bytes @ 0x1
  1378                           
  1379  0021                     GoToSleep@count:	
  1380                           ; 1 bytes @ 0x1
  1381                           
  1382  0021                     Hibernate@count:	
  1383                           ; 1 bytes @ 0x1
  1384                           
  1385                           
  1386                           ; 1 bytes @ 0x1
  1387  0021                     	ds	1
  1388  0022                     ??_compute_checksum:	
  1389  0022                     ___bmul@product:	
  1390                           ; 0 bytes @ 0x2
  1391                           
  1392  0022                     WriteSPI@temp:	
  1393                           ; 1 bytes @ 0x2
  1394                           
  1395  0022                     ___wmul@multiplicand:	
  1396                           ; 2 bytes @ 0x2
  1397                           
  1398  0022                     ___lwdiv@dividend:	
  1399                           ; 2 bytes @ 0x2
  1400                           
  1401                           
  1402                           ; 2 bytes @ 0x2
  1403  0022                     	ds	1
  1404  0023                     ___bmul@multiplier:	
  1405                           
  1406                           ; 1 bytes @ 0x3
  1407  0023                     	ds	1
  1408  0024                     ??___wmul:	
  1409  0024                     ??___lwdiv:	
  1410                           ; 0 bytes @ 0x4
  1411                           
  1412  0024                     WriteSPI@databyte:	
  1413                           ; 0 bytes @ 0x4
  1414                           
  1415  0024                     compute_checksum@checksum:	
  1416                           ; 1 bytes @ 0x4
  1417                           
  1418  0024                     ___wmul@product:	
  1419                           ; 1 bytes @ 0x4
  1420                           
  1421                           
  1422                           ; 2 bytes @ 0x4
  1423  0024                     	ds	1
  1424  0025                     ??_ReadStatusSPI:	
  1425  0025                     compute_checksum@data:	
  1426                           ; 0 bytes @ 0x5
  1427                           
  1428  0025                     ___lwdiv@quotient:	
  1429                           ; 1 bytes @ 0x5
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x5
  1433  0025                     	ds	1
  1434  0026                     ?___awdiv:	
  1435  0026                     ReadStatusSPI@dataRead:	
  1436                           ; 2 bytes @ 0x6
  1437                           
  1438  0026                     compute_checksum@x:	
  1439                           ; 1 bytes @ 0x6
  1440                           
  1441  0026                     ___awdiv@divisor:	
  1442                           ; 2 bytes @ 0x6
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x6
  1446  0026                     	ds	1
  1447  0027                     ??_CheckDisconnect:	
  1448  0027                     ?_WriteOverheadSPI:	
  1449                           ; 0 bytes @ 0x7
  1450                           
  1451  0027                     ___lwdiv@counter:	
  1452                           ; 0 bytes @ 0x7
  1453                           
  1454  0027                     WriteOverheadSPI@address:	
  1455                           ; 1 bytes @ 0x7
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0x7
  1459  0027                     	ds	1
  1460  0028                     ?_uart_write_message:	
  1461  0028                     ?___lwmod:	
  1462                           ; 0 bytes @ 0x8
  1463                           
  1464  0028                     CheckDisconnect@status:	
  1465                           ; 2 bytes @ 0x8
  1466                           
  1467  0028                     uart_write_message@size:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470  0028                     ___awdiv@dividend:	
  1471                           ; 2 bytes @ 0x8
  1472                           
  1473  0028                     ___lwmod@divisor:	
  1474                           ; 2 bytes @ 0x8
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0x8
  1478  0028                     	ds	2
  1479  002A                     ??_uart_write_message:	
  1480  002A                     ??___awdiv:	
  1481                           ; 0 bytes @ 0xA
  1482                           
  1483  002A                     ___lwmod@dividend:	
  1484                           ; 0 bytes @ 0xA
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0xA
  1488  002A                     	ds	1
  1489  002B                     ??_WriteOverheadSPI:	
  1490  002B                     ___awdiv@counter:	
  1491                           ; 0 bytes @ 0xB
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0xB
  1495  002B                     	ds	1
  1496  002C                     ??___lwmod:	
  1497  002C                     ___awdiv@sign:	
  1498                           ; 0 bytes @ 0xC
  1499                           
  1500                           
  1501                           ; 1 bytes @ 0xC
  1502  002C                     	ds	1
  1503  002D                     ___lwmod@counter:	
  1504  002D                     _uart_write_message$1401:	
  1505                           ; 1 bytes @ 0xD
  1506                           
  1507  002D                     ___awdiv@quotient:	
  1508                           ; 2 bytes @ 0xD
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0xD
  1512  002D                     	ds	1
  1513  002E                     ?_sprintf:	
  1514  002E                     sprintf@f:	
  1515                           ; 2 bytes @ 0xE
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0xE
  1519  002E                     	ds	1
  1520  002F                     ??_DecodeGPS:	
  1521  002F                     _uart_write_message$1402:	
  1522                           ; 0 bytes @ 0xF
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0xF
  1526  002F                     	ds	2
  1527  0031                     uart_write_message@x:	
  1528  0031                     WriteOverheadSPI@address_bytes:	
  1529                           ; 2 bytes @ 0x11
  1530                           
  1531                           
  1532                           ; 3 bytes @ 0x11
  1533  0031                     	ds	1
  1534  0032                     DecodeGPS@messageID:	
  1535                           
  1536                           ; 7 bytes @ 0x12
  1537  0032                     	ds	1
  1538  0033                     uart_write_message@checksum:	
  1539                           
  1540                           ; 1 bytes @ 0x13
  1541  0033                     	ds	1
  1542  0034                     ??_sprintf:	
  1543  0034                     WriteOverheadSPI@StatusReg:	
  1544                           ; 0 bytes @ 0x14
  1545                           
  1546  0034                     uart_write_message@data:	
  1547                           ; 1 bytes @ 0x14
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x14
  1551  0034                     	ds	1
  1552  0035                     ??_SendGPSSPI:	
  1553  0035                     uart_write_message@ascii_checksum:	
  1554                           ; 0 bytes @ 0x15
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0x15
  1558  0035                     	ds	1
  1559  0036                     SendGPSSPI@address:	
  1560                           
  1561                           ; 4 bytes @ 0x16
  1562  0036                     	ds	2
  1563  0038                     sprintf@flag:	
  1564                           
  1565                           ; 1 bytes @ 0x18
  1566  0038                     	ds	1
  1567  0039                     DecodeGPS@northSouth:	
  1568  0039                     sprintf@prec:	
  1569                           ; 1 bytes @ 0x19
  1570                           
  1571                           
  1572                           ; 1 bytes @ 0x19
  1573  0039                     	ds	1
  1574  003A                     DecodeGPS@eastWest:	
  1575  003A                     sprintf@ap:	
  1576                           ; 1 bytes @ 0x1A
  1577                           
  1578  003A                     SendGPSSPI@x:	
  1579                           ; 1 bytes @ 0x1A
  1580                           
  1581                           
  1582                           ; 2 bytes @ 0x1A
  1583  003A                     	ds	1
  1584  003B                     DecodeGPS@status:	
  1585  003B                     sprintf@sp:	
  1586                           ; 1 bytes @ 0x1B
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x1B
  1590  003B                     	ds	1
  1591  003C                     ??_RecordMode:	
  1592  003C                     DecodeGPS@latitude:	
  1593                           ; 0 bytes @ 0x1C
  1594                           
  1595  003C                     sprintf@_val:	
  1596                           ; 3 bytes @ 0x1C
  1597                           
  1598                           
  1599                           ; 4 bytes @ 0x1C
  1600  003C                     	ds	3
  1601  003F                     DecodeGPS@longitude:	
  1602                           
  1603                           ; 3 bytes @ 0x1F
  1604  003F                     	ds	1
  1605  0040                     sprintf@c:	
  1606                           
  1607                           ; 1 bytes @ 0x20
  1608  0040                     	ds	1
  1609  0041                     ??_SetupGPS:	
  1610  0041                     RecordMode@count:	
  1611                           ; 0 bytes @ 0x21
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x21
  1615  0041                     	ds	1
  1616  0042                     DecodeGPS@x:	
  1617                           
  1618                           ; 2 bytes @ 0x22
  1619  0042                     	ds	1
  1620  0043                     RecordMode@address:	
  1621                           
  1622                           ; 4 bytes @ 0x23
  1623  0043                     	ds	1
  1624  0044                     ??_UpdateGPS:	
  1625                           
  1626                           ; 0 bytes @ 0x24
  1627  0044                     	ds	1
  1628  0045                     UpdateGPS@GPSupdateMessage:	
  1629                           
  1630                           ; 22 bytes @ 0x25
  1631  0045                     	ds	22
  1632  005B                     ?_main:	
  1633  005B                     main@argc:	
  1634                           ; 2 bytes @ 0x3B
  1635                           
  1636                           
  1637                           ; 2 bytes @ 0x3B
  1638  005B                     	ds	2
  1639  005D                     main@argv:	
  1640                           
  1641                           ; 2 bytes @ 0x3D
  1642  005D                     	ds	2
  1643  005F                     ??_main:	
  1644                           
  1645                           ; 0 bytes @ 0x3F
  1646  005F                     	ds	3
  1647  0062                     main@periodicCounter:	
  1648                           
  1649                           ; 1 bytes @ 0x42
  1650  0062                     	ds	1
  1651                           
  1652                           	psect	maintext
  1653  062B                     __pmaintext:	
  1654 ;;
  1655 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1656 ;;
  1657 ;; *************** function _main *****************
  1658 ;; Defined at:
  1659 ;;		line 20 in file "launcher_main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  argc            2   59[BANK0 ] int 
  1662 ;;  argv            2   61[BANK0 ] PTR PTR unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  periodicCoun    1   66[BANK0 ] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2   59[BANK0 ] int 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 17F/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1674 ;;      Params:         0       4       0       0       0       0       0       0
  1675 ;;      Locals:         0       1       0       0       0       0       0       0
  1676 ;;      Temps:          0       3       0       0       0       0       0       0
  1677 ;;      Totals:         0       8       0       0       0       0       0       0
  1678 ;;Total ram usage:        8 bytes
  1679 ;; Hardware stack levels required when called:    7
  1680 ;; This function calls:
  1681 ;;		_GoToSleep
  1682 ;;		_Hibernate
  1683 ;;		_InitADC
  1684 ;;		_InitCLK
  1685 ;;		_InitGPIO
  1686 ;;		_InitTimer1
  1687 ;;		_InitUART
  1688 ;;		_InitWatchdog
  1689 ;;		_RecordMode
  1690 ;;		_SetupGPS
  1691 ;;		_ToggleSleepGPS
  1692 ;;		_UpdateGPS
  1693 ;; This function is called by:
  1694 ;;		Startup code after reset
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _main
  1700  062B                     _main:	
  1701                           
  1702                           ;launcher_main.c: 23: InitCLK();
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1706  062B  318C  2416  3186   	fcall	_InitCLK
  1707                           
  1708                           ;launcher_main.c: 24: InitGPIO();
  1709  062E  318D  255E  3186   	fcall	_InitGPIO
  1710                           
  1711                           ;launcher_main.c: 25: InitADC();
  1712  0631  318D  250D  3186   	fcall	_InitADC
  1713                           
  1714                           ;launcher_main.c: 28: InitTimer1();
  1715  0634  318C  2428  3186   	fcall	_InitTimer1
  1716                           
  1717                           ;launcher_main.c: 29: InitWatchdog();
  1718  0637  318C  2408  3186   	fcall	_InitWatchdog
  1719                           
  1720                           ;launcher_main.c: 30: InitUART();
  1721  063A  318C  2437  3186   	fcall	_InitUART
  1722                           
  1723                           ;launcher_main.c: 32: unsigned char periodicCounter = 10;
  1724  063D  300A               	movlw	10
  1725  063E  0020               	movlb	0	; select bank0
  1726  063F  00DF               	movwf	??_main
  1727  0640  085F               	movf	??_main,w
  1728  0641  00E2               	movwf	main@periodicCounter
  1729                           
  1730                           ;launcher_main.c: 33: gpsIndex = 0;
  1731  0642  01FD               	clrf	_gpsIndex	;volatile
  1732                           
  1733                           ;launcher_main.c: 35: INTCONbits.GIE = 1;
  1734  0643  178B               	bsf	11,7	;volatile
  1735                           
  1736                           ;launcher_main.c: 39: SetupGPS();
  1737  0644  3187  271F  3186   	fcall	_SetupGPS
  1738                           
  1739                           ;launcher_main.c: 42: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1740  0647  0022               	movlb	2	; select bank2
  1741  0648  080D               	movf	13,w	;volatile
  1742  0649  39FF               	andlw	255
  1743  064A  39DF               	andlw	223
  1744  064B  0020               	movlb	0	; select bank0
  1745  064C  00DF               	movwf	??_main
  1746  064D  080D               	movf	13,w	;volatile
  1747  064E  065F               	xorwf	??_main,w
  1748  064F  3900               	andlw	-256
  1749  0650  065F               	xorwf	??_main,w
  1750  0651  008D               	movwf	13	;volatile
  1751                           
  1752                           ;launcher_main.c: 43: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1753  0652  0022               	movlb	2	; select bank2
  1754  0653  080D               	movf	13,w	;volatile
  1755  0654  39FF               	andlw	255
  1756  0655  3810               	iorlw	16
  1757  0656  0020               	movlb	0	; select bank0
  1758  0657  00DF               	movwf	??_main
  1759  0658  080D               	movf	13,w	;volatile
  1760  0659  065F               	xorwf	??_main,w
  1761  065A  3900               	andlw	-256
  1762  065B  065F               	xorwf	??_main,w
  1763  065C  008D               	movwf	13	;volatile
  1764                           
  1765                           ;launcher_main.c: 44: _delay((unsigned long)((100)*(16000000/4000.0)));
  1766  065D  3003               	movlw	3
  1767  065E  00E1               	movwf	??_main+2
  1768  065F  3008               	movlw	8
  1769  0660  00E0               	movwf	??_main+1
  1770  0661  3078               	movlw	120
  1771  0662  00DF               	movwf	??_main
  1772  0663                     u2797:	
  1773  0663  0BDF               	decfsz	??_main,f
  1774  0664  2E63               	goto	u2797
  1775  0665  0BE0               	decfsz	??_main+1,f
  1776  0666  2E63               	goto	u2797
  1777  0667  0BE1               	decfsz	??_main+2,f
  1778  0668  2E63               	goto	u2797
  1779                           
  1780                           ;launcher_main.c: 45: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1781  0669  0022               	movlb	2	; select bank2
  1782  066A  080D               	movf	13,w	;volatile
  1783  066B  39FF               	andlw	255
  1784  066C  39EF               	andlw	239
  1785  066D  0020               	movlb	0	; select bank0
  1786  066E  00DF               	movwf	??_main
  1787  066F  080D               	movf	13,w	;volatile
  1788  0670  065F               	xorwf	??_main,w
  1789  0671  3900               	andlw	-256
  1790  0672  065F               	xorwf	??_main,w
  1791  0673  008D               	movwf	13	;volatile
  1792                           
  1793                           ;launcher_main.c: 48: LATC2 = (1);
  1794  0674  0022               	movlb	2	; select bank2
  1795  0675  150E               	bsf	14,2	;volatile
  1796  0676                     l2841:	
  1797                           ;launcher_main.c: 50: while(1){
  1798                           
  1799                           
  1800                           ;launcher_main.c: 60: LATC2 = (1);
  1801  0676  0022               	movlb	2	; select bank2
  1802  0677  150E               	bsf	14,2	;volatile
  1803                           
  1804                           ;launcher_main.c: 63: if(PORTAbits.RA1)
  1805  0678  0020               	movlb	0	; select bank0
  1806  0679  1C8C               	btfss	12,1	;volatile
  1807  067A  2E8A               	goto	l110
  1808                           
  1809                           ;launcher_main.c: 64: {
  1810                           ;launcher_main.c: 66: PORTBbits.RB0 = 1;
  1811  067B  140D               	bsf	13,0	;volatile
  1812                           
  1813                           ;launcher_main.c: 67: _delay((unsigned long)((100)*(16000000/4000.0)));
  1814  067C  3003               	movlw	3
  1815  067D  00E1               	movwf	??_main+2
  1816  067E  3008               	movlw	8
  1817  067F  00E0               	movwf	??_main+1
  1818  0680  3078               	movlw	120
  1819  0681  00DF               	movwf	??_main
  1820  0682                     u2807:	
  1821  0682  0BDF               	decfsz	??_main,f
  1822  0683  2E82               	goto	u2807
  1823  0684  0BE0               	decfsz	??_main+1,f
  1824  0685  2E82               	goto	u2807
  1825  0686  0BE1               	decfsz	??_main+2,f
  1826  0687  2E82               	goto	u2807
  1827                           
  1828                           ;launcher_main.c: 68: PORTBbits.RB0 = 0;
  1829  0688  0020               	movlb	0	; select bank0
  1830  0689  100D               	bcf	13,0	;volatile
  1831  068A                     l110:	
  1832                           
  1833                           ;launcher_main.c: 69: }
  1834                           ;launcher_main.c: 71: if(recordFlag)
  1835  068A  086C               	movf	_recordFlag,w
  1836  068B  1903               	btfsc	3,2
  1837  068C  2E92               	goto	l2855
  1838                           
  1839                           ;launcher_main.c: 72: {
  1840                           ;launcher_main.c: 73: RecordMode();
  1841  068D  3183  239C  3186   	fcall	_RecordMode
  1842                           
  1843                           ;launcher_main.c: 74: recordFlag = 0;
  1844  0690  0020               	movlb	0	; select bank0
  1845  0691  01EC               	clrf	_recordFlag
  1846  0692                     l2855:	
  1847                           
  1848                           ;launcher_main.c: 75: }
  1849                           ;launcher_main.c: 78: UpdateGPS();
  1850  0692  3187  27AE  3186   	fcall	_UpdateGPS
  1851                           
  1852                           ;launcher_main.c: 80: if(gpsInvalidFlag)
  1853  0695  0020               	movlb	0	; select bank0
  1854  0696  0866               	movf	_gpsInvalidFlag,w
  1855  0697  1903               	btfsc	3,2
  1856  0698  2ED0               	goto	l2867
  1857                           
  1858                           ;launcher_main.c: 81: {
  1859                           ;launcher_main.c: 82: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1860  0699  0022               	movlb	2	; select bank2
  1861  069A  080D               	movf	13,w	;volatile
  1862  069B  39FF               	andlw	255
  1863  069C  3820               	iorlw	32
  1864  069D  0020               	movlb	0	; select bank0
  1865  069E  00DF               	movwf	??_main
  1866  069F  080D               	movf	13,w	;volatile
  1867  06A0  065F               	xorwf	??_main,w
  1868  06A1  3900               	andlw	-256
  1869  06A2  065F               	xorwf	??_main,w
  1870  06A3  008D               	movwf	13	;volatile
  1871                           
  1872                           ;launcher_main.c: 83: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1873  06A4  0022               	movlb	2	; select bank2
  1874  06A5  080D               	movf	13,w	;volatile
  1875  06A6  39FF               	andlw	255
  1876  06A7  39EF               	andlw	239
  1877  06A8  0020               	movlb	0	; select bank0
  1878  06A9  00DF               	movwf	??_main
  1879  06AA  080D               	movf	13,w	;volatile
  1880  06AB  065F               	xorwf	??_main,w
  1881  06AC  3900               	andlw	-256
  1882  06AD  065F               	xorwf	??_main,w
  1883  06AE  008D               	movwf	13	;volatile
  1884                           
  1885                           ;launcher_main.c: 84: _delay((unsigned long)((250)*(16000000/4000.0)));
  1886  06AF  3006               	movlw	6
  1887  06B0  00E1               	movwf	??_main+2
  1888  06B1  3013               	movlw	19
  1889  06B2  00E0               	movwf	??_main+1
  1890  06B3  30B1               	movlw	177
  1891  06B4  00DF               	movwf	??_main
  1892  06B5                     u2817:	
  1893  06B5  0BDF               	decfsz	??_main,f
  1894  06B6  2EB5               	goto	u2817
  1895  06B7  0BE0               	decfsz	??_main+1,f
  1896  06B8  2EB5               	goto	u2817
  1897  06B9  0BE1               	decfsz	??_main+2,f
  1898  06BA  2EB5               	goto	u2817
  1899  06BB  3200               	nop2
  1900                           
  1901                           ;launcher_main.c: 85: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1902  06BC  0022               	movlb	2	; select bank2
  1903  06BD  080D               	movf	13,w	;volatile
  1904  06BE  39FF               	andlw	255
  1905  06BF  39DF               	andlw	223
  1906  06C0  0020               	movlb	0	; select bank0
  1907  06C1  00DF               	movwf	??_main
  1908  06C2  080D               	movf	13,w	;volatile
  1909  06C3  065F               	xorwf	??_main,w
  1910  06C4  3900               	andlw	-256
  1911  06C5  065F               	xorwf	??_main,w
  1912  06C6  008D               	movwf	13	;volatile
  1913                           
  1914                           ;launcher_main.c: 86: if(periodicCounter < 14)
  1915  06C7  300E               	movlw	14
  1916  06C8  0262               	subwf	main@periodicCounter,w
  1917  06C9  1803               	skipnc
  1918  06CA  2F02               	goto	l2873
  1919                           
  1920                           ;launcher_main.c: 87: periodicCounter++;
  1921  06CB  3001               	movlw	1
  1922  06CC  00DF               	movwf	??_main
  1923  06CD  085F               	movf	??_main,w
  1924  06CE  07E2               	addwf	main@periodicCounter,f
  1925                           
  1926                           ;launcher_main.c: 88: }
  1927  06CF  2F02               	goto	l2873
  1928  06D0                     l2867:	
  1929                           
  1930                           ;launcher_main.c: 89: else
  1931                           ;launcher_main.c: 90: {
  1932                           ;launcher_main.c: 91: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1933  06D0  0022               	movlb	2	; select bank2
  1934  06D1  080D               	movf	13,w	;volatile
  1935  06D2  39FF               	andlw	255
  1936  06D3  3810               	iorlw	16
  1937  06D4  0020               	movlb	0	; select bank0
  1938  06D5  00DF               	movwf	??_main
  1939  06D6  080D               	movf	13,w	;volatile
  1940  06D7  065F               	xorwf	??_main,w
  1941  06D8  3900               	andlw	-256
  1942  06D9  065F               	xorwf	??_main,w
  1943  06DA  008D               	movwf	13	;volatile
  1944                           
  1945                           ;launcher_main.c: 92: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1946  06DB  0022               	movlb	2	; select bank2
  1947  06DC  080D               	movf	13,w	;volatile
  1948  06DD  39FF               	andlw	255
  1949  06DE  39DF               	andlw	223
  1950  06DF  0020               	movlb	0	; select bank0
  1951  06E0  00DF               	movwf	??_main
  1952  06E1  080D               	movf	13,w	;volatile
  1953  06E2  065F               	xorwf	??_main,w
  1954  06E3  3900               	andlw	-256
  1955  06E4  065F               	xorwf	??_main,w
  1956  06E5  008D               	movwf	13	;volatile
  1957                           
  1958                           ;launcher_main.c: 93: _delay((unsigned long)((250)*(16000000/4000.0)));
  1959  06E6  3006               	movlw	6
  1960  06E7  00E1               	movwf	??_main+2
  1961  06E8  3013               	movlw	19
  1962  06E9  00E0               	movwf	??_main+1
  1963  06EA  30B1               	movlw	177
  1964  06EB  00DF               	movwf	??_main
  1965  06EC                     u2827:	
  1966  06EC  0BDF               	decfsz	??_main,f
  1967  06ED  2EEC               	goto	u2827
  1968  06EE  0BE0               	decfsz	??_main+1,f
  1969  06EF  2EEC               	goto	u2827
  1970  06F0  0BE1               	decfsz	??_main+2,f
  1971  06F1  2EEC               	goto	u2827
  1972  06F2  3200               	nop2
  1973                           
  1974                           ;launcher_main.c: 94: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1975  06F3  0022               	movlb	2	; select bank2
  1976  06F4  080D               	movf	13,w	;volatile
  1977  06F5  39FF               	andlw	255
  1978  06F6  39EF               	andlw	239
  1979  06F7  0020               	movlb	0	; select bank0
  1980  06F8  00DF               	movwf	??_main
  1981  06F9  080D               	movf	13,w	;volatile
  1982  06FA  065F               	xorwf	??_main,w
  1983  06FB  3900               	andlw	-256
  1984  06FC  065F               	xorwf	??_main,w
  1985  06FD  008D               	movwf	13	;volatile
  1986                           
  1987                           ;launcher_main.c: 95: periodicCounter = 10;
  1988  06FE  300A               	movlw	10
  1989  06FF  00DF               	movwf	??_main
  1990  0700  085F               	movf	??_main,w
  1991  0701  00E2               	movwf	main@periodicCounter
  1992  0702                     l2873:	
  1993                           
  1994                           ;launcher_main.c: 96: }
  1995                           ;launcher_main.c: 98: if(!recordFlag)
  1996  0702  08EC               	movf	_recordFlag,f
  1997  0703  1D03               	skipz
  1998  0704  2E76               	goto	l2841
  1999                           
  2000                           ;launcher_main.c: 99: {
  2001                           ;launcher_main.c: 100: if(PORTAbits.RA1)
  2002  0705  1C8C               	btfss	12,1	;volatile
  2003  0706  2F0C               	goto	l2879
  2004                           
  2005                           ;launcher_main.c: 101: GoToSleep(10);
  2006  0707  300A               	movlw	10
  2007  0708  318C  2466  3186   	fcall	_GoToSleep
  2008  070B  2E76               	goto	l2841
  2009  070C                     l2879:	
  2010                           
  2011                           ;launcher_main.c: 102: else if(gpsInvalidFlag)
  2012  070C  0020               	movlb	0	; select bank0
  2013  070D  0866               	movf	_gpsInvalidFlag,w
  2014  070E  1903               	btfsc	3,2
  2015  070F  2F15               	goto	l2883
  2016                           
  2017                           ;launcher_main.c: 103: GoToSleep(periodicCounter);
  2018  0710  0862               	movf	main@periodicCounter,w
  2019  0711  318C  2466  3186   	fcall	_GoToSleep
  2020  0714  2E76               	goto	l2841
  2021  0715                     l2883:	
  2022                           
  2023                           ;launcher_main.c: 104: else
  2024                           ;launcher_main.c: 105: {
  2025                           ;launcher_main.c: 106: ToggleSleepGPS();
  2026  0715  318D  258B  3186   	fcall	_ToggleSleepGPS
  2027                           
  2028                           ;launcher_main.c: 107: Hibernate();
  2029  0718  318C  24F4  3186   	fcall	_Hibernate
  2030                           
  2031                           ;launcher_main.c: 108: ToggleSleepGPS();
  2032  071B  318D  258B  3186   	fcall	_ToggleSleepGPS
  2033  071E  2E76               	goto	l2841
  2034  071F                     __end_of_main:	
  2035                           ;launcher_main.c: 109: }
  2036                           ;launcher_main.c: 110: }
  2037                           ;launcher_main.c: 113: }
  2038                           ;launcher_main.c: 115: return (0);
  2039                           ;	Return value of _main is never used
  2040                           
  2041                           
  2042                           	psect	text1
  2043  07AE                     __ptext1:	
  2044 ;; *************** function _UpdateGPS *****************
  2045 ;; Defined at:
  2046 ;;		line 374 in file "launcher_functions.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  GPSupdateMes   22   37[BANK0 ] unsigned char [22]
  2051 ;; Return value:  Size  Location     Type
  2052 ;;		None               void
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2060 ;;      Params:         0       0       0       0       0       0       0       0
  2061 ;;      Locals:         0      22       0       0       0       0       0       0
  2062 ;;      Temps:          0       1       0       0       0       0       0       0
  2063 ;;      Totals:         0      23       0       0       0       0       0       0
  2064 ;;Total ram usage:       23 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    4
  2067 ;; This function calls:
  2068 ;;		_DecodeGPS
  2069 ;;		_uart_write_message
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _UpdateGPS
  2077  07AE                     _UpdateGPS:	
  2078                           
  2079                           ;launcher_functions.c: 377: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,01,00*"
      +                          ;
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2083  07AE  30D3               	movlw	low UpdateGPS@F4931
  2084  07AF  0086               	movwf	6
  2085  07B0  3001               	movlw	high UpdateGPS@F4931
  2086  07B1  0087               	movwf	7
  2087  07B2  3045               	movlw	low UpdateGPS@GPSupdateMessage
  2088  07B3  0084               	movwf	4
  2089  07B4  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2090  07B5  0085               	movwf	5
  2091  07B6  3016               	movlw	22
  2092  07B7  0020               	movlb	0	; select bank0
  2093  07B8  00C4               	movwf	??_UpdateGPS
  2094  07B9                     u2310:	
  2095  07B9  0016               	moviw fsr1++
  2096  07BA  001A               	movwi fsr0++
  2097  07BB  0BC4               	decfsz	??_UpdateGPS,f
  2098  07BC  2FB9               	goto	u2310
  2099                           
  2100                           ;launcher_functions.c: 380: RCIE = 1;
  2101  07BD  0021               	movlb	1	; select bank1
  2102  07BE  1691               	bsf	17,5	;volatile
  2103                           
  2104                           ;launcher_functions.c: 381: PEIE = 1;
  2105  07BF  170B               	bsf	11,6	;volatile
  2106                           
  2107                           ;launcher_functions.c: 382: GIE = 1;
  2108  07C0  178B               	bsf	11,7	;volatile
  2109                           
  2110                           ;launcher_functions.c: 387: gpsIndex = 0;
  2111  07C1  01FD               	clrf	_gpsIndex	;volatile
  2112                           
  2113                           ;launcher_functions.c: 388: uart_write_message(GPSupdateMessage, 22);
  2114  07C2  3016               	movlw	22
  2115  07C3  0020               	movlb	0	; select bank0
  2116  07C4  00A8               	movwf	uart_write_message@size
  2117  07C5  3000               	movlw	0
  2118  07C6  00A9               	movwf	uart_write_message@size+1
  2119  07C7  3045               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2120  07C8  318F  278A  3187   	fcall	_uart_write_message
  2121                           
  2122                           ;launcher_functions.c: 389: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  2123  07CB  0022               	movlb	2	; select bank2
  2124  07CC  080D               	movf	13,w	;volatile
  2125  07CD  39FF               	andlw	255
  2126  07CE  3820               	iorlw	32
  2127  07CF  0020               	movlb	0	; select bank0
  2128  07D0  00C4               	movwf	??_UpdateGPS
  2129  07D1  080D               	movf	13,w	;volatile
  2130  07D2  0644               	xorwf	??_UpdateGPS,w
  2131  07D3  3900               	andlw	-256
  2132  07D4  0644               	xorwf	??_UpdateGPS,w
  2133  07D5  008D               	movwf	13	;volatile
  2134                           
  2135                           ;launcher_functions.c: 390: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  2136  07D6  0022               	movlb	2	; select bank2
  2137  07D7  080D               	movf	13,w	;volatile
  2138  07D8  39FF               	andlw	255
  2139  07D9  39EF               	andlw	239
  2140  07DA  0020               	movlb	0	; select bank0
  2141  07DB  00C4               	movwf	??_UpdateGPS
  2142  07DC  080D               	movf	13,w	;volatile
  2143  07DD  0644               	xorwf	??_UpdateGPS,w
  2144  07DE  3900               	andlw	-256
  2145  07DF  0644               	xorwf	??_UpdateGPS,w
  2146  07E0  008D               	movwf	13	;volatile
  2147  07E1                     l2773:	
  2148                           ;launcher_functions.c: 391: do
  2149                           
  2150                           
  2151                           ;launcher_functions.c: 392: {
  2152                           ;launcher_functions.c: 412: }while(!messageDoneFlag);
  2153  07E1  086B               	movf	_messageDoneFlag,w
  2154  07E2  1903               	btfsc	3,2
  2155  07E3  2FE1               	goto	l2773
  2156                           
  2157                           ;launcher_functions.c: 413: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  2158  07E4  0022               	movlb	2	; select bank2
  2159  07E5  080D               	movf	13,w	;volatile
  2160  07E6  39FF               	andlw	255
  2161  07E7  39DF               	andlw	223
  2162  07E8  0020               	movlb	0	; select bank0
  2163  07E9  00C4               	movwf	??_UpdateGPS
  2164  07EA  080D               	movf	13,w	;volatile
  2165  07EB  0644               	xorwf	??_UpdateGPS,w
  2166  07EC  3900               	andlw	-256
  2167  07ED  0644               	xorwf	??_UpdateGPS,w
  2168  07EE  008D               	movwf	13	;volatile
  2169                           
  2170                           ;launcher_functions.c: 414: messageDoneFlag = 0;
  2171  07EF  01EB               	clrf	_messageDoneFlag
  2172                           
  2173                           ;launcher_functions.c: 415: DecodeGPS();
  2174  07F0  3181  213E         	fcall	_DecodeGPS
  2175  07F2  0008               	return
  2176  07F3                     __end_of_UpdateGPS:	
  2177                           
  2178                           	psect	text2
  2179  013E                     __ptext2:	
  2180 ;; *************** function _DecodeGPS *****************
  2181 ;; Defined at:
  2182 ;;		line 421 in file "launcher_functions.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  messageID       7   18[BANK0 ] unsigned char [7]
  2187 ;;  longitude       3   31[BANK0 ] unsigned char [3]
  2188 ;;  latitude        3   28[BANK0 ] unsigned char [3]
  2189 ;;  x               2   34[BANK0 ] int 
  2190 ;;  status          1   27[BANK0 ] unsigned char 
  2191 ;;  eastWest        1   26[BANK0 ] unsigned char 
  2192 ;;  northSouth      1   25[BANK0 ] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2202 ;;      Params:         0       0       0       0       0       0       0       0
  2203 ;;      Locals:         0      18       0       0       0       0       0       0
  2204 ;;      Temps:          0       3       0       0       0       0       0       0
  2205 ;;      Totals:         0      21       0       0       0       0       0       0
  2206 ;;Total ram usage:       21 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    3
  2209 ;; This function calls:
  2210 ;;		___awdiv
  2211 ;;		___bmul
  2212 ;;		___wmul
  2213 ;; This function is called by:
  2214 ;;		_UpdateGPS
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _DecodeGPS
  2220  013E                     _DecodeGPS:	
  2221                           
  2222                           ;launcher_functions.c: 424: unsigned char messageID[7] = "$GPGLL";
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2226  013E  305F               	movlw	low DecodeGPS@F4933
  2227  013F  0086               	movwf	6
  2228  0140  3001               	movlw	high DecodeGPS@F4933
  2229  0141  0087               	movwf	7
  2230  0142  3032               	movlw	low DecodeGPS@messageID
  2231  0143  0084               	movwf	4
  2232  0144  3000               	movlw	high DecodeGPS@messageID
  2233  0145  0085               	movwf	5
  2234  0146  3007               	movlw	7
  2235  0147  0020               	movlb	0	; select bank0
  2236  0148  00AF               	movwf	??_DecodeGPS
  2237  0149                     u1960:	
  2238  0149  0016               	moviw fsr1++
  2239  014A  001A               	movwi fsr0++
  2240  014B  0BAF               	decfsz	??_DecodeGPS,f
  2241  014C  2949               	goto	u1960
  2242                           
  2243                           ;launcher_functions.c: 425: unsigned char latitude[3] = {0,0,0};
  2244  014D  0021               	movlb	1	; select bank1
  2245  014E  0862               	movf	DecodeGPS@F4935^(0+128),w
  2246  014F  0020               	movlb	0	; select bank0
  2247  0150  00BC               	movwf	DecodeGPS@latitude
  2248  0151  0021               	movlb	1	; select bank1
  2249  0152  0863               	movf	(DecodeGPS@F4935+1)^(0+128),w
  2250  0153  0020               	movlb	0	; select bank0
  2251  0154  00BD               	movwf	DecodeGPS@latitude+1
  2252  0155  0021               	movlb	1	; select bank1
  2253  0156  0864               	movf	(DecodeGPS@F4935+2)^(0+128),w
  2254  0157  0020               	movlb	0	; select bank0
  2255  0158  00BE               	movwf	DecodeGPS@latitude+2
  2256                           
  2257                           ;launcher_functions.c: 426: unsigned char longitude[3] = {0,0,0};
  2258  0159  0021               	movlb	1	; select bank1
  2259  015A  0865               	movf	DecodeGPS@F4937^(0+128),w
  2260  015B  0020               	movlb	0	; select bank0
  2261  015C  00BF               	movwf	DecodeGPS@longitude
  2262  015D  0021               	movlb	1	; select bank1
  2263  015E  0866               	movf	(DecodeGPS@F4937+1)^(0+128),w
  2264  015F  0020               	movlb	0	; select bank0
  2265  0160  00C0               	movwf	DecodeGPS@longitude+1
  2266  0161  0021               	movlb	1	; select bank1
  2267  0162  0867               	movf	(DecodeGPS@F4937+2)^(0+128),w
  2268  0163  0020               	movlb	0	; select bank0
  2269  0164  00C1               	movwf	DecodeGPS@longitude+2
  2270                           
  2271                           ;launcher_functions.c: 427: unsigned char northSouth;
  2272                           ;launcher_functions.c: 428: unsigned char eastWest;
  2273                           ;launcher_functions.c: 429: unsigned char status;
  2274                           ;launcher_functions.c: 430: int x;
  2275                           ;launcher_functions.c: 432: for(x=0;x<6;x++)
  2276  0165  01C2               	clrf	DecodeGPS@x
  2277  0166  01C3               	clrf	DecodeGPS@x+1
  2278  0167  0843               	movf	DecodeGPS@x+1,w
  2279  0168  3A80               	xorlw	128
  2280  0169  00AF               	movwf	??_DecodeGPS
  2281  016A  3080               	movlw	128
  2282  016B  022F               	subwf	??_DecodeGPS,w
  2283  016C  1D03               	skipz
  2284  016D  2970               	goto	u1975
  2285  016E  3006               	movlw	6
  2286  016F  0242               	subwf	DecodeGPS@x,w
  2287  0170                     u1975:	
  2288  0170  1803               	btfsc	3,0
  2289  0171  2992               	goto	l2345
  2290  0172                     l2339:	
  2291                           
  2292                           ;launcher_functions.c: 433: {
  2293                           ;launcher_functions.c: 434: if(gpsMessage[x] != messageID[x])
  2294  0172  0020               	movlb	0	; select bank0
  2295  0173  0842               	movf	DecodeGPS@x,w
  2296  0174  3E32               	addlw	DecodeGPS@messageID& (0+255)
  2297  0175  0086               	movwf	6
  2298  0176  0187               	clrf	7
  2299  0177  0842               	movf	DecodeGPS@x,w
  2300  0178  3E20               	addlw	_gpsMessage& (0+255)
  2301  0179  0084               	movwf	4
  2302  017A  3001               	movlw	1	; select bank2/3
  2303  017B  0085               	movwf	5
  2304  017C  0800               	movf	0,w
  2305  017D  0601               	xorwf	1,w
  2306  017E  1903               	skipnz
  2307  017F  2983               	goto	l2343
  2308                           
  2309                           ;launcher_functions.c: 435: {
  2310                           ;launcher_functions.c: 436: gpsInvalidFlag = 1;
  2311  0180  01E6               	clrf	_gpsInvalidFlag
  2312  0181  0AE6               	incf	_gpsInvalidFlag,f
  2313                           
  2314                           ;launcher_functions.c: 437: return;
  2315  0182  0008               	return
  2316  0183                     l2343:	
  2317  0183  3001               	movlw	1
  2318  0184  07C2               	addwf	DecodeGPS@x,f
  2319  0185  3000               	movlw	0
  2320  0186  3DC3               	addwfc	DecodeGPS@x+1,f
  2321  0187  0843               	movf	DecodeGPS@x+1,w
  2322  0188  3A80               	xorlw	128
  2323  0189  00AF               	movwf	??_DecodeGPS
  2324  018A  3080               	movlw	128
  2325  018B  022F               	subwf	??_DecodeGPS,w
  2326  018C  1D03               	skipz
  2327  018D  2990               	goto	u1995
  2328  018E  3006               	movlw	6
  2329  018F  0242               	subwf	DecodeGPS@x,w
  2330  0190                     u1995:	
  2331  0190  1C03               	skipc
  2332  0191  2972               	goto	l2339
  2333  0192                     l2345:	
  2334                           
  2335                           ;launcher_functions.c: 438: }
  2336                           ;launcher_functions.c: 439: }
  2337                           ;launcher_functions.c: 442: x = x + 1;
  2338  0192  0020               	movlb	0	; select bank0
  2339  0193  0842               	movf	DecodeGPS@x,w
  2340  0194  3E01               	addlw	1
  2341  0195  00C2               	movwf	DecodeGPS@x
  2342  0196  3000               	movlw	0
  2343  0197  3D43               	addwfc	DecodeGPS@x+1,w
  2344  0198  00C3               	movwf	DecodeGPS@x+1
  2345                           
  2346                           ;launcher_functions.c: 445: if(gpsMessage[x]!= ',')
  2347  0199  0842               	movf	DecodeGPS@x,w
  2348  019A  3E20               	addlw	_gpsMessage& (0+255)
  2349  019B  0086               	movwf	6
  2350  019C  3001               	movlw	1	; select bank2/3
  2351  019D  0087               	movwf	7
  2352  019E  0801               	movf	1,w
  2353  019F  3A2C               	xorlw	44
  2354  01A0  1903               	skipnz
  2355  01A1  2A3B               	goto	l2377
  2356                           
  2357                           ;launcher_functions.c: 446: {
  2358                           ;launcher_functions.c: 448: latitude[0] = (gpsMessage[x++] - 48)*10;
  2359  01A2  300A               	movlw	10
  2360  01A3  00AF               	movwf	??_DecodeGPS
  2361  01A4  082F               	movf	??_DecodeGPS,w
  2362  01A5  00A0               	movwf	___bmul@multiplicand
  2363  01A6  0842               	movf	DecodeGPS@x,w
  2364  01A7  3E20               	addlw	_gpsMessage& (0+255)
  2365  01A8  0086               	movwf	6
  2366  01A9  3001               	movlw	1	; select bank2/3
  2367  01AA  0087               	movwf	7
  2368  01AB  0801               	movf	1,w
  2369  01AC  3ED0               	addlw	208
  2370  01AD  318C  248A  3181   	fcall	___bmul
  2371  01B0  0020               	movlb	0	; select bank0
  2372  01B1  00B0               	movwf	??_DecodeGPS+1
  2373  01B2  0830               	movf	??_DecodeGPS+1,w
  2374  01B3  00BC               	movwf	DecodeGPS@latitude
  2375  01B4  3001               	movlw	1
  2376  01B5  07C2               	addwf	DecodeGPS@x,f
  2377  01B6  3000               	movlw	0
  2378  01B7  3DC3               	addwfc	DecodeGPS@x+1,f
  2379                           
  2380                           ;launcher_functions.c: 449: latitude[0] += (gpsMessage[x++] - 48);
  2381  01B8  0842               	movf	DecodeGPS@x,w
  2382  01B9  3E20               	addlw	_gpsMessage& (0+255)
  2383  01BA  0086               	movwf	6
  2384  01BB  3001               	movlw	1	; select bank2/3
  2385  01BC  0087               	movwf	7
  2386  01BD  0801               	movf	1,w
  2387  01BE  3ED0               	addlw	208
  2388  01BF  00AF               	movwf	??_DecodeGPS
  2389  01C0  082F               	movf	??_DecodeGPS,w
  2390  01C1  07BC               	addwf	DecodeGPS@latitude,f
  2391  01C2  3001               	movlw	1
  2392  01C3  07C2               	addwf	DecodeGPS@x,f
  2393  01C4  3000               	movlw	0
  2394  01C5  3DC3               	addwfc	DecodeGPS@x+1,f
  2395                           
  2396                           ;launcher_functions.c: 452: latitude[1] = (gpsMessage[x++] - 48)*10;
  2397  01C6  300A               	movlw	10
  2398  01C7  00AF               	movwf	??_DecodeGPS
  2399  01C8  082F               	movf	??_DecodeGPS,w
  2400  01C9  00A0               	movwf	___bmul@multiplicand
  2401  01CA  0842               	movf	DecodeGPS@x,w
  2402  01CB  3E20               	addlw	_gpsMessage& (0+255)
  2403  01CC  0086               	movwf	6
  2404  01CD  3001               	movlw	1	; select bank2/3
  2405  01CE  0087               	movwf	7
  2406  01CF  0801               	movf	1,w
  2407  01D0  3ED0               	addlw	208
  2408  01D1  318C  248A  3181   	fcall	___bmul
  2409  01D4  0020               	movlb	0	; select bank0
  2410  01D5  00B0               	movwf	??_DecodeGPS+1
  2411  01D6  0830               	movf	??_DecodeGPS+1,w
  2412  01D7  00BD               	movwf	DecodeGPS@latitude+1
  2413  01D8  3001               	movlw	1
  2414  01D9  07C2               	addwf	DecodeGPS@x,f
  2415  01DA  3000               	movlw	0
  2416  01DB  3DC3               	addwfc	DecodeGPS@x+1,f
  2417                           
  2418                           ;launcher_functions.c: 453: latitude[1] += (gpsMessage[x++] - 48);
  2419  01DC  0842               	movf	DecodeGPS@x,w
  2420  01DD  3E20               	addlw	_gpsMessage& (0+255)
  2421  01DE  0086               	movwf	6
  2422  01DF  3001               	movlw	1	; select bank2/3
  2423  01E0  0087               	movwf	7
  2424  01E1  0801               	movf	1,w
  2425  01E2  3ED0               	addlw	208
  2426  01E3  00AF               	movwf	??_DecodeGPS
  2427  01E4  082F               	movf	??_DecodeGPS,w
  2428  01E5  07BD               	addwf	DecodeGPS@latitude+1,f
  2429  01E6  3001               	movlw	1
  2430  01E7  07C2               	addwf	DecodeGPS@x,f
  2431  01E8  3000               	movlw	0
  2432  01E9  3DC3               	addwfc	DecodeGPS@x+1,f
  2433                           
  2434                           ;launcher_functions.c: 456: x = x + 1;
  2435  01EA  0842               	movf	DecodeGPS@x,w
  2436  01EB  3E01               	addlw	1
  2437  01EC  00C2               	movwf	DecodeGPS@x
  2438  01ED  3000               	movlw	0
  2439  01EE  3D43               	addwfc	DecodeGPS@x+1,w
  2440  01EF  00C3               	movwf	DecodeGPS@x+1
  2441                           
  2442                           ;launcher_functions.c: 459: latitude[2] = (gpsMessage[x++] - 48)*10;
  2443  01F0  300A               	movlw	10
  2444  01F1  00AF               	movwf	??_DecodeGPS
  2445  01F2  082F               	movf	??_DecodeGPS,w
  2446  01F3  00A0               	movwf	___bmul@multiplicand
  2447  01F4  0842               	movf	DecodeGPS@x,w
  2448  01F5  3E20               	addlw	_gpsMessage& (0+255)
  2449  01F6  0086               	movwf	6
  2450  01F7  3001               	movlw	1	; select bank2/3
  2451  01F8  0087               	movwf	7
  2452  01F9  0801               	movf	1,w
  2453  01FA  3ED0               	addlw	208
  2454  01FB  318C  248A  3181   	fcall	___bmul
  2455  01FE  0020               	movlb	0	; select bank0
  2456  01FF  00B0               	movwf	??_DecodeGPS+1
  2457  0200  0830               	movf	??_DecodeGPS+1,w
  2458  0201  00BE               	movwf	DecodeGPS@latitude+2
  2459  0202  3001               	movlw	1
  2460  0203  07C2               	addwf	DecodeGPS@x,f
  2461  0204  3000               	movlw	0
  2462  0205  3DC3               	addwfc	DecodeGPS@x+1,f
  2463                           
  2464                           ;launcher_functions.c: 460: latitude[2] += (gpsMessage[x++] - 48);
  2465  0206  0842               	movf	DecodeGPS@x,w
  2466  0207  3E20               	addlw	_gpsMessage& (0+255)
  2467  0208  0086               	movwf	6
  2468  0209  3001               	movlw	1	; select bank2/3
  2469  020A  0087               	movwf	7
  2470  020B  0801               	movf	1,w
  2471  020C  3ED0               	addlw	208
  2472  020D  00AF               	movwf	??_DecodeGPS
  2473  020E  082F               	movf	??_DecodeGPS,w
  2474  020F  07BE               	addwf	DecodeGPS@latitude+2,f
  2475  0210  3001               	movlw	1
  2476  0211  07C2               	addwf	DecodeGPS@x,f
  2477  0212  3000               	movlw	0
  2478  0213  3DC3               	addwfc	DecodeGPS@x+1,f
  2479                           
  2480                           ;launcher_functions.c: 461: latitude[2] = (latitude[2]*60)/100;
  2481  0214  3064               	movlw	100
  2482  0215  00A6               	movwf	___awdiv@divisor
  2483  0216  3000               	movlw	0
  2484  0217  00A7               	movwf	___awdiv@divisor+1
  2485  0218  083E               	movf	DecodeGPS@latitude+2,w
  2486  0219  00AF               	movwf	??_DecodeGPS
  2487  021A  01B0               	clrf	??_DecodeGPS+1
  2488  021B  082F               	movf	??_DecodeGPS,w
  2489  021C  00A0               	movwf	___wmul@multiplier
  2490  021D  0830               	movf	??_DecodeGPS+1,w
  2491  021E  00A1               	movwf	___wmul@multiplier+1
  2492  021F  303C               	movlw	60
  2493  0220  00A2               	movwf	___wmul@multiplicand
  2494  0221  3000               	movlw	0
  2495  0222  00A3               	movwf	___wmul@multiplicand+1
  2496  0223  318D  2540  3181   	fcall	___wmul
  2497  0226  0020               	movlb	0	; select bank0
  2498  0227  0821               	movf	?___wmul+1,w
  2499  0228  01A9               	clrf	___awdiv@dividend+1
  2500  0229  07A9               	addwf	___awdiv@dividend+1,f
  2501  022A  0820               	movf	?___wmul,w
  2502  022B  01A8               	clrf	___awdiv@dividend
  2503  022C  07A8               	addwf	___awdiv@dividend,f
  2504  022D  318E  2660  3181   	fcall	___awdiv
  2505  0230  0020               	movlb	0	; select bank0
  2506  0231  0826               	movf	?___awdiv,w
  2507  0232  00B1               	movwf	??_DecodeGPS+2
  2508  0233  0831               	movf	??_DecodeGPS+2,w
  2509  0234  00BE               	movwf	DecodeGPS@latitude+2
  2510                           
  2511                           ;launcher_functions.c: 464: x = x + 2;
  2512  0235  0842               	movf	DecodeGPS@x,w
  2513  0236  3E02               	addlw	2
  2514  0237  00C2               	movwf	DecodeGPS@x
  2515  0238  3000               	movlw	0
  2516  0239  3D43               	addwfc	DecodeGPS@x+1,w
  2517  023A  00C3               	movwf	DecodeGPS@x+1
  2518  023B                     l2377:	
  2519                           
  2520                           ;launcher_functions.c: 465: }
  2521                           ;launcher_functions.c: 468: x = x + 1;
  2522  023B  0842               	movf	DecodeGPS@x,w
  2523  023C  3E01               	addlw	1
  2524  023D  00C2               	movwf	DecodeGPS@x
  2525  023E  3000               	movlw	0
  2526  023F  3D43               	addwfc	DecodeGPS@x+1,w
  2527  0240  00C3               	movwf	DecodeGPS@x+1
  2528                           
  2529                           ;launcher_functions.c: 471: if(gpsMessage[x] != ',')
  2530  0241  0842               	movf	DecodeGPS@x,w
  2531  0242  3E20               	addlw	_gpsMessage& (0+255)
  2532  0243  0086               	movwf	6
  2533  0244  3001               	movlw	1	; select bank2/3
  2534  0245  0087               	movwf	7
  2535  0246  0801               	movf	1,w
  2536  0247  3A2C               	xorlw	44
  2537  0248  1903               	skipnz
  2538  0249  2A57               	goto	l2385
  2539                           
  2540                           ;launcher_functions.c: 472: northSouth = gpsMessage[x++];
  2541  024A  0842               	movf	DecodeGPS@x,w
  2542  024B  3E20               	addlw	_gpsMessage& (0+255)
  2543  024C  0086               	movwf	6
  2544  024D  3001               	movlw	1	; select bank2/3
  2545  024E  0087               	movwf	7
  2546  024F  0801               	movf	1,w
  2547  0250  00AF               	movwf	??_DecodeGPS
  2548  0251  082F               	movf	??_DecodeGPS,w
  2549  0252  00B9               	movwf	DecodeGPS@northSouth
  2550  0253  3001               	movlw	1
  2551  0254  07C2               	addwf	DecodeGPS@x,f
  2552  0255  3000               	movlw	0
  2553  0256  3DC3               	addwfc	DecodeGPS@x+1,f
  2554  0257                     l2385:	
  2555                           
  2556                           ;launcher_functions.c: 475: x = x + 1;
  2557  0257  0842               	movf	DecodeGPS@x,w
  2558  0258  3E01               	addlw	1
  2559  0259  00C2               	movwf	DecodeGPS@x
  2560  025A  3000               	movlw	0
  2561  025B  3D43               	addwfc	DecodeGPS@x+1,w
  2562  025C  00C3               	movwf	DecodeGPS@x+1
  2563                           
  2564                           ;launcher_functions.c: 478: if(gpsMessage[x]!= ',')
  2565  025D  0842               	movf	DecodeGPS@x,w
  2566  025E  3E20               	addlw	_gpsMessage& (0+255)
  2567  025F  0086               	movwf	6
  2568  0260  3001               	movlw	1	; select bank2/3
  2569  0261  0087               	movwf	7
  2570  0262  0801               	movf	1,w
  2571  0263  3A2C               	xorlw	44
  2572  0264  1903               	skipnz
  2573  0265  2B15               	goto	l2421
  2574                           
  2575                           ;launcher_functions.c: 479: {
  2576                           ;launcher_functions.c: 481: longitude[0] = (gpsMessage[x++] - 48)*100;
  2577  0266  3064               	movlw	100
  2578  0267  00AF               	movwf	??_DecodeGPS
  2579  0268  082F               	movf	??_DecodeGPS,w
  2580  0269  00A0               	movwf	___bmul@multiplicand
  2581  026A  0842               	movf	DecodeGPS@x,w
  2582  026B  3E20               	addlw	_gpsMessage& (0+255)
  2583  026C  0086               	movwf	6
  2584  026D  3001               	movlw	1	; select bank2/3
  2585  026E  0087               	movwf	7
  2586  026F  0801               	movf	1,w
  2587  0270  3ED0               	addlw	208
  2588  0271  318C  248A  3181   	fcall	___bmul
  2589  0274  0020               	movlb	0	; select bank0
  2590  0275  00B0               	movwf	??_DecodeGPS+1
  2591  0276  0830               	movf	??_DecodeGPS+1,w
  2592  0277  00BF               	movwf	DecodeGPS@longitude
  2593  0278  3001               	movlw	1
  2594  0279  07C2               	addwf	DecodeGPS@x,f
  2595  027A  3000               	movlw	0
  2596  027B  3DC3               	addwfc	DecodeGPS@x+1,f
  2597                           
  2598                           ;launcher_functions.c: 482: longitude[0] += (gpsMessage[x++] - 48)*10;
  2599  027C  300A               	movlw	10
  2600  027D  00AF               	movwf	??_DecodeGPS
  2601  027E  082F               	movf	??_DecodeGPS,w
  2602  027F  00A0               	movwf	___bmul@multiplicand
  2603  0280  0842               	movf	DecodeGPS@x,w
  2604  0281  3E20               	addlw	_gpsMessage& (0+255)
  2605  0282  0086               	movwf	6
  2606  0283  3001               	movlw	1	; select bank2/3
  2607  0284  0087               	movwf	7
  2608  0285  0801               	movf	1,w
  2609  0286  3ED0               	addlw	208
  2610  0287  318C  248A  3181   	fcall	___bmul
  2611  028A  0020               	movlb	0	; select bank0
  2612  028B  00B0               	movwf	??_DecodeGPS+1
  2613  028C  0830               	movf	??_DecodeGPS+1,w
  2614  028D  07BF               	addwf	DecodeGPS@longitude,f
  2615  028E  3001               	movlw	1
  2616  028F  07C2               	addwf	DecodeGPS@x,f
  2617  0290  3000               	movlw	0
  2618  0291  3DC3               	addwfc	DecodeGPS@x+1,f
  2619                           
  2620                           ;launcher_functions.c: 483: longitude[0] += (gpsMessage[x++] - 48);
  2621  0292  0842               	movf	DecodeGPS@x,w
  2622  0293  3E20               	addlw	_gpsMessage& (0+255)
  2623  0294  0086               	movwf	6
  2624  0295  3001               	movlw	1	; select bank2/3
  2625  0296  0087               	movwf	7
  2626  0297  0801               	movf	1,w
  2627  0298  3ED0               	addlw	208
  2628  0299  00AF               	movwf	??_DecodeGPS
  2629  029A  082F               	movf	??_DecodeGPS,w
  2630  029B  07BF               	addwf	DecodeGPS@longitude,f
  2631  029C  3001               	movlw	1
  2632  029D  07C2               	addwf	DecodeGPS@x,f
  2633  029E  3000               	movlw	0
  2634  029F  3DC3               	addwfc	DecodeGPS@x+1,f
  2635                           
  2636                           ;launcher_functions.c: 486: longitude[1] = (gpsMessage[x++] - 48)*10;
  2637  02A0  300A               	movlw	10
  2638  02A1  00AF               	movwf	??_DecodeGPS
  2639  02A2  082F               	movf	??_DecodeGPS,w
  2640  02A3  00A0               	movwf	___bmul@multiplicand
  2641  02A4  0842               	movf	DecodeGPS@x,w
  2642  02A5  3E20               	addlw	_gpsMessage& (0+255)
  2643  02A6  0086               	movwf	6
  2644  02A7  3001               	movlw	1	; select bank2/3
  2645  02A8  0087               	movwf	7
  2646  02A9  0801               	movf	1,w
  2647  02AA  3ED0               	addlw	208
  2648  02AB  318C  248A  3181   	fcall	___bmul
  2649  02AE  0020               	movlb	0	; select bank0
  2650  02AF  00B0               	movwf	??_DecodeGPS+1
  2651  02B0  0830               	movf	??_DecodeGPS+1,w
  2652  02B1  00C0               	movwf	DecodeGPS@longitude+1
  2653  02B2  3001               	movlw	1
  2654  02B3  07C2               	addwf	DecodeGPS@x,f
  2655  02B4  3000               	movlw	0
  2656  02B5  3DC3               	addwfc	DecodeGPS@x+1,f
  2657                           
  2658                           ;launcher_functions.c: 487: longitude[1] += (gpsMessage[x++] - 48);
  2659  02B6  0842               	movf	DecodeGPS@x,w
  2660  02B7  3E20               	addlw	_gpsMessage& (0+255)
  2661  02B8  0086               	movwf	6
  2662  02B9  3001               	movlw	1	; select bank2/3
  2663  02BA  0087               	movwf	7
  2664  02BB  0801               	movf	1,w
  2665  02BC  3ED0               	addlw	208
  2666  02BD  00AF               	movwf	??_DecodeGPS
  2667  02BE  082F               	movf	??_DecodeGPS,w
  2668  02BF  07C0               	addwf	DecodeGPS@longitude+1,f
  2669  02C0  3001               	movlw	1
  2670  02C1  07C2               	addwf	DecodeGPS@x,f
  2671  02C2  3000               	movlw	0
  2672  02C3  3DC3               	addwfc	DecodeGPS@x+1,f
  2673                           
  2674                           ;launcher_functions.c: 490: x = x + 1;
  2675  02C4  0842               	movf	DecodeGPS@x,w
  2676  02C5  3E01               	addlw	1
  2677  02C6  00C2               	movwf	DecodeGPS@x
  2678  02C7  3000               	movlw	0
  2679  02C8  3D43               	addwfc	DecodeGPS@x+1,w
  2680  02C9  00C3               	movwf	DecodeGPS@x+1
  2681                           
  2682                           ;launcher_functions.c: 493: longitude[2] = (gpsMessage[x++] - 48)*10;
  2683  02CA  300A               	movlw	10
  2684  02CB  00AF               	movwf	??_DecodeGPS
  2685  02CC  082F               	movf	??_DecodeGPS,w
  2686  02CD  00A0               	movwf	___bmul@multiplicand
  2687  02CE  0842               	movf	DecodeGPS@x,w
  2688  02CF  3E20               	addlw	_gpsMessage& (0+255)
  2689  02D0  0086               	movwf	6
  2690  02D1  3001               	movlw	1	; select bank2/3
  2691  02D2  0087               	movwf	7
  2692  02D3  0801               	movf	1,w
  2693  02D4  3ED0               	addlw	208
  2694  02D5  318C  248A  3181   	fcall	___bmul
  2695  02D8  0020               	movlb	0	; select bank0
  2696  02D9  00B0               	movwf	??_DecodeGPS+1
  2697  02DA  0830               	movf	??_DecodeGPS+1,w
  2698  02DB  00C1               	movwf	DecodeGPS@longitude+2
  2699  02DC  3001               	movlw	1
  2700  02DD  07C2               	addwf	DecodeGPS@x,f
  2701  02DE  3000               	movlw	0
  2702  02DF  3DC3               	addwfc	DecodeGPS@x+1,f
  2703                           
  2704                           ;launcher_functions.c: 494: longitude[2] += (gpsMessage[x++] - 48);
  2705  02E0  0842               	movf	DecodeGPS@x,w
  2706  02E1  3E20               	addlw	_gpsMessage& (0+255)
  2707  02E2  0086               	movwf	6
  2708  02E3  3001               	movlw	1	; select bank2/3
  2709  02E4  0087               	movwf	7
  2710  02E5  0801               	movf	1,w
  2711  02E6  3ED0               	addlw	208
  2712  02E7  00AF               	movwf	??_DecodeGPS
  2713  02E8  082F               	movf	??_DecodeGPS,w
  2714  02E9  07C1               	addwf	DecodeGPS@longitude+2,f
  2715  02EA  3001               	movlw	1
  2716  02EB  07C2               	addwf	DecodeGPS@x,f
  2717  02EC  3000               	movlw	0
  2718  02ED  3DC3               	addwfc	DecodeGPS@x+1,f
  2719                           
  2720                           ;launcher_functions.c: 495: longitude[2] = (longitude[2]*60)/100;
  2721  02EE  3064               	movlw	100
  2722  02EF  00A6               	movwf	___awdiv@divisor
  2723  02F0  3000               	movlw	0
  2724  02F1  00A7               	movwf	___awdiv@divisor+1
  2725  02F2  0841               	movf	DecodeGPS@longitude+2,w
  2726  02F3  00AF               	movwf	??_DecodeGPS
  2727  02F4  01B0               	clrf	??_DecodeGPS+1
  2728  02F5  082F               	movf	??_DecodeGPS,w
  2729  02F6  00A0               	movwf	___wmul@multiplier
  2730  02F7  0830               	movf	??_DecodeGPS+1,w
  2731  02F8  00A1               	movwf	___wmul@multiplier+1
  2732  02F9  303C               	movlw	60
  2733  02FA  00A2               	movwf	___wmul@multiplicand
  2734  02FB  3000               	movlw	0
  2735  02FC  00A3               	movwf	___wmul@multiplicand+1
  2736  02FD  318D  2540  3181   	fcall	___wmul
  2737  0300  0020               	movlb	0	; select bank0
  2738  0301  0821               	movf	?___wmul+1,w
  2739  0302  01A9               	clrf	___awdiv@dividend+1
  2740  0303  07A9               	addwf	___awdiv@dividend+1,f
  2741  0304  0820               	movf	?___wmul,w
  2742  0305  01A8               	clrf	___awdiv@dividend
  2743  0306  07A8               	addwf	___awdiv@dividend,f
  2744  0307  318E  2660  3181   	fcall	___awdiv
  2745  030A  0020               	movlb	0	; select bank0
  2746  030B  0826               	movf	?___awdiv,w
  2747  030C  00B1               	movwf	??_DecodeGPS+2
  2748  030D  0831               	movf	??_DecodeGPS+2,w
  2749  030E  00C1               	movwf	DecodeGPS@longitude+2
  2750                           
  2751                           ;launcher_functions.c: 498: x = x + 2;
  2752  030F  0842               	movf	DecodeGPS@x,w
  2753  0310  3E02               	addlw	2
  2754  0311  00C2               	movwf	DecodeGPS@x
  2755  0312  3000               	movlw	0
  2756  0313  3D43               	addwfc	DecodeGPS@x+1,w
  2757  0314  00C3               	movwf	DecodeGPS@x+1
  2758  0315                     l2421:	
  2759                           
  2760                           ;launcher_functions.c: 499: }
  2761                           ;launcher_functions.c: 502: x = x + 1;
  2762  0315  0842               	movf	DecodeGPS@x,w
  2763  0316  3E01               	addlw	1
  2764  0317  00C2               	movwf	DecodeGPS@x
  2765  0318  3000               	movlw	0
  2766  0319  3D43               	addwfc	DecodeGPS@x+1,w
  2767  031A  00C3               	movwf	DecodeGPS@x+1
  2768                           
  2769                           ;launcher_functions.c: 505: if(gpsMessage[x] != ',')
  2770  031B  0842               	movf	DecodeGPS@x,w
  2771  031C  3E20               	addlw	_gpsMessage& (0+255)
  2772  031D  0086               	movwf	6
  2773  031E  3001               	movlw	1	; select bank2/3
  2774  031F  0087               	movwf	7
  2775  0320  0801               	movf	1,w
  2776  0321  3A2C               	xorlw	44
  2777  0322  1903               	skipnz
  2778  0323  2B31               	goto	l2429
  2779                           
  2780                           ;launcher_functions.c: 506: eastWest = gpsMessage[x++];
  2781  0324  0842               	movf	DecodeGPS@x,w
  2782  0325  3E20               	addlw	_gpsMessage& (0+255)
  2783  0326  0086               	movwf	6
  2784  0327  3001               	movlw	1	; select bank2/3
  2785  0328  0087               	movwf	7
  2786  0329  0801               	movf	1,w
  2787  032A  00AF               	movwf	??_DecodeGPS
  2788  032B  082F               	movf	??_DecodeGPS,w
  2789  032C  00BA               	movwf	DecodeGPS@eastWest
  2790  032D  3001               	movlw	1
  2791  032E  07C2               	addwf	DecodeGPS@x,f
  2792  032F  3000               	movlw	0
  2793  0330  3DC3               	addwfc	DecodeGPS@x+1,f
  2794  0331                     l2429:	
  2795                           
  2796                           ;launcher_functions.c: 509: x = x + 1;
  2797  0331  0842               	movf	DecodeGPS@x,w
  2798  0332  3E01               	addlw	1
  2799  0333  00C2               	movwf	DecodeGPS@x
  2800  0334  3000               	movlw	0
  2801  0335  3D43               	addwfc	DecodeGPS@x+1,w
  2802  0336  00C3               	movwf	DecodeGPS@x+1
  2803  0337                     l2431:	
  2804                           ;launcher_functions.c: 512: while(gpsMessage[x++] != ','){}
  2805                           
  2806  0337  0843               	movf	DecodeGPS@x+1,w
  2807  0338  00B0               	movwf	??_DecodeGPS+1
  2808  0339  0842               	movf	DecodeGPS@x,w
  2809  033A  00AF               	movwf	??_DecodeGPS
  2810  033B  0AC2               	incf	DecodeGPS@x,f
  2811  033C  1903               	skipnz
  2812  033D  0AC3               	incf	DecodeGPS@x+1,f
  2813  033E  082F               	movf	??_DecodeGPS,w
  2814  033F  3E20               	addlw	_gpsMessage& (0+255)
  2815  0340  0086               	movwf	6
  2816  0341  3001               	movlw	1	; select bank2/3
  2817  0342  0087               	movwf	7
  2818  0343  0801               	movf	1,w
  2819  0344  3A2C               	xorlw	44
  2820  0345  1D03               	skipz
  2821  0346  2B37               	goto	l2431
  2822                           
  2823                           ;launcher_functions.c: 515: status = gpsMessage[x];
  2824  0347  0842               	movf	DecodeGPS@x,w
  2825  0348  3E20               	addlw	_gpsMessage& (0+255)
  2826  0349  0086               	movwf	6
  2827  034A  3001               	movlw	1	; select bank2/3
  2828  034B  0087               	movwf	7
  2829  034C  0801               	movf	1,w
  2830  034D  00AF               	movwf	??_DecodeGPS
  2831  034E  082F               	movf	??_DecodeGPS,w
  2832  034F  00BB               	movwf	DecodeGPS@status
  2833                           
  2834                           ;launcher_functions.c: 517: if(status == 'A')
  2835  0350  083B               	movf	DecodeGPS@status,w
  2836  0351  3A41               	xorlw	65
  2837  0352  1D03               	skipz
  2838  0353  2B56               	goto	l414
  2839                           
  2840                           ;launcher_functions.c: 518: gpsInvalidFlag = 0;
  2841  0354  01E6               	clrf	_gpsInvalidFlag
  2842  0355  2B58               	goto	l2439
  2843  0356                     l414:	
  2844                           
  2845                           ;launcher_functions.c: 519: else
  2846                           ;launcher_functions.c: 520: gpsInvalidFlag = 1;
  2847  0356  01E6               	clrf	_gpsInvalidFlag
  2848  0357  0AE6               	incf	_gpsInvalidFlag,f
  2849  0358                     l2439:	
  2850                           
  2851                           ;launcher_functions.c: 524: if(!gpsInvalidFlag)
  2852  0358  08E6               	movf	_gpsInvalidFlag,f
  2853  0359  1D03               	skipz
  2854  035A  0008               	return
  2855                           
  2856                           ;launcher_functions.c: 525: {
  2857                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  2858  035B  01C2               	clrf	DecodeGPS@x
  2859  035C  01C3               	clrf	DecodeGPS@x+1
  2860  035D  0843               	movf	DecodeGPS@x+1,w
  2861  035E  3A80               	xorlw	128
  2862  035F  00AF               	movwf	??_DecodeGPS
  2863  0360  3080               	movlw	128
  2864  0361  022F               	subwf	??_DecodeGPS,w
  2865  0362  1D03               	skipz
  2866  0363  2B66               	goto	u2075
  2867  0364  3003               	movlw	3
  2868  0365  0242               	subwf	DecodeGPS@x,w
  2869  0366                     u2075:	
  2870  0366  1803               	btfsc	3,0
  2871  0367  2B90               	goto	l2453
  2872  0368                     l2447:	
  2873                           
  2874                           ;launcher_functions.c: 528: {
  2875                           ;launcher_functions.c: 529: validLatitude[x] = latitude[x];
  2876  0368  0020               	movlb	0	; select bank0
  2877  0369  0842               	movf	DecodeGPS@x,w
  2878  036A  3E3C               	addlw	DecodeGPS@latitude& (0+255)
  2879  036B  0086               	movwf	6
  2880  036C  0187               	clrf	7
  2881  036D  0801               	movf	1,w
  2882  036E  00AF               	movwf	??_DecodeGPS
  2883  036F  0842               	movf	DecodeGPS@x,w
  2884  0370  3E63               	addlw	_validLatitude& (0+255)
  2885  0371  0086               	movwf	6
  2886  0372  0187               	clrf	7
  2887  0373  082F               	movf	??_DecodeGPS,w
  2888  0374  0081               	movwf	1
  2889                           
  2890                           ;launcher_functions.c: 530: validLongitude[x] = longitude[x];
  2891  0375  0842               	movf	DecodeGPS@x,w
  2892  0376  3E3F               	addlw	DecodeGPS@longitude& (0+255)
  2893  0377  0086               	movwf	6
  2894  0378  0187               	clrf	7
  2895  0379  0801               	movf	1,w
  2896  037A  00AF               	movwf	??_DecodeGPS
  2897  037B  0842               	movf	DecodeGPS@x,w
  2898  037C  3EEC               	addlw	_validLongitude& (0+255)
  2899  037D  0086               	movwf	6
  2900  037E  0187               	clrf	7
  2901  037F  082F               	movf	??_DecodeGPS,w
  2902  0380  0081               	movwf	1
  2903  0381  3001               	movlw	1
  2904  0382  07C2               	addwf	DecodeGPS@x,f
  2905  0383  3000               	movlw	0
  2906  0384  3DC3               	addwfc	DecodeGPS@x+1,f
  2907  0385  0843               	movf	DecodeGPS@x+1,w
  2908  0386  3A80               	xorlw	128
  2909  0387  00AF               	movwf	??_DecodeGPS
  2910  0388  3080               	movlw	128
  2911  0389  022F               	subwf	??_DecodeGPS,w
  2912  038A  1D03               	skipz
  2913  038B  2B8E               	goto	u2085
  2914  038C  3003               	movlw	3
  2915  038D  0242               	subwf	DecodeGPS@x,w
  2916  038E                     u2085:	
  2917  038E  1C03               	skipc
  2918  038F  2B68               	goto	l2447
  2919  0390                     l2453:	
  2920                           
  2921                           ;launcher_functions.c: 531: }
  2922                           ;launcher_functions.c: 532: validNorthSouth = northSouth;
  2923  0390  0020               	movlb	0	; select bank0
  2924  0391  0839               	movf	DecodeGPS@northSouth,w
  2925  0392  00AF               	movwf	??_DecodeGPS
  2926  0393  082F               	movf	??_DecodeGPS,w
  2927  0394  00E8               	movwf	_validNorthSouth
  2928                           
  2929                           ;launcher_functions.c: 533: validEastWest = eastWest;
  2930  0395  083A               	movf	DecodeGPS@eastWest,w
  2931  0396  00AF               	movwf	??_DecodeGPS
  2932  0397  082F               	movf	??_DecodeGPS,w
  2933  0398  00E7               	movwf	_validEastWest
  2934                           
  2935                           ;launcher_functions.c: 535: hasValidGPSFlag = 1;
  2936  0399  01EA               	clrf	_hasValidGPSFlag
  2937  039A  0AEA               	incf	_hasValidGPSFlag,f
  2938  039B  0008               	return
  2939  039C                     __end_of_DecodeGPS:	
  2940                           
  2941                           	psect	text3
  2942  0D40                     __ptext3:	
  2943 ;; *************** function ___wmul *****************
  2944 ;; Defined at:
  2945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2948 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  product         2    4[BANK0 ] unsigned int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2    0[BANK0 ] unsigned int 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2960 ;;      Params:         0       4       0       0       0       0       0       0
  2961 ;;      Locals:         0       2       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0
  2963 ;;      Totals:         0       6       0       0       0       0       0       0
  2964 ;;Total ram usage:        6 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_DecodeGPS
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function ___wmul
  2976  0D40                     ___wmul:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2980  0D40  0020               	movlb	0	; select bank0
  2981  0D41  01A4               	clrf	___wmul@product
  2982  0D42  01A5               	clrf	___wmul@product+1
  2983  0D43                     l2093:	
  2984  0D43  1C20               	btfss	___wmul@multiplier,0
  2985  0D44  2D49               	goto	l598
  2986  0D45  0822               	movf	___wmul@multiplicand,w
  2987  0D46  07A4               	addwf	___wmul@product,f
  2988  0D47  0823               	movf	___wmul@multiplicand+1,w
  2989  0D48  3DA5               	addwfc	___wmul@product+1,f
  2990  0D49                     l598:	
  2991  0D49  3001               	movlw	1
  2992  0D4A                     u1525:	
  2993  0D4A  35A2               	lslf	___wmul@multiplicand,f
  2994  0D4B  0DA3               	rlf	___wmul@multiplicand+1,f
  2995  0D4C  0B89               	decfsz	9,f
  2996  0D4D  2D4A               	goto	u1525
  2997  0D4E  3001               	movlw	1
  2998  0D4F                     u1535:	
  2999  0D4F  36A1               	lsrf	___wmul@multiplier+1,f
  3000  0D50  0CA0               	rrf	___wmul@multiplier,f
  3001  0D51  0B89               	decfsz	9,f
  3002  0D52  2D4F               	goto	u1535
  3003  0D53  0821               	movf	___wmul@multiplier+1,w
  3004  0D54  0420               	iorwf	___wmul@multiplier,w
  3005  0D55  1D03               	skipz
  3006  0D56  2D43               	goto	l2093
  3007  0D57  0825               	movf	___wmul@product+1,w
  3008  0D58  01A1               	clrf	?___wmul+1
  3009  0D59  07A1               	addwf	?___wmul+1,f
  3010  0D5A  0824               	movf	___wmul@product,w
  3011  0D5B  01A0               	clrf	?___wmul
  3012  0D5C  07A0               	addwf	?___wmul,f
  3013  0D5D  0008               	return
  3014  0D5E                     __end_of___wmul:	
  3015                           
  3016                           	psect	text4
  3017  0C8A                     __ptext4:	
  3018 ;; *************** function ___bmul *****************
  3019 ;; Defined at:
  3020 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  multiplier      1    wreg     unsigned char 
  3023 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3026 ;;  product         1    2[BANK0 ] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      unsigned char 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3036 ;;      Params:         0       1       0       0       0       0       0       0
  3037 ;;      Locals:         0       2       0       0       0       0       0       0
  3038 ;;      Temps:          0       1       0       0       0       0       0       0
  3039 ;;      Totals:         0       4       0       0       0       0       0       0
  3040 ;;Total ram usage:        4 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    2
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_DecodeGPS
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function ___bmul
  3052  0C8A                     ___bmul:	
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3056                           ;___bmul@multiplier stored from wreg
  3057  0C8A  0020               	movlb	0	; select bank0
  3058  0C8B  00A3               	movwf	___bmul@multiplier
  3059  0C8C  01A2               	clrf	___bmul@product
  3060  0C8D                     l2105:	
  3061  0C8D  1C23               	btfss	___bmul@multiplier,0
  3062  0C8E  2C93               	goto	l2109
  3063  0C8F  0820               	movf	___bmul@multiplicand,w
  3064  0C90  00A1               	movwf	??___bmul
  3065  0C91  0821               	movf	??___bmul,w
  3066  0C92  07A2               	addwf	___bmul@product,f
  3067  0C93                     l2109:	
  3068  0C93  1003               	clrc
  3069  0C94  0DA0               	rlf	___bmul@multiplicand,f
  3070  0C95  1003               	clrc
  3071  0C96  0CA3               	rrf	___bmul@multiplier,f
  3072  0C97  08A3               	movf	___bmul@multiplier,f
  3073  0C98  1D03               	skipz
  3074  0C99  2C8D               	goto	l2105
  3075  0C9A  0822               	movf	___bmul@product,w
  3076  0C9B  0008               	return
  3077  0C9C                     __end_of___bmul:	
  3078                           
  3079                           	psect	text5
  3080  0E60                     __ptext5:	
  3081 ;; *************** function ___awdiv *****************
  3082 ;; Defined at:
  3083 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  divisor         2    6[BANK0 ] int 
  3086 ;;  dividend        2    8[BANK0 ] int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  quotient        2   13[BANK0 ] int 
  3089 ;;  sign            1   12[BANK0 ] unsigned char 
  3090 ;;  counter         1   11[BANK0 ] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2    6[BANK0 ] int 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3100 ;;      Params:         0       4       0       0       0       0       0       0
  3101 ;;      Locals:         0       4       0       0       0       0       0       0
  3102 ;;      Temps:          0       1       0       0       0       0       0       0
  3103 ;;      Totals:         0       9       0       0       0       0       0       0
  3104 ;;Total ram usage:        9 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    2
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_DecodeGPS
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function ___awdiv
  3116  0E60                     ___awdiv:	
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3120  0E60  0020               	movlb	0	; select bank0
  3121  0E61  01AC               	clrf	___awdiv@sign
  3122  0E62  1FA7               	btfss	___awdiv@divisor+1,7
  3123  0E63  2E6B               	goto	l2127
  3124  0E64  09A6               	comf	___awdiv@divisor,f
  3125  0E65  09A7               	comf	___awdiv@divisor+1,f
  3126  0E66  0AA6               	incf	___awdiv@divisor,f
  3127  0E67  1903               	skipnz
  3128  0E68  0AA7               	incf	___awdiv@divisor+1,f
  3129  0E69  01AC               	clrf	___awdiv@sign
  3130  0E6A  0AAC               	incf	___awdiv@sign,f
  3131  0E6B                     l2127:	
  3132  0E6B  1FA9               	btfss	___awdiv@dividend+1,7
  3133  0E6C  2E76               	goto	l2133
  3134  0E6D  09A8               	comf	___awdiv@dividend,f
  3135  0E6E  09A9               	comf	___awdiv@dividend+1,f
  3136  0E6F  0AA8               	incf	___awdiv@dividend,f
  3137  0E70  1903               	skipnz
  3138  0E71  0AA9               	incf	___awdiv@dividend+1,f
  3139  0E72  3001               	movlw	1
  3140  0E73  00AA               	movwf	??___awdiv
  3141  0E74  082A               	movf	??___awdiv,w
  3142  0E75  06AC               	xorwf	___awdiv@sign,f
  3143  0E76                     l2133:	
  3144  0E76  01AD               	clrf	___awdiv@quotient
  3145  0E77  01AE               	clrf	___awdiv@quotient+1
  3146  0E78  0827               	movf	___awdiv@divisor+1,w
  3147  0E79  0426               	iorwf	___awdiv@divisor,w
  3148  0E7A  1903               	skipnz
  3149  0E7B  2EA5               	goto	l2155
  3150  0E7C  01AB               	clrf	___awdiv@counter
  3151  0E7D  0AAB               	incf	___awdiv@counter,f
  3152  0E7E                     l2143:	
  3153  0E7E  1BA7               	btfsc	___awdiv@divisor+1,7
  3154  0E7F  2E8A               	goto	l2145
  3155  0E80  3001               	movlw	1
  3156  0E81                     u1605:	
  3157  0E81  35A6               	lslf	___awdiv@divisor,f
  3158  0E82  0DA7               	rlf	___awdiv@divisor+1,f
  3159  0E83  0B89               	decfsz	9,f
  3160  0E84  2E81               	goto	u1605
  3161  0E85  3001               	movlw	1
  3162  0E86  00AA               	movwf	??___awdiv
  3163  0E87  082A               	movf	??___awdiv,w
  3164  0E88  07AB               	addwf	___awdiv@counter,f
  3165  0E89  2E7E               	goto	l2143
  3166  0E8A                     l2145:	
  3167  0E8A  3001               	movlw	1
  3168  0E8B                     u1625:	
  3169  0E8B  35AD               	lslf	___awdiv@quotient,f
  3170  0E8C  0DAE               	rlf	___awdiv@quotient+1,f
  3171  0E8D  0B89               	decfsz	9,f
  3172  0E8E  2E8B               	goto	u1625
  3173  0E8F  0827               	movf	___awdiv@divisor+1,w
  3174  0E90  0229               	subwf	___awdiv@dividend+1,w
  3175  0E91  1D03               	skipz
  3176  0E92  2E95               	goto	u1635
  3177  0E93  0826               	movf	___awdiv@divisor,w
  3178  0E94  0228               	subwf	___awdiv@dividend,w
  3179  0E95                     u1635:	
  3180  0E95  1C03               	skipc
  3181  0E96  2E9C               	goto	l2151
  3182  0E97  0826               	movf	___awdiv@divisor,w
  3183  0E98  02A8               	subwf	___awdiv@dividend,f
  3184  0E99  0827               	movf	___awdiv@divisor+1,w
  3185  0E9A  3BA9               	subwfb	___awdiv@dividend+1,f
  3186  0E9B  142D               	bsf	___awdiv@quotient,0
  3187  0E9C                     l2151:	
  3188  0E9C  3001               	movlw	1
  3189  0E9D                     u1645:	
  3190  0E9D  36A7               	lsrf	___awdiv@divisor+1,f
  3191  0E9E  0CA6               	rrf	___awdiv@divisor,f
  3192  0E9F  0B89               	decfsz	9,f
  3193  0EA0  2E9D               	goto	u1645
  3194  0EA1  3001               	movlw	1
  3195  0EA2  02AB               	subwf	___awdiv@counter,f
  3196  0EA3  1D03               	btfss	3,2
  3197  0EA4  2E8A               	goto	l2145
  3198  0EA5                     l2155:	
  3199  0EA5  082C               	movf	___awdiv@sign,w
  3200  0EA6  1903               	btfsc	3,2
  3201  0EA7  2EAD               	goto	l2159
  3202  0EA8  09AD               	comf	___awdiv@quotient,f
  3203  0EA9  09AE               	comf	___awdiv@quotient+1,f
  3204  0EAA  0AAD               	incf	___awdiv@quotient,f
  3205  0EAB  1903               	skipnz
  3206  0EAC  0AAE               	incf	___awdiv@quotient+1,f
  3207  0EAD                     l2159:	
  3208  0EAD  082E               	movf	___awdiv@quotient+1,w
  3209  0EAE  01A7               	clrf	?___awdiv+1
  3210  0EAF  07A7               	addwf	?___awdiv+1,f
  3211  0EB0  082D               	movf	___awdiv@quotient,w
  3212  0EB1  01A6               	clrf	?___awdiv
  3213  0EB2  07A6               	addwf	?___awdiv,f
  3214  0EB3  0008               	return
  3215  0EB4                     __end_of___awdiv:	
  3216                           
  3217                           	psect	text6
  3218  0D8B                     __ptext6:	
  3219 ;; *************** function _ToggleSleepGPS *****************
  3220 ;; Defined at:
  3221 ;;		line 329 in file "launcher_functions.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;		None               void
  3228 ;; Registers used:
  3229 ;;		wreg
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3235 ;;      Params:         0       0       0       0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0       0       0       0
  3237 ;;      Temps:          0       3       0       0       0       0       0       0
  3238 ;;      Totals:         0       3       0       0       0       0       0       0
  3239 ;;Total ram usage:        3 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    2
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _ToggleSleepGPS
  3251  0D8B                     _ToggleSleepGPS:	
  3252                           
  3253                           ;launcher_functions.c: 331: PORTAbits.RA6 = 0;
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _ToggleSleepGPS: [wreg]
  3257  0D8B  0020               	movlb	0	; select bank0
  3258  0D8C  130C               	bcf	12,6	;volatile
  3259                           
  3260                           ;launcher_functions.c: 332: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3261  0D8D  3015               	movlw	21
  3262  0D8E  00A2               	movwf	??_ToggleSleepGPS+2
  3263  0D8F  304B               	movlw	75
  3264  0D90  00A1               	movwf	??_ToggleSleepGPS+1
  3265  0D91  30D1               	movlw	209
  3266  0D92  00A0               	movwf	??_ToggleSleepGPS
  3267  0D93                     u2837:	
  3268  0D93  0BA0               	decfsz	??_ToggleSleepGPS,f
  3269  0D94  2D93               	goto	u2837
  3270  0D95  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3271  0D96  2D93               	goto	u2837
  3272  0D97  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3273  0D98  2D93               	goto	u2837
  3274  0D99  0000               	nop
  3275                           
  3276                           ;launcher_functions.c: 333: PORTAbits.RA6 = 1;
  3277  0D9A  0020               	movlb	0	; select bank0
  3278  0D9B  170C               	bsf	12,6	;volatile
  3279                           
  3280                           ;launcher_functions.c: 334: _delay((unsigned long)((100)*(16000000/4000.0)));
  3281  0D9C  3003               	movlw	3
  3282  0D9D  00A2               	movwf	??_ToggleSleepGPS+2
  3283  0D9E  3008               	movlw	8
  3284  0D9F  00A1               	movwf	??_ToggleSleepGPS+1
  3285  0DA0  3078               	movlw	120
  3286  0DA1  00A0               	movwf	??_ToggleSleepGPS
  3287  0DA2                     u2847:	
  3288  0DA2  0BA0               	decfsz	??_ToggleSleepGPS,f
  3289  0DA3  2DA2               	goto	u2847
  3290  0DA4  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3291  0DA5  2DA2               	goto	u2847
  3292  0DA6  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3293  0DA7  2DA2               	goto	u2847
  3294                           
  3295                           ;launcher_functions.c: 335: PORTAbits.RA6 = 0;
  3296  0DA8  0020               	movlb	0	; select bank0
  3297  0DA9  130C               	bcf	12,6	;volatile
  3298                           
  3299                           ;launcher_functions.c: 336: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3300  0DAA  3015               	movlw	21
  3301  0DAB  00A2               	movwf	??_ToggleSleepGPS+2
  3302  0DAC  304B               	movlw	75
  3303  0DAD  00A1               	movwf	??_ToggleSleepGPS+1
  3304  0DAE  30D1               	movlw	209
  3305  0DAF  00A0               	movwf	??_ToggleSleepGPS
  3306  0DB0                     u2857:	
  3307  0DB0  0BA0               	decfsz	??_ToggleSleepGPS,f
  3308  0DB1  2DB0               	goto	u2857
  3309  0DB2  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3310  0DB3  2DB0               	goto	u2857
  3311  0DB4  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3312  0DB5  2DB0               	goto	u2857
  3313  0DB6  0000               	nop
  3314  0DB7  0008               	return
  3315  0DB8                     __end_of_ToggleSleepGPS:	
  3316                           
  3317                           	psect	text7
  3318  071F                     __ptext7:	
  3319 ;; *************** function _SetupGPS *****************
  3320 ;; Defined at:
  3321 ;;		line 347 in file "launcher_functions.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  message        50    0[BANK1 ] unsigned char [50]
  3326 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  3327 ;;  MID             4   56[BANK1 ] unsigned char [4]
  3328 ;;  x               2   60[BANK1 ] int 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3338 ;;      Params:         0       0       0       0       0       0       0       0
  3339 ;;      Locals:         0       0      62       0       0       0       0       0
  3340 ;;      Temps:          0       3       0       0       0       0       0       0
  3341 ;;      Totals:         0       3      62       0       0       0       0       0
  3342 ;;Total ram usage:       65 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    4
  3345 ;; This function calls:
  3346 ;;		_sprintf
  3347 ;;		_uart_write_message
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function _SetupGPS
  3355  071F                     _SetupGPS:	
  3356                           
  3357                           ;launcher_functions.c: 349: int x;
  3358                           ;launcher_functions.c: 350: unsigned char startSequence[6] = "$PSRF";
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3362  071F  3066               	movlw	low SetupGPS@F4924
  3363  0720  0086               	movwf	6
  3364  0721  3001               	movlw	high SetupGPS@F4924
  3365  0722  0087               	movwf	7
  3366  0723  30D2               	movlw	low SetupGPS@startSequence
  3367  0724  0084               	movwf	4
  3368  0725  3000               	movlw	high SetupGPS@startSequence
  3369  0726  0085               	movwf	5
  3370  0727  3006               	movlw	6
  3371  0728  0020               	movlb	0	; select bank0
  3372  0729  00C1               	movwf	??_SetupGPS
  3373  072A                     u2150:	
  3374  072A  0016               	moviw fsr1++
  3375  072B  001A               	movwi fsr0++
  3376  072C  0BC1               	decfsz	??_SetupGPS,f
  3377  072D  2F2A               	goto	u2150
  3378                           
  3379                           ;launcher_functions.c: 351: unsigned char MID[4] = "103";
  3380  072E  0021               	movlb	1	; select bank1
  3381  072F  086B               	movf	(SetupGPS@F4926+3)^(0+128),w
  3382  0730  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  3383  0731  086A               	movf	(SetupGPS@F4926+2)^(0+128),w
  3384  0732  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  3385  0733  0869               	movf	(SetupGPS@F4926+1)^(0+128),w
  3386  0734  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  3387  0735  0868               	movf	SetupGPS@F4926^(0+128),w
  3388  0736  00D8               	movwf	SetupGPS@MID^(0+128)
  3389                           
  3390                           ;launcher_functions.c: 352: unsigned char message[50];
  3391                           ;launcher_functions.c: 355: for(x = 0; x < 6; x++)
  3392  0737  01DC               	clrf	SetupGPS@x^(0+128)
  3393  0738  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  3394  0739  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3395  073A  3A80               	xorlw	128
  3396  073B  0020               	movlb	0	; select bank0
  3397  073C  00C1               	movwf	??_SetupGPS
  3398  073D  3080               	movlw	128
  3399  073E  0241               	subwf	??_SetupGPS,w
  3400  073F  1D03               	skipz
  3401  0740  2F44               	goto	u2165
  3402  0741  3006               	movlw	6
  3403  0742  0021               	movlb	1	; select bank1
  3404  0743  025C               	subwf	SetupGPS@x^(0+128),w
  3405  0744                     u2165:	
  3406  0744  1803               	btfsc	3,0
  3407  0745  2F8A               	goto	l2645
  3408  0746                     l2635:	
  3409                           
  3410                           ;launcher_functions.c: 356: {
  3411                           ;launcher_functions.c: 357: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3412  0746  3015               	movlw	21
  3413  0747  0020               	movlb	0	; select bank0
  3414  0748  00C3               	movwf	??_SetupGPS+2
  3415  0749  304B               	movlw	75
  3416  074A  00C2               	movwf	??_SetupGPS+1
  3417  074B  30D1               	movlw	209
  3418  074C  00C1               	movwf	??_SetupGPS
  3419  074D                     u2867:	
  3420  074D  0BC1               	decfsz	??_SetupGPS,f
  3421  074E  2F4D               	goto	u2867
  3422  074F  0BC2               	decfsz	??_SetupGPS+1,f
  3423  0750  2F4D               	goto	u2867
  3424  0751  0BC3               	decfsz	??_SetupGPS+2,f
  3425  0752  2F4D               	goto	u2867
  3426  0753  0000               	nop
  3427                           
  3428                           ;launcher_functions.c: 358: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3429  0754  3031               	movlw	low (STR_1| (0+32768))
  3430  0755  0020               	movlb	0	; select bank0
  3431  0756  00AE               	movwf	sprintf@f
  3432  0757  3088               	movlw	high (STR_1| (0+32768))
  3433  0758  00AF               	movwf	sprintf@f+1
  3434  0759  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3435  075A  00C1               	movwf	??_SetupGPS
  3436  075B  0841               	movf	??_SetupGPS,w
  3437  075C  00B0               	movwf	?_sprintf+2
  3438  075D  30D8               	movlw	SetupGPS@MID& (0+255)
  3439  075E  00C2               	movwf	??_SetupGPS+1
  3440  075F  0842               	movf	??_SetupGPS+1,w
  3441  0760  00B1               	movwf	?_sprintf+3
  3442  0761  0021               	movlb	1	; select bank1
  3443  0762  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3444  0763  0020               	movlb	0	; select bank0
  3445  0764  01B3               	clrf	?_sprintf+5
  3446  0765  07B3               	addwf	?_sprintf+5,f
  3447  0766  0021               	movlb	1	; select bank1
  3448  0767  085C               	movf	SetupGPS@x^(0+128),w
  3449  0768  0020               	movlb	0	; select bank0
  3450  0769  01B2               	clrf	?_sprintf+4
  3451  076A  07B2               	addwf	?_sprintf+4,f
  3452  076B  30A0               	movlw	SetupGPS@message& (0+255)
  3453  076C  3185  2525  3187   	fcall	_sprintf
  3454                           
  3455                           ;launcher_functions.c: 359: uart_write_message(message, 22);
  3456  076F  3016               	movlw	22
  3457  0770  0020               	movlb	0	; select bank0
  3458  0771  00A8               	movwf	uart_write_message@size
  3459  0772  3000               	movlw	0
  3460  0773  00A9               	movwf	uart_write_message@size+1
  3461  0774  30A0               	movlw	SetupGPS@message& (0+255)
  3462  0775  318F  278A  3187   	fcall	_uart_write_message
  3463  0778  3001               	movlw	1
  3464  0779  0021               	movlb	1	; select bank1
  3465  077A  07DC               	addwf	SetupGPS@x^(0+128),f
  3466  077B  3000               	movlw	0
  3467  077C  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  3468  077D  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3469  077E  3A80               	xorlw	128
  3470  077F  0020               	movlb	0	; select bank0
  3471  0780  00C1               	movwf	??_SetupGPS
  3472  0781  3080               	movlw	128
  3473  0782  0241               	subwf	??_SetupGPS,w
  3474  0783  1D03               	skipz
  3475  0784  2F88               	goto	u2175
  3476  0785  3006               	movlw	6
  3477  0786  0021               	movlb	1	; select bank1
  3478  0787  025C               	subwf	SetupGPS@x^(0+128),w
  3479  0788                     u2175:	
  3480  0788  1C03               	skipc
  3481  0789  2F46               	goto	l2635
  3482  078A                     l2645:	
  3483                           
  3484                           ;launcher_functions.c: 360: }
  3485                           ;launcher_functions.c: 362: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3486  078A  3015               	movlw	21
  3487  078B  0020               	movlb	0	; select bank0
  3488  078C  00C3               	movwf	??_SetupGPS+2
  3489  078D  304B               	movlw	75
  3490  078E  00C2               	movwf	??_SetupGPS+1
  3491  078F  30D1               	movlw	209
  3492  0790  00C1               	movwf	??_SetupGPS
  3493  0791                     u2877:	
  3494  0791  0BC1               	decfsz	??_SetupGPS,f
  3495  0792  2F91               	goto	u2877
  3496  0793  0BC2               	decfsz	??_SetupGPS+1,f
  3497  0794  2F91               	goto	u2877
  3498  0795  0BC3               	decfsz	??_SetupGPS+2,f
  3499  0796  2F91               	goto	u2877
  3500  0797  0000               	nop
  3501                           
  3502                           ;launcher_functions.c: 368: sprintf(message, "%s104,40.441944,-86.9125,0,0,0,0,12,2*", s
      +                          tartSequence);
  3503  0798  300A               	movlw	low (STR_2| (0+32768))
  3504  0799  0020               	movlb	0	; select bank0
  3505  079A  00AE               	movwf	sprintf@f
  3506  079B  3088               	movlw	high (STR_2| (0+32768))
  3507  079C  00AF               	movwf	sprintf@f+1
  3508  079D  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3509  079E  00C1               	movwf	??_SetupGPS
  3510  079F  0841               	movf	??_SetupGPS,w
  3511  07A0  00B0               	movwf	?_sprintf+2
  3512  07A1  30A0               	movlw	SetupGPS@message& (0+255)
  3513  07A2  3185  2525  3187   	fcall	_sprintf
  3514                           
  3515                           ;launcher_functions.c: 369: uart_write_message(message, 42);
  3516  07A5  302A               	movlw	42
  3517  07A6  0020               	movlb	0	; select bank0
  3518  07A7  00A8               	movwf	uart_write_message@size
  3519  07A8  3000               	movlw	0
  3520  07A9  00A9               	movwf	uart_write_message@size+1
  3521  07AA  30A0               	movlw	SetupGPS@message& (0+255)
  3522  07AB  318F  278A         	fcall	_uart_write_message
  3523  07AD  0008               	return
  3524  07AE                     __end_of_SetupGPS:	
  3525                           
  3526                           	psect	text8
  3527  0F8A                     __ptext8:	
  3528 ;; *************** function _uart_write_message *****************
  3529 ;; Defined at:
  3530 ;;		line 302 in file "launcher_functions.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  data            1    wreg     PTR unsigned char 
  3533 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3534 ;;  size            2    8[BANK0 ] int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3537 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3538 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3539 ;;  x               2   17[BANK0 ] int 
  3540 ;;  checksum        1   19[BANK0 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;		None               void
  3543 ;; Registers used:
  3544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3550 ;;      Params:         0       2       0       0       0       0       0       0
  3551 ;;      Locals:         0      10       0       0       0       0       0       0
  3552 ;;      Temps:          0       3       0       0       0       0       0       0
  3553 ;;      Totals:         0      15       0       0       0       0       0       0
  3554 ;;Total ram usage:       15 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    3
  3557 ;; This function calls:
  3558 ;;		_compute_checksum
  3559 ;;		_uart_xmit
  3560 ;; This function is called by:
  3561 ;;		_SetupGPS
  3562 ;;		_UpdateGPS
  3563 ;;		_DisableGPS
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _uart_write_message
  3569  0F8A                     _uart_write_message:	
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3573                           ;uart_write_message@data stored from wreg
  3574  0F8A  0020               	movlb	0	; select bank0
  3575  0F8B  00B4               	movwf	uart_write_message@data
  3576                           
  3577                           ;launcher_functions.c: 304: int x;
  3578                           ;launcher_functions.c: 305: unsigned char checksum;
  3579                           ;launcher_functions.c: 306: unsigned char ascii_checksum[2];
  3580                           ;launcher_functions.c: 308: checksum = compute_checksum(data, size);
  3581  0F8C  0829               	movf	uart_write_message@size+1,w
  3582  0F8D  01A1               	clrf	compute_checksum@size+1
  3583  0F8E  07A1               	addwf	compute_checksum@size+1,f
  3584  0F8F  0828               	movf	uart_write_message@size,w
  3585  0F90  01A0               	clrf	compute_checksum@size
  3586  0F91  07A0               	addwf	compute_checksum@size,f
  3587  0F92  0834               	movf	uart_write_message@data,w
  3588  0F93  318E  261E  318F   	fcall	_compute_checksum
  3589  0F96  0020               	movlb	0	; select bank0
  3590  0F97  00AA               	movwf	??_uart_write_message
  3591  0F98  082A               	movf	??_uart_write_message,w
  3592  0F99  00B3               	movwf	uart_write_message@checksum
  3593                           
  3594                           ;launcher_functions.c: 309: ascii_checksum[0] = checksum >> 4;
  3595  0F9A  0833               	movf	uart_write_message@checksum,w
  3596  0F9B  00AA               	movwf	??_uart_write_message
  3597  0F9C  3004               	movlw	4
  3598  0F9D                     u1815:	
  3599  0F9D  36AA               	lsrf	??_uart_write_message,f
  3600  0F9E  0B89               	decfsz	9,f
  3601  0F9F  2F9D               	goto	u1815
  3602  0FA0  082A               	movf	??_uart_write_message,w
  3603  0FA1  00AB               	movwf	??_uart_write_message+1
  3604  0FA2  082B               	movf	??_uart_write_message+1,w
  3605  0FA3  00B5               	movwf	uart_write_message@ascii_checksum
  3606                           
  3607                           ;launcher_functions.c: 310: ascii_checksum[1] = checksum & 0x0F;
  3608  0FA4  0833               	movf	uart_write_message@checksum,w
  3609  0FA5  390F               	andlw	15
  3610  0FA6  00AA               	movwf	??_uart_write_message
  3611  0FA7  082A               	movf	??_uart_write_message,w
  3612  0FA8  00B6               	movwf	uart_write_message@ascii_checksum+1
  3613                           
  3614                           ;launcher_functions.c: 312: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3615  0FA9  300A               	movlw	10
  3616  0FAA  0235               	subwf	uart_write_message@ascii_checksum,w
  3617  0FAB  1C03               	skipc
  3618  0FAC  2FAF               	goto	l2231
  3619  0FAD  3037               	movlw	55
  3620  0FAE  2FB0               	goto	L1
  3621  0FAF                     l2231:	
  3622  0FAF  3030               	movlw	48
  3623  0FB0                     L1:	
  3624  0FB0  00AD               	movwf	_uart_write_message$1401
  3625  0FB1  3000               	movlw	0
  3626  0FB2  00AE               	movwf	_uart_write_message$1401+1
  3627  0FB3  082D               	movf	_uart_write_message$1401,w
  3628  0FB4  00AA               	movwf	??_uart_write_message
  3629  0FB5  082A               	movf	??_uart_write_message,w
  3630  0FB6  07B5               	addwf	uart_write_message@ascii_checksum,f
  3631                           
  3632                           ;launcher_functions.c: 313: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3633  0FB7  300A               	movlw	10
  3634  0FB8  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3635  0FB9  1C03               	skipc
  3636  0FBA  2FBD               	goto	l2239
  3637  0FBB  3037               	movlw	55
  3638  0FBC  2FBE               	goto	L2
  3639  0FBD                     l2239:	
  3640  0FBD  3030               	movlw	48
  3641  0FBE                     L2:	
  3642  0FBE  00AF               	movwf	_uart_write_message$1402
  3643  0FBF  3000               	movlw	0
  3644  0FC0  00B0               	movwf	_uart_write_message$1402+1
  3645  0FC1  082F               	movf	_uart_write_message$1402,w
  3646  0FC2  00AA               	movwf	??_uart_write_message
  3647  0FC3  082A               	movf	??_uart_write_message,w
  3648  0FC4  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3649                           
  3650                           ;launcher_functions.c: 315: for(x=0; x<size-1; x++)
  3651  0FC5  01B1               	clrf	uart_write_message@x
  3652  0FC6  01B2               	clrf	uart_write_message@x+1
  3653  0FC7                     l2249:	
  3654  0FC7  0828               	movf	uart_write_message@size,w
  3655  0FC8  3EFF               	addlw	255
  3656  0FC9  00AA               	movwf	??_uart_write_message
  3657  0FCA  30FF               	movlw	255
  3658  0FCB  3D29               	addwfc	uart_write_message@size+1,w
  3659  0FCC  00AB               	movwf	??_uart_write_message+1
  3660  0FCD  0832               	movf	uart_write_message@x+1,w
  3661  0FCE  3A80               	xorlw	128
  3662  0FCF  00AC               	movwf	??_uart_write_message+2
  3663  0FD0  082B               	movf	??_uart_write_message+1,w
  3664  0FD1  3A80               	xorlw	128
  3665  0FD2  022C               	subwf	??_uart_write_message+2,w
  3666  0FD3  1D03               	skipz
  3667  0FD4  2FD7               	goto	u1845
  3668  0FD5  082A               	movf	??_uart_write_message,w
  3669  0FD6  0231               	subwf	uart_write_message@x,w
  3670  0FD7                     u1845:	
  3671  0FD7  1803               	btfsc	3,0
  3672  0FD8  2FEA               	goto	l2251
  3673                           
  3674                           ;launcher_functions.c: 316: {
  3675                           ;launcher_functions.c: 317: uart_xmit(data[x]);
  3676  0FD9  0020               	movlb	0	; select bank0
  3677  0FDA  0831               	movf	uart_write_message@x,w
  3678  0FDB  0734               	addwf	uart_write_message@data,w
  3679  0FDC  00AA               	movwf	??_uart_write_message
  3680  0FDD  082A               	movf	??_uart_write_message,w
  3681  0FDE  0086               	movwf	6
  3682  0FDF  0187               	clrf	7
  3683  0FE0  0801               	movf	1,w
  3684  0FE1  318C  241E  318F   	fcall	_uart_xmit
  3685  0FE4  3001               	movlw	1
  3686  0FE5  0020               	movlb	0	; select bank0
  3687  0FE6  07B1               	addwf	uart_write_message@x,f
  3688  0FE7  3000               	movlw	0
  3689  0FE8  3DB2               	addwfc	uart_write_message@x+1,f
  3690  0FE9  2FC7               	goto	l2249
  3691  0FEA                     l2251:	
  3692                           
  3693                           ;launcher_functions.c: 318: }
  3694                           ;launcher_functions.c: 319: uart_xmit(ascii_checksum[0]);
  3695  0FEA  0020               	movlb	0	; select bank0
  3696  0FEB  0835               	movf	uart_write_message@ascii_checksum,w
  3697  0FEC  318C  241E  318F   	fcall	_uart_xmit
  3698                           
  3699                           ;launcher_functions.c: 320: uart_xmit(ascii_checksum[1]);
  3700  0FEF  0020               	movlb	0	; select bank0
  3701  0FF0  0836               	movf	uart_write_message@ascii_checksum+1,w
  3702  0FF1  318C  241E  318F   	fcall	_uart_xmit
  3703                           
  3704                           ;launcher_functions.c: 322: uart_xmit(0x0D);
  3705  0FF4  300D               	movlw	13
  3706  0FF5  318C  241E  318F   	fcall	_uart_xmit
  3707                           
  3708                           ;launcher_functions.c: 323: uart_xmit(0x0A);
  3709  0FF8  300A               	movlw	10
  3710  0FF9  318C  241E  318F   	fcall	_uart_xmit
  3711  0FFC                     l367:	
  3712                           ;launcher_functions.c: 324: while(!TXSTAbits.TRMT);
  3713                           
  3714  0FFC  0023               	movlb	3	; select bank3
  3715  0FFD  189E               	btfsc	30,1	;volatile
  3716  0FFE  0008               	return
  3717  0FFF  2FFC               	goto	l367
  3718  1000                     __end_of_uart_write_message:	
  3719                           
  3720                           	psect	text9
  3721  0C1E                     __ptext9:	
  3722 ;; *************** function _uart_xmit *****************
  3723 ;; Defined at:
  3724 ;;		line 294 in file "launcher_functions.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  mydata_byte     1    wreg     unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		wreg
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3738 ;;      Params:         0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       1       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0
  3741 ;;      Totals:         0       1       0       0       0       0       0       0
  3742 ;;Total ram usage:        1 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    2
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_uart_write_message
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _uart_xmit
  3754  0C1E                     _uart_xmit:	
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _uart_xmit: [wreg]
  3758                           ;uart_xmit@mydata_byte stored from wreg
  3759  0C1E  0020               	movlb	0	; select bank0
  3760  0C1F  00A0               	movwf	uart_xmit@mydata_byte
  3761  0C20                     l350:	
  3762                           ;launcher_functions.c: 297: while(!TXSTAbits.TRMT);
  3763                           
  3764  0C20  0023               	movlb	3	; select bank3
  3765  0C21  1C9E               	btfss	30,1	;volatile
  3766  0C22  2C20               	goto	l350
  3767                           
  3768                           ;launcher_functions.c: 298: TXREG = mydata_byte;
  3769  0C23  0020               	movlb	0	; select bank0
  3770  0C24  0820               	movf	uart_xmit@mydata_byte,w
  3771  0C25  0023               	movlb	3	; select bank3
  3772  0C26  009A               	movwf	26	;volatile
  3773  0C27  0008               	return
  3774  0C28                     __end_of_uart_xmit:	
  3775                           
  3776                           	psect	text10
  3777  0E1E                     __ptext10:	
  3778 ;; *************** function _compute_checksum *****************
  3779 ;; Defined at:
  3780 ;;		line 282 in file "launcher_functions.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  data            1    wreg     PTR unsigned char 
  3783 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3784 ;;  size            2    0[BANK0 ] int 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3787 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3788 ;;  x               2    6[BANK0 ] int 
  3789 ;;  checksum        1    4[BANK0 ] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      unsigned char 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3799 ;;      Params:         0       2       0       0       0       0       0       0
  3800 ;;      Locals:         0       4       0       0       0       0       0       0
  3801 ;;      Temps:          0       2       0       0       0       0       0       0
  3802 ;;      Totals:         0       8       0       0       0       0       0       0
  3803 ;;Total ram usage:        8 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    2
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_uart_write_message
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           
  3814                           ;psect for function _compute_checksum
  3815  0E1E                     _compute_checksum:	
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3819                           ;compute_checksum@data stored from wreg
  3820  0E1E  0020               	movlb	0	; select bank0
  3821  0E1F  00A5               	movwf	compute_checksum@data
  3822                           
  3823                           ;launcher_functions.c: 284: unsigned char checksum = 0;
  3824  0E20  01A4               	clrf	compute_checksum@checksum
  3825                           
  3826                           ;launcher_functions.c: 285: int x;
  3827                           ;launcher_functions.c: 286: for(x=0; x<size; x++)
  3828  0E21  01A6               	clrf	compute_checksum@x
  3829  0E22  01A7               	clrf	compute_checksum@x+1
  3830  0E23                     l2081:	
  3831  0E23  0827               	movf	compute_checksum@x+1,w
  3832  0E24  3A80               	xorlw	128
  3833  0E25  00A2               	movwf	??_compute_checksum
  3834  0E26  0821               	movf	compute_checksum@size+1,w
  3835  0E27  3A80               	xorlw	128
  3836  0E28  0222               	subwf	??_compute_checksum,w
  3837  0E29  1D03               	skipz
  3838  0E2A  2E2D               	goto	u1495
  3839  0E2B  0820               	movf	compute_checksum@size,w
  3840  0E2C  0226               	subwf	compute_checksum@x,w
  3841  0E2D                     u1495:	
  3842  0E2D  1803               	btfsc	3,0
  3843  0E2E  2E5D               	goto	l2083
  3844                           
  3845                           ;launcher_functions.c: 287: {
  3846                           ;launcher_functions.c: 288: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3847  0E2F  0020               	movlb	0	; select bank0
  3848  0E30  0826               	movf	compute_checksum@x,w
  3849  0E31  0725               	addwf	compute_checksum@data,w
  3850  0E32  00A2               	movwf	??_compute_checksum
  3851  0E33  0822               	movf	??_compute_checksum,w
  3852  0E34  0086               	movwf	6
  3853  0E35  0187               	clrf	7
  3854  0E36  0801               	movf	1,w
  3855  0E37  3A24               	xorlw	36
  3856  0E38  1903               	skipnz
  3857  0E39  2E58               	goto	l2079
  3858  0E3A  0826               	movf	compute_checksum@x,w
  3859  0E3B  0725               	addwf	compute_checksum@data,w
  3860  0E3C  00A2               	movwf	??_compute_checksum
  3861  0E3D  0822               	movf	??_compute_checksum,w
  3862  0E3E  0086               	movwf	6
  3863  0E3F  0187               	clrf	7
  3864  0E40  0801               	movf	1,w
  3865  0E41  3A2A               	xorlw	42
  3866  0E42  1903               	skipnz
  3867  0E43  2E58               	goto	l2079
  3868  0E44  0826               	movf	compute_checksum@x,w
  3869  0E45  0725               	addwf	compute_checksum@data,w
  3870  0E46  00A2               	movwf	??_compute_checksum
  3871  0E47  0822               	movf	??_compute_checksum,w
  3872  0E48  0086               	movwf	6
  3873  0E49  0187               	clrf	7
  3874  0E4A  0801               	movf	1,w
  3875  0E4B  3A21               	xorlw	33
  3876  0E4C  1903               	skipnz
  3877  0E4D  2E58               	goto	l2079
  3878                           
  3879                           ;launcher_functions.c: 289: checksum ^= data[x];
  3880  0E4E  0826               	movf	compute_checksum@x,w
  3881  0E4F  0725               	addwf	compute_checksum@data,w
  3882  0E50  00A2               	movwf	??_compute_checksum
  3883  0E51  0822               	movf	??_compute_checksum,w
  3884  0E52  0086               	movwf	6
  3885  0E53  0187               	clrf	7
  3886  0E54  0801               	movf	1,w
  3887  0E55  00A3               	movwf	??_compute_checksum+1
  3888  0E56  0823               	movf	??_compute_checksum+1,w
  3889  0E57  06A4               	xorwf	compute_checksum@checksum,f
  3890  0E58                     l2079:	
  3891  0E58  3001               	movlw	1
  3892  0E59  07A6               	addwf	compute_checksum@x,f
  3893  0E5A  3000               	movlw	0
  3894  0E5B  3DA7               	addwfc	compute_checksum@x+1,f
  3895  0E5C  2E23               	goto	l2081
  3896  0E5D                     l2083:	
  3897                           
  3898                           ;launcher_functions.c: 290: }
  3899                           ;launcher_functions.c: 291: return checksum;
  3900  0E5D  0020               	movlb	0	; select bank0
  3901  0E5E  0824               	movf	compute_checksum@checksum,w
  3902  0E5F  0008               	return
  3903  0E60                     __end_of_compute_checksum:	
  3904                           
  3905                           	psect	text11
  3906  0525                     __ptext11:	
  3907 ;; *************** function _sprintf *****************
  3908 ;; Defined at:
  3909 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  sp              1    wreg     PTR unsigned char 
  3912 ;;		 -> SetupGPS@message(50), 
  3913 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3914 ;;		 -> STR_2(39), STR_1(19), 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  3917 ;;		 -> SetupGPS@message(50), 
  3918 ;;  _val            4   28[BANK0 ] struct .
  3919 ;;  c               1   32[BANK0 ] char 
  3920 ;;  ap              1   26[BANK0 ] PTR void [1]
  3921 ;;		 -> ?_sprintf(2), 
  3922 ;;  prec            1   25[BANK0 ] char 
  3923 ;;  flag            1   24[BANK0 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   14[BANK0 ] int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3933 ;;      Params:         0       6       0       0       0       0       0       0
  3934 ;;      Locals:         0       9       0       0       0       0       0       0
  3935 ;;      Temps:          0       4       0       0       0       0       0       0
  3936 ;;      Totals:         0      19       0       0       0       0       0       0
  3937 ;;Total ram usage:       19 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    3
  3940 ;; This function calls:
  3941 ;;		___lwdiv
  3942 ;;		___lwmod
  3943 ;; This function is called by:
  3944 ;;		_SetupGPS
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function _sprintf
  3950  0525                     _sprintf:	
  3951                           
  3952                           ;incstack = 0
  3953                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3954                           ;sprintf@sp stored from wreg
  3955  0525  0020               	movlb	0	; select bank0
  3956  0526  00BB               	movwf	sprintf@sp
  3957                           
  3958                           ;doprnt.c: 494: va_list ap;
  3959                           ;doprnt.c: 499: signed char c;
  3960                           ;doprnt.c: 506: signed char prec;
  3961                           ;doprnt.c: 508: unsigned char flag;
  3962                           ;doprnt.c: 527: union {
  3963                           ;doprnt.c: 528: unsigned int _val;
  3964                           ;doprnt.c: 529: struct {
  3965                           ;doprnt.c: 530: const char * _cp;
  3966                           ;doprnt.c: 531: unsigned _len;
  3967                           ;doprnt.c: 532: } _str;
  3968                           ;doprnt.c: 533: } _val;
  3969                           ;doprnt.c: 542: *ap = __va_start();
  3970  0527  3030               	movlw	(?_sprintf+2)& (0+255)
  3971  0528  00B4               	movwf	??_sprintf
  3972  0529  0834               	movf	??_sprintf,w
  3973  052A  00BA               	movwf	sprintf@ap
  3974  052B                     l2321:	
  3975                           ;doprnt.c: 545: while(c = *f++) {
  3976                           
  3977  052B  082F               	movf	sprintf@f+1,w
  3978  052C  00B5               	movwf	??_sprintf+1
  3979  052D  082E               	movf	sprintf@f,w
  3980  052E  00B4               	movwf	??_sprintf
  3981  052F  0AAE               	incf	sprintf@f,f
  3982  0530  1903               	skipnz
  3983  0531  0AAF               	incf	sprintf@f+1,f
  3984  0532  0834               	movf	??_sprintf,w
  3985  0533  0084               	movwf	4
  3986  0534  0835               	movf	??_sprintf+1,w
  3987  0535  0085               	movwf	5
  3988  0536  0800               	movf	0,w	;code access
  3989  0537  00B6               	movwf	??_sprintf+2
  3990  0538  0836               	movf	??_sprintf+2,w
  3991  0539  00C0               	movwf	sprintf@c
  3992  053A  08C0               	movf	sprintf@c,f
  3993  053B  1903               	btfsc	3,2
  3994  053C  2E26               	goto	l2323
  3995                           
  3996                           ;doprnt.c: 547: if(c != '%')
  3997  053D  0840               	movf	sprintf@c,w
  3998  053E  3A25               	xorlw	37
  3999  053F  1903               	skipnz
  4000  0540  2D4D               	goto	l2261
  4001                           
  4002                           ;doprnt.c: 549: {
  4003                           ;doprnt.c: 550: ((*sp++ = (c)));
  4004  0541  0840               	movf	sprintf@c,w
  4005  0542  00B4               	movwf	??_sprintf
  4006  0543  083B               	movf	sprintf@sp,w
  4007  0544  0086               	movwf	6
  4008  0545  0187               	clrf	7
  4009  0546  0834               	movf	??_sprintf,w
  4010  0547  0081               	movwf	1
  4011  0548  3001               	movlw	1
  4012  0549  00B4               	movwf	??_sprintf
  4013  054A  0834               	movf	??_sprintf,w
  4014  054B  07BB               	addwf	sprintf@sp,f
  4015                           
  4016                           ;doprnt.c: 551: continue;
  4017  054C  2D2B               	goto	l2321
  4018  054D                     l2261:	
  4019                           
  4020                           ;doprnt.c: 552: }
  4021                           ;doprnt.c: 557: flag = 0;
  4022  054D  01B8               	clrf	sprintf@flag
  4023                           
  4024                           ;doprnt.c: 644: switch(c = *f++) {
  4025  054E  2D7E               	goto	l2281
  4026  054F                     l2263:	
  4027                           ;doprnt.c: 737: case 's':
  4028                           
  4029                           ;doprnt.c: 707: case 'i':
  4030                           ;doprnt.c: 708: break;
  4031                           
  4032                           ;doprnt.c: 706: case 'd':
  4033                           
  4034                           ;doprnt.c: 647: goto alldone;
  4035                           
  4036                           ;doprnt.c: 646: case 0:
  4037                           
  4038                           
  4039                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  4040  054F  083A               	movf	sprintf@ap,w
  4041  0550  0086               	movwf	6
  4042  0551  0187               	clrf	7
  4043  0552  0801               	movf	1,w
  4044  0553  00BC               	movwf	sprintf@_val
  4045  0554  3000               	movlw	0
  4046  0555  00BD               	movwf	sprintf@_val+1
  4047  0556  3001               	movlw	1
  4048  0557  00B4               	movwf	??_sprintf
  4049  0558  0834               	movf	??_sprintf,w
  4050  0559  07BA               	addwf	sprintf@ap,f
  4051                           
  4052                           ;doprnt.c: 749: if(!_val._str._cp)
  4053  055A  083D               	movf	sprintf@_val+1,w
  4054  055B  043C               	iorwf	sprintf@_val,w
  4055  055C  1D03               	skipz
  4056  055D  2D62               	goto	l2277
  4057                           
  4058                           ;doprnt.c: 750: _val._str._cp = "(null)";
  4059  055E  3044               	movlw	low (STR_3| (0+32768))
  4060  055F  00BC               	movwf	sprintf@_val
  4061  0560  3088               	movlw	high (STR_3| (0+32768))
  4062  0561  00BD               	movwf	sprintf@_val+1
  4063  0562                     l2277:	
  4064                           ;doprnt.c: 786: while(*_val._str._cp)
  4065                           
  4066  0562  083C               	movf	sprintf@_val,w
  4067  0563  0084               	movwf	4
  4068  0564  083D               	movf	sprintf@_val+1,w
  4069  0565  0085               	movwf	5
  4070  0566  0800               	movf	0,w	;code access
  4071  0567  3800               	iorlw	0
  4072  0568  1903               	btfsc	3,2
  4073  0569  2D2B               	goto	l2321
  4074                           
  4075                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  4076  056A  083C               	movf	sprintf@_val,w
  4077  056B  0084               	movwf	4
  4078  056C  083D               	movf	sprintf@_val+1,w
  4079  056D  0085               	movwf	5
  4080  056E  0800               	movf	0,w	;code access
  4081  056F  00B4               	movwf	??_sprintf
  4082  0570  083B               	movf	sprintf@sp,w
  4083  0571  0086               	movwf	6
  4084  0572  0187               	clrf	7
  4085  0573  0834               	movf	??_sprintf,w
  4086  0574  0081               	movwf	1
  4087  0575  3001               	movlw	1
  4088  0576  07BC               	addwf	sprintf@_val,f
  4089  0577  3000               	movlw	0
  4090  0578  3DBD               	addwfc	sprintf@_val+1,f
  4091  0579  3001               	movlw	1
  4092  057A  00B4               	movwf	??_sprintf
  4093  057B  0834               	movf	??_sprintf,w
  4094  057C  07BB               	addwf	sprintf@sp,f
  4095  057D  2D62               	goto	l2277
  4096  057E                     l2281:	
  4097                           ;doprnt.c: 831: }
  4098                           
  4099                           ;doprnt.c: 822: continue;
  4100                           
  4101                           ;doprnt.c: 811: default:
  4102                           
  4103                           ;doprnt.c: 788: continue;
  4104                           
  4105  057E  082F               	movf	sprintf@f+1,w
  4106  057F  00B5               	movwf	??_sprintf+1
  4107  0580  082E               	movf	sprintf@f,w
  4108  0581  00B4               	movwf	??_sprintf
  4109  0582  0AAE               	incf	sprintf@f,f
  4110  0583  1903               	skipnz
  4111  0584  0AAF               	incf	sprintf@f+1,f
  4112  0585  0834               	movf	??_sprintf,w
  4113  0586  0084               	movwf	4
  4114  0587  0835               	movf	??_sprintf+1,w
  4115  0588  0085               	movwf	5
  4116  0589  0800               	movf	0,w	;code access
  4117  058A  00C0               	movwf	sprintf@c
  4118                           
  4119                           ; Switch size 1, requested type "space"
  4120                           ; Number of cases is 4, Range of values is 0 to 115
  4121                           ; switch strategies available:
  4122                           ; Name         Instructions Cycles
  4123                           ; simple_byte           13     7 (average)
  4124                           ; direct_byte          238     6 (fixed)
  4125                           ; jumptable            260     6 (fixed)
  4126                           ;	Chosen strategy is simple_byte
  4127  058B  3A00               	xorlw	0	; case 0
  4128  058C  1903               	skipnz
  4129  058D  2E26               	goto	l2323
  4130  058E  3A64               	xorlw	100	; case 100
  4131  058F  1903               	skipnz
  4132  0590  2D98               	goto	l2283
  4133  0591  3A0D               	xorlw	13	; case 105
  4134  0592  1903               	skipnz
  4135  0593  2D98               	goto	l2283
  4136  0594  3A1A               	xorlw	26	; case 115
  4137  0595  1903               	skipnz
  4138  0596  2D4F               	goto	l2263
  4139  0597  2D2B               	goto	l2321
  4140  0598                     l2283:	
  4141                           
  4142                           ;doprnt.c: 1262: {
  4143                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4144  0598  083A               	movf	sprintf@ap,w
  4145  0599  0086               	movwf	6
  4146  059A  0187               	clrf	7
  4147  059B  3F40               	moviw [0]fsr1
  4148  059C  00BC               	movwf	sprintf@_val
  4149  059D  3F41               	moviw [1]fsr1
  4150  059E  00BD               	movwf	sprintf@_val+1
  4151  059F  3002               	movlw	2
  4152  05A0  00B4               	movwf	??_sprintf
  4153  05A1  0834               	movf	??_sprintf,w
  4154  05A2  07BA               	addwf	sprintf@ap,f
  4155                           
  4156                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4157  05A3  1FBD               	btfss	sprintf@_val+1,7
  4158  05A4  2DAE               	goto	l2293
  4159                           
  4160                           ;doprnt.c: 1271: flag |= 0x03;
  4161  05A5  3003               	movlw	3
  4162  05A6  00B4               	movwf	??_sprintf
  4163  05A7  0834               	movf	??_sprintf,w
  4164  05A8  04B8               	iorwf	sprintf@flag,f
  4165                           
  4166                           ;doprnt.c: 1272: _val._val = -_val._val;
  4167  05A9  09BC               	comf	sprintf@_val,f
  4168  05AA  09BD               	comf	sprintf@_val+1,f
  4169  05AB  0ABC               	incf	sprintf@_val,f
  4170  05AC  1903               	skipnz
  4171  05AD  0ABD               	incf	sprintf@_val+1,f
  4172  05AE                     l2293:	
  4173                           
  4174                           ;doprnt.c: 1273: }
  4175                           ;doprnt.c: 1275: }
  4176                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4177  05AE  01C0               	clrf	sprintf@c
  4178  05AF  0AC0               	incf	sprintf@c,f
  4179  05B0  0840               	movf	sprintf@c,w
  4180  05B1  3A05               	xorlw	5
  4181  05B2  1903               	btfsc	3,2
  4182  05B3  2DD3               	goto	l2305
  4183  05B4                     l2297:	
  4184                           
  4185                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4186  05B4  0840               	movf	sprintf@c,w
  4187  05B5  00B4               	movwf	??_sprintf
  4188  05B6  01B5               	clrf	??_sprintf+1
  4189  05B7  35B4               	lslf	??_sprintf,f
  4190  05B8  0DB5               	rlf	??_sprintf+1,f
  4191  05B9  3000               	movlw	low (_dpowers| (0+32768))
  4192  05BA  0734               	addwf	??_sprintf,w
  4193  05BB  0084               	movwf	4
  4194  05BC  3088               	movlw	high (_dpowers| (0+32768))
  4195  05BD  3D35               	addwfc	??_sprintf+1,w
  4196  05BE  0085               	movwf	5
  4197  05BF  3F00               	moviw [0]fsr0
  4198  05C0  00B6               	movwf	??_sprintf+2
  4199  05C1  3F01               	moviw [1]fsr0
  4200  05C2  00B7               	movwf	??_sprintf+3
  4201  05C3  0837               	movf	??_sprintf+3,w
  4202  05C4  023D               	subwf	sprintf@_val+1,w
  4203  05C5  1D03               	skipz
  4204  05C6  2DC9               	goto	u1915
  4205  05C7  0836               	movf	??_sprintf+2,w
  4206  05C8  023C               	subwf	sprintf@_val,w
  4207  05C9                     u1915:	
  4208  05C9  1C03               	btfss	3,0
  4209  05CA  2DD3               	goto	l2305
  4210                           
  4211                           ;doprnt.c: 1316: break;
  4212  05CB  3001               	movlw	1
  4213  05CC  00B4               	movwf	??_sprintf
  4214  05CD  0834               	movf	??_sprintf,w
  4215  05CE  07C0               	addwf	sprintf@c,f
  4216  05CF  0840               	movf	sprintf@c,w
  4217  05D0  3A05               	xorlw	5
  4218  05D1  1D03               	skipz
  4219  05D2  2DB4               	goto	l2297
  4220  05D3                     l2305:	
  4221                           
  4222                           ;doprnt.c: 1431: {
  4223                           ;doprnt.c: 1447: if(flag & 0x03)
  4224  05D3  0838               	movf	sprintf@flag,w
  4225  05D4  3903               	andlw	3
  4226  05D5  1903               	btfsc	3,2
  4227  05D6  2DE2               	goto	l2311
  4228                           
  4229                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4230  05D7  302D               	movlw	45
  4231  05D8  00B4               	movwf	??_sprintf
  4232  05D9  083B               	movf	sprintf@sp,w
  4233  05DA  0086               	movwf	6
  4234  05DB  0187               	clrf	7
  4235  05DC  0834               	movf	??_sprintf,w
  4236  05DD  0081               	movwf	1
  4237  05DE  3001               	movlw	1
  4238  05DF  00B4               	movwf	??_sprintf
  4239  05E0  0834               	movf	??_sprintf,w
  4240  05E1  07BB               	addwf	sprintf@sp,f
  4241  05E2                     l2311:	
  4242                           
  4243                           ;doprnt.c: 1478: }
  4244                           ;doprnt.c: 1481: prec = c;
  4245  05E2  0840               	movf	sprintf@c,w
  4246  05E3  00B4               	movwf	??_sprintf
  4247  05E4  0834               	movf	??_sprintf,w
  4248  05E5  00B9               	movwf	sprintf@prec
  4249  05E6                     l2319:	
  4250                           ;doprnt.c: 1483: while(prec--) {
  4251                           
  4252  05E6  30FF               	movlw	-1
  4253  05E7  00B4               	movwf	??_sprintf
  4254  05E8  0834               	movf	??_sprintf,w
  4255  05E9  07B9               	addwf	sprintf@prec,f
  4256  05EA  0839               	movf	sprintf@prec,w
  4257  05EB  3AFF               	xorlw	255
  4258  05EC  1903               	btfsc	3,2
  4259  05ED  2D2B               	goto	l2321
  4260                           
  4261                           ;doprnt.c: 1487: {
  4262                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4263  05EE  300A               	movlw	10
  4264  05EF  00A8               	movwf	___lwmod@divisor
  4265  05F0  3000               	movlw	0
  4266  05F1  00A9               	movwf	___lwmod@divisor+1
  4267  05F2  0839               	movf	sprintf@prec,w
  4268  05F3  00B4               	movwf	??_sprintf
  4269  05F4  01B5               	clrf	??_sprintf+1
  4270  05F5  35B4               	lslf	??_sprintf,f
  4271  05F6  0DB5               	rlf	??_sprintf+1,f
  4272  05F7  3000               	movlw	low (_dpowers| (0+32768))
  4273  05F8  0734               	addwf	??_sprintf,w
  4274  05F9  0084               	movwf	4
  4275  05FA  3088               	movlw	high (_dpowers| (0+32768))
  4276  05FB  3D35               	addwfc	??_sprintf+1,w
  4277  05FC  0085               	movwf	5
  4278  05FD  3F00               	moviw [0]fsr0
  4279  05FE  00A0               	movwf	___lwdiv@divisor
  4280  05FF  3F01               	moviw [1]fsr0
  4281  0600  00A1               	movwf	___lwdiv@divisor+1
  4282  0601  083D               	movf	sprintf@_val+1,w
  4283  0602  01A3               	clrf	___lwdiv@dividend+1
  4284  0603  07A3               	addwf	___lwdiv@dividend+1,f
  4285  0604  083C               	movf	sprintf@_val,w
  4286  0605  01A2               	clrf	___lwdiv@dividend
  4287  0606  07A2               	addwf	___lwdiv@dividend,f
  4288  0607  318D  25E7  3185   	fcall	___lwdiv
  4289  060A  0020               	movlb	0	; select bank0
  4290  060B  0821               	movf	?___lwdiv+1,w
  4291  060C  01AB               	clrf	___lwmod@dividend+1
  4292  060D  07AB               	addwf	___lwmod@dividend+1,f
  4293  060E  0820               	movf	?___lwdiv,w
  4294  060F  01AA               	clrf	___lwmod@dividend
  4295  0610  07AA               	addwf	___lwmod@dividend,f
  4296  0611  318D  25B8  3185   	fcall	___lwmod
  4297  0614  0020               	movlb	0	; select bank0
  4298  0615  0828               	movf	?___lwmod,w
  4299  0616  3E30               	addlw	48
  4300  0617  00B6               	movwf	??_sprintf+2
  4301  0618  0836               	movf	??_sprintf+2,w
  4302  0619  00C0               	movwf	sprintf@c
  4303                           
  4304                           ;doprnt.c: 1532: }
  4305                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4306  061A  0840               	movf	sprintf@c,w
  4307  061B  00B4               	movwf	??_sprintf
  4308  061C  083B               	movf	sprintf@sp,w
  4309  061D  0086               	movwf	6
  4310  061E  0187               	clrf	7
  4311  061F  0834               	movf	??_sprintf,w
  4312  0620  0081               	movwf	1
  4313  0621  3001               	movlw	1
  4314  0622  00B4               	movwf	??_sprintf
  4315  0623  0834               	movf	??_sprintf,w
  4316  0624  07BB               	addwf	sprintf@sp,f
  4317  0625  2DE6               	goto	l2319
  4318  0626                     l2323:	
  4319                           ;doprnt.c: 1534: }
  4320                           ;doprnt.c: 1542: }
  4321                           ;doprnt.c: 1544: alldone:
  4322                           
  4323                           
  4324                           ;doprnt.c: 1547: *sp = 0;
  4325  0626  083B               	movf	sprintf@sp,w
  4326  0627  0086               	movwf	6
  4327  0628  0187               	clrf	7
  4328  0629  0181               	clrf	1
  4329  062A  0008               	return
  4330  062B                     __end_of_sprintf:	
  4331                           ;doprnt.c: 1549: return 0;
  4332                           ;	Return value of _sprintf is never used
  4333                           
  4334                           
  4335                           	psect	text12
  4336  0DB8                     __ptext12:	
  4337 ;; *************** function ___lwmod *****************
  4338 ;; Defined at:
  4339 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  divisor         2    8[BANK0 ] unsigned int 
  4342 ;;  dividend        2   10[BANK0 ] unsigned int 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  counter         1   13[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    8[BANK0 ] unsigned int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4354 ;;      Params:         0       4       0       0       0       0       0       0
  4355 ;;      Locals:         0       1       0       0       0       0       0       0
  4356 ;;      Temps:          0       1       0       0       0       0       0       0
  4357 ;;      Totals:         0       6       0       0       0       0       0       0
  4358 ;;Total ram usage:        6 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    2
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_sprintf
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function ___lwmod
  4370  0DB8                     ___lwmod:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4374  0DB8  0020               	movlb	0	; select bank0
  4375  0DB9  0829               	movf	___lwmod@divisor+1,w
  4376  0DBA  0428               	iorwf	___lwmod@divisor,w
  4377  0DBB  1903               	skipnz
  4378  0DBC  2DE0               	goto	l2207
  4379  0DBD  01AD               	clrf	___lwmod@counter
  4380  0DBE  0AAD               	incf	___lwmod@counter,f
  4381  0DBF                     l2197:	
  4382  0DBF  1BA9               	btfsc	___lwmod@divisor+1,7
  4383  0DC0  2DCB               	goto	l2199
  4384  0DC1  3001               	movlw	1
  4385  0DC2                     u1755:	
  4386  0DC2  35A8               	lslf	___lwmod@divisor,f
  4387  0DC3  0DA9               	rlf	___lwmod@divisor+1,f
  4388  0DC4  0B89               	decfsz	9,f
  4389  0DC5  2DC2               	goto	u1755
  4390  0DC6  3001               	movlw	1
  4391  0DC7  00AC               	movwf	??___lwmod
  4392  0DC8  082C               	movf	??___lwmod,w
  4393  0DC9  07AD               	addwf	___lwmod@counter,f
  4394  0DCA  2DBF               	goto	l2197
  4395  0DCB                     l2199:	
  4396  0DCB  0829               	movf	___lwmod@divisor+1,w
  4397  0DCC  022B               	subwf	___lwmod@dividend+1,w
  4398  0DCD  1D03               	skipz
  4399  0DCE  2DD1               	goto	u1775
  4400  0DCF  0828               	movf	___lwmod@divisor,w
  4401  0DD0  022A               	subwf	___lwmod@dividend,w
  4402  0DD1                     u1775:	
  4403  0DD1  1C03               	skipc
  4404  0DD2  2DD7               	goto	l2203
  4405  0DD3  0828               	movf	___lwmod@divisor,w
  4406  0DD4  02AA               	subwf	___lwmod@dividend,f
  4407  0DD5  0829               	movf	___lwmod@divisor+1,w
  4408  0DD6  3BAB               	subwfb	___lwmod@dividend+1,f
  4409  0DD7                     l2203:	
  4410  0DD7  3001               	movlw	1
  4411  0DD8                     u1785:	
  4412  0DD8  36A9               	lsrf	___lwmod@divisor+1,f
  4413  0DD9  0CA8               	rrf	___lwmod@divisor,f
  4414  0DDA  0B89               	decfsz	9,f
  4415  0DDB  2DD8               	goto	u1785
  4416  0DDC  3001               	movlw	1
  4417  0DDD  02AD               	subwf	___lwmod@counter,f
  4418  0DDE  1D03               	btfss	3,2
  4419  0DDF  2DCB               	goto	l2199
  4420  0DE0                     l2207:	
  4421  0DE0  082B               	movf	___lwmod@dividend+1,w
  4422  0DE1  01A9               	clrf	?___lwmod+1
  4423  0DE2  07A9               	addwf	?___lwmod+1,f
  4424  0DE3  082A               	movf	___lwmod@dividend,w
  4425  0DE4  01A8               	clrf	?___lwmod
  4426  0DE5  07A8               	addwf	?___lwmod,f
  4427  0DE6  0008               	return
  4428  0DE7                     __end_of___lwmod:	
  4429                           
  4430                           	psect	text13
  4431  0DE7                     __ptext13:	
  4432 ;; *************** function ___lwdiv *****************
  4433 ;; Defined at:
  4434 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  divisor         2    0[BANK0 ] unsigned int 
  4437 ;;  dividend        2    2[BANK0 ] unsigned int 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  quotient        2    5[BANK0 ] unsigned int 
  4440 ;;  counter         1    7[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2    0[BANK0 ] unsigned int 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4450 ;;      Params:         0       4       0       0       0       0       0       0
  4451 ;;      Locals:         0       3       0       0       0       0       0       0
  4452 ;;      Temps:          0       1       0       0       0       0       0       0
  4453 ;;      Totals:         0       8       0       0       0       0       0       0
  4454 ;;Total ram usage:        8 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    2
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_sprintf
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function ___lwdiv
  4466  0DE7                     ___lwdiv:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4470  0DE7  0020               	movlb	0	; select bank0
  4471  0DE8  01A5               	clrf	___lwdiv@quotient
  4472  0DE9  01A6               	clrf	___lwdiv@quotient+1
  4473  0DEA  0821               	movf	___lwdiv@divisor+1,w
  4474  0DEB  0420               	iorwf	___lwdiv@divisor,w
  4475  0DEC  1903               	skipnz
  4476  0DED  2E17               	goto	l2185
  4477  0DEE  01A7               	clrf	___lwdiv@counter
  4478  0DEF  0AA7               	incf	___lwdiv@counter,f
  4479  0DF0                     l2173:	
  4480  0DF0  1BA1               	btfsc	___lwdiv@divisor+1,7
  4481  0DF1  2DFC               	goto	l2175
  4482  0DF2  3001               	movlw	1
  4483  0DF3                     u1685:	
  4484  0DF3  35A0               	lslf	___lwdiv@divisor,f
  4485  0DF4  0DA1               	rlf	___lwdiv@divisor+1,f
  4486  0DF5  0B89               	decfsz	9,f
  4487  0DF6  2DF3               	goto	u1685
  4488  0DF7  3001               	movlw	1
  4489  0DF8  00A4               	movwf	??___lwdiv
  4490  0DF9  0824               	movf	??___lwdiv,w
  4491  0DFA  07A7               	addwf	___lwdiv@counter,f
  4492  0DFB  2DF0               	goto	l2173
  4493  0DFC                     l2175:	
  4494  0DFC  3001               	movlw	1
  4495  0DFD                     u1705:	
  4496  0DFD  35A5               	lslf	___lwdiv@quotient,f
  4497  0DFE  0DA6               	rlf	___lwdiv@quotient+1,f
  4498  0DFF  0B89               	decfsz	9,f
  4499  0E00  2DFD               	goto	u1705
  4500  0E01  0821               	movf	___lwdiv@divisor+1,w
  4501  0E02  0223               	subwf	___lwdiv@dividend+1,w
  4502  0E03  1D03               	skipz
  4503  0E04  2E07               	goto	u1715
  4504  0E05  0820               	movf	___lwdiv@divisor,w
  4505  0E06  0222               	subwf	___lwdiv@dividend,w
  4506  0E07                     u1715:	
  4507  0E07  1C03               	skipc
  4508  0E08  2E0E               	goto	l2181
  4509  0E09  0820               	movf	___lwdiv@divisor,w
  4510  0E0A  02A2               	subwf	___lwdiv@dividend,f
  4511  0E0B  0821               	movf	___lwdiv@divisor+1,w
  4512  0E0C  3BA3               	subwfb	___lwdiv@dividend+1,f
  4513  0E0D  1425               	bsf	___lwdiv@quotient,0
  4514  0E0E                     l2181:	
  4515  0E0E  3001               	movlw	1
  4516  0E0F                     u1725:	
  4517  0E0F  36A1               	lsrf	___lwdiv@divisor+1,f
  4518  0E10  0CA0               	rrf	___lwdiv@divisor,f
  4519  0E11  0B89               	decfsz	9,f
  4520  0E12  2E0F               	goto	u1725
  4521  0E13  3001               	movlw	1
  4522  0E14  02A7               	subwf	___lwdiv@counter,f
  4523  0E15  1D03               	btfss	3,2
  4524  0E16  2DFC               	goto	l2175
  4525  0E17                     l2185:	
  4526  0E17  0826               	movf	___lwdiv@quotient+1,w
  4527  0E18  01A1               	clrf	?___lwdiv+1
  4528  0E19  07A1               	addwf	?___lwdiv+1,f
  4529  0E1A  0825               	movf	___lwdiv@quotient,w
  4530  0E1B  01A0               	clrf	?___lwdiv
  4531  0E1C  07A0               	addwf	?___lwdiv,f
  4532  0E1D  0008               	return
  4533  0E1E                     __end_of___lwdiv:	
  4534                           
  4535                           	psect	text14
  4536  039C                     __ptext14:	
  4537 ;; *************** function _RecordMode *****************
  4538 ;; Defined at:
  4539 ;;		line 561 in file "launcher_functions.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  address         4   35[BANK0 ] long 
  4544 ;;  count           2   33[BANK0 ] int 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4554 ;;      Params:         0       0       0       0       0       0       0       0
  4555 ;;      Locals:         0       6       0       0       0       0       0       0
  4556 ;;      Temps:          0       5       0       0       0       0       0       0
  4557 ;;      Totals:         0      11       0       0       0       0       0       0
  4558 ;;Total ram usage:       11 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    6
  4561 ;; This function calls:
  4562 ;;		_CheckDisconnect
  4563 ;;		_InitSPI
  4564 ;;		_ReadBuffer
  4565 ;;		_SendGPSSPI
  4566 ;;		_WriteOverheadSPI
  4567 ;;		_WriteSPI
  4568 ;; This function is called by:
  4569 ;;		_main
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _RecordMode
  4575  039C                     _RecordMode:	
  4576                           
  4577                           ;launcher_functions.c: 563: PORTAbits.RA4 = 1;
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4581  039C  0020               	movlb	0	; select bank0
  4582  039D  160C               	bsf	12,4	;volatile
  4583                           
  4584                           ;launcher_functions.c: 564: long int address = 0xBB68+11;
  4585  039E  3000               	movlw	0
  4586  039F  00C6               	movwf	RecordMode@address+3
  4587  03A0  3000               	movlw	0
  4588  03A1  00C5               	movwf	RecordMode@address+2
  4589  03A2  30BB               	movlw	187
  4590  03A3  00C4               	movwf	RecordMode@address+1
  4591  03A4  3073               	movlw	115
  4592  03A5  00C3               	movwf	RecordMode@address
  4593                           
  4594                           ;launcher_functions.c: 565: int count = 115;
  4595  03A6  3073               	movlw	115
  4596  03A7  00C1               	movwf	RecordMode@count
  4597  03A8  3000               	movlw	0
  4598  03A9  00C2               	movwf	RecordMode@count+1
  4599                           
  4600                           ;launcher_functions.c: 567: InitSPI();
  4601  03AA  318C  2478  3183   	fcall	_InitSPI
  4602                           
  4603                           ;launcher_functions.c: 570: if(CheckDisconnect())
  4604  03AD  318C  2446  3183   	fcall	_CheckDisconnect
  4605  03B0  3A00               	xorlw	0
  4606  03B1  1903               	skipnz
  4607  03B2  2BBF               	goto	l2671
  4608                           
  4609                           ;launcher_functions.c: 571: {
  4610                           ;launcher_functions.c: 572: LATC2 = (1);
  4611  03B3  0022               	movlb	2	; select bank2
  4612  03B4  150E               	bsf	14,2	;volatile
  4613                           
  4614                           ;launcher_functions.c: 573: (start) = 0;
  4615  03B5  01FB               	clrf	_start
  4616  03B6  01FC               	clrf	_start+1
  4617                           
  4618                           ;launcher_functions.c: 574: (end) = 0;
  4619  03B7  01F9               	clrf	_end
  4620  03B8  01FA               	clrf	_end+1
  4621                           
  4622                           ;launcher_functions.c: 575: SSPCON1bits.SSPEN=0;
  4623  03B9  0024               	movlb	4	; select bank4
  4624  03BA  1295               	bcf	21,5	;volatile
  4625                           
  4626                           ;launcher_functions.c: 576: PORTCbits.RC5 = 0;
  4627  03BB  0020               	movlb	0	; select bank0
  4628  03BC  128E               	bcf	14,5	;volatile
  4629                           
  4630                           ;launcher_functions.c: 577: PORTAbits.RA4 = 0;
  4631  03BD  120C               	bcf	12,4	;volatile
  4632                           
  4633                           ;launcher_functions.c: 578: return;
  4634  03BE  0008               	return
  4635  03BF                     l2671:	
  4636                           
  4637                           ;launcher_functions.c: 579: }
  4638                           ;launcher_functions.c: 581: (start) = 0;
  4639  03BF  01FB               	clrf	_start
  4640  03C0  01FC               	clrf	_start+1
  4641                           
  4642                           ;launcher_functions.c: 582: (end) = 0;
  4643  03C1  01F9               	clrf	_end
  4644  03C2  01FA               	clrf	_end+1
  4645                           
  4646                           ;launcher_functions.c: 584: _delay((unsigned long)((300)*(16000000/4000.0)));
  4647  03C3  3007               	movlw	7
  4648  03C4  0020               	movlb	0	; select bank0
  4649  03C5  00BE               	movwf	??_RecordMode+2
  4650  03C6  3017               	movlw	23
  4651  03C7  00BD               	movwf	??_RecordMode+1
  4652  03C8  306F               	movlw	111
  4653  03C9  00BC               	movwf	??_RecordMode
  4654  03CA                     u2887:	
  4655  03CA  0BBC               	decfsz	??_RecordMode,f
  4656  03CB  2BCA               	goto	u2887
  4657  03CC  0BBD               	decfsz	??_RecordMode+1,f
  4658  03CD  2BCA               	goto	u2887
  4659  03CE  0BBE               	decfsz	??_RecordMode+2,f
  4660  03CF  2BCA               	goto	u2887
  4661  03D0  0000               	nop
  4662                           
  4663                           ;launcher_functions.c: 585: WriteOverheadSPI(address);
  4664  03D1  0020               	movlb	0	; select bank0
  4665  03D2  0846               	movf	RecordMode@address+3,w
  4666  03D3  00AA               	movwf	WriteOverheadSPI@address+3
  4667  03D4  0845               	movf	RecordMode@address+2,w
  4668  03D5  00A9               	movwf	WriteOverheadSPI@address+2
  4669  03D6  0844               	movf	RecordMode@address+1,w
  4670  03D7  00A8               	movwf	WriteOverheadSPI@address+1
  4671  03D8  0843               	movf	RecordMode@address,w
  4672  03D9  00A7               	movwf	WriteOverheadSPI@address
  4673  03DA  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4674                           
  4675                           ;launcher_functions.c: 586: TMR1IF = 0;
  4676  03DD  0020               	movlb	0	; select bank0
  4677  03DE  1011               	bcf	17,0	;volatile
  4678                           
  4679                           ;launcher_functions.c: 587: TMR1IE = 1;
  4680  03DF  0021               	movlb	1	; select bank1
  4681  03E0  1411               	bsf	17,0	;volatile
  4682                           
  4683                           ;launcher_functions.c: 588: TMR1ON = 1;
  4684  03E1  0020               	movlb	0	; select bank0
  4685  03E2  1418               	bsf	24,0	;volatile
  4686                           
  4687                           ;launcher_functions.c: 589: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  4688  03E3  0022               	movlb	2	; select bank2
  4689  03E4  080D               	movf	13,w	;volatile
  4690  03E5  39FF               	andlw	255
  4691  03E6  3820               	iorlw	32
  4692  03E7  0020               	movlb	0	; select bank0
  4693  03E8  00BC               	movwf	??_RecordMode
  4694  03E9  080D               	movf	13,w	;volatile
  4695  03EA  063C               	xorwf	??_RecordMode,w
  4696  03EB  3900               	andlw	-256
  4697  03EC  063C               	xorwf	??_RecordMode,w
  4698  03ED  008D               	movwf	13	;volatile
  4699                           
  4700                           ;launcher_functions.c: 590: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  4701  03EE  0022               	movlb	2	; select bank2
  4702  03EF  080D               	movf	13,w	;volatile
  4703  03F0  39FF               	andlw	255
  4704  03F1  39EF               	andlw	239
  4705  03F2  0020               	movlb	0	; select bank0
  4706  03F3  00BC               	movwf	??_RecordMode
  4707  03F4  080D               	movf	13,w	;volatile
  4708  03F5  063C               	xorwf	??_RecordMode,w
  4709  03F6  3900               	andlw	-256
  4710  03F7  063C               	xorwf	??_RecordMode,w
  4711  03F8  008D               	movwf	13	;volatile
  4712  03F9                     l2703:	
  4713                           ;launcher_functions.c: 592: while((recordFlag) && (address < 131072))
  4714                           
  4715  03F9  0020               	movlb	0	; select bank0
  4716  03FA  086C               	movf	_recordFlag,w
  4717  03FB  1903               	btfsc	3,2
  4718  03FC  2C80               	goto	l2723
  4719  03FD  0846               	movf	RecordMode@address+3,w
  4720  03FE  3A80               	xorlw	128
  4721  03FF  00BC               	movwf	??_RecordMode
  4722  0400  3000               	movlw	0
  4723  0401  3A80               	xorlw	128
  4724  0402  023C               	subwf	??_RecordMode,w
  4725  0403  1D03               	skipz
  4726  0404  2C0F               	goto	u2223
  4727  0405  3002               	movlw	2
  4728  0406  0245               	subwf	RecordMode@address+2,w
  4729  0407  1D03               	skipz
  4730  0408  2C0F               	goto	u2223
  4731  0409  3000               	movlw	0
  4732  040A  0244               	subwf	RecordMode@address+1,w
  4733  040B  1D03               	skipz
  4734  040C  2C0F               	goto	u2223
  4735  040D  3000               	movlw	0
  4736  040E  0243               	subwf	RecordMode@address,w
  4737  040F                     u2223:	
  4738  040F  1803               	btfsc	3,0
  4739  0410  2C80               	goto	l2723
  4740                           
  4741                           ;launcher_functions.c: 593: {
  4742                           ;launcher_functions.c: 594: if(count>=256)
  4743  0411  0842               	movf	RecordMode@count+1,w
  4744  0412  3A80               	xorlw	128
  4745  0413  00BC               	movwf	??_RecordMode
  4746  0414  3081               	movlw	129
  4747  0415  023C               	subwf	??_RecordMode,w
  4748  0416  1D03               	skipz
  4749  0417  2C1A               	goto	u2195
  4750  0418  3000               	movlw	0
  4751  0419  0241               	subwf	RecordMode@count,w
  4752  041A                     u2195:	
  4753  041A  1C03               	skipc
  4754  041B  2C2C               	goto	l2695
  4755                           
  4756                           ;launcher_functions.c: 595: {
  4757                           ;launcher_functions.c: 596: LATC2 = (1);
  4758  041C  0022               	movlb	2	; select bank2
  4759  041D  150E               	bsf	14,2	;volatile
  4760                           
  4761                           ;launcher_functions.c: 597: count = 0;
  4762  041E  0020               	movlb	0	; select bank0
  4763  041F  01C1               	clrf	RecordMode@count
  4764  0420  01C2               	clrf	RecordMode@count+1
  4765                           
  4766                           ;launcher_functions.c: 598: WriteOverheadSPI(address);
  4767  0421  0846               	movf	RecordMode@address+3,w
  4768  0422  00AA               	movwf	WriteOverheadSPI@address+3
  4769  0423  0845               	movf	RecordMode@address+2,w
  4770  0424  00A9               	movwf	WriteOverheadSPI@address+2
  4771  0425  0844               	movf	RecordMode@address+1,w
  4772  0426  00A8               	movwf	WriteOverheadSPI@address+1
  4773  0427  0843               	movf	RecordMode@address,w
  4774  0428  00A7               	movwf	WriteOverheadSPI@address
  4775  0429  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4776  042C                     l2695:	
  4777                           
  4778                           ;launcher_functions.c: 599: }
  4779                           ;launcher_functions.c: 600: if(!((((start))==((end)))?(1):(0)))
  4780  042C  087A               	movf	_end+1,w
  4781  042D  067C               	xorwf	_start+1,w
  4782  042E  1D03               	skipz
  4783  042F  2C32               	goto	u2205
  4784  0430  0879               	movf	_end,w
  4785  0431  067B               	xorwf	_start,w
  4786  0432                     u2205:	
  4787  0432  1903               	skipnz
  4788  0433  2BF9               	goto	l2703
  4789                           
  4790                           ;launcher_functions.c: 601: {
  4791                           ;launcher_functions.c: 602: WriteSPI(ReadBuffer());
  4792  0434  318C  24DC  3183   	fcall	_ReadBuffer
  4793  0437  318C  249C  3183   	fcall	_WriteSPI
  4794                           
  4795                           ;launcher_functions.c: 603: address++;
  4796  043A  3001               	movlw	1
  4797  043B  0020               	movlb	0	; select bank0
  4798  043C  07C3               	addwf	RecordMode@address,f
  4799  043D  3000               	movlw	0
  4800  043E  3DC4               	addwfc	RecordMode@address+1,f
  4801  043F  3000               	movlw	0
  4802  0440  3DC5               	addwfc	RecordMode@address+2,f
  4803  0441  3000               	movlw	0
  4804  0442  3DC6               	addwfc	RecordMode@address+3,f
  4805                           
  4806                           ;launcher_functions.c: 604: count++;
  4807  0443  3001               	movlw	1
  4808  0444  07C1               	addwf	RecordMode@count,f
  4809  0445  3000               	movlw	0
  4810  0446  3DC2               	addwfc	RecordMode@count+1,f
  4811  0447  2BF9               	goto	l2703
  4812  0448                     l2707:	
  4813                           ;launcher_functions.c: 605: }
  4814                           ;launcher_functions.c: 607: }
  4815                           ;launcher_functions.c: 609: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4816                           
  4817                           
  4818                           ;launcher_functions.c: 610: {
  4819                           ;launcher_functions.c: 611: if(count>=256)
  4820  0448  0842               	movf	RecordMode@count+1,w
  4821  0449  3A80               	xorlw	128
  4822  044A  00BC               	movwf	??_RecordMode
  4823  044B  3081               	movlw	129
  4824  044C  023C               	subwf	??_RecordMode,w
  4825  044D  1D03               	skipz
  4826  044E  2C51               	goto	u2235
  4827  044F  3000               	movlw	0
  4828  0450  0241               	subwf	RecordMode@count,w
  4829  0451                     u2235:	
  4830  0451  1C03               	skipc
  4831  0452  2C63               	goto	l2715
  4832                           
  4833                           ;launcher_functions.c: 612: {
  4834                           ;launcher_functions.c: 613: LATC2 = (1);
  4835  0453  0022               	movlb	2	; select bank2
  4836  0454  150E               	bsf	14,2	;volatile
  4837                           
  4838                           ;launcher_functions.c: 614: count = 0;
  4839  0455  0020               	movlb	0	; select bank0
  4840  0456  01C1               	clrf	RecordMode@count
  4841  0457  01C2               	clrf	RecordMode@count+1
  4842                           
  4843                           ;launcher_functions.c: 615: WriteOverheadSPI(address);
  4844  0458  0846               	movf	RecordMode@address+3,w
  4845  0459  00AA               	movwf	WriteOverheadSPI@address+3
  4846  045A  0845               	movf	RecordMode@address+2,w
  4847  045B  00A9               	movwf	WriteOverheadSPI@address+2
  4848  045C  0844               	movf	RecordMode@address+1,w
  4849  045D  00A8               	movwf	WriteOverheadSPI@address+1
  4850  045E  0843               	movf	RecordMode@address,w
  4851  045F  00A7               	movwf	WriteOverheadSPI@address
  4852  0460  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4853  0463                     l2715:	
  4854                           
  4855                           ;launcher_functions.c: 616: }
  4856                           ;launcher_functions.c: 617: if(!((((start))==((end)))?(1):(0)))
  4857  0463  087A               	movf	_end+1,w
  4858  0464  067C               	xorwf	_start+1,w
  4859  0465  1D03               	skipz
  4860  0466  2C69               	goto	u2245
  4861  0467  0879               	movf	_end,w
  4862  0468  067B               	xorwf	_start,w
  4863  0469                     u2245:	
  4864  0469  1D03               	btfss	3,2
  4865  046A  2C6D               	goto	l2717
  4866  046B  0020               	movlb	0	; select bank0
  4867  046C  2C80               	goto	l2723
  4868  046D                     l2717:	
  4869                           
  4870                           ;launcher_functions.c: 618: {
  4871                           ;launcher_functions.c: 619: WriteSPI(ReadBuffer());
  4872  046D  318C  24DC  3183   	fcall	_ReadBuffer
  4873  0470  318C  249C  3183   	fcall	_WriteSPI
  4874                           
  4875                           ;launcher_functions.c: 620: address++;
  4876  0473  3001               	movlw	1
  4877  0474  0020               	movlb	0	; select bank0
  4878  0475  07C3               	addwf	RecordMode@address,f
  4879  0476  3000               	movlw	0
  4880  0477  3DC4               	addwfc	RecordMode@address+1,f
  4881  0478  3000               	movlw	0
  4882  0479  3DC5               	addwfc	RecordMode@address+2,f
  4883  047A  3000               	movlw	0
  4884  047B  3DC6               	addwfc	RecordMode@address+3,f
  4885                           
  4886                           ;launcher_functions.c: 621: count++;
  4887  047C  3001               	movlw	1
  4888  047D  07C1               	addwf	RecordMode@count,f
  4889  047E  3000               	movlw	0
  4890  047F  3DC2               	addwfc	RecordMode@count+1,f
  4891  0480                     l2723:	
  4892  0480  087A               	movf	_end+1,w
  4893  0481  067C               	xorwf	_start+1,w
  4894  0482  1D03               	skipz
  4895  0483  2C86               	goto	u2255
  4896  0484  0879               	movf	_end,w
  4897  0485  067B               	xorwf	_start,w
  4898  0486                     u2255:	
  4899  0486  1903               	skipnz
  4900  0487  2C9D               	goto	l447
  4901  0488  0020               	movlb	0	; select bank0
  4902  0489  0846               	movf	RecordMode@address+3,w
  4903  048A  3A80               	xorlw	128
  4904  048B  00BC               	movwf	??_RecordMode
  4905  048C  3000               	movlw	0
  4906  048D  3A80               	xorlw	128
  4907  048E  023C               	subwf	??_RecordMode,w
  4908  048F  1D03               	skipz
  4909  0490  2C9B               	goto	u2263
  4910  0491  3002               	movlw	2
  4911  0492  0245               	subwf	RecordMode@address+2,w
  4912  0493  1D03               	skipz
  4913  0494  2C9B               	goto	u2263
  4914  0495  3000               	movlw	0
  4915  0496  0244               	subwf	RecordMode@address+1,w
  4916  0497  1D03               	skipz
  4917  0498  2C9B               	goto	u2263
  4918  0499  3000               	movlw	0
  4919  049A  0243               	subwf	RecordMode@address,w
  4920  049B                     u2263:	
  4921  049B  1C03               	skipc
  4922  049C  2C48               	goto	l2707
  4923  049D                     l447:	
  4924                           
  4925                           ;launcher_functions.c: 622: }
  4926                           ;launcher_functions.c: 623: }
  4927                           ;launcher_functions.c: 624: LATC2 = (1);
  4928  049D  0022               	movlb	2	; select bank2
  4929  049E  150E               	bsf	14,2	;volatile
  4930                           
  4931                           ;launcher_functions.c: 625: TMR1IE = 0;
  4932  049F  0021               	movlb	1	; select bank1
  4933  04A0  1011               	bcf	17,0	;volatile
  4934                           
  4935                           ;launcher_functions.c: 626: TMR1ON = 0;
  4936  04A1  0020               	movlb	0	; select bank0
  4937  04A2  1018               	bcf	24,0	;volatile
  4938                           
  4939                           ;launcher_functions.c: 627: _delay((unsigned long)((5)*(16000000/4000.0)));
  4940  04A3  301A               	movlw	26
  4941  04A4  00BD               	movwf	??_RecordMode+1
  4942  04A5  30F8               	movlw	248
  4943  04A6  00BC               	movwf	??_RecordMode
  4944  04A7                     u2897:	
  4945  04A7  0BBC               	decfsz	??_RecordMode,f
  4946  04A8  2CA7               	goto	u2897
  4947  04A9  0BBD               	decfsz	??_RecordMode+1,f
  4948  04AA  2CA7               	goto	u2897
  4949  04AB  0000               	nop
  4950                           
  4951                           ;launcher_functions.c: 630: WriteOverheadSPI(0xBB68);
  4952  04AC  3000               	movlw	0
  4953  04AD  0020               	movlb	0	; select bank0
  4954  04AE  00AA               	movwf	WriteOverheadSPI@address+3
  4955  04AF  3000               	movlw	0
  4956  04B0  00A9               	movwf	WriteOverheadSPI@address+2
  4957  04B1  30BB               	movlw	187
  4958  04B2  00A8               	movwf	WriteOverheadSPI@address+1
  4959  04B3  3068               	movlw	104
  4960  04B4  00A7               	movwf	WriteOverheadSPI@address
  4961  04B5  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4962                           
  4963                           ;launcher_functions.c: 631: if(address >= 131072)
  4964  04B8  0020               	movlb	0	; select bank0
  4965  04B9  0846               	movf	RecordMode@address+3,w
  4966  04BA  3A80               	xorlw	128
  4967  04BB  00BC               	movwf	??_RecordMode
  4968  04BC  3000               	movlw	0
  4969  04BD  3A80               	xorlw	128
  4970  04BE  023C               	subwf	??_RecordMode,w
  4971  04BF  1D03               	skipz
  4972  04C0  2CCB               	goto	u2273
  4973  04C1  3002               	movlw	2
  4974  04C2  0245               	subwf	RecordMode@address+2,w
  4975  04C3  1D03               	skipz
  4976  04C4  2CCB               	goto	u2273
  4977  04C5  3000               	movlw	0
  4978  04C6  0244               	subwf	RecordMode@address+1,w
  4979  04C7  1D03               	skipz
  4980  04C8  2CCB               	goto	u2273
  4981  04C9  3000               	movlw	0
  4982  04CA  0243               	subwf	RecordMode@address,w
  4983  04CB                     u2273:	
  4984  04CB  1C03               	skipc
  4985  04CC  2CD7               	goto	l2735
  4986                           
  4987                           ;launcher_functions.c: 632: {
  4988                           ;launcher_functions.c: 633: WriteSPI((131072 - 1)>>16);
  4989  04CD  3001               	movlw	1
  4990  04CE  318C  249C  3183   	fcall	_WriteSPI
  4991                           
  4992                           ;launcher_functions.c: 634: WriteSPI((131072 - 1)>>8);
  4993  04D1  30FF               	movlw	255
  4994  04D2  318C  249C  3183   	fcall	_WriteSPI
  4995                           
  4996                           ;launcher_functions.c: 635: WriteSPI(131072 - 1);
  4997  04D5  30FF               	movlw	255
  4998  04D6  2D03               	goto	L3
  4999  04D7                     l2735:	
  5000                           ;launcher_functions.c: 636: }
  5001                           
  5002                           
  5003                           ;launcher_functions.c: 637: else
  5004                           ;launcher_functions.c: 638: {
  5005                           ;launcher_functions.c: 639: WriteSPI(address>>16);
  5006  04D7  0020               	movlb	0	; select bank0
  5007  04D8  0843               	movf	RecordMode@address,w
  5008  04D9  00BC               	movwf	??_RecordMode
  5009  04DA  0844               	movf	RecordMode@address+1,w
  5010  04DB  00BD               	movwf	??_RecordMode+1
  5011  04DC  0845               	movf	RecordMode@address+2,w
  5012  04DD  00BE               	movwf	??_RecordMode+2
  5013  04DE  0846               	movf	RecordMode@address+3,w
  5014  04DF  00BF               	movwf	??_RecordMode+3
  5015  04E0  3010               	movlw	16
  5016  04E1  00C0               	movwf	??_RecordMode+4
  5017  04E2                     u2285:	
  5018  04E2  37BF               	asrf	??_RecordMode+3,f
  5019  04E3  0CBE               	rrf	??_RecordMode+2,f
  5020  04E4  0CBD               	rrf	??_RecordMode+1,f
  5021  04E5  0CBC               	rrf	??_RecordMode,f
  5022  04E6  0BC0               	decfsz	??_RecordMode+4,f
  5023  04E7  2CE2               	goto	u2285
  5024  04E8  083C               	movf	??_RecordMode,w
  5025  04E9  318C  249C  3183   	fcall	_WriteSPI
  5026                           
  5027                           ;launcher_functions.c: 640: WriteSPI(address>>8);
  5028  04EC  0020               	movlb	0	; select bank0
  5029  04ED  0843               	movf	RecordMode@address,w
  5030  04EE  00BC               	movwf	??_RecordMode
  5031  04EF  0844               	movf	RecordMode@address+1,w
  5032  04F0  00BD               	movwf	??_RecordMode+1
  5033  04F1  0845               	movf	RecordMode@address+2,w
  5034  04F2  00BE               	movwf	??_RecordMode+2
  5035  04F3  0846               	movf	RecordMode@address+3,w
  5036  04F4  00BF               	movwf	??_RecordMode+3
  5037  04F5  3008               	movlw	8
  5038  04F6  00C0               	movwf	??_RecordMode+4
  5039  04F7                     u2295:	
  5040  04F7  37BF               	asrf	??_RecordMode+3,f
  5041  04F8  0CBE               	rrf	??_RecordMode+2,f
  5042  04F9  0CBD               	rrf	??_RecordMode+1,f
  5043  04FA  0CBC               	rrf	??_RecordMode,f
  5044  04FB  0BC0               	decfsz	??_RecordMode+4,f
  5045  04FC  2CF7               	goto	u2295
  5046  04FD  083C               	movf	??_RecordMode,w
  5047  04FE  318C  249C  3183   	fcall	_WriteSPI
  5048                           
  5049                           ;launcher_functions.c: 641: WriteSPI(address);
  5050  0501  0020               	movlb	0	; select bank0
  5051  0502  0843               	movf	RecordMode@address,w
  5052  0503                     L3:	
  5053  0503  318C  249C  3183   	fcall	_WriteSPI
  5054                           
  5055                           ;launcher_functions.c: 642: }
  5056                           ;launcher_functions.c: 644: LATC2 = (1);
  5057  0506  0022               	movlb	2	; select bank2
  5058  0507  150E               	bsf	14,2	;volatile
  5059                           
  5060                           ;launcher_functions.c: 645: if(hasValidGPSFlag)
  5061  0508  0020               	movlb	0	; select bank0
  5062  0509  086A               	movf	_hasValidGPSFlag,w
  5063  050A  1903               	btfsc	3,2
  5064  050B  2D10               	goto	l2745
  5065                           
  5066                           ;launcher_functions.c: 646: {
  5067                           ;launcher_functions.c: 647: SendGPSSPI();
  5068  050C  318F  2714         	fcall	_SendGPSSPI
  5069                           
  5070                           ;launcher_functions.c: 648: hasValidGPSFlag = 0;
  5071  050E  0020               	movlb	0	; select bank0
  5072  050F  01EA               	clrf	_hasValidGPSFlag
  5073  0510                     l2745:	
  5074                           
  5075                           ;launcher_functions.c: 649: }
  5076                           ;launcher_functions.c: 650: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  5077  0510  0022               	movlb	2	; select bank2
  5078  0511  080D               	movf	13,w	;volatile
  5079  0512  39FF               	andlw	255
  5080  0513  39DF               	andlw	223
  5081  0514  0020               	movlb	0	; select bank0
  5082  0515  00BC               	movwf	??_RecordMode
  5083  0516  080D               	movf	13,w	;volatile
  5084  0517  063C               	xorwf	??_RecordMode,w
  5085  0518  3900               	andlw	-256
  5086  0519  063C               	xorwf	??_RecordMode,w
  5087  051A  008D               	movwf	13	;volatile
  5088                           
  5089                           ;launcher_functions.c: 651: (start) = 0;
  5090  051B  01FB               	clrf	_start
  5091  051C  01FC               	clrf	_start+1
  5092                           
  5093                           ;launcher_functions.c: 652: (end) = 0;
  5094  051D  01F9               	clrf	_end
  5095  051E  01FA               	clrf	_end+1
  5096                           
  5097                           ;launcher_functions.c: 653: SSPCON1bits.SSPEN=0;
  5098  051F  0024               	movlb	4	; select bank4
  5099  0520  1295               	bcf	21,5	;volatile
  5100                           
  5101                           ;launcher_functions.c: 654: PORTCbits.RC5 = 0;
  5102  0521  0020               	movlb	0	; select bank0
  5103  0522  128E               	bcf	14,5	;volatile
  5104                           
  5105                           ;launcher_functions.c: 655: PORTAbits.RA4 = 0;
  5106  0523  120C               	bcf	12,4	;volatile
  5107  0524  0008               	return
  5108  0525                     __end_of_RecordMode:	
  5109                           
  5110                           	psect	text15
  5111  0F14                     __ptext15:	
  5112 ;; *************** function _SendGPSSPI *****************
  5113 ;; Defined at:
  5114 ;;		line 658 in file "launcher_functions.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  address         4   22[BANK0 ] long 
  5119 ;;  x               2   26[BANK0 ] int 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5129 ;;      Params:         0       0       0       0       0       0       0       0
  5130 ;;      Locals:         0       6       0       0       0       0       0       0
  5131 ;;      Temps:          0       1       0       0       0       0       0       0
  5132 ;;      Totals:         0       7       0       0       0       0       0       0
  5133 ;;Total ram usage:        7 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    5
  5136 ;; This function calls:
  5137 ;;		_InitSPI
  5138 ;;		_WriteOverheadSPI
  5139 ;;		_WriteSPI
  5140 ;; This function is called by:
  5141 ;;		_RecordMode
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _SendGPSSPI
  5147  0F14                     _SendGPSSPI:	
  5148                           
  5149                           ;launcher_functions.c: 660: long int address = 0xBB68 + 3;
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5153  0F14  3000               	movlw	0
  5154  0F15  0020               	movlb	0	; select bank0
  5155  0F16  00B9               	movwf	SendGPSSPI@address+3
  5156  0F17  3000               	movlw	0
  5157  0F18  00B8               	movwf	SendGPSSPI@address+2
  5158  0F19  30BB               	movlw	187
  5159  0F1A  00B7               	movwf	SendGPSSPI@address+1
  5160  0F1B  306B               	movlw	107
  5161  0F1C  00B6               	movwf	SendGPSSPI@address
  5162                           
  5163                           ;launcher_functions.c: 661: int x;
  5164                           ;launcher_functions.c: 662: PORTAbits.RA4 = 1;
  5165  0F1D  160C               	bsf	12,4	;volatile
  5166                           
  5167                           ;launcher_functions.c: 663: if(SSPCON1bits.SSPEN == 0)
  5168  0F1E  0024               	movlb	4	; select bank4
  5169  0F1F  1A95               	btfsc	21,5	;volatile
  5170  0F20  2F24               	goto	l453
  5171                           
  5172                           ;launcher_functions.c: 664: InitSPI();
  5173  0F21  318C  2478  318F   	fcall	_InitSPI
  5174  0F24                     l453:	
  5175                           
  5176                           ;launcher_functions.c: 678: WriteOverheadSPI(address);
  5177  0F24  0020               	movlb	0	; select bank0
  5178  0F25  0839               	movf	SendGPSSPI@address+3,w
  5179  0F26  00AA               	movwf	WriteOverheadSPI@address+3
  5180  0F27  0838               	movf	SendGPSSPI@address+2,w
  5181  0F28  00A9               	movwf	WriteOverheadSPI@address+2
  5182  0F29  0837               	movf	SendGPSSPI@address+1,w
  5183  0F2A  00A8               	movwf	WriteOverheadSPI@address+1
  5184  0F2B  0836               	movf	SendGPSSPI@address,w
  5185  0F2C  00A7               	movwf	WriteOverheadSPI@address
  5186  0F2D  318E  26B4  318F   	fcall	_WriteOverheadSPI
  5187                           
  5188                           ;launcher_functions.c: 679: for(x=0;x<3;x++)
  5189  0F30  0020               	movlb	0	; select bank0
  5190  0F31  01BA               	clrf	SendGPSSPI@x
  5191  0F32  01BB               	clrf	SendGPSSPI@x+1
  5192  0F33  083B               	movf	SendGPSSPI@x+1,w
  5193  0F34  3A80               	xorlw	128
  5194  0F35  00B5               	movwf	??_SendGPSSPI
  5195  0F36  3080               	movlw	128
  5196  0F37  0235               	subwf	??_SendGPSSPI,w
  5197  0F38  1D03               	skipz
  5198  0F39  2F3C               	goto	u2115
  5199  0F3A  3003               	movlw	3
  5200  0F3B  023A               	subwf	SendGPSSPI@x,w
  5201  0F3C                     u2115:	
  5202  0F3C  1803               	btfsc	3,0
  5203  0F3D  2F57               	goto	l2491
  5204  0F3E                     l2485:	
  5205                           
  5206                           ;launcher_functions.c: 680: {
  5207                           ;launcher_functions.c: 681: WriteSPI(validLatitude[x]);
  5208  0F3E  0020               	movlb	0	; select bank0
  5209  0F3F  083A               	movf	SendGPSSPI@x,w
  5210  0F40  3E63               	addlw	_validLatitude& (0+255)
  5211  0F41  0086               	movwf	6
  5212  0F42  0187               	clrf	7
  5213  0F43  0801               	movf	1,w
  5214  0F44  318C  249C  318F   	fcall	_WriteSPI
  5215  0F47  3001               	movlw	1
  5216  0F48  0020               	movlb	0	; select bank0
  5217  0F49  07BA               	addwf	SendGPSSPI@x,f
  5218  0F4A  3000               	movlw	0
  5219  0F4B  3DBB               	addwfc	SendGPSSPI@x+1,f
  5220  0F4C  083B               	movf	SendGPSSPI@x+1,w
  5221  0F4D  3A80               	xorlw	128
  5222  0F4E  00B5               	movwf	??_SendGPSSPI
  5223  0F4F  3080               	movlw	128
  5224  0F50  0235               	subwf	??_SendGPSSPI,w
  5225  0F51  1D03               	skipz
  5226  0F52  2F55               	goto	u2125
  5227  0F53  3003               	movlw	3
  5228  0F54  023A               	subwf	SendGPSSPI@x,w
  5229  0F55                     u2125:	
  5230  0F55  1C03               	skipc
  5231  0F56  2F3E               	goto	l2485
  5232  0F57                     l2491:	
  5233                           
  5234                           ;launcher_functions.c: 682: }
  5235                           ;launcher_functions.c: 683: WriteSPI(validNorthSouth);
  5236  0F57  0020               	movlb	0	; select bank0
  5237  0F58  0868               	movf	_validNorthSouth,w
  5238  0F59  318C  249C  318F   	fcall	_WriteSPI
  5239                           
  5240                           ;launcher_functions.c: 684: for(x=0;x<3;x++)
  5241  0F5C  0020               	movlb	0	; select bank0
  5242  0F5D  01BA               	clrf	SendGPSSPI@x
  5243  0F5E  01BB               	clrf	SendGPSSPI@x+1
  5244  0F5F  083B               	movf	SendGPSSPI@x+1,w
  5245  0F60  3A80               	xorlw	128
  5246  0F61  00B5               	movwf	??_SendGPSSPI
  5247  0F62  3080               	movlw	128
  5248  0F63  0235               	subwf	??_SendGPSSPI,w
  5249  0F64  1D03               	skipz
  5250  0F65  2F68               	goto	u2135
  5251  0F66  3003               	movlw	3
  5252  0F67  023A               	subwf	SendGPSSPI@x,w
  5253  0F68                     u2135:	
  5254  0F68  1803               	btfsc	3,0
  5255  0F69  2F83               	goto	l2505
  5256  0F6A                     l2499:	
  5257                           
  5258                           ;launcher_functions.c: 685: {
  5259                           ;launcher_functions.c: 686: WriteSPI(validLongitude[x]);
  5260  0F6A  0020               	movlb	0	; select bank0
  5261  0F6B  083A               	movf	SendGPSSPI@x,w
  5262  0F6C  3EEC               	addlw	_validLongitude& (0+255)
  5263  0F6D  0086               	movwf	6
  5264  0F6E  0187               	clrf	7
  5265  0F6F  0801               	movf	1,w
  5266  0F70  318C  249C  318F   	fcall	_WriteSPI
  5267  0F73  3001               	movlw	1
  5268  0F74  0020               	movlb	0	; select bank0
  5269  0F75  07BA               	addwf	SendGPSSPI@x,f
  5270  0F76  3000               	movlw	0
  5271  0F77  3DBB               	addwfc	SendGPSSPI@x+1,f
  5272  0F78  083B               	movf	SendGPSSPI@x+1,w
  5273  0F79  3A80               	xorlw	128
  5274  0F7A  00B5               	movwf	??_SendGPSSPI
  5275  0F7B  3080               	movlw	128
  5276  0F7C  0235               	subwf	??_SendGPSSPI,w
  5277  0F7D  1D03               	skipz
  5278  0F7E  2F81               	goto	u2145
  5279  0F7F  3003               	movlw	3
  5280  0F80  023A               	subwf	SendGPSSPI@x,w
  5281  0F81                     u2145:	
  5282  0F81  1C03               	skipc
  5283  0F82  2F6A               	goto	l2499
  5284  0F83                     l2505:	
  5285                           
  5286                           ;launcher_functions.c: 687: }
  5287                           ;launcher_functions.c: 688: WriteSPI(validEastWest);
  5288  0F83  0020               	movlb	0	; select bank0
  5289  0F84  0867               	movf	_validEastWest,w
  5290  0F85  318C  249C         	fcall	_WriteSPI
  5291                           
  5292                           ;launcher_functions.c: 690: LATC2 = (1);
  5293  0F87  0022               	movlb	2	; select bank2
  5294  0F88  150E               	bsf	14,2	;volatile
  5295  0F89  0008               	return
  5296  0F8A                     __end_of_SendGPSSPI:	
  5297                           ;launcher_functions.c: 698: return;
  5298                           
  5299                           
  5300                           	psect	text16
  5301  0EB4                     __ptext16:	
  5302 ;; *************** function _WriteOverheadSPI *****************
  5303 ;; Defined at:
  5304 ;;		line 176 in file "launcher_functions.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  address         4    7[BANK0 ] long 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5309 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;		None               void
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5319 ;;      Params:         0       4       0       0       0       0       0       0
  5320 ;;      Locals:         0       4       0       0       0       0       0       0
  5321 ;;      Temps:          0       6       0       0       0       0       0       0
  5322 ;;      Totals:         0      14       0       0       0       0       0       0
  5323 ;;Total ram usage:       14 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    4
  5326 ;; This function calls:
  5327 ;;		_ReadStatusSPI
  5328 ;;		_WriteSPI
  5329 ;; This function is called by:
  5330 ;;		_RecordMode
  5331 ;;		_SendGPSSPI
  5332 ;;		_PreRecordMode
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function _WriteOverheadSPI
  5338  0EB4                     _WriteOverheadSPI:	
  5339                           
  5340                           ;launcher_functions.c: 178: unsigned char address_bytes[3];
  5341                           ;launcher_functions.c: 179: unsigned char StatusReg;
  5342                           ;launcher_functions.c: 181: address_bytes[0]=(unsigned char)(address>>16);
  5343                           
  5344                           ;incstack = 0
  5345                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5346  0EB4  0020               	movlb	0	; select bank0
  5347  0EB5  0827               	movf	WriteOverheadSPI@address,w
  5348  0EB6  00AB               	movwf	??_WriteOverheadSPI
  5349  0EB7  0828               	movf	WriteOverheadSPI@address+1,w
  5350  0EB8  00AC               	movwf	??_WriteOverheadSPI+1
  5351  0EB9  0829               	movf	WriteOverheadSPI@address+2,w
  5352  0EBA  00AD               	movwf	??_WriteOverheadSPI+2
  5353  0EBB  082A               	movf	WriteOverheadSPI@address+3,w
  5354  0EBC  00AE               	movwf	??_WriteOverheadSPI+3
  5355  0EBD  3010               	movlw	16
  5356  0EBE  00AF               	movwf	??_WriteOverheadSPI+4
  5357  0EBF                     u1425:	
  5358  0EBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  5359  0EC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5360  0EC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5361  0EC2  0CAB               	rrf	??_WriteOverheadSPI,f
  5362  0EC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5363  0EC4  2EBF               	goto	u1425
  5364  0EC5  082B               	movf	??_WriteOverheadSPI,w
  5365  0EC6  00B0               	movwf	??_WriteOverheadSPI+5
  5366  0EC7  0830               	movf	??_WriteOverheadSPI+5,w
  5367  0EC8  00B1               	movwf	WriteOverheadSPI@address_bytes
  5368                           
  5369                           ;launcher_functions.c: 182: address_bytes[1]=(unsigned char)(address>>8);
  5370  0EC9  0827               	movf	WriteOverheadSPI@address,w
  5371  0ECA  00AB               	movwf	??_WriteOverheadSPI
  5372  0ECB  0828               	movf	WriteOverheadSPI@address+1,w
  5373  0ECC  00AC               	movwf	??_WriteOverheadSPI+1
  5374  0ECD  0829               	movf	WriteOverheadSPI@address+2,w
  5375  0ECE  00AD               	movwf	??_WriteOverheadSPI+2
  5376  0ECF  082A               	movf	WriteOverheadSPI@address+3,w
  5377  0ED0  00AE               	movwf	??_WriteOverheadSPI+3
  5378  0ED1  3008               	movlw	8
  5379  0ED2  00AF               	movwf	??_WriteOverheadSPI+4
  5380  0ED3                     u1435:	
  5381  0ED3  37AE               	asrf	??_WriteOverheadSPI+3,f
  5382  0ED4  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5383  0ED5  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5384  0ED6  0CAB               	rrf	??_WriteOverheadSPI,f
  5385  0ED7  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5386  0ED8  2ED3               	goto	u1435
  5387  0ED9  082B               	movf	??_WriteOverheadSPI,w
  5388  0EDA  00B0               	movwf	??_WriteOverheadSPI+5
  5389  0EDB  0830               	movf	??_WriteOverheadSPI+5,w
  5390  0EDC  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5391                           
  5392                           ;launcher_functions.c: 183: address_bytes[2]=(unsigned char)(address);
  5393  0EDD  0827               	movf	WriteOverheadSPI@address,w
  5394  0EDE  00AB               	movwf	??_WriteOverheadSPI
  5395  0EDF  082B               	movf	??_WriteOverheadSPI,w
  5396  0EE0  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5397  0EE1                     l2055:	
  5398                           ;launcher_functions.c: 185: do
  5399                           
  5400                           
  5401                           ;launcher_functions.c: 186: {
  5402                           ;launcher_functions.c: 187: StatusReg = (ReadStatusSPI() & 0x01);
  5403  0EE1  318C  2455  318E   	fcall	_ReadStatusSPI
  5404  0EE4  3901               	andlw	1
  5405  0EE5  0020               	movlb	0	; select bank0
  5406  0EE6  00AB               	movwf	??_WriteOverheadSPI
  5407  0EE7  082B               	movf	??_WriteOverheadSPI,w
  5408  0EE8  00B4               	movwf	WriteOverheadSPI@StatusReg
  5409                           
  5410                           ;launcher_functions.c: 188: } while (StatusReg);
  5411  0EE9  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5412  0EEA  1D03               	skipz
  5413  0EEB  2EE1               	goto	l2055
  5414                           
  5415                           ;launcher_functions.c: 191: LATC2 = (0);
  5416  0EEC  0022               	movlb	2	; select bank2
  5417  0EED  110E               	bcf	14,2	;volatile
  5418                           
  5419                           ;launcher_functions.c: 192: WriteSPI((0x06));
  5420  0EEE  3006               	movlw	6
  5421  0EEF  318C  249C  318E   	fcall	_WriteSPI
  5422                           
  5423                           ;launcher_functions.c: 193: LATC2 = (1);
  5424  0EF2  0022               	movlb	2	; select bank2
  5425  0EF3  150E               	bsf	14,2	;volatile
  5426  0EF4                     l320:	
  5427                           ;launcher_functions.c: 195: do
  5428                           
  5429                           
  5430                           ;launcher_functions.c: 196: {
  5431                           ;launcher_functions.c: 197: StatusReg = (ReadStatusSPI() & 0x02);
  5432  0EF4  318C  2455  318E   	fcall	_ReadStatusSPI
  5433  0EF7  3902               	andlw	2
  5434  0EF8  0020               	movlb	0	; select bank0
  5435  0EF9  00AB               	movwf	??_WriteOverheadSPI
  5436  0EFA  082B               	movf	??_WriteOverheadSPI,w
  5437  0EFB  00B4               	movwf	WriteOverheadSPI@StatusReg
  5438                           
  5439                           ;launcher_functions.c: 198: } while (!StatusReg);
  5440  0EFC  0834               	movf	WriteOverheadSPI@StatusReg,w
  5441  0EFD  1903               	btfsc	3,2
  5442  0EFE  2EF4               	goto	l320
  5443                           
  5444                           ;launcher_functions.c: 203: LATC2=(0);
  5445  0EFF  0022               	movlb	2	; select bank2
  5446  0F00  110E               	bcf	14,2	;volatile
  5447                           
  5448                           ;launcher_functions.c: 204: WriteSPI((0x02));
  5449  0F01  3002               	movlw	2
  5450  0F02  318C  249C  318E   	fcall	_WriteSPI
  5451                           
  5452                           ;launcher_functions.c: 205: WriteSPI(address_bytes[0]);
  5453  0F05  0020               	movlb	0	; select bank0
  5454  0F06  0831               	movf	WriteOverheadSPI@address_bytes,w
  5455  0F07  318C  249C  318E   	fcall	_WriteSPI
  5456                           
  5457                           ;launcher_functions.c: 206: WriteSPI(address_bytes[1]);
  5458  0F0A  0020               	movlb	0	; select bank0
  5459  0F0B  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5460  0F0C  318C  249C  318E   	fcall	_WriteSPI
  5461                           
  5462                           ;launcher_functions.c: 207: WriteSPI(address_bytes[2]);
  5463  0F0F  0020               	movlb	0	; select bank0
  5464  0F10  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5465  0F11  318C  249C         	fcall	_WriteSPI
  5466  0F13  0008               	return
  5467  0F14                     __end_of_WriteOverheadSPI:	
  5468                           ;launcher_functions.c: 209: return;
  5469                           
  5470                           
  5471                           	psect	text17
  5472  0C78                     __ptext17:	
  5473 ;; *************** function _InitSPI *****************
  5474 ;; Defined at:
  5475 ;;		line 116 in file "launcher_functions.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;		None               void
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5489 ;;      Params:         0       0       0       0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0
  5492 ;;      Totals:         0       0       0       0       0       0       0       0
  5493 ;;Total ram usage:        0 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    2
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_RecordMode
  5500 ;;		_SendGPSSPI
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function _InitSPI
  5506  0C78                     _InitSPI:	
  5507                           
  5508                           ;launcher_functions.c: 119: TRISCbits.TRISC2 = 0;
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5512  0C78  0021               	movlb	1	; select bank1
  5513  0C79  110E               	bcf	14,2	;volatile
  5514                           
  5515                           ;launcher_functions.c: 120: TRISCbits.TRISC3 = 0;
  5516  0C7A  118E               	bcf	14,3	;volatile
  5517                           
  5518                           ;launcher_functions.c: 121: TRISCbits.TRISC4 = 1;
  5519  0C7B  160E               	bsf	14,4	;volatile
  5520                           
  5521                           ;launcher_functions.c: 122: TRISCbits.TRISC5 = 0;
  5522  0C7C  128E               	bcf	14,5	;volatile
  5523                           
  5524                           ;launcher_functions.c: 124: LATC2 = (1);
  5525  0C7D  0022               	movlb	2	; select bank2
  5526  0C7E  150E               	bsf	14,2	;volatile
  5527                           
  5528                           ;launcher_functions.c: 127: SSPCON1bits.SSPEN=0x00;
  5529  0C7F  0024               	movlb	4	; select bank4
  5530  0C80  1295               	bcf	21,5	;volatile
  5531                           
  5532                           ;launcher_functions.c: 128: SSPCON1bits.SSPM=0x01;
  5533  0C81  0815               	movf	21,w	;volatile
  5534  0C82  39F0               	andlw	-16
  5535  0C83  3801               	iorlw	1
  5536  0C84  0095               	movwf	21	;volatile
  5537                           
  5538                           ;launcher_functions.c: 129: SSPCON1bits.CKP=0;
  5539  0C85  1215               	bcf	21,4	;volatile
  5540                           
  5541                           ;launcher_functions.c: 130: SSPSTATbits.CKE=1;
  5542  0C86  1714               	bsf	20,6	;volatile
  5543                           
  5544                           ;launcher_functions.c: 131: SSPSTATbits.SMP=0;
  5545  0C87  1394               	bcf	20,7	;volatile
  5546                           
  5547                           ;launcher_functions.c: 132: SSPCON1bits.SSPEN=0x01;
  5548  0C88  1695               	bsf	21,5	;volatile
  5549  0C89  0008               	return
  5550  0C8A                     __end_of_InitSPI:	
  5551                           
  5552                           	psect	text18
  5553  0CDC                     __ptext18:	
  5554 ;; *************** function _ReadBuffer *****************
  5555 ;; Defined at:
  5556 ;;		line 224 in file "launcher_functions.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  read_data       1    1[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      unsigned char 
  5563 ;; Registers used:
  5564 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5570 ;;      Params:         0       0       0       0       0       0       0       0
  5571 ;;      Locals:         0       1       0       0       0       0       0       0
  5572 ;;      Temps:          0       1       0       0       0       0       0       0
  5573 ;;      Totals:         0       2       0       0       0       0       0       0
  5574 ;;Total ram usage:        2 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    2
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_RecordMode
  5581 ;;		_PreRecordMode
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function _ReadBuffer
  5587  0CDC                     _ReadBuffer:	
  5588                           
  5589                           ;launcher_functions.c: 226: unsigned char read_data;
  5590                           ;launcher_functions.c: 228: read_data = buffer[start];
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5594  0CDC  087B               	movf	_start,w
  5595  0CDD  3EA0               	addlw	_buffer& (0+255)
  5596  0CDE  0086               	movwf	6
  5597  0CDF  3001               	movlw	1	; select bank3/4
  5598  0CE0  0087               	movwf	7
  5599  0CE1  0801               	movf	1,w
  5600  0CE2  0020               	movlb	0	; select bank0
  5601  0CE3  00A0               	movwf	??_ReadBuffer
  5602  0CE4  0820               	movf	??_ReadBuffer,w
  5603  0CE5  00A1               	movwf	ReadBuffer@read_data
  5604                           
  5605                           ;launcher_functions.c: 229: if (start == 51)
  5606  0CE6  3033               	movlw	51
  5607  0CE7  067B               	xorwf	_start,w
  5608  0CE8  047C               	iorwf	_start+1,w
  5609  0CE9  1D03               	skipz
  5610  0CEA  2CEE               	goto	l2217
  5611                           
  5612                           ;launcher_functions.c: 230: start = 0;
  5613  0CEB  01FB               	clrf	_start
  5614  0CEC  01FC               	clrf	_start+1
  5615  0CED  2CF2               	goto	l331
  5616  0CEE                     l2217:	
  5617                           
  5618                           ;launcher_functions.c: 231: else
  5619                           ;launcher_functions.c: 232: start++;
  5620  0CEE  3001               	movlw	1
  5621  0CEF  07FB               	addwf	_start,f
  5622  0CF0  3000               	movlw	0
  5623  0CF1  3DFC               	addwfc	_start+1,f
  5624  0CF2                     l331:	
  5625                           
  5626                           ;launcher_functions.c: 233: return read_data;
  5627  0CF2  0821               	movf	ReadBuffer@read_data,w
  5628  0CF3  0008               	return
  5629  0CF4                     __end_of_ReadBuffer:	
  5630                           
  5631                           	psect	text19
  5632  0C46                     __ptext19:	
  5633 ;; *************** function _CheckDisconnect *****************
  5634 ;; Defined at:
  5635 ;;		line 702 in file "launcher_functions.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  status          1    8[BANK0 ] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      unsigned char 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, pclath, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5649 ;;      Params:         0       0       0       0       0       0       0       0
  5650 ;;      Locals:         0       1       0       0       0       0       0       0
  5651 ;;      Temps:          0       1       0       0       0       0       0       0
  5652 ;;      Totals:         0       2       0       0       0       0       0       0
  5653 ;;Total ram usage:        2 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    4
  5656 ;; This function calls:
  5657 ;;		_ReadStatusSPI
  5658 ;; This function is called by:
  5659 ;;		_RecordMode
  5660 ;;		_PreRecordMode
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           
  5665                           ;psect for function _CheckDisconnect
  5666  0C46                     _CheckDisconnect:	
  5667                           
  5668                           ;launcher_functions.c: 704: unsigned char status;
  5669                           ;launcher_functions.c: 705: status = ReadStatusSPI();
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _CheckDisconnect: [wreg+status,2+status,0+pclath+cstack]
  5673  0C46  318C  2455  318C   	fcall	_ReadStatusSPI
  5674  0C49  0020               	movlb	0	; select bank0
  5675  0C4A  00A7               	movwf	??_CheckDisconnect
  5676  0C4B  0827               	movf	??_CheckDisconnect,w
  5677  0C4C  00A8               	movwf	CheckDisconnect@status
  5678                           
  5679                           ;launcher_functions.c: 706: if(status==0xff)
  5680  0C4D  0828               	movf	CheckDisconnect@status,w
  5681  0C4E  3AFF               	xorlw	255
  5682  0C4F  1D03               	skipz
  5683  0C50  2C53               	goto	l2467
  5684                           
  5685                           ;launcher_functions.c: 707: return 1;
  5686  0C51  3001               	movlw	1
  5687  0C52  0008               	return
  5688  0C53                     l2467:	
  5689                           
  5690                           ;launcher_functions.c: 708: else
  5691                           ;launcher_functions.c: 709: return 0;
  5692  0C53  3000               	movlw	0
  5693  0C54  0008               	return
  5694  0C55                     __end_of_CheckDisconnect:	
  5695                           
  5696                           	psect	text20
  5697  0C55                     __ptext20:	
  5698 ;; *************** function _ReadStatusSPI *****************
  5699 ;; Defined at:
  5700 ;;		line 164 in file "launcher_functions.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      unsigned char 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5714 ;;      Params:         0       0       0       0       0       0       0       0
  5715 ;;      Locals:         0       1       0       0       0       0       0       0
  5716 ;;      Temps:          0       1       0       0       0       0       0       0
  5717 ;;      Totals:         0       2       0       0       0       0       0       0
  5718 ;;Total ram usage:        2 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    3
  5721 ;; This function calls:
  5722 ;;		_ReadSPI
  5723 ;;		_WriteSPI
  5724 ;; This function is called by:
  5725 ;;		_WriteOverheadSPI
  5726 ;;		_CheckDisconnect
  5727 ;;		_ReadOverheadSPI
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function _ReadStatusSPI
  5733  0C55                     _ReadStatusSPI:	
  5734                           
  5735                           ;launcher_functions.c: 166: unsigned char dataRead;
  5736                           ;launcher_functions.c: 168: LATC2=(0);
  5737                           
  5738                           ;incstack = 0
  5739                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5740  0C55  0022               	movlb	2	; select bank2
  5741  0C56  110E               	bcf	14,2	;volatile
  5742                           
  5743                           ;launcher_functions.c: 169: WriteSPI((0x05));
  5744  0C57  3005               	movlw	5
  5745  0C58  318C  249C  318C   	fcall	_WriteSPI
  5746                           
  5747                           ;launcher_functions.c: 170: dataRead = ReadSPI();
  5748  0C5B  3187  27F3         	fcall	_ReadSPI
  5749  0C5D  0020               	movlb	0	; select bank0
  5750  0C5E  00A5               	movwf	??_ReadStatusSPI
  5751  0C5F  0825               	movf	??_ReadStatusSPI,w
  5752  0C60  00A6               	movwf	ReadStatusSPI@dataRead
  5753                           
  5754                           ;launcher_functions.c: 171: LATC2=(1);
  5755  0C61  0022               	movlb	2	; select bank2
  5756  0C62  150E               	bsf	14,2	;volatile
  5757                           
  5758                           ;launcher_functions.c: 173: return(dataRead);
  5759  0C63  0020               	movlb	0	; select bank0
  5760  0C64  0826               	movf	ReadStatusSPI@dataRead,w
  5761  0C65  0008               	return
  5762  0C66                     __end_of_ReadStatusSPI:	
  5763                           
  5764                           	psect	text21
  5765  0C9C                     __ptext21:	
  5766 ;; *************** function _WriteSPI *****************
  5767 ;; Defined at:
  5768 ;;		line 144 in file "launcher_functions.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  databyte        1    wreg     unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  databyte        1    4[BANK0 ] unsigned char 
  5773 ;;  temp            2    2[BANK0 ] unsigned int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;		None               void
  5776 ;; Registers used:
  5777 ;;		wreg
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5783 ;;      Params:         0       0       0       0       0       0       0       0
  5784 ;;      Locals:         0       3       0       0       0       0       0       0
  5785 ;;      Temps:          0       2       0       0       0       0       0       0
  5786 ;;      Totals:         0       5       0       0       0       0       0       0
  5787 ;;Total ram usage:        5 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    2
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_ReadStatusSPI
  5794 ;;		_WriteOverheadSPI
  5795 ;;		_RecordMode
  5796 ;;		_SendGPSSPI
  5797 ;;		_ReadOverheadSPI
  5798 ;;		_PreRecordMode
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _WriteSPI
  5804  0C9C                     _WriteSPI:	
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _WriteSPI: [wreg]
  5808                           ;WriteSPI@databyte stored from wreg
  5809  0C9C  0020               	movlb	0	; select bank0
  5810  0C9D  00A4               	movwf	WriteSPI@databyte
  5811                           
  5812                           ;launcher_functions.c: 146: unsigned int temp;
  5813                           ;launcher_functions.c: 147: temp = SSPBUF;
  5814  0C9E  0024               	movlb	4	; select bank4
  5815  0C9F  0811               	movf	17,w	;volatile
  5816  0CA0  0020               	movlb	0	; select bank0
  5817  0CA1  00A0               	movwf	??_WriteSPI
  5818  0CA2  01A1               	clrf	??_WriteSPI+1
  5819  0CA3  0820               	movf	??_WriteSPI,w
  5820  0CA4  00A2               	movwf	WriteSPI@temp
  5821  0CA5  0821               	movf	??_WriteSPI+1,w
  5822  0CA6  00A3               	movwf	WriteSPI@temp+1
  5823                           
  5824                           ;launcher_functions.c: 148: PIR1bits.SSP1IF=0;
  5825  0CA7  1191               	bcf	17,3	;volatile
  5826                           
  5827                           ;launcher_functions.c: 149: SSPBUF = databyte;
  5828  0CA8  0824               	movf	WriteSPI@databyte,w
  5829  0CA9  0024               	movlb	4	; select bank4
  5830  0CAA  0091               	movwf	17	;volatile
  5831  0CAB                     l303:	
  5832                           ;launcher_functions.c: 150: while(!PIR1bits.SSP1IF);
  5833                           
  5834  0CAB  0020               	movlb	0	; select bank0
  5835  0CAC  1991               	btfsc	17,3	;volatile
  5836  0CAD  0008               	return
  5837  0CAE  2CAB               	goto	l303
  5838  0CAF                     __end_of_WriteSPI:	
  5839                           
  5840                           	psect	text22
  5841  07F3                     __ptext22:	
  5842 ;; *************** function _ReadSPI *****************
  5843 ;; Defined at:
  5844 ;;		line 153 in file "launcher_functions.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;		None
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      unsigned char 
  5851 ;; Registers used:
  5852 ;;		wreg, status,2
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5858 ;;      Params:         0       0       0       0       0       0       0       0
  5859 ;;      Locals:         0       1       0       0       0       0       0       0
  5860 ;;      Temps:          0       1       0       0       0       0       0       0
  5861 ;;      Totals:         0       2       0       0       0       0       0       0
  5862 ;;Total ram usage:        2 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    2
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_ReadStatusSPI
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _ReadSPI
  5874  07F3                     _ReadSPI:	
  5875                           
  5876                           ;launcher_functions.c: 155: unsigned char dataByte;
  5877                           ;launcher_functions.c: 157: SSPBUF = 0x00;
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _ReadSPI: [wreg+status,2]
  5881  07F3  0024               	movlb	4	; select bank4
  5882  07F4  0191               	clrf	17	;volatile
  5883  07F5                     l309:	
  5884                           ;launcher_functions.c: 158: while(!SSPSTATbits.BF);
  5885                           
  5886  07F5  1C14               	btfss	20,0	;volatile
  5887  07F6  2FF5               	goto	l309
  5888                           
  5889                           ;launcher_functions.c: 159: dataByte = SSPBUF;
  5890  07F7  0811               	movf	17,w	;volatile
  5891  07F8  0020               	movlb	0	; select bank0
  5892  07F9  00A0               	movwf	??_ReadSPI
  5893  07FA  0820               	movf	??_ReadSPI,w
  5894  07FB  00A1               	movwf	ReadSPI@dataByte
  5895                           
  5896                           ;launcher_functions.c: 160: PIR1bits.SSP1IF=0;
  5897  07FC  1191               	bcf	17,3	;volatile
  5898                           
  5899                           ;launcher_functions.c: 161: return (dataByte);
  5900  07FD  0821               	movf	ReadSPI@dataByte,w
  5901  07FE  0008               	return
  5902  07FF                     __end_of_ReadSPI:	
  5903                           
  5904                           	psect	text23
  5905  0C08                     __ptext23:	
  5906 ;; *************** function _InitWatchdog *****************
  5907 ;; Defined at:
  5908 ;;		line 135 in file "launcher_functions.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5922 ;;      Params:         0       0       0       0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0
  5925 ;;      Totals:         0       0       0       0       0       0       0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    2
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function _InitWatchdog
  5938  0C08                     _InitWatchdog:	
  5939                           
  5940                           ;launcher_functions.c: 138: WDTCONbits.WDTPS = 0x0A;
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5944  0C08  0021               	movlb	1	; select bank1
  5945  0C09  0817               	movf	23,w	;volatile
  5946  0C0A  39C1               	andlw	-63
  5947  0C0B  3814               	iorlw	20
  5948  0C0C  0097               	movwf	23	;volatile
  5949                           
  5950                           ;launcher_functions.c: 139: WDTCONbits.SWDTEN = 0;
  5951  0C0D  1017               	bcf	23,0	;volatile
  5952  0C0E  0008               	return
  5953  0C0F                     __end_of_InitWatchdog:	
  5954                           
  5955                           	psect	text24
  5956  0C37                     __ptext24:	
  5957 ;; *************** function _InitUART *****************
  5958 ;; Defined at:
  5959 ;;		line 264 in file "launcher_functions.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;		None               void
  5966 ;; Registers used:
  5967 ;;		wreg, status,2
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5973 ;;      Params:         0       0       0       0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    2
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_main
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           
  5988                           ;psect for function _InitUART
  5989  0C37                     _InitUART:	
  5990                           
  5991                           ;launcher_functions.c: 267: TRISCbits.TRISC6 = 0;
  5992                           
  5993                           ;incstack = 0
  5994                           ; Regs used in _InitUART: [wreg+status,2]
  5995  0C37  0021               	movlb	1	; select bank1
  5996  0C38  130E               	bcf	14,6	;volatile
  5997                           
  5998                           ;launcher_functions.c: 268: TRISCbits.TRISC7 = 1;
  5999  0C39  178E               	bsf	14,7	;volatile
  6000                           
  6001                           ;launcher_functions.c: 269: TXSTAbits.BRGH = 0;
  6002  0C3A  0023               	movlb	3	; select bank3
  6003  0C3B  111E               	bcf	30,2	;volatile
  6004                           
  6005                           ;launcher_functions.c: 271: SPBRGH = 0;
  6006  0C3C  019C               	clrf	28	;volatile
  6007                           
  6008                           ;launcher_functions.c: 272: SPBRGL = 51;
  6009  0C3D  3033               	movlw	51
  6010  0C3E  009B               	movwf	27	;volatile
  6011                           
  6012                           ;launcher_functions.c: 273: TXSTAbits.TX9 = 0;
  6013  0C3F  131E               	bcf	30,6	;volatile
  6014                           
  6015                           ;launcher_functions.c: 274: TXSTAbits.SYNC = 0;
  6016  0C40  121E               	bcf	30,4	;volatile
  6017                           
  6018                           ;launcher_functions.c: 275: TXSTAbits.TXEN = 1;
  6019  0C41  169E               	bsf	30,5	;volatile
  6020                           
  6021                           ;launcher_functions.c: 277: RCSTAbits.SPEN = 1;
  6022  0C42  179D               	bsf	29,7	;volatile
  6023                           
  6024                           ;launcher_functions.c: 278: RCSTAbits.RX9 = 0;
  6025  0C43  131D               	bcf	29,6	;volatile
  6026                           
  6027                           ;launcher_functions.c: 279: RCSTAbits.CREN = 1;
  6028  0C44  161D               	bsf	29,4	;volatile
  6029  0C45  0008               	return
  6030  0C46                     __end_of_InitUART:	
  6031                           
  6032                           	psect	text25
  6033  0C28                     __ptext25:	
  6034 ;; *************** function _InitTimer1 *****************
  6035 ;; Defined at:
  6036 ;;		line 104 in file "launcher_functions.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;		None               void
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6050 ;;      Params:         0       0       0       0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    2
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_main
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function _InitTimer1
  6066  0C28                     _InitTimer1:	
  6067                           
  6068                           ;launcher_functions.c: 106: T1CONbits.TMR1CS = 0;
  6069                           
  6070                           ;incstack = 0
  6071                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  6072  0C28  303F               	movlw	-193
  6073  0C29  0020               	movlb	0	; select bank0
  6074  0C2A  0598               	andwf	24,f	;volatile
  6075                           
  6076                           ;launcher_functions.c: 107: T1CONbits.T1CKPS = 2;
  6077  0C2B  0818               	movf	24,w	;volatile
  6078  0C2C  39CF               	andlw	-49
  6079  0C2D  3820               	iorlw	32
  6080  0C2E  0098               	movwf	24	;volatile
  6081                           
  6082                           ;launcher_functions.c: 108: T1CONbits.nT1SYNC = 1;
  6083  0C2F  1518               	bsf	24,2	;volatile
  6084                           
  6085                           ;launcher_functions.c: 109: T1GCONbits.TMR1GE = 0;
  6086  0C30  1399               	bcf	25,7	;volatile
  6087                           
  6088                           ;launcher_functions.c: 110: TMR1H = 0xFF;
  6089  0C31  30FF               	movlw	255
  6090  0C32  0097               	movwf	23	;volatile
  6091                           
  6092                           ;launcher_functions.c: 111: TMR1L = 0x71;
  6093  0C33  3071               	movlw	113
  6094  0C34  0096               	movwf	22	;volatile
  6095                           
  6096                           ;launcher_functions.c: 112: T1CONbits.TMR1ON = 1;
  6097  0C35  1418               	bsf	24,0	;volatile
  6098  0C36  0008               	return
  6099  0C37                     __end_of_InitTimer1:	
  6100                           
  6101                           	psect	text26
  6102  0D5E                     __ptext26:	
  6103 ;; *************** function _InitGPIO *****************
  6104 ;; Defined at:
  6105 ;;		line 13 in file "launcher_functions.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;		None               void
  6112 ;; Registers used:
  6113 ;;		status,2
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6119 ;;      Params:         0       0       0       0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0
  6122 ;;      Totals:         0       0       0       0       0       0       0       0
  6123 ;;Total ram usage:        0 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    2
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_main
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _InitGPIO
  6135  0D5E                     _InitGPIO:	
  6136                           
  6137                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  6138                           
  6139                           ;incstack = 0
  6140                           ; Regs used in _InitGPIO: [status,2]
  6141  0D5E  0021               	movlb	1	; select bank1
  6142  0D5F  148C               	bsf	12,1	;volatile
  6143                           
  6144                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  6145  0D60  0023               	movlb	3	; select bank3
  6146  0D61  108C               	bcf	12,1	;volatile
  6147                           
  6148                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  6149  0D62  0027               	movlb	7	; select bank7
  6150  0D63  1491               	bsf	17,1	;volatile
  6151                           
  6152                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  6153  0D64  1492               	bsf	18,1	;volatile
  6154                           
  6155                           ;launcher_functions.c: 22: IOCAF = 0x00;
  6156  0D65  0193               	clrf	19	;volatile
  6157                           
  6158                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  6159  0D66  158B               	bsf	11,3	;volatile
  6160                           
  6161                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  6162  0D67  0021               	movlb	1	; select bank1
  6163  0D68  158D               	bsf	13,3	;volatile
  6164                           
  6165                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  6166  0D69  0023               	movlb	3	; select bank3
  6167  0D6A  118D               	bcf	13,3	;volatile
  6168                           
  6169                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  6170  0D6B  0027               	movlb	7	; select bank7
  6171  0D6C  1595               	bsf	21,3	;volatile
  6172                           
  6173                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  6174  0D6D  1594               	bsf	20,3	;volatile
  6175                           
  6176                           ;launcher_functions.c: 30: IOCBF = 0x00;
  6177  0D6E  0196               	clrf	22	;volatile
  6178                           
  6179                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  6180  0D6F  158B               	bsf	11,3	;volatile
  6181                           
  6182                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  6183  0D70  0021               	movlb	1	; select bank1
  6184  0D71  140C               	bsf	12,0	;volatile
  6185                           
  6186                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  6187  0D72  150C               	bsf	12,2	;volatile
  6188                           
  6189                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  6190  0D73  158C               	bsf	12,3	;volatile
  6191                           
  6192                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  6193  0D74  120C               	bcf	12,4	;volatile
  6194                           
  6195                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  6196  0D75  128C               	bcf	12,5	;volatile
  6197                           
  6198                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  6199  0D76  130C               	bcf	12,6	;volatile
  6200                           
  6201                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  6202  0D77  138C               	bcf	12,7	;volatile
  6203                           
  6204                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  6205  0D78  100D               	bcf	13,0	;volatile
  6206                           
  6207                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  6208  0D79  148D               	bsf	13,1	;volatile
  6209                           
  6210                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  6211  0D7A  110D               	bcf	13,2	;volatile
  6212                           
  6213                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  6214  0D7B  120D               	bcf	13,4	;volatile
  6215                           
  6216                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  6217  0D7C  128D               	bcf	13,5	;volatile
  6218                           
  6219                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  6220  0D7D  0020               	movlb	0	; select bank0
  6221  0D7E  100D               	bcf	13,0	;volatile
  6222                           
  6223                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  6224  0D7F  120D               	bcf	13,4	;volatile
  6225                           
  6226                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  6227  0D80  128D               	bcf	13,5	;volatile
  6228                           
  6229                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6230  0D81  0023               	movlb	3	; select bank3
  6231  0D82  100D               	bcf	13,0	;volatile
  6232                           
  6233                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6234  0D83  108D               	bcf	13,1	;volatile
  6235                           
  6236                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6237  0D84  110D               	bcf	13,2	;volatile
  6238                           
  6239                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6240  0D85  120D               	bcf	13,4	;volatile
  6241                           
  6242                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6243  0D86  128D               	bcf	13,5	;volatile
  6244                           
  6245                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6246  0D87  0021               	movlb	1	; select bank1
  6247  0D88  100E               	bcf	14,0	;volatile
  6248                           
  6249                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6250  0D89  108E               	bcf	14,1	;volatile
  6251  0D8A  0008               	return
  6252  0D8B                     __end_of_InitGPIO:	
  6253                           
  6254                           	psect	text27
  6255  0C16                     __ptext27:	
  6256 ;; *************** function _InitCLK *****************
  6257 ;; Defined at:
  6258 ;;		line 8 in file "launcher_functions.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6272 ;;      Params:         0       0       0       0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    2
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_main
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           
  6287                           ;psect for function _InitCLK
  6288  0C16                     _InitCLK:	
  6289                           
  6290                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6291                           
  6292                           ;incstack = 0
  6293                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6294  0C16  3078               	movlw	120
  6295  0C17  0021               	movlb	1	; select bank1
  6296  0C18  0499               	iorwf	25,f	;volatile
  6297                           
  6298                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6299  0C19  0819               	movf	25,w	;volatile
  6300  0C1A  39FC               	andlw	-4
  6301  0C1B  3802               	iorlw	2
  6302  0C1C  0099               	movwf	25	;volatile
  6303  0C1D  0008               	return
  6304  0C1E                     __end_of_InitCLK:	
  6305                           
  6306                           	psect	text28
  6307  0D0D                     __ptext28:	
  6308 ;; *************** function _InitADC *****************
  6309 ;; Defined at:
  6310 ;;		line 73 in file "launcher_functions.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;		None
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;		None               void
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6324 ;;      Params:         0       0       0       0       0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    2
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_main
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           
  6339                           ;psect for function _InitADC
  6340  0D0D                     _InitADC:	
  6341                           
  6342                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6343                           
  6344                           ;incstack = 0
  6345                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6346  0D0D  0021               	movlb	1	; select bank1
  6347  0D0E  140C               	bsf	12,0	;volatile
  6348                           
  6349                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6350  0D0F  0023               	movlb	3	; select bank3
  6351  0D10  140C               	bsf	12,0	;volatile
  6352                           
  6353                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6354  0D11  0021               	movlb	1	; select bank1
  6355  0D12  081E               	movf	30,w	;volatile
  6356  0D13  398F               	andlw	-113
  6357  0D14  3850               	iorlw	80
  6358  0D15  009E               	movwf	30	;volatile
  6359                           
  6360                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6361  0D16  30FC               	movlw	-4
  6362  0D17  059E               	andwf	30,f	;volatile
  6363                           
  6364                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6365  0D18  111E               	bcf	30,2	;volatile
  6366                           
  6367                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6368  0D19  3083               	movlw	-125
  6369  0D1A  059D               	andwf	29,f	;volatile
  6370                           
  6371                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6372  0D1B  300F               	movlw	15
  6373  0D1C  049F               	iorwf	31,f	;volatile
  6374                           
  6375                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6376  0D1D  139E               	bcf	30,7	;volatile
  6377                           
  6378                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6379  0D1E  179D               	bsf	29,7	;volatile
  6380                           
  6381                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6382  0D1F  141D               	bsf	29,0	;volatile
  6383                           
  6384                           ;launcher_functions.c: 90: ADIF = 0;
  6385  0D20  0020               	movlb	0	; select bank0
  6386  0D21  1311               	bcf	17,6	;volatile
  6387                           
  6388                           ;launcher_functions.c: 91: ADIE = 1;
  6389  0D22  0021               	movlb	1	; select bank1
  6390  0D23  1711               	bsf	17,6	;volatile
  6391                           
  6392                           ;launcher_functions.c: 92: PEIE = 1;
  6393  0D24  170B               	bsf	11,6	;volatile
  6394  0D25  0008               	return
  6395  0D26                     __end_of_InitADC:	
  6396                           
  6397                           	psect	text29
  6398  0CF4                     __ptext29:	
  6399 ;; *************** function _Hibernate *****************
  6400 ;; Defined at:
  6401 ;;		line 549 in file "launcher_functions.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;		None
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  count           1    1[BANK0 ] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;		None               void
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6415 ;;      Params:         0       0       0       0       0       0       0       0
  6416 ;;      Locals:         0       1       0       0       0       0       0       0
  6417 ;;      Temps:          0       1       0       0       0       0       0       0
  6418 ;;      Totals:         0       2       0       0       0       0       0       0
  6419 ;;Total ram usage:        2 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    2
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_main
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           
  6430                           ;psect for function _Hibernate
  6431  0CF4                     _Hibernate:	
  6432                           
  6433                           ;launcher_functions.c: 551: unsigned char count = 0;
  6434                           
  6435                           ;incstack = 0
  6436                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6437  0CF4  0020               	movlb	0	; select bank0
  6438  0CF5  01A1               	clrf	Hibernate@count
  6439                           
  6440                           ;launcher_functions.c: 552: WDTCONbits.WDTPS = 14;
  6441  0CF6  0021               	movlb	1	; select bank1
  6442  0CF7  0817               	movf	23,w	;volatile
  6443  0CF8  39C1               	andlw	-63
  6444  0CF9  381C               	iorlw	28
  6445  0CFA  0097               	movwf	23	;volatile
  6446                           
  6447                           ;launcher_functions.c: 553: WDTCONbits.SWDTEN = 1;
  6448  0CFB  1417               	bsf	23,0	;volatile
  6449                           
  6450                           ;launcher_functions.c: 554: while(!recordFlag && count++ < 3)
  6451  0CFC  2D06               	goto	l2801
  6452  0CFD                     l2803:	
  6453  0CFD  3001               	movlw	1
  6454  0CFE  00A0               	movwf	??_Hibernate
  6455  0CFF  0820               	movf	??_Hibernate,w
  6456  0D00  07A1               	addwf	Hibernate@count,f
  6457  0D01  3004               	movlw	4
  6458  0D02  0221               	subwf	Hibernate@count,w
  6459  0D03  1803               	btfsc	3,0
  6460  0D04  2D0A               	goto	l428
  6461  0D05  0063               	sleep	;# 
  6462  0D06                     l2801:	
  6463  0D06  0020               	movlb	0	; select bank0
  6464  0D07  08EC               	movf	_recordFlag,f
  6465  0D08  1903               	btfsc	3,2
  6466  0D09  2CFD               	goto	l2803
  6467  0D0A                     l428:	
  6468                           
  6469                           ;launcher_functions.c: 557: }
  6470                           ;launcher_functions.c: 558: WDTCONbits.SWDTEN = 0;
  6471  0D0A  0021               	movlb	1	; select bank1
  6472  0D0B  1017               	bcf	23,0	;volatile
  6473  0D0C  0008               	return
  6474  0D0D                     __end_of_Hibernate:	
  6475                           
  6476                           	psect	text30
  6477  0C66                     __ptext30:	
  6478 ;; *************** function _GoToSleep *****************
  6479 ;; Defined at:
  6480 ;;		line 541 in file "launcher_functions.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  count           1    wreg     unsigned char 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  count           1    1[BANK0 ] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;		None               void
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6494 ;;      Params:         0       0       0       0       0       0       0       0
  6495 ;;      Locals:         0       1       0       0       0       0       0       0
  6496 ;;      Temps:          0       1       0       0       0       0       0       0
  6497 ;;      Totals:         0       2       0       0       0       0       0       0
  6498 ;;Total ram usage:        2 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    2
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_main
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           
  6509                           ;psect for function _GoToSleep
  6510  0C66                     _GoToSleep:	
  6511                           
  6512                           ;incstack = 0
  6513                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6514                           ;GoToSleep@count stored from wreg
  6515  0C66  0020               	movlb	0	; select bank0
  6516  0C67  00A1               	movwf	GoToSleep@count
  6517                           
  6518                           ;launcher_functions.c: 543: WDTCONbits.WDTPS = count;
  6519  0C68  0821               	movf	GoToSleep@count,w
  6520  0C69  00A0               	movwf	??_GoToSleep
  6521  0C6A  0DA0               	rlf	??_GoToSleep,f
  6522  0C6B  0021               	movlb	1	; select bank1
  6523  0C6C  0817               	movf	23,w	;volatile
  6524  0C6D  0020               	movlb	0	; select bank0
  6525  0C6E  0620               	xorwf	??_GoToSleep,w
  6526  0C6F  39C1               	andlw	-63
  6527  0C70  0620               	xorwf	??_GoToSleep,w
  6528  0C71  0021               	movlb	1	; select bank1
  6529  0C72  0097               	movwf	23	;volatile
  6530                           
  6531                           ;launcher_functions.c: 544: WDTCONbits.SWDTEN = 1;
  6532  0C73  1417               	bsf	23,0	;volatile
  6533  0C74  0063               	sleep	;# 
  6534                           
  6535                           ;launcher_functions.c: 546: WDTCONbits.SWDTEN = 0;
  6536  0C75  0021               	movlb	1	; select bank1
  6537  0C76  1017               	bcf	23,0	;volatile
  6538  0C77  0008               	return
  6539  0C78                     __end_of_GoToSleep:	
  6540                           
  6541                           	psect	intentry
  6542  0004                     __pintentry:	
  6543 ;; *************** function _isr *****************
  6544 ;; Defined at:
  6545 ;;		line 118 in file "launcher_main.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;		None               void
  6552 ;; Registers used:
  6553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6559 ;;      Params:         0       0       0       0       0       0       0       0
  6560 ;;      Locals:         2       0       0       0       0       0       0       0
  6561 ;;      Temps:          5       0       0       0       0       0       0       0
  6562 ;;      Totals:         7       0       0       0       0       0       0       0
  6563 ;;Total ram usage:        7 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    1
  6566 ;; This function calls:
  6567 ;;		_WriteBuffer
  6568 ;; This function is called by:
  6569 ;;		Interrupt level 1
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573  0004                     _isr:	
  6574                           
  6575                           ;incstack = 0
  6576                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6577  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6578  0005  3180               	pagesel	$
  6579  0006  0020               	movlb	0	; select bank0
  6580  0007  087F               	movf	127,w
  6581  0008  00F6               	movwf	??_isr+4
  6582                           
  6583                           ;launcher_main.c: 121: if (PIR1bits.RCIF)
  6584  0009  1E91               	btfss	17,5	;volatile
  6585  000A  2837               	goto	i1l2909
  6586                           
  6587                           ;launcher_main.c: 122: {
  6588                           ;launcher_main.c: 124: if(OERR)
  6589  000B  0023               	movlb	3	; select bank3
  6590  000C  1C9D               	btfss	29,1	;volatile
  6591  000D  2810               	goto	i1l2891
  6592                           
  6593                           ;launcher_main.c: 125: {
  6594                           ;launcher_main.c: 126: RCSTAbits.CREN = 0;
  6595  000E  121D               	bcf	29,4	;volatile
  6596                           
  6597                           ;launcher_main.c: 127: RCSTAbits.CREN = 1;
  6598  000F  161D               	bsf	29,4	;volatile
  6599  0010                     i1l2891:	
  6600                           
  6601                           ;launcher_main.c: 128: }
  6602                           ;launcher_main.c: 129: gpsMessage[gpsIndex++] = RCREG;
  6603  0010  0819               	movf	25,w	;volatile
  6604  0011  00F2               	movwf	??_isr
  6605  0012  087D               	movf	_gpsIndex,w
  6606  0013  3E20               	addlw	_gpsMessage& (0+255)
  6607  0014  0086               	movwf	6
  6608  0015  3001               	movlw	1	; select bank2/3
  6609  0016  0087               	movwf	7
  6610  0017  0872               	movf	??_isr,w
  6611  0018  0081               	movwf	1
  6612  0019  3001               	movlw	1
  6613  001A  00F2               	movwf	??_isr
  6614  001B  0872               	movf	??_isr,w
  6615  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6616                           
  6617                           ;launcher_main.c: 130: if(gpsIndex >= 50)
  6618  001D  3032               	movlw	50
  6619  001E  027D               	subwf	_gpsIndex,w	;volatile
  6620  001F  1C03               	skipc
  6621  0020  2826               	goto	i1l2901
  6622                           
  6623                           ;launcher_main.c: 131: {
  6624                           ;launcher_main.c: 132: messageDoneFlag = 1;
  6625  0021  0020               	movlb	0	; select bank0
  6626  0022  01EB               	clrf	_messageDoneFlag
  6627  0023  0AEB               	incf	_messageDoneFlag,f
  6628                           
  6629                           ;launcher_main.c: 133: gpsIndex = 0;
  6630  0024  01FD               	clrf	_gpsIndex	;volatile
  6631                           
  6632                           ;launcher_main.c: 134: }
  6633  0025  2836               	goto	i1l2907
  6634  0026                     i1l2901:	
  6635                           
  6636                           ;launcher_main.c: 135: else
  6637                           ;launcher_main.c: 136: {
  6638                           ;launcher_main.c: 137: if(gpsMessage[gpsIndex-1] == 0x0A)
  6639  0026  087D               	movf	_gpsIndex,w
  6640  0027  3EFF               	addlw	255
  6641  0028  3E20               	addlw	_gpsMessage& (0+255)
  6642  0029  0086               	movwf	6
  6643  002A  3001               	movlw	1	; select bank2/3
  6644  002B  0087               	movwf	7
  6645  002C  0801               	movf	1,w
  6646  002D  3A0A               	xorlw	10
  6647  002E  1D03               	skipz
  6648  002F  2834               	goto	i1l2905
  6649                           
  6650                           ;launcher_main.c: 138: {
  6651                           ;launcher_main.c: 139: messageDoneFlag = 1;
  6652  0030  0020               	movlb	0	; select bank0
  6653  0031  01EB               	clrf	_messageDoneFlag
  6654  0032  0AEB               	incf	_messageDoneFlag,f
  6655                           
  6656                           ;launcher_main.c: 140: }
  6657  0033  2836               	goto	i1l2907
  6658  0034                     i1l2905:	
  6659                           
  6660                           ;launcher_main.c: 141: else
  6661                           ;launcher_main.c: 142: {
  6662                           ;launcher_main.c: 143: messageDoneFlag = 0;
  6663  0034  0020               	movlb	0	; select bank0
  6664  0035  01EB               	clrf	_messageDoneFlag
  6665  0036                     i1l2907:	
  6666                           
  6667                           ;launcher_main.c: 144: }
  6668                           ;launcher_main.c: 145: }
  6669                           ;launcher_main.c: 146: PIR1bits.RCIF = 0;
  6670  0036  1291               	bcf	17,5	;volatile
  6671  0037                     i1l2909:	
  6672                           
  6673                           ;launcher_main.c: 147: }
  6674                           ;launcher_main.c: 150: if (TMR1IF && TMR1IE)
  6675  0037  1C11               	btfss	17,0	;volatile
  6676  0038  2848               	goto	i1l2919
  6677  0039  0021               	movlb	1	; select bank1
  6678  003A  1C11               	btfss	17,0	;volatile
  6679  003B  2848               	goto	i1l2919
  6680                           
  6681                           ;launcher_main.c: 151: {
  6682                           ;launcher_main.c: 152: TMR1H = 0xFF;
  6683  003C  30FF               	movlw	255
  6684  003D  0020               	movlb	0	; select bank0
  6685  003E  0097               	movwf	23	;volatile
  6686                           
  6687                           ;launcher_main.c: 153: TMR1L = 0x71;
  6688  003F  3071               	movlw	113
  6689  0040  0096               	movwf	22	;volatile
  6690                           
  6691                           ;launcher_main.c: 154: TMR1IF = 0;
  6692  0041  1011               	bcf	17,0	;volatile
  6693                           
  6694                           ;launcher_main.c: 156: if(recordFlag)
  6695  0042  086C               	movf	_recordFlag,w
  6696  0043  1903               	btfsc	3,2
  6697  0044  2848               	goto	i1l2919
  6698                           
  6699                           ;launcher_main.c: 157: {
  6700                           ;launcher_main.c: 158: ADCON0bits.ADGO = 1;
  6701  0045  0021               	movlb	1	; select bank1
  6702  0046  149D               	bsf	29,1	;volatile
  6703  0047  0020               	movlb	0	; select bank0
  6704  0048                     i1l2919:	
  6705                           
  6706                           ;launcher_main.c: 159: }
  6707                           ;launcher_main.c: 160: }
  6708                           ;launcher_main.c: 163: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6709  0048  0021               	movlb	1	; select bank1
  6710  0049  0E11               	swapf	17,w	;volatile
  6711  004A  0C89               	rrf	9,f
  6712  004B  0C89               	rrf	9,f
  6713  004C  3901               	andlw	1
  6714  004D  00F2               	movwf	??_isr
  6715  004E  0020               	movlb	0	; select bank0
  6716  004F  0E11               	swapf	17,w	;volatile
  6717  0050  0C89               	rrf	9,f
  6718  0051  0C89               	rrf	9,f
  6719  0052  3901               	andlw	1
  6720  0053  0572               	andwf	??_isr,w
  6721  0054  1903               	btfsc	3,2
  6722  0055  288A               	goto	i1l2935
  6723                           
  6724                           ;launcher_main.c: 164: {
  6725                           ;launcher_main.c: 165: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6726  0056  3033               	movlw	51
  6727  0057  0679               	xorwf	_end,w
  6728  0058  047A               	iorwf	_end+1,w
  6729  0059  1903               	skipnz
  6730  005A  2870               	goto	i1l2925
  6731  005B  0879               	movf	_end,w
  6732  005C  3E01               	addlw	1
  6733  005D  00F2               	movwf	??_isr
  6734  005E  3000               	movlw	0
  6735  005F  3D7A               	addwfc	_end+1,w
  6736  0060  00F3               	movwf	??_isr+1
  6737  0061  087C               	movf	_start+1,w
  6738  0062  0673               	xorwf	??_isr+1,w
  6739  0063  1D03               	skipz
  6740  0064  2867               	goto	u252_25
  6741  0065  087B               	movf	_start,w
  6742  0066  0672               	xorwf	??_isr,w
  6743  0067                     u252_25:	
  6744  0067  3000               	movlw	0
  6745  0068  1903               	skipnz
  6746  0069  3001               	movlw	1
  6747  006A  00F4               	movwf	??_isr+2
  6748  006B  01F5               	clrf	??_isr+3
  6749  006C  0874               	movf	??_isr+2,w
  6750  006D  00F7               	movwf	_isr$536
  6751  006E  0875               	movf	??_isr+3,w
  6752  006F  287A               	goto	L4
  6753  0070                     i1l2925:	
  6754  0070  087C               	movf	_start+1,w
  6755  0071  047B               	iorwf	_start,w
  6756  0072  3000               	movlw	0
  6757  0073  1903               	skipnz
  6758  0074  3001               	movlw	1
  6759  0075  00F2               	movwf	??_isr
  6760  0076  01F3               	clrf	??_isr+1
  6761  0077  0872               	movf	??_isr,w
  6762  0078  00F7               	movwf	_isr$536
  6763  0079  0873               	movf	??_isr+1,w
  6764  007A                     L4:	
  6765  007A  00F8               	movwf	_isr$536+1
  6766  007B  0878               	movf	_isr$536+1,w
  6767  007C  0477               	iorwf	_isr$536,w
  6768  007D  1D03               	skipz
  6769  007E  2888               	goto	i1l2933
  6770                           
  6771                           ;launcher_main.c: 166: {
  6772                           ;launcher_main.c: 167: if(recordFlag)
  6773  007F  086C               	movf	_recordFlag,w
  6774  0080  1903               	btfsc	3,2
  6775  0081  2888               	goto	i1l2933
  6776                           
  6777                           ;launcher_main.c: 168: WriteBuffer(ADRESH);
  6778  0082  0021               	movlb	1	; select bank1
  6779  0083  081C               	movf	28,w	;volatile
  6780  0084  318C  24C5  3180   	fcall	_WriteBuffer
  6781  0087  0020               	movlb	0	; select bank0
  6782  0088                     i1l2933:	
  6783                           
  6784                           ;launcher_main.c: 169: }
  6785                           ;launcher_main.c: 170: PIR1bits.ADIF = 0;
  6786  0088  0020               	movlb	0	; select bank0
  6787  0089  1311               	bcf	17,6	;volatile
  6788  008A                     i1l2935:	
  6789                           
  6790                           ;launcher_main.c: 171: }
  6791                           ;launcher_main.c: 174: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6792  008A  1D8B               	btfss	11,3	;volatile
  6793  008B  28B3               	goto	i1l2949
  6794  008C  0027               	movlb	7	; select bank7
  6795  008D  1D96               	btfss	22,3	;volatile
  6796  008E  28B3               	goto	i1l2949
  6797                           
  6798                           ;launcher_main.c: 175: {
  6799                           ;launcher_main.c: 176: IOCBFbits.IOCBF3 = 0;
  6800  008F  1196               	bcf	22,3	;volatile
  6801                           
  6802                           ;launcher_main.c: 177: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6803  0090  0020               	movlb	0	; select bank0
  6804  0091  0C0D               	rrf	13,w	;volatile
  6805  0092  00F2               	movwf	??_isr
  6806  0093  0CF2               	rrf	??_isr,f
  6807  0094  0C72               	rrf	??_isr,w
  6808  0095  3901               	andlw	1
  6809  0096  00F3               	movwf	??_isr+1
  6810  0097  0027               	movlb	7	; select bank7
  6811  0098  0C14               	rrf	20,w	;volatile
  6812  0099  00F4               	movwf	??_isr+2
  6813  009A  0CF4               	rrf	??_isr+2,f
  6814  009B  0C74               	rrf	??_isr+2,w
  6815  009C  3901               	andlw	1
  6816  009D  0573               	andwf	??_isr+1,w
  6817  009E  1903               	btfsc	3,2
  6818  009F  28A3               	goto	i1l2945
  6819                           
  6820                           ;launcher_main.c: 178: {
  6821                           ;launcher_main.c: 179: recordFlag = 1;
  6822  00A0  0020               	movlb	0	; select bank0
  6823  00A1  01EC               	clrf	_recordFlag
  6824  00A2  0AEC               	incf	_recordFlag,f
  6825  00A3                     i1l2945:	
  6826                           
  6827                           ;launcher_main.c: 180: }
  6828                           ;launcher_main.c: 181: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6829  00A3  0027               	movlb	7	; select bank7
  6830  00A4  0C15               	rrf	21,w	;volatile
  6831  00A5  00F2               	movwf	??_isr
  6832  00A6  0CF2               	rrf	??_isr,f
  6833  00A7  0C72               	rrf	??_isr,w
  6834  00A8  3901               	andlw	1
  6835  00A9  00F3               	movwf	??_isr+1
  6836  00AA  1003               	clrc
  6837  00AB  0020               	movlb	0	; select bank0
  6838  00AC  1D8D               	btfss	13,3	;volatile
  6839  00AD  1403               	setc
  6840  00AE  3000               	movlw	0
  6841  00AF  3D09               	addwfc	9,w
  6842  00B0  0573               	andwf	??_isr+1,w
  6843  00B1  1D03               	btfss	3,2
  6844                           
  6845                           ;launcher_main.c: 182: {
  6846                           ;launcher_main.c: 183: recordFlag = 0;
  6847  00B2  01EC               	clrf	_recordFlag
  6848  00B3                     i1l2949:	
  6849                           
  6850                           ;launcher_main.c: 184: }
  6851                           ;launcher_main.c: 185: }
  6852                           ;launcher_main.c: 188: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6853  00B3  1D8B               	btfss	11,3	;volatile
  6854  00B4  28D3               	goto	i1l2963
  6855  00B5  0027               	movlb	7	; select bank7
  6856  00B6  1C93               	btfss	19,1	;volatile
  6857  00B7  28D3               	goto	i1l2963
  6858                           
  6859                           ;launcher_main.c: 189: {
  6860                           ;launcher_main.c: 190: IOCAFbits.IOCAF1 = 0;
  6861  00B8  1093               	bcf	19,1	;volatile
  6862                           
  6863                           ;launcher_main.c: 191: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6864  00B9  0020               	movlb	0	; select bank0
  6865  00BA  0C0C               	rrf	12,w	;volatile
  6866  00BB  3901               	andlw	1
  6867  00BC  00F2               	movwf	??_isr
  6868  00BD  0027               	movlb	7	; select bank7
  6869  00BE  0C11               	rrf	17,w	;volatile
  6870  00BF  3901               	andlw	1
  6871  00C0  0572               	andwf	??_isr,w
  6872  00C1  1903               	btfsc	3,2
  6873  00C2  28C6               	goto	i1l2959
  6874                           
  6875                           ;launcher_main.c: 192: {
  6876                           ;launcher_main.c: 193: strobeFlag = 1;
  6877  00C3  0020               	movlb	0	; select bank0
  6878  00C4  01ED               	clrf	_strobeFlag
  6879  00C5  0AED               	incf	_strobeFlag,f
  6880  00C6                     i1l2959:	
  6881                           
  6882                           ;launcher_main.c: 194: }
  6883                           ;launcher_main.c: 195: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6884  00C6  0027               	movlb	7	; select bank7
  6885  00C7  0C12               	rrf	18,w	;volatile
  6886  00C8  3901               	andlw	1
  6887  00C9  00F2               	movwf	??_isr
  6888  00CA  1003               	clrc
  6889  00CB  0020               	movlb	0	; select bank0
  6890  00CC  1C8C               	btfss	12,1	;volatile
  6891  00CD  1403               	setc
  6892  00CE  3000               	movlw	0
  6893  00CF  3D09               	addwfc	9,w
  6894  00D0  0572               	andwf	??_isr,w
  6895  00D1  1D03               	btfss	3,2
  6896                           
  6897                           ;launcher_main.c: 196: {
  6898                           ;launcher_main.c: 197: strobeFlag = 0;
  6899  00D2  01ED               	clrf	_strobeFlag
  6900  00D3                     i1l2963:	
  6901                           
  6902                           ;launcher_main.c: 198: }
  6903                           ;launcher_main.c: 199: }
  6904                           ;launcher_main.c: 201: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  6905  00D3  1A8B               	btfsc	11,5	;volatile
  6906  00D4  1D0B               	btfss	11,2	;volatile
  6907  00D5  28DA               	goto	i1l147
  6908                           
  6909                           ;launcher_main.c: 202: {
  6910                           ;launcher_main.c: 203: eeprom_timeoutFlag = 1;
  6911  00D6  0020               	movlb	0	; select bank0
  6912  00D7  01E9               	clrf	_eeprom_timeoutFlag
  6913  00D8  0AE9               	incf	_eeprom_timeoutFlag,f
  6914                           
  6915                           ;launcher_main.c: 204: INTCONbits.TMR0IF = 0;
  6916  00D9  110B               	bcf	11,2	;volatile
  6917  00DA                     i1l147:	
  6918  00DA  0876               	movf	??_isr+4,w
  6919  00DB  0020               	movlb	0	; select bank0
  6920  00DC  00FF               	movwf	127
  6921  00DD  107E               	bcf	126,0	;clear compiler interrupt flag
  6922  00DE  0009               	retfie
  6923  00DF                     __end_of_isr:	
  6924                           
  6925                           	psect	text32
  6926  0CC5                     __ptext32:	
  6927 ;; *************** function _WriteBuffer *****************
  6928 ;; Defined at:
  6929 ;;		line 214 in file "launcher_functions.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  data            1    wreg     unsigned char 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  data            1    1[COMMON] unsigned char 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;		None               void
  6936 ;; Registers used:
  6937 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6943 ;;      Params:         0       0       0       0       0       0       0       0
  6944 ;;      Locals:         1       0       0       0       0       0       0       0
  6945 ;;      Temps:          1       0       0       0       0       0       0       0
  6946 ;;      Totals:         2       0       0       0       0       0       0       0
  6947 ;;Total ram usage:        2 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_isr
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _WriteBuffer
  6958  0CC5                     _WriteBuffer:	
  6959                           
  6960                           ;incstack = 0
  6961                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6962                           ;WriteBuffer@data stored from wreg
  6963  0CC5  00F1               	movwf	WriteBuffer@data
  6964                           
  6965                           ;launcher_functions.c: 216: buffer[end] = data;
  6966  0CC6  0871               	movf	WriteBuffer@data,w
  6967  0CC7  00F0               	movwf	??_WriteBuffer
  6968  0CC8  0879               	movf	_end,w
  6969  0CC9  3EA0               	addlw	_buffer& (0+255)
  6970  0CCA  0086               	movwf	6
  6971  0CCB  3001               	movlw	1	; select bank3/4
  6972  0CCC  0087               	movwf	7
  6973  0CCD  0870               	movf	??_WriteBuffer,w
  6974  0CCE  0081               	movwf	1
  6975                           
  6976                           ;launcher_functions.c: 218: if (end == 51)
  6977  0CCF  3033               	movlw	51
  6978  0CD0  0679               	xorwf	_end,w
  6979  0CD1  047A               	iorwf	_end+1,w
  6980  0CD2  1D03               	skipz
  6981  0CD3  2CD7               	goto	i1l2811
  6982                           
  6983                           ;launcher_functions.c: 219: end = 0;
  6984  0CD4  01F9               	clrf	_end
  6985  0CD5  01FA               	clrf	_end+1
  6986  0CD6  0008               	return
  6987  0CD7                     i1l2811:	
  6988                           
  6989                           ;launcher_functions.c: 220: else
  6990                           ;launcher_functions.c: 221: end++;
  6991  0CD7  3001               	movlw	1
  6992  0CD8  07F9               	addwf	_end,f
  6993  0CD9  3000               	movlw	0
  6994  0CDA  3DFA               	addwfc	_end+1,f
  6995  0CDB  0008               	return
  6996  0CDC                     __end_of_WriteBuffer:	
  6997  007E                     btemp	set	126	;btemp
  6998  007E                     pic14e$flags	set	126
  6999  007E                     wtemp	set	126
  7000  007E                     wtemp0	set	126
  7001  0080                     wtemp1	set	128
  7002  0082                     wtemp2	set	130
  7003  0084                     wtemp3	set	132
  7004  0086                     wtemp4	set	134
  7005  0088                     wtemp5	set	136
  7006  007F                     wtemp6	set	127
  7007  007E                     ttemp	set	126
  7008  007E                     ttemp0	set	126
  7009  0081                     ttemp1	set	129
  7010  0084                     ttemp2	set	132
  7011  0087                     ttemp3	set	135
  7012  007F                     ttemp4	set	127
  7013  007E                     ltemp	set	126
  7014  007E                     ltemp0	set	126
  7015  0082                     ltemp1	set	130
  7016  0086                     ltemp2	set	134
  7017  0080                     ltemp3	set	128


Data Sizes:
    Strings     65
    Constant    10
    Data        61
    BSS         193
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     67      78
    BANK1            80     62      79
    BANK2            80      0      76
    BANK3            80      0      73
    BANK4            80      0      72
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_2(CODE[39]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1476$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___awdiv
    ___awdiv->___wmul
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RecordMode->_SendGPSSPI
    _SendGPSSPI->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _CheckDisconnect->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8694
                                             59 BANK0      8     4      4
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                         _InitTimer1
                           _InitUART
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    3917
                                             36 BANK0     23    23      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    2784
                                             15 BANK0     21    21      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            65    65      0    2705
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1357
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1980
                                             28 BANK0     11    11      0
                    _CheckDisconnect
                            _InitSPI
                         _ReadBuffer
                         _SendGPSSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                            _InitSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CheckDisconnect                                      2     2      0      92
                                              7 BANK0      2     2      0
                      _ReadStatusSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitTimer1
   _InitUART
   _InitWatchdog
   _RecordMode
     _CheckDisconnect
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
     _InitSPI
     _ReadBuffer
     _SendGPSSPI
       _InitSPI
       _WriteOverheadSPI
         _ReadStatusSPI
           _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     188       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4C      10       95.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      49      12       91.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      48      14       90.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     188      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Nov 05 11:16:51 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 003C                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l110 068A                               l303 0CAB  
                             l320 0EF4                               l331 0CF2                               l309 07F5  
                             l350 0C20                               l414 0356                               l428 0D0A  
                             l453 0F24                               l447 049D                               l367 0FFC  
                             l598 0D49                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0032                               wreg 0009  
              DecodeGPS@longitude 003F                   DisableGPS@F4921 0152                              l2105 0C8D  
                            l2203 0DD7                              l2133 0E76                              l2109 0C93  
                            l2055 0EE1                              l2207 0DE0                              l2311 05E2  
                            l2231 0FAF                              l2151 0E9C                              l2143 0E7E  
                            l2127 0E6B                              l2217 0CEE                              l2305 05D3  
                            l2321 052B                              l2081 0E23                              l2145 0E8A  
                            l2323 0626                              l2083 0E5D                              l2251 0FEA  
                            l2155 0EA5                              l2181 0E0E                              l2173 0DF0  
                            l2261 054D                              l2093 0D43                              l2421 0315  
                            l2175 0DFC                              l2319 05E6                              l2263 054F  
                            l2079 0E58                              l2239 0FBD                              l2159 0EAD  
                            l2431 0337                              l2343 0183                              l2505 0F83  
                            l2185 0E17                              l2281 057E                              l2249 0FC7  
                            l2345 0192                              l2283 0598                              l2339 0172  
                            l2197 0DBF                              l2293 05AE                              l2277 0562  
                            l2453 0390                              l2429 0331                              l2703 03F9  
                            l2199 0DCB                              l2447 0368                              l2439 0358  
                            l2801 0D06                              l2297 05B4                              l2385 0257  
                            l2377 023B                              l2803 0CFD                              l2467 0C53  
                            l2491 0F57                              l2715 0463                              l2707 0448  
                            l2723 0480                              l2635 0746                              l2485 0F3E  
                            l2717 046D                              l2645 078A                              l2735 04D7  
                            l2671 03BF                              l2745 0510                              l2841 0676  
                            l2499 0F6A                              l2773 07E1                              l2695 042C  
                            l2855 0692                              l2873 0702                              l2883 0715  
                            l2867 06D0                              l2879 070C                              _ADIE 048E  
                            _ADIF 008E                              ?_isr 0070            __size_of_ReadStatusSPI 0011  
                            STR_1 0831                              STR_2 080A                              STR_3 0844  
                            u2115 0F3C                              u2125 0F55                              u2205 0432  
                            u2150 072A                              u2310 07B9                              u2135 0F68  
                            u2223 040F                              u1425 0EBF                              u2145 0F81  
                            u1435 0ED3                              u2235 0451                              u2075 0366  
                            u2245 0469                              u2165 0744                              u1605 0E81  
                            u1525 0D4A                              u2085 038E                              u2263 049B  
                            u2255 0486                              u2175 0788                              u1535 0D4F  
                            u2273 04CB                              u1705 0DFD                              u1625 0E8B  
                            u2195 041A                              u1715 0E07                              u1635 0E95  
                            u2285 04E2                              u1725 0E0F                              u1645 0E9D  
                            u2295 04F7                              u1495 0E2D                              u1815 0F9D  
                            u1755 0DC2                              u1915 05C9                              u1685 0DF3  
                            u1845 0FD7                              u1775 0DD1                              u2807 0682  
                            u1960 0149                              u1785 0DD8                              u2817 06B5  
                            u2827 06EC                              _PEIE 005E                              u2837 0D93  
                            u2847 0DA2                              u1975 0170                              u2857 0DB0  
                            u2867 074D                              u1995 0190                              _RCIE 048D  
                            u2877 0791                              u2797 0663                              u2887 03CA  
                            u2897 04A7                              _OERR 0CE9                              _main 062B  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              ltemp 007E                              start 00DF  
                            ttemp 007E                              wtemp 007E                 ___bmul@multiplier 0023  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 0D26  
                 __end_of_InitCLK 0C1E                   __end_of_InitSPI 0C8A                   __end_of_ReadSPI 07FF  
              ??_compute_checksum 0022                             ??_isr 0072                     ?_InitWatchdog 0070  
           ReadStatusSPI@dataRead 0026                             ?_main 005B                   __end_of___awdiv 0EB4  
                 ___awdiv@divisor 0026                             _LATC2 0872                             _IOCAF 0393  
                           _IOCBF 0396                   __end_of___lwdiv 0E1E                             i1l147 00DA  
                 __end_of___lwmod 0DE7                   ___awdiv@counter 002B                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
               RecordMode@address 0043                   __end_of_dpowers 080A               DecodeGPS@northSouth 0039  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 062B            uart_write_message@data 0034  
          uart_write_message@size 0028                        _ReadBuffer 0CDC                   __initialization 00E1  
                      _InitTimer1 0C28                 ?_WriteOverheadSPI 0027                      __end_of_main 071F  
              __size_of_DecodeGPS 025E                  __end_of_InitGPIO 0D8B                  __end_of_InitUART 0C46  
                  ??_InitWatchdog 0020                     _ReadStatusSPI 0C55                ??_WriteOverheadSPI 002B  
uart_write_message@ascii_checksum 0035                            ??_main 005F                __size_of_GoToSleep 0012  
                      _SendGPSSPI 0F14                   ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000  
                __end_of_SetupGPS 07AE     WriteOverheadSPI@address_bytes 0031                __size_of_Hibernate 0019  
                      _RecordMode 039C                            _ADRESH 009C                  ___awdiv@dividend 0028  
                 _CheckDisconnect 0C46                  __end_of_WriteSPI 0CAF                            i1l2811 0CD7  
                          i1l2901 0026                            i1l2905 0034                            i1l2907 0036  
                          i1l2933 0088                            i1l2925 0070                            i1l2909 0037  
                          i1l2935 008A                            i1l2919 0048                            i1l2945 00A3  
                          i1l2963 00D3                            i1l2891 0010                            i1l2949 00B3  
                          i1l2959 00C6                            u252_25 0067                            _TMR1IE 0488  
                          _TMR1IF 0088                            _SPBRGH 019C                            _TMR1ON 00C0  
                          _SPBRGL 019B                            _SSPBUF 0211                         ??_InitADC 0020  
                       ??_InitCLK 0020                         ??_InitSPI 0020                         ??_ReadSPI 0020  
                     SendGPSSPI@x 003A                            ___bmul 0C8A                    ?_ReadStatusSPI 0070  
                          ___wmul 0D40                         ??___awdiv 002A                         ??___lwdiv 0024  
                       ??___lwmod 002C                            _buffer 01A0                  ___awdiv@quotient 002D  
     __size_of_uart_write_message 0076                __size_of_UpdateGPS 0045               main@periodicCounter 0062  
               __end_of_DecodeGPS 039C                         ??_sprintf 0034                    _gpsInvalidFlag 0066  
         __end_of__initialization 013A                 __end_of_GoToSleep 0C78               ___bmul@multiplicand 0020  
                     ?_ReadBuffer 0070                 __end_of_Hibernate 0D0D                       ?_InitTimer1 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 0C02                      __pidataBANK1 0C0F  
                    __pidataBANK2 0D26                      __pidataBANK3 0CAF                      WriteSPI@temp 0022  
                     ?_SendGPSSPI 0070           __end_of_CheckDisconnect 0C55                    _OPTION_REGbits 0095  
                     ?_RecordMode 0070              __end_of_InitWatchdog 0C0F                        __pbssBANK0 0069  
                      __pbssBANK1 00DE                        __pbssBANK2 0120                        __pbssBANK3 01A0  
                      __pbssBANK4 0220                         ?_InitGPIO 0070                         ?_InitUART 0070  
                 SetupGPS@message 00A0                   ??_ReadStatusSPI 0025                 __end_of_UpdateGPS 07F3  
                      __pmaintext 062B                         ?_SetupGPS 0070                           ?___bmul 0020  
                         ?___wmul 0020                     ??_WriteBuffer 0070                        __pintentry 0004  
                  _validLongitude 00EC         UpdateGPS@GPSupdateMessage 0045                         ?_WriteSPI 0070  
              __size_of_uart_xmit 000A         __size_of_compute_checksum 0042               __size_of_ReadBuffer 0018  
             __size_of_InitTimer1 000F                        ??_InitGPIO 0020                        ??_InitUART 0020  
                         _InitADC 0D0D                           _InitCLK 0C16                           _InitSPI 0C78  
                      _gpsMessage 0120           __size_of_ToggleSleepGPS 002D                           _ReadSPI 07F3  
                     SetupGPS@MID 00D8               __size_of_SendGPSSPI 0076                        ??_SetupGPS 0041  
             __size_of_RecordMode 0189                   __size_of___bmul 0012                           ___awdiv 0E60  
                 __size_of___wmul 001E                           ___lwdiv 0DE7                           ___lwmod 0DB8  
                         _isr$536 0077                        ??_WriteSPI 0020                           __ptext1 07AE  
                         __ptext2 013E                           __ptext3 0D40                           __ptext4 0C8A  
                         __ptext5 0E60                           __ptext6 0D8B                           __ptext7 071F  
                         __ptext8 0F8A                           __ptext9 0C1E                         _T1CONbits 0018  
                         _dpowers 0800               __end_of_WriteBuffer 0CDC                      __size_of_isr 00DB  
                ?_CheckDisconnect 0070                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 006C  
                         _sprintf 0525                           clrloop0 0BFD              end_of_initialization 013A  
                         init_ram 0BF6                           initloop 0BF7                   WriteBuffer@data 0071  
               __end_of_uart_xmit 0C28                         _RCSTAbits 019D                  WriteSPI@databyte 0024  
                    __pstringtext 0800                         _PORTAbits 000C                         _PORTBbits 000D  
                       _PORTCbits 000E                    Hibernate@count 0021                  __CFG_FOSC$INTOSC 0000  
           __size_of_InitWatchdog 0007                         _TRISAbits 008C                         _TRISBbits 008D  
                       _TRISCbits 008E           WriteOverheadSPI@address 0027                 SendGPSSPI@address 0036  
                 DecodeGPS@status 003B              uart_xmit@mydata_byte 0020             _preRecordingAddresses 0220  
                       _DecodeGPS 013E                         _TXSTAbits 019E                      ??_ReadBuffer 0020  
                      _strobeFlag 006D                      ??_InitTimer1 0020                         _GoToSleep 0C66  
                  __end_of___bmul 0C9C                       _WriteBuffer 0CC5                    __end_of___wmul 0D5E  
      __end_of_uart_write_message 1000                         _Hibernate 0CF4                      _InitWatchdog 0C08  
                    ??_SendGPSSPI 0035                     SetupGPS@F4924 0166                     SetupGPS@F4926 00E8  
             start_initialization 00E1                  _compute_checksum 0E1E         WriteOverheadSPI@StatusReg 0034  
                    ??_RecordMode 003C                       __end_of_isr 00DF             CheckDisconnect@status 0028  
              __end_of_ReadBuffer 0CF4                 compute_checksum@x 0026                __end_of_InitTimer1 0C37  
                      ?_DecodeGPS 0070                    _ToggleSleepGPS 0D8B                 __size_of_InitGPIO 002D  
               __size_of_InitUART 000F                __end_of_SendGPSSPI 0F8A                         SetupGPS@x 00DC  
            compute_checksum@data 0025                        ?_GoToSleep 0070                          ??___bmul 0021  
            compute_checksum@size 0020                          ??___wmul 0024                __end_of_RecordMode 0525  
                     __pdataBANK0 0063                       __pdataBANK1 00E8                       __pdataBANK2 0152  
                     __pdataBANK3 01D3                 __size_of_SetupGPS 008F                         _UpdateGPS 07AE  
                      ?_Hibernate 0070          compute_checksum@checksum 0024                 __size_of_WriteSPI 0013  
                     __pbssCOMMON 0079                         ___latbits 0001                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                  _WriteOverheadSPI 0EB4               __end_of__stringdata 084B  
             uart_write_message@x 0031                     _validEastWest 0067            __end_of_ToggleSleepGPS 0DB8  
                 _messageDoneFlag 006B                       sprintf@_val 003C                       sprintf@flag 0038  
                     sprintf@prec 0039                          ?_InitADC 0070                          ?_InitCLK 0070  
                        ?_InitSPI 0070                          ?_ReadSPI 0070                     _validLatitude 0063  
                ___lwdiv@dividend 0022             __end_of_ReadStatusSPI 0C66                          ?___awdiv 0026  
                        ?___lwdiv 0020                          ?___lwmod 0028                        ?_UpdateGPS 0070  
                  UpdateGPS@F4931 01D3                  __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 0025  
                        ?_sprintf 002E        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 0068                       ??_DecodeGPS 002F                    ___wmul@product 0024  
                        _LATBbits 010D                         clear_ram0 0BFC                          _PIE1bits 0091  
                  DecodeGPS@F4933 015F                    DecodeGPS@F4935 00E2                    DecodeGPS@F4937 00E5  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0C1E  
                     ??_Hibernate 0020                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 080A                        _ADCON2bits 009F                 ___wmul@multiplier 0020  
                 RecordMode@count 0041                          _InitGPIO 0D5E                          _InitUART 0C37  
        __size_of_CheckDisconnect 000F                  __size_of_InitADC 0019                  __size_of_InitCLK 0008  
                __size_of_InitSPI 0012                  __size_of_ReadSPI 000C          __end_of_compute_checksum 0E60  
           SetupGPS@startSequence 00D2                          _SetupGPS 071F                        ?_uart_xmit 0070  
                    ?_WriteBuffer 0070                  __size_of___awdiv 0054                       ??_UpdateGPS 0044  
                __size_of___lwdiv 0037                  __size_of___lwmod 002F                          _WriteSPI 0C9C  
         _uart_write_message$1401 002D           _uart_write_message$1402 002F                        _ANSELAbits 018C  
                      _ANSELBbits 018D               ReadBuffer@read_data 0021                   ___lwdiv@divisor 0020  
                 _hasValidGPSFlag 006A                   ___lwdiv@counter 0027                          __ptext10 0E1E  
                        __ptext11 0525                          __ptext20 0C55                          __ptext12 0DB8  
                        __ptext21 0C9C                          __ptext13 0DE7                        _T1GCONbits 0019  
                        __ptext30 0C66                          __ptext22 07F3                          __ptext14 039C  
                        __ptext23 0C08                          __ptext15 0F14                          __ptext32 0CC5  
                        __ptext24 0C37                          __ptext16 0EB4                          __ptext25 0C28  
                        __ptext17 0C78                          __ptext26 0D5E                          __ptext18 0CDC  
                        __ptext27 0C16                          __ptext19 0C46                          __ptext28 0D0D  
                        __ptext29 0CF4                _uart_write_message 0F8A                  __size_of_sprintf 0106  
                        _gpsIndex 007D                     __size_of_main 00F4               ?_uart_write_message 0028  
                      DecodeGPS@x 0042          __end_of_WriteOverheadSPI 0F14                _eeprom_timeoutFlag 0069  
                  GoToSleep@count 0021                          main@argc 005B                          main@argv 005D  
            ??_uart_write_message 002A                        _INTCONbits 000B                       pic14e$flags 007E  
                        intlevel1 0000                         sprintf@ap 003A                         sprintf@sp 003B  
                ___lwmod@dividend 002A                 __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099  
               ??_CheckDisconnect 0027                       ??_uart_xmit 0020                          sprintf@c 0040  
                        sprintf@f 002E                   ___lwmod@divisor 0028                   ___lwmod@counter 002D  
                ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215                        _WDTCONbits 0097  
                 _recordEndAdress 00DE                 DecodeGPS@eastWest 003A  
