

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 30 23:08:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0094                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  011E                     	;# 
   117  011F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0197                     	;# 
   130  0199                     	;# 
   131  0199                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019A                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019D                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019E                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020D                     	;# 
   157  020E                     	;# 
   158  0210                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  028C                     	;# 
   175  028D                     	;# 
   176  028E                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  0390                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0397                     	;# 
   199  0398                     	;# 
   200  0399                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0511                     	;# 
   205  0513                     	;# 
   206  051A                     	;# 
   207  0811                     	;# 
   208  0812                     	;# 
   209  0813                     	;# 
   210  0814                     	;# 
   211  0815                     	;# 
   212  0816                     	;# 
   213  0817                     	;# 
   214  0818                     	;# 
   215  0819                     	;# 
   216  081A                     	;# 
   217  081B                     	;# 
   218  081C                     	;# 
   219  081D                     	;# 
   220  081E                     	;# 
   221  081F                     	;# 
   222  0820                     	;# 
   223  0821                     	;# 
   224  0821                     	;# 
   225  0822                     	;# 
   226  0823                     	;# 
   227  0823                     	;# 
   228  0824                     	;# 
   229  0825                     	;# 
   230  0825                     	;# 
   231  0826                     	;# 
   232  0827                     	;# 
   233  0827                     	;# 
   234  0828                     	;# 
   235  0829                     	;# 
   236  082A                     	;# 
   237  082B                     	;# 
   238  082C                     	;# 
   239  082D                     	;# 
   240  082E                     	;# 
   241  082F                     	;# 
   242  0831                     	;# 
   243  0832                     	;# 
   244  0833                     	;# 
   245  0834                     	;# 
   246  0835                     	;# 
   247  0836                     	;# 
   248  0837                     	;# 
   249  0838                     	;# 
   250  0839                     	;# 
   251  083A                     	;# 
   252  083B                     	;# 
   253  083C                     	;# 
   254  083D                     	;# 
   255  083E                     	;# 
   256  083F                     	;# 
   257  0840                     	;# 
   258  0841                     	;# 
   259  0841                     	;# 
   260  0842                     	;# 
   261  0843                     	;# 
   262  0843                     	;# 
   263  0844                     	;# 
   264  0845                     	;# 
   265  0845                     	;# 
   266  0846                     	;# 
   267  0847                     	;# 
   268  0847                     	;# 
   269  0848                     	;# 
   270  0849                     	;# 
   271  084A                     	;# 
   272  084B                     	;# 
   273  084C                     	;# 
   274  084D                     	;# 
   275  084E                     	;# 
   276  084F                     	;# 
   277  0FE4                     	;# 
   278  0FE5                     	;# 
   279  0FE6                     	;# 
   280  0FE7                     	;# 
   281  0FE8                     	;# 
   282  0FE9                     	;# 
   283  0FEA                     	;# 
   284  0FEB                     	;# 
   285  0FED                     	;# 
   286  0FEE                     	;# 
   287  0FEF                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  008E                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0094                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  0111                     	;# 
   339  0112                     	;# 
   340  0113                     	;# 
   341  0114                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011D                     	;# 
   348  011D                     	;# 
   349  011E                     	;# 
   350  011F                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0194                     	;# 
   360  0195                     	;# 
   361  0196                     	;# 
   362  0199                     	;# 
   363  0199                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019A                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019D                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019E                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  019F                     	;# 
   386  019F                     	;# 
   387  020C                     	;# 
   388  020D                     	;# 
   389  020E                     	;# 
   390  0210                     	;# 
   391  0211                     	;# 
   392  0211                     	;# 
   393  0212                     	;# 
   394  0212                     	;# 
   395  0213                     	;# 
   396  0213                     	;# 
   397  0214                     	;# 
   398  0214                     	;# 
   399  0215                     	;# 
   400  0215                     	;# 
   401  0215                     	;# 
   402  0216                     	;# 
   403  0216                     	;# 
   404  0217                     	;# 
   405  0217                     	;# 
   406  028C                     	;# 
   407  028D                     	;# 
   408  028E                     	;# 
   409  0291                     	;# 
   410  0291                     	;# 
   411  0292                     	;# 
   412  0293                     	;# 
   413  0298                     	;# 
   414  0298                     	;# 
   415  0299                     	;# 
   416  029A                     	;# 
   417  030C                     	;# 
   418  030D                     	;# 
   419  030E                     	;# 
   420  038C                     	;# 
   421  038D                     	;# 
   422  038E                     	;# 
   423  0390                     	;# 
   424  0391                     	;# 
   425  0392                     	;# 
   426  0393                     	;# 
   427  0394                     	;# 
   428  0395                     	;# 
   429  0396                     	;# 
   430  0397                     	;# 
   431  0398                     	;# 
   432  0399                     	;# 
   433  039D                     	;# 
   434  039E                     	;# 
   435  039F                     	;# 
   436  0511                     	;# 
   437  0513                     	;# 
   438  051A                     	;# 
   439  0811                     	;# 
   440  0812                     	;# 
   441  0813                     	;# 
   442  0814                     	;# 
   443  0815                     	;# 
   444  0816                     	;# 
   445  0817                     	;# 
   446  0818                     	;# 
   447  0819                     	;# 
   448  081A                     	;# 
   449  081B                     	;# 
   450  081C                     	;# 
   451  081D                     	;# 
   452  081E                     	;# 
   453  081F                     	;# 
   454  0820                     	;# 
   455  0821                     	;# 
   456  0821                     	;# 
   457  0822                     	;# 
   458  0823                     	;# 
   459  0823                     	;# 
   460  0824                     	;# 
   461  0825                     	;# 
   462  0825                     	;# 
   463  0826                     	;# 
   464  0827                     	;# 
   465  0827                     	;# 
   466  0828                     	;# 
   467  0829                     	;# 
   468  082A                     	;# 
   469  082B                     	;# 
   470  082C                     	;# 
   471  082D                     	;# 
   472  082E                     	;# 
   473  082F                     	;# 
   474  0831                     	;# 
   475  0832                     	;# 
   476  0833                     	;# 
   477  0834                     	;# 
   478  0835                     	;# 
   479  0836                     	;# 
   480  0837                     	;# 
   481  0838                     	;# 
   482  0839                     	;# 
   483  083A                     	;# 
   484  083B                     	;# 
   485  083C                     	;# 
   486  083D                     	;# 
   487  083E                     	;# 
   488  083F                     	;# 
   489  0840                     	;# 
   490  0841                     	;# 
   491  0841                     	;# 
   492  0842                     	;# 
   493  0843                     	;# 
   494  0843                     	;# 
   495  0844                     	;# 
   496  0845                     	;# 
   497  0845                     	;# 
   498  0846                     	;# 
   499  0847                     	;# 
   500  0847                     	;# 
   501  0848                     	;# 
   502  0849                     	;# 
   503  084A                     	;# 
   504  084B                     	;# 
   505  084C                     	;# 
   506  084D                     	;# 
   507  084E                     	;# 
   508  084F                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0014                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  008C                     	;# 
   549  008D                     	;# 
   550  008E                     	;# 
   551  0090                     	;# 
   552  0091                     	;# 
   553  0092                     	;# 
   554  0094                     	;# 
   555  0095                     	;# 
   556  0096                     	;# 
   557  0097                     	;# 
   558  0098                     	;# 
   559  0099                     	;# 
   560  009A                     	;# 
   561  009B                     	;# 
   562  009B                     	;# 
   563  009C                     	;# 
   564  009D                     	;# 
   565  009E                     	;# 
   566  009F                     	;# 
   567  010C                     	;# 
   568  010D                     	;# 
   569  010E                     	;# 
   570  0111                     	;# 
   571  0112                     	;# 
   572  0113                     	;# 
   573  0114                     	;# 
   574  0115                     	;# 
   575  0116                     	;# 
   576  0117                     	;# 
   577  0118                     	;# 
   578  0119                     	;# 
   579  011D                     	;# 
   580  011D                     	;# 
   581  011E                     	;# 
   582  011F                     	;# 
   583  018C                     	;# 
   584  018D                     	;# 
   585  0191                     	;# 
   586  0191                     	;# 
   587  0192                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0193                     	;# 
   591  0194                     	;# 
   592  0195                     	;# 
   593  0196                     	;# 
   594  0199                     	;# 
   595  0199                     	;# 
   596  0199                     	;# 
   597  019A                     	;# 
   598  019A                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019C                     	;# 
   606  019C                     	;# 
   607  019C                     	;# 
   608  019D                     	;# 
   609  019D                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019E                     	;# 
   613  019E                     	;# 
   614  019F                     	;# 
   615  019F                     	;# 
   616  019F                     	;# 
   617  019F                     	;# 
   618  019F                     	;# 
   619  020C                     	;# 
   620  020D                     	;# 
   621  020E                     	;# 
   622  0210                     	;# 
   623  0211                     	;# 
   624  0211                     	;# 
   625  0212                     	;# 
   626  0212                     	;# 
   627  0213                     	;# 
   628  0213                     	;# 
   629  0214                     	;# 
   630  0214                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  028C                     	;# 
   639  028D                     	;# 
   640  028E                     	;# 
   641  0291                     	;# 
   642  0291                     	;# 
   643  0292                     	;# 
   644  0293                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  030C                     	;# 
   650  030D                     	;# 
   651  030E                     	;# 
   652  038C                     	;# 
   653  038D                     	;# 
   654  038E                     	;# 
   655  0390                     	;# 
   656  0391                     	;# 
   657  0392                     	;# 
   658  0393                     	;# 
   659  0394                     	;# 
   660  0395                     	;# 
   661  0396                     	;# 
   662  0397                     	;# 
   663  0398                     	;# 
   664  0399                     	;# 
   665  039D                     	;# 
   666  039E                     	;# 
   667  039F                     	;# 
   668  0511                     	;# 
   669  0513                     	;# 
   670  051A                     	;# 
   671  0811                     	;# 
   672  0812                     	;# 
   673  0813                     	;# 
   674  0814                     	;# 
   675  0815                     	;# 
   676  0816                     	;# 
   677  0817                     	;# 
   678  0818                     	;# 
   679  0819                     	;# 
   680  081A                     	;# 
   681  081B                     	;# 
   682  081C                     	;# 
   683  081D                     	;# 
   684  081E                     	;# 
   685  081F                     	;# 
   686  0820                     	;# 
   687  0821                     	;# 
   688  0821                     	;# 
   689  0822                     	;# 
   690  0823                     	;# 
   691  0823                     	;# 
   692  0824                     	;# 
   693  0825                     	;# 
   694  0825                     	;# 
   695  0826                     	;# 
   696  0827                     	;# 
   697  0827                     	;# 
   698  0828                     	;# 
   699  0829                     	;# 
   700  082A                     	;# 
   701  082B                     	;# 
   702  082C                     	;# 
   703  082D                     	;# 
   704  082E                     	;# 
   705  082F                     	;# 
   706  0831                     	;# 
   707  0832                     	;# 
   708  0833                     	;# 
   709  0834                     	;# 
   710  0835                     	;# 
   711  0836                     	;# 
   712  0837                     	;# 
   713  0838                     	;# 
   714  0839                     	;# 
   715  083A                     	;# 
   716  083B                     	;# 
   717  083C                     	;# 
   718  083D                     	;# 
   719  083E                     	;# 
   720  083F                     	;# 
   721  0840                     	;# 
   722  0841                     	;# 
   723  0841                     	;# 
   724  0842                     	;# 
   725  0843                     	;# 
   726  0843                     	;# 
   727  0844                     	;# 
   728  0845                     	;# 
   729  0845                     	;# 
   730  0846                     	;# 
   731  0847                     	;# 
   732  0847                     	;# 
   733  0848                     	;# 
   734  0849                     	;# 
   735  084A                     	;# 
   736  084B                     	;# 
   737  084C                     	;# 
   738  084D                     	;# 
   739  084E                     	;# 
   740  084F                     	;# 
   741  0FE4                     	;# 
   742  0FE5                     	;# 
   743  0FE6                     	;# 
   744  0FE7                     	;# 
   745  0FE8                     	;# 
   746  0FE9                     	;# 
   747  0FEA                     	;# 
   748  0FEB                     	;# 
   749  0FED                     	;# 
   750  0FEE                     	;# 
   751  0FEF                     	;# 
   752                           
   753                           	psect	idataBANK1
   754  0C99                     __pidataBANK1:	
   755                           
   756                           ;initializer for _validLatitude
   757  0C99  3428               	retlw	40
   758  0C9A  3419               	retlw	25
   759  0C9B  3414               	retlw	20
   760                           
   761                           ;initializer for _validLongitude
   762  0C9C  3456               	retlw	86
   763  0C9D  3444               	retlw	68
   764  0C9E  3414               	retlw	20
   765                           
   766                           ;initializer for _gpsInvalidFlag
   767  0C9F  3401               	retlw	1
   768                           
   769                           ;initializer for _validEastWest
   770  0CA0  3445               	retlw	69
   771                           
   772                           ;initializer for _validNorthSouth
   773  0CA1  344E               	retlw	78
   774                           
   775                           	psect	idataBANK2
   776  0CE7                     __pidataBANK2:	
   777                           
   778                           ;initializer for DecodeGPS@F4931
   779  0CE7  3424               	retlw	36
   780  0CE8  3447               	retlw	71
   781  0CE9  3450               	retlw	80
   782  0CEA  3447               	retlw	71
   783  0CEB  344C               	retlw	76
   784  0CEC  344C               	retlw	76
   785  0CED  3400               	retlw	0
   786                           
   787                           ;initializer for SetupGPS@F4920
   788  0CEE  3424               	retlw	36
   789  0CEF  3450               	retlw	80
   790  0CF0  3453               	retlw	83
   791  0CF1  3452               	retlw	82
   792  0CF2  3446               	retlw	70
   793  0CF3  3400               	retlw	0
   794                           
   795                           ;initializer for SetupGPS@F4922
   796  0CF4  3431               	retlw	49
   797  0CF5  3430               	retlw	48
   798  0CF6  3433               	retlw	51
   799  0CF7  3400               	retlw	0
   800                           
   801                           	psect	idataBANK3
   802  0DC1                     __pidataBANK3:	
   803                           
   804                           ;initializer for UpdateGPS@F4928
   805  0DC1  3424               	retlw	36
   806  0DC2  3450               	retlw	80
   807  0DC3  3453               	retlw	83
   808  0DC4  3452               	retlw	82
   809  0DC5  3446               	retlw	70
   810  0DC6  3431               	retlw	49
   811  0DC7  3430               	retlw	48
   812  0DC8  3433               	retlw	51
   813  0DC9  342C               	retlw	44
   814  0DCA  3430               	retlw	48
   815  0DCB  3431               	retlw	49
   816  0DCC  342C               	retlw	44
   817  0DCD  3430               	retlw	48
   818  0DCE  3431               	retlw	49
   819  0DCF  342C               	retlw	44
   820  0DD0  3430               	retlw	48
   821  0DD1  3431               	retlw	49
   822  0DD2  342C               	retlw	44
   823  0DD3  3430               	retlw	48
   824  0DD4  3430               	retlw	48
   825  0DD5  342A               	retlw	42
   826  0DD6  3400               	retlw	0
   827                           
   828                           ;initializer for DisableGPS@F4917
   829  0DD7  3424               	retlw	36
   830  0DD8  3450               	retlw	80
   831  0DD9  3453               	retlw	83
   832  0DDA  3452               	retlw	82
   833  0DDB  3446               	retlw	70
   834  0DDC  3431               	retlw	49
   835  0DDD  3431               	retlw	49
   836  0DDE  3437               	retlw	55
   837  0DDF  342C               	retlw	44
   838  0DE0  3431               	retlw	49
   839  0DE1  3436               	retlw	54
   840  0DE2  342A               	retlw	42
   841  0DE3  3400               	retlw	0
   842                           
   843                           	psect	stringtext
   844  0800                     __pstringtext:	
   845  0800                     _dpowers:	
   846  0800  3401               	retlw	1
   847  0801  3400               	retlw	0
   848  0802  340A               	retlw	10
   849  0803  3400               	retlw	0
   850  0804  3464               	retlw	100
   851  0805  3400               	retlw	0
   852  0806  34E8               	retlw	232
   853  0807  3403               	retlw	3
   854  0808  3410               	retlw	16
   855  0809  3427               	retlw	39
   856  080A                     __end_of_dpowers:	
   857  000B                     _INTCONbits	set	11
   858  0011                     _PIR1bits	set	17
   859  000C                     _PORTAbits	set	12
   860  000D                     _PORTBbits	set	13
   861  000E                     _PORTCbits	set	14
   862  0018                     _T1CONbits	set	24
   863  0019                     _T1GCONbits	set	25
   864  0017                     _TMR1H	set	23
   865  0016                     _TMR1L	set	22
   866  008E                     _ADIF	set	142
   867  005F                     _GIE	set	95
   868  005E                     _PEIE	set	94
   869  0088                     _TMR1IF	set	136
   870  00C0                     _TMR1ON	set	192
   871  009D                     _ADCON0bits	set	157
   872  009E                     _ADCON1bits	set	158
   873  009F                     _ADCON2bits	set	159
   874  009C                     _ADRESH	set	156
   875  0099                     _OSCCONbits	set	153
   876  0091                     _PIE1bits	set	145
   877  008C                     _TRISAbits	set	140
   878  008D                     _TRISBbits	set	141
   879  008E                     _TRISCbits	set	142
   880  0097                     _WDTCONbits	set	151
   881  048E                     _ADIE	set	1166
   882  048D                     _RCIE	set	1165
   883  0488                     _TMR1IE	set	1160
   884  010D                     _LATBbits	set	269
   885  0872                     _LATC2	set	2162
   886  018C                     _ANSELAbits	set	396
   887  018D                     _ANSELBbits	set	397
   888  0199                     _RCREG	set	409
   889  019D                     _RCSTAbits	set	413
   890  019C                     _SPBRGH	set	412
   891  019B                     _SPBRGL	set	411
   892  019A                     _TXREG	set	410
   893  019E                     _TXSTAbits	set	414
   894  0CE9                     _OERR	set	3305
   895  0211                     _SSPBUF	set	529
   896  0215                     _SSPCON1bits	set	533
   897  0214                     _SSPSTATbits	set	532
   898  0393                     _IOCAF	set	915
   899  0393                     _IOCAFbits	set	915
   900  0392                     _IOCANbits	set	914
   901  0391                     _IOCAPbits	set	913
   902  0396                     _IOCBF	set	918
   903  0396                     _IOCBFbits	set	918
   904  0395                     _IOCBNbits	set	917
   905  0394                     _IOCBPbits	set	916
   906  080A                     __stringdata:	
   907  080A                     STR_2:	
   908  080A  3425               	retlw	37	;'%'
   909  080B  3473               	retlw	115	;'s'
   910  080C  3431               	retlw	49	;'1'
   911  080D  3430               	retlw	48	;'0'
   912  080E  3434               	retlw	52	;'4'
   913  080F  342C               	retlw	44	;','
   914  0810  3434               	retlw	52	;'4'
   915  0811  3430               	retlw	48	;'0'
   916  0812  342E               	retlw	46	;'.'
   917  0813  3434               	retlw	52	;'4'
   918  0814  3434               	retlw	52	;'4'
   919  0815  3431               	retlw	49	;'1'
   920  0816  3439               	retlw	57	;'9'
   921  0817  3434               	retlw	52	;'4'
   922  0818  3434               	retlw	52	;'4'
   923  0819  342C               	retlw	44	;','
   924  081A  342D               	retlw	45	;'-'
   925  081B  3438               	retlw	56	;'8'
   926  081C  3436               	retlw	54	;'6'
   927  081D  342E               	retlw	46	;'.'
   928  081E  3439               	retlw	57	;'9'
   929  081F  3431               	retlw	49	;'1'
   930  0820  3432               	retlw	50	;'2'
   931  0821  3435               	retlw	53	;'5'
   932  0822  342C               	retlw	44	;','
   933  0823  3430               	retlw	48	;'0'
   934  0824  342C               	retlw	44	;','
   935  0825  3430               	retlw	48	;'0'
   936  0826  342C               	retlw	44	;','
   937  0827  3430               	retlw	48	;'0'
   938  0828  342C               	retlw	44	;','
   939  0829  3430               	retlw	48	;'0'
   940  082A  342C               	retlw	44	;','
   941  082B  3431               	retlw	49	;'1'
   942  082C  3432               	retlw	50	;'2'
   943  082D  342C               	retlw	44	;','
   944  082E  3432               	retlw	50	;'2'
   945  082F  342A               	retlw	42	;'*'
   946  0830  3400               	retlw	0
   947  0831                     STR_1:	
   948  0831  3425               	retlw	37	;'%'
   949  0832  3473               	retlw	115	;'s'
   950  0833  3425               	retlw	37	;'%'
   951  0834  3473               	retlw	115	;'s'
   952  0835  342C               	retlw	44	;','
   953  0836  3430               	retlw	48	;'0'
   954  0837  3425               	retlw	37	;'%'
   955  0838  3464               	retlw	100	;'d'
   956  0839  342C               	retlw	44	;','
   957  083A  3430               	retlw	48	;'0'
   958  083B  3430               	retlw	48	;'0'
   959  083C  342C               	retlw	44	;','
   960  083D  3430               	retlw	48	;'0'
   961  083E  3430               	retlw	48	;'0'
   962  083F  342C               	retlw	44	;','
   963  0840  3430               	retlw	48	;'0'
   964  0841  3430               	retlw	48	;'0'
   965  0842  342A               	retlw	42	;'*'
   966  0843  3400               	retlw	0
   967  0844                     STR_3:	
   968  0844  3428               	retlw	40	;'('
   969  0845  346E               	retlw	110	;'n'
   970  0846  3475               	retlw	117	;'u'
   971  0847  346C               	retlw	108	;'l'
   972  0848  346C               	retlw	108	;'l'
   973  0849  3429               	retlw	41	;')'
   974  084A  3400               	retlw	0
   975  084B                     __end_of__stringdata:	
   976                           
   977                           ; #config settings
   978  0000                     
   979                           	psect	cinit
   980  00D4                     start_initialization:	
   981  00D4                     __initialization:	
   982                           
   983                           ; Clear objects allocated to COMMON
   984  00D4  01F9               	clrf	__pbssCOMMON& (0+127)
   985  00D5  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   986  00D6  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   987  00D7  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   988  00D8  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   989                           
   990                           ; Clear objects allocated to BANK1
   991  00D9  0021               	movlb	1	; select bank1
   992  00DA  01EB               	clrf	__pbssBANK1& (0+127)
   993  00DB  01EC               	clrf	(__pbssBANK1+1)& (0+127)
   994  00DC  01ED               	clrf	(__pbssBANK1+2)& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK2
   997  00DD  3020               	movlw	low __pbssBANK2
   998  00DE  0084               	movwf	4
   999  00DF  3001               	movlw	high __pbssBANK2
  1000  00E0  0085               	movwf	5
  1001  00E1  303C               	movlw	60
  1002  00E2  318C  248B  3180   	fcall	clear_ram0
  1003                           
  1004                           ; Clear objects allocated to BANK4
  1005  00E5  3020               	movlw	low __pbssBANK4
  1006  00E6  0084               	movwf	4
  1007  00E7  3002               	movlw	high __pbssBANK4
  1008  00E8  0085               	movwf	5
  1009  00E9  3033               	movlw	51
  1010  00EA  318C  248B  3180   	fcall	clear_ram0
  1011                           
  1012                           ; Clear objects allocated to BANK5
  1013  00ED  30A0               	movlw	low __pbssBANK5
  1014  00EE  0084               	movwf	4
  1015  00EF  3002               	movlw	high __pbssBANK5
  1016  00F0  0085               	movwf	5
  1017  00F1  3044               	movlw	68
  1018  00F2  318C  248B  3180   	fcall	clear_ram0
  1019                           
  1020                           ; Initialize objects allocated to BANK1
  1021  00F5  3099               	movlw	low __pidataBANK1
  1022  00F6  0084               	movwf	4
  1023  00F7  308C               	movlw	(high __pidataBANK1)| (0+128)
  1024  00F8  0085               	movwf	5
  1025  00F9  30E2               	movlw	low __pdataBANK1
  1026  00FA  0086               	movwf	6
  1027  00FB  3000               	movlw	high __pdataBANK1
  1028  00FC  0087               	movwf	7
  1029  00FD  3009               	movlw	9
  1030  00FE  318C  2485  3180   	fcall	init_ram
  1031                           
  1032                           ; Initialize objects allocated to BANK2
  1033  0101  30E7               	movlw	low __pidataBANK2
  1034  0102  0084               	movwf	4
  1035  0103  308C               	movlw	(high __pidataBANK2)| (0+128)
  1036  0104  0085               	movwf	5
  1037  0105  305C               	movlw	low __pdataBANK2
  1038  0106  0086               	movwf	6
  1039  0107  3001               	movlw	high __pdataBANK2
  1040  0108  0087               	movwf	7
  1041  0109  3011               	movlw	17
  1042  010A  318C  2485  3180   	fcall	init_ram
  1043                           
  1044                           ; Initialize objects allocated to BANK3
  1045  010D  30C1               	movlw	low __pidataBANK3
  1046  010E  0084               	movwf	4
  1047  010F  308D               	movlw	(high __pidataBANK3)| (0+128)
  1048  0110  0085               	movwf	5
  1049  0111  30A0               	movlw	low __pdataBANK3
  1050  0112  0086               	movwf	6
  1051  0113  3001               	movlw	high __pdataBANK3
  1052  0114  0087               	movwf	7
  1053  0115  3023               	movlw	35
  1054  0116  318C  2485         	fcall	init_ram
  1055  0118                     end_of_initialization:	
  1056                           ;End of C runtime variable initialization code
  1057                           
  1058  0118                     __end_of__initialization:	
  1059  0118  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1060  0119  0020               	movlb	0
  1061  011A  3185  2DC6         	ljmp	_main	;jump to C main() function
  1062                           
  1063                           	psect	bssCOMMON
  1064  0079                     __pbssCOMMON:	
  1065  0079                     _end:	
  1066  0079                     	ds	2
  1067  007B                     _start:	
  1068  007B                     	ds	2
  1069  007D                     _gpsIndex:	
  1070  007D                     	ds	1
  1071                           
  1072                           	psect	bssBANK1
  1073  00EB                     __pbssBANK1:	
  1074  00EB                     _messageDoneFlag:	
  1075  00EB                     	ds	1
  1076  00EC                     _recordFlag:	
  1077  00EC                     	ds	1
  1078  00ED                     _strobeFlag:	
  1079  00ED                     	ds	1
  1080                           
  1081                           	psect	dataBANK1
  1082  00E2                     __pdataBANK1:	
  1083  00E2                     _validLatitude:	
  1084  00E2                     	ds	3
  1085  00E5                     _validLongitude:	
  1086  00E5                     	ds	3
  1087  00E8                     _gpsInvalidFlag:	
  1088  00E8                     	ds	1
  1089  00E9                     _validEastWest:	
  1090  00E9                     	ds	1
  1091  00EA                     _validNorthSouth:	
  1092  00EA                     	ds	1
  1093                           
  1094                           	psect	bssBANK2
  1095  0120                     __pbssBANK2:	
  1096  0120                     _recordEndAdress:	
  1097  0120                     	ds	4
  1098  0124                     DecodeGPS@F4933:	
  1099  0124                     	ds	3
  1100  0127                     DecodeGPS@F4935:	
  1101  0127                     	ds	3
  1102  012A                     _gpsMessage:	
  1103  012A                     	ds	50
  1104                           
  1105                           	psect	dataBANK2
  1106  015C                     __pdataBANK2:	
  1107  015C                     DecodeGPS@F4931:	
  1108  015C                     	ds	7
  1109  0163                     SetupGPS@F4920:	
  1110  0163                     	ds	6
  1111  0169                     SetupGPS@F4922:	
  1112  0169                     	ds	4
  1113                           
  1114                           	psect	dataBANK3
  1115  01A0                     __pdataBANK3:	
  1116  01A0                     UpdateGPS@F4928:	
  1117  01A0                     	ds	22
  1118  01B6                     DisableGPS@F4917:	
  1119  01B6                     	ds	13
  1120                           
  1121                           	psect	bssBANK4
  1122  0220                     __pbssBANK4:	
  1123  0220                     _buffer:	
  1124  0220                     	ds	51
  1125                           
  1126                           	psect	bssBANK5
  1127  02A0                     __pbssBANK5:	
  1128  02A0                     _preRecordingAddresses:	
  1129  02A0                     	ds	68
  1130                           
  1131                           	psect	clrtext
  1132  0C8B                     clear_ram0:	
  1133                           ;	Called with FSR0 containing the base address, and
  1134                           ;	WREG with the size to clear
  1135                           
  1136  0C8B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1137  0C8C                     clrloop0:	
  1138  0C8C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1139  0C8D  3101               	addfsr 0,1
  1140  0C8E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1141  0C8F  2C8C               	goto	clrloop0	;have we reached the end yet?
  1142  0C90  3400               	retlw	0	;all done for this memory range, return
  1143                           
  1144                           	psect	inittext
  1145  0C85                     init_ram:	
  1146  0C85  00FE               	movwf	126
  1147  0C86                     initloop:	
  1148  0C86  0012               	moviw fsr0++
  1149  0C87  001E               	movwi fsr1++
  1150  0C88  0BFE               	decfsz	126,f
  1151  0C89  2C86               	goto	initloop
  1152  0C8A  3400               	retlw	0
  1153                           
  1154                           	psect	cstackBANK1
  1155  00A0                     __pcstackBANK1:	
  1156  00A0                     SetupGPS@message:	
  1157                           
  1158                           ; 50 bytes @ 0x0
  1159  00A0                     	ds	50
  1160  00D2                     SetupGPS@startSequence:	
  1161                           
  1162                           ; 6 bytes @ 0x32
  1163  00D2                     	ds	6
  1164  00D8                     SetupGPS@MID:	
  1165                           
  1166                           ; 4 bytes @ 0x38
  1167  00D8                     	ds	4
  1168  00DC                     SetupGPS@x:	
  1169                           
  1170                           ; 2 bytes @ 0x3C
  1171  00DC                     	ds	2
  1172  00DE                     ??_main:	
  1173                           
  1174                           ; 0 bytes @ 0x3E
  1175  00DE                     	ds	3
  1176  00E1                     main@periodicCounter:	
  1177                           
  1178                           ; 1 bytes @ 0x41
  1179  00E1                     	ds	1
  1180                           
  1181                           	psect	cstackCOMMON
  1182  0070                     __pcstackCOMMON:	
  1183  0070                     ?_InitCLK:	
  1184  0070                     ?_InitGPIO:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?_InitADC:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?_InitSPI:	
  1191                           ; 0 bytes @ 0x0
  1192                           
  1193  0070                     ?_InitTimer1:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?_InitWatchdog:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ?_initUART:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?_ToggleSleepGPS:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ?_SetupGPS:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?_SendGPSSPI:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ?_RecordMode:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?_UpdateGPS:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ?_GoToSleep:	
  1218                           ; 0 bytes @ 0x0
  1219                           
  1220  0070                     ?_Hibernate:	
  1221                           ; 0 bytes @ 0x0
  1222                           
  1223  0070                     ?_WriteBuffer:	
  1224                           ; 0 bytes @ 0x0
  1225                           
  1226  0070                     ??_WriteBuffer:	
  1227                           ; 0 bytes @ 0x0
  1228                           
  1229  0070                     ?_DecodeGPS:	
  1230                           ; 0 bytes @ 0x0
  1231                           
  1232  0070                     ?_isr:	
  1233                           ; 0 bytes @ 0x0
  1234                           
  1235  0070                     ?_WriteSPI:	
  1236                           ; 0 bytes @ 0x0
  1237                           
  1238  0070                     ?_uart_xmit:	
  1239                           ; 0 bytes @ 0x0
  1240                           
  1241  0070                     ?_ReadSPI:	
  1242                           ; 0 bytes @ 0x0
  1243                           
  1244  0070                     ?_ReadStatusSPI:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_ReadBuffer:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x0
  1252  0070                     	ds	1
  1253  0071                     WriteBuffer@data:	
  1254                           
  1255                           ; 1 bytes @ 0x1
  1256  0071                     	ds	1
  1257  0072                     ??_isr:	
  1258                           
  1259                           ; 0 bytes @ 0x2
  1260  0072                     	ds	5
  1261  0077                     _isr$610:	
  1262                           
  1263                           ; 2 bytes @ 0x7
  1264  0077                     	ds	2
  1265                           
  1266                           	psect	cstackBANK0
  1267  0020                     __pcstackBANK0:	
  1268  0020                     ??_InitCLK:	
  1269  0020                     ??_InitGPIO:	
  1270                           ; 0 bytes @ 0x0
  1271                           
  1272  0020                     ??_InitADC:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0020                     ??_InitSPI:	
  1276                           ; 0 bytes @ 0x0
  1277                           
  1278  0020                     ??_InitTimer1:	
  1279                           ; 0 bytes @ 0x0
  1280                           
  1281  0020                     ??_InitWatchdog:	
  1282                           ; 0 bytes @ 0x0
  1283                           
  1284  0020                     ??_initUART:	
  1285                           ; 0 bytes @ 0x0
  1286                           
  1287  0020                     ??_ToggleSleepGPS:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0020                     ??_GoToSleep:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0020                     ??_Hibernate:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0020                     ??_WriteSPI:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0020                     ??_ReadSPI:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0020                     ??_ReadBuffer:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0020                     ??_uart_xmit:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0020                     ?_compute_checksum:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0020                     ?___bmul:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ?___wmul:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0020                     ?___lwdiv:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320  0020                     uart_xmit@mydata_byte:	
  1321                           ; 2 bytes @ 0x0
  1322                           
  1323  0020                     ___bmul@multiplicand:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0020                     compute_checksum@size:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0020                     ___wmul@multiplier:	
  1330                           ; 2 bytes @ 0x0
  1331                           
  1332  0020                     ___lwdiv@divisor:	
  1333                           ; 2 bytes @ 0x0
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0x0
  1337  0020                     	ds	1
  1338  0021                     ??___bmul:	
  1339  0021                     ReadSPI@dataByte:	
  1340                           ; 0 bytes @ 0x1
  1341                           
  1342  0021                     ReadBuffer@read_data:	
  1343                           ; 1 bytes @ 0x1
  1344                           
  1345  0021                     GoToSleep@count:	
  1346                           ; 1 bytes @ 0x1
  1347                           
  1348  0021                     Hibernate@count:	
  1349                           ; 1 bytes @ 0x1
  1350                           
  1351                           
  1352                           ; 1 bytes @ 0x1
  1353  0021                     	ds	1
  1354  0022                     ??_compute_checksum:	
  1355  0022                     ___bmul@product:	
  1356                           ; 0 bytes @ 0x2
  1357                           
  1358  0022                     WriteSPI@temp:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361  0022                     ___wmul@multiplicand:	
  1362                           ; 2 bytes @ 0x2
  1363                           
  1364  0022                     ___lwdiv@dividend:	
  1365                           ; 2 bytes @ 0x2
  1366                           
  1367                           
  1368                           ; 2 bytes @ 0x2
  1369  0022                     	ds	1
  1370  0023                     ___bmul@multiplier:	
  1371                           
  1372                           ; 1 bytes @ 0x3
  1373  0023                     	ds	1
  1374  0024                     ??___wmul:	
  1375  0024                     ??___lwdiv:	
  1376                           ; 0 bytes @ 0x4
  1377                           
  1378  0024                     WriteSPI@databyte:	
  1379                           ; 0 bytes @ 0x4
  1380                           
  1381  0024                     compute_checksum@checksum:	
  1382                           ; 1 bytes @ 0x4
  1383                           
  1384  0024                     ___wmul@product:	
  1385                           ; 1 bytes @ 0x4
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x4
  1389  0024                     	ds	1
  1390  0025                     ??_ReadStatusSPI:	
  1391  0025                     compute_checksum@data:	
  1392                           ; 0 bytes @ 0x5
  1393                           
  1394  0025                     ___lwdiv@quotient:	
  1395                           ; 1 bytes @ 0x5
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x5
  1399  0025                     	ds	1
  1400  0026                     ?___awdiv:	
  1401  0026                     ReadStatusSPI@dataRead:	
  1402                           ; 2 bytes @ 0x6
  1403                           
  1404  0026                     compute_checksum@x:	
  1405                           ; 1 bytes @ 0x6
  1406                           
  1407  0026                     ___awdiv@divisor:	
  1408                           ; 2 bytes @ 0x6
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x6
  1412  0026                     	ds	1
  1413  0027                     ?_WriteOverheadSPI:	
  1414  0027                     ___lwdiv@counter:	
  1415                           ; 0 bytes @ 0x7
  1416                           
  1417  0027                     WriteOverheadSPI@address:	
  1418                           ; 1 bytes @ 0x7
  1419                           
  1420                           
  1421                           ; 4 bytes @ 0x7
  1422  0027                     	ds	1
  1423  0028                     ?_uart_write_message:	
  1424  0028                     ?___lwmod:	
  1425                           ; 0 bytes @ 0x8
  1426                           
  1427  0028                     uart_write_message@size:	
  1428                           ; 2 bytes @ 0x8
  1429                           
  1430  0028                     ___awdiv@dividend:	
  1431                           ; 2 bytes @ 0x8
  1432                           
  1433  0028                     ___lwmod@divisor:	
  1434                           ; 2 bytes @ 0x8
  1435                           
  1436                           
  1437                           ; 2 bytes @ 0x8
  1438  0028                     	ds	2
  1439  002A                     ??_uart_write_message:	
  1440  002A                     ??___awdiv:	
  1441                           ; 0 bytes @ 0xA
  1442                           
  1443  002A                     ___lwmod@dividend:	
  1444                           ; 0 bytes @ 0xA
  1445                           
  1446                           
  1447                           ; 2 bytes @ 0xA
  1448  002A                     	ds	1
  1449  002B                     ??_WriteOverheadSPI:	
  1450  002B                     ___awdiv@counter:	
  1451                           ; 0 bytes @ 0xB
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0xB
  1455  002B                     	ds	1
  1456  002C                     ??___lwmod:	
  1457  002C                     ___awdiv@sign:	
  1458                           ; 0 bytes @ 0xC
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0xC
  1462  002C                     	ds	1
  1463  002D                     ___lwmod@counter:	
  1464  002D                     _uart_write_message$1376:	
  1465                           ; 1 bytes @ 0xD
  1466                           
  1467  002D                     ___awdiv@quotient:	
  1468                           ; 2 bytes @ 0xD
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0xD
  1472  002D                     	ds	1
  1473  002E                     ?_sprintf:	
  1474  002E                     sprintf@f:	
  1475                           ; 2 bytes @ 0xE
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0xE
  1479  002E                     	ds	1
  1480  002F                     _uart_write_message$1377:	
  1481                           
  1482                           ; 2 bytes @ 0xF
  1483  002F                     	ds	2
  1484  0031                     uart_write_message@x:	
  1485  0031                     WriteOverheadSPI@address_bytes:	
  1486                           ; 2 bytes @ 0x11
  1487                           
  1488                           
  1489                           ; 3 bytes @ 0x11
  1490  0031                     	ds	2
  1491  0033                     uart_write_message@checksum:	
  1492                           
  1493                           ; 1 bytes @ 0x13
  1494  0033                     	ds	1
  1495  0034                     ??_sprintf:	
  1496  0034                     WriteOverheadSPI@StatusReg:	
  1497                           ; 0 bytes @ 0x14
  1498                           
  1499  0034                     uart_write_message@ascii_checksum:	
  1500                           ; 1 bytes @ 0x14
  1501                           
  1502                           
  1503                           ; 2 bytes @ 0x14
  1504  0034                     	ds	1
  1505  0035                     ??_SendGPSSPI:	
  1506  0035                     ??_RecordMode:	
  1507                           ; 0 bytes @ 0x15
  1508                           
  1509                           
  1510                           ; 0 bytes @ 0x15
  1511  0035                     	ds	1
  1512  0036                     uart_write_message@data:	
  1513  0036                     SendGPSSPI@address:	
  1514                           ; 1 bytes @ 0x16
  1515                           
  1516                           
  1517                           ; 4 bytes @ 0x16
  1518  0036                     	ds	2
  1519  0038                     sprintf@flag:	
  1520                           
  1521                           ; 1 bytes @ 0x18
  1522  0038                     	ds	1
  1523  0039                     sprintf@prec:	
  1524                           
  1525                           ; 1 bytes @ 0x19
  1526  0039                     	ds	1
  1527  003A                     sprintf@ap:	
  1528  003A                     RecordMode@count:	
  1529                           ; 1 bytes @ 0x1A
  1530                           
  1531  003A                     SendGPSSPI@x:	
  1532                           ; 2 bytes @ 0x1A
  1533                           
  1534                           
  1535                           ; 2 bytes @ 0x1A
  1536  003A                     	ds	1
  1537  003B                     sprintf@sp:	
  1538                           
  1539                           ; 1 bytes @ 0x1B
  1540  003B                     	ds	1
  1541  003C                     ??_DecodeGPS:	
  1542  003C                     RecordMode@address:	
  1543                           ; 0 bytes @ 0x1C
  1544                           
  1545  003C                     sprintf@_val:	
  1546                           ; 4 bytes @ 0x1C
  1547                           
  1548                           
  1549                           ; 4 bytes @ 0x1C
  1550  003C                     	ds	3
  1551  003F                     DecodeGPS@messageID:	
  1552                           
  1553                           ; 7 bytes @ 0x1F
  1554  003F                     	ds	1
  1555  0040                     sprintf@c:	
  1556                           
  1557                           ; 1 bytes @ 0x20
  1558  0040                     	ds	1
  1559  0041                     ??_SetupGPS:	
  1560                           
  1561                           ; 0 bytes @ 0x21
  1562  0041                     	ds	5
  1563  0046                     DecodeGPS@northSouth:	
  1564                           
  1565                           ; 1 bytes @ 0x26
  1566  0046                     	ds	1
  1567  0047                     DecodeGPS@eastWest:	
  1568                           
  1569                           ; 1 bytes @ 0x27
  1570  0047                     	ds	1
  1571  0048                     DecodeGPS@status:	
  1572                           
  1573                           ; 1 bytes @ 0x28
  1574  0048                     	ds	1
  1575  0049                     DecodeGPS@latitude:	
  1576                           
  1577                           ; 3 bytes @ 0x29
  1578  0049                     	ds	3
  1579  004C                     DecodeGPS@longitude:	
  1580                           
  1581                           ; 3 bytes @ 0x2C
  1582  004C                     	ds	3
  1583  004F                     DecodeGPS@x:	
  1584                           
  1585                           ; 2 bytes @ 0x2F
  1586  004F                     	ds	2
  1587  0051                     ??_UpdateGPS:	
  1588                           
  1589                           ; 0 bytes @ 0x31
  1590  0051                     	ds	3
  1591  0054                     UpdateGPS@GPSupdateMessage:	
  1592                           
  1593                           ; 22 bytes @ 0x34
  1594  0054                     	ds	22
  1595  006A                     UpdateGPS@count:	
  1596                           
  1597                           ; 2 bytes @ 0x4A
  1598  006A                     	ds	2
  1599  006C                     ?_main:	
  1600  006C                     main@argc:	
  1601                           ; 2 bytes @ 0x4C
  1602                           
  1603                           
  1604                           ; 2 bytes @ 0x4C
  1605  006C                     	ds	2
  1606  006E                     main@argv:	
  1607                           
  1608                           ; 2 bytes @ 0x4E
  1609  006E                     	ds	2
  1610                           
  1611                           	psect	maintext
  1612  05C6                     __pmaintext:	
  1613 ;;
  1614 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1615 ;;
  1616 ;; *************** function _main *****************
  1617 ;; Defined at:
  1618 ;;		line 20 in file "launcher_main.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  argc            2   76[BANK0 ] int 
  1621 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  periodicCoun    1   65[BANK1 ] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2   76[BANK0 ] int 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 17F/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1633 ;;      Params:         0       4       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       1       0       0       0       0       0
  1635 ;;      Temps:          0       0       3       0       0       0       0       0
  1636 ;;      Totals:         0       4       4       0       0       0       0       0
  1637 ;;Total ram usage:        8 bytes
  1638 ;; Hardware stack levels required when called:    8
  1639 ;; This function calls:
  1640 ;;		_GoToSleep
  1641 ;;		_Hibernate
  1642 ;;		_InitADC
  1643 ;;		_InitCLK
  1644 ;;		_InitGPIO
  1645 ;;		_InitSPI
  1646 ;;		_InitTimer1
  1647 ;;		_InitWatchdog
  1648 ;;		_RecordMode
  1649 ;;		_SendGPSSPI
  1650 ;;		_SetupGPS
  1651 ;;		_ToggleSleepGPS
  1652 ;;		_UpdateGPS
  1653 ;;		_initUART
  1654 ;; This function is called by:
  1655 ;;		Startup code after reset
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _main
  1661  05C6                     _main:	
  1662                           
  1663                           ;launcher_main.c: 23: InitCLK();
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1667  05C6  318C  2491  3185   	fcall	_InitCLK
  1668                           
  1669                           ;launcher_main.c: 24: InitGPIO();
  1670  05C9  318D  25E4  3185   	fcall	_InitGPIO
  1671                           
  1672                           ;launcher_main.c: 25: InitADC();
  1673  05CC  318D  2570  3185   	fcall	_InitADC
  1674                           
  1675                           ;launcher_main.c: 26: InitSPI();
  1676  05CF  318D  250A  3185   	fcall	_InitSPI
  1677                           
  1678                           ;launcher_main.c: 27: InitTimer1();
  1679  05D2  318C  24B8  3185   	fcall	_InitTimer1
  1680                           
  1681                           ;launcher_main.c: 28: InitWatchdog();
  1682  05D5  3187  27F9  3185   	fcall	_InitWatchdog
  1683                           
  1684                           ;launcher_main.c: 29: initUART();
  1685  05D8  318C  24C7  3185   	fcall	_initUART
  1686                           
  1687                           ;launcher_main.c: 31: unsigned char periodicCounter = 10;
  1688  05DB  300A               	movlw	10
  1689  05DC  0021               	movlb	1	; select bank1
  1690  05DD  00DE               	movwf	??_main^(0+128)
  1691  05DE  085E               	movf	??_main^(0+128),w
  1692  05DF  00E1               	movwf	main@periodicCounter^(0+128)
  1693                           
  1694                           ;launcher_main.c: 32: gpsIndex = 0;
  1695  05E0  01FD               	clrf	_gpsIndex	;volatile
  1696                           
  1697                           ;launcher_main.c: 34: INTCONbits.GIE = 1;
  1698  05E1  178B               	bsf	11,7	;volatile
  1699                           
  1700                           ;launcher_main.c: 36: if(!PORTCbits.RC7)
  1701  05E2  0020               	movlb	0	; select bank0
  1702  05E3  1B8E               	btfsc	14,7	;volatile
  1703  05E4  2DE8               	goto	l2752
  1704                           
  1705                           ;launcher_main.c: 37: ToggleSleepGPS();
  1706  05E5  318E  2611  3185   	fcall	_ToggleSleepGPS
  1707  05E8                     l2752:	
  1708                           
  1709                           ;launcher_main.c: 38: SetupGPS();
  1710  05E8  3186  267C  3185   	fcall	_SetupGPS
  1711                           
  1712                           ;launcher_main.c: 39: SendGPSSPI();
  1713  05EB  3187  2788  3185   	fcall	_SendGPSSPI
  1714                           
  1715                           ;launcher_main.c: 41: SSPCON1bits.SSPEN=0;
  1716  05EE  0024               	movlb	4	; select bank4
  1717  05EF  1295               	bcf	21,5	;volatile
  1718                           
  1719                           ;launcher_main.c: 42: PORTCbits.RC5 = 0;
  1720  05F0  0020               	movlb	0	; select bank0
  1721  05F1  128E               	bcf	14,5	;volatile
  1722                           
  1723                           ;launcher_main.c: 44: LATC2 = (1);
  1724  05F2  0022               	movlb	2	; select bank2
  1725  05F3  150E               	bsf	14,2	;volatile
  1726  05F4                     l2762:	
  1727                           ;launcher_main.c: 46: while(1){
  1728                           
  1729                           
  1730                           ;launcher_main.c: 53: LATC2 = (1);
  1731  05F4  0022               	movlb	2	; select bank2
  1732  05F5  150E               	bsf	14,2	;volatile
  1733                           
  1734                           ;launcher_main.c: 56: LATC2 = (1);
  1735  05F6  150E               	bsf	14,2	;volatile
  1736                           
  1737                           ;launcher_main.c: 59: if(PORTAbits.RA1)
  1738  05F7  0020               	movlb	0	; select bank0
  1739  05F8  1C8C               	btfss	12,1	;volatile
  1740  05F9  2E0A               	goto	l115
  1741                           
  1742                           ;launcher_main.c: 60: {
  1743                           ;launcher_main.c: 62: PORTBbits.RB0 = 1;
  1744  05FA  140D               	bsf	13,0	;volatile
  1745                           
  1746                           ;launcher_main.c: 63: _delay((unsigned long)((100)*(16000000/4000.0)));
  1747  05FB  3003               	movlw	3
  1748  05FC  0021               	movlb	1	; select bank1
  1749  05FD  00E0               	movwf	(??_main^(0+128)+2)
  1750  05FE  3008               	movlw	8
  1751  05FF  00DF               	movwf	(??_main^(0+128)+1)
  1752  0600  3078               	movlw	120
  1753  0601  00DE               	movwf	??_main^(0+128)
  1754  0602                     u2737:	
  1755  0602  0BDE               	decfsz	??_main^(0+128),f
  1756  0603  2E02               	goto	u2737
  1757  0604  0BDF               	decfsz	(??_main^(0+128)+1),f
  1758  0605  2E02               	goto	u2737
  1759  0606  0BE0               	decfsz	(??_main^(0+128)+2),f
  1760  0607  2E02               	goto	u2737
  1761                           
  1762                           ;launcher_main.c: 64: PORTBbits.RB0 = 0;
  1763  0608  0020               	movlb	0	; select bank0
  1764  0609  100D               	bcf	13,0	;volatile
  1765  060A                     l115:	
  1766                           
  1767                           ;launcher_main.c: 65: }
  1768                           ;launcher_main.c: 67: if(recordFlag)
  1769  060A  0021               	movlb	1	; select bank1
  1770  060B  086C               	movf	_recordFlag^(0+128),w
  1771  060C  1903               	btfsc	3,2
  1772  060D  2E12               	goto	l2776
  1773                           
  1774                           ;launcher_main.c: 68: {
  1775                           ;launcher_main.c: 69: RecordMode();
  1776  060E  3183  2381  3185   	fcall	_RecordMode
  1777  0611  0021               	movlb	1	; select bank1
  1778  0612                     l2776:	
  1779                           
  1780                           ;launcher_main.c: 70: }
  1781                           ;launcher_main.c: 73: UpdateGPS();
  1782  0612  318F  279A  3185   	fcall	_UpdateGPS
  1783                           
  1784                           ;launcher_main.c: 75: if(gpsInvalidFlag)
  1785  0615  0021               	movlb	1	; select bank1
  1786  0616  0868               	movf	_gpsInvalidFlag^(0+128),w
  1787  0617  1903               	btfsc	3,2
  1788  0618  2E3F               	goto	l2786
  1789                           
  1790                           ;launcher_main.c: 76: {
  1791                           ;launcher_main.c: 77: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1792  0619  0022               	movlb	2	; select bank2
  1793  061A  080D               	movf	13,w	;volatile
  1794  061B  39FF               	andlw	255
  1795  061C  3820               	iorlw	32
  1796  061D  0021               	movlb	1	; select bank1
  1797  061E  00DE               	movwf	??_main^(0+128)
  1798  061F  0020               	movlb	0	; select bank0
  1799  0620  080D               	movf	13,w	;volatile
  1800  0621  0021               	movlb	1	; select bank1
  1801  0622  065E               	xorwf	??_main^(0+128),w
  1802  0623  3900               	andlw	-256
  1803  0624  065E               	xorwf	??_main^(0+128),w
  1804  0625  0020               	movlb	0	; select bank0
  1805  0626  008D               	movwf	13	;volatile
  1806                           
  1807                           ;launcher_main.c: 78: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1808  0627  0022               	movlb	2	; select bank2
  1809  0628  080D               	movf	13,w	;volatile
  1810  0629  39FF               	andlw	255
  1811  062A  39EF               	andlw	239
  1812  062B  0021               	movlb	1	; select bank1
  1813  062C  00DE               	movwf	??_main^(0+128)
  1814  062D  0020               	movlb	0	; select bank0
  1815  062E  080D               	movf	13,w	;volatile
  1816  062F  0021               	movlb	1	; select bank1
  1817  0630  065E               	xorwf	??_main^(0+128),w
  1818  0631  3900               	andlw	-256
  1819  0632  065E               	xorwf	??_main^(0+128),w
  1820  0633  0020               	movlb	0	; select bank0
  1821  0634  008D               	movwf	13	;volatile
  1822                           
  1823                           ;launcher_main.c: 79: if(periodicCounter < 14)
  1824  0635  300E               	movlw	14
  1825  0636  0021               	movlb	1	; select bank1
  1826  0637  0261               	subwf	main@periodicCounter^(0+128),w
  1827  0638  1803               	skipnc
  1828  0639  2E63               	goto	l2792
  1829                           
  1830                           ;launcher_main.c: 80: periodicCounter++;
  1831  063A  3001               	movlw	1
  1832  063B  00DE               	movwf	??_main^(0+128)
  1833  063C  085E               	movf	??_main^(0+128),w
  1834  063D  07E1               	addwf	main@periodicCounter^(0+128),f
  1835                           
  1836                           ;launcher_main.c: 81: }
  1837  063E  2E63               	goto	l2792
  1838  063F                     l2786:	
  1839                           
  1840                           ;launcher_main.c: 82: else
  1841                           ;launcher_main.c: 83: {
  1842                           ;launcher_main.c: 84: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1843  063F  0022               	movlb	2	; select bank2
  1844  0640  080D               	movf	13,w	;volatile
  1845  0641  39FF               	andlw	255
  1846  0642  3810               	iorlw	16
  1847  0643  0021               	movlb	1	; select bank1
  1848  0644  00DE               	movwf	??_main^(0+128)
  1849  0645  0020               	movlb	0	; select bank0
  1850  0646  080D               	movf	13,w	;volatile
  1851  0647  0021               	movlb	1	; select bank1
  1852  0648  065E               	xorwf	??_main^(0+128),w
  1853  0649  3900               	andlw	-256
  1854  064A  065E               	xorwf	??_main^(0+128),w
  1855  064B  0020               	movlb	0	; select bank0
  1856  064C  008D               	movwf	13	;volatile
  1857                           
  1858                           ;launcher_main.c: 85: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1859  064D  0022               	movlb	2	; select bank2
  1860  064E  080D               	movf	13,w	;volatile
  1861  064F  39FF               	andlw	255
  1862  0650  39DF               	andlw	223
  1863  0651  0021               	movlb	1	; select bank1
  1864  0652  00DE               	movwf	??_main^(0+128)
  1865  0653  0020               	movlb	0	; select bank0
  1866  0654  080D               	movf	13,w	;volatile
  1867  0655  0021               	movlb	1	; select bank1
  1868  0656  065E               	xorwf	??_main^(0+128),w
  1869  0657  3900               	andlw	-256
  1870  0658  065E               	xorwf	??_main^(0+128),w
  1871  0659  0020               	movlb	0	; select bank0
  1872  065A  008D               	movwf	13	;volatile
  1873                           
  1874                           ;launcher_main.c: 86: periodicCounter = 10;
  1875  065B  300A               	movlw	10
  1876  065C  0021               	movlb	1	; select bank1
  1877  065D  00DE               	movwf	??_main^(0+128)
  1878  065E  085E               	movf	??_main^(0+128),w
  1879  065F  00E1               	movwf	main@periodicCounter^(0+128)
  1880                           
  1881                           ;launcher_main.c: 87: ToggleSleepGPS();
  1882  0660  318E  2611  3185   	fcall	_ToggleSleepGPS
  1883  0663                     l2792:	
  1884                           
  1885                           ;launcher_main.c: 88: }
  1886                           ;launcher_main.c: 90: if(!recordFlag)
  1887  0663  0021               	movlb	1	; select bank1
  1888  0664  08EC               	movf	_recordFlag^(0+128),f
  1889  0665  1D03               	skipz
  1890  0666  2DF4               	goto	l2762
  1891                           
  1892                           ;launcher_main.c: 91: {
  1893                           ;launcher_main.c: 92: if(strobeFlag)
  1894  0667  086D               	movf	_strobeFlag^(0+128),w
  1895  0668  1903               	btfsc	3,2
  1896  0669  2E6F               	goto	l2798
  1897                           
  1898                           ;launcher_main.c: 93: GoToSleep(10);
  1899  066A  300A               	movlw	10
  1900  066B  318C  24F8  3185   	fcall	_GoToSleep
  1901  066E  2DF4               	goto	l2762
  1902  066F                     l2798:	
  1903                           
  1904                           ;launcher_main.c: 94: else if(gpsInvalidFlag)
  1905  066F  0021               	movlb	1	; select bank1
  1906  0670  0868               	movf	_gpsInvalidFlag^(0+128),w
  1907  0671  1903               	btfsc	3,2
  1908  0672  2E78               	goto	l2802
  1909                           
  1910                           ;launcher_main.c: 95: GoToSleep(periodicCounter);
  1911  0673  0861               	movf	main@periodicCounter^(0+128),w
  1912  0674  318C  24F8  3185   	fcall	_GoToSleep
  1913  0677  2DF4               	goto	l2762
  1914  0678                     l2802:	
  1915                           
  1916                           ;launcher_main.c: 96: else
  1917                           ;launcher_main.c: 97: Hibernate();
  1918  0678  318D  2589  3185   	fcall	_Hibernate
  1919  067B  2DF4               	goto	l2762
  1920  067C                     __end_of_main:	
  1921                           ;launcher_main.c: 98: }
  1922                           ;launcher_main.c: 101: }
  1923                           ;launcher_main.c: 103: return (0);
  1924                           ;	Return value of _main is never used
  1925                           
  1926                           
  1927                           	psect	text1
  1928  0CC7                     __ptext1:	
  1929 ;; *************** function _initUART *****************
  1930 ;; Defined at:
  1931 ;;		line 253 in file "launcher_functions.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		wreg, status,2
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1945 ;;      Params:         0       0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    2
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _initUART
  1961  0CC7                     _initUART:	
  1962                           
  1963                           ;launcher_functions.c: 256: TRISCbits.TRISC6 = 0;
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _initUART: [wreg+status,2]
  1967  0CC7  0021               	movlb	1	; select bank1
  1968  0CC8  130E               	bcf	14,6	;volatile
  1969                           
  1970                           ;launcher_functions.c: 257: TRISCbits.TRISC7 = 1;
  1971  0CC9  178E               	bsf	14,7	;volatile
  1972                           
  1973                           ;launcher_functions.c: 258: TXSTAbits.BRGH = 0;
  1974  0CCA  0023               	movlb	3	; select bank3
  1975  0CCB  111E               	bcf	30,2	;volatile
  1976                           
  1977                           ;launcher_functions.c: 260: SPBRGH = 0;
  1978  0CCC  019C               	clrf	28	;volatile
  1979                           
  1980                           ;launcher_functions.c: 261: SPBRGL = 51;
  1981  0CCD  3033               	movlw	51
  1982  0CCE  009B               	movwf	27	;volatile
  1983                           
  1984                           ;launcher_functions.c: 262: TXSTAbits.TX9 = 0;
  1985  0CCF  131E               	bcf	30,6	;volatile
  1986                           
  1987                           ;launcher_functions.c: 263: TXSTAbits.SYNC = 0;
  1988  0CD0  121E               	bcf	30,4	;volatile
  1989                           
  1990                           ;launcher_functions.c: 264: TXSTAbits.TXEN = 1;
  1991  0CD1  169E               	bsf	30,5	;volatile
  1992                           
  1993                           ;launcher_functions.c: 266: RCSTAbits.SPEN = 1;
  1994  0CD2  179D               	bsf	29,7	;volatile
  1995                           
  1996                           ;launcher_functions.c: 267: RCSTAbits.RX9 = 0;
  1997  0CD3  131D               	bcf	29,6	;volatile
  1998                           
  1999                           ;launcher_functions.c: 268: RCSTAbits.CREN = 1;
  2000  0CD4  161D               	bsf	29,4	;volatile
  2001  0CD5  0008               	return
  2002  0CD6                     __end_of_initUART:	
  2003                           
  2004                           	psect	text2
  2005  0F9A                     __ptext2:	
  2006 ;; *************** function _UpdateGPS *****************
  2007 ;; Defined at:
  2008 ;;		line 361 in file "launcher_functions.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  GPSupdateMes   22   52[BANK0 ] unsigned char [22]
  2013 ;;  count           2   74[BANK0 ] unsigned int 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;		None               void
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2023 ;;      Params:         0       0       0       0       0       0       0       0
  2024 ;;      Locals:         0      24       0       0       0       0       0       0
  2025 ;;      Temps:          0       3       0       0       0       0       0       0
  2026 ;;      Totals:         0      27       0       0       0       0       0       0
  2027 ;;Total ram usage:       27 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    7
  2030 ;; This function calls:
  2031 ;;		_DecodeGPS
  2032 ;;		_SetupGPS
  2033 ;;		_ToggleSleepGPS
  2034 ;;		_uart_write_message
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _UpdateGPS
  2042  0F9A                     _UpdateGPS:	
  2043                           
  2044                           ;launcher_functions.c: 363: unsigned int count = 0;
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2048  0F9A  0020               	movlb	0	; select bank0
  2049  0F9B  01EA               	clrf	UpdateGPS@count
  2050  0F9C  01EB               	clrf	UpdateGPS@count+1
  2051                           
  2052                           ;launcher_functions.c: 364: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,01,00*"
      +                          ;
  2053  0F9D  30A0               	movlw	low UpdateGPS@F4928
  2054  0F9E  0086               	movwf	6
  2055  0F9F  3001               	movlw	high UpdateGPS@F4928
  2056  0FA0  0087               	movwf	7
  2057  0FA1  3054               	movlw	low UpdateGPS@GPSupdateMessage
  2058  0FA2  0084               	movwf	4
  2059  0FA3  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2060  0FA4  0085               	movwf	5
  2061  0FA5  3016               	movlw	22
  2062  0FA6  00D1               	movwf	??_UpdateGPS
  2063  0FA7                     u2240:	
  2064  0FA7  0016               	moviw fsr1++
  2065  0FA8  001A               	movwi fsr0++
  2066  0FA9  0BD1               	decfsz	??_UpdateGPS,f
  2067  0FAA  2FA7               	goto	u2240
  2068                           
  2069                           ;launcher_functions.c: 367: RCIE = 1;
  2070  0FAB  0021               	movlb	1	; select bank1
  2071  0FAC  1691               	bsf	17,5	;volatile
  2072                           
  2073                           ;launcher_functions.c: 368: PEIE = 1;
  2074  0FAD  170B               	bsf	11,6	;volatile
  2075                           
  2076                           ;launcher_functions.c: 369: GIE = 1;
  2077  0FAE  178B               	bsf	11,7	;volatile
  2078                           
  2079                           ;launcher_functions.c: 371: if(!PORTCbits.RC7)
  2080  0FAF  0020               	movlb	0	; select bank0
  2081  0FB0  1B8E               	btfsc	14,7	;volatile
  2082  0FB1  2FB5               	goto	l2674
  2083                           
  2084                           ;launcher_functions.c: 372: ToggleSleepGPS();
  2085  0FB2  318E  2611  318F   	fcall	_ToggleSleepGPS
  2086  0FB5                     l2674:	
  2087                           
  2088                           ;launcher_functions.c: 374: gpsIndex = 0;
  2089  0FB5  01FD               	clrf	_gpsIndex	;volatile
  2090                           
  2091                           ;launcher_functions.c: 375: uart_write_message(GPSupdateMessage, 22);
  2092  0FB6  3016               	movlw	22
  2093  0FB7  0020               	movlb	0	; select bank0
  2094  0FB8  00A8               	movwf	uart_write_message@size
  2095  0FB9  3000               	movlw	0
  2096  0FBA  00A9               	movwf	uart_write_message@size+1
  2097  0FBB  3054               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2098  0FBC  3187  2712  318F   	fcall	_uart_write_message
  2099  0FBF                     l2698:	
  2100                           ;launcher_functions.c: 376: while(!messageDoneFlag)
  2101                           
  2102  0FBF  0021               	movlb	1	; select bank1
  2103  0FC0  086B               	movf	_messageDoneFlag^(0+128),w
  2104  0FC1  1D03               	skipz
  2105  0FC2  2FFC               	goto	l2700
  2106                           
  2107                           ;launcher_functions.c: 377: {
  2108                           ;launcher_functions.c: 378: if(count == 60000)
  2109  0FC3  30EA               	movlw	234
  2110  0FC4  0020               	movlb	0	; select bank0
  2111  0FC5  066B               	xorwf	UpdateGPS@count+1,w
  2112  0FC6  1D03               	skipz
  2113  0FC7  2FCA               	goto	u2265
  2114  0FC8  3060               	movlw	96
  2115  0FC9  066A               	xorwf	UpdateGPS@count,w
  2116  0FCA                     u2265:	
  2117  0FCA  1D03               	skipz
  2118  0FCB  2FF6               	goto	l2696
  2119                           
  2120                           ;launcher_functions.c: 379: {
  2121                           ;launcher_functions.c: 380: ToggleSleepGPS();
  2122  0FCC  318E  2611  318F   	fcall	_ToggleSleepGPS
  2123                           
  2124                           ;launcher_functions.c: 381: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2125  0FCF  3015               	movlw	21
  2126  0FD0  0020               	movlb	0	; select bank0
  2127  0FD1  00D3               	movwf	??_UpdateGPS+2
  2128  0FD2  304B               	movlw	75
  2129  0FD3  00D2               	movwf	??_UpdateGPS+1
  2130  0FD4  30D1               	movlw	209
  2131  0FD5  00D1               	movwf	??_UpdateGPS
  2132  0FD6                     u2747:	
  2133  0FD6  0BD1               	decfsz	??_UpdateGPS,f
  2134  0FD7  2FD6               	goto	u2747
  2135  0FD8  0BD2               	decfsz	??_UpdateGPS+1,f
  2136  0FD9  2FD6               	goto	u2747
  2137  0FDA  0BD3               	decfsz	??_UpdateGPS+2,f
  2138  0FDB  2FD6               	goto	u2747
  2139  0FDC  0000               	nop
  2140                           
  2141                           ;launcher_functions.c: 382: if(!PORTCbits.RC7)
  2142  0FDD  0020               	movlb	0	; select bank0
  2143  0FDE  1B8E               	btfsc	14,7	;volatile
  2144  0FDF  2FE3               	goto	l2688
  2145                           
  2146                           ;launcher_functions.c: 383: ToggleSleepGPS();
  2147  0FE0  318E  2611  318F   	fcall	_ToggleSleepGPS
  2148  0FE3                     l2688:	
  2149                           
  2150                           ;launcher_functions.c: 384: SetupGPS();
  2151  0FE3  3186  267C  318F   	fcall	_SetupGPS
  2152  0FE6                     l2690:	
  2153                           ;launcher_functions.c: 385: while(!messageDoneFlag);
  2154                           
  2155  0FE6  0021               	movlb	1	; select bank1
  2156  0FE7  086B               	movf	_messageDoneFlag^(0+128),w
  2157  0FE8  1903               	btfsc	3,2
  2158  0FE9  2FE6               	goto	l2690
  2159                           
  2160                           ;launcher_functions.c: 386: messageDoneFlag = 0;
  2161  0FEA  01EB               	clrf	_messageDoneFlag^(0+128)
  2162                           
  2163                           ;launcher_functions.c: 387: count = 0;
  2164  0FEB  0020               	movlb	0	; select bank0
  2165  0FEC  01EA               	clrf	UpdateGPS@count
  2166  0FED  01EB               	clrf	UpdateGPS@count+1
  2167                           
  2168                           ;launcher_functions.c: 388: uart_write_message(GPSupdateMessage, 22);
  2169  0FEE  3016               	movlw	22
  2170  0FEF  00A8               	movwf	uart_write_message@size
  2171  0FF0  3000               	movlw	0
  2172  0FF1  00A9               	movwf	uart_write_message@size+1
  2173  0FF2  3054               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2174  0FF3  3187  2712  318F   	fcall	_uart_write_message
  2175  0FF6                     l2696:	
  2176                           
  2177                           ;launcher_functions.c: 389: }
  2178                           ;launcher_functions.c: 390: count++;
  2179  0FF6  3001               	movlw	1
  2180  0FF7  0020               	movlb	0	; select bank0
  2181  0FF8  07EA               	addwf	UpdateGPS@count,f
  2182  0FF9  3000               	movlw	0
  2183  0FFA  3DEB               	addwfc	UpdateGPS@count+1,f
  2184  0FFB  2FBF               	goto	l2698
  2185  0FFC                     l2700:	
  2186                           
  2187                           ;launcher_functions.c: 391: }
  2188                           ;launcher_functions.c: 392: messageDoneFlag = 0;
  2189  0FFC  01EB               	clrf	_messageDoneFlag^(0+128)
  2190                           
  2191                           ;launcher_functions.c: 393: DecodeGPS();
  2192  0FFD  3181  211C         	fcall	_DecodeGPS
  2193  0FFF  0008               	return
  2194  1000                     __end_of_UpdateGPS:	
  2195                           
  2196                           	psect	text3
  2197  0E11                     __ptext3:	
  2198 ;; *************** function _ToggleSleepGPS *****************
  2199 ;; Defined at:
  2200 ;;		line 316 in file "launcher_functions.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;		None               void
  2207 ;; Registers used:
  2208 ;;		wreg
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2214 ;;      Params:         0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0
  2216 ;;      Temps:          0       3       0       0       0       0       0       0
  2217 ;;      Totals:         0       3       0       0       0       0       0       0
  2218 ;;Total ram usage:        3 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    2
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;;		_UpdateGPS
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function _ToggleSleepGPS
  2231  0E11                     _ToggleSleepGPS:	
  2232                           
  2233                           ;launcher_functions.c: 318: PORTAbits.RA6 = 0;
  2234                           
  2235                           ;incstack = 0
  2236                           ; Regs used in _ToggleSleepGPS: [wreg]
  2237  0E11  0020               	movlb	0	; select bank0
  2238  0E12  130C               	bcf	12,6	;volatile
  2239                           
  2240                           ;launcher_functions.c: 319: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2241  0E13  3015               	movlw	21
  2242  0E14  00A2               	movwf	??_ToggleSleepGPS+2
  2243  0E15  304B               	movlw	75
  2244  0E16  00A1               	movwf	??_ToggleSleepGPS+1
  2245  0E17  30D1               	movlw	209
  2246  0E18  00A0               	movwf	??_ToggleSleepGPS
  2247  0E19                     u2757:	
  2248  0E19  0BA0               	decfsz	??_ToggleSleepGPS,f
  2249  0E1A  2E19               	goto	u2757
  2250  0E1B  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2251  0E1C  2E19               	goto	u2757
  2252  0E1D  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2253  0E1E  2E19               	goto	u2757
  2254  0E1F  0000               	nop
  2255                           
  2256                           ;launcher_functions.c: 320: PORTAbits.RA6 = 1;
  2257  0E20  0020               	movlb	0	; select bank0
  2258  0E21  170C               	bsf	12,6	;volatile
  2259                           
  2260                           ;launcher_functions.c: 321: _delay((unsigned long)((100)*(16000000/4000.0)));
  2261  0E22  3003               	movlw	3
  2262  0E23  00A2               	movwf	??_ToggleSleepGPS+2
  2263  0E24  3008               	movlw	8
  2264  0E25  00A1               	movwf	??_ToggleSleepGPS+1
  2265  0E26  3078               	movlw	120
  2266  0E27  00A0               	movwf	??_ToggleSleepGPS
  2267  0E28                     u2767:	
  2268  0E28  0BA0               	decfsz	??_ToggleSleepGPS,f
  2269  0E29  2E28               	goto	u2767
  2270  0E2A  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2271  0E2B  2E28               	goto	u2767
  2272  0E2C  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2273  0E2D  2E28               	goto	u2767
  2274                           
  2275                           ;launcher_functions.c: 322: PORTAbits.RA6 = 0;
  2276  0E2E  0020               	movlb	0	; select bank0
  2277  0E2F  130C               	bcf	12,6	;volatile
  2278                           
  2279                           ;launcher_functions.c: 323: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2280  0E30  3015               	movlw	21
  2281  0E31  00A2               	movwf	??_ToggleSleepGPS+2
  2282  0E32  304B               	movlw	75
  2283  0E33  00A1               	movwf	??_ToggleSleepGPS+1
  2284  0E34  30D1               	movlw	209
  2285  0E35  00A0               	movwf	??_ToggleSleepGPS
  2286  0E36                     u2777:	
  2287  0E36  0BA0               	decfsz	??_ToggleSleepGPS,f
  2288  0E37  2E36               	goto	u2777
  2289  0E38  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2290  0E39  2E36               	goto	u2777
  2291  0E3A  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2292  0E3B  2E36               	goto	u2777
  2293  0E3C  0000               	nop
  2294  0E3D  0008               	return
  2295  0E3E                     __end_of_ToggleSleepGPS:	
  2296                           
  2297                           	psect	text4
  2298  067C                     __ptext4:	
  2299 ;; *************** function _SetupGPS *****************
  2300 ;; Defined at:
  2301 ;;		line 333 in file "launcher_functions.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  message        50    0[BANK1 ] unsigned char [50]
  2306 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  2307 ;;  MID             4   56[BANK1 ] unsigned char [4]
  2308 ;;  x               2   60[BANK1 ] int 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;		None               void
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2318 ;;      Params:         0       0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0      62       0       0       0       0       0
  2320 ;;      Temps:          0       3       0       0       0       0       0       0
  2321 ;;      Totals:         0       3      62       0       0       0       0       0
  2322 ;;Total ram usage:       65 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    4
  2325 ;; This function calls:
  2326 ;;		_sprintf
  2327 ;;		_uart_write_message
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;;		_UpdateGPS
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _SetupGPS
  2336  067C                     _SetupGPS:	
  2337                           
  2338                           ;launcher_functions.c: 335: int x;
  2339                           ;launcher_functions.c: 336: unsigned char startSequence[6] = "$PSRF";
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2343  067C  3063               	movlw	low SetupGPS@F4920
  2344  067D  0086               	movwf	6
  2345  067E  3001               	movlw	high SetupGPS@F4920
  2346  067F  0087               	movwf	7
  2347  0680  30D2               	movlw	low SetupGPS@startSequence
  2348  0681  0084               	movwf	4
  2349  0682  3000               	movlw	high SetupGPS@startSequence
  2350  0683  0085               	movwf	5
  2351  0684  3006               	movlw	6
  2352  0685  0020               	movlb	0	; select bank0
  2353  0686  00C1               	movwf	??_SetupGPS
  2354  0687                     u1960:	
  2355  0687  0016               	moviw fsr1++
  2356  0688  001A               	movwi fsr0++
  2357  0689  0BC1               	decfsz	??_SetupGPS,f
  2358  068A  2E87               	goto	u1960
  2359                           
  2360                           ;launcher_functions.c: 337: unsigned char MID[4] = "103";
  2361  068B  0022               	movlb	2	; select bank2
  2362  068C  086C               	movf	(SetupGPS@F4922+3)^(0+256),w
  2363  068D  0021               	movlb	1	; select bank1
  2364  068E  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  2365  068F  0022               	movlb	2	; select bank2
  2366  0690  086B               	movf	(SetupGPS@F4922+2)^(0+256),w
  2367  0691  0021               	movlb	1	; select bank1
  2368  0692  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  2369  0693  0022               	movlb	2	; select bank2
  2370  0694  086A               	movf	(SetupGPS@F4922+1)^(0+256),w
  2371  0695  0021               	movlb	1	; select bank1
  2372  0696  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  2373  0697  0022               	movlb	2	; select bank2
  2374  0698  0869               	movf	SetupGPS@F4922^(0+256),w
  2375  0699  0021               	movlb	1	; select bank1
  2376  069A  00D8               	movwf	SetupGPS@MID^(0+128)
  2377                           
  2378                           ;launcher_functions.c: 338: unsigned char message[50];
  2379                           ;launcher_functions.c: 341: for(x = 0; x < 6; x++)
  2380  069B  01DC               	clrf	SetupGPS@x^(0+128)
  2381  069C  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  2382  069D  085D               	movf	(SetupGPS@x+1)^(0+128),w
  2383  069E  3A80               	xorlw	128
  2384  069F  0020               	movlb	0	; select bank0
  2385  06A0  00C1               	movwf	??_SetupGPS
  2386  06A1  3080               	movlw	128
  2387  06A2  0241               	subwf	??_SetupGPS,w
  2388  06A3  1D03               	skipz
  2389  06A4  2EA8               	goto	u1975
  2390  06A5  3006               	movlw	6
  2391  06A6  0021               	movlb	1	; select bank1
  2392  06A7  025C               	subwf	SetupGPS@x^(0+128),w
  2393  06A8                     u1975:	
  2394  06A8  1803               	btfsc	3,0
  2395  06A9  2EEE               	goto	l2320
  2396  06AA                     l2310:	
  2397                           
  2398                           ;launcher_functions.c: 342: {
  2399                           ;launcher_functions.c: 343: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2400  06AA  3015               	movlw	21
  2401  06AB  0020               	movlb	0	; select bank0
  2402  06AC  00C3               	movwf	??_SetupGPS+2
  2403  06AD  304B               	movlw	75
  2404  06AE  00C2               	movwf	??_SetupGPS+1
  2405  06AF  30D1               	movlw	209
  2406  06B0  00C1               	movwf	??_SetupGPS
  2407  06B1                     u2787:	
  2408  06B1  0BC1               	decfsz	??_SetupGPS,f
  2409  06B2  2EB1               	goto	u2787
  2410  06B3  0BC2               	decfsz	??_SetupGPS+1,f
  2411  06B4  2EB1               	goto	u2787
  2412  06B5  0BC3               	decfsz	??_SetupGPS+2,f
  2413  06B6  2EB1               	goto	u2787
  2414  06B7  0000               	nop
  2415                           
  2416                           ;launcher_functions.c: 344: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  2417  06B8  3031               	movlw	low (STR_1| (0+32768))
  2418  06B9  0020               	movlb	0	; select bank0
  2419  06BA  00AE               	movwf	sprintf@f
  2420  06BB  3088               	movlw	high (STR_1| (0+32768))
  2421  06BC  00AF               	movwf	sprintf@f+1
  2422  06BD  30D2               	movlw	SetupGPS@startSequence& (0+255)
  2423  06BE  00C1               	movwf	??_SetupGPS
  2424  06BF  0841               	movf	??_SetupGPS,w
  2425  06C0  00B0               	movwf	?_sprintf+2
  2426  06C1  30D8               	movlw	SetupGPS@MID& (0+255)
  2427  06C2  00C2               	movwf	??_SetupGPS+1
  2428  06C3  0842               	movf	??_SetupGPS+1,w
  2429  06C4  00B1               	movwf	?_sprintf+3
  2430  06C5  0021               	movlb	1	; select bank1
  2431  06C6  085D               	movf	(SetupGPS@x+1)^(0+128),w
  2432  06C7  0020               	movlb	0	; select bank0
  2433  06C8  01B3               	clrf	?_sprintf+5
  2434  06C9  07B3               	addwf	?_sprintf+5,f
  2435  06CA  0021               	movlb	1	; select bank1
  2436  06CB  085C               	movf	SetupGPS@x^(0+128),w
  2437  06CC  0020               	movlb	0	; select bank0
  2438  06CD  01B2               	clrf	?_sprintf+4
  2439  06CE  07B2               	addwf	?_sprintf+4,f
  2440  06CF  30A0               	movlw	SetupGPS@message& (0+255)
  2441  06D0  3184  24C0  3186   	fcall	_sprintf
  2442                           
  2443                           ;launcher_functions.c: 345: uart_write_message(message, 22);
  2444  06D3  3016               	movlw	22
  2445  06D4  0020               	movlb	0	; select bank0
  2446  06D5  00A8               	movwf	uart_write_message@size
  2447  06D6  3000               	movlw	0
  2448  06D7  00A9               	movwf	uart_write_message@size+1
  2449  06D8  30A0               	movlw	SetupGPS@message& (0+255)
  2450  06D9  3187  2712  3186   	fcall	_uart_write_message
  2451  06DC  3001               	movlw	1
  2452  06DD  0021               	movlb	1	; select bank1
  2453  06DE  07DC               	addwf	SetupGPS@x^(0+128),f
  2454  06DF  3000               	movlw	0
  2455  06E0  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  2456  06E1  085D               	movf	(SetupGPS@x+1)^(0+128),w
  2457  06E2  3A80               	xorlw	128
  2458  06E3  0020               	movlb	0	; select bank0
  2459  06E4  00C1               	movwf	??_SetupGPS
  2460  06E5  3080               	movlw	128
  2461  06E6  0241               	subwf	??_SetupGPS,w
  2462  06E7  1D03               	skipz
  2463  06E8  2EEC               	goto	u1985
  2464  06E9  3006               	movlw	6
  2465  06EA  0021               	movlb	1	; select bank1
  2466  06EB  025C               	subwf	SetupGPS@x^(0+128),w
  2467  06EC                     u1985:	
  2468  06EC  1C03               	skipc
  2469  06ED  2EAA               	goto	l2310
  2470  06EE                     l2320:	
  2471                           
  2472                           ;launcher_functions.c: 346: }
  2473                           ;launcher_functions.c: 348: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2474  06EE  3015               	movlw	21
  2475  06EF  0020               	movlb	0	; select bank0
  2476  06F0  00C3               	movwf	??_SetupGPS+2
  2477  06F1  304B               	movlw	75
  2478  06F2  00C2               	movwf	??_SetupGPS+1
  2479  06F3  30D1               	movlw	209
  2480  06F4  00C1               	movwf	??_SetupGPS
  2481  06F5                     u2797:	
  2482  06F5  0BC1               	decfsz	??_SetupGPS,f
  2483  06F6  2EF5               	goto	u2797
  2484  06F7  0BC2               	decfsz	??_SetupGPS+1,f
  2485  06F8  2EF5               	goto	u2797
  2486  06F9  0BC3               	decfsz	??_SetupGPS+2,f
  2487  06FA  2EF5               	goto	u2797
  2488  06FB  0000               	nop
  2489                           
  2490                           ;launcher_functions.c: 354: sprintf(message, "%s104,40.441944,-86.9125,0,0,0,0,12,2*", s
      +                          tartSequence);
  2491  06FC  300A               	movlw	low (STR_2| (0+32768))
  2492  06FD  0020               	movlb	0	; select bank0
  2493  06FE  00AE               	movwf	sprintf@f
  2494  06FF  3088               	movlw	high (STR_2| (0+32768))
  2495  0700  00AF               	movwf	sprintf@f+1
  2496  0701  30D2               	movlw	SetupGPS@startSequence& (0+255)
  2497  0702  00C1               	movwf	??_SetupGPS
  2498  0703  0841               	movf	??_SetupGPS,w
  2499  0704  00B0               	movwf	?_sprintf+2
  2500  0705  30A0               	movlw	SetupGPS@message& (0+255)
  2501  0706  3184  24C0  3186   	fcall	_sprintf
  2502                           
  2503                           ;launcher_functions.c: 355: uart_write_message(message, 42);
  2504  0709  302A               	movlw	42
  2505  070A  0020               	movlb	0	; select bank0
  2506  070B  00A8               	movwf	uart_write_message@size
  2507  070C  3000               	movlw	0
  2508  070D  00A9               	movwf	uart_write_message@size+1
  2509  070E  30A0               	movlw	SetupGPS@message& (0+255)
  2510  070F  3187  2712         	fcall	_uart_write_message
  2511  0711  0008               	return
  2512  0712                     __end_of_SetupGPS:	
  2513                           
  2514                           	psect	text5
  2515  0712                     __ptext5:	
  2516 ;; *************** function _uart_write_message *****************
  2517 ;; Defined at:
  2518 ;;		line 289 in file "launcher_functions.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  data            1    wreg     PTR unsigned char 
  2521 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2522 ;;  size            2    8[BANK0 ] int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  data            1   22[BANK0 ] PTR unsigned char 
  2525 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2526 ;;  ascii_checks    2   20[BANK0 ] unsigned char [2]
  2527 ;;  x               2   17[BANK0 ] int 
  2528 ;;  checksum        1   19[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2538 ;;      Params:         0       2       0       0       0       0       0       0
  2539 ;;      Locals:         0      10       0       0       0       0       0       0
  2540 ;;      Temps:          0       3       0       0       0       0       0       0
  2541 ;;      Totals:         0      15       0       0       0       0       0       0
  2542 ;;Total ram usage:       15 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    3
  2545 ;; This function calls:
  2546 ;;		_compute_checksum
  2547 ;;		_uart_xmit
  2548 ;; This function is called by:
  2549 ;;		_SetupGPS
  2550 ;;		_UpdateGPS
  2551 ;;		_DisableGPS
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _uart_write_message
  2557  0712                     _uart_write_message:	
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2561                           ;uart_write_message@data stored from wreg
  2562  0712  0020               	movlb	0	; select bank0
  2563  0713  00B6               	movwf	uart_write_message@data
  2564                           
  2565                           ;launcher_functions.c: 291: int x;
  2566                           ;launcher_functions.c: 292: unsigned char checksum;
  2567                           ;launcher_functions.c: 293: unsigned char ascii_checksum[2];
  2568                           ;launcher_functions.c: 295: checksum = compute_checksum(data, size);
  2569  0714  0829               	movf	uart_write_message@size+1,w
  2570  0715  01A1               	clrf	compute_checksum@size+1
  2571  0716  07A1               	addwf	compute_checksum@size+1,f
  2572  0717  0828               	movf	uart_write_message@size,w
  2573  0718  01A0               	clrf	compute_checksum@size
  2574  0719  07A0               	addwf	compute_checksum@size,f
  2575  071A  0836               	movf	uart_write_message@data,w
  2576  071B  318E  26A4  3187   	fcall	_compute_checksum
  2577  071E  0020               	movlb	0	; select bank0
  2578  071F  00AA               	movwf	??_uart_write_message
  2579  0720  082A               	movf	??_uart_write_message,w
  2580  0721  00B3               	movwf	uart_write_message@checksum
  2581                           
  2582                           ;launcher_functions.c: 296: ascii_checksum[0] = checksum >> 4;
  2583  0722  0833               	movf	uart_write_message@checksum,w
  2584  0723  00AA               	movwf	??_uart_write_message
  2585  0724  3004               	movlw	4
  2586  0725                     u1655:	
  2587  0725  36AA               	lsrf	??_uart_write_message,f
  2588  0726  0B89               	decfsz	9,f
  2589  0727  2F25               	goto	u1655
  2590  0728  082A               	movf	??_uart_write_message,w
  2591  0729  00AB               	movwf	??_uart_write_message+1
  2592  072A  082B               	movf	??_uart_write_message+1,w
  2593  072B  00B4               	movwf	uart_write_message@ascii_checksum
  2594                           
  2595                           ;launcher_functions.c: 297: ascii_checksum[1] = checksum & 0x0F;
  2596  072C  0833               	movf	uart_write_message@checksum,w
  2597  072D  390F               	andlw	15
  2598  072E  00AA               	movwf	??_uart_write_message
  2599  072F  082A               	movf	??_uart_write_message,w
  2600  0730  00B5               	movwf	uart_write_message@ascii_checksum+1
  2601                           
  2602                           ;launcher_functions.c: 299: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  2603  0731  300A               	movlw	10
  2604  0732  0234               	subwf	uart_write_message@ascii_checksum,w
  2605  0733  1C03               	skipc
  2606  0734  2F37               	goto	l2112
  2607  0735  3037               	movlw	55
  2608  0736  2F38               	goto	L1
  2609  0737                     l2112:	
  2610  0737  3030               	movlw	48
  2611  0738                     L1:	
  2612  0738  00AD               	movwf	_uart_write_message$1376
  2613  0739  3000               	movlw	0
  2614  073A  00AE               	movwf	_uart_write_message$1376+1
  2615  073B  082D               	movf	_uart_write_message$1376,w
  2616  073C  00AA               	movwf	??_uart_write_message
  2617  073D  082A               	movf	??_uart_write_message,w
  2618  073E  07B4               	addwf	uart_write_message@ascii_checksum,f
  2619                           
  2620                           ;launcher_functions.c: 300: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  2621  073F  300A               	movlw	10
  2622  0740  0235               	subwf	uart_write_message@ascii_checksum+1,w
  2623  0741  1C03               	skipc
  2624  0742  2F45               	goto	l2120
  2625  0743  3037               	movlw	55
  2626  0744  2F46               	goto	L2
  2627  0745                     l2120:	
  2628  0745  3030               	movlw	48
  2629  0746                     L2:	
  2630  0746  00AF               	movwf	_uart_write_message$1377
  2631  0747  3000               	movlw	0
  2632  0748  00B0               	movwf	_uart_write_message$1377+1
  2633  0749  082F               	movf	_uart_write_message$1377,w
  2634  074A  00AA               	movwf	??_uart_write_message
  2635  074B  082A               	movf	??_uart_write_message,w
  2636  074C  07B5               	addwf	uart_write_message@ascii_checksum+1,f
  2637                           
  2638                           ;launcher_functions.c: 302: for(x=0; x<size-1; x++)
  2639  074D  01B1               	clrf	uart_write_message@x
  2640  074E  01B2               	clrf	uart_write_message@x+1
  2641  074F                     l2130:	
  2642  074F  0828               	movf	uart_write_message@size,w
  2643  0750  3EFF               	addlw	255
  2644  0751  00AA               	movwf	??_uart_write_message
  2645  0752  30FF               	movlw	255
  2646  0753  3D29               	addwfc	uart_write_message@size+1,w
  2647  0754  00AB               	movwf	??_uart_write_message+1
  2648  0755  0832               	movf	uart_write_message@x+1,w
  2649  0756  3A80               	xorlw	128
  2650  0757  00AC               	movwf	??_uart_write_message+2
  2651  0758  082B               	movf	??_uart_write_message+1,w
  2652  0759  3A80               	xorlw	128
  2653  075A  022C               	subwf	??_uart_write_message+2,w
  2654  075B  1D03               	skipz
  2655  075C  2F5F               	goto	u1685
  2656  075D  082A               	movf	??_uart_write_message,w
  2657  075E  0231               	subwf	uart_write_message@x,w
  2658  075F                     u1685:	
  2659  075F  1803               	btfsc	3,0
  2660  0760  2F72               	goto	l2132
  2661                           
  2662                           ;launcher_functions.c: 303: {
  2663                           ;launcher_functions.c: 304: uart_xmit(data[x]);
  2664  0761  0020               	movlb	0	; select bank0
  2665  0762  0831               	movf	uart_write_message@x,w
  2666  0763  0736               	addwf	uart_write_message@data,w
  2667  0764  00AA               	movwf	??_uart_write_message
  2668  0765  082A               	movf	??_uart_write_message,w
  2669  0766  0086               	movwf	6
  2670  0767  0187               	clrf	7
  2671  0768  0801               	movf	1,w
  2672  0769  318C  24A2  3187   	fcall	_uart_xmit
  2673  076C  3001               	movlw	1
  2674  076D  0020               	movlb	0	; select bank0
  2675  076E  07B1               	addwf	uart_write_message@x,f
  2676  076F  3000               	movlw	0
  2677  0770  3DB2               	addwfc	uart_write_message@x+1,f
  2678  0771  2F4F               	goto	l2130
  2679  0772                     l2132:	
  2680                           
  2681                           ;launcher_functions.c: 305: }
  2682                           ;launcher_functions.c: 306: uart_xmit(ascii_checksum[0]);
  2683  0772  0020               	movlb	0	; select bank0
  2684  0773  0834               	movf	uart_write_message@ascii_checksum,w
  2685  0774  318C  24A2  3187   	fcall	_uart_xmit
  2686                           
  2687                           ;launcher_functions.c: 307: uart_xmit(ascii_checksum[1]);
  2688  0777  0020               	movlb	0	; select bank0
  2689  0778  0835               	movf	uart_write_message@ascii_checksum+1,w
  2690  0779  318C  24A2  3187   	fcall	_uart_xmit
  2691                           
  2692                           ;launcher_functions.c: 309: uart_xmit(0x0D);
  2693  077C  300D               	movlw	13
  2694  077D  318C  24A2  3187   	fcall	_uart_xmit
  2695                           
  2696                           ;launcher_functions.c: 310: uart_xmit(0x0A);
  2697  0780  300A               	movlw	10
  2698  0781  318C  24A2  3187   	fcall	_uart_xmit
  2699  0784                     l356:	
  2700                           ;launcher_functions.c: 311: while(!TXSTAbits.TRMT);
  2701                           
  2702  0784  0023               	movlb	3	; select bank3
  2703  0785  189E               	btfsc	30,1	;volatile
  2704  0786  0008               	return
  2705  0787  2F84               	goto	l356
  2706  0788                     __end_of_uart_write_message:	
  2707                           
  2708                           	psect	text6
  2709  0CA2                     __ptext6:	
  2710 ;; *************** function _uart_xmit *****************
  2711 ;; Defined at:
  2712 ;;		line 281 in file "launcher_functions.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  mydata_byte     1    wreg     unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;		None               void
  2719 ;; Registers used:
  2720 ;;		wreg
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2726 ;;      Params:         0       0       0       0       0       0       0       0
  2727 ;;      Locals:         0       1       0       0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0
  2729 ;;      Totals:         0       1       0       0       0       0       0       0
  2730 ;;Total ram usage:        1 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    2
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_uart_write_message
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _uart_xmit
  2742  0CA2                     _uart_xmit:	
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _uart_xmit: [wreg]
  2746                           ;uart_xmit@mydata_byte stored from wreg
  2747  0CA2  0020               	movlb	0	; select bank0
  2748  0CA3  00A0               	movwf	uart_xmit@mydata_byte
  2749  0CA4                     l339:	
  2750                           ;launcher_functions.c: 284: while(!TXSTAbits.TRMT);
  2751                           
  2752  0CA4  0023               	movlb	3	; select bank3
  2753  0CA5  1C9E               	btfss	30,1	;volatile
  2754  0CA6  2CA4               	goto	l339
  2755                           
  2756                           ;launcher_functions.c: 285: TXREG = mydata_byte;
  2757  0CA7  0020               	movlb	0	; select bank0
  2758  0CA8  0820               	movf	uart_xmit@mydata_byte,w
  2759  0CA9  0023               	movlb	3	; select bank3
  2760  0CAA  009A               	movwf	26	;volatile
  2761  0CAB  0008               	return
  2762  0CAC                     __end_of_uart_xmit:	
  2763                           
  2764                           	psect	text7
  2765  0EA4                     __ptext7:	
  2766 ;; *************** function _compute_checksum *****************
  2767 ;; Defined at:
  2768 ;;		line 270 in file "launcher_functions.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  data            1    wreg     PTR unsigned char 
  2771 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2772 ;;  size            2    0[BANK0 ] int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  data            1    5[BANK0 ] PTR unsigned char 
  2775 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2776 ;;  x               2    6[BANK0 ] int 
  2777 ;;  checksum        1    4[BANK0 ] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      unsigned char 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2787 ;;      Params:         0       2       0       0       0       0       0       0
  2788 ;;      Locals:         0       4       0       0       0       0       0       0
  2789 ;;      Temps:          0       2       0       0       0       0       0       0
  2790 ;;      Totals:         0       8       0       0       0       0       0       0
  2791 ;;Total ram usage:        8 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    2
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_uart_write_message
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _compute_checksum
  2803  0EA4                     _compute_checksum:	
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  2807                           ;compute_checksum@data stored from wreg
  2808  0EA4  0020               	movlb	0	; select bank0
  2809  0EA5  00A5               	movwf	compute_checksum@data
  2810                           
  2811                           ;launcher_functions.c: 272: unsigned char checksum = 0;
  2812  0EA6  01A4               	clrf	compute_checksum@checksum
  2813                           
  2814                           ;launcher_functions.c: 273: int x;
  2815                           ;launcher_functions.c: 274: for(x=0; x<size; x++)
  2816  0EA7  01A6               	clrf	compute_checksum@x
  2817  0EA8  01A7               	clrf	compute_checksum@x+1
  2818  0EA9                     l2006:	
  2819  0EA9  0827               	movf	compute_checksum@x+1,w
  2820  0EAA  3A80               	xorlw	128
  2821  0EAB  00A2               	movwf	??_compute_checksum
  2822  0EAC  0821               	movf	compute_checksum@size+1,w
  2823  0EAD  3A80               	xorlw	128
  2824  0EAE  0222               	subwf	??_compute_checksum,w
  2825  0EAF  1D03               	skipz
  2826  0EB0  2EB3               	goto	u1465
  2827  0EB1  0820               	movf	compute_checksum@size,w
  2828  0EB2  0226               	subwf	compute_checksum@x,w
  2829  0EB3                     u1465:	
  2830  0EB3  1803               	btfsc	3,0
  2831  0EB4  2EE3               	goto	l2008
  2832                           
  2833                           ;launcher_functions.c: 275: {
  2834                           ;launcher_functions.c: 276: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  2835  0EB5  0020               	movlb	0	; select bank0
  2836  0EB6  0826               	movf	compute_checksum@x,w
  2837  0EB7  0725               	addwf	compute_checksum@data,w
  2838  0EB8  00A2               	movwf	??_compute_checksum
  2839  0EB9  0822               	movf	??_compute_checksum,w
  2840  0EBA  0086               	movwf	6
  2841  0EBB  0187               	clrf	7
  2842  0EBC  0801               	movf	1,w
  2843  0EBD  3A24               	xorlw	36
  2844  0EBE  1903               	skipnz
  2845  0EBF  2EDE               	goto	l2004
  2846  0EC0  0826               	movf	compute_checksum@x,w
  2847  0EC1  0725               	addwf	compute_checksum@data,w
  2848  0EC2  00A2               	movwf	??_compute_checksum
  2849  0EC3  0822               	movf	??_compute_checksum,w
  2850  0EC4  0086               	movwf	6
  2851  0EC5  0187               	clrf	7
  2852  0EC6  0801               	movf	1,w
  2853  0EC7  3A2A               	xorlw	42
  2854  0EC8  1903               	skipnz
  2855  0EC9  2EDE               	goto	l2004
  2856  0ECA  0826               	movf	compute_checksum@x,w
  2857  0ECB  0725               	addwf	compute_checksum@data,w
  2858  0ECC  00A2               	movwf	??_compute_checksum
  2859  0ECD  0822               	movf	??_compute_checksum,w
  2860  0ECE  0086               	movwf	6
  2861  0ECF  0187               	clrf	7
  2862  0ED0  0801               	movf	1,w
  2863  0ED1  3A21               	xorlw	33
  2864  0ED2  1903               	skipnz
  2865  0ED3  2EDE               	goto	l2004
  2866                           
  2867                           ;launcher_functions.c: 277: checksum ^= data[x];
  2868  0ED4  0826               	movf	compute_checksum@x,w
  2869  0ED5  0725               	addwf	compute_checksum@data,w
  2870  0ED6  00A2               	movwf	??_compute_checksum
  2871  0ED7  0822               	movf	??_compute_checksum,w
  2872  0ED8  0086               	movwf	6
  2873  0ED9  0187               	clrf	7
  2874  0EDA  0801               	movf	1,w
  2875  0EDB  00A3               	movwf	??_compute_checksum+1
  2876  0EDC  0823               	movf	??_compute_checksum+1,w
  2877  0EDD  06A4               	xorwf	compute_checksum@checksum,f
  2878  0EDE                     l2004:	
  2879  0EDE  3001               	movlw	1
  2880  0EDF  07A6               	addwf	compute_checksum@x,f
  2881  0EE0  3000               	movlw	0
  2882  0EE1  3DA7               	addwfc	compute_checksum@x+1,f
  2883  0EE2  2EA9               	goto	l2006
  2884  0EE3                     l2008:	
  2885                           
  2886                           ;launcher_functions.c: 278: }
  2887                           ;launcher_functions.c: 279: return checksum;
  2888  0EE3  0020               	movlb	0	; select bank0
  2889  0EE4  0824               	movf	compute_checksum@checksum,w
  2890  0EE5  0008               	return
  2891  0EE6                     __end_of_compute_checksum:	
  2892                           
  2893                           	psect	text8
  2894  04C0                     __ptext8:	
  2895 ;; *************** function _sprintf *****************
  2896 ;; Defined at:
  2897 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  sp              1    wreg     PTR unsigned char 
  2900 ;;		 -> SetupGPS@message(50), 
  2901 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2902 ;;		 -> STR_2(39), STR_1(19), 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  2905 ;;		 -> SetupGPS@message(50), 
  2906 ;;  _val            4   28[BANK0 ] struct .
  2907 ;;  c               1   32[BANK0 ] char 
  2908 ;;  ap              1   26[BANK0 ] PTR void [1]
  2909 ;;		 -> ?_sprintf(2), 
  2910 ;;  prec            1   25[BANK0 ] char 
  2911 ;;  flag            1   24[BANK0 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   14[BANK0 ] int 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2921 ;;      Params:         0       6       0       0       0       0       0       0
  2922 ;;      Locals:         0       9       0       0       0       0       0       0
  2923 ;;      Temps:          0       4       0       0       0       0       0       0
  2924 ;;      Totals:         0      19       0       0       0       0       0       0
  2925 ;;Total ram usage:       19 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    3
  2928 ;; This function calls:
  2929 ;;		___lwdiv
  2930 ;;		___lwmod
  2931 ;; This function is called by:
  2932 ;;		_SetupGPS
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _sprintf
  2938  04C0                     _sprintf:	
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2942                           ;sprintf@sp stored from wreg
  2943  04C0  0020               	movlb	0	; select bank0
  2944  04C1  00BB               	movwf	sprintf@sp
  2945                           
  2946                           ;doprnt.c: 494: va_list ap;
  2947                           ;doprnt.c: 499: signed char c;
  2948                           ;doprnt.c: 506: signed char prec;
  2949                           ;doprnt.c: 508: unsigned char flag;
  2950                           ;doprnt.c: 527: union {
  2951                           ;doprnt.c: 528: unsigned int _val;
  2952                           ;doprnt.c: 529: struct {
  2953                           ;doprnt.c: 530: const char * _cp;
  2954                           ;doprnt.c: 531: unsigned _len;
  2955                           ;doprnt.c: 532: } _str;
  2956                           ;doprnt.c: 533: } _val;
  2957                           ;doprnt.c: 542: *ap = __va_start();
  2958  04C2  3030               	movlw	(?_sprintf+2)& (0+255)
  2959  04C3  00B4               	movwf	??_sprintf
  2960  04C4  0834               	movf	??_sprintf,w
  2961  04C5  00BA               	movwf	sprintf@ap
  2962  04C6                     l2202:	
  2963                           ;doprnt.c: 545: while(c = *f++) {
  2964                           
  2965  04C6  082F               	movf	sprintf@f+1,w
  2966  04C7  00B5               	movwf	??_sprintf+1
  2967  04C8  082E               	movf	sprintf@f,w
  2968  04C9  00B4               	movwf	??_sprintf
  2969  04CA  0AAE               	incf	sprintf@f,f
  2970  04CB  1903               	skipnz
  2971  04CC  0AAF               	incf	sprintf@f+1,f
  2972  04CD  0834               	movf	??_sprintf,w
  2973  04CE  0084               	movwf	4
  2974  04CF  0835               	movf	??_sprintf+1,w
  2975  04D0  0085               	movwf	5
  2976  04D1  0800               	movf	0,w	;code access
  2977  04D2  00B6               	movwf	??_sprintf+2
  2978  04D3  0836               	movf	??_sprintf+2,w
  2979  04D4  00C0               	movwf	sprintf@c
  2980  04D5  08C0               	movf	sprintf@c,f
  2981  04D6  1903               	btfsc	3,2
  2982  04D7  2DC1               	goto	l2204
  2983                           
  2984                           ;doprnt.c: 547: if(c != '%')
  2985  04D8  0840               	movf	sprintf@c,w
  2986  04D9  3A25               	xorlw	37
  2987  04DA  1903               	skipnz
  2988  04DB  2CE8               	goto	l2142
  2989                           
  2990                           ;doprnt.c: 549: {
  2991                           ;doprnt.c: 550: ((*sp++ = (c)));
  2992  04DC  0840               	movf	sprintf@c,w
  2993  04DD  00B4               	movwf	??_sprintf
  2994  04DE  083B               	movf	sprintf@sp,w
  2995  04DF  0086               	movwf	6
  2996  04E0  0187               	clrf	7
  2997  04E1  0834               	movf	??_sprintf,w
  2998  04E2  0081               	movwf	1
  2999  04E3  3001               	movlw	1
  3000  04E4  00B4               	movwf	??_sprintf
  3001  04E5  0834               	movf	??_sprintf,w
  3002  04E6  07BB               	addwf	sprintf@sp,f
  3003                           
  3004                           ;doprnt.c: 551: continue;
  3005  04E7  2CC6               	goto	l2202
  3006  04E8                     l2142:	
  3007                           
  3008                           ;doprnt.c: 552: }
  3009                           ;doprnt.c: 557: flag = 0;
  3010  04E8  01B8               	clrf	sprintf@flag
  3011                           
  3012                           ;doprnt.c: 644: switch(c = *f++) {
  3013  04E9  2D19               	goto	l2162
  3014  04EA                     l2144:	
  3015                           ;doprnt.c: 737: case 's':
  3016                           
  3017                           ;doprnt.c: 707: case 'i':
  3018                           ;doprnt.c: 708: break;
  3019                           
  3020                           ;doprnt.c: 706: case 'd':
  3021                           
  3022                           ;doprnt.c: 647: goto alldone;
  3023                           
  3024                           ;doprnt.c: 646: case 0:
  3025                           
  3026                           
  3027                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3028  04EA  083A               	movf	sprintf@ap,w
  3029  04EB  0086               	movwf	6
  3030  04EC  0187               	clrf	7
  3031  04ED  0801               	movf	1,w
  3032  04EE  00BC               	movwf	sprintf@_val
  3033  04EF  3000               	movlw	0
  3034  04F0  00BD               	movwf	sprintf@_val+1
  3035  04F1  3001               	movlw	1
  3036  04F2  00B4               	movwf	??_sprintf
  3037  04F3  0834               	movf	??_sprintf,w
  3038  04F4  07BA               	addwf	sprintf@ap,f
  3039                           
  3040                           ;doprnt.c: 749: if(!_val._str._cp)
  3041  04F5  083D               	movf	sprintf@_val+1,w
  3042  04F6  043C               	iorwf	sprintf@_val,w
  3043  04F7  1D03               	skipz
  3044  04F8  2CFD               	goto	l2158
  3045                           
  3046                           ;doprnt.c: 750: _val._str._cp = "(null)";
  3047  04F9  3044               	movlw	low (STR_3| (0+32768))
  3048  04FA  00BC               	movwf	sprintf@_val
  3049  04FB  3088               	movlw	high (STR_3| (0+32768))
  3050  04FC  00BD               	movwf	sprintf@_val+1
  3051  04FD                     l2158:	
  3052                           ;doprnt.c: 786: while(*_val._str._cp)
  3053                           
  3054  04FD  083C               	movf	sprintf@_val,w
  3055  04FE  0084               	movwf	4
  3056  04FF  083D               	movf	sprintf@_val+1,w
  3057  0500  0085               	movwf	5
  3058  0501  0800               	movf	0,w	;code access
  3059  0502  3800               	iorlw	0
  3060  0503  1903               	btfsc	3,2
  3061  0504  2CC6               	goto	l2202
  3062                           
  3063                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  3064  0505  083C               	movf	sprintf@_val,w
  3065  0506  0084               	movwf	4
  3066  0507  083D               	movf	sprintf@_val+1,w
  3067  0508  0085               	movwf	5
  3068  0509  0800               	movf	0,w	;code access
  3069  050A  00B4               	movwf	??_sprintf
  3070  050B  083B               	movf	sprintf@sp,w
  3071  050C  0086               	movwf	6
  3072  050D  0187               	clrf	7
  3073  050E  0834               	movf	??_sprintf,w
  3074  050F  0081               	movwf	1
  3075  0510  3001               	movlw	1
  3076  0511  07BC               	addwf	sprintf@_val,f
  3077  0512  3000               	movlw	0
  3078  0513  3DBD               	addwfc	sprintf@_val+1,f
  3079  0514  3001               	movlw	1
  3080  0515  00B4               	movwf	??_sprintf
  3081  0516  0834               	movf	??_sprintf,w
  3082  0517  07BB               	addwf	sprintf@sp,f
  3083  0518  2CFD               	goto	l2158
  3084  0519                     l2162:	
  3085                           ;doprnt.c: 831: }
  3086                           
  3087                           ;doprnt.c: 822: continue;
  3088                           
  3089                           ;doprnt.c: 811: default:
  3090                           
  3091                           ;doprnt.c: 788: continue;
  3092                           
  3093  0519  082F               	movf	sprintf@f+1,w
  3094  051A  00B5               	movwf	??_sprintf+1
  3095  051B  082E               	movf	sprintf@f,w
  3096  051C  00B4               	movwf	??_sprintf
  3097  051D  0AAE               	incf	sprintf@f,f
  3098  051E  1903               	skipnz
  3099  051F  0AAF               	incf	sprintf@f+1,f
  3100  0520  0834               	movf	??_sprintf,w
  3101  0521  0084               	movwf	4
  3102  0522  0835               	movf	??_sprintf+1,w
  3103  0523  0085               	movwf	5
  3104  0524  0800               	movf	0,w	;code access
  3105  0525  00C0               	movwf	sprintf@c
  3106                           
  3107                           ; Switch size 1, requested type "space"
  3108                           ; Number of cases is 4, Range of values is 0 to 115
  3109                           ; switch strategies available:
  3110                           ; Name         Instructions Cycles
  3111                           ; simple_byte           13     7 (average)
  3112                           ; direct_byte          238     6 (fixed)
  3113                           ; jumptable            260     6 (fixed)
  3114                           ;	Chosen strategy is simple_byte
  3115  0526  3A00               	xorlw	0	; case 0
  3116  0527  1903               	skipnz
  3117  0528  2DC1               	goto	l2204
  3118  0529  3A64               	xorlw	100	; case 100
  3119  052A  1903               	skipnz
  3120  052B  2D33               	goto	l2164
  3121  052C  3A0D               	xorlw	13	; case 105
  3122  052D  1903               	skipnz
  3123  052E  2D33               	goto	l2164
  3124  052F  3A1A               	xorlw	26	; case 115
  3125  0530  1903               	skipnz
  3126  0531  2CEA               	goto	l2144
  3127  0532  2CC6               	goto	l2202
  3128  0533                     l2164:	
  3129                           
  3130                           ;doprnt.c: 1262: {
  3131                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3132  0533  083A               	movf	sprintf@ap,w
  3133  0534  0086               	movwf	6
  3134  0535  0187               	clrf	7
  3135  0536  3F40               	moviw [0]fsr1
  3136  0537  00BC               	movwf	sprintf@_val
  3137  0538  3F41               	moviw [1]fsr1
  3138  0539  00BD               	movwf	sprintf@_val+1
  3139  053A  3002               	movlw	2
  3140  053B  00B4               	movwf	??_sprintf
  3141  053C  0834               	movf	??_sprintf,w
  3142  053D  07BA               	addwf	sprintf@ap,f
  3143                           
  3144                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3145  053E  1FBD               	btfss	sprintf@_val+1,7
  3146  053F  2D49               	goto	l2174
  3147                           
  3148                           ;doprnt.c: 1271: flag |= 0x03;
  3149  0540  3003               	movlw	3
  3150  0541  00B4               	movwf	??_sprintf
  3151  0542  0834               	movf	??_sprintf,w
  3152  0543  04B8               	iorwf	sprintf@flag,f
  3153                           
  3154                           ;doprnt.c: 1272: _val._val = -_val._val;
  3155  0544  09BC               	comf	sprintf@_val,f
  3156  0545  09BD               	comf	sprintf@_val+1,f
  3157  0546  0ABC               	incf	sprintf@_val,f
  3158  0547  1903               	skipnz
  3159  0548  0ABD               	incf	sprintf@_val+1,f
  3160  0549                     l2174:	
  3161                           
  3162                           ;doprnt.c: 1273: }
  3163                           ;doprnt.c: 1275: }
  3164                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3165  0549  01C0               	clrf	sprintf@c
  3166  054A  0AC0               	incf	sprintf@c,f
  3167  054B  0840               	movf	sprintf@c,w
  3168  054C  3A05               	xorlw	5
  3169  054D  1903               	btfsc	3,2
  3170  054E  2D6E               	goto	l2186
  3171  054F                     l2178:	
  3172                           
  3173                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3174  054F  0840               	movf	sprintf@c,w
  3175  0550  00B4               	movwf	??_sprintf
  3176  0551  01B5               	clrf	??_sprintf+1
  3177  0552  35B4               	lslf	??_sprintf,f
  3178  0553  0DB5               	rlf	??_sprintf+1,f
  3179  0554  3000               	movlw	low (_dpowers| (0+32768))
  3180  0555  0734               	addwf	??_sprintf,w
  3181  0556  0084               	movwf	4
  3182  0557  3088               	movlw	high (_dpowers| (0+32768))
  3183  0558  3D35               	addwfc	??_sprintf+1,w
  3184  0559  0085               	movwf	5
  3185  055A  3F00               	moviw [0]fsr0
  3186  055B  00B6               	movwf	??_sprintf+2
  3187  055C  3F01               	moviw [1]fsr0
  3188  055D  00B7               	movwf	??_sprintf+3
  3189  055E  0837               	movf	??_sprintf+3,w
  3190  055F  023D               	subwf	sprintf@_val+1,w
  3191  0560  1D03               	skipz
  3192  0561  2D64               	goto	u1755
  3193  0562  0836               	movf	??_sprintf+2,w
  3194  0563  023C               	subwf	sprintf@_val,w
  3195  0564                     u1755:	
  3196  0564  1C03               	btfss	3,0
  3197  0565  2D6E               	goto	l2186
  3198                           
  3199                           ;doprnt.c: 1316: break;
  3200  0566  3001               	movlw	1
  3201  0567  00B4               	movwf	??_sprintf
  3202  0568  0834               	movf	??_sprintf,w
  3203  0569  07C0               	addwf	sprintf@c,f
  3204  056A  0840               	movf	sprintf@c,w
  3205  056B  3A05               	xorlw	5
  3206  056C  1D03               	skipz
  3207  056D  2D4F               	goto	l2178
  3208  056E                     l2186:	
  3209                           
  3210                           ;doprnt.c: 1431: {
  3211                           ;doprnt.c: 1447: if(flag & 0x03)
  3212  056E  0838               	movf	sprintf@flag,w
  3213  056F  3903               	andlw	3
  3214  0570  1903               	btfsc	3,2
  3215  0571  2D7D               	goto	l2192
  3216                           
  3217                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3218  0572  302D               	movlw	45
  3219  0573  00B4               	movwf	??_sprintf
  3220  0574  083B               	movf	sprintf@sp,w
  3221  0575  0086               	movwf	6
  3222  0576  0187               	clrf	7
  3223  0577  0834               	movf	??_sprintf,w
  3224  0578  0081               	movwf	1
  3225  0579  3001               	movlw	1
  3226  057A  00B4               	movwf	??_sprintf
  3227  057B  0834               	movf	??_sprintf,w
  3228  057C  07BB               	addwf	sprintf@sp,f
  3229  057D                     l2192:	
  3230                           
  3231                           ;doprnt.c: 1478: }
  3232                           ;doprnt.c: 1481: prec = c;
  3233  057D  0840               	movf	sprintf@c,w
  3234  057E  00B4               	movwf	??_sprintf
  3235  057F  0834               	movf	??_sprintf,w
  3236  0580  00B9               	movwf	sprintf@prec
  3237  0581                     l2200:	
  3238                           ;doprnt.c: 1483: while(prec--) {
  3239                           
  3240  0581  30FF               	movlw	-1
  3241  0582  00B4               	movwf	??_sprintf
  3242  0583  0834               	movf	??_sprintf,w
  3243  0584  07B9               	addwf	sprintf@prec,f
  3244  0585  0839               	movf	sprintf@prec,w
  3245  0586  3AFF               	xorlw	255
  3246  0587  1903               	btfsc	3,2
  3247  0588  2CC6               	goto	l2202
  3248                           
  3249                           ;doprnt.c: 1487: {
  3250                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3251  0589  300A               	movlw	10
  3252  058A  00A8               	movwf	___lwmod@divisor
  3253  058B  3000               	movlw	0
  3254  058C  00A9               	movwf	___lwmod@divisor+1
  3255  058D  0839               	movf	sprintf@prec,w
  3256  058E  00B4               	movwf	??_sprintf
  3257  058F  01B5               	clrf	??_sprintf+1
  3258  0590  35B4               	lslf	??_sprintf,f
  3259  0591  0DB5               	rlf	??_sprintf+1,f
  3260  0592  3000               	movlw	low (_dpowers| (0+32768))
  3261  0593  0734               	addwf	??_sprintf,w
  3262  0594  0084               	movwf	4
  3263  0595  3088               	movlw	high (_dpowers| (0+32768))
  3264  0596  3D35               	addwfc	??_sprintf+1,w
  3265  0597  0085               	movwf	5
  3266  0598  3F00               	moviw [0]fsr0
  3267  0599  00A0               	movwf	___lwdiv@divisor
  3268  059A  3F01               	moviw [1]fsr0
  3269  059B  00A1               	movwf	___lwdiv@divisor+1
  3270  059C  083D               	movf	sprintf@_val+1,w
  3271  059D  01A3               	clrf	___lwdiv@dividend+1
  3272  059E  07A3               	addwf	___lwdiv@dividend+1,f
  3273  059F  083C               	movf	sprintf@_val,w
  3274  05A0  01A2               	clrf	___lwdiv@dividend
  3275  05A1  07A2               	addwf	___lwdiv@dividend,f
  3276  05A2  318E  266D  3184   	fcall	___lwdiv
  3277  05A5  0020               	movlb	0	; select bank0
  3278  05A6  0821               	movf	?___lwdiv+1,w
  3279  05A7  01AB               	clrf	___lwmod@dividend+1
  3280  05A8  07AB               	addwf	___lwmod@dividend+1,f
  3281  05A9  0820               	movf	?___lwdiv,w
  3282  05AA  01AA               	clrf	___lwmod@dividend
  3283  05AB  07AA               	addwf	___lwmod@dividend,f
  3284  05AC  318E  263E  3184   	fcall	___lwmod
  3285  05AF  0020               	movlb	0	; select bank0
  3286  05B0  0828               	movf	?___lwmod,w
  3287  05B1  3E30               	addlw	48
  3288  05B2  00B6               	movwf	??_sprintf+2
  3289  05B3  0836               	movf	??_sprintf+2,w
  3290  05B4  00C0               	movwf	sprintf@c
  3291                           
  3292                           ;doprnt.c: 1532: }
  3293                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3294  05B5  0840               	movf	sprintf@c,w
  3295  05B6  00B4               	movwf	??_sprintf
  3296  05B7  083B               	movf	sprintf@sp,w
  3297  05B8  0086               	movwf	6
  3298  05B9  0187               	clrf	7
  3299  05BA  0834               	movf	??_sprintf,w
  3300  05BB  0081               	movwf	1
  3301  05BC  3001               	movlw	1
  3302  05BD  00B4               	movwf	??_sprintf
  3303  05BE  0834               	movf	??_sprintf,w
  3304  05BF  07BB               	addwf	sprintf@sp,f
  3305  05C0  2D81               	goto	l2200
  3306  05C1                     l2204:	
  3307                           ;doprnt.c: 1534: }
  3308                           ;doprnt.c: 1542: }
  3309                           ;doprnt.c: 1544: alldone:
  3310                           
  3311                           
  3312                           ;doprnt.c: 1547: *sp = 0;
  3313  05C1  083B               	movf	sprintf@sp,w
  3314  05C2  0086               	movwf	6
  3315  05C3  0187               	clrf	7
  3316  05C4  0181               	clrf	1
  3317  05C5  0008               	return
  3318  05C6                     __end_of_sprintf:	
  3319                           ;doprnt.c: 1549: return 0;
  3320                           ;	Return value of _sprintf is never used
  3321                           
  3322                           
  3323                           	psect	text9
  3324  0E3E                     __ptext9:	
  3325 ;; *************** function ___lwmod *****************
  3326 ;; Defined at:
  3327 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  divisor         2    8[BANK0 ] unsigned int 
  3330 ;;  dividend        2   10[BANK0 ] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  counter         1   13[BANK0 ] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    8[BANK0 ] unsigned int 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3342 ;;      Params:         0       4       0       0       0       0       0       0
  3343 ;;      Locals:         0       1       0       0       0       0       0       0
  3344 ;;      Temps:          0       1       0       0       0       0       0       0
  3345 ;;      Totals:         0       6       0       0       0       0       0       0
  3346 ;;Total ram usage:        6 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    2
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_sprintf
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function ___lwmod
  3358  0E3E                     ___lwmod:	
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3362  0E3E  0020               	movlb	0	; select bank0
  3363  0E3F  0829               	movf	___lwmod@divisor+1,w
  3364  0E40  0428               	iorwf	___lwmod@divisor,w
  3365  0E41  1903               	skipnz
  3366  0E42  2E66               	goto	l2060
  3367  0E43  01AD               	clrf	___lwmod@counter
  3368  0E44  0AAD               	incf	___lwmod@counter,f
  3369  0E45                     l2050:	
  3370  0E45  1BA9               	btfsc	___lwmod@divisor+1,7
  3371  0E46  2E51               	goto	l2052
  3372  0E47  3001               	movlw	1
  3373  0E48                     u1565:	
  3374  0E48  35A8               	lslf	___lwmod@divisor,f
  3375  0E49  0DA9               	rlf	___lwmod@divisor+1,f
  3376  0E4A  0B89               	decfsz	9,f
  3377  0E4B  2E48               	goto	u1565
  3378  0E4C  3001               	movlw	1
  3379  0E4D  00AC               	movwf	??___lwmod
  3380  0E4E  082C               	movf	??___lwmod,w
  3381  0E4F  07AD               	addwf	___lwmod@counter,f
  3382  0E50  2E45               	goto	l2050
  3383  0E51                     l2052:	
  3384  0E51  0829               	movf	___lwmod@divisor+1,w
  3385  0E52  022B               	subwf	___lwmod@dividend+1,w
  3386  0E53  1D03               	skipz
  3387  0E54  2E57               	goto	u1585
  3388  0E55  0828               	movf	___lwmod@divisor,w
  3389  0E56  022A               	subwf	___lwmod@dividend,w
  3390  0E57                     u1585:	
  3391  0E57  1C03               	skipc
  3392  0E58  2E5D               	goto	l2056
  3393  0E59  0828               	movf	___lwmod@divisor,w
  3394  0E5A  02AA               	subwf	___lwmod@dividend,f
  3395  0E5B  0829               	movf	___lwmod@divisor+1,w
  3396  0E5C  3BAB               	subwfb	___lwmod@dividend+1,f
  3397  0E5D                     l2056:	
  3398  0E5D  3001               	movlw	1
  3399  0E5E                     u1595:	
  3400  0E5E  36A9               	lsrf	___lwmod@divisor+1,f
  3401  0E5F  0CA8               	rrf	___lwmod@divisor,f
  3402  0E60  0B89               	decfsz	9,f
  3403  0E61  2E5E               	goto	u1595
  3404  0E62  3001               	movlw	1
  3405  0E63  02AD               	subwf	___lwmod@counter,f
  3406  0E64  1D03               	btfss	3,2
  3407  0E65  2E51               	goto	l2052
  3408  0E66                     l2060:	
  3409  0E66  082B               	movf	___lwmod@dividend+1,w
  3410  0E67  01A9               	clrf	?___lwmod+1
  3411  0E68  07A9               	addwf	?___lwmod+1,f
  3412  0E69  082A               	movf	___lwmod@dividend,w
  3413  0E6A  01A8               	clrf	?___lwmod
  3414  0E6B  07A8               	addwf	?___lwmod,f
  3415  0E6C  0008               	return
  3416  0E6D                     __end_of___lwmod:	
  3417                           
  3418                           	psect	text10
  3419  0E6D                     __ptext10:	
  3420 ;; *************** function ___lwdiv *****************
  3421 ;; Defined at:
  3422 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  divisor         2    0[BANK0 ] unsigned int 
  3425 ;;  dividend        2    2[BANK0 ] unsigned int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  quotient        2    5[BANK0 ] unsigned int 
  3428 ;;  counter         1    7[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  2    0[BANK0 ] unsigned int 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3438 ;;      Params:         0       4       0       0       0       0       0       0
  3439 ;;      Locals:         0       3       0       0       0       0       0       0
  3440 ;;      Temps:          0       1       0       0       0       0       0       0
  3441 ;;      Totals:         0       8       0       0       0       0       0       0
  3442 ;;Total ram usage:        8 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    2
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_sprintf
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function ___lwdiv
  3454  0E6D                     ___lwdiv:	
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3458  0E6D  0020               	movlb	0	; select bank0
  3459  0E6E  01A5               	clrf	___lwdiv@quotient
  3460  0E6F  01A6               	clrf	___lwdiv@quotient+1
  3461  0E70  0821               	movf	___lwdiv@divisor+1,w
  3462  0E71  0420               	iorwf	___lwdiv@divisor,w
  3463  0E72  1903               	skipnz
  3464  0E73  2E9D               	goto	l2038
  3465  0E74  01A7               	clrf	___lwdiv@counter
  3466  0E75  0AA7               	incf	___lwdiv@counter,f
  3467  0E76                     l2026:	
  3468  0E76  1BA1               	btfsc	___lwdiv@divisor+1,7
  3469  0E77  2E82               	goto	l2028
  3470  0E78  3001               	movlw	1
  3471  0E79                     u1495:	
  3472  0E79  35A0               	lslf	___lwdiv@divisor,f
  3473  0E7A  0DA1               	rlf	___lwdiv@divisor+1,f
  3474  0E7B  0B89               	decfsz	9,f
  3475  0E7C  2E79               	goto	u1495
  3476  0E7D  3001               	movlw	1
  3477  0E7E  00A4               	movwf	??___lwdiv
  3478  0E7F  0824               	movf	??___lwdiv,w
  3479  0E80  07A7               	addwf	___lwdiv@counter,f
  3480  0E81  2E76               	goto	l2026
  3481  0E82                     l2028:	
  3482  0E82  3001               	movlw	1
  3483  0E83                     u1515:	
  3484  0E83  35A5               	lslf	___lwdiv@quotient,f
  3485  0E84  0DA6               	rlf	___lwdiv@quotient+1,f
  3486  0E85  0B89               	decfsz	9,f
  3487  0E86  2E83               	goto	u1515
  3488  0E87  0821               	movf	___lwdiv@divisor+1,w
  3489  0E88  0223               	subwf	___lwdiv@dividend+1,w
  3490  0E89  1D03               	skipz
  3491  0E8A  2E8D               	goto	u1525
  3492  0E8B  0820               	movf	___lwdiv@divisor,w
  3493  0E8C  0222               	subwf	___lwdiv@dividend,w
  3494  0E8D                     u1525:	
  3495  0E8D  1C03               	skipc
  3496  0E8E  2E94               	goto	l2034
  3497  0E8F  0820               	movf	___lwdiv@divisor,w
  3498  0E90  02A2               	subwf	___lwdiv@dividend,f
  3499  0E91  0821               	movf	___lwdiv@divisor+1,w
  3500  0E92  3BA3               	subwfb	___lwdiv@dividend+1,f
  3501  0E93  1425               	bsf	___lwdiv@quotient,0
  3502  0E94                     l2034:	
  3503  0E94  3001               	movlw	1
  3504  0E95                     u1535:	
  3505  0E95  36A1               	lsrf	___lwdiv@divisor+1,f
  3506  0E96  0CA0               	rrf	___lwdiv@divisor,f
  3507  0E97  0B89               	decfsz	9,f
  3508  0E98  2E95               	goto	u1535
  3509  0E99  3001               	movlw	1
  3510  0E9A  02A7               	subwf	___lwdiv@counter,f
  3511  0E9B  1D03               	btfss	3,2
  3512  0E9C  2E82               	goto	l2028
  3513  0E9D                     l2038:	
  3514  0E9D  0826               	movf	___lwdiv@quotient+1,w
  3515  0E9E  01A1               	clrf	?___lwdiv+1
  3516  0E9F  07A1               	addwf	?___lwdiv+1,f
  3517  0EA0  0825               	movf	___lwdiv@quotient,w
  3518  0EA1  01A0               	clrf	?___lwdiv
  3519  0EA2  07A0               	addwf	?___lwdiv,f
  3520  0EA3  0008               	return
  3521  0EA4                     __end_of___lwdiv:	
  3522                           
  3523                           	psect	text11
  3524  011C                     __ptext11:	
  3525 ;; *************** function _DecodeGPS *****************
  3526 ;; Defined at:
  3527 ;;		line 399 in file "launcher_functions.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  messageID       7   31[BANK0 ] unsigned char [7]
  3532 ;;  longitude       3   44[BANK0 ] unsigned char [3]
  3533 ;;  latitude        3   41[BANK0 ] unsigned char [3]
  3534 ;;  x               2   47[BANK0 ] int 
  3535 ;;  status          1   40[BANK0 ] unsigned char 
  3536 ;;  eastWest        1   39[BANK0 ] unsigned char 
  3537 ;;  northSouth      1   38[BANK0 ] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3547 ;;      Params:         0       0       0       0       0       0       0       0
  3548 ;;      Locals:         0      18       0       0       0       0       0       0
  3549 ;;      Temps:          0       3       0       0       0       0       0       0
  3550 ;;      Totals:         0      21       0       0       0       0       0       0
  3551 ;;Total ram usage:       21 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    6
  3554 ;; This function calls:
  3555 ;;		_SendGPSSPI
  3556 ;;		___awdiv
  3557 ;;		___bmul
  3558 ;;		___wmul
  3559 ;; This function is called by:
  3560 ;;		_UpdateGPS
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           
  3565                           ;psect for function _DecodeGPS
  3566  011C                     _DecodeGPS:	
  3567                           
  3568                           ;launcher_functions.c: 402: unsigned char messageID[7] = "$GPGLL";
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3572  011C  305C               	movlw	low DecodeGPS@F4931
  3573  011D  0086               	movwf	6
  3574  011E  3001               	movlw	high DecodeGPS@F4931
  3575  011F  0087               	movwf	7
  3576  0120  303F               	movlw	low DecodeGPS@messageID
  3577  0121  0084               	movwf	4
  3578  0122  3000               	movlw	high DecodeGPS@messageID
  3579  0123  0085               	movwf	5
  3580  0124  3007               	movlw	7
  3581  0125  0020               	movlb	0	; select bank0
  3582  0126  00BC               	movwf	??_DecodeGPS
  3583  0127                     u2000:	
  3584  0127  0016               	moviw fsr1++
  3585  0128  001A               	movwi fsr0++
  3586  0129  0BBC               	decfsz	??_DecodeGPS,f
  3587  012A  2927               	goto	u2000
  3588                           
  3589                           ;launcher_functions.c: 403: unsigned char latitude[3] = {0,0,0};
  3590  012B  0022               	movlb	2	; select bank2
  3591  012C  0824               	movf	DecodeGPS@F4933^(0+256),w
  3592  012D  0020               	movlb	0	; select bank0
  3593  012E  00C9               	movwf	DecodeGPS@latitude
  3594  012F  0022               	movlb	2	; select bank2
  3595  0130  0825               	movf	(DecodeGPS@F4933+1)^(0+256),w
  3596  0131  0020               	movlb	0	; select bank0
  3597  0132  00CA               	movwf	DecodeGPS@latitude+1
  3598  0133  0022               	movlb	2	; select bank2
  3599  0134  0826               	movf	(DecodeGPS@F4933+2)^(0+256),w
  3600  0135  0020               	movlb	0	; select bank0
  3601  0136  00CB               	movwf	DecodeGPS@latitude+2
  3602                           
  3603                           ;launcher_functions.c: 404: unsigned char longitude[3] = {0,0,0};
  3604  0137  0022               	movlb	2	; select bank2
  3605  0138  0827               	movf	DecodeGPS@F4935^(0+256),w
  3606  0139  0020               	movlb	0	; select bank0
  3607  013A  00CC               	movwf	DecodeGPS@longitude
  3608  013B  0022               	movlb	2	; select bank2
  3609  013C  0828               	movf	(DecodeGPS@F4935+1)^(0+256),w
  3610  013D  0020               	movlb	0	; select bank0
  3611  013E  00CD               	movwf	DecodeGPS@longitude+1
  3612  013F  0022               	movlb	2	; select bank2
  3613  0140  0829               	movf	(DecodeGPS@F4935+2)^(0+256),w
  3614  0141  0020               	movlb	0	; select bank0
  3615  0142  00CE               	movwf	DecodeGPS@longitude+2
  3616                           
  3617                           ;launcher_functions.c: 405: unsigned char northSouth;
  3618                           ;launcher_functions.c: 406: unsigned char eastWest;
  3619                           ;launcher_functions.c: 407: unsigned char status;
  3620                           ;launcher_functions.c: 408: int x;
  3621                           ;launcher_functions.c: 410: for(x=0;x<6;x++)
  3622  0143  01CF               	clrf	DecodeGPS@x
  3623  0144  01D0               	clrf	DecodeGPS@x+1
  3624  0145  0850               	movf	DecodeGPS@x+1,w
  3625  0146  3A80               	xorlw	128
  3626  0147  00BC               	movwf	??_DecodeGPS
  3627  0148  3080               	movlw	128
  3628  0149  023C               	subwf	??_DecodeGPS,w
  3629  014A  1D03               	skipz
  3630  014B  294E               	goto	u2015
  3631  014C  3006               	movlw	6
  3632  014D  024F               	subwf	DecodeGPS@x,w
  3633  014E                     u2015:	
  3634  014E  1803               	btfsc	3,0
  3635  014F  2971               	goto	l2354
  3636  0150                     l2348:	
  3637                           
  3638                           ;launcher_functions.c: 411: {
  3639                           ;launcher_functions.c: 412: if(gpsMessage[x] != messageID[x])
  3640  0150  0020               	movlb	0	; select bank0
  3641  0151  084F               	movf	DecodeGPS@x,w
  3642  0152  3E3F               	addlw	DecodeGPS@messageID& (0+255)
  3643  0153  0086               	movwf	6
  3644  0154  0187               	clrf	7
  3645  0155  084F               	movf	DecodeGPS@x,w
  3646  0156  3E2A               	addlw	_gpsMessage& (0+255)
  3647  0157  0084               	movwf	4
  3648  0158  3001               	movlw	1	; select bank2/3
  3649  0159  0085               	movwf	5
  3650  015A  0800               	movf	0,w
  3651  015B  0601               	xorwf	1,w
  3652  015C  1903               	skipnz
  3653  015D  2961               	goto	l2352
  3654                           
  3655                           ;launcher_functions.c: 413: gpsInvalidFlag = 1;
  3656  015E  0021               	movlb	1	; select bank1
  3657  015F  01E8               	clrf	_gpsInvalidFlag^(0+128)
  3658  0160  0AE8               	incf	_gpsInvalidFlag^(0+128),f
  3659  0161                     l2352:	
  3660  0161  3001               	movlw	1
  3661  0162  0020               	movlb	0	; select bank0
  3662  0163  07CF               	addwf	DecodeGPS@x,f
  3663  0164  3000               	movlw	0
  3664  0165  3DD0               	addwfc	DecodeGPS@x+1,f
  3665  0166  0850               	movf	DecodeGPS@x+1,w
  3666  0167  3A80               	xorlw	128
  3667  0168  00BC               	movwf	??_DecodeGPS
  3668  0169  3080               	movlw	128
  3669  016A  023C               	subwf	??_DecodeGPS,w
  3670  016B  1D03               	skipz
  3671  016C  296F               	goto	u2035
  3672  016D  3006               	movlw	6
  3673  016E  024F               	subwf	DecodeGPS@x,w
  3674  016F                     u2035:	
  3675  016F  1C03               	skipc
  3676  0170  2950               	goto	l2348
  3677  0171                     l2354:	
  3678                           
  3679                           ;launcher_functions.c: 414: }
  3680                           ;launcher_functions.c: 417: x = x + 1;
  3681  0171  0020               	movlb	0	; select bank0
  3682  0172  084F               	movf	DecodeGPS@x,w
  3683  0173  3E01               	addlw	1
  3684  0174  00CF               	movwf	DecodeGPS@x
  3685  0175  3000               	movlw	0
  3686  0176  3D50               	addwfc	DecodeGPS@x+1,w
  3687  0177  00D0               	movwf	DecodeGPS@x+1
  3688                           
  3689                           ;launcher_functions.c: 420: if(gpsMessage[x]!= ',')
  3690  0178  084F               	movf	DecodeGPS@x,w
  3691  0179  3E2A               	addlw	_gpsMessage& (0+255)
  3692  017A  0086               	movwf	6
  3693  017B  3001               	movlw	1	; select bank2/3
  3694  017C  0087               	movwf	7
  3695  017D  0801               	movf	1,w
  3696  017E  3A2C               	xorlw	44
  3697  017F  1903               	skipnz
  3698  0180  2A1A               	goto	l2386
  3699                           
  3700                           ;launcher_functions.c: 421: {
  3701                           ;launcher_functions.c: 423: latitude[0] = (gpsMessage[x++] - 48)*10;
  3702  0181  300A               	movlw	10
  3703  0182  00BC               	movwf	??_DecodeGPS
  3704  0183  083C               	movf	??_DecodeGPS,w
  3705  0184  00A0               	movwf	___bmul@multiplicand
  3706  0185  084F               	movf	DecodeGPS@x,w
  3707  0186  3E2A               	addlw	_gpsMessage& (0+255)
  3708  0187  0086               	movwf	6
  3709  0188  3001               	movlw	1	; select bank2/3
  3710  0189  0087               	movwf	7
  3711  018A  0801               	movf	1,w
  3712  018B  3ED0               	addlw	208
  3713  018C  318D  251C  3181   	fcall	___bmul
  3714  018F  0020               	movlb	0	; select bank0
  3715  0190  00BD               	movwf	??_DecodeGPS+1
  3716  0191  083D               	movf	??_DecodeGPS+1,w
  3717  0192  00C9               	movwf	DecodeGPS@latitude
  3718  0193  3001               	movlw	1
  3719  0194  07CF               	addwf	DecodeGPS@x,f
  3720  0195  3000               	movlw	0
  3721  0196  3DD0               	addwfc	DecodeGPS@x+1,f
  3722                           
  3723                           ;launcher_functions.c: 424: latitude[0] += (gpsMessage[x++] - 48);
  3724  0197  084F               	movf	DecodeGPS@x,w
  3725  0198  3E2A               	addlw	_gpsMessage& (0+255)
  3726  0199  0086               	movwf	6
  3727  019A  3001               	movlw	1	; select bank2/3
  3728  019B  0087               	movwf	7
  3729  019C  0801               	movf	1,w
  3730  019D  3ED0               	addlw	208
  3731  019E  00BC               	movwf	??_DecodeGPS
  3732  019F  083C               	movf	??_DecodeGPS,w
  3733  01A0  07C9               	addwf	DecodeGPS@latitude,f
  3734  01A1  3001               	movlw	1
  3735  01A2  07CF               	addwf	DecodeGPS@x,f
  3736  01A3  3000               	movlw	0
  3737  01A4  3DD0               	addwfc	DecodeGPS@x+1,f
  3738                           
  3739                           ;launcher_functions.c: 427: latitude[1] = (gpsMessage[x++] - 48)*10;
  3740  01A5  300A               	movlw	10
  3741  01A6  00BC               	movwf	??_DecodeGPS
  3742  01A7  083C               	movf	??_DecodeGPS,w
  3743  01A8  00A0               	movwf	___bmul@multiplicand
  3744  01A9  084F               	movf	DecodeGPS@x,w
  3745  01AA  3E2A               	addlw	_gpsMessage& (0+255)
  3746  01AB  0086               	movwf	6
  3747  01AC  3001               	movlw	1	; select bank2/3
  3748  01AD  0087               	movwf	7
  3749  01AE  0801               	movf	1,w
  3750  01AF  3ED0               	addlw	208
  3751  01B0  318D  251C  3181   	fcall	___bmul
  3752  01B3  0020               	movlb	0	; select bank0
  3753  01B4  00BD               	movwf	??_DecodeGPS+1
  3754  01B5  083D               	movf	??_DecodeGPS+1,w
  3755  01B6  00CA               	movwf	DecodeGPS@latitude+1
  3756  01B7  3001               	movlw	1
  3757  01B8  07CF               	addwf	DecodeGPS@x,f
  3758  01B9  3000               	movlw	0
  3759  01BA  3DD0               	addwfc	DecodeGPS@x+1,f
  3760                           
  3761                           ;launcher_functions.c: 428: latitude[1] += (gpsMessage[x++] - 48);
  3762  01BB  084F               	movf	DecodeGPS@x,w
  3763  01BC  3E2A               	addlw	_gpsMessage& (0+255)
  3764  01BD  0086               	movwf	6
  3765  01BE  3001               	movlw	1	; select bank2/3
  3766  01BF  0087               	movwf	7
  3767  01C0  0801               	movf	1,w
  3768  01C1  3ED0               	addlw	208
  3769  01C2  00BC               	movwf	??_DecodeGPS
  3770  01C3  083C               	movf	??_DecodeGPS,w
  3771  01C4  07CA               	addwf	DecodeGPS@latitude+1,f
  3772  01C5  3001               	movlw	1
  3773  01C6  07CF               	addwf	DecodeGPS@x,f
  3774  01C7  3000               	movlw	0
  3775  01C8  3DD0               	addwfc	DecodeGPS@x+1,f
  3776                           
  3777                           ;launcher_functions.c: 431: x = x + 1;
  3778  01C9  084F               	movf	DecodeGPS@x,w
  3779  01CA  3E01               	addlw	1
  3780  01CB  00CF               	movwf	DecodeGPS@x
  3781  01CC  3000               	movlw	0
  3782  01CD  3D50               	addwfc	DecodeGPS@x+1,w
  3783  01CE  00D0               	movwf	DecodeGPS@x+1
  3784                           
  3785                           ;launcher_functions.c: 434: latitude[2] = (gpsMessage[x++] - 48)*10;
  3786  01CF  300A               	movlw	10
  3787  01D0  00BC               	movwf	??_DecodeGPS
  3788  01D1  083C               	movf	??_DecodeGPS,w
  3789  01D2  00A0               	movwf	___bmul@multiplicand
  3790  01D3  084F               	movf	DecodeGPS@x,w
  3791  01D4  3E2A               	addlw	_gpsMessage& (0+255)
  3792  01D5  0086               	movwf	6
  3793  01D6  3001               	movlw	1	; select bank2/3
  3794  01D7  0087               	movwf	7
  3795  01D8  0801               	movf	1,w
  3796  01D9  3ED0               	addlw	208
  3797  01DA  318D  251C  3181   	fcall	___bmul
  3798  01DD  0020               	movlb	0	; select bank0
  3799  01DE  00BD               	movwf	??_DecodeGPS+1
  3800  01DF  083D               	movf	??_DecodeGPS+1,w
  3801  01E0  00CB               	movwf	DecodeGPS@latitude+2
  3802  01E1  3001               	movlw	1
  3803  01E2  07CF               	addwf	DecodeGPS@x,f
  3804  01E3  3000               	movlw	0
  3805  01E4  3DD0               	addwfc	DecodeGPS@x+1,f
  3806                           
  3807                           ;launcher_functions.c: 435: latitude[2] += (gpsMessage[x++] - 48);
  3808  01E5  084F               	movf	DecodeGPS@x,w
  3809  01E6  3E2A               	addlw	_gpsMessage& (0+255)
  3810  01E7  0086               	movwf	6
  3811  01E8  3001               	movlw	1	; select bank2/3
  3812  01E9  0087               	movwf	7
  3813  01EA  0801               	movf	1,w
  3814  01EB  3ED0               	addlw	208
  3815  01EC  00BC               	movwf	??_DecodeGPS
  3816  01ED  083C               	movf	??_DecodeGPS,w
  3817  01EE  07CB               	addwf	DecodeGPS@latitude+2,f
  3818  01EF  3001               	movlw	1
  3819  01F0  07CF               	addwf	DecodeGPS@x,f
  3820  01F1  3000               	movlw	0
  3821  01F2  3DD0               	addwfc	DecodeGPS@x+1,f
  3822                           
  3823                           ;launcher_functions.c: 436: latitude[2] = (latitude[2]*60)/100;
  3824  01F3  3064               	movlw	100
  3825  01F4  00A6               	movwf	___awdiv@divisor
  3826  01F5  3000               	movlw	0
  3827  01F6  00A7               	movwf	___awdiv@divisor+1
  3828  01F7  084B               	movf	DecodeGPS@latitude+2,w
  3829  01F8  00BC               	movwf	??_DecodeGPS
  3830  01F9  01BD               	clrf	??_DecodeGPS+1
  3831  01FA  083C               	movf	??_DecodeGPS,w
  3832  01FB  00A0               	movwf	___wmul@multiplier
  3833  01FC  083D               	movf	??_DecodeGPS+1,w
  3834  01FD  00A1               	movwf	___wmul@multiplier+1
  3835  01FE  303C               	movlw	60
  3836  01FF  00A2               	movwf	___wmul@multiplicand
  3837  0200  3000               	movlw	0
  3838  0201  00A3               	movwf	___wmul@multiplicand+1
  3839  0202  318D  25A3  3181   	fcall	___wmul
  3840  0205  0020               	movlb	0	; select bank0
  3841  0206  0821               	movf	?___wmul+1,w
  3842  0207  01A9               	clrf	___awdiv@dividend+1
  3843  0208  07A9               	addwf	___awdiv@dividend+1,f
  3844  0209  0820               	movf	?___wmul,w
  3845  020A  01A8               	clrf	___awdiv@dividend
  3846  020B  07A8               	addwf	___awdiv@dividend,f
  3847  020C  318E  26E6  3181   	fcall	___awdiv
  3848  020F  0020               	movlb	0	; select bank0
  3849  0210  0826               	movf	?___awdiv,w
  3850  0211  00BE               	movwf	??_DecodeGPS+2
  3851  0212  083E               	movf	??_DecodeGPS+2,w
  3852  0213  00CB               	movwf	DecodeGPS@latitude+2
  3853                           
  3854                           ;launcher_functions.c: 439: x = x + 2;
  3855  0214  084F               	movf	DecodeGPS@x,w
  3856  0215  3E02               	addlw	2
  3857  0216  00CF               	movwf	DecodeGPS@x
  3858  0217  3000               	movlw	0
  3859  0218  3D50               	addwfc	DecodeGPS@x+1,w
  3860  0219  00D0               	movwf	DecodeGPS@x+1
  3861  021A                     l2386:	
  3862                           
  3863                           ;launcher_functions.c: 440: }
  3864                           ;launcher_functions.c: 443: x = x + 1;
  3865  021A  084F               	movf	DecodeGPS@x,w
  3866  021B  3E01               	addlw	1
  3867  021C  00CF               	movwf	DecodeGPS@x
  3868  021D  3000               	movlw	0
  3869  021E  3D50               	addwfc	DecodeGPS@x+1,w
  3870  021F  00D0               	movwf	DecodeGPS@x+1
  3871                           
  3872                           ;launcher_functions.c: 446: if(gpsMessage[x] != ',')
  3873  0220  084F               	movf	DecodeGPS@x,w
  3874  0221  3E2A               	addlw	_gpsMessage& (0+255)
  3875  0222  0086               	movwf	6
  3876  0223  3001               	movlw	1	; select bank2/3
  3877  0224  0087               	movwf	7
  3878  0225  0801               	movf	1,w
  3879  0226  3A2C               	xorlw	44
  3880  0227  1903               	skipnz
  3881  0228  2A36               	goto	l2394
  3882                           
  3883                           ;launcher_functions.c: 447: northSouth = gpsMessage[x++];
  3884  0229  084F               	movf	DecodeGPS@x,w
  3885  022A  3E2A               	addlw	_gpsMessage& (0+255)
  3886  022B  0086               	movwf	6
  3887  022C  3001               	movlw	1	; select bank2/3
  3888  022D  0087               	movwf	7
  3889  022E  0801               	movf	1,w
  3890  022F  00BC               	movwf	??_DecodeGPS
  3891  0230  083C               	movf	??_DecodeGPS,w
  3892  0231  00C6               	movwf	DecodeGPS@northSouth
  3893  0232  3001               	movlw	1
  3894  0233  07CF               	addwf	DecodeGPS@x,f
  3895  0234  3000               	movlw	0
  3896  0235  3DD0               	addwfc	DecodeGPS@x+1,f
  3897  0236                     l2394:	
  3898                           
  3899                           ;launcher_functions.c: 450: x = x + 1;
  3900  0236  084F               	movf	DecodeGPS@x,w
  3901  0237  3E01               	addlw	1
  3902  0238  00CF               	movwf	DecodeGPS@x
  3903  0239  3000               	movlw	0
  3904  023A  3D50               	addwfc	DecodeGPS@x+1,w
  3905  023B  00D0               	movwf	DecodeGPS@x+1
  3906                           
  3907                           ;launcher_functions.c: 453: if(gpsMessage[x]!= ',')
  3908  023C  084F               	movf	DecodeGPS@x,w
  3909  023D  3E2A               	addlw	_gpsMessage& (0+255)
  3910  023E  0086               	movwf	6
  3911  023F  3001               	movlw	1	; select bank2/3
  3912  0240  0087               	movwf	7
  3913  0241  0801               	movf	1,w
  3914  0242  3A2C               	xorlw	44
  3915  0243  1903               	skipnz
  3916  0244  2AF4               	goto	l2430
  3917                           
  3918                           ;launcher_functions.c: 454: {
  3919                           ;launcher_functions.c: 456: longitude[0] = (gpsMessage[x++] - 48)*100;
  3920  0245  3064               	movlw	100
  3921  0246  00BC               	movwf	??_DecodeGPS
  3922  0247  083C               	movf	??_DecodeGPS,w
  3923  0248  00A0               	movwf	___bmul@multiplicand
  3924  0249  084F               	movf	DecodeGPS@x,w
  3925  024A  3E2A               	addlw	_gpsMessage& (0+255)
  3926  024B  0086               	movwf	6
  3927  024C  3001               	movlw	1	; select bank2/3
  3928  024D  0087               	movwf	7
  3929  024E  0801               	movf	1,w
  3930  024F  3ED0               	addlw	208
  3931  0250  318D  251C  3181   	fcall	___bmul
  3932  0253  0020               	movlb	0	; select bank0
  3933  0254  00BD               	movwf	??_DecodeGPS+1
  3934  0255  083D               	movf	??_DecodeGPS+1,w
  3935  0256  00CC               	movwf	DecodeGPS@longitude
  3936  0257  3001               	movlw	1
  3937  0258  07CF               	addwf	DecodeGPS@x,f
  3938  0259  3000               	movlw	0
  3939  025A  3DD0               	addwfc	DecodeGPS@x+1,f
  3940                           
  3941                           ;launcher_functions.c: 457: longitude[0] += (gpsMessage[x++] - 48)*10;
  3942  025B  300A               	movlw	10
  3943  025C  00BC               	movwf	??_DecodeGPS
  3944  025D  083C               	movf	??_DecodeGPS,w
  3945  025E  00A0               	movwf	___bmul@multiplicand
  3946  025F  084F               	movf	DecodeGPS@x,w
  3947  0260  3E2A               	addlw	_gpsMessage& (0+255)
  3948  0261  0086               	movwf	6
  3949  0262  3001               	movlw	1	; select bank2/3
  3950  0263  0087               	movwf	7
  3951  0264  0801               	movf	1,w
  3952  0265  3ED0               	addlw	208
  3953  0266  318D  251C  3181   	fcall	___bmul
  3954  0269  0020               	movlb	0	; select bank0
  3955  026A  00BD               	movwf	??_DecodeGPS+1
  3956  026B  083D               	movf	??_DecodeGPS+1,w
  3957  026C  07CC               	addwf	DecodeGPS@longitude,f
  3958  026D  3001               	movlw	1
  3959  026E  07CF               	addwf	DecodeGPS@x,f
  3960  026F  3000               	movlw	0
  3961  0270  3DD0               	addwfc	DecodeGPS@x+1,f
  3962                           
  3963                           ;launcher_functions.c: 458: longitude[0] += (gpsMessage[x++] - 48);
  3964  0271  084F               	movf	DecodeGPS@x,w
  3965  0272  3E2A               	addlw	_gpsMessage& (0+255)
  3966  0273  0086               	movwf	6
  3967  0274  3001               	movlw	1	; select bank2/3
  3968  0275  0087               	movwf	7
  3969  0276  0801               	movf	1,w
  3970  0277  3ED0               	addlw	208
  3971  0278  00BC               	movwf	??_DecodeGPS
  3972  0279  083C               	movf	??_DecodeGPS,w
  3973  027A  07CC               	addwf	DecodeGPS@longitude,f
  3974  027B  3001               	movlw	1
  3975  027C  07CF               	addwf	DecodeGPS@x,f
  3976  027D  3000               	movlw	0
  3977  027E  3DD0               	addwfc	DecodeGPS@x+1,f
  3978                           
  3979                           ;launcher_functions.c: 461: longitude[1] = (gpsMessage[x++] - 48)*10;
  3980  027F  300A               	movlw	10
  3981  0280  00BC               	movwf	??_DecodeGPS
  3982  0281  083C               	movf	??_DecodeGPS,w
  3983  0282  00A0               	movwf	___bmul@multiplicand
  3984  0283  084F               	movf	DecodeGPS@x,w
  3985  0284  3E2A               	addlw	_gpsMessage& (0+255)
  3986  0285  0086               	movwf	6
  3987  0286  3001               	movlw	1	; select bank2/3
  3988  0287  0087               	movwf	7
  3989  0288  0801               	movf	1,w
  3990  0289  3ED0               	addlw	208
  3991  028A  318D  251C  3181   	fcall	___bmul
  3992  028D  0020               	movlb	0	; select bank0
  3993  028E  00BD               	movwf	??_DecodeGPS+1
  3994  028F  083D               	movf	??_DecodeGPS+1,w
  3995  0290  00CD               	movwf	DecodeGPS@longitude+1
  3996  0291  3001               	movlw	1
  3997  0292  07CF               	addwf	DecodeGPS@x,f
  3998  0293  3000               	movlw	0
  3999  0294  3DD0               	addwfc	DecodeGPS@x+1,f
  4000                           
  4001                           ;launcher_functions.c: 462: longitude[1] += (gpsMessage[x++] - 48);
  4002  0295  084F               	movf	DecodeGPS@x,w
  4003  0296  3E2A               	addlw	_gpsMessage& (0+255)
  4004  0297  0086               	movwf	6
  4005  0298  3001               	movlw	1	; select bank2/3
  4006  0299  0087               	movwf	7
  4007  029A  0801               	movf	1,w
  4008  029B  3ED0               	addlw	208
  4009  029C  00BC               	movwf	??_DecodeGPS
  4010  029D  083C               	movf	??_DecodeGPS,w
  4011  029E  07CD               	addwf	DecodeGPS@longitude+1,f
  4012  029F  3001               	movlw	1
  4013  02A0  07CF               	addwf	DecodeGPS@x,f
  4014  02A1  3000               	movlw	0
  4015  02A2  3DD0               	addwfc	DecodeGPS@x+1,f
  4016                           
  4017                           ;launcher_functions.c: 465: x = x + 1;
  4018  02A3  084F               	movf	DecodeGPS@x,w
  4019  02A4  3E01               	addlw	1
  4020  02A5  00CF               	movwf	DecodeGPS@x
  4021  02A6  3000               	movlw	0
  4022  02A7  3D50               	addwfc	DecodeGPS@x+1,w
  4023  02A8  00D0               	movwf	DecodeGPS@x+1
  4024                           
  4025                           ;launcher_functions.c: 468: longitude[2] = (gpsMessage[x++] - 48)*10;
  4026  02A9  300A               	movlw	10
  4027  02AA  00BC               	movwf	??_DecodeGPS
  4028  02AB  083C               	movf	??_DecodeGPS,w
  4029  02AC  00A0               	movwf	___bmul@multiplicand
  4030  02AD  084F               	movf	DecodeGPS@x,w
  4031  02AE  3E2A               	addlw	_gpsMessage& (0+255)
  4032  02AF  0086               	movwf	6
  4033  02B0  3001               	movlw	1	; select bank2/3
  4034  02B1  0087               	movwf	7
  4035  02B2  0801               	movf	1,w
  4036  02B3  3ED0               	addlw	208
  4037  02B4  318D  251C  3181   	fcall	___bmul
  4038  02B7  0020               	movlb	0	; select bank0
  4039  02B8  00BD               	movwf	??_DecodeGPS+1
  4040  02B9  083D               	movf	??_DecodeGPS+1,w
  4041  02BA  00CE               	movwf	DecodeGPS@longitude+2
  4042  02BB  3001               	movlw	1
  4043  02BC  07CF               	addwf	DecodeGPS@x,f
  4044  02BD  3000               	movlw	0
  4045  02BE  3DD0               	addwfc	DecodeGPS@x+1,f
  4046                           
  4047                           ;launcher_functions.c: 469: longitude[2] += (gpsMessage[x++] - 48);
  4048  02BF  084F               	movf	DecodeGPS@x,w
  4049  02C0  3E2A               	addlw	_gpsMessage& (0+255)
  4050  02C1  0086               	movwf	6
  4051  02C2  3001               	movlw	1	; select bank2/3
  4052  02C3  0087               	movwf	7
  4053  02C4  0801               	movf	1,w
  4054  02C5  3ED0               	addlw	208
  4055  02C6  00BC               	movwf	??_DecodeGPS
  4056  02C7  083C               	movf	??_DecodeGPS,w
  4057  02C8  07CE               	addwf	DecodeGPS@longitude+2,f
  4058  02C9  3001               	movlw	1
  4059  02CA  07CF               	addwf	DecodeGPS@x,f
  4060  02CB  3000               	movlw	0
  4061  02CC  3DD0               	addwfc	DecodeGPS@x+1,f
  4062                           
  4063                           ;launcher_functions.c: 470: longitude[2] = (longitude[2]*60)/100;
  4064  02CD  3064               	movlw	100
  4065  02CE  00A6               	movwf	___awdiv@divisor
  4066  02CF  3000               	movlw	0
  4067  02D0  00A7               	movwf	___awdiv@divisor+1
  4068  02D1  084E               	movf	DecodeGPS@longitude+2,w
  4069  02D2  00BC               	movwf	??_DecodeGPS
  4070  02D3  01BD               	clrf	??_DecodeGPS+1
  4071  02D4  083C               	movf	??_DecodeGPS,w
  4072  02D5  00A0               	movwf	___wmul@multiplier
  4073  02D6  083D               	movf	??_DecodeGPS+1,w
  4074  02D7  00A1               	movwf	___wmul@multiplier+1
  4075  02D8  303C               	movlw	60
  4076  02D9  00A2               	movwf	___wmul@multiplicand
  4077  02DA  3000               	movlw	0
  4078  02DB  00A3               	movwf	___wmul@multiplicand+1
  4079  02DC  318D  25A3  3181   	fcall	___wmul
  4080  02DF  0020               	movlb	0	; select bank0
  4081  02E0  0821               	movf	?___wmul+1,w
  4082  02E1  01A9               	clrf	___awdiv@dividend+1
  4083  02E2  07A9               	addwf	___awdiv@dividend+1,f
  4084  02E3  0820               	movf	?___wmul,w
  4085  02E4  01A8               	clrf	___awdiv@dividend
  4086  02E5  07A8               	addwf	___awdiv@dividend,f
  4087  02E6  318E  26E6  3181   	fcall	___awdiv
  4088  02E9  0020               	movlb	0	; select bank0
  4089  02EA  0826               	movf	?___awdiv,w
  4090  02EB  00BE               	movwf	??_DecodeGPS+2
  4091  02EC  083E               	movf	??_DecodeGPS+2,w
  4092  02ED  00CE               	movwf	DecodeGPS@longitude+2
  4093                           
  4094                           ;launcher_functions.c: 473: x = x + 2;
  4095  02EE  084F               	movf	DecodeGPS@x,w
  4096  02EF  3E02               	addlw	2
  4097  02F0  00CF               	movwf	DecodeGPS@x
  4098  02F1  3000               	movlw	0
  4099  02F2  3D50               	addwfc	DecodeGPS@x+1,w
  4100  02F3  00D0               	movwf	DecodeGPS@x+1
  4101  02F4                     l2430:	
  4102                           
  4103                           ;launcher_functions.c: 474: }
  4104                           ;launcher_functions.c: 477: x = x + 1;
  4105  02F4  084F               	movf	DecodeGPS@x,w
  4106  02F5  3E01               	addlw	1
  4107  02F6  00CF               	movwf	DecodeGPS@x
  4108  02F7  3000               	movlw	0
  4109  02F8  3D50               	addwfc	DecodeGPS@x+1,w
  4110  02F9  00D0               	movwf	DecodeGPS@x+1
  4111                           
  4112                           ;launcher_functions.c: 480: if(gpsMessage[x] != ',')
  4113  02FA  084F               	movf	DecodeGPS@x,w
  4114  02FB  3E2A               	addlw	_gpsMessage& (0+255)
  4115  02FC  0086               	movwf	6
  4116  02FD  3001               	movlw	1	; select bank2/3
  4117  02FE  0087               	movwf	7
  4118  02FF  0801               	movf	1,w
  4119  0300  3A2C               	xorlw	44
  4120  0301  1903               	skipnz
  4121  0302  2B10               	goto	l2438
  4122                           
  4123                           ;launcher_functions.c: 481: eastWest = gpsMessage[x++];
  4124  0303  084F               	movf	DecodeGPS@x,w
  4125  0304  3E2A               	addlw	_gpsMessage& (0+255)
  4126  0305  0086               	movwf	6
  4127  0306  3001               	movlw	1	; select bank2/3
  4128  0307  0087               	movwf	7
  4129  0308  0801               	movf	1,w
  4130  0309  00BC               	movwf	??_DecodeGPS
  4131  030A  083C               	movf	??_DecodeGPS,w
  4132  030B  00C7               	movwf	DecodeGPS@eastWest
  4133  030C  3001               	movlw	1
  4134  030D  07CF               	addwf	DecodeGPS@x,f
  4135  030E  3000               	movlw	0
  4136  030F  3DD0               	addwfc	DecodeGPS@x+1,f
  4137  0310                     l2438:	
  4138                           
  4139                           ;launcher_functions.c: 484: x = x + 1;
  4140  0310  084F               	movf	DecodeGPS@x,w
  4141  0311  3E01               	addlw	1
  4142  0312  00CF               	movwf	DecodeGPS@x
  4143  0313  3000               	movlw	0
  4144  0314  3D50               	addwfc	DecodeGPS@x+1,w
  4145  0315  00D0               	movwf	DecodeGPS@x+1
  4146  0316                     l2440:	
  4147                           ;launcher_functions.c: 487: while(gpsMessage[x++] != ','){}
  4148                           
  4149  0316  0850               	movf	DecodeGPS@x+1,w
  4150  0317  00BD               	movwf	??_DecodeGPS+1
  4151  0318  084F               	movf	DecodeGPS@x,w
  4152  0319  00BC               	movwf	??_DecodeGPS
  4153  031A  0ACF               	incf	DecodeGPS@x,f
  4154  031B  1903               	skipnz
  4155  031C  0AD0               	incf	DecodeGPS@x+1,f
  4156  031D  083C               	movf	??_DecodeGPS,w
  4157  031E  3E2A               	addlw	_gpsMessage& (0+255)
  4158  031F  0086               	movwf	6
  4159  0320  3001               	movlw	1	; select bank2/3
  4160  0321  0087               	movwf	7
  4161  0322  0801               	movf	1,w
  4162  0323  3A2C               	xorlw	44
  4163  0324  1D03               	skipz
  4164  0325  2B16               	goto	l2440
  4165                           
  4166                           ;launcher_functions.c: 490: status = gpsMessage[x];
  4167  0326  084F               	movf	DecodeGPS@x,w
  4168  0327  3E2A               	addlw	_gpsMessage& (0+255)
  4169  0328  0086               	movwf	6
  4170  0329  3001               	movlw	1	; select bank2/3
  4171  032A  0087               	movwf	7
  4172  032B  0801               	movf	1,w
  4173  032C  00BC               	movwf	??_DecodeGPS
  4174  032D  083C               	movf	??_DecodeGPS,w
  4175  032E  00C8               	movwf	DecodeGPS@status
  4176                           
  4177                           ;launcher_functions.c: 492: if(status == 'A')
  4178  032F  0848               	movf	DecodeGPS@status,w
  4179  0330  3A41               	xorlw	65
  4180  0331  1D03               	skipz
  4181  0332  2B36               	goto	l409
  4182                           
  4183                           ;launcher_functions.c: 493: gpsInvalidFlag = 0;
  4184  0333  0021               	movlb	1	; select bank1
  4185  0334  01E8               	clrf	_gpsInvalidFlag^(0+128)
  4186  0335  2B39               	goto	l2448
  4187  0336                     l409:	
  4188                           
  4189                           ;launcher_functions.c: 494: else
  4190                           ;launcher_functions.c: 495: gpsInvalidFlag = 1;
  4191  0336  0021               	movlb	1	; select bank1
  4192  0337  01E8               	clrf	_gpsInvalidFlag^(0+128)
  4193  0338  0AE8               	incf	_gpsInvalidFlag^(0+128),f
  4194  0339                     l2448:	
  4195                           
  4196                           ;launcher_functions.c: 499: if(!gpsInvalidFlag)
  4197  0339  08E8               	movf	_gpsInvalidFlag^(0+128),f
  4198  033A  1D03               	skipz
  4199  033B  0008               	return
  4200                           
  4201                           ;launcher_functions.c: 500: {
  4202                           ;launcher_functions.c: 502: for(x=0;x<3;x++)
  4203  033C  0020               	movlb	0	; select bank0
  4204  033D  01CF               	clrf	DecodeGPS@x
  4205  033E  01D0               	clrf	DecodeGPS@x+1
  4206  033F  0850               	movf	DecodeGPS@x+1,w
  4207  0340  3A80               	xorlw	128
  4208  0341  00BC               	movwf	??_DecodeGPS
  4209  0342  3080               	movlw	128
  4210  0343  023C               	subwf	??_DecodeGPS,w
  4211  0344  1D03               	skipz
  4212  0345  2B48               	goto	u2115
  4213  0346  3003               	movlw	3
  4214  0347  024F               	subwf	DecodeGPS@x,w
  4215  0348                     u2115:	
  4216  0348  1803               	btfsc	3,0
  4217  0349  2B72               	goto	l2462
  4218  034A                     l2456:	
  4219                           
  4220                           ;launcher_functions.c: 503: {
  4221                           ;launcher_functions.c: 504: validLatitude[x] = latitude[x];
  4222  034A  0020               	movlb	0	; select bank0
  4223  034B  084F               	movf	DecodeGPS@x,w
  4224  034C  3E49               	addlw	DecodeGPS@latitude& (0+255)
  4225  034D  0086               	movwf	6
  4226  034E  0187               	clrf	7
  4227  034F  0801               	movf	1,w
  4228  0350  00BC               	movwf	??_DecodeGPS
  4229  0351  084F               	movf	DecodeGPS@x,w
  4230  0352  3EE2               	addlw	_validLatitude& (0+255)
  4231  0353  0086               	movwf	6
  4232  0354  0187               	clrf	7
  4233  0355  083C               	movf	??_DecodeGPS,w
  4234  0356  0081               	movwf	1
  4235                           
  4236                           ;launcher_functions.c: 505: validLongitude[x] = longitude[x];
  4237  0357  084F               	movf	DecodeGPS@x,w
  4238  0358  3E4C               	addlw	DecodeGPS@longitude& (0+255)
  4239  0359  0086               	movwf	6
  4240  035A  0187               	clrf	7
  4241  035B  0801               	movf	1,w
  4242  035C  00BC               	movwf	??_DecodeGPS
  4243  035D  084F               	movf	DecodeGPS@x,w
  4244  035E  3EE5               	addlw	_validLongitude& (0+255)
  4245  035F  0086               	movwf	6
  4246  0360  0187               	clrf	7
  4247  0361  083C               	movf	??_DecodeGPS,w
  4248  0362  0081               	movwf	1
  4249  0363  3001               	movlw	1
  4250  0364  07CF               	addwf	DecodeGPS@x,f
  4251  0365  3000               	movlw	0
  4252  0366  3DD0               	addwfc	DecodeGPS@x+1,f
  4253  0367  0850               	movf	DecodeGPS@x+1,w
  4254  0368  3A80               	xorlw	128
  4255  0369  00BC               	movwf	??_DecodeGPS
  4256  036A  3080               	movlw	128
  4257  036B  023C               	subwf	??_DecodeGPS,w
  4258  036C  1D03               	skipz
  4259  036D  2B70               	goto	u2125
  4260  036E  3003               	movlw	3
  4261  036F  024F               	subwf	DecodeGPS@x,w
  4262  0370                     u2125:	
  4263  0370  1C03               	skipc
  4264  0371  2B4A               	goto	l2456
  4265  0372                     l2462:	
  4266                           
  4267                           ;launcher_functions.c: 506: }
  4268                           ;launcher_functions.c: 507: validNorthSouth = northSouth;
  4269  0372  0020               	movlb	0	; select bank0
  4270  0373  0846               	movf	DecodeGPS@northSouth,w
  4271  0374  00BC               	movwf	??_DecodeGPS
  4272  0375  083C               	movf	??_DecodeGPS,w
  4273  0376  0021               	movlb	1	; select bank1
  4274  0377  00EA               	movwf	_validNorthSouth^(0+128)
  4275                           
  4276                           ;launcher_functions.c: 508: validEastWest = eastWest;
  4277  0378  0020               	movlb	0	; select bank0
  4278  0379  0847               	movf	DecodeGPS@eastWest,w
  4279  037A  00BC               	movwf	??_DecodeGPS
  4280  037B  083C               	movf	??_DecodeGPS,w
  4281  037C  0021               	movlb	1	; select bank1
  4282  037D  00E9               	movwf	_validEastWest^(0+128)
  4283                           
  4284                           ;launcher_functions.c: 510: SendGPSSPI();
  4285  037E  3187  2788         	fcall	_SendGPSSPI
  4286  0380  0008               	return
  4287  0381                     __end_of_DecodeGPS:	
  4288                           
  4289                           	psect	text12
  4290  0DA3                     __ptext12:	
  4291 ;; *************** function ___wmul *****************
  4292 ;; Defined at:
  4293 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4296 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  product         2    4[BANK0 ] unsigned int 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  2    0[BANK0 ] unsigned int 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4308 ;;      Params:         0       4       0       0       0       0       0       0
  4309 ;;      Locals:         0       2       0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0
  4311 ;;      Totals:         0       6       0       0       0       0       0       0
  4312 ;;Total ram usage:        6 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    2
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_DecodeGPS
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function ___wmul
  4324  0DA3                     ___wmul:	
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4328  0DA3  0020               	movlb	0	; select bank0
  4329  0DA4  01A4               	clrf	___wmul@product
  4330  0DA5  01A5               	clrf	___wmul@product+1
  4331  0DA6                     l2210:	
  4332  0DA6  1C20               	btfss	___wmul@multiplier,0
  4333  0DA7  2DAC               	goto	l585
  4334  0DA8  0822               	movf	___wmul@multiplicand,w
  4335  0DA9  07A4               	addwf	___wmul@product,f
  4336  0DAA  0823               	movf	___wmul@multiplicand+1,w
  4337  0DAB  3DA5               	addwfc	___wmul@product+1,f
  4338  0DAC                     l585:	
  4339  0DAC  3001               	movlw	1
  4340  0DAD                     u1815:	
  4341  0DAD  35A2               	lslf	___wmul@multiplicand,f
  4342  0DAE  0DA3               	rlf	___wmul@multiplicand+1,f
  4343  0DAF  0B89               	decfsz	9,f
  4344  0DB0  2DAD               	goto	u1815
  4345  0DB1  3001               	movlw	1
  4346  0DB2                     u1825:	
  4347  0DB2  36A1               	lsrf	___wmul@multiplier+1,f
  4348  0DB3  0CA0               	rrf	___wmul@multiplier,f
  4349  0DB4  0B89               	decfsz	9,f
  4350  0DB5  2DB2               	goto	u1825
  4351  0DB6  0821               	movf	___wmul@multiplier+1,w
  4352  0DB7  0420               	iorwf	___wmul@multiplier,w
  4353  0DB8  1D03               	skipz
  4354  0DB9  2DA6               	goto	l2210
  4355  0DBA  0825               	movf	___wmul@product+1,w
  4356  0DBB  01A1               	clrf	?___wmul+1
  4357  0DBC  07A1               	addwf	?___wmul+1,f
  4358  0DBD  0824               	movf	___wmul@product,w
  4359  0DBE  01A0               	clrf	?___wmul
  4360  0DBF  07A0               	addwf	?___wmul,f
  4361  0DC0  0008               	return
  4362  0DC1                     __end_of___wmul:	
  4363                           
  4364                           	psect	text13
  4365  0D1C                     __ptext13:	
  4366 ;; *************** function ___bmul *****************
  4367 ;; Defined at:
  4368 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  multiplier      1    wreg     unsigned char 
  4371 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4374 ;;  product         1    2[BANK0 ] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4384 ;;      Params:         0       1       0       0       0       0       0       0
  4385 ;;      Locals:         0       2       0       0       0       0       0       0
  4386 ;;      Temps:          0       1       0       0       0       0       0       0
  4387 ;;      Totals:         0       4       0       0       0       0       0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    2
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_DecodeGPS
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           
  4399                           ;psect for function ___bmul
  4400  0D1C                     ___bmul:	
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4404                           ;___bmul@multiplier stored from wreg
  4405  0D1C  0020               	movlb	0	; select bank0
  4406  0D1D  00A3               	movwf	___bmul@multiplier
  4407  0D1E  01A2               	clrf	___bmul@product
  4408  0D1F                     l2222:	
  4409  0D1F  1C23               	btfss	___bmul@multiplier,0
  4410  0D20  2D25               	goto	l2226
  4411  0D21  0820               	movf	___bmul@multiplicand,w
  4412  0D22  00A1               	movwf	??___bmul
  4413  0D23  0821               	movf	??___bmul,w
  4414  0D24  07A2               	addwf	___bmul@product,f
  4415  0D25                     l2226:	
  4416  0D25  1003               	clrc
  4417  0D26  0DA0               	rlf	___bmul@multiplicand,f
  4418  0D27  1003               	clrc
  4419  0D28  0CA3               	rrf	___bmul@multiplier,f
  4420  0D29  08A3               	movf	___bmul@multiplier,f
  4421  0D2A  1D03               	skipz
  4422  0D2B  2D1F               	goto	l2222
  4423  0D2C  0822               	movf	___bmul@product,w
  4424  0D2D  0008               	return
  4425  0D2E                     __end_of___bmul:	
  4426                           
  4427                           	psect	text14
  4428  0EE6                     __ptext14:	
  4429 ;; *************** function ___awdiv *****************
  4430 ;; Defined at:
  4431 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  divisor         2    6[BANK0 ] int 
  4434 ;;  dividend        2    8[BANK0 ] int 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  quotient        2   13[BANK0 ] int 
  4437 ;;  sign            1   12[BANK0 ] unsigned char 
  4438 ;;  counter         1   11[BANK0 ] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2    6[BANK0 ] int 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4448 ;;      Params:         0       4       0       0       0       0       0       0
  4449 ;;      Locals:         0       4       0       0       0       0       0       0
  4450 ;;      Temps:          0       1       0       0       0       0       0       0
  4451 ;;      Totals:         0       9       0       0       0       0       0       0
  4452 ;;Total ram usage:        9 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    2
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_DecodeGPS
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function ___awdiv
  4464  0EE6                     ___awdiv:	
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4468  0EE6  0020               	movlb	0	; select bank0
  4469  0EE7  01AC               	clrf	___awdiv@sign
  4470  0EE8  1FA7               	btfss	___awdiv@divisor+1,7
  4471  0EE9  2EF1               	goto	l2244
  4472  0EEA  09A6               	comf	___awdiv@divisor,f
  4473  0EEB  09A7               	comf	___awdiv@divisor+1,f
  4474  0EEC  0AA6               	incf	___awdiv@divisor,f
  4475  0EED  1903               	skipnz
  4476  0EEE  0AA7               	incf	___awdiv@divisor+1,f
  4477  0EEF  01AC               	clrf	___awdiv@sign
  4478  0EF0  0AAC               	incf	___awdiv@sign,f
  4479  0EF1                     l2244:	
  4480  0EF1  1FA9               	btfss	___awdiv@dividend+1,7
  4481  0EF2  2EFC               	goto	l2250
  4482  0EF3  09A8               	comf	___awdiv@dividend,f
  4483  0EF4  09A9               	comf	___awdiv@dividend+1,f
  4484  0EF5  0AA8               	incf	___awdiv@dividend,f
  4485  0EF6  1903               	skipnz
  4486  0EF7  0AA9               	incf	___awdiv@dividend+1,f
  4487  0EF8  3001               	movlw	1
  4488  0EF9  00AA               	movwf	??___awdiv
  4489  0EFA  082A               	movf	??___awdiv,w
  4490  0EFB  06AC               	xorwf	___awdiv@sign,f
  4491  0EFC                     l2250:	
  4492  0EFC  01AD               	clrf	___awdiv@quotient
  4493  0EFD  01AE               	clrf	___awdiv@quotient+1
  4494  0EFE  0827               	movf	___awdiv@divisor+1,w
  4495  0EFF  0426               	iorwf	___awdiv@divisor,w
  4496  0F00  1903               	skipnz
  4497  0F01  2F2B               	goto	l2272
  4498  0F02  01AB               	clrf	___awdiv@counter
  4499  0F03  0AAB               	incf	___awdiv@counter,f
  4500  0F04                     l2260:	
  4501  0F04  1BA7               	btfsc	___awdiv@divisor+1,7
  4502  0F05  2F10               	goto	l2262
  4503  0F06  3001               	movlw	1
  4504  0F07                     u1895:	
  4505  0F07  35A6               	lslf	___awdiv@divisor,f
  4506  0F08  0DA7               	rlf	___awdiv@divisor+1,f
  4507  0F09  0B89               	decfsz	9,f
  4508  0F0A  2F07               	goto	u1895
  4509  0F0B  3001               	movlw	1
  4510  0F0C  00AA               	movwf	??___awdiv
  4511  0F0D  082A               	movf	??___awdiv,w
  4512  0F0E  07AB               	addwf	___awdiv@counter,f
  4513  0F0F  2F04               	goto	l2260
  4514  0F10                     l2262:	
  4515  0F10  3001               	movlw	1
  4516  0F11                     u1915:	
  4517  0F11  35AD               	lslf	___awdiv@quotient,f
  4518  0F12  0DAE               	rlf	___awdiv@quotient+1,f
  4519  0F13  0B89               	decfsz	9,f
  4520  0F14  2F11               	goto	u1915
  4521  0F15  0827               	movf	___awdiv@divisor+1,w
  4522  0F16  0229               	subwf	___awdiv@dividend+1,w
  4523  0F17  1D03               	skipz
  4524  0F18  2F1B               	goto	u1925
  4525  0F19  0826               	movf	___awdiv@divisor,w
  4526  0F1A  0228               	subwf	___awdiv@dividend,w
  4527  0F1B                     u1925:	
  4528  0F1B  1C03               	skipc
  4529  0F1C  2F22               	goto	l2268
  4530  0F1D  0826               	movf	___awdiv@divisor,w
  4531  0F1E  02A8               	subwf	___awdiv@dividend,f
  4532  0F1F  0827               	movf	___awdiv@divisor+1,w
  4533  0F20  3BA9               	subwfb	___awdiv@dividend+1,f
  4534  0F21  142D               	bsf	___awdiv@quotient,0
  4535  0F22                     l2268:	
  4536  0F22  3001               	movlw	1
  4537  0F23                     u1935:	
  4538  0F23  36A7               	lsrf	___awdiv@divisor+1,f
  4539  0F24  0CA6               	rrf	___awdiv@divisor,f
  4540  0F25  0B89               	decfsz	9,f
  4541  0F26  2F23               	goto	u1935
  4542  0F27  3001               	movlw	1
  4543  0F28  02AB               	subwf	___awdiv@counter,f
  4544  0F29  1D03               	btfss	3,2
  4545  0F2A  2F10               	goto	l2262
  4546  0F2B                     l2272:	
  4547  0F2B  082C               	movf	___awdiv@sign,w
  4548  0F2C  1903               	btfsc	3,2
  4549  0F2D  2F33               	goto	l2276
  4550  0F2E  09AD               	comf	___awdiv@quotient,f
  4551  0F2F  09AE               	comf	___awdiv@quotient+1,f
  4552  0F30  0AAD               	incf	___awdiv@quotient,f
  4553  0F31  1903               	skipnz
  4554  0F32  0AAE               	incf	___awdiv@quotient+1,f
  4555  0F33                     l2276:	
  4556  0F33  082E               	movf	___awdiv@quotient+1,w
  4557  0F34  01A7               	clrf	?___awdiv+1
  4558  0F35  07A7               	addwf	?___awdiv+1,f
  4559  0F36  082D               	movf	___awdiv@quotient,w
  4560  0F37  01A6               	clrf	?___awdiv
  4561  0F38  07A6               	addwf	?___awdiv,f
  4562  0F39  0008               	return
  4563  0F3A                     __end_of___awdiv:	
  4564                           
  4565                           	psect	text15
  4566  0788                     __ptext15:	
  4567 ;; *************** function _SendGPSSPI *****************
  4568 ;; Defined at:
  4569 ;;		line 608 in file "launcher_functions.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  address         4   22[BANK0 ] long 
  4574 ;;  x               2   26[BANK0 ] int 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4584 ;;      Params:         0       0       0       0       0       0       0       0
  4585 ;;      Locals:         0       6       0       0       0       0       0       0
  4586 ;;      Temps:          0       1       0       0       0       0       0       0
  4587 ;;      Totals:         0       7       0       0       0       0       0       0
  4588 ;;Total ram usage:        7 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    5
  4591 ;; This function calls:
  4592 ;;		_WriteOverheadSPI
  4593 ;;		_WriteSPI
  4594 ;; This function is called by:
  4595 ;;		_main
  4596 ;;		_DecodeGPS
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _SendGPSSPI
  4602  0788                     _SendGPSSPI:	
  4603                           
  4604                           ;launcher_functions.c: 610: long int address = 0x135C0 + 3;
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4608  0788  3000               	movlw	0
  4609  0789  0020               	movlb	0	; select bank0
  4610  078A  00B9               	movwf	SendGPSSPI@address+3
  4611  078B  3001               	movlw	1
  4612  078C  00B8               	movwf	SendGPSSPI@address+2
  4613  078D  3035               	movlw	53
  4614  078E  00B7               	movwf	SendGPSSPI@address+1
  4615  078F  30C3               	movlw	195
  4616  0790  00B6               	movwf	SendGPSSPI@address
  4617                           
  4618                           ;launcher_functions.c: 611: int x;
  4619                           ;launcher_functions.c: 612: PORTAbits.RA4 = 1;
  4620  0791  160C               	bsf	12,4	;volatile
  4621                           
  4622                           ;launcher_functions.c: 615: WriteOverheadSPI(address);
  4623  0792  0839               	movf	SendGPSSPI@address+3,w
  4624  0793  00AA               	movwf	WriteOverheadSPI@address+3
  4625  0794  0838               	movf	SendGPSSPI@address+2,w
  4626  0795  00A9               	movwf	WriteOverheadSPI@address+2
  4627  0796  0837               	movf	SendGPSSPI@address+1,w
  4628  0797  00A8               	movwf	WriteOverheadSPI@address+1
  4629  0798  0836               	movf	SendGPSSPI@address,w
  4630  0799  00A7               	movwf	WriteOverheadSPI@address
  4631  079A  318F  273A  3187   	fcall	_WriteOverheadSPI
  4632                           
  4633                           ;launcher_functions.c: 616: for(x=0;x<3;x++)
  4634  079D  0020               	movlb	0	; select bank0
  4635  079E  01BA               	clrf	SendGPSSPI@x
  4636  079F  01BB               	clrf	SendGPSSPI@x+1
  4637  07A0  083B               	movf	SendGPSSPI@x+1,w
  4638  07A1  3A80               	xorlw	128
  4639  07A2  00B5               	movwf	??_SendGPSSPI
  4640  07A3  3080               	movlw	128
  4641  07A4  0235               	subwf	??_SendGPSSPI,w
  4642  07A5  1D03               	skipz
  4643  07A6  2FA9               	goto	u1615
  4644  07A7  3003               	movlw	3
  4645  07A8  023A               	subwf	SendGPSSPI@x,w
  4646  07A9                     u1615:	
  4647  07A9  1803               	btfsc	3,0
  4648  07AA  2FC4               	goto	l2082
  4649  07AB                     l2076:	
  4650                           
  4651                           ;launcher_functions.c: 617: {
  4652                           ;launcher_functions.c: 618: WriteSPI(validLatitude[x]);
  4653  07AB  0020               	movlb	0	; select bank0
  4654  07AC  083A               	movf	SendGPSSPI@x,w
  4655  07AD  3EE2               	addlw	_validLatitude& (0+255)
  4656  07AE  0086               	movwf	6
  4657  07AF  0187               	clrf	7
  4658  07B0  0801               	movf	1,w
  4659  07B1  318D  252E  3187   	fcall	_WriteSPI
  4660  07B4  3001               	movlw	1
  4661  07B5  0020               	movlb	0	; select bank0
  4662  07B6  07BA               	addwf	SendGPSSPI@x,f
  4663  07B7  3000               	movlw	0
  4664  07B8  3DBB               	addwfc	SendGPSSPI@x+1,f
  4665  07B9  083B               	movf	SendGPSSPI@x+1,w
  4666  07BA  3A80               	xorlw	128
  4667  07BB  00B5               	movwf	??_SendGPSSPI
  4668  07BC  3080               	movlw	128
  4669  07BD  0235               	subwf	??_SendGPSSPI,w
  4670  07BE  1D03               	skipz
  4671  07BF  2FC2               	goto	u1625
  4672  07C0  3003               	movlw	3
  4673  07C1  023A               	subwf	SendGPSSPI@x,w
  4674  07C2                     u1625:	
  4675  07C2  1C03               	skipc
  4676  07C3  2FAB               	goto	l2076
  4677  07C4                     l2082:	
  4678                           
  4679                           ;launcher_functions.c: 619: }
  4680                           ;launcher_functions.c: 620: WriteSPI(validNorthSouth);
  4681  07C4  0021               	movlb	1	; select bank1
  4682  07C5  086A               	movf	_validNorthSouth^(0+128),w
  4683  07C6  318D  252E  3187   	fcall	_WriteSPI
  4684                           
  4685                           ;launcher_functions.c: 621: for(x=0;x<3;x++)
  4686  07C9  0020               	movlb	0	; select bank0
  4687  07CA  01BA               	clrf	SendGPSSPI@x
  4688  07CB  01BB               	clrf	SendGPSSPI@x+1
  4689  07CC  083B               	movf	SendGPSSPI@x+1,w
  4690  07CD  3A80               	xorlw	128
  4691  07CE  00B5               	movwf	??_SendGPSSPI
  4692  07CF  3080               	movlw	128
  4693  07D0  0235               	subwf	??_SendGPSSPI,w
  4694  07D1  1D03               	skipz
  4695  07D2  2FD5               	goto	u1635
  4696  07D3  3003               	movlw	3
  4697  07D4  023A               	subwf	SendGPSSPI@x,w
  4698  07D5                     u1635:	
  4699  07D5  1803               	btfsc	3,0
  4700  07D6  2FF0               	goto	l2096
  4701  07D7                     l2090:	
  4702                           
  4703                           ;launcher_functions.c: 622: {
  4704                           ;launcher_functions.c: 623: WriteSPI(validLongitude[x]);
  4705  07D7  0020               	movlb	0	; select bank0
  4706  07D8  083A               	movf	SendGPSSPI@x,w
  4707  07D9  3EE5               	addlw	_validLongitude& (0+255)
  4708  07DA  0086               	movwf	6
  4709  07DB  0187               	clrf	7
  4710  07DC  0801               	movf	1,w
  4711  07DD  318D  252E  3187   	fcall	_WriteSPI
  4712  07E0  3001               	movlw	1
  4713  07E1  0020               	movlb	0	; select bank0
  4714  07E2  07BA               	addwf	SendGPSSPI@x,f
  4715  07E3  3000               	movlw	0
  4716  07E4  3DBB               	addwfc	SendGPSSPI@x+1,f
  4717  07E5  083B               	movf	SendGPSSPI@x+1,w
  4718  07E6  3A80               	xorlw	128
  4719  07E7  00B5               	movwf	??_SendGPSSPI
  4720  07E8  3080               	movlw	128
  4721  07E9  0235               	subwf	??_SendGPSSPI,w
  4722  07EA  1D03               	skipz
  4723  07EB  2FEE               	goto	u1645
  4724  07EC  3003               	movlw	3
  4725  07ED  023A               	subwf	SendGPSSPI@x,w
  4726  07EE                     u1645:	
  4727  07EE  1C03               	skipc
  4728  07EF  2FD7               	goto	l2090
  4729  07F0                     l2096:	
  4730                           
  4731                           ;launcher_functions.c: 624: }
  4732                           ;launcher_functions.c: 625: WriteSPI(validEastWest);
  4733  07F0  0021               	movlb	1	; select bank1
  4734  07F1  0869               	movf	_validEastWest^(0+128),w
  4735  07F2  318D  252E         	fcall	_WriteSPI
  4736                           
  4737                           ;launcher_functions.c: 626: LATC2 = (1);
  4738  07F4  0022               	movlb	2	; select bank2
  4739  07F5  150E               	bsf	14,2	;volatile
  4740                           
  4741                           ;launcher_functions.c: 627: PORTAbits.RA4 = 0;
  4742  07F6  0020               	movlb	0	; select bank0
  4743  07F7  120C               	bcf	12,4	;volatile
  4744  07F8  0008               	return
  4745  07F9                     __end_of_SendGPSSPI:	
  4746                           
  4747                           	psect	text16
  4748  0381                     __ptext16:	
  4749 ;; *************** function _RecordMode *****************
  4750 ;; Defined at:
  4751 ;;		line 534 in file "launcher_functions.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  address         4   28[BANK0 ] long 
  4756 ;;  count           2   26[BANK0 ] int 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;		None               void
  4759 ;; Registers used:
  4760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4766 ;;      Params:         0       0       0       0       0       0       0       0
  4767 ;;      Locals:         0       6       0       0       0       0       0       0
  4768 ;;      Temps:          0       5       0       0       0       0       0       0
  4769 ;;      Totals:         0      11       0       0       0       0       0       0
  4770 ;;Total ram usage:       11 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    5
  4773 ;; This function calls:
  4774 ;;		_InitSPI
  4775 ;;		_ReadBuffer
  4776 ;;		_WriteOverheadSPI
  4777 ;;		_WriteSPI
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           
  4784                           ;psect for function _RecordMode
  4785  0381                     _RecordMode:	
  4786                           
  4787                           ;launcher_functions.c: 536: PORTAbits.RA4 = 1;
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4791  0381  0020               	movlb	0	; select bank0
  4792  0382  160C               	bsf	12,4	;volatile
  4793                           
  4794                           ;launcher_functions.c: 537: long int address = 0x135C0+11;
  4795  0383  3000               	movlw	0
  4796  0384  00BF               	movwf	RecordMode@address+3
  4797  0385  3001               	movlw	1
  4798  0386  00BE               	movwf	RecordMode@address+2
  4799  0387  3035               	movlw	53
  4800  0388  00BD               	movwf	RecordMode@address+1
  4801  0389  30CB               	movlw	203
  4802  038A  00BC               	movwf	RecordMode@address
  4803                           
  4804                           ;launcher_functions.c: 538: int count = 203;
  4805  038B  30CB               	movlw	203
  4806  038C  00BA               	movwf	RecordMode@count
  4807  038D  3000               	movlw	0
  4808  038E  00BB               	movwf	RecordMode@count+1
  4809                           
  4810                           ;launcher_functions.c: 542: InitSPI();
  4811  038F  318D  250A  3183   	fcall	_InitSPI
  4812                           
  4813                           ;launcher_functions.c: 544: (start) = 0;
  4814  0392  01FB               	clrf	_start
  4815  0393  01FC               	clrf	_start+1
  4816                           
  4817                           ;launcher_functions.c: 545: (end) = 0;
  4818  0394  01F9               	clrf	_end
  4819  0395  01FA               	clrf	_end+1
  4820                           
  4821                           ;launcher_functions.c: 546: WriteOverheadSPI(address);
  4822  0396  0020               	movlb	0	; select bank0
  4823  0397  083F               	movf	RecordMode@address+3,w
  4824  0398  00AA               	movwf	WriteOverheadSPI@address+3
  4825  0399  083E               	movf	RecordMode@address+2,w
  4826  039A  00A9               	movwf	WriteOverheadSPI@address+2
  4827  039B  083D               	movf	RecordMode@address+1,w
  4828  039C  00A8               	movwf	WriteOverheadSPI@address+1
  4829  039D  083C               	movf	RecordMode@address,w
  4830  039E  00A7               	movwf	WriteOverheadSPI@address
  4831  039F  318F  273A  3183   	fcall	_WriteOverheadSPI
  4832                           
  4833                           ;launcher_functions.c: 548: TMR1IF = 0;
  4834  03A2  0020               	movlb	0	; select bank0
  4835  03A3  1011               	bcf	17,0	;volatile
  4836                           
  4837                           ;launcher_functions.c: 549: TMR1IE = 1;
  4838  03A4  0021               	movlb	1	; select bank1
  4839  03A5  1411               	bsf	17,0	;volatile
  4840                           
  4841                           ;launcher_functions.c: 550: TMR1ON = 1;
  4842  03A6  0020               	movlb	0	; select bank0
  4843  03A7  1418               	bsf	24,0	;volatile
  4844  03A8                     l2614:	
  4845                           ;launcher_functions.c: 552: while((recordFlag) && (address < 131072))
  4846                           
  4847  03A8  0021               	movlb	1	; select bank1
  4848  03A9  086C               	movf	_recordFlag^(0+128),w
  4849  03AA  1903               	btfsc	3,2
  4850  03AB  2C2F               	goto	l2634
  4851  03AC  0020               	movlb	0	; select bank0
  4852  03AD  083F               	movf	RecordMode@address+3,w
  4853  03AE  3A80               	xorlw	128
  4854  03AF  00B5               	movwf	??_RecordMode
  4855  03B0  3000               	movlw	0
  4856  03B1  3A80               	xorlw	128
  4857  03B2  0235               	subwf	??_RecordMode,w
  4858  03B3  1D03               	skipz
  4859  03B4  2BBF               	goto	u2163
  4860  03B5  3002               	movlw	2
  4861  03B6  023E               	subwf	RecordMode@address+2,w
  4862  03B7  1D03               	skipz
  4863  03B8  2BBF               	goto	u2163
  4864  03B9  3000               	movlw	0
  4865  03BA  023D               	subwf	RecordMode@address+1,w
  4866  03BB  1D03               	skipz
  4867  03BC  2BBF               	goto	u2163
  4868  03BD  3000               	movlw	0
  4869  03BE  023C               	subwf	RecordMode@address,w
  4870  03BF                     u2163:	
  4871  03BF  1803               	btfsc	3,0
  4872  03C0  2C2E               	goto	l438
  4873                           
  4874                           ;launcher_functions.c: 553: {
  4875                           ;launcher_functions.c: 554: if(count>=256)
  4876  03C1  083B               	movf	RecordMode@count+1,w
  4877  03C2  3A80               	xorlw	128
  4878  03C3  00B5               	movwf	??_RecordMode
  4879  03C4  3081               	movlw	129
  4880  03C5  0235               	subwf	??_RecordMode,w
  4881  03C6  1D03               	skipz
  4882  03C7  2BCA               	goto	u2135
  4883  03C8  3000               	movlw	0
  4884  03C9  023A               	subwf	RecordMode@count,w
  4885  03CA                     u2135:	
  4886  03CA  1C03               	skipc
  4887  03CB  2BDC               	goto	l2606
  4888                           
  4889                           ;launcher_functions.c: 555: {
  4890                           ;launcher_functions.c: 556: LATC2 = (1);
  4891  03CC  0022               	movlb	2	; select bank2
  4892  03CD  150E               	bsf	14,2	;volatile
  4893                           
  4894                           ;launcher_functions.c: 557: count = 0;
  4895  03CE  0020               	movlb	0	; select bank0
  4896  03CF  01BA               	clrf	RecordMode@count
  4897  03D0  01BB               	clrf	RecordMode@count+1
  4898                           
  4899                           ;launcher_functions.c: 558: WriteOverheadSPI(address);
  4900  03D1  083F               	movf	RecordMode@address+3,w
  4901  03D2  00AA               	movwf	WriteOverheadSPI@address+3
  4902  03D3  083E               	movf	RecordMode@address+2,w
  4903  03D4  00A9               	movwf	WriteOverheadSPI@address+2
  4904  03D5  083D               	movf	RecordMode@address+1,w
  4905  03D6  00A8               	movwf	WriteOverheadSPI@address+1
  4906  03D7  083C               	movf	RecordMode@address,w
  4907  03D8  00A7               	movwf	WriteOverheadSPI@address
  4908  03D9  318F  273A  3183   	fcall	_WriteOverheadSPI
  4909  03DC                     l2606:	
  4910                           
  4911                           ;launcher_functions.c: 559: }
  4912                           ;launcher_functions.c: 560: if(!((((start))==((end)))?(1):(0)))
  4913  03DC  087A               	movf	_end+1,w
  4914  03DD  067C               	xorwf	_start+1,w
  4915  03DE  1D03               	skipz
  4916  03DF  2BE2               	goto	u2145
  4917  03E0  0879               	movf	_end,w
  4918  03E1  067B               	xorwf	_start,w
  4919  03E2                     u2145:	
  4920  03E2  1903               	skipnz
  4921  03E3  2BA8               	goto	l2614
  4922                           
  4923                           ;launcher_functions.c: 561: {
  4924                           ;launcher_functions.c: 562: WriteSPI(ReadBuffer());
  4925  03E4  318D  2558  3183   	fcall	_ReadBuffer
  4926  03E7  318D  252E  3183   	fcall	_WriteSPI
  4927                           
  4928                           ;launcher_functions.c: 563: address++;
  4929  03EA  3001               	movlw	1
  4930  03EB  0020               	movlb	0	; select bank0
  4931  03EC  07BC               	addwf	RecordMode@address,f
  4932  03ED  3000               	movlw	0
  4933  03EE  3DBD               	addwfc	RecordMode@address+1,f
  4934  03EF  3000               	movlw	0
  4935  03F0  3DBE               	addwfc	RecordMode@address+2,f
  4936  03F1  3000               	movlw	0
  4937  03F2  3DBF               	addwfc	RecordMode@address+3,f
  4938                           
  4939                           ;launcher_functions.c: 564: count++;
  4940  03F3  3001               	movlw	1
  4941  03F4  07BA               	addwf	RecordMode@count,f
  4942  03F5  3000               	movlw	0
  4943  03F6  3DBB               	addwfc	RecordMode@count+1,f
  4944  03F7  2BA8               	goto	l2614
  4945  03F8                     l2618:	
  4946                           ;launcher_functions.c: 565: }
  4947                           ;launcher_functions.c: 567: }
  4948                           ;launcher_functions.c: 568: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4949                           
  4950                           
  4951                           ;launcher_functions.c: 569: {
  4952                           ;launcher_functions.c: 570: if(count>=256)
  4953  03F8  083B               	movf	RecordMode@count+1,w
  4954  03F9  3A80               	xorlw	128
  4955  03FA  00B5               	movwf	??_RecordMode
  4956  03FB  3081               	movlw	129
  4957  03FC  0235               	subwf	??_RecordMode,w
  4958  03FD  1D03               	skipz
  4959  03FE  2C01               	goto	u2175
  4960  03FF  3000               	movlw	0
  4961  0400  023A               	subwf	RecordMode@count,w
  4962  0401                     u2175:	
  4963  0401  1C03               	skipc
  4964  0402  2C13               	goto	l2626
  4965                           
  4966                           ;launcher_functions.c: 571: {
  4967                           ;launcher_functions.c: 572: LATC2 = (1);
  4968  0403  0022               	movlb	2	; select bank2
  4969  0404  150E               	bsf	14,2	;volatile
  4970                           
  4971                           ;launcher_functions.c: 573: count = 0;
  4972  0405  0020               	movlb	0	; select bank0
  4973  0406  01BA               	clrf	RecordMode@count
  4974  0407  01BB               	clrf	RecordMode@count+1
  4975                           
  4976                           ;launcher_functions.c: 574: WriteOverheadSPI(address);
  4977  0408  083F               	movf	RecordMode@address+3,w
  4978  0409  00AA               	movwf	WriteOverheadSPI@address+3
  4979  040A  083E               	movf	RecordMode@address+2,w
  4980  040B  00A9               	movwf	WriteOverheadSPI@address+2
  4981  040C  083D               	movf	RecordMode@address+1,w
  4982  040D  00A8               	movwf	WriteOverheadSPI@address+1
  4983  040E  083C               	movf	RecordMode@address,w
  4984  040F  00A7               	movwf	WriteOverheadSPI@address
  4985  0410  318F  273A  3183   	fcall	_WriteOverheadSPI
  4986  0413                     l2626:	
  4987                           
  4988                           ;launcher_functions.c: 575: }
  4989                           ;launcher_functions.c: 576: if(!((((start))==((end)))?(1):(0)))
  4990  0413  087A               	movf	_end+1,w
  4991  0414  067C               	xorwf	_start+1,w
  4992  0415  1D03               	skipz
  4993  0416  2C19               	goto	u2185
  4994  0417  0879               	movf	_end,w
  4995  0418  067B               	xorwf	_start,w
  4996  0419                     u2185:	
  4997  0419  1903               	skipnz
  4998  041A  2C2E               	goto	l438
  4999                           
  5000                           ;launcher_functions.c: 577: {
  5001                           ;launcher_functions.c: 578: WriteSPI(ReadBuffer());
  5002  041B  318D  2558  3183   	fcall	_ReadBuffer
  5003  041E  318D  252E  3183   	fcall	_WriteSPI
  5004                           
  5005                           ;launcher_functions.c: 579: address++;
  5006  0421  3001               	movlw	1
  5007  0422  0020               	movlb	0	; select bank0
  5008  0423  07BC               	addwf	RecordMode@address,f
  5009  0424  3000               	movlw	0
  5010  0425  3DBD               	addwfc	RecordMode@address+1,f
  5011  0426  3000               	movlw	0
  5012  0427  3DBE               	addwfc	RecordMode@address+2,f
  5013  0428  3000               	movlw	0
  5014  0429  3DBF               	addwfc	RecordMode@address+3,f
  5015                           
  5016                           ;launcher_functions.c: 580: count++;
  5017  042A  3001               	movlw	1
  5018  042B  07BA               	addwf	RecordMode@count,f
  5019  042C  3000               	movlw	0
  5020  042D  3DBB               	addwfc	RecordMode@count+1,f
  5021  042E                     l438:	
  5022  042E  0021               	movlb	1	; select bank1
  5023  042F                     l2634:	
  5024  042F  087A               	movf	_end+1,w
  5025  0430  067C               	xorwf	_start+1,w
  5026  0431  1D03               	skipz
  5027  0432  2C35               	goto	u2195
  5028  0433  0879               	movf	_end,w
  5029  0434  067B               	xorwf	_start,w
  5030  0435                     u2195:	
  5031  0435  1903               	skipnz
  5032  0436  2C4C               	goto	l441
  5033  0437  0020               	movlb	0	; select bank0
  5034  0438  083F               	movf	RecordMode@address+3,w
  5035  0439  3A80               	xorlw	128
  5036  043A  00B5               	movwf	??_RecordMode
  5037  043B  3000               	movlw	0
  5038  043C  3A80               	xorlw	128
  5039  043D  0235               	subwf	??_RecordMode,w
  5040  043E  1D03               	skipz
  5041  043F  2C4A               	goto	u2203
  5042  0440  3002               	movlw	2
  5043  0441  023E               	subwf	RecordMode@address+2,w
  5044  0442  1D03               	skipz
  5045  0443  2C4A               	goto	u2203
  5046  0444  3000               	movlw	0
  5047  0445  023D               	subwf	RecordMode@address+1,w
  5048  0446  1D03               	skipz
  5049  0447  2C4A               	goto	u2203
  5050  0448  3000               	movlw	0
  5051  0449  023C               	subwf	RecordMode@address,w
  5052  044A                     u2203:	
  5053  044A  1C03               	skipc
  5054  044B  2BF8               	goto	l2618
  5055  044C                     l441:	
  5056                           
  5057                           ;launcher_functions.c: 581: }
  5058                           ;launcher_functions.c: 582: }
  5059                           ;launcher_functions.c: 583: LATC2 = (1);
  5060  044C  0022               	movlb	2	; select bank2
  5061  044D  150E               	bsf	14,2	;volatile
  5062                           
  5063                           ;launcher_functions.c: 584: TMR1IE = 0;
  5064  044E  0021               	movlb	1	; select bank1
  5065  044F  1011               	bcf	17,0	;volatile
  5066                           
  5067                           ;launcher_functions.c: 585: TMR1ON = 0;
  5068  0450  0020               	movlb	0	; select bank0
  5069  0451  1018               	bcf	24,0	;volatile
  5070                           
  5071                           ;launcher_functions.c: 586: _delay((unsigned long)((5)*(16000000/4000.0)));
  5072  0452  301A               	movlw	26
  5073  0453  00B6               	movwf	??_RecordMode+1
  5074  0454  30F8               	movlw	248
  5075  0455  00B5               	movwf	??_RecordMode
  5076  0456                     u2807:	
  5077  0456  0BB5               	decfsz	??_RecordMode,f
  5078  0457  2C56               	goto	u2807
  5079  0458  0BB6               	decfsz	??_RecordMode+1,f
  5080  0459  2C56               	goto	u2807
  5081  045A  0000               	nop
  5082                           
  5083                           ;launcher_functions.c: 587: WriteOverheadSPI(0x135C0);
  5084  045B  3000               	movlw	0
  5085  045C  0020               	movlb	0	; select bank0
  5086  045D  00AA               	movwf	WriteOverheadSPI@address+3
  5087  045E  3001               	movlw	1
  5088  045F  00A9               	movwf	WriteOverheadSPI@address+2
  5089  0460  3035               	movlw	53
  5090  0461  00A8               	movwf	WriteOverheadSPI@address+1
  5091  0462  30C0               	movlw	192
  5092  0463  00A7               	movwf	WriteOverheadSPI@address
  5093  0464  318F  273A  3183   	fcall	_WriteOverheadSPI
  5094                           
  5095                           ;launcher_functions.c: 588: if(address >= 131072)
  5096  0467  0020               	movlb	0	; select bank0
  5097  0468  083F               	movf	RecordMode@address+3,w
  5098  0469  3A80               	xorlw	128
  5099  046A  00B5               	movwf	??_RecordMode
  5100  046B  3000               	movlw	0
  5101  046C  3A80               	xorlw	128
  5102  046D  0235               	subwf	??_RecordMode,w
  5103  046E  1D03               	skipz
  5104  046F  2C7A               	goto	u2213
  5105  0470  3002               	movlw	2
  5106  0471  023E               	subwf	RecordMode@address+2,w
  5107  0472  1D03               	skipz
  5108  0473  2C7A               	goto	u2213
  5109  0474  3000               	movlw	0
  5110  0475  023D               	subwf	RecordMode@address+1,w
  5111  0476  1D03               	skipz
  5112  0477  2C7A               	goto	u2213
  5113  0478  3000               	movlw	0
  5114  0479  023C               	subwf	RecordMode@address,w
  5115  047A                     u2213:	
  5116  047A  1C03               	skipc
  5117  047B  2C86               	goto	l2646
  5118                           
  5119                           ;launcher_functions.c: 589: {
  5120                           ;launcher_functions.c: 590: WriteSPI((131072 - 1)>>16);
  5121  047C  3001               	movlw	1
  5122  047D  318D  252E  3183   	fcall	_WriteSPI
  5123                           
  5124                           ;launcher_functions.c: 591: WriteSPI((131072 - 1)>>8);
  5125  0480  30FF               	movlw	255
  5126  0481  318D  252E  3183   	fcall	_WriteSPI
  5127                           
  5128                           ;launcher_functions.c: 592: WriteSPI(131072 - 1);
  5129  0484  30FF               	movlw	255
  5130  0485  2CB2               	goto	L4
  5131  0486                     l2646:	
  5132                           ;launcher_functions.c: 593: }
  5133                           
  5134                           
  5135                           ;launcher_functions.c: 594: else
  5136                           ;launcher_functions.c: 595: {
  5137                           ;launcher_functions.c: 596: WriteSPI(address>>16);
  5138  0486  0020               	movlb	0	; select bank0
  5139  0487  083C               	movf	RecordMode@address,w
  5140  0488  00B5               	movwf	??_RecordMode
  5141  0489  083D               	movf	RecordMode@address+1,w
  5142  048A  00B6               	movwf	??_RecordMode+1
  5143  048B  083E               	movf	RecordMode@address+2,w
  5144  048C  00B7               	movwf	??_RecordMode+2
  5145  048D  083F               	movf	RecordMode@address+3,w
  5146  048E  00B8               	movwf	??_RecordMode+3
  5147  048F  3010               	movlw	16
  5148  0490  00B9               	movwf	??_RecordMode+4
  5149  0491                     u2225:	
  5150  0491  37B8               	asrf	??_RecordMode+3,f
  5151  0492  0CB7               	rrf	??_RecordMode+2,f
  5152  0493  0CB6               	rrf	??_RecordMode+1,f
  5153  0494  0CB5               	rrf	??_RecordMode,f
  5154  0495  0BB9               	decfsz	??_RecordMode+4,f
  5155  0496  2C91               	goto	u2225
  5156  0497  0835               	movf	??_RecordMode,w
  5157  0498  318D  252E  3183   	fcall	_WriteSPI
  5158                           
  5159                           ;launcher_functions.c: 597: WriteSPI(address>>8);
  5160  049B  0020               	movlb	0	; select bank0
  5161  049C  083C               	movf	RecordMode@address,w
  5162  049D  00B5               	movwf	??_RecordMode
  5163  049E  083D               	movf	RecordMode@address+1,w
  5164  049F  00B6               	movwf	??_RecordMode+1
  5165  04A0  083E               	movf	RecordMode@address+2,w
  5166  04A1  00B7               	movwf	??_RecordMode+2
  5167  04A2  083F               	movf	RecordMode@address+3,w
  5168  04A3  00B8               	movwf	??_RecordMode+3
  5169  04A4  3008               	movlw	8
  5170  04A5  00B9               	movwf	??_RecordMode+4
  5171  04A6                     u2235:	
  5172  04A6  37B8               	asrf	??_RecordMode+3,f
  5173  04A7  0CB7               	rrf	??_RecordMode+2,f
  5174  04A8  0CB6               	rrf	??_RecordMode+1,f
  5175  04A9  0CB5               	rrf	??_RecordMode,f
  5176  04AA  0BB9               	decfsz	??_RecordMode+4,f
  5177  04AB  2CA6               	goto	u2235
  5178  04AC  0835               	movf	??_RecordMode,w
  5179  04AD  318D  252E  3183   	fcall	_WriteSPI
  5180                           
  5181                           ;launcher_functions.c: 598: WriteSPI(address);
  5182  04B0  0020               	movlb	0	; select bank0
  5183  04B1  083C               	movf	RecordMode@address,w
  5184  04B2                     L4:	
  5185  04B2  318D  252E         	fcall	_WriteSPI
  5186                           
  5187                           ;launcher_functions.c: 599: }
  5188                           ;launcher_functions.c: 600: LATC2 = (1);
  5189  04B4  0022               	movlb	2	; select bank2
  5190  04B5  150E               	bsf	14,2	;volatile
  5191                           
  5192                           ;launcher_functions.c: 601: (start) = 0;
  5193  04B6  01FB               	clrf	_start
  5194  04B7  01FC               	clrf	_start+1
  5195                           
  5196                           ;launcher_functions.c: 602: (end) = 0;
  5197  04B8  01F9               	clrf	_end
  5198  04B9  01FA               	clrf	_end+1
  5199                           
  5200                           ;launcher_functions.c: 603: SSPCON1bits.SSPEN=0;
  5201  04BA  0024               	movlb	4	; select bank4
  5202  04BB  1295               	bcf	21,5	;volatile
  5203                           
  5204                           ;launcher_functions.c: 604: PORTCbits.RC5 = 0;
  5205  04BC  0020               	movlb	0	; select bank0
  5206  04BD  128E               	bcf	14,5	;volatile
  5207                           
  5208                           ;launcher_functions.c: 605: PORTAbits.RA4 = 0;
  5209  04BE  120C               	bcf	12,4	;volatile
  5210  04BF  0008               	return
  5211  04C0                     __end_of_RecordMode:	
  5212                           
  5213                           	psect	text17
  5214  0F3A                     __ptext17:	
  5215 ;; *************** function _WriteOverheadSPI *****************
  5216 ;; Defined at:
  5217 ;;		line 168 in file "launcher_functions.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  address         4    7[BANK0 ] long 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5222 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;		None               void
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0, pclath, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5232 ;;      Params:         0       4       0       0       0       0       0       0
  5233 ;;      Locals:         0       4       0       0       0       0       0       0
  5234 ;;      Temps:          0       6       0       0       0       0       0       0
  5235 ;;      Totals:         0      14       0       0       0       0       0       0
  5236 ;;Total ram usage:       14 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    4
  5239 ;; This function calls:
  5240 ;;		_ReadStatusSPI
  5241 ;;		_WriteSPI
  5242 ;; This function is called by:
  5243 ;;		_RecordMode
  5244 ;;		_SendGPSSPI
  5245 ;;		_PreRecordMode
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           
  5250                           ;psect for function _WriteOverheadSPI
  5251  0F3A                     _WriteOverheadSPI:	
  5252                           
  5253                           ;launcher_functions.c: 170: unsigned char address_bytes[3];
  5254                           ;launcher_functions.c: 171: unsigned char StatusReg;
  5255                           ;launcher_functions.c: 173: address_bytes[0]=(unsigned char)(address>>16);
  5256                           
  5257                           ;incstack = 0
  5258                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5259  0F3A  0020               	movlb	0	; select bank0
  5260  0F3B  0827               	movf	WriteOverheadSPI@address,w
  5261  0F3C  00AB               	movwf	??_WriteOverheadSPI
  5262  0F3D  0828               	movf	WriteOverheadSPI@address+1,w
  5263  0F3E  00AC               	movwf	??_WriteOverheadSPI+1
  5264  0F3F  0829               	movf	WriteOverheadSPI@address+2,w
  5265  0F40  00AD               	movwf	??_WriteOverheadSPI+2
  5266  0F41  082A               	movf	WriteOverheadSPI@address+3,w
  5267  0F42  00AE               	movwf	??_WriteOverheadSPI+3
  5268  0F43  3010               	movlw	16
  5269  0F44  00AF               	movwf	??_WriteOverheadSPI+4
  5270  0F45                     u1395:	
  5271  0F45  37AE               	asrf	??_WriteOverheadSPI+3,f
  5272  0F46  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5273  0F47  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5274  0F48  0CAB               	rrf	??_WriteOverheadSPI,f
  5275  0F49  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5276  0F4A  2F45               	goto	u1395
  5277  0F4B  082B               	movf	??_WriteOverheadSPI,w
  5278  0F4C  00B0               	movwf	??_WriteOverheadSPI+5
  5279  0F4D  0830               	movf	??_WriteOverheadSPI+5,w
  5280  0F4E  00B1               	movwf	WriteOverheadSPI@address_bytes
  5281                           
  5282                           ;launcher_functions.c: 174: address_bytes[1]=(unsigned char)(address>>8);
  5283  0F4F  0827               	movf	WriteOverheadSPI@address,w
  5284  0F50  00AB               	movwf	??_WriteOverheadSPI
  5285  0F51  0828               	movf	WriteOverheadSPI@address+1,w
  5286  0F52  00AC               	movwf	??_WriteOverheadSPI+1
  5287  0F53  0829               	movf	WriteOverheadSPI@address+2,w
  5288  0F54  00AD               	movwf	??_WriteOverheadSPI+2
  5289  0F55  082A               	movf	WriteOverheadSPI@address+3,w
  5290  0F56  00AE               	movwf	??_WriteOverheadSPI+3
  5291  0F57  3008               	movlw	8
  5292  0F58  00AF               	movwf	??_WriteOverheadSPI+4
  5293  0F59                     u1405:	
  5294  0F59  37AE               	asrf	??_WriteOverheadSPI+3,f
  5295  0F5A  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5296  0F5B  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5297  0F5C  0CAB               	rrf	??_WriteOverheadSPI,f
  5298  0F5D  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5299  0F5E  2F59               	goto	u1405
  5300  0F5F  082B               	movf	??_WriteOverheadSPI,w
  5301  0F60  00B0               	movwf	??_WriteOverheadSPI+5
  5302  0F61  0830               	movf	??_WriteOverheadSPI+5,w
  5303  0F62  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5304                           
  5305                           ;launcher_functions.c: 175: address_bytes[2]=(unsigned char)(address);
  5306  0F63  0827               	movf	WriteOverheadSPI@address,w
  5307  0F64  00AB               	movwf	??_WriteOverheadSPI
  5308  0F65  082B               	movf	??_WriteOverheadSPI,w
  5309  0F66  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5310  0F67                     l1980:	
  5311                           ;launcher_functions.c: 177: do
  5312                           
  5313                           
  5314                           ;launcher_functions.c: 178: {
  5315                           ;launcher_functions.c: 179: StatusReg = (ReadStatusSPI() & 0x01);
  5316  0F67  318C  24D6  318F   	fcall	_ReadStatusSPI
  5317  0F6A  3901               	andlw	1
  5318  0F6B  0020               	movlb	0	; select bank0
  5319  0F6C  00AB               	movwf	??_WriteOverheadSPI
  5320  0F6D  082B               	movf	??_WriteOverheadSPI,w
  5321  0F6E  00B4               	movwf	WriteOverheadSPI@StatusReg
  5322                           
  5323                           ;launcher_functions.c: 180: } while (StatusReg);
  5324  0F6F  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5325  0F70  1D03               	skipz
  5326  0F71  2F67               	goto	l1980
  5327                           
  5328                           ;launcher_functions.c: 183: LATC2 = (0);
  5329  0F72  0022               	movlb	2	; select bank2
  5330  0F73  110E               	bcf	14,2	;volatile
  5331                           
  5332                           ;launcher_functions.c: 184: WriteSPI((0x06));
  5333  0F74  3006               	movlw	6
  5334  0F75  318D  252E  318F   	fcall	_WriteSPI
  5335                           
  5336                           ;launcher_functions.c: 185: LATC2 = (1);
  5337  0F78  0022               	movlb	2	; select bank2
  5338  0F79  150E               	bsf	14,2	;volatile
  5339  0F7A                     l309:	
  5340                           ;launcher_functions.c: 187: do
  5341                           
  5342                           
  5343                           ;launcher_functions.c: 188: {
  5344                           ;launcher_functions.c: 189: StatusReg = (ReadStatusSPI() & 0x02);
  5345  0F7A  318C  24D6  318F   	fcall	_ReadStatusSPI
  5346  0F7D  3902               	andlw	2
  5347  0F7E  0020               	movlb	0	; select bank0
  5348  0F7F  00AB               	movwf	??_WriteOverheadSPI
  5349  0F80  082B               	movf	??_WriteOverheadSPI,w
  5350  0F81  00B4               	movwf	WriteOverheadSPI@StatusReg
  5351                           
  5352                           ;launcher_functions.c: 190: } while (!StatusReg);
  5353  0F82  0834               	movf	WriteOverheadSPI@StatusReg,w
  5354  0F83  1903               	btfsc	3,2
  5355  0F84  2F7A               	goto	l309
  5356                           
  5357                           ;launcher_functions.c: 194: LATC2=(0);
  5358  0F85  0022               	movlb	2	; select bank2
  5359  0F86  110E               	bcf	14,2	;volatile
  5360                           
  5361                           ;launcher_functions.c: 195: WriteSPI((0x02));
  5362  0F87  3002               	movlw	2
  5363  0F88  318D  252E  318F   	fcall	_WriteSPI
  5364                           
  5365                           ;launcher_functions.c: 196: WriteSPI(address_bytes[0]);
  5366  0F8B  0020               	movlb	0	; select bank0
  5367  0F8C  0831               	movf	WriteOverheadSPI@address_bytes,w
  5368  0F8D  318D  252E  318F   	fcall	_WriteSPI
  5369                           
  5370                           ;launcher_functions.c: 197: WriteSPI(address_bytes[1]);
  5371  0F90  0020               	movlb	0	; select bank0
  5372  0F91  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5373  0F92  318D  252E  318F   	fcall	_WriteSPI
  5374                           
  5375                           ;launcher_functions.c: 198: WriteSPI(address_bytes[2]);
  5376  0F95  0020               	movlb	0	; select bank0
  5377  0F96  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5378  0F97  318D  252E         	fcall	_WriteSPI
  5379  0F99  0008               	return
  5380  0F9A                     __end_of_WriteOverheadSPI:	
  5381                           ;launcher_functions.c: 200: return;
  5382                           
  5383                           
  5384                           	psect	text18
  5385  0CD6                     __ptext18:	
  5386 ;; *************** function _ReadStatusSPI *****************
  5387 ;; Defined at:
  5388 ;;		line 156 in file "launcher_functions.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      unsigned char 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0, pclath, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5402 ;;      Params:         0       0       0       0       0       0       0       0
  5403 ;;      Locals:         0       1       0       0       0       0       0       0
  5404 ;;      Temps:          0       1       0       0       0       0       0       0
  5405 ;;      Totals:         0       2       0       0       0       0       0       0
  5406 ;;Total ram usage:        2 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    3
  5409 ;; This function calls:
  5410 ;;		_ReadSPI
  5411 ;;		_WriteSPI
  5412 ;; This function is called by:
  5413 ;;		_WriteOverheadSPI
  5414 ;;		_ReadOverheadSPI
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           
  5419                           ;psect for function _ReadStatusSPI
  5420  0CD6                     _ReadStatusSPI:	
  5421                           
  5422                           ;launcher_functions.c: 158: unsigned char dataRead;
  5423                           ;launcher_functions.c: 160: LATC2=(0);
  5424                           
  5425                           ;incstack = 0
  5426                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5427  0CD6  0022               	movlb	2	; select bank2
  5428  0CD7  110E               	bcf	14,2	;volatile
  5429                           
  5430                           ;launcher_functions.c: 161: WriteSPI((0x05));
  5431  0CD8  3005               	movlw	5
  5432  0CD9  318D  252E  318C   	fcall	_WriteSPI
  5433                           
  5434                           ;launcher_functions.c: 162: dataRead = ReadSPI();
  5435  0CDC  318C  24AC         	fcall	_ReadSPI
  5436  0CDE  0020               	movlb	0	; select bank0
  5437  0CDF  00A5               	movwf	??_ReadStatusSPI
  5438  0CE0  0825               	movf	??_ReadStatusSPI,w
  5439  0CE1  00A6               	movwf	ReadStatusSPI@dataRead
  5440                           
  5441                           ;launcher_functions.c: 163: LATC2=(1);
  5442  0CE2  0022               	movlb	2	; select bank2
  5443  0CE3  150E               	bsf	14,2	;volatile
  5444                           
  5445                           ;launcher_functions.c: 165: return(dataRead);
  5446  0CE4  0020               	movlb	0	; select bank0
  5447  0CE5  0826               	movf	ReadStatusSPI@dataRead,w
  5448  0CE6  0008               	return
  5449  0CE7                     __end_of_ReadStatusSPI:	
  5450                           
  5451                           	psect	text19
  5452  0D2E                     __ptext19:	
  5453 ;; *************** function _WriteSPI *****************
  5454 ;; Defined at:
  5455 ;;		line 136 in file "launcher_functions.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  databyte        1    wreg     unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  databyte        1    4[BANK0 ] unsigned char 
  5460 ;;  temp            2    2[BANK0 ] unsigned int 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;		None               void
  5463 ;; Registers used:
  5464 ;;		wreg
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5470 ;;      Params:         0       0       0       0       0       0       0       0
  5471 ;;      Locals:         0       3       0       0       0       0       0       0
  5472 ;;      Temps:          0       2       0       0       0       0       0       0
  5473 ;;      Totals:         0       5       0       0       0       0       0       0
  5474 ;;Total ram usage:        5 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    2
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_ReadStatusSPI
  5481 ;;		_WriteOverheadSPI
  5482 ;;		_RecordMode
  5483 ;;		_SendGPSSPI
  5484 ;;		_ReadOverheadSPI
  5485 ;;		_PreRecordMode
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function _WriteSPI
  5491  0D2E                     _WriteSPI:	
  5492                           
  5493                           ;incstack = 0
  5494                           ; Regs used in _WriteSPI: [wreg]
  5495                           ;WriteSPI@databyte stored from wreg
  5496  0D2E  0020               	movlb	0	; select bank0
  5497  0D2F  00A4               	movwf	WriteSPI@databyte
  5498                           
  5499                           ;launcher_functions.c: 138: unsigned int temp;
  5500                           ;launcher_functions.c: 139: temp = SSPBUF;
  5501  0D30  0024               	movlb	4	; select bank4
  5502  0D31  0811               	movf	17,w	;volatile
  5503  0D32  0020               	movlb	0	; select bank0
  5504  0D33  00A0               	movwf	??_WriteSPI
  5505  0D34  01A1               	clrf	??_WriteSPI+1
  5506  0D35  0820               	movf	??_WriteSPI,w
  5507  0D36  00A2               	movwf	WriteSPI@temp
  5508  0D37  0821               	movf	??_WriteSPI+1,w
  5509  0D38  00A3               	movwf	WriteSPI@temp+1
  5510                           
  5511                           ;launcher_functions.c: 140: PIR1bits.SSP1IF=0;
  5512  0D39  1191               	bcf	17,3	;volatile
  5513                           
  5514                           ;launcher_functions.c: 141: SSPBUF = databyte;
  5515  0D3A  0824               	movf	WriteSPI@databyte,w
  5516  0D3B  0024               	movlb	4	; select bank4
  5517  0D3C  0091               	movwf	17	;volatile
  5518  0D3D                     l292:	
  5519                           ;launcher_functions.c: 142: while(!PIR1bits.SSP1IF);
  5520                           
  5521  0D3D  0020               	movlb	0	; select bank0
  5522  0D3E  1991               	btfsc	17,3	;volatile
  5523  0D3F  0008               	return
  5524  0D40  2D3D               	goto	l292
  5525  0D41                     __end_of_WriteSPI:	
  5526                           
  5527                           	psect	text20
  5528  0CAC                     __ptext20:	
  5529 ;; *************** function _ReadSPI *****************
  5530 ;; Defined at:
  5531 ;;		line 145 in file "launcher_functions.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      unsigned char 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5545 ;;      Params:         0       0       0       0       0       0       0       0
  5546 ;;      Locals:         0       1       0       0       0       0       0       0
  5547 ;;      Temps:          0       1       0       0       0       0       0       0
  5548 ;;      Totals:         0       2       0       0       0       0       0       0
  5549 ;;Total ram usage:        2 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    2
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_ReadStatusSPI
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function _ReadSPI
  5561  0CAC                     _ReadSPI:	
  5562                           
  5563                           ;launcher_functions.c: 147: unsigned char dataByte;
  5564                           ;launcher_functions.c: 149: SSPBUF = 0x00;
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in _ReadSPI: [wreg+status,2]
  5568  0CAC  0024               	movlb	4	; select bank4
  5569  0CAD  0191               	clrf	17	;volatile
  5570  0CAE                     l298:	
  5571                           ;launcher_functions.c: 150: while(!SSPSTATbits.BF);
  5572                           
  5573  0CAE  1C14               	btfss	20,0	;volatile
  5574  0CAF  2CAE               	goto	l298
  5575                           
  5576                           ;launcher_functions.c: 151: dataByte = SSPBUF;
  5577  0CB0  0811               	movf	17,w	;volatile
  5578  0CB1  0020               	movlb	0	; select bank0
  5579  0CB2  00A0               	movwf	??_ReadSPI
  5580  0CB3  0820               	movf	??_ReadSPI,w
  5581  0CB4  00A1               	movwf	ReadSPI@dataByte
  5582                           
  5583                           ;launcher_functions.c: 152: PIR1bits.SSP1IF=0;
  5584  0CB5  1191               	bcf	17,3	;volatile
  5585                           
  5586                           ;launcher_functions.c: 153: return (dataByte);
  5587  0CB6  0821               	movf	ReadSPI@dataByte,w
  5588  0CB7  0008               	return
  5589  0CB8                     __end_of_ReadSPI:	
  5590                           
  5591                           	psect	text21
  5592  0D58                     __ptext21:	
  5593 ;; *************** function _ReadBuffer *****************
  5594 ;; Defined at:
  5595 ;;		line 215 in file "launcher_functions.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  read_data       1    1[BANK0 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      unsigned char 
  5602 ;; Registers used:
  5603 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5609 ;;      Params:         0       0       0       0       0       0       0       0
  5610 ;;      Locals:         0       1       0       0       0       0       0       0
  5611 ;;      Temps:          0       1       0       0       0       0       0       0
  5612 ;;      Totals:         0       2       0       0       0       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    2
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_RecordMode
  5620 ;;		_PreRecordMode
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function _ReadBuffer
  5626  0D58                     _ReadBuffer:	
  5627                           
  5628                           ;launcher_functions.c: 217: unsigned char read_data;
  5629                           ;launcher_functions.c: 219: read_data = buffer[start];
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5633  0D58  087B               	movf	_start,w
  5634  0D59  3E20               	addlw	_buffer& (0+255)
  5635  0D5A  0086               	movwf	6
  5636  0D5B  3002               	movlw	2	; select bank4/5
  5637  0D5C  0087               	movwf	7
  5638  0D5D  0801               	movf	1,w
  5639  0D5E  0020               	movlb	0	; select bank0
  5640  0D5F  00A0               	movwf	??_ReadBuffer
  5641  0D60  0820               	movf	??_ReadBuffer,w
  5642  0D61  00A1               	movwf	ReadBuffer@read_data
  5643                           
  5644                           ;launcher_functions.c: 220: if (start == 51)
  5645  0D62  3033               	movlw	51
  5646  0D63  067B               	xorwf	_start,w
  5647  0D64  047C               	iorwf	_start+1,w
  5648  0D65  1D03               	skipz
  5649  0D66  2D6A               	goto	l2332
  5650                           
  5651                           ;launcher_functions.c: 221: start = 0;
  5652  0D67  01FB               	clrf	_start
  5653  0D68  01FC               	clrf	_start+1
  5654  0D69  2D6E               	goto	l320
  5655  0D6A                     l2332:	
  5656                           
  5657                           ;launcher_functions.c: 222: else
  5658                           ;launcher_functions.c: 223: start++;
  5659  0D6A  3001               	movlw	1
  5660  0D6B  07FB               	addwf	_start,f
  5661  0D6C  3000               	movlw	0
  5662  0D6D  3DFC               	addwfc	_start+1,f
  5663  0D6E                     l320:	
  5664                           
  5665                           ;launcher_functions.c: 224: return read_data;
  5666  0D6E  0821               	movf	ReadBuffer@read_data,w
  5667  0D6F  0008               	return
  5668  0D70                     __end_of_ReadBuffer:	
  5669                           
  5670                           	psect	text22
  5671  0D0A                     __ptext22:	
  5672 ;; *************** function _InitSPI *****************
  5673 ;; Defined at:
  5674 ;;		line 108 in file "launcher_functions.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;		None               void
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5688 ;;      Params:         0       0       0       0       0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0       0       0
  5691 ;;      Totals:         0       0       0       0       0       0       0       0
  5692 ;;Total ram usage:        0 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    2
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_main
  5699 ;;		_RecordMode
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           
  5704                           ;psect for function _InitSPI
  5705  0D0A                     _InitSPI:	
  5706                           
  5707                           ;launcher_functions.c: 111: TRISCbits.TRISC2 = 0;
  5708                           
  5709                           ;incstack = 0
  5710                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5711  0D0A  0021               	movlb	1	; select bank1
  5712  0D0B  110E               	bcf	14,2	;volatile
  5713                           
  5714                           ;launcher_functions.c: 112: TRISCbits.TRISC3 = 0;
  5715  0D0C  118E               	bcf	14,3	;volatile
  5716                           
  5717                           ;launcher_functions.c: 113: TRISCbits.TRISC4 = 1;
  5718  0D0D  160E               	bsf	14,4	;volatile
  5719                           
  5720                           ;launcher_functions.c: 114: TRISCbits.TRISC5 = 0;
  5721  0D0E  128E               	bcf	14,5	;volatile
  5722                           
  5723                           ;launcher_functions.c: 116: LATC2 = (1);
  5724  0D0F  0022               	movlb	2	; select bank2
  5725  0D10  150E               	bsf	14,2	;volatile
  5726                           
  5727                           ;launcher_functions.c: 119: SSPCON1bits.SSPEN=0x00;
  5728  0D11  0024               	movlb	4	; select bank4
  5729  0D12  1295               	bcf	21,5	;volatile
  5730                           
  5731                           ;launcher_functions.c: 120: SSPCON1bits.SSPM=0x01;
  5732  0D13  0815               	movf	21,w	;volatile
  5733  0D14  39F0               	andlw	-16
  5734  0D15  3801               	iorlw	1
  5735  0D16  0095               	movwf	21	;volatile
  5736                           
  5737                           ;launcher_functions.c: 121: SSPCON1bits.CKP=0;
  5738  0D17  1215               	bcf	21,4	;volatile
  5739                           
  5740                           ;launcher_functions.c: 122: SSPSTATbits.CKE=1;
  5741  0D18  1714               	bsf	20,6	;volatile
  5742                           
  5743                           ;launcher_functions.c: 123: SSPSTATbits.SMP=0;
  5744  0D19  1394               	bcf	20,7	;volatile
  5745                           
  5746                           ;launcher_functions.c: 124: SSPCON1bits.SSPEN=0x01;
  5747  0D1A  1695               	bsf	21,5	;volatile
  5748  0D1B  0008               	return
  5749  0D1C                     __end_of_InitSPI:	
  5750                           
  5751                           	psect	text23
  5752  07F9                     __ptext23:	
  5753 ;; *************** function _InitWatchdog *****************
  5754 ;; Defined at:
  5755 ;;		line 127 in file "launcher_functions.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;		None               void
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5769 ;;      Params:         0       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0
  5772 ;;      Totals:         0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    2
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _InitWatchdog
  5785  07F9                     _InitWatchdog:	
  5786                           
  5787                           ;launcher_functions.c: 130: WDTCONbits.WDTPS = 0x0A;
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5791  07F9  0021               	movlb	1	; select bank1
  5792  07FA  0817               	movf	23,w	;volatile
  5793  07FB  39C1               	andlw	-63
  5794  07FC  3814               	iorlw	20
  5795  07FD  0097               	movwf	23	;volatile
  5796                           
  5797                           ;launcher_functions.c: 131: WDTCONbits.SWDTEN = 0;
  5798  07FE  1017               	bcf	23,0	;volatile
  5799  07FF  0008               	return
  5800  0800                     __end_of_InitWatchdog:	
  5801                           
  5802                           	psect	text24
  5803  0CB8                     __ptext24:	
  5804 ;; *************** function _InitTimer1 *****************
  5805 ;; Defined at:
  5806 ;;		line 96 in file "launcher_functions.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;		None               void
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5820 ;;      Params:         0       0       0       0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0
  5823 ;;      Totals:         0       0       0       0       0       0       0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    2
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _InitTimer1
  5836  0CB8                     _InitTimer1:	
  5837                           
  5838                           ;launcher_functions.c: 98: T1CONbits.TMR1CS = 0;
  5839                           
  5840                           ;incstack = 0
  5841                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  5842  0CB8  303F               	movlw	-193
  5843  0CB9  0020               	movlb	0	; select bank0
  5844  0CBA  0598               	andwf	24,f	;volatile
  5845                           
  5846                           ;launcher_functions.c: 99: T1CONbits.T1CKPS = 2;
  5847  0CBB  0818               	movf	24,w	;volatile
  5848  0CBC  39CF               	andlw	-49
  5849  0CBD  3820               	iorlw	32
  5850  0CBE  0098               	movwf	24	;volatile
  5851                           
  5852                           ;launcher_functions.c: 100: T1CONbits.nT1SYNC = 1;
  5853  0CBF  1518               	bsf	24,2	;volatile
  5854                           
  5855                           ;launcher_functions.c: 101: T1GCONbits.TMR1GE = 0;
  5856  0CC0  1399               	bcf	25,7	;volatile
  5857                           
  5858                           ;launcher_functions.c: 102: TMR1H = 0xFF;
  5859  0CC1  30FF               	movlw	255
  5860  0CC2  0097               	movwf	23	;volatile
  5861                           
  5862                           ;launcher_functions.c: 103: TMR1L = 0xCD;
  5863  0CC3  30CD               	movlw	205
  5864  0CC4  0096               	movwf	22	;volatile
  5865                           
  5866                           ;launcher_functions.c: 104: T1CONbits.TMR1ON = 1;
  5867  0CC5  1418               	bsf	24,0	;volatile
  5868  0CC6  0008               	return
  5869  0CC7                     __end_of_InitTimer1:	
  5870                           
  5871                           	psect	text25
  5872  0DE4                     __ptext25:	
  5873 ;; *************** function _InitGPIO *****************
  5874 ;; Defined at:
  5875 ;;		line 13 in file "launcher_functions.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;		None               void
  5882 ;; Registers used:
  5883 ;;		status,2
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5889 ;;      Params:         0       0       0       0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    2
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _InitGPIO
  5905  0DE4                     _InitGPIO:	
  5906                           
  5907                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _InitGPIO: [status,2]
  5911  0DE4  0021               	movlb	1	; select bank1
  5912  0DE5  148C               	bsf	12,1	;volatile
  5913                           
  5914                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  5915  0DE6  0023               	movlb	3	; select bank3
  5916  0DE7  108C               	bcf	12,1	;volatile
  5917                           
  5918                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  5919  0DE8  0027               	movlb	7	; select bank7
  5920  0DE9  1491               	bsf	17,1	;volatile
  5921                           
  5922                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  5923  0DEA  1492               	bsf	18,1	;volatile
  5924                           
  5925                           ;launcher_functions.c: 22: IOCAF = 0x00;
  5926  0DEB  0193               	clrf	19	;volatile
  5927                           
  5928                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  5929  0DEC  158B               	bsf	11,3	;volatile
  5930                           
  5931                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  5932  0DED  0021               	movlb	1	; select bank1
  5933  0DEE  158D               	bsf	13,3	;volatile
  5934                           
  5935                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  5936  0DEF  0023               	movlb	3	; select bank3
  5937  0DF0  118D               	bcf	13,3	;volatile
  5938                           
  5939                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  5940  0DF1  0027               	movlb	7	; select bank7
  5941  0DF2  1595               	bsf	21,3	;volatile
  5942                           
  5943                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  5944  0DF3  1594               	bsf	20,3	;volatile
  5945                           
  5946                           ;launcher_functions.c: 30: IOCBF = 0x00;
  5947  0DF4  0196               	clrf	22	;volatile
  5948                           
  5949                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  5950  0DF5  158B               	bsf	11,3	;volatile
  5951                           
  5952                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  5953  0DF6  0021               	movlb	1	; select bank1
  5954  0DF7  140C               	bsf	12,0	;volatile
  5955                           
  5956                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  5957  0DF8  150C               	bsf	12,2	;volatile
  5958                           
  5959                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  5960  0DF9  158C               	bsf	12,3	;volatile
  5961                           
  5962                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  5963  0DFA  120C               	bcf	12,4	;volatile
  5964                           
  5965                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  5966  0DFB  128C               	bcf	12,5	;volatile
  5967                           
  5968                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  5969  0DFC  130C               	bcf	12,6	;volatile
  5970                           
  5971                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  5972  0DFD  138C               	bcf	12,7	;volatile
  5973                           
  5974                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  5975  0DFE  100D               	bcf	13,0	;volatile
  5976                           
  5977                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  5978  0DFF  148D               	bsf	13,1	;volatile
  5979                           
  5980                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  5981  0E00  110D               	bcf	13,2	;volatile
  5982                           
  5983                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  5984  0E01  120D               	bcf	13,4	;volatile
  5985                           
  5986                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  5987  0E02  128D               	bcf	13,5	;volatile
  5988                           
  5989                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  5990  0E03  0020               	movlb	0	; select bank0
  5991  0E04  100D               	bcf	13,0	;volatile
  5992                           
  5993                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  5994  0E05  120D               	bcf	13,4	;volatile
  5995                           
  5996                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  5997  0E06  128D               	bcf	13,5	;volatile
  5998                           
  5999                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6000  0E07  0023               	movlb	3	; select bank3
  6001  0E08  100D               	bcf	13,0	;volatile
  6002                           
  6003                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6004  0E09  108D               	bcf	13,1	;volatile
  6005                           
  6006                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6007  0E0A  110D               	bcf	13,2	;volatile
  6008                           
  6009                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6010  0E0B  120D               	bcf	13,4	;volatile
  6011                           
  6012                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6013  0E0C  128D               	bcf	13,5	;volatile
  6014                           
  6015                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6016  0E0D  0021               	movlb	1	; select bank1
  6017  0E0E  100E               	bcf	14,0	;volatile
  6018                           
  6019                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6020  0E0F  108E               	bcf	14,1	;volatile
  6021  0E10  0008               	return
  6022  0E11                     __end_of_InitGPIO:	
  6023                           
  6024                           	psect	text26
  6025  0C91                     __ptext26:	
  6026 ;; *************** function _InitCLK *****************
  6027 ;; Defined at:
  6028 ;;		line 8 in file "launcher_functions.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;		None               void
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6042 ;;      Params:         0       0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    2
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _InitCLK
  6058  0C91                     _InitCLK:	
  6059                           
  6060                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6061                           
  6062                           ;incstack = 0
  6063                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6064  0C91  3078               	movlw	120
  6065  0C92  0021               	movlb	1	; select bank1
  6066  0C93  0499               	iorwf	25,f	;volatile
  6067                           
  6068                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6069  0C94  0819               	movf	25,w	;volatile
  6070  0C95  39FC               	andlw	-4
  6071  0C96  3802               	iorlw	2
  6072  0C97  0099               	movwf	25	;volatile
  6073  0C98  0008               	return
  6074  0C99                     __end_of_InitCLK:	
  6075                           
  6076                           	psect	text27
  6077  0D70                     __ptext27:	
  6078 ;; *************** function _InitADC *****************
  6079 ;; Defined at:
  6080 ;;		line 73 in file "launcher_functions.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;		None               void
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6094 ;;      Params:         0       0       0       0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0       0       0       0
  6097 ;;      Totals:         0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:        0 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    2
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           
  6109                           ;psect for function _InitADC
  6110  0D70                     _InitADC:	
  6111                           
  6112                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6113                           
  6114                           ;incstack = 0
  6115                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6116  0D70  0021               	movlb	1	; select bank1
  6117  0D71  140C               	bsf	12,0	;volatile
  6118                           
  6119                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6120  0D72  0023               	movlb	3	; select bank3
  6121  0D73  140C               	bsf	12,0	;volatile
  6122                           
  6123                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6124  0D74  0021               	movlb	1	; select bank1
  6125  0D75  081E               	movf	30,w	;volatile
  6126  0D76  398F               	andlw	-113
  6127  0D77  3850               	iorlw	80
  6128  0D78  009E               	movwf	30	;volatile
  6129                           
  6130                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6131  0D79  30FC               	movlw	-4
  6132  0D7A  059E               	andwf	30,f	;volatile
  6133                           
  6134                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6135  0D7B  111E               	bcf	30,2	;volatile
  6136                           
  6137                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6138  0D7C  3083               	movlw	-125
  6139  0D7D  059D               	andwf	29,f	;volatile
  6140                           
  6141                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6142  0D7E  300F               	movlw	15
  6143  0D7F  049F               	iorwf	31,f	;volatile
  6144                           
  6145                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6146  0D80  139E               	bcf	30,7	;volatile
  6147                           
  6148                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6149  0D81  179D               	bsf	29,7	;volatile
  6150                           
  6151                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6152  0D82  141D               	bsf	29,0	;volatile
  6153                           
  6154                           ;launcher_functions.c: 90: ADIF = 0;
  6155  0D83  0020               	movlb	0	; select bank0
  6156  0D84  1311               	bcf	17,6	;volatile
  6157                           
  6158                           ;launcher_functions.c: 91: ADIE = 1;
  6159  0D85  0021               	movlb	1	; select bank1
  6160  0D86  1711               	bsf	17,6	;volatile
  6161                           
  6162                           ;launcher_functions.c: 92: PEIE = 1;
  6163  0D87  170B               	bsf	11,6	;volatile
  6164  0D88  0008               	return
  6165  0D89                     __end_of_InitADC:	
  6166                           
  6167                           	psect	text28
  6168  0D89                     __ptext28:	
  6169 ;; *************** function _Hibernate *****************
  6170 ;; Defined at:
  6171 ;;		line 522 in file "launcher_functions.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;		None
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  count           1    1[BANK0 ] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;		None               void
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6185 ;;      Params:         0       0       0       0       0       0       0       0
  6186 ;;      Locals:         0       1       0       0       0       0       0       0
  6187 ;;      Temps:          0       1       0       0       0       0       0       0
  6188 ;;      Totals:         0       2       0       0       0       0       0       0
  6189 ;;Total ram usage:        2 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    2
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_main
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           
  6200                           ;psect for function _Hibernate
  6201  0D89                     _Hibernate:	
  6202                           
  6203                           ;launcher_functions.c: 524: unsigned char count = 0;
  6204                           
  6205                           ;incstack = 0
  6206                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6207  0D89  0020               	movlb	0	; select bank0
  6208  0D8A  01A1               	clrf	Hibernate@count
  6209                           
  6210                           ;launcher_functions.c: 525: WDTCONbits.WDTPS = 14;
  6211  0D8B  0021               	movlb	1	; select bank1
  6212  0D8C  0817               	movf	23,w	;volatile
  6213  0D8D  39C1               	andlw	-63
  6214  0D8E  381C               	iorlw	28
  6215  0D8F  0097               	movwf	23	;volatile
  6216                           
  6217                           ;launcher_functions.c: 526: WDTCONbits.SWDTEN = 1;
  6218  0D90  1417               	bsf	23,0	;volatile
  6219                           
  6220                           ;launcher_functions.c: 527: while(!recordFlag && count++ < 3)
  6221  0D91  2D9C               	goto	l2716
  6222  0D92                     l2718:	
  6223  0D92  3001               	movlw	1
  6224  0D93  0020               	movlb	0	; select bank0
  6225  0D94  00A0               	movwf	??_Hibernate
  6226  0D95  0820               	movf	??_Hibernate,w
  6227  0D96  07A1               	addwf	Hibernate@count,f
  6228  0D97  3004               	movlw	4
  6229  0D98  0221               	subwf	Hibernate@count,w
  6230  0D99  1803               	btfsc	3,0
  6231  0D9A  2DA0               	goto	l424
  6232  0D9B  0063               	sleep	;# 
  6233  0D9C                     l2716:	
  6234  0D9C  0021               	movlb	1	; select bank1
  6235  0D9D  08EC               	movf	_recordFlag^(0+128),f
  6236  0D9E  1903               	btfsc	3,2
  6237  0D9F  2D92               	goto	l2718
  6238  0DA0                     l424:	
  6239                           
  6240                           ;launcher_functions.c: 530: }
  6241                           ;launcher_functions.c: 531: WDTCONbits.SWDTEN = 0;
  6242  0DA0  0021               	movlb	1	; select bank1
  6243  0DA1  1017               	bcf	23,0	;volatile
  6244  0DA2  0008               	return
  6245  0DA3                     __end_of_Hibernate:	
  6246                           
  6247                           	psect	text29
  6248  0CF8                     __ptext29:	
  6249 ;; *************** function _GoToSleep *****************
  6250 ;; Defined at:
  6251 ;;		line 514 in file "launcher_functions.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  count           1    wreg     unsigned char 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  count           1    1[BANK0 ] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;		None               void
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6265 ;;      Params:         0       0       0       0       0       0       0       0
  6266 ;;      Locals:         0       1       0       0       0       0       0       0
  6267 ;;      Temps:          0       1       0       0       0       0       0       0
  6268 ;;      Totals:         0       2       0       0       0       0       0       0
  6269 ;;Total ram usage:        2 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    2
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_main
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _GoToSleep
  6281  0CF8                     _GoToSleep:	
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6285                           ;GoToSleep@count stored from wreg
  6286  0CF8  0020               	movlb	0	; select bank0
  6287  0CF9  00A1               	movwf	GoToSleep@count
  6288                           
  6289                           ;launcher_functions.c: 516: WDTCONbits.WDTPS = count;
  6290  0CFA  0821               	movf	GoToSleep@count,w
  6291  0CFB  00A0               	movwf	??_GoToSleep
  6292  0CFC  0DA0               	rlf	??_GoToSleep,f
  6293  0CFD  0021               	movlb	1	; select bank1
  6294  0CFE  0817               	movf	23,w	;volatile
  6295  0CFF  0020               	movlb	0	; select bank0
  6296  0D00  0620               	xorwf	??_GoToSleep,w
  6297  0D01  39C1               	andlw	-63
  6298  0D02  0620               	xorwf	??_GoToSleep,w
  6299  0D03  0021               	movlb	1	; select bank1
  6300  0D04  0097               	movwf	23	;volatile
  6301                           
  6302                           ;launcher_functions.c: 517: WDTCONbits.SWDTEN = 1;
  6303  0D05  1417               	bsf	23,0	;volatile
  6304  0D06  0063               	sleep	;# 
  6305                           
  6306                           ;launcher_functions.c: 519: WDTCONbits.SWDTEN = 0;
  6307  0D07  0021               	movlb	1	; select bank1
  6308  0D08  1017               	bcf	23,0	;volatile
  6309  0D09  0008               	return
  6310  0D0A                     __end_of_GoToSleep:	
  6311                           
  6312                           	psect	intentry
  6313  0004                     __pintentry:	
  6314 ;; *************** function _isr *****************
  6315 ;; Defined at:
  6316 ;;		line 106 in file "launcher_main.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;		None               void
  6323 ;; Registers used:
  6324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6330 ;;      Params:         0       0       0       0       0       0       0       0
  6331 ;;      Locals:         2       0       0       0       0       0       0       0
  6332 ;;      Temps:          5       0       0       0       0       0       0       0
  6333 ;;      Totals:         7       0       0       0       0       0       0       0
  6334 ;;Total ram usage:        7 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    1
  6337 ;; This function calls:
  6338 ;;		_WriteBuffer
  6339 ;; This function is called by:
  6340 ;;		Interrupt level 1
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344  0004                     _isr:	
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6348  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6349  0005  3180               	pagesel	$
  6350  0006  0020               	movlb	0	; select bank0
  6351  0007  087F               	movf	127,w
  6352  0008  00F6               	movwf	??_isr+4
  6353                           
  6354                           ;launcher_main.c: 109: if (PIR1bits.RCIF)
  6355  0009  1E91               	btfss	17,5	;volatile
  6356  000A  282F               	goto	i1l2822
  6357                           
  6358                           ;launcher_main.c: 110: {
  6359                           ;launcher_main.c: 112: if(OERR)
  6360  000B  0023               	movlb	3	; select bank3
  6361  000C  1C9D               	btfss	29,1	;volatile
  6362  000D  2810               	goto	i1l2810
  6363                           
  6364                           ;launcher_main.c: 113: {
  6365                           ;launcher_main.c: 114: RCSTAbits.CREN = 0;
  6366  000E  121D               	bcf	29,4	;volatile
  6367                           
  6368                           ;launcher_main.c: 115: RCSTAbits.CREN = 1;
  6369  000F  161D               	bsf	29,4	;volatile
  6370  0010                     i1l2810:	
  6371                           
  6372                           ;launcher_main.c: 116: }
  6373                           ;launcher_main.c: 117: gpsMessage[gpsIndex++] = RCREG;
  6374  0010  0819               	movf	25,w	;volatile
  6375  0011  00F2               	movwf	??_isr
  6376  0012  087D               	movf	_gpsIndex,w
  6377  0013  3E2A               	addlw	_gpsMessage& (0+255)
  6378  0014  0086               	movwf	6
  6379  0015  3001               	movlw	1	; select bank2/3
  6380  0016  0087               	movwf	7
  6381  0017  0872               	movf	??_isr,w
  6382  0018  0081               	movwf	1
  6383  0019  3001               	movlw	1
  6384  001A  00F2               	movwf	??_isr
  6385  001B  0872               	movf	??_isr,w
  6386  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6387                           
  6388                           ;launcher_main.c: 118: if(gpsMessage[gpsIndex-1] == 0x0A)
  6389  001D  087D               	movf	_gpsIndex,w
  6390  001E  3EFF               	addlw	255
  6391  001F  3E2A               	addlw	_gpsMessage& (0+255)
  6392  0020  0086               	movwf	6
  6393  0021  3001               	movlw	1	; select bank2/3
  6394  0022  0087               	movwf	7
  6395  0023  0801               	movf	1,w
  6396  0024  3A0A               	xorlw	10
  6397  0025  1D03               	skipz
  6398  0026  282B               	goto	i1l2818
  6399                           
  6400                           ;launcher_main.c: 119: {
  6401                           ;launcher_main.c: 120: messageDoneFlag = 1;
  6402  0027  0021               	movlb	1	; select bank1
  6403  0028  01EB               	clrf	_messageDoneFlag^(0+128)
  6404  0029  0AEB               	incf	_messageDoneFlag^(0+128),f
  6405                           
  6406                           ;launcher_main.c: 121: }
  6407  002A  282D               	goto	i1l2820
  6408  002B                     i1l2818:	
  6409                           
  6410                           ;launcher_main.c: 122: else
  6411                           ;launcher_main.c: 123: {
  6412                           ;launcher_main.c: 124: messageDoneFlag = 0;
  6413  002B  0021               	movlb	1	; select bank1
  6414  002C  01EB               	clrf	_messageDoneFlag^(0+128)
  6415  002D                     i1l2820:	
  6416                           
  6417                           ;launcher_main.c: 125: }
  6418                           ;launcher_main.c: 126: PIR1bits.RCIF = 0;
  6419  002D  0020               	movlb	0	; select bank0
  6420  002E  1291               	bcf	17,5	;volatile
  6421  002F                     i1l2822:	
  6422                           
  6423                           ;launcher_main.c: 127: }
  6424                           ;launcher_main.c: 130: if (TMR1IF && TMR1IE)
  6425  002F  1C11               	btfss	17,0	;volatile
  6426  0030  283E               	goto	i1l2832
  6427  0031  0021               	movlb	1	; select bank1
  6428  0032  1C11               	btfss	17,0	;volatile
  6429  0033  283E               	goto	i1l2832
  6430                           
  6431                           ;launcher_main.c: 131: {
  6432                           ;launcher_main.c: 132: TMR1H = 0xFF;
  6433  0034  30FF               	movlw	255
  6434  0035  0020               	movlb	0	; select bank0
  6435  0036  0097               	movwf	23	;volatile
  6436                           
  6437                           ;launcher_main.c: 133: TMR1L = 0xCD;
  6438  0037  30CD               	movlw	205
  6439  0038  0096               	movwf	22	;volatile
  6440                           
  6441                           ;launcher_main.c: 134: TMR1IF = 0;
  6442  0039  1011               	bcf	17,0	;volatile
  6443                           
  6444                           ;launcher_main.c: 136: if(recordFlag)
  6445  003A  0021               	movlb	1	; select bank1
  6446  003B  086C               	movf	_recordFlag^(0+128),w
  6447  003C  1D03               	skipz
  6448                           
  6449                           ;launcher_main.c: 137: {
  6450                           ;launcher_main.c: 138: ADCON0bits.ADGO = 1;
  6451  003D  149D               	bsf	29,1	;volatile
  6452  003E                     i1l2832:	
  6453                           
  6454                           ;launcher_main.c: 139: }
  6455                           ;launcher_main.c: 140: }
  6456                           ;launcher_main.c: 143: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6457  003E  0021               	movlb	1	; select bank1
  6458  003F  0E11               	swapf	17,w	;volatile
  6459  0040  0C89               	rrf	9,f
  6460  0041  0C89               	rrf	9,f
  6461  0042  3901               	andlw	1
  6462  0043  00F2               	movwf	??_isr
  6463  0044  0020               	movlb	0	; select bank0
  6464  0045  0E11               	swapf	17,w	;volatile
  6465  0046  0C89               	rrf	9,f
  6466  0047  0C89               	rrf	9,f
  6467  0048  3901               	andlw	1
  6468  0049  0572               	andwf	??_isr,w
  6469  004A  1903               	btfsc	3,2
  6470  004B  2880               	goto	i1l2848
  6471                           
  6472                           ;launcher_main.c: 144: {
  6473                           ;launcher_main.c: 145: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6474  004C  3033               	movlw	51
  6475  004D  0679               	xorwf	_end,w
  6476  004E  047A               	iorwf	_end+1,w
  6477  004F  1903               	skipnz
  6478  0050  2866               	goto	i1l2838
  6479  0051  0879               	movf	_end,w
  6480  0052  3E01               	addlw	1
  6481  0053  00F2               	movwf	??_isr
  6482  0054  3000               	movlw	0
  6483  0055  3D7A               	addwfc	_end+1,w
  6484  0056  00F3               	movwf	??_isr+1
  6485  0057  087C               	movf	_start+1,w
  6486  0058  0673               	xorwf	??_isr+1,w
  6487  0059  1D03               	skipz
  6488  005A  285D               	goto	u249_25
  6489  005B  087B               	movf	_start,w
  6490  005C  0672               	xorwf	??_isr,w
  6491  005D                     u249_25:	
  6492  005D  3000               	movlw	0
  6493  005E  1903               	skipnz
  6494  005F  3001               	movlw	1
  6495  0060  00F4               	movwf	??_isr+2
  6496  0061  01F5               	clrf	??_isr+3
  6497  0062  0874               	movf	??_isr+2,w
  6498  0063  00F7               	movwf	_isr$610
  6499  0064  0875               	movf	??_isr+3,w
  6500  0065  2870               	goto	L5
  6501  0066                     i1l2838:	
  6502  0066  087C               	movf	_start+1,w
  6503  0067  047B               	iorwf	_start,w
  6504  0068  3000               	movlw	0
  6505  0069  1903               	skipnz
  6506  006A  3001               	movlw	1
  6507  006B  00F2               	movwf	??_isr
  6508  006C  01F3               	clrf	??_isr+1
  6509  006D  0872               	movf	??_isr,w
  6510  006E  00F7               	movwf	_isr$610
  6511  006F  0873               	movf	??_isr+1,w
  6512  0070                     L5:	
  6513  0070  00F8               	movwf	_isr$610+1
  6514  0071  0878               	movf	_isr$610+1,w
  6515  0072  0477               	iorwf	_isr$610,w
  6516  0073  1D03               	skipz
  6517  0074  287E               	goto	i1l2846
  6518                           
  6519                           ;launcher_main.c: 146: {
  6520                           ;launcher_main.c: 147: if(recordFlag)
  6521  0075  0021               	movlb	1	; select bank1
  6522  0076  086C               	movf	_recordFlag^(0+128),w
  6523  0077  1903               	btfsc	3,2
  6524  0078  287E               	goto	i1l2846
  6525                           
  6526                           ;launcher_main.c: 148: WriteBuffer(ADRESH);
  6527  0079  081C               	movf	28,w	;volatile
  6528  007A  318D  2541  3180   	fcall	_WriteBuffer
  6529  007D  0021               	movlb	1	; select bank1
  6530  007E                     i1l2846:	
  6531                           
  6532                           ;launcher_main.c: 149: }
  6533                           ;launcher_main.c: 150: PIR1bits.ADIF = 0;
  6534  007E  0020               	movlb	0	; select bank0
  6535  007F  1311               	bcf	17,6	;volatile
  6536  0080                     i1l2848:	
  6537                           
  6538                           ;launcher_main.c: 151: }
  6539                           ;launcher_main.c: 154: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6540  0080  1D8B               	btfss	11,3	;volatile
  6541  0081  28AB               	goto	i1l2862
  6542  0082  0027               	movlb	7	; select bank7
  6543  0083  1D96               	btfss	22,3	;volatile
  6544  0084  28AB               	goto	i1l2862
  6545                           
  6546                           ;launcher_main.c: 155: {
  6547                           ;launcher_main.c: 156: IOCBFbits.IOCBF3 = 0;
  6548  0085  1196               	bcf	22,3	;volatile
  6549                           
  6550                           ;launcher_main.c: 157: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6551  0086  0020               	movlb	0	; select bank0
  6552  0087  0C0D               	rrf	13,w	;volatile
  6553  0088  00F2               	movwf	??_isr
  6554  0089  0CF2               	rrf	??_isr,f
  6555  008A  0C72               	rrf	??_isr,w
  6556  008B  3901               	andlw	1
  6557  008C  00F3               	movwf	??_isr+1
  6558  008D  0027               	movlb	7	; select bank7
  6559  008E  0C14               	rrf	20,w	;volatile
  6560  008F  00F4               	movwf	??_isr+2
  6561  0090  0CF4               	rrf	??_isr+2,f
  6562  0091  0C74               	rrf	??_isr+2,w
  6563  0092  3901               	andlw	1
  6564  0093  0573               	andwf	??_isr+1,w
  6565  0094  1903               	btfsc	3,2
  6566  0095  2899               	goto	i1l2858
  6567                           
  6568                           ;launcher_main.c: 158: {
  6569                           ;launcher_main.c: 159: recordFlag = 1;
  6570  0096  0021               	movlb	1	; select bank1
  6571  0097  01EC               	clrf	_recordFlag^(0+128)
  6572  0098  0AEC               	incf	_recordFlag^(0+128),f
  6573  0099                     i1l2858:	
  6574                           
  6575                           ;launcher_main.c: 160: }
  6576                           ;launcher_main.c: 161: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6577  0099  0027               	movlb	7	; select bank7
  6578  009A  0C15               	rrf	21,w	;volatile
  6579  009B  00F2               	movwf	??_isr
  6580  009C  0CF2               	rrf	??_isr,f
  6581  009D  0C72               	rrf	??_isr,w
  6582  009E  3901               	andlw	1
  6583  009F  00F3               	movwf	??_isr+1
  6584  00A0  1003               	clrc
  6585  00A1  0020               	movlb	0	; select bank0
  6586  00A2  1D8D               	btfss	13,3	;volatile
  6587  00A3  1403               	setc
  6588  00A4  3000               	movlw	0
  6589  00A5  3D09               	addwfc	9,w
  6590  00A6  0573               	andwf	??_isr+1,w
  6591  00A7  1903               	btfsc	3,2
  6592  00A8  28AB               	goto	i1l2862
  6593                           
  6594                           ;launcher_main.c: 162: {
  6595                           ;launcher_main.c: 163: recordFlag = 0;
  6596  00A9  0021               	movlb	1	; select bank1
  6597  00AA  01EC               	clrf	_recordFlag^(0+128)
  6598  00AB                     i1l2862:	
  6599                           
  6600                           ;launcher_main.c: 164: }
  6601                           ;launcher_main.c: 165: }
  6602                           ;launcher_main.c: 168: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6603  00AB  1D8B               	btfss	11,3	;volatile
  6604  00AC  28CD               	goto	i1l149
  6605  00AD  0027               	movlb	7	; select bank7
  6606  00AE  1C93               	btfss	19,1	;volatile
  6607  00AF  28CD               	goto	i1l149
  6608                           
  6609                           ;launcher_main.c: 169: {
  6610                           ;launcher_main.c: 170: IOCAFbits.IOCAF1 = 0;
  6611  00B0  1093               	bcf	19,1	;volatile
  6612                           
  6613                           ;launcher_main.c: 171: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6614  00B1  0020               	movlb	0	; select bank0
  6615  00B2  0C0C               	rrf	12,w	;volatile
  6616  00B3  3901               	andlw	1
  6617  00B4  00F2               	movwf	??_isr
  6618  00B5  0027               	movlb	7	; select bank7
  6619  00B6  0C11               	rrf	17,w	;volatile
  6620  00B7  3901               	andlw	1
  6621  00B8  0572               	andwf	??_isr,w
  6622  00B9  1903               	btfsc	3,2
  6623  00BA  28BE               	goto	i1l2872
  6624                           
  6625                           ;launcher_main.c: 172: {
  6626                           ;launcher_main.c: 173: strobeFlag = 1;
  6627  00BB  0021               	movlb	1	; select bank1
  6628  00BC  01ED               	clrf	_strobeFlag^(0+128)
  6629  00BD  0AED               	incf	_strobeFlag^(0+128),f
  6630  00BE                     i1l2872:	
  6631                           
  6632                           ;launcher_main.c: 174: }
  6633                           ;launcher_main.c: 175: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6634  00BE  0027               	movlb	7	; select bank7
  6635  00BF  0C12               	rrf	18,w	;volatile
  6636  00C0  3901               	andlw	1
  6637  00C1  00F2               	movwf	??_isr
  6638  00C2  1003               	clrc
  6639  00C3  0020               	movlb	0	; select bank0
  6640  00C4  1C8C               	btfss	12,1	;volatile
  6641  00C5  1403               	setc
  6642  00C6  3000               	movlw	0
  6643  00C7  3D09               	addwfc	9,w
  6644  00C8  0572               	andwf	??_isr,w
  6645  00C9  1903               	btfsc	3,2
  6646  00CA  28CD               	goto	i1l149
  6647                           
  6648                           ;launcher_main.c: 176: {
  6649                           ;launcher_main.c: 177: strobeFlag = 0;
  6650  00CB  0021               	movlb	1	; select bank1
  6651  00CC  01ED               	clrf	_strobeFlag^(0+128)
  6652  00CD                     i1l149:	
  6653  00CD  0876               	movf	??_isr+4,w
  6654  00CE  0020               	movlb	0	; select bank0
  6655  00CF  00FF               	movwf	127
  6656  00D0  107E               	bcf	126,0	;clear compiler interrupt flag
  6657  00D1  0009               	retfie
  6658  00D2                     __end_of_isr:	
  6659                           
  6660                           	psect	text31
  6661  0D41                     __ptext31:	
  6662 ;; *************** function _WriteBuffer *****************
  6663 ;; Defined at:
  6664 ;;		line 205 in file "launcher_functions.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  data            1    wreg     unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  data            1    1[COMMON] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;		None               void
  6671 ;; Registers used:
  6672 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6678 ;;      Params:         0       0       0       0       0       0       0       0
  6679 ;;      Locals:         1       0       0       0       0       0       0       0
  6680 ;;      Temps:          1       0       0       0       0       0       0       0
  6681 ;;      Totals:         2       0       0       0       0       0       0       0
  6682 ;;Total ram usage:        2 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_isr
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           
  6692                           ;psect for function _WriteBuffer
  6693  0D41                     _WriteBuffer:	
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6697                           ;WriteBuffer@data stored from wreg
  6698  0D41  00F1               	movwf	WriteBuffer@data
  6699                           
  6700                           ;launcher_functions.c: 207: buffer[end] = data;
  6701  0D42  0871               	movf	WriteBuffer@data,w
  6702  0D43  00F0               	movwf	??_WriteBuffer
  6703  0D44  0879               	movf	_end,w
  6704  0D45  3E20               	addlw	_buffer& (0+255)
  6705  0D46  0086               	movwf	6
  6706  0D47  3002               	movlw	2	; select bank4/5
  6707  0D48  0087               	movwf	7
  6708  0D49  0870               	movf	??_WriteBuffer,w
  6709  0D4A  0081               	movwf	1
  6710                           
  6711                           ;launcher_functions.c: 209: if (end == 51)
  6712  0D4B  3033               	movlw	51
  6713  0D4C  0679               	xorwf	_end,w
  6714  0D4D  047A               	iorwf	_end+1,w
  6715  0D4E  1D03               	skipz
  6716  0D4F  2D53               	goto	i1l2726
  6717                           
  6718                           ;launcher_functions.c: 210: end = 0;
  6719  0D50  01F9               	clrf	_end
  6720  0D51  01FA               	clrf	_end+1
  6721  0D52  0008               	return
  6722  0D53                     i1l2726:	
  6723                           
  6724                           ;launcher_functions.c: 211: else
  6725                           ;launcher_functions.c: 212: end++;
  6726  0D53  3001               	movlw	1
  6727  0D54  07F9               	addwf	_end,f
  6728  0D55  3000               	movlw	0
  6729  0D56  3DFA               	addwfc	_end+1,f
  6730  0D57  0008               	return
  6731  0D58                     __end_of_WriteBuffer:	
  6732  007E                     btemp	set	126	;btemp
  6733  007E                     pic14e$flags	set	126
  6734  007E                     wtemp	set	126
  6735  007E                     wtemp0	set	126
  6736  0080                     wtemp1	set	128
  6737  0082                     wtemp2	set	130
  6738  0084                     wtemp3	set	132
  6739  0086                     wtemp4	set	134
  6740  0088                     wtemp5	set	136
  6741  007F                     wtemp6	set	127
  6742  007E                     ttemp	set	126
  6743  007E                     ttemp0	set	126
  6744  0081                     ttemp1	set	129
  6745  0084                     ttemp2	set	132
  6746  0087                     ttemp3	set	135
  6747  007F                     ttemp4	set	127
  6748  007E                     ltemp	set	126
  6749  007E                     ltemp0	set	126
  6750  0082                     ltemp1	set	130
  6751  0086                     ltemp2	set	134
  6752  0080                     ltemp3	set	128


Data Sizes:
    Strings     65
    Constant    10
    Data        61
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80     66      78
    BANK2            80      0      77
    BANK3            80      0      35
    BANK4            80      0      51
    BANK5            80      0      68
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_2(CODE[39]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1441$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _DecodeGPS->_SendGPSSPI
    ___awdiv->___wmul
    _SendGPSSPI->_WriteOverheadSPI
    _RecordMode->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS
    _UpdateGPS->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4   12523
                                             76 BANK0      4     0      4
                                             62 BANK1      4     4      0
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                         _RecordMode
                         _SendGPSSPI
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           27    27      0    7744
                                             49 BANK0     27    27      0
                          _DecodeGPS
                           _SetupGPS
                     _ToggleSleepGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SetupGPS                                            65    65      0    2799
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1199
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             19    13      6    1357
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    3671
                                             28 BANK0     21    21      0
                         _SendGPSSPI
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1001
                                             21 BANK0     11    11      0
                            _InitSPI
                         _ReadBuffer
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (8) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _RecordMode
     _InitSPI
     _ReadBuffer
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SendGPSSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       _SendGPSSPI
         _WriteOverheadSPI
           _ReadStatusSPI
             _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _SetupGPS
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _uart_write_message
         _compute_checksum
         _uart_xmit
     _ToggleSleepGPS
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     193       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     42      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      23      12       43.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      33      14       63.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      44      16       85.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     193      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 30 23:08:17 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 0049                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l115 060A                               l320 0D6E  
                             l309 0F7A                               l424 0DA0                               l441 044C  
                             l409 0336                               l339 0CA4                               l292 0D3D  
                             l356 0784                               l438 042E                               l298 0CAE  
                             l585 0DAC                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 003F                               wreg 0009  
              DecodeGPS@longitude 004C                   DisableGPS@F4917 01B6                              l2004 0EDE  
                            l2006 0EA9                              l2200 0581                              l2008 0EE3  
                            l2120 0745                              l2112 0737                              l2210 0DA6  
                            l2034 0E94                              l2026 0E76                              l2050 0E45  
                            l2202 04C6                              l2130 074F                              l2028 0E82  
                            l2052 0E51                              l2060 0E66                              l2204 05C1  
                            l2132 0772                              l2222 0D1F                              l2038 0E9D  
                            l2142 04E8                              l2310 06AA                              l2056 0E5D  
                            l2144 04EA                              l2320 06EE                              l2090 07D7  
                            l2082 07C4                              l2250 0EFC                              l2226 0D25  
                            l2162 0519                              l2332 0D6A                              l2076 07AB  
                            l2260 0F04                              l2244 0EF1                              l2164 0533  
                            l2262 0F10                              l2430 02F4                              l2174 0549  
                            l2158 04FD                              l2096 07F0                              l2272 0F2B  
                            l2440 0316                              l2352 0161                              l2192 057D  
                            l2354 0171                              l2186 056E                              l2178 054F  
                            l2276 0F33                              l2268 0F22                              l2348 0150  
                            l2700 0FFC                              l2606 03DC                              l2614 03A8  
                            l2462 0372                              l2438 0310                              l2456 034A  
                            l2448 0339                              l2626 0413                              l2618 03F8  
                            l2634 042F                              l2394 0236                              l2386 021A  
                            l2802 0678                              l2716 0D9C                              l2718 0D92  
                            l2646 0486                              l2752 05E8                              l2690 0FE6  
                            l2674 0FB5                              l2762 05F4                              l1980 0F67  
                            l2688 0FE3                              l2696 0FF6                              l2792 0663  
                            l2776 0612                              l2698 0FBF                              l2786 063F  
                            l2798 066F                              _ADIE 048E                              _ADIF 008E  
                            ?_isr 0070            __size_of_ReadStatusSPI 0011                              STR_1 0831  
                            STR_2 080A                              STR_3 0844                              u2000 0127  
                            u2015 014E                              u2203 044A                              u2115 0348  
                            u2035 016F                              u1405 0F59                              u2213 047A  
                            u2125 0370                              u2135 03CA                              u2240 0FA7  
                            u2225 0491                              u2145 03E2                              u2235 04A6  
                            u2163 03BF                              u1515 0E83                              u1525 0E8D  
                            u2175 0401                              u1615 07A9                              u1535 0E95  
                            u2185 0419                              u1625 07C2                              u1465 0EB3  
                            u2265 0FCA                              u1395 0F45                              u2195 0435  
                            u1635 07D5                              u1645 07EE                              u1565 0E48  
                            u1815 0DAD                              u1495 0E79                              u1655 0725  
                            u1825 0DB2                              u1585 0E57                              u1915 0F11  
                            u1595 0E5E                              u1755 0564                              u1925 0F1B  
                            u1685 075F                              u2807 0456                              u1935 0F23  
                            u1960 0687                              u2737 0602                              u2747 0FD6  
                            _PEIE 005E                              u2757 0E19                              u1895 0F07  
                            u1975 06A8                              u2767 0E28                              u1985 06EC  
                            u2777 0E36                              u2787 06B1                              _RCIE 048D  
                            u2797 06F5                              _OERR 0CE9                              _main 05C6  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              ltemp 007E                              start 00D2  
                            ttemp 007E                              wtemp 007E                 ___bmul@multiplier 0023  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 0D89  
                 __end_of_InitCLK 0C99                   __end_of_InitSPI 0D1C                   __end_of_ReadSPI 0CB8  
              ??_compute_checksum 0022                             ??_isr 0072                     ?_InitWatchdog 0070  
           ReadStatusSPI@dataRead 0026                             ?_main 006C                   __end_of___awdiv 0F3A  
                 ___awdiv@divisor 0026                             _LATC2 0872                             _IOCAF 0393  
                           _IOCBF 0396                   __end_of___lwdiv 0EA4                             i1l149 00CD  
                 __end_of___lwmod 0E6D                   ___awdiv@counter 002B                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
               RecordMode@address 003C                   __end_of_dpowers 080A               DecodeGPS@northSouth 0046  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 05C6            uart_write_message@data 0036  
          uart_write_message@size 0028                        _ReadBuffer 0D58                   __initialization 00D4  
                      _InitTimer1 0CB8                 ?_WriteOverheadSPI 0027                      __end_of_main 067C  
              __size_of_DecodeGPS 0265                  __end_of_InitGPIO 0E11                    ??_InitWatchdog 0020  
                   _ReadStatusSPI 0CD6                ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0034  
                          ??_main 00DE                __size_of_GoToSleep 0012                        _SendGPSSPI 0788  
                 ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 0712  
   WriteOverheadSPI@address_bytes 0031                __size_of_Hibernate 001A                        _RecordMode 0381  
                          _ADRESH 009C                  ___awdiv@dividend 0028                  __end_of_WriteSPI 0D41  
                          i1l2810 0010                            i1l2820 002D                            i1l2726 0D53  
                          i1l2822 002F                            i1l2832 003E                            i1l2818 002B  
                          i1l2862 00AB                            i1l2846 007E                            i1l2838 0066  
                          i1l2872 00BE                            i1l2848 0080                            i1l2858 0099  
                          u249_25 005D                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _TMR1ON 00C0                            _SPBRGL 019B  
                          _SSPBUF 0211                         ??_InitADC 0020                         ??_InitCLK 0020  
                       ??_InitSPI 0020                         ??_ReadSPI 0020                       SendGPSSPI@x 003A  
                          ___bmul 0D1C                    ?_ReadStatusSPI 0070                            ___wmul 0DA3  
                       ??___awdiv 002A                  __end_of_initUART 0CD6                         ??___lwdiv 0024  
                       ??___lwmod 002C                            _buffer 0220                  ___awdiv@quotient 002D  
     __size_of_uart_write_message 0076                __size_of_UpdateGPS 0066               main@periodicCounter 00E1  
               __end_of_DecodeGPS 0381                         ??_sprintf 0034                    _gpsInvalidFlag 00E8  
         __end_of__initialization 0118                 __end_of_GoToSleep 0D0A               ___bmul@multiplicand 0020  
                     ?_ReadBuffer 0070                 __end_of_Hibernate 0DA3                       ?_InitTimer1 0070  
                  __pcstackCOMMON 0070                      __pidataBANK1 0C99                      __pidataBANK2 0CE7  
                    __pidataBANK3 0DC1                      WriteSPI@temp 0022                       ?_SendGPSSPI 0070  
                     ?_RecordMode 0070              __end_of_InitWatchdog 0800                        __pbssBANK1 00EB  
                      __pbssBANK2 0120                        __pbssBANK4 0220                        __pbssBANK5 02A0  
                       ?_InitGPIO 0070                   SetupGPS@message 00A0                   ??_ReadStatusSPI 0025  
               __end_of_UpdateGPS 1000                        __pmaintext 05C6                         ?_SetupGPS 0070  
                         ?___bmul 0020                           ?___wmul 0020                     ??_WriteBuffer 0070  
                      __pintentry 0004                    _validLongitude 00E5         UpdateGPS@GPSupdateMessage 0054  
                       ?_WriteSPI 0070                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                       ?_initUART 0070                           _InitADC 0D70                           _InitCLK 0C91  
                         _InitSPI 0D0A                        _gpsMessage 012A           __size_of_ToggleSleepGPS 002D  
                         _ReadSPI 0CAC                       SetupGPS@MID 00D8               __size_of_SendGPSSPI 0071  
                      ??_SetupGPS 0041               __size_of_RecordMode 013F                   __size_of___bmul 0012  
                         ___awdiv 0EE6                   __size_of___wmul 001E                           ___lwdiv 0E6D  
                         ___lwmod 0E3E                           _isr$610 0077                        ??_WriteSPI 0020  
                         __ptext1 0CC7                           __ptext2 0F9A                           __ptext3 0E11  
                         __ptext4 067C                           __ptext5 0712                           __ptext6 0CA2  
                         __ptext7 0EA4                           __ptext8 04C0                           __ptext9 0E3E  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0D58  
                    __size_of_isr 00CE                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 00EC  
                         _sprintf 04C0                           clrloop0 0C8C              end_of_initialization 0118  
                      ??_initUART 0020                           init_ram 0C85                           initloop 0C86  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0CAC                         _RCSTAbits 019D  
                WriteSPI@databyte 0024                      __pstringtext 0800                         _PORTAbits 000C  
                       _PORTBbits 000D                         _PORTCbits 000E                    Hibernate@count 0021  
                __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E           WriteOverheadSPI@address 0027  
               SendGPSSPI@address 0036                   DecodeGPS@status 0048              uart_xmit@mydata_byte 0020  
           _preRecordingAddresses 02A0                         _DecodeGPS 011C                         _TXSTAbits 019E  
                    ??_ReadBuffer 0020                        _strobeFlag 00ED                      ??_InitTimer1 0020  
                       _GoToSleep 0CF8                    __end_of___bmul 0D2E                       _WriteBuffer 0D41  
                  __end_of___wmul 0DC1        __end_of_uart_write_message 0788                         _Hibernate 0D89  
                    _InitWatchdog 07F9                      ??_SendGPSSPI 0035                     SetupGPS@F4920 0163  
                   SetupGPS@F4922 0169               start_initialization 00D4                  _compute_checksum 0EA4  
       WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 0035                       __end_of_isr 00D2  
              __end_of_ReadBuffer 0D70                 compute_checksum@x 0026                __end_of_InitTimer1 0CC7  
                      ?_DecodeGPS 0070                    _ToggleSleepGPS 0E11                 __size_of_InitGPIO 002D  
              __end_of_SendGPSSPI 07F9                         SetupGPS@x 00DC              compute_checksum@data 0025  
                      ?_GoToSleep 0070                          ??___bmul 0021              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 04C0                       __pdataBANK1 00E2  
                     __pdataBANK2 015C                       __pdataBANK3 01A0                 __size_of_SetupGPS 0096  
                       _UpdateGPS 0F9A                        ?_Hibernate 0070          compute_checksum@checksum 0024  
               __size_of_WriteSPI 0013                       __pbssCOMMON 0079                         ___latbits 0001  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                  _WriteOverheadSPI 0F3A  
             __end_of__stringdata 084B               uart_write_message@x 0031                     _validEastWest 00E9  
          __end_of_ToggleSleepGPS 0E3E                   _messageDoneFlag 00EB                       sprintf@_val 003C  
                     sprintf@flag 0038                       sprintf@prec 0039                          ?_InitADC 0070  
                        ?_InitCLK 0070                          ?_InitSPI 0070                 __size_of_initUART 000F  
                        ?_ReadSPI 0070                     _validLatitude 00E2                  ___lwdiv@dividend 0022  
           __end_of_ReadStatusSPI 0CE7                          ?___awdiv 0026                          ?___lwdiv 0020  
                        ?___lwmod 0028                        ?_UpdateGPS 0070                    UpdateGPS@F4928 01A0  
                __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 0025                          ?_sprintf 002E  
                  UpdateGPS@count 006A        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 00EA                       ??_DecodeGPS 003C                    ___wmul@product 0024  
                        _LATBbits 010D                         clear_ram0 0C8B                          _PIE1bits 0091  
                  DecodeGPS@F4931 015C                    DecodeGPS@F4933 0124                    DecodeGPS@F4935 0127  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0CA2  
                     ??_Hibernate 0020                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 080A                        _ADCON2bits 009F                 ___wmul@multiplier 0020  
                 RecordMode@count 003A                          _InitGPIO 0DE4                  __size_of_InitADC 0019  
                __size_of_InitCLK 0008                  __size_of_InitSPI 0012                  __size_of_ReadSPI 000C  
        __end_of_compute_checksum 0EE6             SetupGPS@startSequence 00D2                          _SetupGPS 067C  
                      ?_uart_xmit 0070                      ?_WriteBuffer 0070                  __size_of___awdiv 0054  
                     ??_UpdateGPS 0051                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
                        _WriteSPI 0D2E           _uart_write_message$1376 002D           _uart_write_message$1377 002F  
                      _ANSELAbits 018C                        _ANSELBbits 018D               ReadBuffer@read_data 0021  
                 ___lwdiv@divisor 0020                   ___lwdiv@counter 0027                          __ptext10 0E6D  
                        __ptext11 011C                          __ptext20 0CAC                          __ptext12 0DA3  
                        __ptext21 0D58                          __ptext13 0D1C                        _T1GCONbits 0019  
                        __ptext22 0D0A                          __ptext14 0EE6                          __ptext31 0D41  
                        __ptext23 07F9                          __ptext15 0788                          __ptext24 0CB8  
                        __ptext16 0381                          __ptext25 0DE4                          __ptext17 0F3A  
                        __ptext26 0C91                          __ptext18 0CD6                          __ptext27 0D70  
                        __ptext19 0D2E                          __ptext28 0D89                          __ptext29 0CF8  
              _uart_write_message 0712                  __size_of_sprintf 0106                          _gpsIndex 007D  
                        _initUART 0CC7                     __size_of_main 00B6               ?_uart_write_message 0028  
                      DecodeGPS@x 004F          __end_of_WriteOverheadSPI 0F9A                    GoToSleep@count 0021  
                        main@argc 006C                          main@argv 006E              ??_uart_write_message 002A  
                      _INTCONbits 000B                       pic14e$flags 007E                          intlevel1 0000  
                       sprintf@ap 003A                         sprintf@sp 003B                  ___lwmod@dividend 002A  
               __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099                       ??_uart_xmit 0020  
                        sprintf@c 0040                          sprintf@f 002E                   ___lwmod@divisor 0028  
                 ___lwmod@counter 002D                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                   _recordEndAdress 0120                 DecodeGPS@eastWest 0047  
