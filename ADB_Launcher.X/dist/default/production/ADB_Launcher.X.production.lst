

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Oct 26 23:12:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0090                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0094                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0097                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011D                     	;# 
   103  011D                     	;# 
   104  011E                     	;# 
   105  011F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0197                     	;# 
   118  0199                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  0210                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  028C                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  030C                     	;# 
   174  030D                     	;# 
   175  030E                     	;# 
   176  038C                     	;# 
   177  038D                     	;# 
   178  038E                     	;# 
   179  0390                     	;# 
   180  0391                     	;# 
   181  0392                     	;# 
   182  0393                     	;# 
   183  0394                     	;# 
   184  0395                     	;# 
   185  0396                     	;# 
   186  0397                     	;# 
   187  0398                     	;# 
   188  0399                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0511                     	;# 
   193  0513                     	;# 
   194  051A                     	;# 
   195  0811                     	;# 
   196  0812                     	;# 
   197  0813                     	;# 
   198  0814                     	;# 
   199  0815                     	;# 
   200  0816                     	;# 
   201  0817                     	;# 
   202  0818                     	;# 
   203  0819                     	;# 
   204  081A                     	;# 
   205  081B                     	;# 
   206  081C                     	;# 
   207  081D                     	;# 
   208  081E                     	;# 
   209  081F                     	;# 
   210  0820                     	;# 
   211  0821                     	;# 
   212  0821                     	;# 
   213  0822                     	;# 
   214  0823                     	;# 
   215  0823                     	;# 
   216  0824                     	;# 
   217  0825                     	;# 
   218  0825                     	;# 
   219  0826                     	;# 
   220  0827                     	;# 
   221  0827                     	;# 
   222  0828                     	;# 
   223  0829                     	;# 
   224  082A                     	;# 
   225  082B                     	;# 
   226  082C                     	;# 
   227  082D                     	;# 
   228  082E                     	;# 
   229  082F                     	;# 
   230  0831                     	;# 
   231  0832                     	;# 
   232  0833                     	;# 
   233  0834                     	;# 
   234  0835                     	;# 
   235  0836                     	;# 
   236  0837                     	;# 
   237  0838                     	;# 
   238  0839                     	;# 
   239  083A                     	;# 
   240  083B                     	;# 
   241  083C                     	;# 
   242  083D                     	;# 
   243  083E                     	;# 
   244  083F                     	;# 
   245  0840                     	;# 
   246  0841                     	;# 
   247  0841                     	;# 
   248  0842                     	;# 
   249  0843                     	;# 
   250  0843                     	;# 
   251  0844                     	;# 
   252  0845                     	;# 
   253  0845                     	;# 
   254  0846                     	;# 
   255  0847                     	;# 
   256  0847                     	;# 
   257  0848                     	;# 
   258  0849                     	;# 
   259  084A                     	;# 
   260  084B                     	;# 
   261  084C                     	;# 
   262  084D                     	;# 
   263  084E                     	;# 
   264  084F                     	;# 
   265  0FE4                     	;# 
   266  0FE5                     	;# 
   267  0FE6                     	;# 
   268  0FE7                     	;# 
   269  0FE8                     	;# 
   270  0FE9                     	;# 
   271  0FEA                     	;# 
   272  0FEB                     	;# 
   273  0FED                     	;# 
   274  0FEE                     	;# 
   275  0FEF                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0008                     	;# 
   285  0009                     	;# 
   286  000A                     	;# 
   287  000B                     	;# 
   288  000C                     	;# 
   289  000D                     	;# 
   290  000E                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0014                     	;# 
   295  0015                     	;# 
   296  0016                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001C                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0090                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0094                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  010C                     	;# 
   324  010D                     	;# 
   325  010E                     	;# 
   326  0111                     	;# 
   327  0112                     	;# 
   328  0113                     	;# 
   329  0114                     	;# 
   330  0115                     	;# 
   331  0116                     	;# 
   332  0117                     	;# 
   333  0118                     	;# 
   334  0119                     	;# 
   335  011D                     	;# 
   336  011D                     	;# 
   337  011E                     	;# 
   338  011F                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0191                     	;# 
   342  0191                     	;# 
   343  0192                     	;# 
   344  0193                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0199                     	;# 
   351  0199                     	;# 
   352  0199                     	;# 
   353  019A                     	;# 
   354  019A                     	;# 
   355  019A                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019C                     	;# 
   362  019C                     	;# 
   363  019C                     	;# 
   364  019D                     	;# 
   365  019D                     	;# 
   366  019D                     	;# 
   367  019E                     	;# 
   368  019E                     	;# 
   369  019E                     	;# 
   370  019F                     	;# 
   371  019F                     	;# 
   372  019F                     	;# 
   373  019F                     	;# 
   374  019F                     	;# 
   375  020C                     	;# 
   376  020D                     	;# 
   377  020E                     	;# 
   378  0210                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  028C                     	;# 
   395  028D                     	;# 
   396  028E                     	;# 
   397  0291                     	;# 
   398  0291                     	;# 
   399  0292                     	;# 
   400  0293                     	;# 
   401  0298                     	;# 
   402  0298                     	;# 
   403  0299                     	;# 
   404  029A                     	;# 
   405  030C                     	;# 
   406  030D                     	;# 
   407  030E                     	;# 
   408  038C                     	;# 
   409  038D                     	;# 
   410  038E                     	;# 
   411  0390                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  0393                     	;# 
   415  0394                     	;# 
   416  0395                     	;# 
   417  0396                     	;# 
   418  0397                     	;# 
   419  0398                     	;# 
   420  0399                     	;# 
   421  039D                     	;# 
   422  039E                     	;# 
   423  039F                     	;# 
   424  0511                     	;# 
   425  0513                     	;# 
   426  051A                     	;# 
   427  0811                     	;# 
   428  0812                     	;# 
   429  0813                     	;# 
   430  0814                     	;# 
   431  0815                     	;# 
   432  0816                     	;# 
   433  0817                     	;# 
   434  0818                     	;# 
   435  0819                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081D                     	;# 
   440  081E                     	;# 
   441  081F                     	;# 
   442  0820                     	;# 
   443  0821                     	;# 
   444  0821                     	;# 
   445  0822                     	;# 
   446  0823                     	;# 
   447  0823                     	;# 
   448  0824                     	;# 
   449  0825                     	;# 
   450  0825                     	;# 
   451  0826                     	;# 
   452  0827                     	;# 
   453  0827                     	;# 
   454  0828                     	;# 
   455  0829                     	;# 
   456  082A                     	;# 
   457  082B                     	;# 
   458  082C                     	;# 
   459  082D                     	;# 
   460  082E                     	;# 
   461  082F                     	;# 
   462  0831                     	;# 
   463  0832                     	;# 
   464  0833                     	;# 
   465  0834                     	;# 
   466  0835                     	;# 
   467  0836                     	;# 
   468  0837                     	;# 
   469  0838                     	;# 
   470  0839                     	;# 
   471  083A                     	;# 
   472  083B                     	;# 
   473  083C                     	;# 
   474  083D                     	;# 
   475  083E                     	;# 
   476  083F                     	;# 
   477  0840                     	;# 
   478  0841                     	;# 
   479  0841                     	;# 
   480  0842                     	;# 
   481  0843                     	;# 
   482  0843                     	;# 
   483  0844                     	;# 
   484  0845                     	;# 
   485  0845                     	;# 
   486  0846                     	;# 
   487  0847                     	;# 
   488  0847                     	;# 
   489  0848                     	;# 
   490  0849                     	;# 
   491  084A                     	;# 
   492  084B                     	;# 
   493  084C                     	;# 
   494  084D                     	;# 
   495  084E                     	;# 
   496  084F                     	;# 
   497  0FE4                     	;# 
   498  0FE5                     	;# 
   499  0FE6                     	;# 
   500  0FE7                     	;# 
   501  0FE8                     	;# 
   502  0FE9                     	;# 
   503  0FEA                     	;# 
   504  0FEB                     	;# 
   505  0FED                     	;# 
   506  0FEE                     	;# 
   507  0FEF                     	;# 
   508  0000                     	;# 
   509  0001                     	;# 
   510  0002                     	;# 
   511  0003                     	;# 
   512  0004                     	;# 
   513  0005                     	;# 
   514  0006                     	;# 
   515  0007                     	;# 
   516  0008                     	;# 
   517  0009                     	;# 
   518  000A                     	;# 
   519  000B                     	;# 
   520  000C                     	;# 
   521  000D                     	;# 
   522  000E                     	;# 
   523  0010                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0014                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0016                     	;# 
   530  0017                     	;# 
   531  0018                     	;# 
   532  0019                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  0090                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0094                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011D                     	;# 
   568  011D                     	;# 
   569  011E                     	;# 
   570  011F                     	;# 
   571  018C                     	;# 
   572  018D                     	;# 
   573  0191                     	;# 
   574  0191                     	;# 
   575  0192                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0199                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019C                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  020C                     	;# 
   608  020D                     	;# 
   609  020E                     	;# 
   610  0210                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  028C                     	;# 
   627  028D                     	;# 
   628  028E                     	;# 
   629  0291                     	;# 
   630  0291                     	;# 
   631  0292                     	;# 
   632  0293                     	;# 
   633  0298                     	;# 
   634  0298                     	;# 
   635  0299                     	;# 
   636  029A                     	;# 
   637  030C                     	;# 
   638  030D                     	;# 
   639  030E                     	;# 
   640  038C                     	;# 
   641  038D                     	;# 
   642  038E                     	;# 
   643  0390                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  039D                     	;# 
   654  039E                     	;# 
   655  039F                     	;# 
   656  0511                     	;# 
   657  0513                     	;# 
   658  051A                     	;# 
   659  0811                     	;# 
   660  0812                     	;# 
   661  0813                     	;# 
   662  0814                     	;# 
   663  0815                     	;# 
   664  0816                     	;# 
   665  0817                     	;# 
   666  0818                     	;# 
   667  0819                     	;# 
   668  081A                     	;# 
   669  081B                     	;# 
   670  081C                     	;# 
   671  081D                     	;# 
   672  081E                     	;# 
   673  081F                     	;# 
   674  0820                     	;# 
   675  0821                     	;# 
   676  0821                     	;# 
   677  0822                     	;# 
   678  0823                     	;# 
   679  0823                     	;# 
   680  0824                     	;# 
   681  0825                     	;# 
   682  0825                     	;# 
   683  0826                     	;# 
   684  0827                     	;# 
   685  0827                     	;# 
   686  0828                     	;# 
   687  0829                     	;# 
   688  082A                     	;# 
   689  082B                     	;# 
   690  082C                     	;# 
   691  082D                     	;# 
   692  082E                     	;# 
   693  082F                     	;# 
   694  0831                     	;# 
   695  0832                     	;# 
   696  0833                     	;# 
   697  0834                     	;# 
   698  0835                     	;# 
   699  0836                     	;# 
   700  0837                     	;# 
   701  0838                     	;# 
   702  0839                     	;# 
   703  083A                     	;# 
   704  083B                     	;# 
   705  083C                     	;# 
   706  083D                     	;# 
   707  083E                     	;# 
   708  083F                     	;# 
   709  0840                     	;# 
   710  0841                     	;# 
   711  0841                     	;# 
   712  0842                     	;# 
   713  0843                     	;# 
   714  0843                     	;# 
   715  0844                     	;# 
   716  0845                     	;# 
   717  0845                     	;# 
   718  0846                     	;# 
   719  0847                     	;# 
   720  0847                     	;# 
   721  0848                     	;# 
   722  0849                     	;# 
   723  084A                     	;# 
   724  084B                     	;# 
   725  084C                     	;# 
   726  084D                     	;# 
   727  084E                     	;# 
   728  084F                     	;# 
   729  0FE4                     	;# 
   730  0FE5                     	;# 
   731  0FE6                     	;# 
   732  0FE7                     	;# 
   733  0FE8                     	;# 
   734  0FE9                     	;# 
   735  0FEA                     	;# 
   736  0FEB                     	;# 
   737  0FED                     	;# 
   738  0FEE                     	;# 
   739  0FEF                     	;# 
   740                           
   741                           	psect	idataBANK0
   742  07B2                     __pidataBANK0:	
   743                           
   744                           ;initializer for _gpsInvalidFlag
   745  07B2  3401               	retlw	1
   746                           
   747                           	psect	idataBANK1
   748  0783                     __pidataBANK1:	
   749                           
   750                           ;initializer for SetupGPS@F4906
   751  0783  3424               	retlw	36
   752  0784  3450               	retlw	80
   753  0785  3453               	retlw	83
   754  0786  3452               	retlw	82
   755  0787  3446               	retlw	70
   756  0788  3400               	retlw	0
   757                           
   758                           ;initializer for SetupGPS@F4908
   759  0789  3431               	retlw	49
   760  078A  3430               	retlw	48
   761  078B  3433               	retlw	51
   762  078C  3400               	retlw	0
   763                           
   764                           	psect	idataBANK2
   765  0695                     __pidataBANK2:	
   766                           
   767                           ;initializer for UpdateGPS@F4913
   768  0695  3424               	retlw	36
   769  0696  3450               	retlw	80
   770  0697  3453               	retlw	83
   771  0698  3452               	retlw	82
   772  0699  3446               	retlw	70
   773  069A  3431               	retlw	49
   774  069B  3430               	retlw	48
   775  069C  3433               	retlw	51
   776  069D  342C               	retlw	44
   777  069E  3430               	retlw	48
   778  069F  3431               	retlw	49
   779  06A0  342C               	retlw	44
   780  06A1  3430               	retlw	48
   781  06A2  3431               	retlw	49
   782  06A3  342C               	retlw	44
   783  06A4  3430               	retlw	48
   784  06A5  3430               	retlw	48
   785  06A6  342C               	retlw	44
   786  06A7  3430               	retlw	48
   787  06A8  3430               	retlw	48
   788  06A9  342A               	retlw	42
   789  06AA  3400               	retlw	0
   790                           
   791                           ;initializer for DisableGPS@F4903
   792  06AB  3424               	retlw	36
   793  06AC  3450               	retlw	80
   794  06AD  3453               	retlw	83
   795  06AE  3452               	retlw	82
   796  06AF  3446               	retlw	70
   797  06B0  3431               	retlw	49
   798  06B1  3431               	retlw	49
   799  06B2  3437               	retlw	55
   800  06B3  342C               	retlw	44
   801  06B4  3431               	retlw	49
   802  06B5  3436               	retlw	54
   803  06B6  342A               	retlw	42
   804  06B7  3400               	retlw	0
   805                           
   806                           ;initializer for DecodeGPS@F4915
   807  06B8  3424               	retlw	36
   808  06B9  3447               	retlw	71
   809  06BA  3450               	retlw	80
   810  06BB  3447               	retlw	71
   811  06BC  344C               	retlw	76
   812  06BD  344C               	retlw	76
   813  06BE  3400               	retlw	0
   814                           
   815                           	psect	stringtext
   816  0600                     __pstringtext:	
   817  0600                     _dpowers:	
   818  0600  3401               	retlw	1
   819  0601  3400               	retlw	0
   820  0602  340A               	retlw	10
   821  0603  3400               	retlw	0
   822  0604  3464               	retlw	100
   823  0605  3400               	retlw	0
   824  0606  34E8               	retlw	232
   825  0607  3403               	retlw	3
   826  0608  3410               	retlw	16
   827  0609  3427               	retlw	39
   828  060A                     __end_of_dpowers:	
   829  060A                     __stringdata:	
   830  060A                     STR_1:	
   831  060A  3425               	retlw	37	;'%'
   832  060B  3473               	retlw	115	;'s'
   833  060C  3425               	retlw	37	;'%'
   834  060D  3473               	retlw	115	;'s'
   835  060E  342C               	retlw	44	;','
   836  060F  3430               	retlw	48	;'0'
   837  0610  3425               	retlw	37	;'%'
   838  0611  3464               	retlw	100	;'d'
   839  0612  342C               	retlw	44	;','
   840  0613  3430               	retlw	48	;'0'
   841  0614  3430               	retlw	48	;'0'
   842  0615  342C               	retlw	44	;','
   843  0616  3430               	retlw	48	;'0'
   844  0617  3430               	retlw	48	;'0'
   845  0618  342C               	retlw	44	;','
   846  0619  3430               	retlw	48	;'0'
   847  061A  3430               	retlw	48	;'0'
   848  061B  342A               	retlw	42	;'*'
   849  061C  3400               	retlw	0
   850  061D                     STR_2:	
   851  061D  3425               	retlw	37	;'%'
   852  061E  3473               	retlw	115	;'s'
   853  061F  3425               	retlw	37	;'%'
   854  0620  3473               	retlw	115	;'s'
   855  0621  342C               	retlw	44	;','
   856  0622  3430               	retlw	48	;'0'
   857  0623  3431               	retlw	49	;'1'
   858  0624  342C               	retlw	44	;','
   859  0625  3430               	retlw	48	;'0'
   860  0626  3431               	retlw	49	;'1'
   861  0627  342C               	retlw	44	;','
   862  0628  3430               	retlw	48	;'0'
   863  0629  3431               	retlw	49	;'1'
   864  062A  342C               	retlw	44	;','
   865  062B  3430               	retlw	48	;'0'
   866  062C  3430               	retlw	48	;'0'
   867  062D  342A               	retlw	42	;'*'
   868  062E  3400               	retlw	0
   869  062F                     STR_3:	
   870  062F  3428               	retlw	40	;'('
   871  0630  346E               	retlw	110	;'n'
   872  0631  3475               	retlw	117	;'u'
   873  0632  346C               	retlw	108	;'l'
   874  0633  346C               	retlw	108	;'l'
   875  0634  3429               	retlw	41	;')'
   876  0635  3400               	retlw	0
   877  0636                     __end_of__stringdata:	
   878                           
   879                           ; #config settings
   880  0000                     
   881                           	psect	nvBANK0
   882  006D                     __pnvBANK0:	
   883  006D                     _gpsIndex:	
   884  006D                     	ds	1
   885  000B                     _INTCONbits	set	11
   886  0011                     _PIR1bits	set	17
   887  000D                     _PORTBbits	set	13
   888  0018                     _T1CONbits	set	24
   889  0019                     _T1GCONbits	set	25
   890  0017                     _TMR1H	set	23
   891  0016                     _TMR1L	set	22
   892  008E                     _ADIF	set	142
   893  005F                     _GIE	set	95
   894  005E                     _PEIE	set	94
   895  0066                     _RA6	set	102
   896  0088                     _TMR1IF	set	136
   897  009D                     _ADCON0bits	set	157
   898  009E                     _ADCON1bits	set	158
   899  009F                     _ADCON2bits	set	159
   900  009C                     _ADRESH	set	156
   901  0099                     _OSCCONbits	set	153
   902  0091                     _PIE1bits	set	145
   903  008C                     _TRISAbits	set	140
   904  008D                     _TRISBbits	set	141
   905  008E                     _TRISCbits	set	142
   906  0097                     _WDTCONbits	set	151
   907  048E                     _ADIE	set	1166
   908  048D                     _RCIE	set	1165
   909  0488                     _TMR1IE	set	1160
   910  010D                     _LATBbits	set	269
   911  0872                     _LATC2	set	2162
   912  018C                     _ANSELAbits	set	396
   913  018D                     _ANSELBbits	set	397
   914  0199                     _RCREG	set	409
   915  019D                     _RCSTAbits	set	413
   916  019C                     _SPBRGH	set	412
   917  019B                     _SPBRGL	set	411
   918  019A                     _TXREG	set	410
   919  019E                     _TXSTAbits	set	414
   920  0CE9                     _OERR	set	3305
   921  0211                     _SSPBUF	set	529
   922  0215                     _SSPCON1bits	set	533
   923  0214                     _SSPSTATbits	set	532
   924  0396                     _IOCBF	set	918
   925  0396                     _IOCBFbits	set	918
   926  0395                     _IOCBNbits	set	917
   927  0394                     _IOCBPbits	set	916
   928                           
   929                           	psect	cinit
   930  00A8                     start_initialization:	
   931  00A8                     __initialization:	
   932                           
   933                           ; Clear objects allocated to COMMON
   934  00A8  01F9               	clrf	__pbssCOMMON& (0+127)
   935  00A9  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   936  00AA  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   937  00AB  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   938  00AC  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   939                           
   940                           ; Clear objects allocated to BANK0
   941  00AD  01EE               	clrf	__pbssBANK0& (0+127)
   942                           
   943                           ; Clear objects allocated to BANK1
   944  00AE  30A0               	movlw	low __pbssBANK1
   945  00AF  0084               	movwf	4
   946  00B0  3000               	movlw	high __pbssBANK1
   947  00B1  0085               	movwf	5
   948  00B2  3042               	movlw	66
   949  00B3  3187  27A6  3180   	fcall	clear_ram0
   950                           
   951                           ; Clear objects allocated to BANK3
   952  00B6  30A0               	movlw	low __pbssBANK3
   953  00B7  0084               	movwf	4
   954  00B8  3001               	movlw	high __pbssBANK3
   955  00B9  0085               	movwf	5
   956  00BA  3033               	movlw	51
   957  00BB  3187  27A6  3180   	fcall	clear_ram0
   958                           
   959                           ; Initialize objects allocated to BANK0
   960  00BE  3187  27B2  3180   	fcall	__pidataBANK0	;fetch initializer
   961  00C1  00EF               	movwf	__pdataBANK0& (0+127)
   962                           
   963                           ; Initialize objects allocated to BANK1
   964  00C2  3083               	movlw	low __pidataBANK1
   965  00C3  0084               	movwf	4
   966  00C4  3087               	movlw	(high __pidataBANK1)| (0+128)
   967  00C5  0085               	movwf	5
   968  00C6  30E2               	movlw	low __pdataBANK1
   969  00C7  0086               	movwf	6
   970  00C8  3000               	movlw	high __pdataBANK1
   971  00C9  0087               	movwf	7
   972  00CA  300A               	movlw	10
   973  00CB  3187  27AC  3180   	fcall	init_ram
   974                           
   975                           ; Initialize objects allocated to BANK2
   976  00CE  3095               	movlw	low __pidataBANK2
   977  00CF  0084               	movwf	4
   978  00D0  3086               	movlw	(high __pidataBANK2)| (0+128)
   979  00D1  0085               	movwf	5
   980  00D2  3020               	movlw	low __pdataBANK2
   981  00D3  0086               	movwf	6
   982  00D4  3001               	movlw	high __pdataBANK2
   983  00D5  0087               	movwf	7
   984  00D6  302A               	movlw	42
   985  00D7  3187  27AC         	fcall	init_ram
   986  00D9                     end_of_initialization:	
   987                           ;End of C runtime variable initialization code
   988                           
   989  00D9                     __end_of__initialization:	
   990  00D9  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   991  00DA  0020               	movlb	0
   992  00DB  3184  2C7A         	ljmp	_main	;jump to C main() function
   993                           
   994                           	psect	bssCOMMON
   995  0079                     __pbssCOMMON:	
   996  0079                     _end:	
   997  0079                     	ds	2
   998  007B                     _start:	
   999  007B                     	ds	2
  1000  007D                     _recordModeFlag:	
  1001  007D                     	ds	1
  1002                           
  1003                           	psect	bssBANK0
  1004  006E                     __pbssBANK0:	
  1005  006E                     _messageDoneFlag:	
  1006  006E                     	ds	1
  1007                           
  1008                           	psect	dataBANK0
  1009  006F                     __pdataBANK0:	
  1010  006F                     _gpsInvalidFlag:	
  1011  006F                     	ds	1
  1012                           
  1013                           	psect	bssBANK1
  1014  00A0                     __pbssBANK1:	
  1015  00A0                     _gpsMessage:	
  1016  00A0                     	ds	50
  1017  00D2                     DecodeGPS@F4917:	
  1018  00D2                     	ds	8
  1019  00DA                     DecodeGPS@F4919:	
  1020  00DA                     	ds	8
  1021                           
  1022                           	psect	dataBANK1
  1023  00E2                     __pdataBANK1:	
  1024  00E2                     SetupGPS@F4906:	
  1025  00E2                     	ds	6
  1026  00E8                     SetupGPS@F4908:	
  1027  00E8                     	ds	4
  1028                           
  1029                           	psect	dataBANK2
  1030  0120                     __pdataBANK2:	
  1031  0120                     UpdateGPS@F4913:	
  1032  0120                     	ds	22
  1033  0136                     DisableGPS@F4903:	
  1034  0136                     	ds	13
  1035  0143                     DecodeGPS@F4915:	
  1036  0143                     	ds	7
  1037                           
  1038                           	psect	bssBANK3
  1039  01A0                     __pbssBANK3:	
  1040  01A0                     _buffer:	
  1041  01A0                     	ds	51
  1042                           
  1043                           	psect	clrtext
  1044  07A6                     clear_ram0:	
  1045                           ;	Called with FSR0 containing the base address, and
  1046                           ;	WREG with the size to clear
  1047                           
  1048  07A6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1049  07A7                     clrloop0:	
  1050  07A7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1051  07A8  3101               	addfsr 0,1
  1052  07A9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1053  07AA  2FA7               	goto	clrloop0	;have we reached the end yet?
  1054  07AB  3400               	retlw	0	;all done for this memory range, return
  1055                           
  1056                           	psect	inittext
  1057  07AC                     init_ram:	
  1058  07AC  00FE               	movwf	126
  1059  07AD                     initloop:	
  1060  07AD  0012               	moviw fsr0++
  1061  07AE  001E               	movwi fsr1++
  1062  07AF  0BFE               	decfsz	126,f
  1063  07B0  2FAD               	goto	initloop
  1064  07B1  3400               	retlw	0
  1065                           
  1066                           	psect	cstackCOMMON
  1067  0070                     __pcstackCOMMON:	
  1068  0070                     ?_InitCLK:	
  1069  0070                     ?_InitGPIO:	
  1070                           ; 0 bytes @ 0x0
  1071                           
  1072  0070                     ?_InitADC:	
  1073                           ; 0 bytes @ 0x0
  1074                           
  1075  0070                     ?_InitSPI:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  0070                     ?_InitTimer1:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  0070                     ?_InitWatchdog:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_initUART:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_ToggleSleepGPS:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_SetupGPS:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_UpdateGPS:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_DecodeGPS:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_WriteBuffer:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ??_WriteBuffer:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ?_isr:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_uart_xmit:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111                           
  1112                           ; 0 bytes @ 0x0
  1113  0070                     	ds	1
  1114  0071                     WriteBuffer@data:	
  1115                           
  1116                           ; 1 bytes @ 0x1
  1117  0071                     	ds	1
  1118  0072                     ??_isr:	
  1119                           
  1120                           ; 0 bytes @ 0x2
  1121  0072                     	ds	5
  1122  0077                     _isr$400:	
  1123                           
  1124                           ; 2 bytes @ 0x7
  1125  0077                     	ds	2
  1126                           
  1127                           	psect	cstackBANK0
  1128  0020                     __pcstackBANK0:	
  1129  0020                     ??_InitCLK:	
  1130  0020                     ??_InitGPIO:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0020                     ??_InitADC:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0020                     ??_InitSPI:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0020                     ??_InitTimer1:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0020                     ??_InitWatchdog:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0020                     ??_initUART:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0020                     ??_ToggleSleepGPS:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0020                     ??_uart_xmit:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0020                     ?_compute_checksum:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0020                     ?___lwdiv:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0020                     ?___lmul:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163  0020                     uart_xmit@mydata_byte:	
  1164                           ; 4 bytes @ 0x0
  1165                           
  1166  0020                     compute_checksum@size:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0020                     ___lwdiv@divisor:	
  1170                           ; 2 bytes @ 0x0
  1171                           
  1172  0020                     ___lmul@multiplier:	
  1173                           ; 2 bytes @ 0x0
  1174                           
  1175                           
  1176                           ; 4 bytes @ 0x0
  1177  0020                     	ds	2
  1178  0022                     ??_compute_checksum:	
  1179  0022                     ___lwdiv@dividend:	
  1180                           ; 0 bytes @ 0x2
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0x2
  1184  0022                     	ds	2
  1185  0024                     ??___lwdiv:	
  1186  0024                     compute_checksum@checksum:	
  1187                           ; 0 bytes @ 0x4
  1188                           
  1189  0024                     ___lmul@multiplicand:	
  1190                           ; 1 bytes @ 0x4
  1191                           
  1192                           
  1193                           ; 4 bytes @ 0x4
  1194  0024                     	ds	1
  1195  0025                     compute_checksum@data:	
  1196  0025                     ___lwdiv@quotient:	
  1197                           ; 1 bytes @ 0x5
  1198                           
  1199                           
  1200                           ; 2 bytes @ 0x5
  1201  0025                     	ds	1
  1202  0026                     compute_checksum@x:	
  1203                           
  1204                           ; 2 bytes @ 0x6
  1205  0026                     	ds	1
  1206  0027                     ___lwdiv@counter:	
  1207                           
  1208                           ; 1 bytes @ 0x7
  1209  0027                     	ds	1
  1210  0028                     ?_uart_write_message:	
  1211  0028                     ??___lmul:	
  1212                           ; 0 bytes @ 0x8
  1213                           
  1214  0028                     ?___lwmod:	
  1215                           ; 0 bytes @ 0x8
  1216                           
  1217  0028                     uart_write_message@size:	
  1218                           ; 2 bytes @ 0x8
  1219                           
  1220  0028                     ___lwmod@divisor:	
  1221                           ; 2 bytes @ 0x8
  1222                           
  1223  0028                     ___lmul@product:	
  1224                           ; 2 bytes @ 0x8
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x8
  1228  0028                     	ds	2
  1229  002A                     ??_uart_write_message:	
  1230  002A                     ___lwmod@dividend:	
  1231                           ; 0 bytes @ 0xA
  1232                           
  1233                           
  1234                           ; 2 bytes @ 0xA
  1235  002A                     	ds	2
  1236  002C                     ??_DecodeGPS:	
  1237  002C                     ??___lwmod:	
  1238                           ; 0 bytes @ 0xC
  1239                           
  1240                           
  1241                           ; 0 bytes @ 0xC
  1242  002C                     	ds	1
  1243  002D                     ___lwmod@counter:	
  1244  002D                     _uart_write_message$1094:	
  1245                           ; 1 bytes @ 0xD
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0xD
  1249  002D                     	ds	1
  1250  002E                     ?_sprintf:	
  1251  002E                     sprintf@f:	
  1252                           ; 2 bytes @ 0xE
  1253                           
  1254                           
  1255                           ; 2 bytes @ 0xE
  1256  002E                     	ds	1
  1257  002F                     _uart_write_message$1095:	
  1258                           
  1259                           ; 2 bytes @ 0xF
  1260  002F                     	ds	2
  1261  0031                     uart_write_message@x:	
  1262                           
  1263                           ; 2 bytes @ 0x11
  1264  0031                     	ds	1
  1265  0032                     DecodeGPS@messageID:	
  1266                           
  1267                           ; 7 bytes @ 0x12
  1268  0032                     	ds	1
  1269  0033                     uart_write_message@checksum:	
  1270                           
  1271                           ; 1 bytes @ 0x13
  1272  0033                     	ds	1
  1273  0034                     ??_sprintf:	
  1274  0034                     uart_write_message@data:	
  1275                           ; 0 bytes @ 0x14
  1276                           
  1277                           
  1278                           ; 1 bytes @ 0x14
  1279  0034                     	ds	1
  1280  0035                     uart_write_message@ascii_checksum:	
  1281                           
  1282                           ; 2 bytes @ 0x15
  1283  0035                     	ds	2
  1284  0037                     ??_UpdateGPS:	
  1285                           
  1286                           ; 0 bytes @ 0x17
  1287  0037                     	ds	1
  1288  0038                     sprintf@flag:	
  1289  0038                     UpdateGPS@GPSupdateMessage:	
  1290                           ; 1 bytes @ 0x18
  1291                           
  1292                           
  1293                           ; 22 bytes @ 0x18
  1294  0038                     	ds	1
  1295  0039                     DecodeGPS@northSouth:	
  1296  0039                     sprintf@prec:	
  1297                           ; 1 bytes @ 0x19
  1298                           
  1299                           
  1300                           ; 1 bytes @ 0x19
  1301  0039                     	ds	1
  1302  003A                     DecodeGPS@eastWest:	
  1303  003A                     sprintf@ap:	
  1304                           ; 1 bytes @ 0x1A
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x1A
  1308  003A                     	ds	1
  1309  003B                     DecodeGPS@status:	
  1310  003B                     sprintf@sp:	
  1311                           ; 1 bytes @ 0x1B
  1312                           
  1313                           
  1314                           ; 1 bytes @ 0x1B
  1315  003B                     	ds	1
  1316  003C                     sprintf@_val:	
  1317  003C                     DecodeGPS@latitude:	
  1318                           ; 4 bytes @ 0x1C
  1319                           
  1320                           
  1321                           ; 8 bytes @ 0x1C
  1322  003C                     	ds	4
  1323  0040                     sprintf@c:	
  1324                           
  1325                           ; 1 bytes @ 0x20
  1326  0040                     	ds	1
  1327  0041                     ??_SetupGPS:	
  1328                           
  1329                           ; 0 bytes @ 0x21
  1330  0041                     	ds	3
  1331  0044                     DecodeGPS@longitude:	
  1332  0044                     SetupGPS@message:	
  1333                           ; 8 bytes @ 0x24
  1334                           
  1335                           
  1336                           ; 22 bytes @ 0x24
  1337  0044                     	ds	8
  1338  004C                     DecodeGPS@x:	
  1339                           
  1340                           ; 2 bytes @ 0x2C
  1341  004C                     	ds	14
  1342  005A                     SetupGPS@startSequence:	
  1343                           
  1344                           ; 6 bytes @ 0x3A
  1345  005A                     	ds	6
  1346  0060                     SetupGPS@MID:	
  1347                           
  1348                           ; 4 bytes @ 0x40
  1349  0060                     	ds	4
  1350  0064                     SetupGPS@x:	
  1351                           
  1352                           ; 2 bytes @ 0x44
  1353  0064                     	ds	2
  1354  0066                     ?_main:	
  1355  0066                     main@argc:	
  1356                           ; 2 bytes @ 0x46
  1357                           
  1358                           
  1359                           ; 2 bytes @ 0x46
  1360  0066                     	ds	2
  1361  0068                     main@argv:	
  1362                           
  1363                           ; 2 bytes @ 0x48
  1364  0068                     	ds	2
  1365  006A                     ??_main:	
  1366                           
  1367                           ; 0 bytes @ 0x4A
  1368  006A                     	ds	3
  1369                           
  1370                           	psect	maintext
  1371  047A                     __pmaintext:	
  1372 ;;
  1373 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1374 ;;
  1375 ;; *************** function _main *****************
  1376 ;; Defined at:
  1377 ;;		line 20 in file "launcher_main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  argc            2   70[BANK0 ] int 
  1380 ;;  argv            2   72[BANK0 ] PTR PTR unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2   70[BANK0 ] int 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 17F/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1392 ;;      Params:         0       4       0       0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0
  1394 ;;      Temps:          0       3       0       0       0       0       0       0
  1395 ;;      Totals:         0       7       0       0       0       0       0       0
  1396 ;;Total ram usage:        7 bytes
  1397 ;; Hardware stack levels required when called:    5
  1398 ;; This function calls:
  1399 ;;		_DecodeGPS
  1400 ;;		_InitADC
  1401 ;;		_InitCLK
  1402 ;;		_InitGPIO
  1403 ;;		_InitSPI
  1404 ;;		_InitTimer1
  1405 ;;		_InitWatchdog
  1406 ;;		_SetupGPS
  1407 ;;		_ToggleSleepGPS
  1408 ;;		_UpdateGPS
  1409 ;;		_initUART
  1410 ;; This function is called by:
  1411 ;;		Startup code after reset
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _main
  1417  047A                     _main:	
  1418                           
  1419                           ;launcher_main.c: 23: InitCLK();
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1423  047A  3187  2797  3184   	fcall	_InitCLK
  1424                           
  1425                           ;launcher_main.c: 24: InitGPIO();
  1426  047D  3186  26BF  3184   	fcall	_InitGPIO
  1427                           
  1428                           ;launcher_main.c: 25: InitADC();
  1429  0480  3187  2723  3184   	fcall	_InitADC
  1430                           
  1431                           ;launcher_main.c: 26: InitSPI();
  1432  0483  3187  2753  3184   	fcall	_InitSPI
  1433                           
  1434                           ;launcher_main.c: 27: InitTimer1();
  1435  0486  3187  2774  3184   	fcall	_InitTimer1
  1436                           
  1437                           ;launcher_main.c: 28: InitWatchdog();
  1438  0489  3187  279F  3184   	fcall	_InitWatchdog
  1439                           
  1440                           ;launcher_main.c: 29: initUART();
  1441  048C  3187  2765  3184   	fcall	_initUART
  1442                           
  1443                           ;launcher_main.c: 31: gpsIndex = 1;
  1444  048F  3001               	movlw	1
  1445  0490  0020               	movlb	0	; select bank0
  1446  0491  00EA               	movwf	??_main
  1447  0492  086A               	movf	??_main,w
  1448  0493  00ED               	movwf	_gpsIndex	;volatile
  1449                           
  1450                           ;launcher_main.c: 33: INTCONbits.GIE = 1;
  1451  0494  178B               	bsf	11,7	;volatile
  1452                           
  1453                           ;launcher_main.c: 35: ToggleSleepGPS();
  1454  0495  3186  26E4  3184   	fcall	_ToggleSleepGPS
  1455                           
  1456                           ;launcher_main.c: 37: SetupGPS();
  1457  0498  3183  23E8  3184   	fcall	_SetupGPS
  1458                           
  1459                           ;launcher_main.c: 38: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1460  049B  3015               	movlw	21
  1461  049C  0020               	movlb	0	; select bank0
  1462  049D  00EC               	movwf	??_main+2
  1463  049E  304B               	movlw	75
  1464  049F  00EB               	movwf	??_main+1
  1465  04A0  30D1               	movlw	209
  1466  04A1  00EA               	movwf	??_main
  1467  04A2                     u1637:	
  1468  04A2  0BEA               	decfsz	??_main,f
  1469  04A3  2CA2               	goto	u1637
  1470  04A4  0BEB               	decfsz	??_main+1,f
  1471  04A5  2CA2               	goto	u1637
  1472  04A6  0BEC               	decfsz	??_main+2,f
  1473  04A7  2CA2               	goto	u1637
  1474  04A8  0000               	nop
  1475  04A9                     l1919:	
  1476                           ;launcher_main.c: 43: while(1){
  1477                           
  1478                           
  1479                           ;launcher_main.c: 44: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1480  04A9  3015               	movlw	21
  1481  04AA  0020               	movlb	0	; select bank0
  1482  04AB  00EC               	movwf	??_main+2
  1483  04AC  304B               	movlw	75
  1484  04AD  00EB               	movwf	??_main+1
  1485  04AE  30D1               	movlw	209
  1486  04AF  00EA               	movwf	??_main
  1487  04B0                     u1647:	
  1488  04B0  0BEA               	decfsz	??_main,f
  1489  04B1  2CB0               	goto	u1647
  1490  04B2  0BEB               	decfsz	??_main+1,f
  1491  04B3  2CB0               	goto	u1647
  1492  04B4  0BEC               	decfsz	??_main+2,f
  1493  04B5  2CB0               	goto	u1647
  1494  04B6  0000               	nop
  1495                           
  1496                           ;launcher_main.c: 45: UpdateGPS();
  1497  04B7  3187  2706  3184   	fcall	_UpdateGPS
  1498  04BA                     l1923:	
  1499                           ;launcher_main.c: 46: while(!messageDoneFlag);
  1500                           
  1501  04BA  0020               	movlb	0	; select bank0
  1502  04BB  086E               	movf	_messageDoneFlag,w
  1503  04BC  1903               	btfsc	3,2
  1504  04BD  2CBA               	goto	l1923
  1505                           
  1506                           ;launcher_main.c: 47: DecodeGPS();
  1507  04BE  3180  20DD  3184   	fcall	_DecodeGPS
  1508                           
  1509                           ;launcher_main.c: 48: messageDoneFlag = 0;
  1510  04C1  0020               	movlb	0	; select bank0
  1511  04C2  01EE               	clrf	_messageDoneFlag
  1512                           
  1513                           ;launcher_main.c: 49: if(gpsInvalidFlag)
  1514  04C3  086F               	movf	_gpsInvalidFlag,w
  1515  04C4  1903               	btfsc	3,2
  1516  04C5  2CD6               	goto	l1933
  1517                           
  1518                           ;launcher_main.c: 50: {
  1519                           ;launcher_main.c: 51: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1520  04C6  0022               	movlb	2	; select bank2
  1521  04C7  080D               	movf	13,w	;volatile
  1522  04C8  39FF               	andlw	255
  1523  04C9  3820               	iorlw	32
  1524  04CA  0020               	movlb	0	; select bank0
  1525  04CB  00EA               	movwf	??_main
  1526  04CC  080D               	movf	13,w	;volatile
  1527  04CD  066A               	xorwf	??_main,w
  1528  04CE  3900               	andlw	-256
  1529  04CF  066A               	xorwf	??_main,w
  1530  04D0  008D               	movwf	13	;volatile
  1531                           
  1532                           ;launcher_main.c: 52: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1533  04D1  0022               	movlb	2	; select bank2
  1534  04D2  080D               	movf	13,w	;volatile
  1535  04D3  39FF               	andlw	255
  1536  04D4  39EF               	andlw	239
  1537  04D5  2CE5               	goto	L1
  1538  04D6                     l1933:	
  1539                           ;launcher_main.c: 53: }
  1540                           
  1541                           
  1542                           ;launcher_main.c: 54: else
  1543                           ;launcher_main.c: 55: {
  1544                           ;launcher_main.c: 56: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1545  04D6  0022               	movlb	2	; select bank2
  1546  04D7  080D               	movf	13,w	;volatile
  1547  04D8  39FF               	andlw	255
  1548  04D9  3810               	iorlw	16
  1549  04DA  0020               	movlb	0	; select bank0
  1550  04DB  00EA               	movwf	??_main
  1551  04DC  080D               	movf	13,w	;volatile
  1552  04DD  066A               	xorwf	??_main,w
  1553  04DE  3900               	andlw	-256
  1554  04DF  066A               	xorwf	??_main,w
  1555  04E0  008D               	movwf	13	;volatile
  1556                           
  1557                           ;launcher_main.c: 57: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1558  04E1  0022               	movlb	2	; select bank2
  1559  04E2  080D               	movf	13,w	;volatile
  1560  04E3  39FF               	andlw	255
  1561  04E4  39DF               	andlw	223
  1562  04E5                     L1:	
  1563  04E5  0020               	movlb	0	; select bank0
  1564  04E6  00EA               	movwf	??_main
  1565  04E7  080D               	movf	13,w	;volatile
  1566  04E8  066A               	xorwf	??_main,w
  1567  04E9  3900               	andlw	-256
  1568  04EA  066A               	xorwf	??_main,w
  1569  04EB  008D               	movwf	13	;volatile
  1570  04EC  2CA9               	goto	l1919
  1571  04ED                     __end_of_main:	
  1572                           ;launcher_main.c: 58: }
  1573                           ;launcher_main.c: 59: }
  1574                           ;launcher_main.c: 72: return (0);
  1575                           ;	Return value of _main is never used
  1576                           
  1577                           
  1578                           	psect	text1
  1579  0765                     __ptext1:	
  1580 ;; *************** function _initUART *****************
  1581 ;; Defined at:
  1582 ;;		line 245 in file "launcher_functions.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;		None               void
  1589 ;; Registers used:
  1590 ;;		wreg, status,2
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1596 ;;      Params:         0       0       0       0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    2
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _initUART
  1612  0765                     _initUART:	
  1613                           
  1614                           ;launcher_functions.c: 248: TRISCbits.TRISC6 = 0;
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _initUART: [wreg+status,2]
  1618  0765  0021               	movlb	1	; select bank1
  1619  0766  130E               	bcf	14,6	;volatile
  1620                           
  1621                           ;launcher_functions.c: 249: TRISCbits.TRISC7 = 1;
  1622  0767  178E               	bsf	14,7	;volatile
  1623                           
  1624                           ;launcher_functions.c: 250: TXSTAbits.BRGH = 0;
  1625  0768  0023               	movlb	3	; select bank3
  1626  0769  111E               	bcf	30,2	;volatile
  1627                           
  1628                           ;launcher_functions.c: 252: SPBRGH = 0;
  1629  076A  019C               	clrf	28	;volatile
  1630                           
  1631                           ;launcher_functions.c: 253: SPBRGL = 51;
  1632  076B  3033               	movlw	51
  1633  076C  009B               	movwf	27	;volatile
  1634                           
  1635                           ;launcher_functions.c: 254: TXSTAbits.TX9 = 0;
  1636  076D  131E               	bcf	30,6	;volatile
  1637                           
  1638                           ;launcher_functions.c: 255: TXSTAbits.SYNC = 0;
  1639  076E  121E               	bcf	30,4	;volatile
  1640                           
  1641                           ;launcher_functions.c: 256: TXSTAbits.TXEN = 1;
  1642  076F  169E               	bsf	30,5	;volatile
  1643                           
  1644                           ;launcher_functions.c: 258: RCSTAbits.SPEN = 1;
  1645  0770  179D               	bsf	29,7	;volatile
  1646                           
  1647                           ;launcher_functions.c: 259: RCSTAbits.RX9 = 0;
  1648  0771  131D               	bcf	29,6	;volatile
  1649                           
  1650                           ;launcher_functions.c: 260: RCSTAbits.CREN = 1;
  1651  0772  161D               	bsf	29,4	;volatile
  1652  0773  0008               	return
  1653  0774                     __end_of_initUART:	
  1654                           
  1655                           	psect	text2
  1656  0706                     __ptext2:	
  1657 ;; *************** function _UpdateGPS *****************
  1658 ;; Defined at:
  1659 ;;		line 350 in file "launcher_functions.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  GPSupdateMes   22   24[BANK0 ] unsigned char [22]
  1664 ;; Return value:  Size  Location     Type
  1665 ;;		None               void
  1666 ;; Registers used:
  1667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1673 ;;      Params:         0       0       0       0       0       0       0       0
  1674 ;;      Locals:         0      22       0       0       0       0       0       0
  1675 ;;      Temps:          0       1       0       0       0       0       0       0
  1676 ;;      Totals:         0      23       0       0       0       0       0       0
  1677 ;;Total ram usage:       23 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    4
  1680 ;; This function calls:
  1681 ;;		_uart_write_message
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _UpdateGPS
  1689  0706                     _UpdateGPS:	
  1690                           
  1691                           ;launcher_functions.c: 352: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,00,00*"
      +                          ;
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1695  0706  3020               	movlw	low UpdateGPS@F4913
  1696  0707  0086               	movwf	6
  1697  0708  3001               	movlw	high UpdateGPS@F4913
  1698  0709  0087               	movwf	7
  1699  070A  3038               	movlw	low UpdateGPS@GPSupdateMessage
  1700  070B  0084               	movwf	4
  1701  070C  3000               	movlw	high UpdateGPS@GPSupdateMessage
  1702  070D  0085               	movwf	5
  1703  070E  3016               	movlw	22
  1704  070F  0020               	movlb	0	; select bank0
  1705  0710  00B7               	movwf	??_UpdateGPS
  1706  0711                     u1250:	
  1707  0711  0016               	moviw fsr1++
  1708  0712  001A               	movwi fsr0++
  1709  0713  0BB7               	decfsz	??_UpdateGPS,f
  1710  0714  2F11               	goto	u1250
  1711                           
  1712                           ;launcher_functions.c: 355: RCIE = 1;
  1713  0715  0021               	movlb	1	; select bank1
  1714  0716  1691               	bsf	17,5	;volatile
  1715                           
  1716                           ;launcher_functions.c: 356: PEIE = 1;
  1717  0717  170B               	bsf	11,6	;volatile
  1718                           
  1719                           ;launcher_functions.c: 357: GIE = 1;
  1720  0718  178B               	bsf	11,7	;volatile
  1721                           
  1722                           ;launcher_functions.c: 360: gpsIndex = 0;
  1723  0719  0020               	movlb	0	; select bank0
  1724  071A  01ED               	clrf	_gpsIndex	;volatile
  1725                           
  1726                           ;launcher_functions.c: 361: uart_write_message(GPSupdateMessage, 22);
  1727  071B  3016               	movlw	22
  1728  071C  00A8               	movwf	uart_write_message@size
  1729  071D  3000               	movlw	0
  1730  071E  00A9               	movwf	uart_write_message@size+1
  1731  071F  3038               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  1732  0720  3184  24ED         	fcall	_uart_write_message
  1733  0722  0008               	return
  1734  0723                     __end_of_UpdateGPS:	
  1735                           
  1736                           	psect	text3
  1737  06E4                     __ptext3:	
  1738 ;; *************** function _ToggleSleepGPS *****************
  1739 ;; Defined at:
  1740 ;;		line 308 in file "launcher_functions.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;		None               void
  1747 ;; Registers used:
  1748 ;;		wreg
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1754 ;;      Params:         0       0       0       0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0
  1756 ;;      Temps:          0       3       0       0       0       0       0       0
  1757 ;;      Totals:         0       3       0       0       0       0       0       0
  1758 ;;Total ram usage:        3 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    2
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_main
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           
  1769                           ;psect for function _ToggleSleepGPS
  1770  06E4                     _ToggleSleepGPS:	
  1771                           
  1772                           ;launcher_functions.c: 310: TRISAbits.TRISA6 = 0;
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _ToggleSleepGPS: [wreg]
  1776  06E4  0021               	movlb	1	; select bank1
  1777  06E5  130C               	bcf	12,6	;volatile
  1778                           
  1779                           ;launcher_functions.c: 312: RA6 = 0;
  1780  06E6  0020               	movlb	0	; select bank0
  1781  06E7  130C               	bcf	12,6	;volatile
  1782                           
  1783                           ;launcher_functions.c: 313: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1784  06E8  3015               	movlw	21
  1785  06E9  00A2               	movwf	??_ToggleSleepGPS+2
  1786  06EA  304B               	movlw	75
  1787  06EB  00A1               	movwf	??_ToggleSleepGPS+1
  1788  06EC  30D1               	movlw	209
  1789  06ED  00A0               	movwf	??_ToggleSleepGPS
  1790  06EE                     u1657:	
  1791  06EE  0BA0               	decfsz	??_ToggleSleepGPS,f
  1792  06EF  2EEE               	goto	u1657
  1793  06F0  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  1794  06F1  2EEE               	goto	u1657
  1795  06F2  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  1796  06F3  2EEE               	goto	u1657
  1797  06F4  0000               	nop
  1798                           
  1799                           ;launcher_functions.c: 314: RA6 = 1;
  1800  06F5  0020               	movlb	0	; select bank0
  1801  06F6  170C               	bsf	12,6	;volatile
  1802                           
  1803                           ;launcher_functions.c: 315: _delay((unsigned long)((100)*(16000000/4000.0)));
  1804  06F7  3003               	movlw	3
  1805  06F8  00A2               	movwf	??_ToggleSleepGPS+2
  1806  06F9  3008               	movlw	8
  1807  06FA  00A1               	movwf	??_ToggleSleepGPS+1
  1808  06FB  3078               	movlw	120
  1809  06FC  00A0               	movwf	??_ToggleSleepGPS
  1810  06FD                     u1667:	
  1811  06FD  0BA0               	decfsz	??_ToggleSleepGPS,f
  1812  06FE  2EFD               	goto	u1667
  1813  06FF  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  1814  0700  2EFD               	goto	u1667
  1815  0701  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  1816  0702  2EFD               	goto	u1667
  1817                           
  1818                           ;launcher_functions.c: 316: RA6 = 0;
  1819  0703  0020               	movlb	0	; select bank0
  1820  0704  130C               	bcf	12,6	;volatile
  1821  0705  0008               	return
  1822  0706                     __end_of_ToggleSleepGPS:	
  1823                           
  1824                           	psect	text4
  1825  03E8                     __ptext4:	
  1826 ;; *************** function _SetupGPS *****************
  1827 ;; Defined at:
  1828 ;;		line 326 in file "launcher_functions.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  message        22   36[BANK0 ] unsigned char [22]
  1833 ;;  startSequenc    6   58[BANK0 ] unsigned char [6]
  1834 ;;  MID             4   64[BANK0 ] unsigned char [4]
  1835 ;;  x               2   68[BANK0 ] int 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1845 ;;      Params:         0       0       0       0       0       0       0       0
  1846 ;;      Locals:         0      34       0       0       0       0       0       0
  1847 ;;      Temps:          0       3       0       0       0       0       0       0
  1848 ;;      Totals:         0      37       0       0       0       0       0       0
  1849 ;;Total ram usage:       37 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    4
  1852 ;; This function calls:
  1853 ;;		_sprintf
  1854 ;;		_uart_write_message
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _SetupGPS
  1862  03E8                     _SetupGPS:	
  1863                           
  1864                           ;launcher_functions.c: 328: int x;
  1865                           ;launcher_functions.c: 329: unsigned char startSequence[6] = "$PSRF";
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1869  03E8  30E2               	movlw	low SetupGPS@F4906
  1870  03E9  0086               	movwf	6
  1871  03EA  3000               	movlw	high SetupGPS@F4906
  1872  03EB  0087               	movwf	7
  1873  03EC  305A               	movlw	low SetupGPS@startSequence
  1874  03ED  0084               	movwf	4
  1875  03EE  3000               	movlw	high SetupGPS@startSequence
  1876  03EF  0085               	movwf	5
  1877  03F0  3006               	movlw	6
  1878  03F1  0020               	movlb	0	; select bank0
  1879  03F2  00C1               	movwf	??_SetupGPS
  1880  03F3                     u1220:	
  1881  03F3  0016               	moviw fsr1++
  1882  03F4  001A               	movwi fsr0++
  1883  03F5  0BC1               	decfsz	??_SetupGPS,f
  1884  03F6  2BF3               	goto	u1220
  1885                           
  1886                           ;launcher_functions.c: 330: unsigned char MID[4] = "103";
  1887  03F7  0021               	movlb	1	; select bank1
  1888  03F8  086B               	movf	(SetupGPS@F4908+3)^(0+128),w
  1889  03F9  0020               	movlb	0	; select bank0
  1890  03FA  00E3               	movwf	SetupGPS@MID+3
  1891  03FB  0021               	movlb	1	; select bank1
  1892  03FC  086A               	movf	(SetupGPS@F4908+2)^(0+128),w
  1893  03FD  0020               	movlb	0	; select bank0
  1894  03FE  00E2               	movwf	SetupGPS@MID+2
  1895  03FF  0021               	movlb	1	; select bank1
  1896  0400  0869               	movf	(SetupGPS@F4908+1)^(0+128),w
  1897  0401  0020               	movlb	0	; select bank0
  1898  0402  00E1               	movwf	SetupGPS@MID+1
  1899  0403  0021               	movlb	1	; select bank1
  1900  0404  0868               	movf	SetupGPS@F4908^(0+128),w
  1901  0405  0020               	movlb	0	; select bank0
  1902  0406  00E0               	movwf	SetupGPS@MID
  1903                           
  1904                           ;launcher_functions.c: 331: unsigned char message[22];
  1905                           ;launcher_functions.c: 334: for(x = 0; x < 6; x++)
  1906  0407  01E4               	clrf	SetupGPS@x
  1907  0408  01E5               	clrf	SetupGPS@x+1
  1908  0409  0865               	movf	SetupGPS@x+1,w
  1909  040A  3A80               	xorlw	128
  1910  040B  00C1               	movwf	??_SetupGPS
  1911  040C  3080               	movlw	128
  1912  040D  0241               	subwf	??_SetupGPS,w
  1913  040E  1D03               	skipz
  1914  040F  2C12               	goto	u1235
  1915  0410  3006               	movlw	6
  1916  0411  0264               	subwf	SetupGPS@x,w
  1917  0412                     u1235:	
  1918  0412  1803               	btfsc	3,0
  1919  0413  2C52               	goto	l1783
  1920  0414                     l1773:	
  1921                           
  1922                           ;launcher_functions.c: 335: {
  1923                           ;launcher_functions.c: 336: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1924  0414  3015               	movlw	21
  1925  0415  0020               	movlb	0	; select bank0
  1926  0416  00C3               	movwf	??_SetupGPS+2
  1927  0417  304B               	movlw	75
  1928  0418  00C2               	movwf	??_SetupGPS+1
  1929  0419  30D1               	movlw	209
  1930  041A  00C1               	movwf	??_SetupGPS
  1931  041B                     u1677:	
  1932  041B  0BC1               	decfsz	??_SetupGPS,f
  1933  041C  2C1B               	goto	u1677
  1934  041D  0BC2               	decfsz	??_SetupGPS+1,f
  1935  041E  2C1B               	goto	u1677
  1936  041F  0BC3               	decfsz	??_SetupGPS+2,f
  1937  0420  2C1B               	goto	u1677
  1938  0421  0000               	nop
  1939                           
  1940                           ;launcher_functions.c: 337: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  1941  0422  300A               	movlw	low (STR_1| (0+32768))
  1942  0423  0020               	movlb	0	; select bank0
  1943  0424  00AE               	movwf	sprintf@f
  1944  0425  3086               	movlw	high (STR_1| (0+32768))
  1945  0426  00AF               	movwf	sprintf@f+1
  1946  0427  305A               	movlw	SetupGPS@startSequence& (0+255)
  1947  0428  00C1               	movwf	??_SetupGPS
  1948  0429  0841               	movf	??_SetupGPS,w
  1949  042A  00B0               	movwf	?_sprintf+2
  1950  042B  3060               	movlw	SetupGPS@MID& (0+255)
  1951  042C  00C2               	movwf	??_SetupGPS+1
  1952  042D  0842               	movf	??_SetupGPS+1,w
  1953  042E  00B1               	movwf	?_sprintf+3
  1954  042F  0865               	movf	SetupGPS@x+1,w
  1955  0430  01B3               	clrf	?_sprintf+5
  1956  0431  07B3               	addwf	?_sprintf+5,f
  1957  0432  0864               	movf	SetupGPS@x,w
  1958  0433  01B2               	clrf	?_sprintf+4
  1959  0434  07B2               	addwf	?_sprintf+4,f
  1960  0435  3044               	movlw	SetupGPS@message& (0+255)
  1961  0436  3182  22E2  3183   	fcall	_sprintf
  1962                           
  1963                           ;launcher_functions.c: 338: uart_write_message(message, 22);
  1964  0439  3016               	movlw	22
  1965  043A  0020               	movlb	0	; select bank0
  1966  043B  00A8               	movwf	uart_write_message@size
  1967  043C  3000               	movlw	0
  1968  043D  00A9               	movwf	uart_write_message@size+1
  1969  043E  3044               	movlw	SetupGPS@message& (0+255)
  1970  043F  3184  24ED  3183   	fcall	_uart_write_message
  1971  0442  3001               	movlw	1
  1972  0443  0020               	movlb	0	; select bank0
  1973  0444  07E4               	addwf	SetupGPS@x,f
  1974  0445  3000               	movlw	0
  1975  0446  3DE5               	addwfc	SetupGPS@x+1,f
  1976  0447  0865               	movf	SetupGPS@x+1,w
  1977  0448  3A80               	xorlw	128
  1978  0449  00C1               	movwf	??_SetupGPS
  1979  044A  3080               	movlw	128
  1980  044B  0241               	subwf	??_SetupGPS,w
  1981  044C  1D03               	skipz
  1982  044D  2C50               	goto	u1245
  1983  044E  3006               	movlw	6
  1984  044F  0264               	subwf	SetupGPS@x,w
  1985  0450                     u1245:	
  1986  0450  1C03               	skipc
  1987  0451  2C14               	goto	l1773
  1988  0452                     l1783:	
  1989                           
  1990                           ;launcher_functions.c: 339: }
  1991                           ;launcher_functions.c: 341: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1992  0452  3015               	movlw	21
  1993  0453  0020               	movlb	0	; select bank0
  1994  0454  00C3               	movwf	??_SetupGPS+2
  1995  0455  304B               	movlw	75
  1996  0456  00C2               	movwf	??_SetupGPS+1
  1997  0457  30D1               	movlw	209
  1998  0458  00C1               	movwf	??_SetupGPS
  1999  0459                     u1687:	
  2000  0459  0BC1               	decfsz	??_SetupGPS,f
  2001  045A  2C59               	goto	u1687
  2002  045B  0BC2               	decfsz	??_SetupGPS+1,f
  2003  045C  2C59               	goto	u1687
  2004  045D  0BC3               	decfsz	??_SetupGPS+2,f
  2005  045E  2C59               	goto	u1687
  2006  045F  0000               	nop
  2007                           
  2008                           ;launcher_functions.c: 343: sprintf(message, "%s%s,01,01,01,00*", startSequence, MID);
  2009  0460  301D               	movlw	low (STR_2| (0+32768))
  2010  0461  0020               	movlb	0	; select bank0
  2011  0462  00AE               	movwf	sprintf@f
  2012  0463  3086               	movlw	high (STR_2| (0+32768))
  2013  0464  00AF               	movwf	sprintf@f+1
  2014  0465  305A               	movlw	SetupGPS@startSequence& (0+255)
  2015  0466  00C1               	movwf	??_SetupGPS
  2016  0467  0841               	movf	??_SetupGPS,w
  2017  0468  00B0               	movwf	?_sprintf+2
  2018  0469  3060               	movlw	SetupGPS@MID& (0+255)
  2019  046A  00C2               	movwf	??_SetupGPS+1
  2020  046B  0842               	movf	??_SetupGPS+1,w
  2021  046C  00B1               	movwf	?_sprintf+3
  2022  046D  3044               	movlw	SetupGPS@message& (0+255)
  2023  046E  3182  22E2  3183   	fcall	_sprintf
  2024                           
  2025                           ;launcher_functions.c: 344: uart_write_message(message, 22);
  2026  0471  3016               	movlw	22
  2027  0472  0020               	movlb	0	; select bank0
  2028  0473  00A8               	movwf	uart_write_message@size
  2029  0474  3000               	movlw	0
  2030  0475  00A9               	movwf	uart_write_message@size+1
  2031  0476  3044               	movlw	SetupGPS@message& (0+255)
  2032  0477  3184  24ED         	fcall	_uart_write_message
  2033  0479  0008               	return
  2034  047A                     __end_of_SetupGPS:	
  2035                           
  2036                           	psect	text5
  2037  04ED                     __ptext5:	
  2038 ;; *************** function _uart_write_message *****************
  2039 ;; Defined at:
  2040 ;;		line 281 in file "launcher_functions.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  data            1    wreg     PTR unsigned char 
  2043 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2044 ;;  size            2    8[BANK0 ] int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  data            1   20[BANK0 ] PTR unsigned char 
  2047 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2048 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  2049 ;;  x               2   17[BANK0 ] int 
  2050 ;;  checksum        1   19[BANK0 ] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;		None               void
  2053 ;; Registers used:
  2054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2060 ;;      Params:         0       2       0       0       0       0       0       0
  2061 ;;      Locals:         0      10       0       0       0       0       0       0
  2062 ;;      Temps:          0       3       0       0       0       0       0       0
  2063 ;;      Totals:         0      15       0       0       0       0       0       0
  2064 ;;Total ram usage:       15 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    3
  2067 ;; This function calls:
  2068 ;;		_compute_checksum
  2069 ;;		_uart_xmit
  2070 ;; This function is called by:
  2071 ;;		_SetupGPS
  2072 ;;		_UpdateGPS
  2073 ;;		_DisableGPS
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _uart_write_message
  2079  04ED                     _uart_write_message:	
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2083                           ;uart_write_message@data stored from wreg
  2084  04ED  0020               	movlb	0	; select bank0
  2085  04EE  00B4               	movwf	uart_write_message@data
  2086                           
  2087                           ;launcher_functions.c: 283: int x;
  2088                           ;launcher_functions.c: 284: unsigned char checksum;
  2089                           ;launcher_functions.c: 285: unsigned char ascii_checksum[2];
  2090                           ;launcher_functions.c: 287: checksum = compute_checksum(data, size);
  2091  04EF  0829               	movf	uart_write_message@size+1,w
  2092  04F0  01A1               	clrf	compute_checksum@size+1
  2093  04F1  07A1               	addwf	compute_checksum@size+1,f
  2094  04F2  0828               	movf	uart_write_message@size,w
  2095  04F3  01A0               	clrf	compute_checksum@size
  2096  04F4  07A0               	addwf	compute_checksum@size,f
  2097  04F5  0834               	movf	uart_write_message@data,w
  2098  04F6  3185  255F  3184   	fcall	_compute_checksum
  2099  04F9  0020               	movlb	0	; select bank0
  2100  04FA  00AA               	movwf	??_uart_write_message
  2101  04FB  082A               	movf	??_uart_write_message,w
  2102  04FC  00B3               	movwf	uart_write_message@checksum
  2103                           
  2104                           ;launcher_functions.c: 288: ascii_checksum[0] = checksum >> 4;
  2105  04FD  0833               	movf	uart_write_message@checksum,w
  2106  04FE  00AA               	movwf	??_uart_write_message
  2107  04FF  3004               	movlw	4
  2108  0500                     u1045:	
  2109  0500  36AA               	lsrf	??_uart_write_message,f
  2110  0501  0B89               	decfsz	9,f
  2111  0502  2D00               	goto	u1045
  2112  0503  082A               	movf	??_uart_write_message,w
  2113  0504  00AB               	movwf	??_uart_write_message+1
  2114  0505  082B               	movf	??_uart_write_message+1,w
  2115  0506  00B5               	movwf	uart_write_message@ascii_checksum
  2116                           
  2117                           ;launcher_functions.c: 289: ascii_checksum[1] = checksum & 0x0F;
  2118  0507  0833               	movf	uart_write_message@checksum,w
  2119  0508  390F               	andlw	15
  2120  0509  00AA               	movwf	??_uart_write_message
  2121  050A  082A               	movf	??_uart_write_message,w
  2122  050B  00B6               	movwf	uart_write_message@ascii_checksum+1
  2123                           
  2124                           ;launcher_functions.c: 291: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  2125  050C  300A               	movlw	10
  2126  050D  0235               	subwf	uart_write_message@ascii_checksum,w
  2127  050E  1C03               	skipc
  2128  050F  2D12               	goto	l1527
  2129  0510  3037               	movlw	55
  2130  0511  2D13               	goto	L2
  2131  0512                     l1527:	
  2132  0512  3030               	movlw	48
  2133  0513                     L2:	
  2134  0513  00AD               	movwf	_uart_write_message$1094
  2135  0514  3000               	movlw	0
  2136  0515  00AE               	movwf	_uart_write_message$1094+1
  2137  0516  082D               	movf	_uart_write_message$1094,w
  2138  0517  00AA               	movwf	??_uart_write_message
  2139  0518  082A               	movf	??_uart_write_message,w
  2140  0519  07B5               	addwf	uart_write_message@ascii_checksum,f
  2141                           
  2142                           ;launcher_functions.c: 292: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  2143  051A  300A               	movlw	10
  2144  051B  0236               	subwf	uart_write_message@ascii_checksum+1,w
  2145  051C  1C03               	skipc
  2146  051D  2D20               	goto	l1535
  2147  051E  3037               	movlw	55
  2148  051F  2D21               	goto	L3
  2149  0520                     l1535:	
  2150  0520  3030               	movlw	48
  2151  0521                     L3:	
  2152  0521  00AF               	movwf	_uart_write_message$1095
  2153  0522  3000               	movlw	0
  2154  0523  00B0               	movwf	_uart_write_message$1095+1
  2155  0524  082F               	movf	_uart_write_message$1095,w
  2156  0525  00AA               	movwf	??_uart_write_message
  2157  0526  082A               	movf	??_uart_write_message,w
  2158  0527  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  2159                           
  2160                           ;launcher_functions.c: 294: for(x=0; x<size-1; x++)
  2161  0528  01B1               	clrf	uart_write_message@x
  2162  0529  01B2               	clrf	uart_write_message@x+1
  2163  052A                     l1545:	
  2164  052A  0828               	movf	uart_write_message@size,w
  2165  052B  3EFF               	addlw	255
  2166  052C  00AA               	movwf	??_uart_write_message
  2167  052D  30FF               	movlw	255
  2168  052E  3D29               	addwfc	uart_write_message@size+1,w
  2169  052F  00AB               	movwf	??_uart_write_message+1
  2170  0530  0832               	movf	uart_write_message@x+1,w
  2171  0531  3A80               	xorlw	128
  2172  0532  00AC               	movwf	??_uart_write_message+2
  2173  0533  082B               	movf	??_uart_write_message+1,w
  2174  0534  3A80               	xorlw	128
  2175  0535  022C               	subwf	??_uart_write_message+2,w
  2176  0536  1D03               	skipz
  2177  0537  2D3A               	goto	u1075
  2178  0538  082A               	movf	??_uart_write_message,w
  2179  0539  0231               	subwf	uart_write_message@x,w
  2180  053A                     u1075:	
  2181  053A  1803               	btfsc	3,0
  2182  053B  2D4D               	goto	l1547
  2183                           
  2184                           ;launcher_functions.c: 295: {
  2185                           ;launcher_functions.c: 296: uart_xmit(data[x]);
  2186  053C  0020               	movlb	0	; select bank0
  2187  053D  0831               	movf	uart_write_message@x,w
  2188  053E  0734               	addwf	uart_write_message@data,w
  2189  053F  00AA               	movwf	??_uart_write_message
  2190  0540  082A               	movf	??_uart_write_message,w
  2191  0541  0086               	movwf	6
  2192  0542  0187               	clrf	7
  2193  0543  0801               	movf	1,w
  2194  0544  3187  278D  3184   	fcall	_uart_xmit
  2195  0547  3001               	movlw	1
  2196  0548  0020               	movlb	0	; select bank0
  2197  0549  07B1               	addwf	uart_write_message@x,f
  2198  054A  3000               	movlw	0
  2199  054B  3DB2               	addwfc	uart_write_message@x+1,f
  2200  054C  2D2A               	goto	l1545
  2201  054D                     l1547:	
  2202                           
  2203                           ;launcher_functions.c: 297: }
  2204                           ;launcher_functions.c: 298: uart_xmit(ascii_checksum[0]);
  2205  054D  0020               	movlb	0	; select bank0
  2206  054E  0835               	movf	uart_write_message@ascii_checksum,w
  2207  054F  3187  278D  3184   	fcall	_uart_xmit
  2208                           
  2209                           ;launcher_functions.c: 299: uart_xmit(ascii_checksum[1]);
  2210  0552  0020               	movlb	0	; select bank0
  2211  0553  0836               	movf	uart_write_message@ascii_checksum+1,w
  2212  0554  3187  278D  3184   	fcall	_uart_xmit
  2213                           
  2214                           ;launcher_functions.c: 301: uart_xmit(0x0D);
  2215  0557  300D               	movlw	13
  2216  0558  3187  278D  3184   	fcall	_uart_xmit
  2217                           
  2218                           ;launcher_functions.c: 302: uart_xmit(0x0A);
  2219  055B  300A               	movlw	10
  2220  055C  3187  278D         	fcall	_uart_xmit
  2221  055E  0008               	return
  2222  055F                     __end_of_uart_write_message:	
  2223                           
  2224                           	psect	text6
  2225  078D                     __ptext6:	
  2226 ;; *************** function _uart_xmit *****************
  2227 ;; Defined at:
  2228 ;;		line 273 in file "launcher_functions.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  mydata_byte     1    wreg     unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;		None               void
  2235 ;; Registers used:
  2236 ;;		wreg
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2242 ;;      Params:         0       0       0       0       0       0       0       0
  2243 ;;      Locals:         0       1       0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0
  2245 ;;      Totals:         0       1       0       0       0       0       0       0
  2246 ;;Total ram usage:        1 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    2
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_uart_write_message
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _uart_xmit
  2258  078D                     _uart_xmit:	
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _uart_xmit: [wreg]
  2262                           ;uart_xmit@mydata_byte stored from wreg
  2263  078D  0020               	movlb	0	; select bank0
  2264  078E  00A0               	movwf	uart_xmit@mydata_byte
  2265  078F                     l263:	
  2266                           ;launcher_functions.c: 276: while(!TXSTAbits.TRMT);
  2267                           
  2268  078F  0023               	movlb	3	; select bank3
  2269  0790  1C9E               	btfss	30,1	;volatile
  2270  0791  2F8F               	goto	l263
  2271                           
  2272                           ;launcher_functions.c: 277: TXREG = mydata_byte;
  2273  0792  0020               	movlb	0	; select bank0
  2274  0793  0820               	movf	uart_xmit@mydata_byte,w
  2275  0794  0023               	movlb	3	; select bank3
  2276  0795  009A               	movwf	26	;volatile
  2277  0796  0008               	return
  2278  0797                     __end_of_uart_xmit:	
  2279                           
  2280                           	psect	text7
  2281  055F                     __ptext7:	
  2282 ;; *************** function _compute_checksum *****************
  2283 ;; Defined at:
  2284 ;;		line 262 in file "launcher_functions.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  data            1    wreg     PTR unsigned char 
  2287 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2288 ;;  size            2    0[BANK0 ] int 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  data            1    5[BANK0 ] PTR unsigned char 
  2291 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2292 ;;  x               2    6[BANK0 ] int 
  2293 ;;  checksum        1    4[BANK0 ] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      unsigned char 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2303 ;;      Params:         0       2       0       0       0       0       0       0
  2304 ;;      Locals:         0       4       0       0       0       0       0       0
  2305 ;;      Temps:          0       2       0       0       0       0       0       0
  2306 ;;      Totals:         0       8       0       0       0       0       0       0
  2307 ;;Total ram usage:        8 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    2
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_uart_write_message
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _compute_checksum
  2319  055F                     _compute_checksum:	
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  2323                           ;compute_checksum@data stored from wreg
  2324  055F  0020               	movlb	0	; select bank0
  2325  0560  00A5               	movwf	compute_checksum@data
  2326                           
  2327                           ;launcher_functions.c: 264: unsigned char checksum = 0;
  2328  0561  01A4               	clrf	compute_checksum@checksum
  2329                           
  2330                           ;launcher_functions.c: 265: int x;
  2331                           ;launcher_functions.c: 266: for(x=0; x<size; x++)
  2332  0562  01A6               	clrf	compute_checksum@x
  2333  0563  01A7               	clrf	compute_checksum@x+1
  2334  0564                     l1459:	
  2335  0564  0827               	movf	compute_checksum@x+1,w
  2336  0565  3A80               	xorlw	128
  2337  0566  00A2               	movwf	??_compute_checksum
  2338  0567  0821               	movf	compute_checksum@size+1,w
  2339  0568  3A80               	xorlw	128
  2340  0569  0222               	subwf	??_compute_checksum,w
  2341  056A  1D03               	skipz
  2342  056B  2D6E               	goto	u895
  2343  056C  0820               	movf	compute_checksum@size,w
  2344  056D  0226               	subwf	compute_checksum@x,w
  2345  056E                     u895:	
  2346  056E  1803               	btfsc	3,0
  2347  056F  2D9E               	goto	l1461
  2348                           
  2349                           ;launcher_functions.c: 267: {
  2350                           ;launcher_functions.c: 268: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  2351  0570  0020               	movlb	0	; select bank0
  2352  0571  0826               	movf	compute_checksum@x,w
  2353  0572  0725               	addwf	compute_checksum@data,w
  2354  0573  00A2               	movwf	??_compute_checksum
  2355  0574  0822               	movf	??_compute_checksum,w
  2356  0575  0086               	movwf	6
  2357  0576  0187               	clrf	7
  2358  0577  0801               	movf	1,w
  2359  0578  3A24               	xorlw	36
  2360  0579  1903               	skipnz
  2361  057A  2D99               	goto	l1457
  2362  057B  0826               	movf	compute_checksum@x,w
  2363  057C  0725               	addwf	compute_checksum@data,w
  2364  057D  00A2               	movwf	??_compute_checksum
  2365  057E  0822               	movf	??_compute_checksum,w
  2366  057F  0086               	movwf	6
  2367  0580  0187               	clrf	7
  2368  0581  0801               	movf	1,w
  2369  0582  3A2A               	xorlw	42
  2370  0583  1903               	skipnz
  2371  0584  2D99               	goto	l1457
  2372  0585  0826               	movf	compute_checksum@x,w
  2373  0586  0725               	addwf	compute_checksum@data,w
  2374  0587  00A2               	movwf	??_compute_checksum
  2375  0588  0822               	movf	??_compute_checksum,w
  2376  0589  0086               	movwf	6
  2377  058A  0187               	clrf	7
  2378  058B  0801               	movf	1,w
  2379  058C  3A21               	xorlw	33
  2380  058D  1903               	skipnz
  2381  058E  2D99               	goto	l1457
  2382                           
  2383                           ;launcher_functions.c: 269: checksum ^= data[x];
  2384  058F  0826               	movf	compute_checksum@x,w
  2385  0590  0725               	addwf	compute_checksum@data,w
  2386  0591  00A2               	movwf	??_compute_checksum
  2387  0592  0822               	movf	??_compute_checksum,w
  2388  0593  0086               	movwf	6
  2389  0594  0187               	clrf	7
  2390  0595  0801               	movf	1,w
  2391  0596  00A3               	movwf	??_compute_checksum+1
  2392  0597  0823               	movf	??_compute_checksum+1,w
  2393  0598  06A4               	xorwf	compute_checksum@checksum,f
  2394  0599                     l1457:	
  2395  0599  3001               	movlw	1
  2396  059A  07A6               	addwf	compute_checksum@x,f
  2397  059B  3000               	movlw	0
  2398  059C  3DA7               	addwfc	compute_checksum@x+1,f
  2399  059D  2D64               	goto	l1459
  2400  059E                     l1461:	
  2401                           
  2402                           ;launcher_functions.c: 270: }
  2403                           ;launcher_functions.c: 271: return checksum;
  2404  059E  0020               	movlb	0	; select bank0
  2405  059F  0824               	movf	compute_checksum@checksum,w
  2406  05A0  0008               	return
  2407  05A1                     __end_of_compute_checksum:	
  2408                           
  2409                           	psect	text8
  2410  02E2                     __ptext8:	
  2411 ;; *************** function _sprintf *****************
  2412 ;; Defined at:
  2413 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  sp              1    wreg     PTR unsigned char 
  2416 ;;		 -> SetupGPS@message(22), 
  2417 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2418 ;;		 -> STR_2(18), STR_1(19), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  2421 ;;		 -> SetupGPS@message(22), 
  2422 ;;  _val            4   28[BANK0 ] struct .
  2423 ;;  c               1   32[BANK0 ] char 
  2424 ;;  ap              1   26[BANK0 ] PTR void [1]
  2425 ;;		 -> ?_sprintf(2), 
  2426 ;;  prec            1   25[BANK0 ] char 
  2427 ;;  flag            1   24[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2   14[BANK0 ] int 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2437 ;;      Params:         0       6       0       0       0       0       0       0
  2438 ;;      Locals:         0       9       0       0       0       0       0       0
  2439 ;;      Temps:          0       4       0       0       0       0       0       0
  2440 ;;      Totals:         0      19       0       0       0       0       0       0
  2441 ;;Total ram usage:       19 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		___lwdiv
  2446 ;;		___lwmod
  2447 ;; This function is called by:
  2448 ;;		_SetupGPS
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _sprintf
  2454  02E2                     _sprintf:	
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2458                           ;sprintf@sp stored from wreg
  2459  02E2  0020               	movlb	0	; select bank0
  2460  02E3  00BB               	movwf	sprintf@sp
  2461                           
  2462                           ;doprnt.c: 494: va_list ap;
  2463                           ;doprnt.c: 499: signed char c;
  2464                           ;doprnt.c: 506: signed char prec;
  2465                           ;doprnt.c: 508: unsigned char flag;
  2466                           ;doprnt.c: 527: union {
  2467                           ;doprnt.c: 528: unsigned int _val;
  2468                           ;doprnt.c: 529: struct {
  2469                           ;doprnt.c: 530: const char * _cp;
  2470                           ;doprnt.c: 531: unsigned _len;
  2471                           ;doprnt.c: 532: } _str;
  2472                           ;doprnt.c: 533: } _val;
  2473                           ;doprnt.c: 542: *ap = __va_start();
  2474  02E4  3030               	movlw	(?_sprintf+2)& (0+255)
  2475  02E5  00B4               	movwf	??_sprintf
  2476  02E6  0834               	movf	??_sprintf,w
  2477  02E7  00BA               	movwf	sprintf@ap
  2478  02E8                     l1617:	
  2479                           ;doprnt.c: 545: while(c = *f++) {
  2480                           
  2481  02E8  082F               	movf	sprintf@f+1,w
  2482  02E9  00B5               	movwf	??_sprintf+1
  2483  02EA  082E               	movf	sprintf@f,w
  2484  02EB  00B4               	movwf	??_sprintf
  2485  02EC  0AAE               	incf	sprintf@f,f
  2486  02ED  1903               	skipnz
  2487  02EE  0AAF               	incf	sprintf@f+1,f
  2488  02EF  0834               	movf	??_sprintf,w
  2489  02F0  0084               	movwf	4
  2490  02F1  0835               	movf	??_sprintf+1,w
  2491  02F2  0085               	movwf	5
  2492  02F3  0800               	movf	0,w	;code access
  2493  02F4  00B6               	movwf	??_sprintf+2
  2494  02F5  0836               	movf	??_sprintf+2,w
  2495  02F6  00C0               	movwf	sprintf@c
  2496  02F7  08C0               	movf	sprintf@c,f
  2497  02F8  1903               	btfsc	3,2
  2498  02F9  2BE3               	goto	l1619
  2499                           
  2500                           ;doprnt.c: 547: if(c != '%')
  2501  02FA  0840               	movf	sprintf@c,w
  2502  02FB  3A25               	xorlw	37
  2503  02FC  1903               	skipnz
  2504  02FD  2B0A               	goto	l1557
  2505                           
  2506                           ;doprnt.c: 549: {
  2507                           ;doprnt.c: 550: ((*sp++ = (c)));
  2508  02FE  0840               	movf	sprintf@c,w
  2509  02FF  00B4               	movwf	??_sprintf
  2510  0300  083B               	movf	sprintf@sp,w
  2511  0301  0086               	movwf	6
  2512  0302  0187               	clrf	7
  2513  0303  0834               	movf	??_sprintf,w
  2514  0304  0081               	movwf	1
  2515  0305  3001               	movlw	1
  2516  0306  00B4               	movwf	??_sprintf
  2517  0307  0834               	movf	??_sprintf,w
  2518  0308  07BB               	addwf	sprintf@sp,f
  2519                           
  2520                           ;doprnt.c: 551: continue;
  2521  0309  2AE8               	goto	l1617
  2522  030A                     l1557:	
  2523                           
  2524                           ;doprnt.c: 552: }
  2525                           ;doprnt.c: 557: flag = 0;
  2526  030A  01B8               	clrf	sprintf@flag
  2527                           
  2528                           ;doprnt.c: 644: switch(c = *f++) {
  2529  030B  2B3B               	goto	l1577
  2530  030C                     l1559:	
  2531                           ;doprnt.c: 737: case 's':
  2532                           
  2533                           ;doprnt.c: 707: case 'i':
  2534                           ;doprnt.c: 708: break;
  2535                           
  2536                           ;doprnt.c: 706: case 'd':
  2537                           
  2538                           ;doprnt.c: 647: goto alldone;
  2539                           
  2540                           ;doprnt.c: 646: case 0:
  2541                           
  2542                           
  2543                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  2544  030C  083A               	movf	sprintf@ap,w
  2545  030D  0086               	movwf	6
  2546  030E  0187               	clrf	7
  2547  030F  0801               	movf	1,w
  2548  0310  00BC               	movwf	sprintf@_val
  2549  0311  3000               	movlw	0
  2550  0312  00BD               	movwf	sprintf@_val+1
  2551  0313  3001               	movlw	1
  2552  0314  00B4               	movwf	??_sprintf
  2553  0315  0834               	movf	??_sprintf,w
  2554  0316  07BA               	addwf	sprintf@ap,f
  2555                           
  2556                           ;doprnt.c: 749: if(!_val._str._cp)
  2557  0317  083D               	movf	sprintf@_val+1,w
  2558  0318  043C               	iorwf	sprintf@_val,w
  2559  0319  1D03               	skipz
  2560  031A  2B1F               	goto	l1573
  2561                           
  2562                           ;doprnt.c: 750: _val._str._cp = "(null)";
  2563  031B  302F               	movlw	low (STR_3| (0+32768))
  2564  031C  00BC               	movwf	sprintf@_val
  2565  031D  3086               	movlw	high (STR_3| (0+32768))
  2566  031E  00BD               	movwf	sprintf@_val+1
  2567  031F                     l1573:	
  2568                           ;doprnt.c: 786: while(*_val._str._cp)
  2569                           
  2570  031F  083C               	movf	sprintf@_val,w
  2571  0320  0084               	movwf	4
  2572  0321  083D               	movf	sprintf@_val+1,w
  2573  0322  0085               	movwf	5
  2574  0323  0800               	movf	0,w	;code access
  2575  0324  3800               	iorlw	0
  2576  0325  1903               	btfsc	3,2
  2577  0326  2AE8               	goto	l1617
  2578                           
  2579                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  2580  0327  083C               	movf	sprintf@_val,w
  2581  0328  0084               	movwf	4
  2582  0329  083D               	movf	sprintf@_val+1,w
  2583  032A  0085               	movwf	5
  2584  032B  0800               	movf	0,w	;code access
  2585  032C  00B4               	movwf	??_sprintf
  2586  032D  083B               	movf	sprintf@sp,w
  2587  032E  0086               	movwf	6
  2588  032F  0187               	clrf	7
  2589  0330  0834               	movf	??_sprintf,w
  2590  0331  0081               	movwf	1
  2591  0332  3001               	movlw	1
  2592  0333  07BC               	addwf	sprintf@_val,f
  2593  0334  3000               	movlw	0
  2594  0335  3DBD               	addwfc	sprintf@_val+1,f
  2595  0336  3001               	movlw	1
  2596  0337  00B4               	movwf	??_sprintf
  2597  0338  0834               	movf	??_sprintf,w
  2598  0339  07BB               	addwf	sprintf@sp,f
  2599  033A  2B1F               	goto	l1573
  2600  033B                     l1577:	
  2601                           ;doprnt.c: 831: }
  2602                           
  2603                           ;doprnt.c: 822: continue;
  2604                           
  2605                           ;doprnt.c: 811: default:
  2606                           
  2607                           ;doprnt.c: 788: continue;
  2608                           
  2609  033B  082F               	movf	sprintf@f+1,w
  2610  033C  00B5               	movwf	??_sprintf+1
  2611  033D  082E               	movf	sprintf@f,w
  2612  033E  00B4               	movwf	??_sprintf
  2613  033F  0AAE               	incf	sprintf@f,f
  2614  0340  1903               	skipnz
  2615  0341  0AAF               	incf	sprintf@f+1,f
  2616  0342  0834               	movf	??_sprintf,w
  2617  0343  0084               	movwf	4
  2618  0344  0835               	movf	??_sprintf+1,w
  2619  0345  0085               	movwf	5
  2620  0346  0800               	movf	0,w	;code access
  2621  0347  00C0               	movwf	sprintf@c
  2622                           
  2623                           ; Switch size 1, requested type "space"
  2624                           ; Number of cases is 4, Range of values is 0 to 115
  2625                           ; switch strategies available:
  2626                           ; Name         Instructions Cycles
  2627                           ; simple_byte           13     7 (average)
  2628                           ; direct_byte          238     6 (fixed)
  2629                           ; jumptable            260     6 (fixed)
  2630                           ;	Chosen strategy is simple_byte
  2631  0348  3A00               	xorlw	0	; case 0
  2632  0349  1903               	skipnz
  2633  034A  2BE3               	goto	l1619
  2634  034B  3A64               	xorlw	100	; case 100
  2635  034C  1903               	skipnz
  2636  034D  2B55               	goto	l1579
  2637  034E  3A0D               	xorlw	13	; case 105
  2638  034F  1903               	skipnz
  2639  0350  2B55               	goto	l1579
  2640  0351  3A1A               	xorlw	26	; case 115
  2641  0352  1903               	skipnz
  2642  0353  2B0C               	goto	l1559
  2643  0354  2AE8               	goto	l1617
  2644  0355                     l1579:	
  2645                           
  2646                           ;doprnt.c: 1262: {
  2647                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2648  0355  083A               	movf	sprintf@ap,w
  2649  0356  0086               	movwf	6
  2650  0357  0187               	clrf	7
  2651  0358  3F40               	moviw [0]fsr1
  2652  0359  00BC               	movwf	sprintf@_val
  2653  035A  3F41               	moviw [1]fsr1
  2654  035B  00BD               	movwf	sprintf@_val+1
  2655  035C  3002               	movlw	2
  2656  035D  00B4               	movwf	??_sprintf
  2657  035E  0834               	movf	??_sprintf,w
  2658  035F  07BA               	addwf	sprintf@ap,f
  2659                           
  2660                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2661  0360  1FBD               	btfss	sprintf@_val+1,7
  2662  0361  2B6B               	goto	l1589
  2663                           
  2664                           ;doprnt.c: 1271: flag |= 0x03;
  2665  0362  3003               	movlw	3
  2666  0363  00B4               	movwf	??_sprintf
  2667  0364  0834               	movf	??_sprintf,w
  2668  0365  04B8               	iorwf	sprintf@flag,f
  2669                           
  2670                           ;doprnt.c: 1272: _val._val = -_val._val;
  2671  0366  09BC               	comf	sprintf@_val,f
  2672  0367  09BD               	comf	sprintf@_val+1,f
  2673  0368  0ABC               	incf	sprintf@_val,f
  2674  0369  1903               	skipnz
  2675  036A  0ABD               	incf	sprintf@_val+1,f
  2676  036B                     l1589:	
  2677                           
  2678                           ;doprnt.c: 1273: }
  2679                           ;doprnt.c: 1275: }
  2680                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2681  036B  01C0               	clrf	sprintf@c
  2682  036C  0AC0               	incf	sprintf@c,f
  2683  036D  0840               	movf	sprintf@c,w
  2684  036E  3A05               	xorlw	5
  2685  036F  1903               	btfsc	3,2
  2686  0370  2B90               	goto	l1601
  2687  0371                     l1593:	
  2688                           
  2689                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2690  0371  0840               	movf	sprintf@c,w
  2691  0372  00B4               	movwf	??_sprintf
  2692  0373  01B5               	clrf	??_sprintf+1
  2693  0374  35B4               	lslf	??_sprintf,f
  2694  0375  0DB5               	rlf	??_sprintf+1,f
  2695  0376  3000               	movlw	low (_dpowers| (0+32768))
  2696  0377  0734               	addwf	??_sprintf,w
  2697  0378  0084               	movwf	4
  2698  0379  3086               	movlw	high (_dpowers| (0+32768))
  2699  037A  3D35               	addwfc	??_sprintf+1,w
  2700  037B  0085               	movwf	5
  2701  037C  3F00               	moviw [0]fsr0
  2702  037D  00B6               	movwf	??_sprintf+2
  2703  037E  3F01               	moviw [1]fsr0
  2704  037F  00B7               	movwf	??_sprintf+3
  2705  0380  0837               	movf	??_sprintf+3,w
  2706  0381  023D               	subwf	sprintf@_val+1,w
  2707  0382  1D03               	skipz
  2708  0383  2B86               	goto	u1135
  2709  0384  0836               	movf	??_sprintf+2,w
  2710  0385  023C               	subwf	sprintf@_val,w
  2711  0386                     u1135:	
  2712  0386  1C03               	btfss	3,0
  2713  0387  2B90               	goto	l1601
  2714                           
  2715                           ;doprnt.c: 1316: break;
  2716  0388  3001               	movlw	1
  2717  0389  00B4               	movwf	??_sprintf
  2718  038A  0834               	movf	??_sprintf,w
  2719  038B  07C0               	addwf	sprintf@c,f
  2720  038C  0840               	movf	sprintf@c,w
  2721  038D  3A05               	xorlw	5
  2722  038E  1D03               	skipz
  2723  038F  2B71               	goto	l1593
  2724  0390                     l1601:	
  2725                           
  2726                           ;doprnt.c: 1431: {
  2727                           ;doprnt.c: 1447: if(flag & 0x03)
  2728  0390  0838               	movf	sprintf@flag,w
  2729  0391  3903               	andlw	3
  2730  0392  1903               	btfsc	3,2
  2731  0393  2B9F               	goto	l1607
  2732                           
  2733                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2734  0394  302D               	movlw	45
  2735  0395  00B4               	movwf	??_sprintf
  2736  0396  083B               	movf	sprintf@sp,w
  2737  0397  0086               	movwf	6
  2738  0398  0187               	clrf	7
  2739  0399  0834               	movf	??_sprintf,w
  2740  039A  0081               	movwf	1
  2741  039B  3001               	movlw	1
  2742  039C  00B4               	movwf	??_sprintf
  2743  039D  0834               	movf	??_sprintf,w
  2744  039E  07BB               	addwf	sprintf@sp,f
  2745  039F                     l1607:	
  2746                           
  2747                           ;doprnt.c: 1478: }
  2748                           ;doprnt.c: 1481: prec = c;
  2749  039F  0840               	movf	sprintf@c,w
  2750  03A0  00B4               	movwf	??_sprintf
  2751  03A1  0834               	movf	??_sprintf,w
  2752  03A2  00B9               	movwf	sprintf@prec
  2753  03A3                     l1615:	
  2754                           ;doprnt.c: 1483: while(prec--) {
  2755                           
  2756  03A3  30FF               	movlw	-1
  2757  03A4  00B4               	movwf	??_sprintf
  2758  03A5  0834               	movf	??_sprintf,w
  2759  03A6  07B9               	addwf	sprintf@prec,f
  2760  03A7  0839               	movf	sprintf@prec,w
  2761  03A8  3AFF               	xorlw	255
  2762  03A9  1903               	btfsc	3,2
  2763  03AA  2AE8               	goto	l1617
  2764                           
  2765                           ;doprnt.c: 1487: {
  2766                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2767  03AB  300A               	movlw	10
  2768  03AC  00A8               	movwf	___lwmod@divisor
  2769  03AD  3000               	movlw	0
  2770  03AE  00A9               	movwf	___lwmod@divisor+1
  2771  03AF  0839               	movf	sprintf@prec,w
  2772  03B0  00B4               	movwf	??_sprintf
  2773  03B1  01B5               	clrf	??_sprintf+1
  2774  03B2  35B4               	lslf	??_sprintf,f
  2775  03B3  0DB5               	rlf	??_sprintf+1,f
  2776  03B4  3000               	movlw	low (_dpowers| (0+32768))
  2777  03B5  0734               	addwf	??_sprintf,w
  2778  03B6  0084               	movwf	4
  2779  03B7  3086               	movlw	high (_dpowers| (0+32768))
  2780  03B8  3D35               	addwfc	??_sprintf+1,w
  2781  03B9  0085               	movwf	5
  2782  03BA  3F00               	moviw [0]fsr0
  2783  03BB  00A0               	movwf	___lwdiv@divisor
  2784  03BC  3F01               	moviw [1]fsr0
  2785  03BD  00A1               	movwf	___lwdiv@divisor+1
  2786  03BE  083D               	movf	sprintf@_val+1,w
  2787  03BF  01A3               	clrf	___lwdiv@dividend+1
  2788  03C0  07A3               	addwf	___lwdiv@dividend+1,f
  2789  03C1  083C               	movf	sprintf@_val,w
  2790  03C2  01A2               	clrf	___lwdiv@dividend
  2791  03C3  07A2               	addwf	___lwdiv@dividend,f
  2792  03C4  3185  25A1  3182   	fcall	___lwdiv
  2793  03C7  0020               	movlb	0	; select bank0
  2794  03C8  0821               	movf	?___lwdiv+1,w
  2795  03C9  01AB               	clrf	___lwmod@dividend+1
  2796  03CA  07AB               	addwf	___lwmod@dividend+1,f
  2797  03CB  0820               	movf	?___lwdiv,w
  2798  03CC  01AA               	clrf	___lwmod@dividend
  2799  03CD  07AA               	addwf	___lwmod@dividend,f
  2800  03CE  3186  2666  3182   	fcall	___lwmod
  2801  03D1  0020               	movlb	0	; select bank0
  2802  03D2  0828               	movf	?___lwmod,w
  2803  03D3  3E30               	addlw	48
  2804  03D4  00B6               	movwf	??_sprintf+2
  2805  03D5  0836               	movf	??_sprintf+2,w
  2806  03D6  00C0               	movwf	sprintf@c
  2807                           
  2808                           ;doprnt.c: 1532: }
  2809                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2810  03D7  0840               	movf	sprintf@c,w
  2811  03D8  00B4               	movwf	??_sprintf
  2812  03D9  083B               	movf	sprintf@sp,w
  2813  03DA  0086               	movwf	6
  2814  03DB  0187               	clrf	7
  2815  03DC  0834               	movf	??_sprintf,w
  2816  03DD  0081               	movwf	1
  2817  03DE  3001               	movlw	1
  2818  03DF  00B4               	movwf	??_sprintf
  2819  03E0  0834               	movf	??_sprintf,w
  2820  03E1  07BB               	addwf	sprintf@sp,f
  2821  03E2  2BA3               	goto	l1615
  2822  03E3                     l1619:	
  2823                           ;doprnt.c: 1534: }
  2824                           ;doprnt.c: 1542: }
  2825                           ;doprnt.c: 1544: alldone:
  2826                           
  2827                           
  2828                           ;doprnt.c: 1547: *sp = 0;
  2829  03E3  083B               	movf	sprintf@sp,w
  2830  03E4  0086               	movwf	6
  2831  03E5  0187               	clrf	7
  2832  03E6  0181               	clrf	1
  2833  03E7  0008               	return
  2834  03E8                     __end_of_sprintf:	
  2835                           ;doprnt.c: 1549: return 0;
  2836                           ;	Return value of _sprintf is never used
  2837                           
  2838                           
  2839                           	psect	text9
  2840  0666                     __ptext9:	
  2841 ;; *************** function ___lwmod *****************
  2842 ;; Defined at:
  2843 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  divisor         2    8[BANK0 ] unsigned int 
  2846 ;;  dividend        2   10[BANK0 ] unsigned int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  counter         1   13[BANK0 ] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  2    8[BANK0 ] unsigned int 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2858 ;;      Params:         0       4       0       0       0       0       0       0
  2859 ;;      Locals:         0       1       0       0       0       0       0       0
  2860 ;;      Temps:          0       1       0       0       0       0       0       0
  2861 ;;      Totals:         0       6       0       0       0       0       0       0
  2862 ;;Total ram usage:        6 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    2
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_sprintf
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function ___lwmod
  2874  0666                     ___lwmod:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2878  0666  0020               	movlb	0	; select bank0
  2879  0667  0829               	movf	___lwmod@divisor+1,w
  2880  0668  0428               	iorwf	___lwmod@divisor,w
  2881  0669  1903               	skipnz
  2882  066A  2E8E               	goto	l1513
  2883  066B  01AD               	clrf	___lwmod@counter
  2884  066C  0AAD               	incf	___lwmod@counter,f
  2885  066D                     l1503:	
  2886  066D  1BA9               	btfsc	___lwmod@divisor+1,7
  2887  066E  2E79               	goto	l1505
  2888  066F  3001               	movlw	1
  2889  0670                     u995:	
  2890  0670  35A8               	lslf	___lwmod@divisor,f
  2891  0671  0DA9               	rlf	___lwmod@divisor+1,f
  2892  0672  0B89               	decfsz	9,f
  2893  0673  2E70               	goto	u995
  2894  0674  3001               	movlw	1
  2895  0675  00AC               	movwf	??___lwmod
  2896  0676  082C               	movf	??___lwmod,w
  2897  0677  07AD               	addwf	___lwmod@counter,f
  2898  0678  2E6D               	goto	l1503
  2899  0679                     l1505:	
  2900  0679  0829               	movf	___lwmod@divisor+1,w
  2901  067A  022B               	subwf	___lwmod@dividend+1,w
  2902  067B  1D03               	skipz
  2903  067C  2E7F               	goto	u1015
  2904  067D  0828               	movf	___lwmod@divisor,w
  2905  067E  022A               	subwf	___lwmod@dividend,w
  2906  067F                     u1015:	
  2907  067F  1C03               	skipc
  2908  0680  2E85               	goto	l1509
  2909  0681  0828               	movf	___lwmod@divisor,w
  2910  0682  02AA               	subwf	___lwmod@dividend,f
  2911  0683  0829               	movf	___lwmod@divisor+1,w
  2912  0684  3BAB               	subwfb	___lwmod@dividend+1,f
  2913  0685                     l1509:	
  2914  0685  3001               	movlw	1
  2915  0686                     u1025:	
  2916  0686  36A9               	lsrf	___lwmod@divisor+1,f
  2917  0687  0CA8               	rrf	___lwmod@divisor,f
  2918  0688  0B89               	decfsz	9,f
  2919  0689  2E86               	goto	u1025
  2920  068A  3001               	movlw	1
  2921  068B  02AD               	subwf	___lwmod@counter,f
  2922  068C  1D03               	btfss	3,2
  2923  068D  2E79               	goto	l1505
  2924  068E                     l1513:	
  2925  068E  082B               	movf	___lwmod@dividend+1,w
  2926  068F  01A9               	clrf	?___lwmod+1
  2927  0690  07A9               	addwf	?___lwmod+1,f
  2928  0691  082A               	movf	___lwmod@dividend,w
  2929  0692  01A8               	clrf	?___lwmod
  2930  0693  07A8               	addwf	?___lwmod,f
  2931  0694  0008               	return
  2932  0695                     __end_of___lwmod:	
  2933                           
  2934                           	psect	text10
  2935  05A1                     __ptext10:	
  2936 ;; *************** function ___lwdiv *****************
  2937 ;; Defined at:
  2938 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  divisor         2    0[BANK0 ] unsigned int 
  2941 ;;  dividend        2    2[BANK0 ] unsigned int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  quotient        2    5[BANK0 ] unsigned int 
  2944 ;;  counter         1    7[BANK0 ] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    0[BANK0 ] unsigned int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2954 ;;      Params:         0       4       0       0       0       0       0       0
  2955 ;;      Locals:         0       3       0       0       0       0       0       0
  2956 ;;      Temps:          0       1       0       0       0       0       0       0
  2957 ;;      Totals:         0       8       0       0       0       0       0       0
  2958 ;;Total ram usage:        8 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    2
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_sprintf
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function ___lwdiv
  2970  05A1                     ___lwdiv:	
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2974  05A1  0020               	movlb	0	; select bank0
  2975  05A2  01A5               	clrf	___lwdiv@quotient
  2976  05A3  01A6               	clrf	___lwdiv@quotient+1
  2977  05A4  0821               	movf	___lwdiv@divisor+1,w
  2978  05A5  0420               	iorwf	___lwdiv@divisor,w
  2979  05A6  1903               	skipnz
  2980  05A7  2DD1               	goto	l1491
  2981  05A8  01A7               	clrf	___lwdiv@counter
  2982  05A9  0AA7               	incf	___lwdiv@counter,f
  2983  05AA                     l1479:	
  2984  05AA  1BA1               	btfsc	___lwdiv@divisor+1,7
  2985  05AB  2DB6               	goto	l1481
  2986  05AC  3001               	movlw	1
  2987  05AD                     u925:	
  2988  05AD  35A0               	lslf	___lwdiv@divisor,f
  2989  05AE  0DA1               	rlf	___lwdiv@divisor+1,f
  2990  05AF  0B89               	decfsz	9,f
  2991  05B0  2DAD               	goto	u925
  2992  05B1  3001               	movlw	1
  2993  05B2  00A4               	movwf	??___lwdiv
  2994  05B3  0824               	movf	??___lwdiv,w
  2995  05B4  07A7               	addwf	___lwdiv@counter,f
  2996  05B5  2DAA               	goto	l1479
  2997  05B6                     l1481:	
  2998  05B6  3001               	movlw	1
  2999  05B7                     u945:	
  3000  05B7  35A5               	lslf	___lwdiv@quotient,f
  3001  05B8  0DA6               	rlf	___lwdiv@quotient+1,f
  3002  05B9  0B89               	decfsz	9,f
  3003  05BA  2DB7               	goto	u945
  3004  05BB  0821               	movf	___lwdiv@divisor+1,w
  3005  05BC  0223               	subwf	___lwdiv@dividend+1,w
  3006  05BD  1D03               	skipz
  3007  05BE  2DC1               	goto	u955
  3008  05BF  0820               	movf	___lwdiv@divisor,w
  3009  05C0  0222               	subwf	___lwdiv@dividend,w
  3010  05C1                     u955:	
  3011  05C1  1C03               	skipc
  3012  05C2  2DC8               	goto	l1487
  3013  05C3  0820               	movf	___lwdiv@divisor,w
  3014  05C4  02A2               	subwf	___lwdiv@dividend,f
  3015  05C5  0821               	movf	___lwdiv@divisor+1,w
  3016  05C6  3BA3               	subwfb	___lwdiv@dividend+1,f
  3017  05C7  1425               	bsf	___lwdiv@quotient,0
  3018  05C8                     l1487:	
  3019  05C8  3001               	movlw	1
  3020  05C9                     u965:	
  3021  05C9  36A1               	lsrf	___lwdiv@divisor+1,f
  3022  05CA  0CA0               	rrf	___lwdiv@divisor,f
  3023  05CB  0B89               	decfsz	9,f
  3024  05CC  2DC9               	goto	u965
  3025  05CD  3001               	movlw	1
  3026  05CE  02A7               	subwf	___lwdiv@counter,f
  3027  05CF  1D03               	btfss	3,2
  3028  05D0  2DB6               	goto	l1481
  3029  05D1                     l1491:	
  3030  05D1  0826               	movf	___lwdiv@quotient+1,w
  3031  05D2  01A1               	clrf	?___lwdiv+1
  3032  05D3  07A1               	addwf	?___lwdiv+1,f
  3033  05D4  0825               	movf	___lwdiv@quotient,w
  3034  05D5  01A0               	clrf	?___lwdiv
  3035  05D6  07A0               	addwf	?___lwdiv,f
  3036  05D7  0008               	return
  3037  05D8                     __end_of___lwdiv:	
  3038                           
  3039                           	psect	text11
  3040  079F                     __ptext11:	
  3041 ;; *************** function _InitWatchdog *****************
  3042 ;; Defined at:
  3043 ;;		line 119 in file "launcher_functions.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;		None               void
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3057 ;;      Params:         0       0       0       0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0
  3060 ;;      Totals:         0       0       0       0       0       0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    2
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_main
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _InitWatchdog
  3073  079F                     _InitWatchdog:	
  3074                           
  3075                           ;launcher_functions.c: 122: WDTCONbits.WDTPS = 0x0A;
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  3079  079F  0021               	movlb	1	; select bank1
  3080  07A0  0817               	movf	23,w	;volatile
  3081  07A1  39C1               	andlw	-63
  3082  07A2  3814               	iorlw	20
  3083  07A3  0097               	movwf	23	;volatile
  3084                           
  3085                           ;launcher_functions.c: 123: WDTCONbits.SWDTEN = 0;
  3086  07A4  1017               	bcf	23,0	;volatile
  3087  07A5  0008               	return
  3088  07A6                     __end_of_InitWatchdog:	
  3089                           
  3090                           	psect	text12
  3091  0774                     __ptext12:	
  3092 ;; *************** function _InitTimer1 *****************
  3093 ;; Defined at:
  3094 ;;		line 88 in file "launcher_functions.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3108 ;;      Params:         0       0       0       0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0
  3111 ;;      Totals:         0       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    2
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _InitTimer1
  3124  0774                     _InitTimer1:	
  3125                           
  3126                           ;launcher_functions.c: 90: T1CONbits.TMR1CS = 0;
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  3130  0774  303F               	movlw	-193
  3131  0775  0020               	movlb	0	; select bank0
  3132  0776  0598               	andwf	24,f	;volatile
  3133                           
  3134                           ;launcher_functions.c: 91: T1CONbits.T1CKPS = 2;
  3135  0777  0818               	movf	24,w	;volatile
  3136  0778  39CF               	andlw	-49
  3137  0779  3820               	iorlw	32
  3138  077A  0098               	movwf	24	;volatile
  3139                           
  3140                           ;launcher_functions.c: 92: T1CONbits.nT1SYNC = 1;
  3141  077B  1518               	bsf	24,2	;volatile
  3142                           
  3143                           ;launcher_functions.c: 93: T1GCONbits.TMR1GE = 0;
  3144  077C  1399               	bcf	25,7	;volatile
  3145                           
  3146                           ;launcher_functions.c: 94: TMR1H = 0xFF;
  3147  077D  30FF               	movlw	255
  3148  077E  0097               	movwf	23	;volatile
  3149                           
  3150                           ;launcher_functions.c: 95: TMR1L = 0xCD;
  3151  077F  30CD               	movlw	205
  3152  0780  0096               	movwf	22	;volatile
  3153                           
  3154                           ;launcher_functions.c: 96: T1CONbits.TMR1ON = 1;
  3155  0781  1418               	bsf	24,0	;volatile
  3156  0782  0008               	return
  3157  0783                     __end_of_InitTimer1:	
  3158                           
  3159                           	psect	text13
  3160  0753                     __ptext13:	
  3161 ;; *************** function _InitSPI *****************
  3162 ;; Defined at:
  3163 ;;		line 100 in file "launcher_functions.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;		None               void
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3177 ;;      Params:         0       0       0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    2
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _InitSPI
  3193  0753                     _InitSPI:	
  3194                           
  3195                           ;launcher_functions.c: 103: TRISCbits.TRISC2 = 0;
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  3199  0753  0021               	movlb	1	; select bank1
  3200  0754  110E               	bcf	14,2	;volatile
  3201                           
  3202                           ;launcher_functions.c: 104: TRISCbits.TRISC3 = 0;
  3203  0755  118E               	bcf	14,3	;volatile
  3204                           
  3205                           ;launcher_functions.c: 105: TRISCbits.TRISC4 = 1;
  3206  0756  160E               	bsf	14,4	;volatile
  3207                           
  3208                           ;launcher_functions.c: 106: TRISCbits.TRISC5 = 0;
  3209  0757  128E               	bcf	14,5	;volatile
  3210                           
  3211                           ;launcher_functions.c: 108: LATC2 = 0;
  3212  0758  0022               	movlb	2	; select bank2
  3213  0759  110E               	bcf	14,2	;volatile
  3214                           
  3215                           ;launcher_functions.c: 111: SSPCON1bits.SSPEN=0x00;
  3216  075A  0024               	movlb	4	; select bank4
  3217  075B  1295               	bcf	21,5	;volatile
  3218                           
  3219                           ;launcher_functions.c: 112: SSPCON1bits.SSPM=0x01;
  3220  075C  0815               	movf	21,w	;volatile
  3221  075D  39F0               	andlw	-16
  3222  075E  3801               	iorlw	1
  3223  075F  0095               	movwf	21	;volatile
  3224                           
  3225                           ;launcher_functions.c: 113: SSPCON1bits.CKP=0;
  3226  0760  1215               	bcf	21,4	;volatile
  3227                           
  3228                           ;launcher_functions.c: 114: SSPSTATbits.CKE=1;
  3229  0761  1714               	bsf	20,6	;volatile
  3230                           
  3231                           ;launcher_functions.c: 115: SSPSTATbits.SMP=0;
  3232  0762  1394               	bcf	20,7	;volatile
  3233                           
  3234                           ;launcher_functions.c: 116: SSPCON1bits.SSPEN=0x01;
  3235  0763  1695               	bsf	21,5	;volatile
  3236  0764  0008               	return
  3237  0765                     __end_of_InitSPI:	
  3238                           
  3239                           	psect	text14
  3240  06BF                     __ptext14:	
  3241 ;; *************** function _InitGPIO *****************
  3242 ;; Defined at:
  3243 ;;		line 13 in file "launcher_functions.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;		None               void
  3250 ;; Registers used:
  3251 ;;		status,2
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3257 ;;      Params:         0       0       0       0       0       0       0       0
  3258 ;;      Locals:         0       0       0       0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0
  3260 ;;      Totals:         0       0       0       0       0       0       0       0
  3261 ;;Total ram usage:        0 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    2
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           
  3272                           ;psect for function _InitGPIO
  3273  06BF                     _InitGPIO:	
  3274                           
  3275                           ;launcher_functions.c: 18: TRISBbits.TRISB3 = 1;
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _InitGPIO: [status,2]
  3279  06BF  0021               	movlb	1	; select bank1
  3280  06C0  158D               	bsf	13,3	;volatile
  3281                           
  3282                           ;launcher_functions.c: 19: ANSELBbits.ANSB3 = 0;
  3283  06C1  0023               	movlb	3	; select bank3
  3284  06C2  118D               	bcf	13,3	;volatile
  3285                           
  3286                           ;launcher_functions.c: 20: IOCBNbits.IOCBN3 = 1;
  3287  06C3  0027               	movlb	7	; select bank7
  3288  06C4  1595               	bsf	21,3	;volatile
  3289                           
  3290                           ;launcher_functions.c: 21: IOCBPbits.IOCBP3 = 1;
  3291  06C5  1594               	bsf	20,3	;volatile
  3292                           
  3293                           ;launcher_functions.c: 22: IOCBF = 0x00;
  3294  06C6  0196               	clrf	22	;volatile
  3295                           
  3296                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  3297  06C7  158B               	bsf	11,3	;volatile
  3298                           
  3299                           ;launcher_functions.c: 26: TRISAbits.TRISA0 = 1;
  3300  06C8  0021               	movlb	1	; select bank1
  3301  06C9  140C               	bsf	12,0	;volatile
  3302                           
  3303                           ;launcher_functions.c: 27: TRISAbits.TRISA1 = 1;
  3304  06CA  148C               	bsf	12,1	;volatile
  3305                           
  3306                           ;launcher_functions.c: 28: TRISAbits.TRISA2 = 1;
  3307  06CB  150C               	bsf	12,2	;volatile
  3308                           
  3309                           ;launcher_functions.c: 29: TRISAbits.TRISA3 = 1;
  3310  06CC  158C               	bsf	12,3	;volatile
  3311                           
  3312                           ;launcher_functions.c: 30: TRISAbits.TRISA4 = 0;
  3313  06CD  120C               	bcf	12,4	;volatile
  3314                           
  3315                           ;launcher_functions.c: 31: TRISAbits.TRISA5 = 0;
  3316  06CE  128C               	bcf	12,5	;volatile
  3317                           
  3318                           ;launcher_functions.c: 32: TRISAbits.TRISA6 = 0;
  3319  06CF  130C               	bcf	12,6	;volatile
  3320                           
  3321                           ;launcher_functions.c: 33: TRISAbits.TRISA7 = 0;
  3322  06D0  138C               	bcf	12,7	;volatile
  3323                           
  3324                           ;launcher_functions.c: 36: TRISBbits.TRISB0 = 0;
  3325  06D1  100D               	bcf	13,0	;volatile
  3326                           
  3327                           ;launcher_functions.c: 37: TRISBbits.TRISB1 = 1;
  3328  06D2  148D               	bsf	13,1	;volatile
  3329                           
  3330                           ;launcher_functions.c: 38: TRISBbits.TRISB2 = 0;
  3331  06D3  110D               	bcf	13,2	;volatile
  3332                           
  3333                           ;launcher_functions.c: 40: TRISBbits.TRISB4 = 0;
  3334  06D4  120D               	bcf	13,4	;volatile
  3335                           
  3336                           ;launcher_functions.c: 41: TRISBbits.TRISB5 = 0;
  3337  06D5  128D               	bcf	13,5	;volatile
  3338                           
  3339                           ;launcher_functions.c: 43: PORTBbits.RB0 = 0;
  3340  06D6  0020               	movlb	0	; select bank0
  3341  06D7  100D               	bcf	13,0	;volatile
  3342                           
  3343                           ;launcher_functions.c: 44: PORTBbits.RB4 = 0;
  3344  06D8  120D               	bcf	13,4	;volatile
  3345                           
  3346                           ;launcher_functions.c: 45: PORTBbits.RB5 = 0;
  3347  06D9  128D               	bcf	13,5	;volatile
  3348                           
  3349                           ;launcher_functions.c: 47: ANSELBbits.ANSB0 = 0;
  3350  06DA  0023               	movlb	3	; select bank3
  3351  06DB  100D               	bcf	13,0	;volatile
  3352                           
  3353                           ;launcher_functions.c: 48: ANSELBbits.ANSB1 = 0;
  3354  06DC  108D               	bcf	13,1	;volatile
  3355                           
  3356                           ;launcher_functions.c: 49: ANSELBbits.ANSB2 = 0;
  3357  06DD  110D               	bcf	13,2	;volatile
  3358                           
  3359                           ;launcher_functions.c: 51: ANSELBbits.ANSB4 = 0;
  3360  06DE  120D               	bcf	13,4	;volatile
  3361                           
  3362                           ;launcher_functions.c: 52: ANSELBbits.ANSB5 = 0;
  3363  06DF  128D               	bcf	13,5	;volatile
  3364                           
  3365                           ;launcher_functions.c: 55: TRISCbits.TRISC0 = 0;
  3366  06E0  0021               	movlb	1	; select bank1
  3367  06E1  100E               	bcf	14,0	;volatile
  3368                           
  3369                           ;launcher_functions.c: 56: TRISCbits.TRISC1 = 0;
  3370  06E2  108E               	bcf	14,1	;volatile
  3371  06E3  0008               	return
  3372  06E4                     __end_of_InitGPIO:	
  3373                           
  3374                           	psect	text15
  3375  0797                     __ptext15:	
  3376 ;; *************** function _InitCLK *****************
  3377 ;; Defined at:
  3378 ;;		line 8 in file "launcher_functions.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3392 ;;      Params:         0       0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0
  3395 ;;      Totals:         0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    2
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _InitCLK
  3408  0797                     _InitCLK:	
  3409                           
  3410                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  3414  0797  3078               	movlw	120
  3415  0798  0021               	movlb	1	; select bank1
  3416  0799  0499               	iorwf	25,f	;volatile
  3417                           
  3418                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  3419  079A  0819               	movf	25,w	;volatile
  3420  079B  39FC               	andlw	-4
  3421  079C  3802               	iorlw	2
  3422  079D  0099               	movwf	25	;volatile
  3423  079E  0008               	return
  3424  079F                     __end_of_InitCLK:	
  3425                           
  3426                           	psect	text16
  3427  0723                     __ptext16:	
  3428 ;; *************** function _InitADC *****************
  3429 ;; Defined at:
  3430 ;;		line 65 in file "launcher_functions.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;		None               void
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3444 ;;      Params:         0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _InitADC
  3460  0723                     _InitADC:	
  3461                           
  3462                           ;launcher_functions.c: 68: TRISAbits.TRISA0 = 1;
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  3466  0723  0021               	movlb	1	; select bank1
  3467  0724  140C               	bsf	12,0	;volatile
  3468                           
  3469                           ;launcher_functions.c: 69: ANSELAbits.ANSA0 = 1;
  3470  0725  0023               	movlb	3	; select bank3
  3471  0726  140C               	bsf	12,0	;volatile
  3472                           
  3473                           ;launcher_functions.c: 72: ADCON1bits.ADCS = 0x05;
  3474  0727  0021               	movlb	1	; select bank1
  3475  0728  081E               	movf	30,w	;volatile
  3476  0729  398F               	andlw	-113
  3477  072A  3850               	iorlw	80
  3478  072B  009E               	movwf	30	;volatile
  3479                           
  3480                           ;launcher_functions.c: 73: ADCON1bits.ADPREF = 0x00;
  3481  072C  30FC               	movlw	-4
  3482  072D  059E               	andwf	30,f	;volatile
  3483                           
  3484                           ;launcher_functions.c: 74: ADCON1bits.ADNREF = 0x00;
  3485  072E  111E               	bcf	30,2	;volatile
  3486                           
  3487                           ;launcher_functions.c: 75: ADCON0bits.CHS = 0x00;
  3488  072F  3083               	movlw	-125
  3489  0730  059D               	andwf	29,f	;volatile
  3490                           
  3491                           ;launcher_functions.c: 76: ADCON2bits.CHSN = 0xF;
  3492  0731  300F               	movlw	15
  3493  0732  049F               	iorwf	31,f	;volatile
  3494                           
  3495                           ;launcher_functions.c: 77: ADCON1bits.ADFM = 0;
  3496  0733  139E               	bcf	30,7	;volatile
  3497                           
  3498                           ;launcher_functions.c: 78: ADCON0bits.ADRMD = 1;
  3499  0734  179D               	bsf	29,7	;volatile
  3500                           
  3501                           ;launcher_functions.c: 79: ADCON0bits.ADON = 1;
  3502  0735  141D               	bsf	29,0	;volatile
  3503                           
  3504                           ;launcher_functions.c: 82: ADIF = 0;
  3505  0736  0020               	movlb	0	; select bank0
  3506  0737  1311               	bcf	17,6	;volatile
  3507                           
  3508                           ;launcher_functions.c: 83: ADIE = 1;
  3509  0738  0021               	movlb	1	; select bank1
  3510  0739  1711               	bsf	17,6	;volatile
  3511                           
  3512                           ;launcher_functions.c: 84: PEIE = 1;
  3513  073A  170B               	bsf	11,6	;volatile
  3514  073B  0008               	return
  3515  073C                     __end_of_InitADC:	
  3516                           
  3517                           	psect	text17
  3518  00DD                     __ptext17:	
  3519 ;; *************** function _DecodeGPS *****************
  3520 ;; Defined at:
  3521 ;;		line 365 in file "launcher_functions.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  longitude       8   36[BANK0 ] unsigned long [2]
  3526 ;;  latitude        8   28[BANK0 ] unsigned long [2]
  3527 ;;  messageID       7   18[BANK0 ] unsigned char [7]
  3528 ;;  x               2   44[BANK0 ] int 
  3529 ;;  status          1   27[BANK0 ] unsigned char 
  3530 ;;  eastWest        1   26[BANK0 ] unsigned char 
  3531 ;;  northSouth      1   25[BANK0 ] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;		None               void
  3534 ;; Registers used:
  3535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3541 ;;      Params:         0       0       0       0       0       0       0       0
  3542 ;;      Locals:         0      28       0       0       0       0       0       0
  3543 ;;      Temps:          0       6       0       0       0       0       0       0
  3544 ;;      Totals:         0      34       0       0       0       0       0       0
  3545 ;;Total ram usage:       34 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    3
  3548 ;; This function calls:
  3549 ;;		___lmul
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           
  3556                           ;psect for function _DecodeGPS
  3557  00DD                     _DecodeGPS:	
  3558                           
  3559                           ;launcher_functions.c: 368: unsigned char messageID[7] = "$GPGLL";
  3560                           
  3561                           ;incstack = 0
  3562                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3563  00DD  3043               	movlw	low DecodeGPS@F4915
  3564  00DE  0086               	movwf	6
  3565  00DF  3001               	movlw	high DecodeGPS@F4915
  3566  00E0  0087               	movwf	7
  3567  00E1  3032               	movlw	low DecodeGPS@messageID
  3568  00E2  0084               	movwf	4
  3569  00E3  3000               	movlw	high DecodeGPS@messageID
  3570  00E4  0085               	movwf	5
  3571  00E5  3007               	movlw	7
  3572  00E6  0020               	movlb	0	; select bank0
  3573  00E7  00AC               	movwf	??_DecodeGPS
  3574  00E8                     u1260:	
  3575  00E8  0016               	moviw fsr1++
  3576  00E9  001A               	movwi fsr0++
  3577  00EA  0BAC               	decfsz	??_DecodeGPS,f
  3578  00EB  28E8               	goto	u1260
  3579                           
  3580                           ;launcher_functions.c: 369: unsigned long int latitude[2] = {0,0};
  3581  00EC  30D2               	movlw	low DecodeGPS@F4917
  3582  00ED  0086               	movwf	6
  3583  00EE  3000               	movlw	high DecodeGPS@F4917
  3584  00EF  0087               	movwf	7
  3585  00F0  303C               	movlw	low DecodeGPS@latitude
  3586  00F1  0084               	movwf	4
  3587  00F2  3000               	movlw	high DecodeGPS@latitude
  3588  00F3  0085               	movwf	5
  3589  00F4  3008               	movlw	8
  3590  00F5  00AC               	movwf	??_DecodeGPS
  3591  00F6                     u1270:	
  3592  00F6  0016               	moviw fsr1++
  3593  00F7  001A               	movwi fsr0++
  3594  00F8  0BAC               	decfsz	??_DecodeGPS,f
  3595  00F9  28F6               	goto	u1270
  3596                           
  3597                           ;launcher_functions.c: 370: unsigned long int longitude[2] = {0,0};
  3598  00FA  30DA               	movlw	low DecodeGPS@F4919
  3599  00FB  0086               	movwf	6
  3600  00FC  3000               	movlw	high DecodeGPS@F4919
  3601  00FD  0087               	movwf	7
  3602  00FE  3044               	movlw	low DecodeGPS@longitude
  3603  00FF  0084               	movwf	4
  3604  0100  3000               	movlw	high DecodeGPS@longitude
  3605  0101  0085               	movwf	5
  3606  0102  3008               	movlw	8
  3607  0103  00AC               	movwf	??_DecodeGPS
  3608  0104                     u1280:	
  3609  0104  0016               	moviw fsr1++
  3610  0105  001A               	movwi fsr0++
  3611  0106  0BAC               	decfsz	??_DecodeGPS,f
  3612  0107  2904               	goto	u1280
  3613                           
  3614                           ;launcher_functions.c: 371: unsigned char northSouth;
  3615                           ;launcher_functions.c: 372: unsigned char eastWest;
  3616                           ;launcher_functions.c: 373: unsigned char status;
  3617                           ;launcher_functions.c: 374: int x;
  3618                           ;launcher_functions.c: 376: for(x=0;x<6;x++)
  3619  0108  01CC               	clrf	DecodeGPS@x
  3620  0109  01CD               	clrf	DecodeGPS@x+1
  3621  010A  084D               	movf	DecodeGPS@x+1,w
  3622  010B  3A80               	xorlw	128
  3623  010C  00AC               	movwf	??_DecodeGPS
  3624  010D  3080               	movlw	128
  3625  010E  022C               	subwf	??_DecodeGPS,w
  3626  010F  1D03               	skipz
  3627  0110  2913               	goto	u1295
  3628  0111  3006               	movlw	6
  3629  0112  024C               	subwf	DecodeGPS@x,w
  3630  0113                     u1295:	
  3631  0113  1803               	btfsc	3,0
  3632  0114  2933               	goto	l1815
  3633  0115                     l1809:	
  3634                           
  3635                           ;launcher_functions.c: 377: {
  3636                           ;launcher_functions.c: 378: if(gpsMessage[x] != messageID[x])
  3637  0115  0020               	movlb	0	; select bank0
  3638  0116  084C               	movf	DecodeGPS@x,w
  3639  0117  3E32               	addlw	DecodeGPS@messageID& (0+255)
  3640  0118  0086               	movwf	6
  3641  0119  0187               	clrf	7
  3642  011A  084C               	movf	DecodeGPS@x,w
  3643  011B  3EA0               	addlw	_gpsMessage& (0+255)
  3644  011C  0084               	movwf	4
  3645  011D  0185               	clrf	5
  3646  011E  0800               	movf	0,w
  3647  011F  0601               	xorwf	1,w
  3648  0120  1903               	skipnz
  3649  0121  2924               	goto	l1813
  3650                           
  3651                           ;launcher_functions.c: 379: gpsInvalidFlag = 1;
  3652  0122  01EF               	clrf	_gpsInvalidFlag
  3653  0123  0AEF               	incf	_gpsInvalidFlag,f
  3654  0124                     l1813:	
  3655  0124  3001               	movlw	1
  3656  0125  07CC               	addwf	DecodeGPS@x,f
  3657  0126  3000               	movlw	0
  3658  0127  3DCD               	addwfc	DecodeGPS@x+1,f
  3659  0128  084D               	movf	DecodeGPS@x+1,w
  3660  0129  3A80               	xorlw	128
  3661  012A  00AC               	movwf	??_DecodeGPS
  3662  012B  3080               	movlw	128
  3663  012C  022C               	subwf	??_DecodeGPS,w
  3664  012D  1D03               	skipz
  3665  012E  2931               	goto	u1315
  3666  012F  3006               	movlw	6
  3667  0130  024C               	subwf	DecodeGPS@x,w
  3668  0131                     u1315:	
  3669  0131  1C03               	skipc
  3670  0132  2915               	goto	l1809
  3671  0133                     l1815:	
  3672                           
  3673                           ;launcher_functions.c: 380: }
  3674                           ;launcher_functions.c: 383: x = x + 1;
  3675  0133  0020               	movlb	0	; select bank0
  3676  0134  084C               	movf	DecodeGPS@x,w
  3677  0135  3E01               	addlw	1
  3678  0136  00CC               	movwf	DecodeGPS@x
  3679  0137  3000               	movlw	0
  3680  0138  3D4D               	addwfc	DecodeGPS@x+1,w
  3681  0139  00CD               	movwf	DecodeGPS@x+1
  3682                           
  3683                           ;launcher_functions.c: 386: while(gpsMessage[x] != ',' && gpsMessage[x] != '.')
  3684  013A  2977               	goto	l1823
  3685  013B                     l1817:	
  3686                           
  3687                           ;launcher_functions.c: 387: {
  3688                           ;launcher_functions.c: 388: latitude[0] *= 10;
  3689  013B  3000               	movlw	0
  3690  013C  00A3               	movwf	___lmul@multiplier+3
  3691  013D  3000               	movlw	0
  3692  013E  00A2               	movwf	___lmul@multiplier+2
  3693  013F  3000               	movlw	0
  3694  0140  00A1               	movwf	___lmul@multiplier+1
  3695  0141  300A               	movlw	10
  3696  0142  00A0               	movwf	___lmul@multiplier
  3697  0143  083F               	movf	DecodeGPS@latitude+3,w
  3698  0144  00A7               	movwf	___lmul@multiplicand+3
  3699  0145  083E               	movf	DecodeGPS@latitude+2,w
  3700  0146  00A6               	movwf	___lmul@multiplicand+2
  3701  0147  083D               	movf	DecodeGPS@latitude+1,w
  3702  0148  00A5               	movwf	___lmul@multiplicand+1
  3703  0149  083C               	movf	DecodeGPS@latitude,w
  3704  014A  00A4               	movwf	___lmul@multiplicand
  3705  014B  3186  2636  3180   	fcall	___lmul
  3706  014E  0020               	movlb	0	; select bank0
  3707  014F  0823               	movf	?___lmul+3,w
  3708  0150  00BF               	movwf	DecodeGPS@latitude+3
  3709  0151  0822               	movf	?___lmul+2,w
  3710  0152  00BE               	movwf	DecodeGPS@latitude+2
  3711  0153  0821               	movf	?___lmul+1,w
  3712  0154  00BD               	movwf	DecodeGPS@latitude+1
  3713  0155  0820               	movf	?___lmul,w
  3714  0156  00BC               	movwf	DecodeGPS@latitude
  3715                           
  3716                           ;launcher_functions.c: 389: latitude[0] += (gpsMessage[x++] - 48);
  3717  0157  084C               	movf	DecodeGPS@x,w
  3718  0158  3EA0               	addlw	_gpsMessage& (0+255)
  3719  0159  0086               	movwf	6
  3720  015A  0187               	clrf	7
  3721  015B  0801               	movf	1,w
  3722  015C  3ED0               	addlw	208
  3723  015D  00AC               	movwf	??_DecodeGPS
  3724  015E  30FF               	movlw	255
  3725  015F  1803               	skipnc
  3726  0160  3000               	movlw	0
  3727  0161  00AD               	movwf	??_DecodeGPS+1
  3728  0162  082C               	movf	??_DecodeGPS,w
  3729  0163  00AE               	movwf	??_DecodeGPS+2
  3730  0164  082D               	movf	??_DecodeGPS+1,w
  3731  0165  00AF               	movwf	??_DecodeGPS+3
  3732  0166  3000               	movlw	0
  3733  0167  1BAF               	btfsc	??_DecodeGPS+3,7
  3734  0168  30FF               	movlw	255
  3735  0169  00B0               	movwf	??_DecodeGPS+4
  3736  016A  00B1               	movwf	??_DecodeGPS+5
  3737  016B  082E               	movf	??_DecodeGPS+2,w
  3738  016C  07BC               	addwf	DecodeGPS@latitude,f
  3739  016D  082F               	movf	??_DecodeGPS+3,w
  3740  016E  3DBD               	addwfc	DecodeGPS@latitude+1,f
  3741  016F  0830               	movf	??_DecodeGPS+4,w
  3742  0170  3DBE               	addwfc	DecodeGPS@latitude+2,f
  3743  0171  0831               	movf	??_DecodeGPS+5,w
  3744  0172  3DBF               	addwfc	DecodeGPS@latitude+3,f
  3745  0173  3001               	movlw	1
  3746  0174  07CC               	addwf	DecodeGPS@x,f
  3747  0175  3000               	movlw	0
  3748  0176  3DCD               	addwfc	DecodeGPS@x+1,f
  3749  0177                     l1823:	
  3750  0177  084C               	movf	DecodeGPS@x,w
  3751  0178  3EA0               	addlw	_gpsMessage& (0+255)
  3752  0179  0086               	movwf	6
  3753  017A  0187               	clrf	7
  3754  017B  0801               	movf	1,w
  3755  017C  3A2C               	xorlw	44
  3756  017D  1903               	skipnz
  3757  017E  2987               	goto	l1827
  3758  017F  084C               	movf	DecodeGPS@x,w
  3759  0180  3EA0               	addlw	_gpsMessage& (0+255)
  3760  0181  0086               	movwf	6
  3761  0182  0187               	clrf	7
  3762  0183  0801               	movf	1,w
  3763  0184  3A2E               	xorlw	46
  3764  0185  1D03               	skipz
  3765  0186  293B               	goto	l1817
  3766  0187                     l1827:	
  3767                           
  3768                           ;launcher_functions.c: 390: }
  3769                           ;launcher_functions.c: 393: if(gpsMessage[x] == '.')
  3770  0187  084C               	movf	DecodeGPS@x,w
  3771  0188  3EA0               	addlw	_gpsMessage& (0+255)
  3772  0189  0086               	movwf	6
  3773  018A  0187               	clrf	7
  3774  018B  0801               	movf	1,w
  3775  018C  3A2E               	xorlw	46
  3776  018D  1D03               	skipz
  3777  018E  2995               	goto	l1837
  3778                           
  3779                           ;launcher_functions.c: 394: {
  3780                           ;launcher_functions.c: 395: x = x + 1;
  3781  018F  084C               	movf	DecodeGPS@x,w
  3782  0190  3E01               	addlw	1
  3783  0191  00CC               	movwf	DecodeGPS@x
  3784  0192  3000               	movlw	0
  3785  0193  3D4D               	addwfc	DecodeGPS@x+1,w
  3786  0194  00CD               	movwf	DecodeGPS@x+1
  3787  0195                     l1837:	
  3788                           ;launcher_functions.c: 396: }
  3789                           ;launcher_functions.c: 398: while(gpsMessage[x] != ',')
  3790                           
  3791  0195  084C               	movf	DecodeGPS@x,w
  3792  0196  3EA0               	addlw	_gpsMessage& (0+255)
  3793  0197  0086               	movwf	6
  3794  0198  0187               	clrf	7
  3795  0199  0801               	movf	1,w
  3796  019A  3A2C               	xorlw	44
  3797  019B  1903               	btfsc	3,2
  3798  019C  29DE               	goto	l1839
  3799                           
  3800                           ;launcher_functions.c: 399: {
  3801                           ;launcher_functions.c: 400: latitude[1] *= 10;
  3802  019D  3000               	movlw	0
  3803  019E  00A3               	movwf	___lmul@multiplier+3
  3804  019F  3000               	movlw	0
  3805  01A0  00A2               	movwf	___lmul@multiplier+2
  3806  01A1  3000               	movlw	0
  3807  01A2  00A1               	movwf	___lmul@multiplier+1
  3808  01A3  300A               	movlw	10
  3809  01A4  00A0               	movwf	___lmul@multiplier
  3810  01A5  3004               	movlw	4
  3811  01A6  3E3C               	addlw	DecodeGPS@latitude& (0+255)
  3812  01A7  0086               	movwf	6
  3813  01A8  0187               	clrf	7
  3814  01A9  3F40               	moviw [0]fsr1
  3815  01AA  00A4               	movwf	___lmul@multiplicand
  3816  01AB  3F41               	moviw [1]fsr1
  3817  01AC  00A5               	movwf	___lmul@multiplicand+1
  3818  01AD  3F42               	moviw [2]fsr1
  3819  01AE  00A6               	movwf	___lmul@multiplicand+2
  3820  01AF  3F43               	moviw [3]fsr1
  3821  01B0  00A7               	movwf	___lmul@multiplicand+3
  3822  01B1  3186  2636  3180   	fcall	___lmul
  3823  01B4  0020               	movlb	0	; select bank0
  3824  01B5  0823               	movf	?___lmul+3,w
  3825  01B6  00C3               	movwf	DecodeGPS@latitude+7
  3826  01B7  0822               	movf	?___lmul+2,w
  3827  01B8  00C2               	movwf	DecodeGPS@latitude+6
  3828  01B9  0821               	movf	?___lmul+1,w
  3829  01BA  00C1               	movwf	DecodeGPS@latitude+5
  3830  01BB  0820               	movf	?___lmul,w
  3831  01BC  00C0               	movwf	DecodeGPS@latitude+4
  3832                           
  3833                           ;launcher_functions.c: 401: latitude[1] += (gpsMessage[x++] - 48);
  3834  01BD  084C               	movf	DecodeGPS@x,w
  3835  01BE  3EA0               	addlw	_gpsMessage& (0+255)
  3836  01BF  0086               	movwf	6
  3837  01C0  0187               	clrf	7
  3838  01C1  0801               	movf	1,w
  3839  01C2  3ED0               	addlw	208
  3840  01C3  00AC               	movwf	??_DecodeGPS
  3841  01C4  30FF               	movlw	255
  3842  01C5  1803               	skipnc
  3843  01C6  3000               	movlw	0
  3844  01C7  00AD               	movwf	??_DecodeGPS+1
  3845  01C8  082C               	movf	??_DecodeGPS,w
  3846  01C9  00AE               	movwf	??_DecodeGPS+2
  3847  01CA  082D               	movf	??_DecodeGPS+1,w
  3848  01CB  00AF               	movwf	??_DecodeGPS+3
  3849  01CC  3000               	movlw	0
  3850  01CD  1BAF               	btfsc	??_DecodeGPS+3,7
  3851  01CE  30FF               	movlw	255
  3852  01CF  00B0               	movwf	??_DecodeGPS+4
  3853  01D0  00B1               	movwf	??_DecodeGPS+5
  3854  01D1  082E               	movf	??_DecodeGPS+2,w
  3855  01D2  07C0               	addwf	DecodeGPS@latitude+4,f
  3856  01D3  082F               	movf	??_DecodeGPS+3,w
  3857  01D4  3DC1               	addwfc	DecodeGPS@latitude+5,f
  3858  01D5  0830               	movf	??_DecodeGPS+4,w
  3859  01D6  3DC2               	addwfc	DecodeGPS@latitude+6,f
  3860  01D7  0831               	movf	??_DecodeGPS+5,w
  3861  01D8  3DC3               	addwfc	DecodeGPS@latitude+7,f
  3862  01D9  3001               	movlw	1
  3863  01DA  07CC               	addwf	DecodeGPS@x,f
  3864  01DB  3000               	movlw	0
  3865  01DC  3DCD               	addwfc	DecodeGPS@x+1,f
  3866  01DD  2995               	goto	l1837
  3867  01DE                     l1839:	
  3868                           
  3869                           ;launcher_functions.c: 402: }
  3870                           ;launcher_functions.c: 405: x = x + 1;
  3871  01DE  084C               	movf	DecodeGPS@x,w
  3872  01DF  3E01               	addlw	1
  3873  01E0  00CC               	movwf	DecodeGPS@x
  3874  01E1  3000               	movlw	0
  3875  01E2  3D4D               	addwfc	DecodeGPS@x+1,w
  3876  01E3  00CD               	movwf	DecodeGPS@x+1
  3877                           
  3878                           ;launcher_functions.c: 408: if(gpsMessage[x] != ',')
  3879  01E4  084C               	movf	DecodeGPS@x,w
  3880  01E5  3EA0               	addlw	_gpsMessage& (0+255)
  3881  01E6  0086               	movwf	6
  3882  01E7  0187               	clrf	7
  3883  01E8  0801               	movf	1,w
  3884  01E9  3A2C               	xorlw	44
  3885  01EA  1903               	skipnz
  3886  01EB  29F8               	goto	l1847
  3887                           
  3888                           ;launcher_functions.c: 409: northSouth = gpsMessage[x++];
  3889  01EC  084C               	movf	DecodeGPS@x,w
  3890  01ED  3EA0               	addlw	_gpsMessage& (0+255)
  3891  01EE  0086               	movwf	6
  3892  01EF  0187               	clrf	7
  3893  01F0  0801               	movf	1,w
  3894  01F1  00AC               	movwf	??_DecodeGPS
  3895  01F2  082C               	movf	??_DecodeGPS,w
  3896  01F3  00B9               	movwf	DecodeGPS@northSouth
  3897  01F4  3001               	movlw	1
  3898  01F5  07CC               	addwf	DecodeGPS@x,f
  3899  01F6  3000               	movlw	0
  3900  01F7  3DCD               	addwfc	DecodeGPS@x+1,f
  3901  01F8                     l1847:	
  3902                           
  3903                           ;launcher_functions.c: 412: x = x + 1;
  3904  01F8  084C               	movf	DecodeGPS@x,w
  3905  01F9  3E01               	addlw	1
  3906  01FA  00CC               	movwf	DecodeGPS@x
  3907  01FB  3000               	movlw	0
  3908  01FC  3D4D               	addwfc	DecodeGPS@x+1,w
  3909  01FD  00CD               	movwf	DecodeGPS@x+1
  3910                           
  3911                           ;launcher_functions.c: 415: while(gpsMessage[x] != ',' && gpsMessage[x] != '.')
  3912  01FE  2A3B               	goto	l1855
  3913  01FF                     l1849:	
  3914                           
  3915                           ;launcher_functions.c: 416: {
  3916                           ;launcher_functions.c: 417: longitude[0] *= 10;
  3917  01FF  3000               	movlw	0
  3918  0200  00A3               	movwf	___lmul@multiplier+3
  3919  0201  3000               	movlw	0
  3920  0202  00A2               	movwf	___lmul@multiplier+2
  3921  0203  3000               	movlw	0
  3922  0204  00A1               	movwf	___lmul@multiplier+1
  3923  0205  300A               	movlw	10
  3924  0206  00A0               	movwf	___lmul@multiplier
  3925  0207  0847               	movf	DecodeGPS@longitude+3,w
  3926  0208  00A7               	movwf	___lmul@multiplicand+3
  3927  0209  0846               	movf	DecodeGPS@longitude+2,w
  3928  020A  00A6               	movwf	___lmul@multiplicand+2
  3929  020B  0845               	movf	DecodeGPS@longitude+1,w
  3930  020C  00A5               	movwf	___lmul@multiplicand+1
  3931  020D  0844               	movf	DecodeGPS@longitude,w
  3932  020E  00A4               	movwf	___lmul@multiplicand
  3933  020F  3186  2636  3180   	fcall	___lmul
  3934  0212  0020               	movlb	0	; select bank0
  3935  0213  0823               	movf	?___lmul+3,w
  3936  0214  00C7               	movwf	DecodeGPS@longitude+3
  3937  0215  0822               	movf	?___lmul+2,w
  3938  0216  00C6               	movwf	DecodeGPS@longitude+2
  3939  0217  0821               	movf	?___lmul+1,w
  3940  0218  00C5               	movwf	DecodeGPS@longitude+1
  3941  0219  0820               	movf	?___lmul,w
  3942  021A  00C4               	movwf	DecodeGPS@longitude
  3943                           
  3944                           ;launcher_functions.c: 418: longitude[0] += (gpsMessage[x++] - 48);
  3945  021B  084C               	movf	DecodeGPS@x,w
  3946  021C  3EA0               	addlw	_gpsMessage& (0+255)
  3947  021D  0086               	movwf	6
  3948  021E  0187               	clrf	7
  3949  021F  0801               	movf	1,w
  3950  0220  3ED0               	addlw	208
  3951  0221  00AC               	movwf	??_DecodeGPS
  3952  0222  30FF               	movlw	255
  3953  0223  1803               	skipnc
  3954  0224  3000               	movlw	0
  3955  0225  00AD               	movwf	??_DecodeGPS+1
  3956  0226  082C               	movf	??_DecodeGPS,w
  3957  0227  00AE               	movwf	??_DecodeGPS+2
  3958  0228  082D               	movf	??_DecodeGPS+1,w
  3959  0229  00AF               	movwf	??_DecodeGPS+3
  3960  022A  3000               	movlw	0
  3961  022B  1BAF               	btfsc	??_DecodeGPS+3,7
  3962  022C  30FF               	movlw	255
  3963  022D  00B0               	movwf	??_DecodeGPS+4
  3964  022E  00B1               	movwf	??_DecodeGPS+5
  3965  022F  082E               	movf	??_DecodeGPS+2,w
  3966  0230  07C4               	addwf	DecodeGPS@longitude,f
  3967  0231  082F               	movf	??_DecodeGPS+3,w
  3968  0232  3DC5               	addwfc	DecodeGPS@longitude+1,f
  3969  0233  0830               	movf	??_DecodeGPS+4,w
  3970  0234  3DC6               	addwfc	DecodeGPS@longitude+2,f
  3971  0235  0831               	movf	??_DecodeGPS+5,w
  3972  0236  3DC7               	addwfc	DecodeGPS@longitude+3,f
  3973  0237  3001               	movlw	1
  3974  0238  07CC               	addwf	DecodeGPS@x,f
  3975  0239  3000               	movlw	0
  3976  023A  3DCD               	addwfc	DecodeGPS@x+1,f
  3977  023B                     l1855:	
  3978  023B  084C               	movf	DecodeGPS@x,w
  3979  023C  3EA0               	addlw	_gpsMessage& (0+255)
  3980  023D  0086               	movwf	6
  3981  023E  0187               	clrf	7
  3982  023F  0801               	movf	1,w
  3983  0240  3A2C               	xorlw	44
  3984  0241  1903               	skipnz
  3985  0242  2A4B               	goto	l1859
  3986  0243  084C               	movf	DecodeGPS@x,w
  3987  0244  3EA0               	addlw	_gpsMessage& (0+255)
  3988  0245  0086               	movwf	6
  3989  0246  0187               	clrf	7
  3990  0247  0801               	movf	1,w
  3991  0248  3A2E               	xorlw	46
  3992  0249  1D03               	skipz
  3993  024A  29FF               	goto	l1849
  3994  024B                     l1859:	
  3995                           
  3996                           ;launcher_functions.c: 419: }
  3997                           ;launcher_functions.c: 422: if(gpsMessage[x] == '.')
  3998  024B  084C               	movf	DecodeGPS@x,w
  3999  024C  3EA0               	addlw	_gpsMessage& (0+255)
  4000  024D  0086               	movwf	6
  4001  024E  0187               	clrf	7
  4002  024F  0801               	movf	1,w
  4003  0250  3A2E               	xorlw	46
  4004  0251  1D03               	skipz
  4005  0252  2A59               	goto	l1869
  4006                           
  4007                           ;launcher_functions.c: 423: {
  4008                           ;launcher_functions.c: 424: x = x + 1;
  4009  0253  084C               	movf	DecodeGPS@x,w
  4010  0254  3E01               	addlw	1
  4011  0255  00CC               	movwf	DecodeGPS@x
  4012  0256  3000               	movlw	0
  4013  0257  3D4D               	addwfc	DecodeGPS@x+1,w
  4014  0258  00CD               	movwf	DecodeGPS@x+1
  4015  0259                     l1869:	
  4016                           ;launcher_functions.c: 425: }
  4017                           ;launcher_functions.c: 427: while(gpsMessage[x] != ',')
  4018                           
  4019  0259  084C               	movf	DecodeGPS@x,w
  4020  025A  3EA0               	addlw	_gpsMessage& (0+255)
  4021  025B  0086               	movwf	6
  4022  025C  0187               	clrf	7
  4023  025D  0801               	movf	1,w
  4024  025E  3A2C               	xorlw	44
  4025  025F  1903               	btfsc	3,2
  4026  0260  2AA2               	goto	l1871
  4027                           
  4028                           ;launcher_functions.c: 428: {
  4029                           ;launcher_functions.c: 429: longitude[1] *= 10;
  4030  0261  3000               	movlw	0
  4031  0262  00A3               	movwf	___lmul@multiplier+3
  4032  0263  3000               	movlw	0
  4033  0264  00A2               	movwf	___lmul@multiplier+2
  4034  0265  3000               	movlw	0
  4035  0266  00A1               	movwf	___lmul@multiplier+1
  4036  0267  300A               	movlw	10
  4037  0268  00A0               	movwf	___lmul@multiplier
  4038  0269  3004               	movlw	4
  4039  026A  3E44               	addlw	DecodeGPS@longitude& (0+255)
  4040  026B  0086               	movwf	6
  4041  026C  0187               	clrf	7
  4042  026D  3F40               	moviw [0]fsr1
  4043  026E  00A4               	movwf	___lmul@multiplicand
  4044  026F  3F41               	moviw [1]fsr1
  4045  0270  00A5               	movwf	___lmul@multiplicand+1
  4046  0271  3F42               	moviw [2]fsr1
  4047  0272  00A6               	movwf	___lmul@multiplicand+2
  4048  0273  3F43               	moviw [3]fsr1
  4049  0274  00A7               	movwf	___lmul@multiplicand+3
  4050  0275  3186  2636  3180   	fcall	___lmul
  4051  0278  0020               	movlb	0	; select bank0
  4052  0279  0823               	movf	?___lmul+3,w
  4053  027A  00CB               	movwf	DecodeGPS@longitude+7
  4054  027B  0822               	movf	?___lmul+2,w
  4055  027C  00CA               	movwf	DecodeGPS@longitude+6
  4056  027D  0821               	movf	?___lmul+1,w
  4057  027E  00C9               	movwf	DecodeGPS@longitude+5
  4058  027F  0820               	movf	?___lmul,w
  4059  0280  00C8               	movwf	DecodeGPS@longitude+4
  4060                           
  4061                           ;launcher_functions.c: 430: longitude[1] += (gpsMessage[x++] - 48);
  4062  0281  084C               	movf	DecodeGPS@x,w
  4063  0282  3EA0               	addlw	_gpsMessage& (0+255)
  4064  0283  0086               	movwf	6
  4065  0284  0187               	clrf	7
  4066  0285  0801               	movf	1,w
  4067  0286  3ED0               	addlw	208
  4068  0287  00AC               	movwf	??_DecodeGPS
  4069  0288  30FF               	movlw	255
  4070  0289  1803               	skipnc
  4071  028A  3000               	movlw	0
  4072  028B  00AD               	movwf	??_DecodeGPS+1
  4073  028C  082C               	movf	??_DecodeGPS,w
  4074  028D  00AE               	movwf	??_DecodeGPS+2
  4075  028E  082D               	movf	??_DecodeGPS+1,w
  4076  028F  00AF               	movwf	??_DecodeGPS+3
  4077  0290  3000               	movlw	0
  4078  0291  1BAF               	btfsc	??_DecodeGPS+3,7
  4079  0292  30FF               	movlw	255
  4080  0293  00B0               	movwf	??_DecodeGPS+4
  4081  0294  00B1               	movwf	??_DecodeGPS+5
  4082  0295  082E               	movf	??_DecodeGPS+2,w
  4083  0296  07C8               	addwf	DecodeGPS@longitude+4,f
  4084  0297  082F               	movf	??_DecodeGPS+3,w
  4085  0298  3DC9               	addwfc	DecodeGPS@longitude+5,f
  4086  0299  0830               	movf	??_DecodeGPS+4,w
  4087  029A  3DCA               	addwfc	DecodeGPS@longitude+6,f
  4088  029B  0831               	movf	??_DecodeGPS+5,w
  4089  029C  3DCB               	addwfc	DecodeGPS@longitude+7,f
  4090  029D  3001               	movlw	1
  4091  029E  07CC               	addwf	DecodeGPS@x,f
  4092  029F  3000               	movlw	0
  4093  02A0  3DCD               	addwfc	DecodeGPS@x+1,f
  4094  02A1  2A59               	goto	l1869
  4095  02A2                     l1871:	
  4096                           
  4097                           ;launcher_functions.c: 431: }
  4098                           ;launcher_functions.c: 434: x = x + 1;
  4099  02A2  084C               	movf	DecodeGPS@x,w
  4100  02A3  3E01               	addlw	1
  4101  02A4  00CC               	movwf	DecodeGPS@x
  4102  02A5  3000               	movlw	0
  4103  02A6  3D4D               	addwfc	DecodeGPS@x+1,w
  4104  02A7  00CD               	movwf	DecodeGPS@x+1
  4105                           
  4106                           ;launcher_functions.c: 437: if(gpsMessage[x] != ',')
  4107  02A8  084C               	movf	DecodeGPS@x,w
  4108  02A9  3EA0               	addlw	_gpsMessage& (0+255)
  4109  02AA  0086               	movwf	6
  4110  02AB  0187               	clrf	7
  4111  02AC  0801               	movf	1,w
  4112  02AD  3A2C               	xorlw	44
  4113  02AE  1903               	skipnz
  4114  02AF  2ABC               	goto	l1879
  4115                           
  4116                           ;launcher_functions.c: 438: eastWest = gpsMessage[x++];
  4117  02B0  084C               	movf	DecodeGPS@x,w
  4118  02B1  3EA0               	addlw	_gpsMessage& (0+255)
  4119  02B2  0086               	movwf	6
  4120  02B3  0187               	clrf	7
  4121  02B4  0801               	movf	1,w
  4122  02B5  00AC               	movwf	??_DecodeGPS
  4123  02B6  082C               	movf	??_DecodeGPS,w
  4124  02B7  00BA               	movwf	DecodeGPS@eastWest
  4125  02B8  3001               	movlw	1
  4126  02B9  07CC               	addwf	DecodeGPS@x,f
  4127  02BA  3000               	movlw	0
  4128  02BB  3DCD               	addwfc	DecodeGPS@x+1,f
  4129  02BC                     l1879:	
  4130                           
  4131                           ;launcher_functions.c: 441: x = x + 1;
  4132  02BC  084C               	movf	DecodeGPS@x,w
  4133  02BD  3E01               	addlw	1
  4134  02BE  00CC               	movwf	DecodeGPS@x
  4135  02BF  3000               	movlw	0
  4136  02C0  3D4D               	addwfc	DecodeGPS@x+1,w
  4137  02C1  00CD               	movwf	DecodeGPS@x+1
  4138  02C2                     l1881:	
  4139                           ;launcher_functions.c: 444: while(gpsMessage[x++] != ','){}
  4140                           
  4141  02C2  084D               	movf	DecodeGPS@x+1,w
  4142  02C3  00AD               	movwf	??_DecodeGPS+1
  4143  02C4  084C               	movf	DecodeGPS@x,w
  4144  02C5  00AC               	movwf	??_DecodeGPS
  4145  02C6  0ACC               	incf	DecodeGPS@x,f
  4146  02C7  1903               	skipnz
  4147  02C8  0ACD               	incf	DecodeGPS@x+1,f
  4148  02C9  082C               	movf	??_DecodeGPS,w
  4149  02CA  3EA0               	addlw	_gpsMessage& (0+255)
  4150  02CB  0086               	movwf	6
  4151  02CC  0187               	clrf	7
  4152  02CD  0801               	movf	1,w
  4153  02CE  3A2C               	xorlw	44
  4154  02CF  1D03               	skipz
  4155  02D0  2AC2               	goto	l1881
  4156                           
  4157                           ;launcher_functions.c: 447: status = gpsMessage[x];
  4158  02D1  084C               	movf	DecodeGPS@x,w
  4159  02D2  3EA0               	addlw	_gpsMessage& (0+255)
  4160  02D3  0086               	movwf	6
  4161  02D4  0187               	clrf	7
  4162  02D5  0801               	movf	1,w
  4163  02D6  00AC               	movwf	??_DecodeGPS
  4164  02D7  082C               	movf	??_DecodeGPS,w
  4165  02D8  00BB               	movwf	DecodeGPS@status
  4166                           
  4167                           ;launcher_functions.c: 449: if(status == 'A')
  4168  02D9  083B               	movf	DecodeGPS@status,w
  4169  02DA  3A41               	xorlw	65
  4170  02DB  1D03               	skipz
  4171  02DC  2ADF               	goto	l337
  4172                           
  4173                           ;launcher_functions.c: 450: gpsInvalidFlag = 0;
  4174  02DD  01EF               	clrf	_gpsInvalidFlag
  4175  02DE  0008               	return
  4176  02DF                     l337:	
  4177                           
  4178                           ;launcher_functions.c: 451: else
  4179                           ;launcher_functions.c: 452: gpsInvalidFlag = 1;
  4180  02DF  01EF               	clrf	_gpsInvalidFlag
  4181  02E0  0AEF               	incf	_gpsInvalidFlag,f
  4182  02E1  0008               	return
  4183  02E2                     __end_of_DecodeGPS:	
  4184                           
  4185                           	psect	text18
  4186  0636                     __ptext18:	
  4187 ;; *************** function ___lmul *****************
  4188 ;; Defined at:
  4189 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4192 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  product         4    8[BANK0 ] unsigned long 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  4    0[BANK0 ] unsigned long 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4204 ;;      Params:         0       8       0       0       0       0       0       0
  4205 ;;      Locals:         0       4       0       0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0
  4207 ;;      Totals:         0      12       0       0       0       0       0       0
  4208 ;;Total ram usage:       12 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    2
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_DecodeGPS
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function ___lmul
  4220  0636                     ___lmul:	
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4224  0636  3000               	movlw	0
  4225  0637  0020               	movlb	0	; select bank0
  4226  0638  00AB               	movwf	___lmul@product+3
  4227  0639  3000               	movlw	0
  4228  063A  00AA               	movwf	___lmul@product+2
  4229  063B  3000               	movlw	0
  4230  063C  00A9               	movwf	___lmul@product+1
  4231  063D  3000               	movlw	0
  4232  063E  00A8               	movwf	___lmul@product
  4233  063F                     l1625:	
  4234  063F  1C20               	btfss	___lmul@multiplier,0
  4235  0640  2E49               	goto	l1629
  4236  0641  0824               	movf	___lmul@multiplicand,w
  4237  0642  07A8               	addwf	___lmul@product,f
  4238  0643  0825               	movf	___lmul@multiplicand+1,w
  4239  0644  3DA9               	addwfc	___lmul@product+1,f
  4240  0645  0826               	movf	___lmul@multiplicand+2,w
  4241  0646  3DAA               	addwfc	___lmul@product+2,f
  4242  0647  0827               	movf	___lmul@multiplicand+3,w
  4243  0648  3DAB               	addwfc	___lmul@product+3,f
  4244  0649                     l1629:	
  4245  0649  3001               	movlw	1
  4246  064A                     u1195:	
  4247  064A  35A4               	lslf	___lmul@multiplicand,f
  4248  064B  0DA5               	rlf	___lmul@multiplicand+1,f
  4249  064C  0DA6               	rlf	___lmul@multiplicand+2,f
  4250  064D  0DA7               	rlf	___lmul@multiplicand+3,f
  4251  064E  0B89               	decfsz	9,f
  4252  064F  2E4A               	goto	u1195
  4253  0650  3001               	movlw	1
  4254  0651                     u1205:	
  4255  0651  36A3               	lsrf	___lmul@multiplier+3,f
  4256  0652  0CA2               	rrf	___lmul@multiplier+2,f
  4257  0653  0CA1               	rrf	___lmul@multiplier+1,f
  4258  0654  0CA0               	rrf	___lmul@multiplier,f
  4259  0655  0B89               	decfsz	9,f
  4260  0656  2E51               	goto	u1205
  4261  0657  0823               	movf	___lmul@multiplier+3,w
  4262  0658  0422               	iorwf	___lmul@multiplier+2,w
  4263  0659  0421               	iorwf	___lmul@multiplier+1,w
  4264  065A  0420               	iorwf	___lmul@multiplier,w
  4265  065B  1D03               	skipz
  4266  065C  2E3F               	goto	l1625
  4267  065D  082B               	movf	___lmul@product+3,w
  4268  065E  00A3               	movwf	?___lmul+3
  4269  065F  082A               	movf	___lmul@product+2,w
  4270  0660  00A2               	movwf	?___lmul+2
  4271  0661  0829               	movf	___lmul@product+1,w
  4272  0662  00A1               	movwf	?___lmul+1
  4273  0663  0828               	movf	___lmul@product,w
  4274  0664  00A0               	movwf	?___lmul
  4275  0665  0008               	return
  4276  0666                     __end_of___lmul:	
  4277                           
  4278                           	psect	intentry
  4279  0004                     __pintentry:	
  4280 ;; *************** function _isr *****************
  4281 ;; Defined at:
  4282 ;;		line 75 in file "launcher_main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;		None               void
  4289 ;; Registers used:
  4290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4296 ;;      Params:         0       0       0       0       0       0       0       0
  4297 ;;      Locals:         2       0       0       0       0       0       0       0
  4298 ;;      Temps:          5       0       0       0       0       0       0       0
  4299 ;;      Totals:         7       0       0       0       0       0       0       0
  4300 ;;Total ram usage:        7 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    1
  4303 ;; This function calls:
  4304 ;;		_WriteBuffer
  4305 ;; This function is called by:
  4306 ;;		Interrupt level 1
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310  0004                     _isr:	
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4314  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4315  0005  3180               	pagesel	$
  4316  0006  0020               	movlb	0	; select bank0
  4317  0007  087F               	movf	127,w
  4318  0008  00F6               	movwf	??_isr+4
  4319                           
  4320                           ;launcher_main.c: 78: if (PIR1bits.RCIF)
  4321  0009  1E91               	btfss	17,5	;volatile
  4322  000A  282B               	goto	i1l1953
  4323                           
  4324                           ;launcher_main.c: 79: {
  4325                           ;launcher_main.c: 81: if(OERR)
  4326  000B  0023               	movlb	3	; select bank3
  4327  000C  1C9D               	btfss	29,1	;volatile
  4328  000D  2810               	goto	i1l1941
  4329                           
  4330                           ;launcher_main.c: 82: {
  4331                           ;launcher_main.c: 83: RCSTAbits.CREN = 0;
  4332  000E  121D               	bcf	29,4	;volatile
  4333                           
  4334                           ;launcher_main.c: 84: RCSTAbits.CREN = 1;
  4335  000F  161D               	bsf	29,4	;volatile
  4336  0010                     i1l1941:	
  4337                           
  4338                           ;launcher_main.c: 85: }
  4339                           ;launcher_main.c: 86: gpsMessage[gpsIndex++] = RCREG;
  4340  0010  0819               	movf	25,w	;volatile
  4341  0011  00F2               	movwf	??_isr
  4342  0012  0020               	movlb	0	; select bank0
  4343  0013  086D               	movf	_gpsIndex,w
  4344  0014  3EA0               	addlw	_gpsMessage& (0+255)
  4345  0015  0086               	movwf	6
  4346  0016  0187               	clrf	7
  4347  0017  0872               	movf	??_isr,w
  4348  0018  0081               	movwf	1
  4349  0019  3001               	movlw	1
  4350  001A  00F2               	movwf	??_isr
  4351  001B  0872               	movf	??_isr,w
  4352  001C  07ED               	addwf	_gpsIndex,f	;volatile
  4353                           
  4354                           ;launcher_main.c: 87: if(gpsMessage[gpsIndex-1] == 0x0A)
  4355  001D  086D               	movf	_gpsIndex,w
  4356  001E  3EFF               	addlw	255
  4357  001F  3EA0               	addlw	_gpsMessage& (0+255)
  4358  0020  0086               	movwf	6
  4359  0021  0187               	clrf	7
  4360  0022  0801               	movf	1,w
  4361  0023  3A0A               	xorlw	10
  4362  0024  1D03               	skipz
  4363  0025  2829               	goto	i1l1949
  4364                           
  4365                           ;launcher_main.c: 88: {
  4366                           ;launcher_main.c: 89: messageDoneFlag = 1;
  4367  0026  01EE               	clrf	_messageDoneFlag
  4368  0027  0AEE               	incf	_messageDoneFlag,f
  4369                           
  4370                           ;launcher_main.c: 90: }
  4371  0028  282A               	goto	i1l1951
  4372  0029                     i1l1949:	
  4373                           
  4374                           ;launcher_main.c: 91: else
  4375                           ;launcher_main.c: 92: {
  4376                           ;launcher_main.c: 93: messageDoneFlag = 0;
  4377  0029  01EE               	clrf	_messageDoneFlag
  4378  002A                     i1l1951:	
  4379                           
  4380                           ;launcher_main.c: 94: }
  4381                           ;launcher_main.c: 95: PIR1bits.RCIF = 0;
  4382  002A  1291               	bcf	17,5	;volatile
  4383  002B                     i1l1953:	
  4384                           
  4385                           ;launcher_main.c: 96: }
  4386                           ;launcher_main.c: 99: if (TMR1IF && TMR1IE)
  4387  002B  1C11               	btfss	17,0	;volatile
  4388  002C  283C               	goto	i1l1963
  4389  002D  0021               	movlb	1	; select bank1
  4390  002E  1C11               	btfss	17,0	;volatile
  4391  002F  283C               	goto	i1l1963
  4392                           
  4393                           ;launcher_main.c: 100: {
  4394                           ;launcher_main.c: 101: TMR1H = 0xFF;
  4395  0030  30FF               	movlw	255
  4396  0031  0020               	movlb	0	; select bank0
  4397  0032  0097               	movwf	23	;volatile
  4398                           
  4399                           ;launcher_main.c: 102: TMR1L = 0xCD;
  4400  0033  30CD               	movlw	205
  4401  0034  0096               	movwf	22	;volatile
  4402                           
  4403                           ;launcher_main.c: 103: TMR1IF = 0;
  4404  0035  1011               	bcf	17,0	;volatile
  4405                           
  4406                           ;launcher_main.c: 105: if(recordModeFlag)
  4407  0036  087D               	movf	_recordModeFlag,w
  4408  0037  1903               	btfsc	3,2
  4409  0038  283C               	goto	i1l1963
  4410                           
  4411                           ;launcher_main.c: 106: {
  4412                           ;launcher_main.c: 107: ADCON0bits.ADGO = 1;
  4413  0039  0021               	movlb	1	; select bank1
  4414  003A  149D               	bsf	29,1	;volatile
  4415  003B  0020               	movlb	0	; select bank0
  4416  003C                     i1l1963:	
  4417                           
  4418                           ;launcher_main.c: 108: }
  4419                           ;launcher_main.c: 109: }
  4420                           ;launcher_main.c: 112: if(PIR1bits.ADIF & PIE1bits.ADIE)
  4421  003C  0021               	movlb	1	; select bank1
  4422  003D  0E11               	swapf	17,w	;volatile
  4423  003E  0C89               	rrf	9,f
  4424  003F  0C89               	rrf	9,f
  4425  0040  3901               	andlw	1
  4426  0041  00F2               	movwf	??_isr
  4427  0042  0020               	movlb	0	; select bank0
  4428  0043  0E11               	swapf	17,w	;volatile
  4429  0044  0C89               	rrf	9,f
  4430  0045  0C89               	rrf	9,f
  4431  0046  3901               	andlw	1
  4432  0047  0572               	andwf	??_isr,w
  4433  0048  1903               	btfsc	3,2
  4434  0049  287A               	goto	i1l1977
  4435                           
  4436                           ;launcher_main.c: 113: {
  4437                           ;launcher_main.c: 114: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  4438  004A  3033               	movlw	51
  4439  004B  0679               	xorwf	_end,w
  4440  004C  047A               	iorwf	_end+1,w
  4441  004D  1903               	skipnz
  4442  004E  2864               	goto	i1l1969
  4443  004F  0879               	movf	_end,w
  4444  0050  3E01               	addlw	1
  4445  0051  00F2               	movwf	??_isr
  4446  0052  3000               	movlw	0
  4447  0053  3D7A               	addwfc	_end+1,w
  4448  0054  00F3               	movwf	??_isr+1
  4449  0055  087C               	movf	_start+1,w
  4450  0056  0673               	xorwf	??_isr+1,w
  4451  0057  1D03               	skipz
  4452  0058  285B               	goto	u155_25
  4453  0059  087B               	movf	_start,w
  4454  005A  0672               	xorwf	??_isr,w
  4455  005B                     u155_25:	
  4456  005B  3000               	movlw	0
  4457  005C  1903               	skipnz
  4458  005D  3001               	movlw	1
  4459  005E  00F4               	movwf	??_isr+2
  4460  005F  01F5               	clrf	??_isr+3
  4461  0060  0874               	movf	??_isr+2,w
  4462  0061  00F7               	movwf	_isr$400
  4463  0062  0875               	movf	??_isr+3,w
  4464  0063  286E               	goto	L4
  4465  0064                     i1l1969:	
  4466  0064  087C               	movf	_start+1,w
  4467  0065  047B               	iorwf	_start,w
  4468  0066  3000               	movlw	0
  4469  0067  1903               	skipnz
  4470  0068  3001               	movlw	1
  4471  0069  00F2               	movwf	??_isr
  4472  006A  01F3               	clrf	??_isr+1
  4473  006B  0872               	movf	??_isr,w
  4474  006C  00F7               	movwf	_isr$400
  4475  006D  0873               	movf	??_isr+1,w
  4476  006E                     L4:	
  4477  006E  00F8               	movwf	_isr$400+1
  4478  006F  0878               	movf	_isr$400+1,w
  4479  0070  0477               	iorwf	_isr$400,w
  4480  0071  1D03               	skipz
  4481  0072  2878               	goto	i1l1975
  4482                           
  4483                           ;launcher_main.c: 115: {
  4484                           ;launcher_main.c: 116: WriteBuffer(ADRESH);
  4485  0073  0021               	movlb	1	; select bank1
  4486  0074  081C               	movf	28,w	;volatile
  4487  0075  3187  273C  3180   	fcall	_WriteBuffer
  4488  0078                     i1l1975:	
  4489                           
  4490                           ;launcher_main.c: 117: }
  4491                           ;launcher_main.c: 118: PIR1bits.ADIF = 0;
  4492  0078  0020               	movlb	0	; select bank0
  4493  0079  1311               	bcf	17,6	;volatile
  4494  007A                     i1l1977:	
  4495                           
  4496                           ;launcher_main.c: 119: }
  4497                           ;launcher_main.c: 121: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  4498  007A  1D8B               	btfss	11,3	;volatile
  4499  007B  28A1               	goto	i1l105
  4500  007C  0027               	movlb	7	; select bank7
  4501  007D  1D96               	btfss	22,3	;volatile
  4502  007E  28A1               	goto	i1l105
  4503                           
  4504                           ;launcher_main.c: 122: {
  4505                           ;launcher_main.c: 123: IOCBFbits.IOCBF3 = 0;
  4506  007F  1196               	bcf	22,3	;volatile
  4507                           
  4508                           ;launcher_main.c: 124: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  4509  0080  0020               	movlb	0	; select bank0
  4510  0081  0C0D               	rrf	13,w	;volatile
  4511  0082  00F2               	movwf	??_isr
  4512  0083  0CF2               	rrf	??_isr,f
  4513  0084  0C72               	rrf	??_isr,w
  4514  0085  3901               	andlw	1
  4515  0086  00F3               	movwf	??_isr+1
  4516  0087  0027               	movlb	7	; select bank7
  4517  0088  0C14               	rrf	20,w	;volatile
  4518  0089  00F4               	movwf	??_isr+2
  4519  008A  0CF4               	rrf	??_isr+2,f
  4520  008B  0C74               	rrf	??_isr+2,w
  4521  008C  3901               	andlw	1
  4522  008D  0573               	andwf	??_isr+1,w
  4523  008E  1903               	btfsc	3,2
  4524  008F  2892               	goto	i1l1987
  4525                           
  4526                           ;launcher_main.c: 125: {
  4527                           ;launcher_main.c: 126: recordModeFlag = 1;
  4528  0090  01FD               	clrf	_recordModeFlag
  4529  0091  0AFD               	incf	_recordModeFlag,f
  4530  0092                     i1l1987:	
  4531                           
  4532                           ;launcher_main.c: 127: }
  4533                           ;launcher_main.c: 128: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  4534  0092  0C15               	rrf	21,w	;volatile
  4535  0093  00F2               	movwf	??_isr
  4536  0094  0CF2               	rrf	??_isr,f
  4537  0095  0C72               	rrf	??_isr,w
  4538  0096  3901               	andlw	1
  4539  0097  00F3               	movwf	??_isr+1
  4540  0098  1003               	clrc
  4541  0099  0020               	movlb	0	; select bank0
  4542  009A  1D8D               	btfss	13,3	;volatile
  4543  009B  1403               	setc
  4544  009C  3000               	movlw	0
  4545  009D  3D09               	addwfc	9,w
  4546  009E  0573               	andwf	??_isr+1,w
  4547  009F  1D03               	btfss	3,2
  4548                           
  4549                           ;launcher_main.c: 129: {
  4550                           ;launcher_main.c: 130: recordModeFlag = 0;
  4551  00A0  01FD               	clrf	_recordModeFlag
  4552  00A1                     i1l105:	
  4553  00A1  0876               	movf	??_isr+4,w
  4554  00A2  0020               	movlb	0	; select bank0
  4555  00A3  00FF               	movwf	127
  4556  00A4  107E               	bcf	126,0	;clear compiler interrupt flag
  4557  00A5  0009               	retfie
  4558  00A6                     __end_of_isr:	
  4559                           
  4560                           	psect	text20
  4561  073C                     __ptext20:	
  4562 ;; *************** function _WriteBuffer *****************
  4563 ;; Defined at:
  4564 ;;		line 197 in file "launcher_functions.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  data            1    wreg     unsigned char 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  data            1    1[COMMON] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;		None               void
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4578 ;;      Params:         0       0       0       0       0       0       0       0
  4579 ;;      Locals:         1       0       0       0       0       0       0       0
  4580 ;;      Temps:          1       0       0       0       0       0       0       0
  4581 ;;      Totals:         2       0       0       0       0       0       0       0
  4582 ;;Total ram usage:        2 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_isr
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function _WriteBuffer
  4593  073C                     _WriteBuffer:	
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  4597                           ;WriteBuffer@data stored from wreg
  4598  073C  00F1               	movwf	WriteBuffer@data
  4599                           
  4600                           ;launcher_functions.c: 199: buffer[end] = data;
  4601  073D  0871               	movf	WriteBuffer@data,w
  4602  073E  00F0               	movwf	??_WriteBuffer
  4603  073F  0879               	movf	_end,w
  4604  0740  3EA0               	addlw	_buffer& (0+255)
  4605  0741  0086               	movwf	6
  4606  0742  3001               	movlw	1	; select bank3/4
  4607  0743  0087               	movwf	7
  4608  0744  0870               	movf	??_WriteBuffer,w
  4609  0745  0081               	movwf	1
  4610                           
  4611                           ;launcher_functions.c: 201: if (end == 51)
  4612  0746  3033               	movlw	51
  4613  0747  0679               	xorwf	_end,w
  4614  0748  047A               	iorwf	_end+1,w
  4615  0749  1D03               	skipz
  4616  074A  2F4E               	goto	i1l1895
  4617                           
  4618                           ;launcher_functions.c: 202: end = 0;
  4619  074B  01F9               	clrf	_end
  4620  074C  01FA               	clrf	_end+1
  4621  074D  0008               	return
  4622  074E                     i1l1895:	
  4623                           
  4624                           ;launcher_functions.c: 203: else
  4625                           ;launcher_functions.c: 204: end++;
  4626  074E  3001               	movlw	1
  4627  074F  07F9               	addwf	_end,f
  4628  0750  3000               	movlw	0
  4629  0751  3DFA               	addwfc	_end+1,f
  4630  0752  0008               	return
  4631  0753                     __end_of_WriteBuffer:	
  4632  007E                     btemp	set	126	;btemp
  4633  007E                     pic14e$flags	set	126
  4634  007E                     wtemp	set	126
  4635  007E                     wtemp0	set	126
  4636  0080                     wtemp1	set	128
  4637  0082                     wtemp2	set	130
  4638  0084                     wtemp3	set	132
  4639  0086                     wtemp4	set	134
  4640  0088                     wtemp5	set	136
  4641  007F                     wtemp6	set	127
  4642  007E                     ttemp	set	126
  4643  007E                     ttemp0	set	126
  4644  0081                     ttemp1	set	129
  4645  0084                     ttemp2	set	132
  4646  0087                     ttemp3	set	135
  4647  007F                     ttemp4	set	127
  4648  007E                     ltemp	set	126
  4649  007E                     ltemp0	set	126
  4650  0082                     ltemp1	set	130
  4651  0086                     ltemp2	set	134
  4652  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    10
    Data        53
    BSS         123
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     77      80
    BANK1            80      0      76
    BANK2            80      0      42
    BANK3            80      0      51
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 22
		 -> SetupGPS@message(BANK0[22]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1142$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _UpdateGPS->_uart_write_message
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _DecodeGPS->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    5358
                                             70 BANK0      7     3      4
                          _DecodeGPS
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    1133
                                             23 BANK0     23    23      0
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            37    37      0    2727
                                             33 BANK0     37    37      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1357
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DecodeGPS                                           34    34      0    1498
                                             12 BANK0     34    34      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     604
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (5) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DecodeGPS
     ___lmul
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     107       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      2A      10       52.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      33      12       63.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     107      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Oct 26 23:12:07 2014

                  _recordModeFlag 007D                 DecodeGPS@latitude 003C                       _SSPSTATbits 0214  
            __size_of_WriteBuffer 0017                       __CFG_LVP$ON 0000                               l263 078F  
                             l337 02DF                               _GIE 005F                               _RA6 0066  
                             u925 05AD                               u945 05B7                               u955 05C1  
                             u965 05C9                               u895 056E                               u995 0670  
                             _end 0079                               _isr 0004                DecodeGPS@messageID 0032  
                             wreg 0009                DecodeGPS@longitude 0044                   DisableGPS@F4903 0136  
                            l1503 066D                              l1505 0679                              l1513 068E  
                            l1601 0390                              l1509 0685                              l1461 059E  
                            l1615 03A3                              l1607 039F                              l1535 0520  
                            l1527 0512                              l1625 063F                              l1481 05B6  
                            l1617 02E8                              l1457 0599                              l1545 052A  
                            l1491 05D1                              l1619 03E3                              l1459 0564  
                            l1547 054D                              l1629 0649                              l1813 0124  
                            l1573 031F                              l1557 030A                              l1823 0177  
                            l1815 0133                              l1487 05C8                              l1479 05AA  
                            l1559 030C                              l1817 013B                              l1809 0115  
                            l1593 0371                              l1577 033B                              l1827 0187  
                            l1579 0355                              l1923 04BA                              l1837 0195  
                            l1589 036B                              l1773 0414                              l1933 04D6  
                            l1871 02A2                              l1855 023B                              l1847 01F8  
                            l1839 01DE                              l1783 0452                              l1919 04A9  
                            l1881 02C2                              l1849 01FF                              l1859 024B  
                            l1869 0259                              l1879 02BC                              _ADIE 048E  
                            _ADIF 008E                              ?_isr 0070                              STR_1 060A  
                            STR_2 061D                              STR_3 062F                              u1015 067F  
                            u1025 0686                              u1220 03F3                              u1205 0651  
                            u1045 0500                              u1135 0386                              u1250 0711  
                            u1315 0131                              u1075 053A                              u1235 0412  
                            u1260 00E8                              u1245 0450                              u1270 00F6  
                            u1280 0104                              u1195 064A                              u1295 0113  
                            u1637 04A2                              u1647 04B0                              u1657 06EE  
                            u1667 06FD                              u1677 041B                              u1687 0459  
                            _PEIE 005E                              _RCIE 048D                              _OERR 0CE9  
                            _main 047A                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              ltemp 007E  
                            start 00A6                              ttemp 007E                              wtemp 007E  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 073C  
                 __end_of_InitCLK 079F                   __end_of_InitSPI 0765                ??_compute_checksum 0022  
                           ??_isr 0072                     ?_InitWatchdog 0070                             ?_main 0066  
                           _LATC2 0872                             _IOCBF 0396                   __end_of___lwdiv 05D8  
                           i1l105 00A1                   __end_of___lwmod 0695                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
             ___lmul@multiplicand 0024                   __end_of_dpowers 060A               DecodeGPS@northSouth 0039  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 03E8            uart_write_message@data 0034  
          uart_write_message@size 0028                   __initialization 00A8                        _InitTimer1 0774  
                    __end_of_main 04ED                __size_of_DecodeGPS 0205                  __end_of_InitGPIO 06E4  
                  ??_InitWatchdog 0020  uart_write_message@ascii_checksum 0035                            ??_main 006A  
                  __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 047A                            _ADRESH 009C  
                          i1l1941 0010                            i1l1951 002A                            i1l1953 002B  
                          i1l1963 003C                            i1l1949 0029                            i1l1895 074E  
                          i1l1975 0078                            i1l1969 0064                            i1l1977 007A  
                          i1l1987 0092                            u155_25 005B                            _TMR1IE 0488  
                          _TMR1IF 0088                            _SPBRGH 019C                            _SPBRGL 019B  
                          _SSPBUF 0211                         ??_InitADC 0020                         ??_InitCLK 0020  
                       ??_InitSPI 0020                            ___lmul 0636                  __end_of_initUART 0774  
                       ??___lwdiv 0024                         ??___lwmod 002C                            _buffer 01A0  
     __size_of_uart_write_message 0072                __size_of_UpdateGPS 001D                 __end_of_DecodeGPS 02E2  
                       ??_sprintf 0034                    _gpsInvalidFlag 006F           __end_of__initialization 00D9  
                     ?_InitTimer1 0070                    __pcstackCOMMON 0070                      __pidataBANK0 07B2  
                    __pidataBANK1 0783                      __pidataBANK2 0695              __end_of_InitWatchdog 07A6  
                      __pbssBANK0 006E                        __pbssBANK1 00A0                        __pbssBANK3 01A0  
                       ?_InitGPIO 0070                   SetupGPS@message 0044                 __end_of_UpdateGPS 0723  
                      __pmaintext 047A                         ?_SetupGPS 0070                           ?___lmul 0020  
                   ??_WriteBuffer 0070                        __pintentry 0004         UpdateGPS@GPSupdateMessage 0038  
                  ___lmul@product 0028                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_InitTimer1 000F                        ??_InitGPIO 0020                         ?_initUART 0070  
                         _InitADC 0723                           _InitCLK 0797                           _InitSPI 0753  
                      _gpsMessage 00A0           __size_of_ToggleSleepGPS 0022                       SetupGPS@MID 0060  
                      ??_SetupGPS 0041                   __size_of___lmul 0030                           ___lwdiv 05A1  
                         ___lwmod 0666                           _isr$400 0077                           __ptext1 0765  
                         __ptext2 0706                           __ptext3 06E4                           __ptext4 03E8  
                         __ptext5 04ED                           __ptext6 078D                           __ptext7 055F  
                         __ptext8 02E2                           __ptext9 0666                         _T1CONbits 0018  
                         _dpowers 0600               __end_of_WriteBuffer 0753                      __size_of_isr 00A2  
                       _IOCBFbits 0396                         _IOCBNbits 0395                         _IOCBPbits 0394  
                         _sprintf 02E2                           clrloop0 07A7              end_of_initialization 00D9  
                      ??_initUART 0020                           init_ram 07AC                           initloop 07AD  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0797                         _RCSTAbits 019D  
                    __pstringtext 0600                         _PORTBbits 000D                  __CFG_FOSC$INTOSC 0000  
           __size_of_InitWatchdog 0007                         _TRISAbits 008C                         _TRISBbits 008D  
                       _TRISCbits 008E                   DecodeGPS@status 003B              uart_xmit@mydata_byte 0020  
                       _DecodeGPS 00DD                         _TXSTAbits 019E                      ??_InitTimer1 0020  
                     _WriteBuffer 073C                    __end_of___lmul 0666        __end_of_uart_write_message 055F  
                    _InitWatchdog 079F                     SetupGPS@F4906 00E2                     SetupGPS@F4908 00E8  
             start_initialization 00A8                  _compute_checksum 055F                       __end_of_isr 00A6  
               compute_checksum@x 0026                __end_of_InitTimer1 0783                        ?_DecodeGPS 0070  
                  _ToggleSleepGPS 06E4                 __size_of_InitGPIO 0025                         SetupGPS@x 0064  
            compute_checksum@data 0025              compute_checksum@size 0020                          ??___lmul 0028  
                     __pdataBANK0 006F                       __pdataBANK1 00E2                       __pdataBANK2 0120  
               __size_of_SetupGPS 0092                         _UpdateGPS 0706          compute_checksum@checksum 0024  
                     __pbssCOMMON 0079                         ___latbits 0001                     __pcstackBANK0 0020  
             __end_of__stringdata 0636               uart_write_message@x 0031            __end_of_ToggleSleepGPS 0706  
                 _messageDoneFlag 006E                       sprintf@_val 003C                       sprintf@flag 0038  
                     sprintf@prec 0039                          ?_InitADC 0070                          ?_InitCLK 0070  
                        ?_InitSPI 0070                 __size_of_initUART 000F                         __pnvBANK0 006D  
                ___lwdiv@dividend 0022                          ?___lwdiv 0020                          ?___lwmod 0028  
                      ?_UpdateGPS 0070                    UpdateGPS@F4913 0120                  __CFG_WDTE$SWDTEN 0000  
                ___lwdiv@quotient 0025                          ?_sprintf 002E        uart_write_message@checksum 0033  
                 ?_ToggleSleepGPS 0070                       ??_DecodeGPS 002C                          _LATBbits 010D  
                       clear_ram0 07A6                          _PIE1bits 0091                    DecodeGPS@F4915 0143  
                  DecodeGPS@F4917 00D2                    DecodeGPS@F4919 00DA                          _PIR1bits 0011  
                       _uart_xmit 078D                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 060A                        _ADCON2bits 009F                 ___lmul@multiplier 0020  
                        _InitGPIO 06BF                  __size_of_InitADC 0019                  __size_of_InitCLK 0008  
                __size_of_InitSPI 0012          __end_of_compute_checksum 05A1             SetupGPS@startSequence 005A  
                        _SetupGPS 03E8                        ?_uart_xmit 0070                      ?_WriteBuffer 0070  
                     ??_UpdateGPS 0037                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
         _uart_write_message$1094 002D           _uart_write_message$1095 002F                        _ANSELAbits 018C  
                      _ANSELBbits 018D                   ___lwdiv@divisor 0020                   ___lwdiv@counter 0027  
                        __ptext10 05A1                          __ptext11 079F                          __ptext20 073C  
                        __ptext12 0774                          __ptext13 0753                        _T1GCONbits 0019  
                        __ptext14 06BF                          __ptext15 0797                          __ptext16 0723  
                        __ptext17 00DD                          __ptext18 0636                _uart_write_message 04ED  
                __size_of_sprintf 0106                          _gpsIndex 006D                          _initUART 0765  
                   __size_of_main 0073               ?_uart_write_message 0028                        DecodeGPS@x 004C  
                        main@argc 0066                          main@argv 0068              ??_uart_write_message 002A  
                      _INTCONbits 000B                       pic14e$flags 007E                          intlevel1 0000  
                       sprintf@ap 003A                         sprintf@sp 003B                  ___lwmod@dividend 002A  
               __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099                       ??_uart_xmit 0020  
                        sprintf@c 0040                          sprintf@f 002E                   ___lwmod@divisor 0028  
                 ___lwmod@counter 002D                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                 DecodeGPS@eastWest 003A  
