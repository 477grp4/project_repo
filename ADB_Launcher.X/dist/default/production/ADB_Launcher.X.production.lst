

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 19:48:33 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0094                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  011F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0197                     	;# 
   125  0199                     	;# 
   126  0199                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019A                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019D                     	;# 
   140  019D                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019E                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  020E                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  028E                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  030C                     	;# 
   181  030D                     	;# 
   182  030E                     	;# 
   183  038C                     	;# 
   184  038D                     	;# 
   185  038E                     	;# 
   186  0390                     	;# 
   187  0391                     	;# 
   188  0392                     	;# 
   189  0393                     	;# 
   190  0394                     	;# 
   191  0395                     	;# 
   192  0396                     	;# 
   193  0397                     	;# 
   194  0398                     	;# 
   195  0399                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0511                     	;# 
   200  0513                     	;# 
   201  051A                     	;# 
   202  0811                     	;# 
   203  0812                     	;# 
   204  0813                     	;# 
   205  0814                     	;# 
   206  0815                     	;# 
   207  0816                     	;# 
   208  0817                     	;# 
   209  0818                     	;# 
   210  0819                     	;# 
   211  081A                     	;# 
   212  081B                     	;# 
   213  081C                     	;# 
   214  081D                     	;# 
   215  081E                     	;# 
   216  081F                     	;# 
   217  0820                     	;# 
   218  0821                     	;# 
   219  0821                     	;# 
   220  0822                     	;# 
   221  0823                     	;# 
   222  0823                     	;# 
   223  0824                     	;# 
   224  0825                     	;# 
   225  0825                     	;# 
   226  0826                     	;# 
   227  0827                     	;# 
   228  0827                     	;# 
   229  0828                     	;# 
   230  0829                     	;# 
   231  082A                     	;# 
   232  082B                     	;# 
   233  082C                     	;# 
   234  082D                     	;# 
   235  082E                     	;# 
   236  082F                     	;# 
   237  0831                     	;# 
   238  0832                     	;# 
   239  0833                     	;# 
   240  0834                     	;# 
   241  0835                     	;# 
   242  0836                     	;# 
   243  0837                     	;# 
   244  0838                     	;# 
   245  0839                     	;# 
   246  083A                     	;# 
   247  083B                     	;# 
   248  083C                     	;# 
   249  083D                     	;# 
   250  083E                     	;# 
   251  083F                     	;# 
   252  0840                     	;# 
   253  0841                     	;# 
   254  0841                     	;# 
   255  0842                     	;# 
   256  0843                     	;# 
   257  0843                     	;# 
   258  0844                     	;# 
   259  0845                     	;# 
   260  0845                     	;# 
   261  0846                     	;# 
   262  0847                     	;# 
   263  0847                     	;# 
   264  0848                     	;# 
   265  0849                     	;# 
   266  084A                     	;# 
   267  084B                     	;# 
   268  084C                     	;# 
   269  084D                     	;# 
   270  084E                     	;# 
   271  084F                     	;# 
   272  0FE4                     	;# 
   273  0FE5                     	;# 
   274  0FE6                     	;# 
   275  0FE7                     	;# 
   276  0FE8                     	;# 
   277  0FE9                     	;# 
   278  0FEA                     	;# 
   279  0FEB                     	;# 
   280  0FED                     	;# 
   281  0FEE                     	;# 
   282  0FEF                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0094                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  0111                     	;# 
   334  0112                     	;# 
   335  0113                     	;# 
   336  0114                     	;# 
   337  0115                     	;# 
   338  0116                     	;# 
   339  0117                     	;# 
   340  0118                     	;# 
   341  0119                     	;# 
   342  011D                     	;# 
   343  011D                     	;# 
   344  011E                     	;# 
   345  011F                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348  0191                     	;# 
   349  0191                     	;# 
   350  0192                     	;# 
   351  0193                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  0199                     	;# 
   360  019A                     	;# 
   361  019A                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019C                     	;# 
   371  019D                     	;# 
   372  019D                     	;# 
   373  019D                     	;# 
   374  019E                     	;# 
   375  019E                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  020C                     	;# 
   383  020D                     	;# 
   384  020E                     	;# 
   385  0210                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0216                     	;# 
   398  0216                     	;# 
   399  0217                     	;# 
   400  0217                     	;# 
   401  028C                     	;# 
   402  028D                     	;# 
   403  028E                     	;# 
   404  0291                     	;# 
   405  0291                     	;# 
   406  0292                     	;# 
   407  0293                     	;# 
   408  0298                     	;# 
   409  0298                     	;# 
   410  0299                     	;# 
   411  029A                     	;# 
   412  030C                     	;# 
   413  030D                     	;# 
   414  030E                     	;# 
   415  038C                     	;# 
   416  038D                     	;# 
   417  038E                     	;# 
   418  0390                     	;# 
   419  0391                     	;# 
   420  0392                     	;# 
   421  0393                     	;# 
   422  0394                     	;# 
   423  0395                     	;# 
   424  0396                     	;# 
   425  0397                     	;# 
   426  0398                     	;# 
   427  0399                     	;# 
   428  039D                     	;# 
   429  039E                     	;# 
   430  039F                     	;# 
   431  0511                     	;# 
   432  0513                     	;# 
   433  051A                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  0815                     	;# 
   439  0816                     	;# 
   440  0817                     	;# 
   441  0818                     	;# 
   442  0819                     	;# 
   443  081A                     	;# 
   444  081B                     	;# 
   445  081C                     	;# 
   446  081D                     	;# 
   447  081E                     	;# 
   448  081F                     	;# 
   449  0820                     	;# 
   450  0821                     	;# 
   451  0821                     	;# 
   452  0822                     	;# 
   453  0823                     	;# 
   454  0823                     	;# 
   455  0824                     	;# 
   456  0825                     	;# 
   457  0825                     	;# 
   458  0826                     	;# 
   459  0827                     	;# 
   460  0827                     	;# 
   461  0828                     	;# 
   462  0829                     	;# 
   463  082A                     	;# 
   464  082B                     	;# 
   465  082C                     	;# 
   466  082D                     	;# 
   467  082E                     	;# 
   468  082F                     	;# 
   469  0831                     	;# 
   470  0832                     	;# 
   471  0833                     	;# 
   472  0834                     	;# 
   473  0835                     	;# 
   474  0836                     	;# 
   475  0837                     	;# 
   476  0838                     	;# 
   477  0839                     	;# 
   478  083A                     	;# 
   479  083B                     	;# 
   480  083C                     	;# 
   481  083D                     	;# 
   482  083E                     	;# 
   483  083F                     	;# 
   484  0840                     	;# 
   485  0841                     	;# 
   486  0841                     	;# 
   487  0842                     	;# 
   488  0843                     	;# 
   489  0843                     	;# 
   490  0844                     	;# 
   491  0845                     	;# 
   492  0845                     	;# 
   493  0846                     	;# 
   494  0847                     	;# 
   495  0847                     	;# 
   496  0848                     	;# 
   497  0849                     	;# 
   498  084A                     	;# 
   499  084B                     	;# 
   500  084C                     	;# 
   501  084D                     	;# 
   502  084E                     	;# 
   503  084F                     	;# 
   504  0FE4                     	;# 
   505  0FE5                     	;# 
   506  0FE6                     	;# 
   507  0FE7                     	;# 
   508  0FE8                     	;# 
   509  0FE9                     	;# 
   510  0FEA                     	;# 
   511  0FEB                     	;# 
   512  0FED                     	;# 
   513  0FEE                     	;# 
   514  0FEF                     	;# 
   515  0000                     	;# 
   516  0001                     	;# 
   517  0002                     	;# 
   518  0003                     	;# 
   519  0004                     	;# 
   520  0005                     	;# 
   521  0006                     	;# 
   522  0007                     	;# 
   523  0008                     	;# 
   524  0009                     	;# 
   525  000A                     	;# 
   526  000B                     	;# 
   527  000C                     	;# 
   528  000D                     	;# 
   529  000E                     	;# 
   530  0010                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0014                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  0090                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0094                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  0111                     	;# 
   566  0112                     	;# 
   567  0113                     	;# 
   568  0114                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011D                     	;# 
   575  011D                     	;# 
   576  011E                     	;# 
   577  011F                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  0210                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  028C                     	;# 
   634  028D                     	;# 
   635  028E                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  030C                     	;# 
   645  030D                     	;# 
   646  030E                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  0390                     	;# 
   651  0391                     	;# 
   652  0392                     	;# 
   653  0393                     	;# 
   654  0394                     	;# 
   655  0395                     	;# 
   656  0396                     	;# 
   657  0397                     	;# 
   658  0398                     	;# 
   659  0399                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0511                     	;# 
   664  0513                     	;# 
   665  051A                     	;# 
   666  0811                     	;# 
   667  0812                     	;# 
   668  0813                     	;# 
   669  0814                     	;# 
   670  0815                     	;# 
   671  0816                     	;# 
   672  0817                     	;# 
   673  0818                     	;# 
   674  0819                     	;# 
   675  081A                     	;# 
   676  081B                     	;# 
   677  081C                     	;# 
   678  081D                     	;# 
   679  081E                     	;# 
   680  081F                     	;# 
   681  0820                     	;# 
   682  0821                     	;# 
   683  0821                     	;# 
   684  0822                     	;# 
   685  0823                     	;# 
   686  0823                     	;# 
   687  0824                     	;# 
   688  0825                     	;# 
   689  0825                     	;# 
   690  0826                     	;# 
   691  0827                     	;# 
   692  0827                     	;# 
   693  0828                     	;# 
   694  0829                     	;# 
   695  082A                     	;# 
   696  082B                     	;# 
   697  082C                     	;# 
   698  082D                     	;# 
   699  082E                     	;# 
   700  082F                     	;# 
   701  0831                     	;# 
   702  0832                     	;# 
   703  0833                     	;# 
   704  0834                     	;# 
   705  0835                     	;# 
   706  0836                     	;# 
   707  0837                     	;# 
   708  0838                     	;# 
   709  0839                     	;# 
   710  083A                     	;# 
   711  083B                     	;# 
   712  083C                     	;# 
   713  083D                     	;# 
   714  083E                     	;# 
   715  083F                     	;# 
   716  0840                     	;# 
   717  0841                     	;# 
   718  0841                     	;# 
   719  0842                     	;# 
   720  0843                     	;# 
   721  0843                     	;# 
   722  0844                     	;# 
   723  0845                     	;# 
   724  0845                     	;# 
   725  0846                     	;# 
   726  0847                     	;# 
   727  0847                     	;# 
   728  0848                     	;# 
   729  0849                     	;# 
   730  084A                     	;# 
   731  084B                     	;# 
   732  084C                     	;# 
   733  084D                     	;# 
   734  084E                     	;# 
   735  084F                     	;# 
   736  0FE4                     	;# 
   737  0FE5                     	;# 
   738  0FE6                     	;# 
   739  0FE7                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEB                     	;# 
   744  0FED                     	;# 
   745  0FEE                     	;# 
   746  0FEF                     	;# 
   747                           
   748                           	psect	idataBANK1
   749  0E59                     __pidataBANK1:	
   750                           
   751                           ;initializer for DisableGPS@F4914
   752  0E59  3424               	retlw	36
   753  0E5A  3450               	retlw	80
   754  0E5B  3453               	retlw	83
   755  0E5C  3452               	retlw	82
   756  0E5D  3446               	retlw	70
   757  0E5E  3431               	retlw	49
   758  0E5F  3431               	retlw	49
   759  0E60  3437               	retlw	55
   760  0E61  342C               	retlw	44
   761  0E62  3431               	retlw	49
   762  0E63  3436               	retlw	54
   763  0E64  342A               	retlw	42
   764  0E65  3400               	retlw	0
   765                           
   766                           ;initializer for DecodeGPS@F4926
   767  0E66  3424               	retlw	36
   768  0E67  3447               	retlw	71
   769  0E68  3450               	retlw	80
   770  0E69  3447               	retlw	71
   771  0E6A  344C               	retlw	76
   772  0E6B  344C               	retlw	76
   773  0E6C  3400               	retlw	0
   774                           
   775                           ;initializer for SetupGPS@F4917
   776  0E6D  3424               	retlw	36
   777  0E6E  3450               	retlw	80
   778  0E6F  3453               	retlw	83
   779  0E70  3452               	retlw	82
   780  0E71  3446               	retlw	70
   781  0E72  3400               	retlw	0
   782                           
   783                           ;initializer for SetupGPS@F4919
   784  0E73  3431               	retlw	49
   785  0E74  3430               	retlw	48
   786  0E75  3433               	retlw	51
   787  0E76  3400               	retlw	0
   788                           
   789                           ;initializer for _gpsInvalidFlag
   790  0E77  3401               	retlw	1
   791                           
   792                           ;initializer for _validEastWest
   793  0E78  3445               	retlw	69
   794                           
   795                           ;initializer for _validNorthSouth
   796  0E79  344E               	retlw	78
   797                           
   798                           	psect	idataBANK2
   799  0DBE                     __pidataBANK2:	
   800                           
   801                           ;initializer for UpdateGPS@F4924
   802  0DBE  3424               	retlw	36
   803  0DBF  3450               	retlw	80
   804  0DC0  3453               	retlw	83
   805  0DC1  3452               	retlw	82
   806  0DC2  3446               	retlw	70
   807  0DC3  3431               	retlw	49
   808  0DC4  3430               	retlw	48
   809  0DC5  3433               	retlw	51
   810  0DC6  342C               	retlw	44
   811  0DC7  3430               	retlw	48
   812  0DC8  3431               	retlw	49
   813  0DC9  342C               	retlw	44
   814  0DCA  3430               	retlw	48
   815  0DCB  3431               	retlw	49
   816  0DCC  342C               	retlw	44
   817  0DCD  3430               	retlw	48
   818  0DCE  3430               	retlw	48
   819  0DCF  342C               	retlw	44
   820  0DD0  3430               	retlw	48
   821  0DD1  3430               	retlw	48
   822  0DD2  342A               	retlw	42
   823  0DD3  3400               	retlw	0
   824                           
   825                           	psect	stringtext
   826  0800                     __pstringtext:	
   827  0800                     _dpowers:	
   828  0800  3401               	retlw	1
   829  0801  3400               	retlw	0
   830  0802  340A               	retlw	10
   831  0803  3400               	retlw	0
   832  0804  3464               	retlw	100
   833  0805  3400               	retlw	0
   834  0806  34E8               	retlw	232
   835  0807  3403               	retlw	3
   836  0808  3410               	retlw	16
   837  0809  3427               	retlw	39
   838  080A                     __end_of_dpowers:	
   839  080A                     __stringdata:	
   840  080A                     STR_1:	
   841  080A  3425               	retlw	37	;'%'
   842  080B  3473               	retlw	115	;'s'
   843  080C  3425               	retlw	37	;'%'
   844  080D  3473               	retlw	115	;'s'
   845  080E  342C               	retlw	44	;','
   846  080F  3430               	retlw	48	;'0'
   847  0810  3425               	retlw	37	;'%'
   848  0811  3464               	retlw	100	;'d'
   849  0812  342C               	retlw	44	;','
   850  0813  3430               	retlw	48	;'0'
   851  0814  3430               	retlw	48	;'0'
   852  0815  342C               	retlw	44	;','
   853  0816  3430               	retlw	48	;'0'
   854  0817  3430               	retlw	48	;'0'
   855  0818  342C               	retlw	44	;','
   856  0819  3430               	retlw	48	;'0'
   857  081A  3430               	retlw	48	;'0'
   858  081B  342A               	retlw	42	;'*'
   859  081C  3400               	retlw	0
   860  081D                     STR_2:	
   861  081D  3425               	retlw	37	;'%'
   862  081E  3473               	retlw	115	;'s'
   863  081F  3425               	retlw	37	;'%'
   864  0820  3473               	retlw	115	;'s'
   865  0821  342C               	retlw	44	;','
   866  0822  3430               	retlw	48	;'0'
   867  0823  3431               	retlw	49	;'1'
   868  0824  342C               	retlw	44	;','
   869  0825  3430               	retlw	48	;'0'
   870  0826  3431               	retlw	49	;'1'
   871  0827  342C               	retlw	44	;','
   872  0828  3430               	retlw	48	;'0'
   873  0829  3431               	retlw	49	;'1'
   874  082A  342C               	retlw	44	;','
   875  082B  3430               	retlw	48	;'0'
   876  082C  3430               	retlw	48	;'0'
   877  082D  342A               	retlw	42	;'*'
   878  082E  3400               	retlw	0
   879  082F                     STR_3:	
   880  082F  3428               	retlw	40	;'('
   881  0830  346E               	retlw	110	;'n'
   882  0831  3475               	retlw	117	;'u'
   883  0832  346C               	retlw	108	;'l'
   884  0833  346C               	retlw	108	;'l'
   885  0834  3429               	retlw	41	;')'
   886  0835  3400               	retlw	0
   887  0836                     __end_of__stringdata:	
   888                           
   889                           ; #config settings
   890  0000                     
   891                           	psect	nvBANK1
   892  00E3                     __pnvBANK1:	
   893  00E3                     _gpsIndex:	
   894  00E3                     	ds	1
   895  000B                     _INTCONbits	set	11
   896  0011                     _PIR1bits	set	17
   897  000C                     _PORTAbits	set	12
   898  000D                     _PORTBbits	set	13
   899  000E                     _PORTCbits	set	14
   900  0018                     _T1CONbits	set	24
   901  0019                     _T1GCONbits	set	25
   902  0017                     _TMR1H	set	23
   903  0016                     _TMR1L	set	22
   904  008E                     _ADIF	set	142
   905  005F                     _GIE	set	95
   906  005E                     _PEIE	set	94
   907  0088                     _TMR1IF	set	136
   908  00C0                     _TMR1ON	set	192
   909  009D                     _ADCON0bits	set	157
   910  009E                     _ADCON1bits	set	158
   911  009F                     _ADCON2bits	set	159
   912  009C                     _ADRESH	set	156
   913  0099                     _OSCCONbits	set	153
   914  0091                     _PIE1bits	set	145
   915  008C                     _TRISAbits	set	140
   916  008D                     _TRISBbits	set	141
   917  008E                     _TRISCbits	set	142
   918  0097                     _WDTCONbits	set	151
   919  048E                     _ADIE	set	1166
   920  048D                     _RCIE	set	1165
   921  0488                     _TMR1IE	set	1160
   922  010D                     _LATBbits	set	269
   923  0872                     _LATC2	set	2162
   924  018C                     _ANSELAbits	set	396
   925  018D                     _ANSELBbits	set	397
   926  0199                     _RCREG	set	409
   927  019D                     _RCSTAbits	set	413
   928  019C                     _SPBRGH	set	412
   929  019B                     _SPBRGL	set	411
   930  019A                     _TXREG	set	410
   931  019E                     _TXSTAbits	set	414
   932  0CE9                     _OERR	set	3305
   933  0211                     _SSPBUF	set	529
   934  0215                     _SSPCON1bits	set	533
   935  0214                     _SSPSTATbits	set	532
   936  0393                     _IOCAF	set	915
   937  0393                     _IOCAFbits	set	915
   938  0392                     _IOCANbits	set	914
   939  0391                     _IOCAPbits	set	913
   940  0396                     _IOCBF	set	918
   941  0396                     _IOCBFbits	set	918
   942  0395                     _IOCBNbits	set	917
   943  0394                     _IOCBPbits	set	916
   944                           
   945                           	psect	cinit
   946  00CF                     start_initialization:	
   947  00CF                     __initialization:	
   948                           
   949                           ; Clear objects allocated to COMMON
   950  00CF  01F9               	clrf	__pbssCOMMON& (0+127)
   951  00D0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   952  00D1  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   953  00D2  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   954  00D3  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   955                           
   956                           ; Clear objects allocated to BANK1
   957  00D4  30C1               	movlw	low __pbssBANK1
   958  00D5  0084               	movwf	4
   959  00D6  3000               	movlw	high __pbssBANK1
   960  00D7  0085               	movwf	5
   961  00D8  301E               	movlw	30
   962  00D9  318D  2539  3180   	fcall	clear_ram0
   963                           
   964                           ; Clear objects allocated to BANK2
   965  00DC  3020               	movlw	low __pbssBANK2
   966  00DD  0084               	movwf	4
   967  00DE  3001               	movlw	high __pbssBANK2
   968  00DF  0085               	movwf	5
   969  00E0  3032               	movlw	50
   970  00E1  318D  2539  3180   	fcall	clear_ram0
   971                           
   972                           ; Clear objects allocated to BANK3
   973  00E4  30A0               	movlw	low __pbssBANK3
   974  00E5  0084               	movwf	4
   975  00E6  3001               	movlw	high __pbssBANK3
   976  00E7  0085               	movwf	5
   977  00E8  3033               	movlw	51
   978  00E9  318D  2539  3180   	fcall	clear_ram0
   979                           
   980                           ; Initialize objects allocated to BANK1
   981  00EC  3059               	movlw	low __pidataBANK1
   982  00ED  0084               	movwf	4
   983  00EE  308E               	movlw	(high __pidataBANK1)| (0+128)
   984  00EF  0085               	movwf	5
   985  00F0  30A0               	movlw	low __pdataBANK1
   986  00F1  0086               	movwf	6
   987  00F2  3000               	movlw	high __pdataBANK1
   988  00F3  0087               	movwf	7
   989  00F4  3021               	movlw	33
   990  00F5  318D  2533  3180   	fcall	init_ram
   991                           
   992                           ; Initialize objects allocated to BANK2
   993  00F8  30BE               	movlw	low __pidataBANK2
   994  00F9  0084               	movwf	4
   995  00FA  308D               	movlw	(high __pidataBANK2)| (0+128)
   996  00FB  0085               	movwf	5
   997  00FC  3052               	movlw	low __pdataBANK2
   998  00FD  0086               	movwf	6
   999  00FE  3001               	movlw	high __pdataBANK2
  1000  00FF  0087               	movwf	7
  1001  0100  3016               	movlw	22
  1002  0101  318D  2533         	fcall	init_ram
  1003  0103                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006  0103                     __end_of__initialization:	
  1007  0103  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1008  0104  0020               	movlb	0
  1009  0105  3186  2E3D         	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bssCOMMON
  1012  0079                     __pbssCOMMON:	
  1013  0079                     _end:	
  1014  0079                     	ds	2
  1015  007B                     _start:	
  1016  007B                     	ds	2
  1017  007D                     _messageDoneFlag:	
  1018  007D                     	ds	1
  1019                           
  1020                           	psect	bssBANK1
  1021  00C1                     __pbssBANK1:	
  1022  00C1                     DecodeGPS@F4928:	
  1023  00C1                     	ds	6
  1024  00C7                     DecodeGPS@F4930:	
  1025  00C7                     	ds	6
  1026  00CD                     _validLatitude:	
  1027  00CD                     	ds	6
  1028  00D3                     _validLongitude:	
  1029  00D3                     	ds	6
  1030  00D9                     _recordEndAdress:	
  1031  00D9                     	ds	4
  1032  00DD                     _recordFlag:	
  1033  00DD                     	ds	1
  1034  00DE                     _strobeFlag:	
  1035  00DE                     	ds	1
  1036                           
  1037                           	psect	dataBANK1
  1038  00A0                     __pdataBANK1:	
  1039  00A0                     DisableGPS@F4914:	
  1040  00A0                     	ds	13
  1041  00AD                     DecodeGPS@F4926:	
  1042  00AD                     	ds	7
  1043  00B4                     SetupGPS@F4917:	
  1044  00B4                     	ds	6
  1045  00BA                     SetupGPS@F4919:	
  1046  00BA                     	ds	4
  1047  00BE                     _gpsInvalidFlag:	
  1048  00BE                     	ds	1
  1049  00BF                     _validEastWest:	
  1050  00BF                     	ds	1
  1051  00C0                     _validNorthSouth:	
  1052  00C0                     	ds	1
  1053                           
  1054                           	psect	bssBANK2
  1055  0120                     __pbssBANK2:	
  1056  0120                     _gpsMessage:	
  1057  0120                     	ds	50
  1058                           
  1059                           	psect	dataBANK2
  1060  0152                     __pdataBANK2:	
  1061  0152                     UpdateGPS@F4924:	
  1062  0152                     	ds	22
  1063                           
  1064                           	psect	bssBANK3
  1065  01A0                     __pbssBANK3:	
  1066  01A0                     _buffer:	
  1067  01A0                     	ds	51
  1068                           
  1069                           	psect	clrtext
  1070  0D39                     clear_ram0:	
  1071                           ;	Called with FSR0 containing the base address, and
  1072                           ;	WREG with the size to clear
  1073                           
  1074  0D39  0064               	clrwdt	;clear the watchdog before getting into this loop
  1075  0D3A                     clrloop0:	
  1076  0D3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1077  0D3B  3101               	addfsr 0,1
  1078  0D3C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1079  0D3D  2D3A               	goto	clrloop0	;have we reached the end yet?
  1080  0D3E  3400               	retlw	0	;all done for this memory range, return
  1081                           
  1082                           	psect	inittext
  1083  0D33                     init_ram:	
  1084  0D33  00FE               	movwf	126
  1085  0D34                     initloop:	
  1086  0D34  0012               	moviw fsr0++
  1087  0D35  001E               	movwi fsr1++
  1088  0D36  0BFE               	decfsz	126,f
  1089  0D37  2D34               	goto	initloop
  1090  0D38  3400               	retlw	0
  1091                           
  1092                           	psect	cstackBANK1
  1093  00DF                     __pcstackBANK1:	
  1094  00DF                     ??_main:	
  1095                           
  1096                           ; 0 bytes @ 0x0
  1097  00DF                     	ds	3
  1098  00E2                     main@periodicCounter:	
  1099                           
  1100                           ; 1 bytes @ 0x3
  1101  00E2                     	ds	1
  1102                           
  1103                           	psect	cstackCOMMON
  1104  0070                     __pcstackCOMMON:	
  1105  0070                     ?_InitCLK:	
  1106  0070                     ?_InitGPIO:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_InitADC:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_InitSPI:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_InitTimer1:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_InitWatchdog:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_initUART:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?_ToggleSleepGPS:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_SetupGPS:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?_RecordMode:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_UpdateGPS:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ?_GoToSleep:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ?_Hibernate:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_WriteBuffer:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ??_WriteBuffer:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ?_DecodeGPS:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_isr:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ?_WriteSPI:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ?_uart_xmit:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ?_ReadSPI:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_ReadStatusSPI:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_ReadBuffer:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 1 bytes @ 0x0
  1171  0070                     	ds	1
  1172  0071                     WriteBuffer@data:	
  1173                           
  1174                           ; 1 bytes @ 0x1
  1175  0071                     	ds	1
  1176  0072                     ??_isr:	
  1177                           
  1178                           ; 0 bytes @ 0x2
  1179  0072                     	ds	5
  1180  0077                     _isr$570:	
  1181                           
  1182                           ; 2 bytes @ 0x7
  1183  0077                     	ds	2
  1184                           
  1185                           	psect	cstackBANK0
  1186  0020                     __pcstackBANK0:	
  1187  0020                     ??_InitCLK:	
  1188  0020                     ??_InitGPIO:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  0020                     ??_InitADC:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  0020                     ??_InitSPI:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  0020                     ??_InitTimer1:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  0020                     ??_InitWatchdog:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0020                     ??_initUART:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0020                     ??_ToggleSleepGPS:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0020                     ??_GoToSleep:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0020                     ??_WriteSPI:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0020                     ??_ReadSPI:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0020                     ??_ReadBuffer:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0020                     ??_uart_xmit:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0020                     ?_compute_checksum:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0020                     ?___wmul:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0020                     uart_xmit@mydata_byte:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233  0020                     compute_checksum@size:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0020                     ___wmul@multiplier:	
  1237                           ; 2 bytes @ 0x0
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241  0020                     	ds	1
  1242  0021                     ReadSPI@dataByte:	
  1243  0021                     ReadBuffer@read_data:	
  1244                           ; 1 bytes @ 0x1
  1245                           
  1246  0021                     GoToSleep@count:	
  1247                           ; 1 bytes @ 0x1
  1248                           
  1249                           
  1250                           ; 1 bytes @ 0x1
  1251  0021                     	ds	1
  1252  0022                     ??_compute_checksum:	
  1253  0022                     WriteSPI@temp:	
  1254                           ; 0 bytes @ 0x2
  1255                           
  1256  0022                     ___wmul@multiplicand:	
  1257                           ; 2 bytes @ 0x2
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x2
  1261  0022                     	ds	1
  1262  0023                     ??_Hibernate:	
  1263                           
  1264                           ; 0 bytes @ 0x3
  1265  0023                     	ds	1
  1266  0024                     ??___wmul:	
  1267  0024                     WriteSPI@databyte:	
  1268                           ; 0 bytes @ 0x4
  1269                           
  1270  0024                     compute_checksum@checksum:	
  1271                           ; 1 bytes @ 0x4
  1272                           
  1273  0024                     Hibernate@count:	
  1274                           ; 1 bytes @ 0x4
  1275                           
  1276  0024                     ___wmul@product:	
  1277                           ; 1 bytes @ 0x4
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x4
  1281  0024                     	ds	1
  1282  0025                     ??_ReadStatusSPI:	
  1283  0025                     compute_checksum@data:	
  1284                           ; 0 bytes @ 0x5
  1285                           
  1286                           
  1287                           ; 1 bytes @ 0x5
  1288  0025                     	ds	1
  1289  0026                     ?___lwdiv:	
  1290  0026                     ReadStatusSPI@dataRead:	
  1291                           ; 2 bytes @ 0x6
  1292                           
  1293  0026                     compute_checksum@x:	
  1294                           ; 1 bytes @ 0x6
  1295                           
  1296  0026                     ___lwdiv@divisor:	
  1297                           ; 2 bytes @ 0x6
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0x6
  1301  0026                     	ds	1
  1302  0027                     ?_WriteOverheadSPI:	
  1303  0027                     WriteOverheadSPI@address:	
  1304                           ; 0 bytes @ 0x7
  1305                           
  1306                           
  1307                           ; 4 bytes @ 0x7
  1308  0027                     	ds	1
  1309  0028                     ?_uart_write_message:	
  1310  0028                     uart_write_message@size:	
  1311                           ; 0 bytes @ 0x8
  1312                           
  1313  0028                     ___lwdiv@dividend:	
  1314                           ; 2 bytes @ 0x8
  1315                           
  1316                           
  1317                           ; 2 bytes @ 0x8
  1318  0028                     	ds	2
  1319  002A                     ??_uart_write_message:	
  1320  002A                     ??___lwdiv:	
  1321                           ; 0 bytes @ 0xA
  1322                           
  1323                           
  1324                           ; 0 bytes @ 0xA
  1325  002A                     	ds	1
  1326  002B                     ??_WriteOverheadSPI:	
  1327  002B                     ___lwdiv@quotient:	
  1328                           ; 0 bytes @ 0xB
  1329                           
  1330                           
  1331                           ; 2 bytes @ 0xB
  1332  002B                     	ds	2
  1333  002D                     ___lwdiv@counter:	
  1334  002D                     _uart_write_message$1353:	
  1335                           ; 1 bytes @ 0xD
  1336                           
  1337                           
  1338                           ; 2 bytes @ 0xD
  1339  002D                     	ds	1
  1340  002E                     ??_DecodeGPS:	
  1341  002E                     ?___lwmod:	
  1342                           ; 0 bytes @ 0xE
  1343                           
  1344  002E                     ___lwmod@divisor:	
  1345                           ; 2 bytes @ 0xE
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0xE
  1349  002E                     	ds	1
  1350  002F                     _uart_write_message$1354:	
  1351                           
  1352                           ; 2 bytes @ 0xF
  1353  002F                     	ds	1
  1354  0030                     ___lwmod@dividend:	
  1355  0030                     DecodeGPS@messageID:	
  1356                           ; 2 bytes @ 0x10
  1357                           
  1358                           
  1359                           ; 7 bytes @ 0x10
  1360  0030                     	ds	1
  1361  0031                     uart_write_message@x:	
  1362  0031                     WriteOverheadSPI@address_bytes:	
  1363                           ; 2 bytes @ 0x11
  1364                           
  1365                           
  1366                           ; 3 bytes @ 0x11
  1367  0031                     	ds	1
  1368  0032                     ??___lwmod:	
  1369                           
  1370                           ; 0 bytes @ 0x12
  1371  0032                     	ds	1
  1372  0033                     uart_write_message@checksum:	
  1373  0033                     ___lwmod@counter:	
  1374                           ; 1 bytes @ 0x13
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x13
  1378  0033                     	ds	1
  1379  0034                     ?_sprintf:	
  1380  0034                     WriteOverheadSPI@StatusReg:	
  1381                           ; 2 bytes @ 0x14
  1382                           
  1383  0034                     uart_write_message@data:	
  1384                           ; 1 bytes @ 0x14
  1385                           
  1386  0034                     sprintf@f:	
  1387                           ; 1 bytes @ 0x14
  1388                           
  1389                           
  1390                           ; 2 bytes @ 0x14
  1391  0034                     	ds	1
  1392  0035                     ??_RecordMode:	
  1393  0035                     uart_write_message@ascii_checksum:	
  1394                           ; 0 bytes @ 0x15
  1395                           
  1396                           
  1397                           ; 2 bytes @ 0x15
  1398  0035                     	ds	2
  1399  0037                     DecodeGPS@northSouth:	
  1400                           
  1401                           ; 1 bytes @ 0x17
  1402  0037                     	ds	1
  1403  0038                     DecodeGPS@eastWest:	
  1404                           
  1405                           ; 1 bytes @ 0x18
  1406  0038                     	ds	1
  1407  0039                     DecodeGPS@status:	
  1408                           
  1409                           ; 1 bytes @ 0x19
  1410  0039                     	ds	1
  1411  003A                     ??_sprintf:	
  1412  003A                     RecordMode@count:	
  1413                           ; 0 bytes @ 0x1A
  1414                           
  1415  003A                     DecodeGPS@latitude:	
  1416                           ; 2 bytes @ 0x1A
  1417                           
  1418                           
  1419                           ; 6 bytes @ 0x1A
  1420  003A                     	ds	2
  1421  003C                     RecordMode@address:	
  1422                           
  1423                           ; 4 bytes @ 0x1C
  1424  003C                     	ds	2
  1425  003E                     sprintf@flag:	
  1426                           
  1427                           ; 1 bytes @ 0x1E
  1428  003E                     	ds	1
  1429  003F                     sprintf@prec:	
  1430                           
  1431                           ; 1 bytes @ 0x1F
  1432  003F                     	ds	1
  1433  0040                     sprintf@ap:	
  1434  0040                     RecordMode@x:	
  1435                           ; 1 bytes @ 0x20
  1436                           
  1437  0040                     DecodeGPS@longitude:	
  1438                           ; 2 bytes @ 0x20
  1439                           
  1440                           
  1441                           ; 6 bytes @ 0x20
  1442  0040                     	ds	1
  1443  0041                     sprintf@sp:	
  1444                           
  1445                           ; 1 bytes @ 0x21
  1446  0041                     	ds	1
  1447  0042                     sprintf@_val:	
  1448                           
  1449                           ; 4 bytes @ 0x22
  1450  0042                     	ds	4
  1451  0046                     sprintf@c:	
  1452  0046                     DecodeGPS@x:	
  1453                           ; 1 bytes @ 0x26
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x26
  1457  0046                     	ds	1
  1458  0047                     ??_SetupGPS:	
  1459                           
  1460                           ; 0 bytes @ 0x27
  1461  0047                     	ds	1
  1462  0048                     ??_UpdateGPS:	
  1463                           
  1464                           ; 0 bytes @ 0x28
  1465  0048                     	ds	1
  1466  0049                     UpdateGPS@GPSupdateMessage:	
  1467                           
  1468                           ; 22 bytes @ 0x29
  1469  0049                     	ds	1
  1470  004A                     SetupGPS@message:	
  1471                           
  1472                           ; 22 bytes @ 0x2A
  1473  004A                     	ds	22
  1474  0060                     SetupGPS@startSequence:	
  1475                           
  1476                           ; 6 bytes @ 0x40
  1477  0060                     	ds	6
  1478  0066                     SetupGPS@MID:	
  1479                           
  1480                           ; 4 bytes @ 0x46
  1481  0066                     	ds	4
  1482  006A                     SetupGPS@x:	
  1483                           
  1484                           ; 2 bytes @ 0x4A
  1485  006A                     	ds	2
  1486  006C                     ?_main:	
  1487  006C                     main@argc:	
  1488                           ; 2 bytes @ 0x4C
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0x4C
  1492  006C                     	ds	2
  1493  006E                     main@argv:	
  1494                           
  1495                           ; 2 bytes @ 0x4E
  1496  006E                     	ds	2
  1497                           
  1498                           	psect	maintext
  1499  063D                     __pmaintext:	
  1500 ;;
  1501 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1502 ;;
  1503 ;; *************** function _main *****************
  1504 ;; Defined at:
  1505 ;;		line 20 in file "launcher_main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  argc            2   76[BANK0 ] int 
  1508 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  periodicCoun    1    3[BANK1 ] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2   76[BANK0 ] int 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 17F/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1520 ;;      Params:         0       4       0       0       0       0       0       0
  1521 ;;      Locals:         0       0       1       0       0       0       0       0
  1522 ;;      Temps:          0       0       3       0       0       0       0       0
  1523 ;;      Totals:         0       4       4       0       0       0       0       0
  1524 ;;Total ram usage:        8 bytes
  1525 ;; Hardware stack levels required when called:    6
  1526 ;; This function calls:
  1527 ;;		_GoToSleep
  1528 ;;		_Hibernate
  1529 ;;		_InitADC
  1530 ;;		_InitCLK
  1531 ;;		_InitGPIO
  1532 ;;		_InitSPI
  1533 ;;		_InitTimer1
  1534 ;;		_InitWatchdog
  1535 ;;		_RecordMode
  1536 ;;		_SetupGPS
  1537 ;;		_ToggleSleepGPS
  1538 ;;		_UpdateGPS
  1539 ;;		_initUART
  1540 ;; This function is called by:
  1541 ;;		Startup code after reset
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _main
  1547  063D                     _main:	
  1548                           
  1549                           ;launcher_main.c: 23: InitCLK();
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1553  063D  318D  2546  3186   	fcall	_InitCLK
  1554                           
  1555                           ;launcher_main.c: 24: InitGPIO();
  1556  0640  318E  26CB  3186   	fcall	_InitGPIO
  1557                           
  1558                           ;launcher_main.c: 25: InitADC();
  1559  0643  318E  2603  3186   	fcall	_InitADC
  1560                           
  1561                           ;launcher_main.c: 26: InitSPI();
  1562  0646  318D  2599  3186   	fcall	_InitSPI
  1563                           
  1564                           ;launcher_main.c: 27: InitTimer1();
  1565  0649  318D  2558  3186   	fcall	_InitTimer1
  1566                           
  1567                           ;launcher_main.c: 28: InitWatchdog();
  1568  064C  318D  253F  3186   	fcall	_InitWatchdog
  1569                           
  1570                           ;launcher_main.c: 29: initUART();
  1571  064F  318D  2567  3186   	fcall	_initUART
  1572                           
  1573                           ;launcher_main.c: 31: unsigned char periodicCounter = 10;
  1574  0652  300A               	movlw	10
  1575  0653  0021               	movlb	1	; select bank1
  1576  0654  00DF               	movwf	??_main^(0+128)
  1577  0655  085F               	movf	??_main^(0+128),w
  1578  0656  00E2               	movwf	main@periodicCounter^(0+128)
  1579                           
  1580                           ;launcher_main.c: 32: gpsIndex = 1;
  1581  0657  3001               	movlw	1
  1582  0658  00DF               	movwf	??_main^(0+128)
  1583  0659  085F               	movf	??_main^(0+128),w
  1584  065A  00E3               	movwf	_gpsIndex^(0+128)	;volatile
  1585                           
  1586                           ;launcher_main.c: 34: INTCONbits.GIE = 1;
  1587  065B  178B               	bsf	11,7	;volatile
  1588                           
  1589                           ;launcher_main.c: 36: if(!PORTCbits.RC7)
  1590  065C  0020               	movlb	0	; select bank0
  1591  065D  1B8E               	btfsc	14,7	;volatile
  1592  065E  2E62               	goto	l2385
  1593                           
  1594                           ;launcher_main.c: 37: ToggleSleepGPS();
  1595  065F  318E  269E  3186   	fcall	_ToggleSleepGPS
  1596  0662                     l2385:	
  1597                           
  1598                           ;launcher_main.c: 38: SetupGPS();
  1599  0662  3186  26EA  3186   	fcall	_SetupGPS
  1600  0665                     l2387:	
  1601                           ;launcher_main.c: 40: while(1){
  1602                           
  1603                           
  1604                           ;launcher_main.c: 43: if(PORTAbits.RA1)
  1605  0665  0020               	movlb	0	; select bank0
  1606  0666  1C8C               	btfss	12,1	;volatile
  1607  0667  2E78               	goto	l107
  1608                           
  1609                           ;launcher_main.c: 44: {
  1610                           ;launcher_main.c: 46: PORTBbits.RB0 = 1;
  1611  0668  140D               	bsf	13,0	;volatile
  1612                           
  1613                           ;launcher_main.c: 47: _delay((unsigned long)((100)*(16000000/4000.0)));
  1614  0669  3003               	movlw	3
  1615  066A  0021               	movlb	1	; select bank1
  1616  066B  00E1               	movwf	(??_main^(0+128)+2)
  1617  066C  3008               	movlw	8
  1618  066D  00E0               	movwf	(??_main^(0+128)+1)
  1619  066E  3078               	movlw	120
  1620  066F  00DF               	movwf	??_main^(0+128)
  1621  0670                     u2197:	
  1622  0670  0BDF               	decfsz	??_main^(0+128),f
  1623  0671  2E70               	goto	u2197
  1624  0672  0BE0               	decfsz	(??_main^(0+128)+1),f
  1625  0673  2E70               	goto	u2197
  1626  0674  0BE1               	decfsz	(??_main^(0+128)+2),f
  1627  0675  2E70               	goto	u2197
  1628                           
  1629                           ;launcher_main.c: 48: PORTBbits.RB0 = 0;
  1630  0676  0020               	movlb	0	; select bank0
  1631  0677  100D               	bcf	13,0	;volatile
  1632  0678                     l107:	
  1633                           
  1634                           ;launcher_main.c: 49: }
  1635                           ;launcher_main.c: 51: if(recordFlag)
  1636  0678  0021               	movlb	1	; select bank1
  1637  0679  085D               	movf	_recordFlag^(0+128),w
  1638  067A  1903               	btfsc	3,2
  1639  067B  2E80               	goto	l2397
  1640                           
  1641                           ;launcher_main.c: 52: {
  1642                           ;launcher_main.c: 53: RecordMode();
  1643  067C  3183  23CA  3186   	fcall	_RecordMode
  1644  067F  0021               	movlb	1	; select bank1
  1645  0680                     l2397:	
  1646                           
  1647                           ;launcher_main.c: 54: }
  1648                           ;launcher_main.c: 57: UpdateGPS();
  1649  0680  318E  267A  3186   	fcall	_UpdateGPS
  1650                           
  1651                           ;launcher_main.c: 59: if(gpsInvalidFlag)
  1652  0683  0021               	movlb	1	; select bank1
  1653  0684  083E               	movf	_gpsInvalidFlag^(0+128),w
  1654  0685  1903               	btfsc	3,2
  1655  0686  2EAD               	goto	l2407
  1656                           
  1657                           ;launcher_main.c: 60: {
  1658                           ;launcher_main.c: 61: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1659  0687  0022               	movlb	2	; select bank2
  1660  0688  080D               	movf	13,w	;volatile
  1661  0689  39FF               	andlw	255
  1662  068A  3820               	iorlw	32
  1663  068B  0021               	movlb	1	; select bank1
  1664  068C  00DF               	movwf	??_main^(0+128)
  1665  068D  0020               	movlb	0	; select bank0
  1666  068E  080D               	movf	13,w	;volatile
  1667  068F  0021               	movlb	1	; select bank1
  1668  0690  065F               	xorwf	??_main^(0+128),w
  1669  0691  3900               	andlw	-256
  1670  0692  065F               	xorwf	??_main^(0+128),w
  1671  0693  0020               	movlb	0	; select bank0
  1672  0694  008D               	movwf	13	;volatile
  1673                           
  1674                           ;launcher_main.c: 62: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1675  0695  0022               	movlb	2	; select bank2
  1676  0696  080D               	movf	13,w	;volatile
  1677  0697  39FF               	andlw	255
  1678  0698  39EF               	andlw	239
  1679  0699  0021               	movlb	1	; select bank1
  1680  069A  00DF               	movwf	??_main^(0+128)
  1681  069B  0020               	movlb	0	; select bank0
  1682  069C  080D               	movf	13,w	;volatile
  1683  069D  0021               	movlb	1	; select bank1
  1684  069E  065F               	xorwf	??_main^(0+128),w
  1685  069F  3900               	andlw	-256
  1686  06A0  065F               	xorwf	??_main^(0+128),w
  1687  06A1  0020               	movlb	0	; select bank0
  1688  06A2  008D               	movwf	13	;volatile
  1689                           
  1690                           ;launcher_main.c: 63: if(periodicCounter < 14)
  1691  06A3  300E               	movlw	14
  1692  06A4  0021               	movlb	1	; select bank1
  1693  06A5  0262               	subwf	main@periodicCounter^(0+128),w
  1694  06A6  1803               	skipnc
  1695  06A7  2ED1               	goto	l2413
  1696                           
  1697                           ;launcher_main.c: 64: periodicCounter++;
  1698  06A8  3001               	movlw	1
  1699  06A9  00DF               	movwf	??_main^(0+128)
  1700  06AA  085F               	movf	??_main^(0+128),w
  1701  06AB  07E2               	addwf	main@periodicCounter^(0+128),f
  1702                           
  1703                           ;launcher_main.c: 65: }
  1704  06AC  2ED1               	goto	l2413
  1705  06AD                     l2407:	
  1706                           
  1707                           ;launcher_main.c: 66: else
  1708                           ;launcher_main.c: 67: {
  1709                           ;launcher_main.c: 68: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1710  06AD  0022               	movlb	2	; select bank2
  1711  06AE  080D               	movf	13,w	;volatile
  1712  06AF  39FF               	andlw	255
  1713  06B0  3810               	iorlw	16
  1714  06B1  0021               	movlb	1	; select bank1
  1715  06B2  00DF               	movwf	??_main^(0+128)
  1716  06B3  0020               	movlb	0	; select bank0
  1717  06B4  080D               	movf	13,w	;volatile
  1718  06B5  0021               	movlb	1	; select bank1
  1719  06B6  065F               	xorwf	??_main^(0+128),w
  1720  06B7  3900               	andlw	-256
  1721  06B8  065F               	xorwf	??_main^(0+128),w
  1722  06B9  0020               	movlb	0	; select bank0
  1723  06BA  008D               	movwf	13	;volatile
  1724                           
  1725                           ;launcher_main.c: 69: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1726  06BB  0022               	movlb	2	; select bank2
  1727  06BC  080D               	movf	13,w	;volatile
  1728  06BD  39FF               	andlw	255
  1729  06BE  39DF               	andlw	223
  1730  06BF  0021               	movlb	1	; select bank1
  1731  06C0  00DF               	movwf	??_main^(0+128)
  1732  06C1  0020               	movlb	0	; select bank0
  1733  06C2  080D               	movf	13,w	;volatile
  1734  06C3  0021               	movlb	1	; select bank1
  1735  06C4  065F               	xorwf	??_main^(0+128),w
  1736  06C5  3900               	andlw	-256
  1737  06C6  065F               	xorwf	??_main^(0+128),w
  1738  06C7  0020               	movlb	0	; select bank0
  1739  06C8  008D               	movwf	13	;volatile
  1740                           
  1741                           ;launcher_main.c: 70: periodicCounter = 10;
  1742  06C9  300A               	movlw	10
  1743  06CA  0021               	movlb	1	; select bank1
  1744  06CB  00DF               	movwf	??_main^(0+128)
  1745  06CC  085F               	movf	??_main^(0+128),w
  1746  06CD  00E2               	movwf	main@periodicCounter^(0+128)
  1747                           
  1748                           ;launcher_main.c: 71: ToggleSleepGPS();
  1749  06CE  318E  269E  3186   	fcall	_ToggleSleepGPS
  1750  06D1                     l2413:	
  1751                           
  1752                           ;launcher_main.c: 72: }
  1753                           ;launcher_main.c: 74: if(!recordFlag)
  1754  06D1  0021               	movlb	1	; select bank1
  1755  06D2  08DD               	movf	_recordFlag^(0+128),f
  1756  06D3  1D03               	skipz
  1757  06D4  2E65               	goto	l2387
  1758                           
  1759                           ;launcher_main.c: 75: {
  1760                           ;launcher_main.c: 76: if(strobeFlag)
  1761  06D5  085E               	movf	_strobeFlag^(0+128),w
  1762  06D6  1903               	btfsc	3,2
  1763  06D7  2EDD               	goto	l2419
  1764                           
  1765                           ;launcher_main.c: 77: GoToSleep(10);
  1766  06D8  300A               	movlw	10
  1767  06D9  318D  2587  3186   	fcall	_GoToSleep
  1768  06DC  2E65               	goto	l2387
  1769  06DD                     l2419:	
  1770                           
  1771                           ;launcher_main.c: 78: else if(gpsInvalidFlag)
  1772  06DD  0021               	movlb	1	; select bank1
  1773  06DE  083E               	movf	_gpsInvalidFlag^(0+128),w
  1774  06DF  1903               	btfsc	3,2
  1775  06E0  2EE6               	goto	l2423
  1776                           
  1777                           ;launcher_main.c: 79: GoToSleep(periodicCounter);
  1778  06E1  0862               	movf	main@periodicCounter^(0+128),w
  1779  06E2  318D  2587  3186   	fcall	_GoToSleep
  1780  06E5  2E65               	goto	l2387
  1781  06E6                     l2423:	
  1782                           
  1783                           ;launcher_main.c: 80: else
  1784                           ;launcher_main.c: 81: Hibernate();
  1785  06E6  318E  263A  3186   	fcall	_Hibernate
  1786  06E9  2E65               	goto	l2387
  1787  06EA                     __end_of_main:	
  1788                           ;launcher_main.c: 82: }
  1789                           ;launcher_main.c: 83: }
  1790                           ;launcher_main.c: 85: return (0);
  1791                           ;	Return value of _main is never used
  1792                           
  1793                           
  1794                           	psect	text1
  1795  0D67                     __ptext1:	
  1796 ;; *************** function _initUART *****************
  1797 ;; Defined at:
  1798 ;;		line 253 in file "launcher_functions.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;		None               void
  1805 ;; Registers used:
  1806 ;;		wreg, status,2
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1812 ;;      Params:         0       0       0       0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    2
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _initUART
  1828  0D67                     _initUART:	
  1829                           
  1830                           ;launcher_functions.c: 256: TRISCbits.TRISC6 = 0;
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _initUART: [wreg+status,2]
  1834  0D67  0021               	movlb	1	; select bank1
  1835  0D68  130E               	bcf	14,6	;volatile
  1836                           
  1837                           ;launcher_functions.c: 257: TRISCbits.TRISC7 = 1;
  1838  0D69  178E               	bsf	14,7	;volatile
  1839                           
  1840                           ;launcher_functions.c: 258: TXSTAbits.BRGH = 0;
  1841  0D6A  0023               	movlb	3	; select bank3
  1842  0D6B  111E               	bcf	30,2	;volatile
  1843                           
  1844                           ;launcher_functions.c: 260: SPBRGH = 0;
  1845  0D6C  019C               	clrf	28	;volatile
  1846                           
  1847                           ;launcher_functions.c: 261: SPBRGL = 51;
  1848  0D6D  3033               	movlw	51
  1849  0D6E  009B               	movwf	27	;volatile
  1850                           
  1851                           ;launcher_functions.c: 262: TXSTAbits.TX9 = 0;
  1852  0D6F  131E               	bcf	30,6	;volatile
  1853                           
  1854                           ;launcher_functions.c: 263: TXSTAbits.SYNC = 0;
  1855  0D70  121E               	bcf	30,4	;volatile
  1856                           
  1857                           ;launcher_functions.c: 264: TXSTAbits.TXEN = 1;
  1858  0D71  169E               	bsf	30,5	;volatile
  1859                           
  1860                           ;launcher_functions.c: 266: RCSTAbits.SPEN = 1;
  1861  0D72  179D               	bsf	29,7	;volatile
  1862                           
  1863                           ;launcher_functions.c: 267: RCSTAbits.RX9 = 0;
  1864  0D73  131D               	bcf	29,6	;volatile
  1865                           
  1866                           ;launcher_functions.c: 268: RCSTAbits.CREN = 1;
  1867  0D74  161D               	bsf	29,4	;volatile
  1868  0D75  0008               	return
  1869  0D76                     __end_of_initUART:	
  1870                           
  1871                           	psect	text2
  1872  0E7A                     __ptext2:	
  1873 ;; *************** function _UpdateGPS *****************
  1874 ;; Defined at:
  1875 ;;		line 357 in file "launcher_functions.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  GPSupdateMes   22   41[BANK0 ] unsigned char [22]
  1880 ;; Return value:  Size  Location     Type
  1881 ;;		None               void
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1889 ;;      Params:         0       0       0       0       0       0       0       0
  1890 ;;      Locals:         0      22       0       0       0       0       0       0
  1891 ;;      Temps:          0       1       0       0       0       0       0       0
  1892 ;;      Totals:         0      23       0       0       0       0       0       0
  1893 ;;Total ram usage:       23 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    4
  1896 ;; This function calls:
  1897 ;;		_DecodeGPS
  1898 ;;		_uart_write_message
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _UpdateGPS
  1906  0E7A                     _UpdateGPS:	
  1907                           
  1908                           ;launcher_functions.c: 359: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,00,00*"
      +                          ;
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1912  0E7A  3052               	movlw	low UpdateGPS@F4924
  1913  0E7B  0086               	movwf	6
  1914  0E7C  3001               	movlw	high UpdateGPS@F4924
  1915  0E7D  0087               	movwf	7
  1916  0E7E  3049               	movlw	low UpdateGPS@GPSupdateMessage
  1917  0E7F  0084               	movwf	4
  1918  0E80  3000               	movlw	high UpdateGPS@GPSupdateMessage
  1919  0E81  0085               	movwf	5
  1920  0E82  3016               	movlw	22
  1921  0E83  0020               	movlb	0	; select bank0
  1922  0E84  00C8               	movwf	??_UpdateGPS
  1923  0E85                     u1840:	
  1924  0E85  0016               	moviw fsr1++
  1925  0E86  001A               	movwi fsr0++
  1926  0E87  0BC8               	decfsz	??_UpdateGPS,f
  1927  0E88  2E85               	goto	u1840
  1928                           
  1929                           ;launcher_functions.c: 362: RCIE = 1;
  1930  0E89  0021               	movlb	1	; select bank1
  1931  0E8A  1691               	bsf	17,5	;volatile
  1932                           
  1933                           ;launcher_functions.c: 363: PEIE = 1;
  1934  0E8B  170B               	bsf	11,6	;volatile
  1935                           
  1936                           ;launcher_functions.c: 364: GIE = 1;
  1937  0E8C  178B               	bsf	11,7	;volatile
  1938                           
  1939                           ;launcher_functions.c: 366: gpsIndex = 0;
  1940  0E8D  01E3               	clrf	_gpsIndex^(0+128)	;volatile
  1941                           
  1942                           ;launcher_functions.c: 367: uart_write_message(GPSupdateMessage, 22);
  1943  0E8E  3016               	movlw	22
  1944  0E8F  0020               	movlb	0	; select bank0
  1945  0E90  00A8               	movwf	uart_write_message@size
  1946  0E91  3000               	movlw	0
  1947  0E92  00A9               	movwf	uart_write_message@size+1
  1948  0E93  3049               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  1949  0E94  3187  277C  318E   	fcall	_uart_write_message
  1950  0E97                     l2329:	
  1951                           ;launcher_functions.c: 368: while(!messageDoneFlag);
  1952                           
  1953  0E97  087D               	movf	_messageDoneFlag,w
  1954  0E98  1903               	btfsc	3,2
  1955  0E99  2E97               	goto	l2329
  1956                           
  1957                           ;launcher_functions.c: 370: messageDoneFlag = 0;
  1958  0E9A  01FD               	clrf	_messageDoneFlag
  1959                           
  1960                           ;launcher_functions.c: 371: DecodeGPS();
  1961  0E9B  3181  2107         	fcall	_DecodeGPS
  1962  0E9D  0008               	return
  1963  0E9E                     __end_of_UpdateGPS:	
  1964                           
  1965                           	psect	text3
  1966  0107                     __ptext3:	
  1967 ;; *************** function _DecodeGPS *****************
  1968 ;; Defined at:
  1969 ;;		line 377 in file "launcher_functions.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  messageID       7   16[BANK0 ] unsigned char [7]
  1974 ;;  longitude       6   32[BANK0 ] unsigned int [3]
  1975 ;;  latitude        6   26[BANK0 ] unsigned int [3]
  1976 ;;  x               2   38[BANK0 ] int 
  1977 ;;  status          1   25[BANK0 ] unsigned char 
  1978 ;;  eastWest        1   24[BANK0 ] unsigned char 
  1979 ;;  northSouth      1   23[BANK0 ] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1989 ;;      Params:         0       0       0       0       0       0       0       0
  1990 ;;      Locals:         0      24       0       0       0       0       0       0
  1991 ;;      Temps:          0       2       0       0       0       0       0       0
  1992 ;;      Totals:         0      26       0       0       0       0       0       0
  1993 ;;Total ram usage:       26 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    3
  1996 ;; This function calls:
  1997 ;;		___lwdiv
  1998 ;;		___wmul
  1999 ;; This function is called by:
  2000 ;;		_UpdateGPS
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _DecodeGPS
  2006  0107                     _DecodeGPS:	
  2007                           
  2008                           ;launcher_functions.c: 380: unsigned char messageID[7] = "$GPGLL";
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2012  0107  30AD               	movlw	low DecodeGPS@F4926
  2013  0108  0086               	movwf	6
  2014  0109  3000               	movlw	high DecodeGPS@F4926
  2015  010A  0087               	movwf	7
  2016  010B  3030               	movlw	low DecodeGPS@messageID
  2017  010C  0084               	movwf	4
  2018  010D  3000               	movlw	high DecodeGPS@messageID
  2019  010E  0085               	movwf	5
  2020  010F  3007               	movlw	7
  2021  0110  0020               	movlb	0	; select bank0
  2022  0111  00AE               	movwf	??_DecodeGPS
  2023  0112                     u1540:	
  2024  0112  0016               	moviw fsr1++
  2025  0113  001A               	movwi fsr0++
  2026  0114  0BAE               	decfsz	??_DecodeGPS,f
  2027  0115  2912               	goto	u1540
  2028                           
  2029                           ;launcher_functions.c: 381: unsigned int latitude[3] = {0,0,0};
  2030  0116  30C1               	movlw	low DecodeGPS@F4928
  2031  0117  0086               	movwf	6
  2032  0118  3000               	movlw	high DecodeGPS@F4928
  2033  0119  0087               	movwf	7
  2034  011A  303A               	movlw	low DecodeGPS@latitude
  2035  011B  0084               	movwf	4
  2036  011C  3000               	movlw	high DecodeGPS@latitude
  2037  011D  0085               	movwf	5
  2038  011E  3006               	movlw	6
  2039  011F  00AE               	movwf	??_DecodeGPS
  2040  0120                     u1550:	
  2041  0120  0016               	moviw fsr1++
  2042  0121  001A               	movwi fsr0++
  2043  0122  0BAE               	decfsz	??_DecodeGPS,f
  2044  0123  2920               	goto	u1550
  2045                           
  2046                           ;launcher_functions.c: 382: unsigned int longitude[3] = {0,0,0};
  2047  0124  30C7               	movlw	low DecodeGPS@F4930
  2048  0125  0086               	movwf	6
  2049  0126  3000               	movlw	high DecodeGPS@F4930
  2050  0127  0087               	movwf	7
  2051  0128  3040               	movlw	low DecodeGPS@longitude
  2052  0129  0084               	movwf	4
  2053  012A  3000               	movlw	high DecodeGPS@longitude
  2054  012B  0085               	movwf	5
  2055  012C  3006               	movlw	6
  2056  012D  00AE               	movwf	??_DecodeGPS
  2057  012E                     u1560:	
  2058  012E  0016               	moviw fsr1++
  2059  012F  001A               	movwi fsr0++
  2060  0130  0BAE               	decfsz	??_DecodeGPS,f
  2061  0131  292E               	goto	u1560
  2062                           
  2063                           ;launcher_functions.c: 383: unsigned char northSouth;
  2064                           ;launcher_functions.c: 384: unsigned char eastWest;
  2065                           ;launcher_functions.c: 385: unsigned char status;
  2066                           ;launcher_functions.c: 386: int x;
  2067                           ;launcher_functions.c: 388: for(x=0;x<6;x++)
  2068  0132  01C6               	clrf	DecodeGPS@x
  2069  0133  01C7               	clrf	DecodeGPS@x+1
  2070  0134  0847               	movf	DecodeGPS@x+1,w
  2071  0135  3A80               	xorlw	128
  2072  0136  00AE               	movwf	??_DecodeGPS
  2073  0137  3080               	movlw	128
  2074  0138  022E               	subwf	??_DecodeGPS,w
  2075  0139  1D03               	skipz
  2076  013A  293D               	goto	u1575
  2077  013B  3006               	movlw	6
  2078  013C  0246               	subwf	DecodeGPS@x,w
  2079  013D                     u1575:	
  2080  013D  1803               	btfsc	3,0
  2081  013E  2960               	goto	l1977
  2082  013F                     l1971:	
  2083                           
  2084                           ;launcher_functions.c: 389: {
  2085                           ;launcher_functions.c: 390: if(gpsMessage[x] != messageID[x])
  2086  013F  0020               	movlb	0	; select bank0
  2087  0140  0846               	movf	DecodeGPS@x,w
  2088  0141  3E30               	addlw	DecodeGPS@messageID& (0+255)
  2089  0142  0086               	movwf	6
  2090  0143  0187               	clrf	7
  2091  0144  0846               	movf	DecodeGPS@x,w
  2092  0145  3E20               	addlw	_gpsMessage& (0+255)
  2093  0146  0084               	movwf	4
  2094  0147  3001               	movlw	1	; select bank2/3
  2095  0148  0085               	movwf	5
  2096  0149  0800               	movf	0,w
  2097  014A  0601               	xorwf	1,w
  2098  014B  1903               	skipnz
  2099  014C  2950               	goto	l1975
  2100                           
  2101                           ;launcher_functions.c: 391: gpsInvalidFlag = 1;
  2102  014D  0021               	movlb	1	; select bank1
  2103  014E  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2104  014F  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2105  0150                     l1975:	
  2106  0150  3001               	movlw	1
  2107  0151  0020               	movlb	0	; select bank0
  2108  0152  07C6               	addwf	DecodeGPS@x,f
  2109  0153  3000               	movlw	0
  2110  0154  3DC7               	addwfc	DecodeGPS@x+1,f
  2111  0155  0847               	movf	DecodeGPS@x+1,w
  2112  0156  3A80               	xorlw	128
  2113  0157  00AE               	movwf	??_DecodeGPS
  2114  0158  3080               	movlw	128
  2115  0159  022E               	subwf	??_DecodeGPS,w
  2116  015A  1D03               	skipz
  2117  015B  295E               	goto	u1595
  2118  015C  3006               	movlw	6
  2119  015D  0246               	subwf	DecodeGPS@x,w
  2120  015E                     u1595:	
  2121  015E  1C03               	skipc
  2122  015F  293F               	goto	l1971
  2123  0160                     l1977:	
  2124                           
  2125                           ;launcher_functions.c: 392: }
  2126                           ;launcher_functions.c: 395: x = x + 1;
  2127  0160  0020               	movlb	0	; select bank0
  2128  0161  0846               	movf	DecodeGPS@x,w
  2129  0162  3E01               	addlw	1
  2130  0163  00C6               	movwf	DecodeGPS@x
  2131  0164  3000               	movlw	0
  2132  0165  3D47               	addwfc	DecodeGPS@x+1,w
  2133  0166  00C7               	movwf	DecodeGPS@x+1
  2134                           
  2135                           ;launcher_functions.c: 398: if(gpsMessage[x]!= ',')
  2136  0167  0846               	movf	DecodeGPS@x,w
  2137  0168  3E20               	addlw	_gpsMessage& (0+255)
  2138  0169  0086               	movwf	6
  2139  016A  3001               	movlw	1	; select bank2/3
  2140  016B  0087               	movwf	7
  2141  016C  0801               	movf	1,w
  2142  016D  3A2C               	xorlw	44
  2143  016E  1903               	skipnz
  2144  016F  2A34               	goto	l2009
  2145                           
  2146                           ;launcher_functions.c: 399: {
  2147                           ;launcher_functions.c: 401: latitude[0] = (gpsMessage[x++] - 48)*10;
  2148  0170  0846               	movf	DecodeGPS@x,w
  2149  0171  3E20               	addlw	_gpsMessage& (0+255)
  2150  0172  0086               	movwf	6
  2151  0173  3001               	movlw	1	; select bank2/3
  2152  0174  0087               	movwf	7
  2153  0175  0801               	movf	1,w
  2154  0176  3ED0               	addlw	208
  2155  0177  00A0               	movwf	___wmul@multiplier
  2156  0178  30FF               	movlw	255
  2157  0179  1803               	skipnc
  2158  017A  3000               	movlw	0
  2159  017B  00A1               	movwf	___wmul@multiplier+1
  2160  017C  300A               	movlw	10
  2161  017D  00A2               	movwf	___wmul@multiplicand
  2162  017E  3000               	movlw	0
  2163  017F  00A3               	movwf	___wmul@multiplicand+1
  2164  0180  318E  261C  3181   	fcall	___wmul
  2165  0183  0020               	movlb	0	; select bank0
  2166  0184  0821               	movf	?___wmul+1,w
  2167  0185  01BB               	clrf	DecodeGPS@latitude+1
  2168  0186  07BB               	addwf	DecodeGPS@latitude+1,f
  2169  0187  0820               	movf	?___wmul,w
  2170  0188  01BA               	clrf	DecodeGPS@latitude
  2171  0189  07BA               	addwf	DecodeGPS@latitude,f
  2172  018A  3001               	movlw	1
  2173  018B  07C6               	addwf	DecodeGPS@x,f
  2174  018C  3000               	movlw	0
  2175  018D  3DC7               	addwfc	DecodeGPS@x+1,f
  2176                           
  2177                           ;launcher_functions.c: 402: latitude[0] += (gpsMessage[x++] - 48);
  2178  018E  0846               	movf	DecodeGPS@x,w
  2179  018F  3E20               	addlw	_gpsMessage& (0+255)
  2180  0190  0086               	movwf	6
  2181  0191  3001               	movlw	1	; select bank2/3
  2182  0192  0087               	movwf	7
  2183  0193  0801               	movf	1,w
  2184  0194  3ED0               	addlw	208
  2185  0195  00AE               	movwf	??_DecodeGPS
  2186  0196  30FF               	movlw	255
  2187  0197  1803               	skipnc
  2188  0198  3000               	movlw	0
  2189  0199  00AF               	movwf	??_DecodeGPS+1
  2190  019A  082E               	movf	??_DecodeGPS,w
  2191  019B  07BA               	addwf	DecodeGPS@latitude,f
  2192  019C  082F               	movf	??_DecodeGPS+1,w
  2193  019D  3DBB               	addwfc	DecodeGPS@latitude+1,f
  2194  019E  3001               	movlw	1
  2195  019F  07C6               	addwf	DecodeGPS@x,f
  2196  01A0  3000               	movlw	0
  2197  01A1  3DC7               	addwfc	DecodeGPS@x+1,f
  2198                           
  2199                           ;launcher_functions.c: 405: latitude[1] = (gpsMessage[x++] - 48)*10;
  2200  01A2  0846               	movf	DecodeGPS@x,w
  2201  01A3  3E20               	addlw	_gpsMessage& (0+255)
  2202  01A4  0086               	movwf	6
  2203  01A5  3001               	movlw	1	; select bank2/3
  2204  01A6  0087               	movwf	7
  2205  01A7  0801               	movf	1,w
  2206  01A8  3ED0               	addlw	208
  2207  01A9  00A0               	movwf	___wmul@multiplier
  2208  01AA  30FF               	movlw	255
  2209  01AB  1803               	skipnc
  2210  01AC  3000               	movlw	0
  2211  01AD  00A1               	movwf	___wmul@multiplier+1
  2212  01AE  300A               	movlw	10
  2213  01AF  00A2               	movwf	___wmul@multiplicand
  2214  01B0  3000               	movlw	0
  2215  01B1  00A3               	movwf	___wmul@multiplicand+1
  2216  01B2  318E  261C  3181   	fcall	___wmul
  2217  01B5  0020               	movlb	0	; select bank0
  2218  01B6  0821               	movf	?___wmul+1,w
  2219  01B7  01BD               	clrf	DecodeGPS@latitude+3
  2220  01B8  07BD               	addwf	DecodeGPS@latitude+3,f
  2221  01B9  0820               	movf	?___wmul,w
  2222  01BA  01BC               	clrf	DecodeGPS@latitude+2
  2223  01BB  07BC               	addwf	DecodeGPS@latitude+2,f
  2224  01BC  3001               	movlw	1
  2225  01BD  07C6               	addwf	DecodeGPS@x,f
  2226  01BE  3000               	movlw	0
  2227  01BF  3DC7               	addwfc	DecodeGPS@x+1,f
  2228                           
  2229                           ;launcher_functions.c: 406: latitude[1] += (gpsMessage[x++] - 48);
  2230  01C0  0846               	movf	DecodeGPS@x,w
  2231  01C1  3E20               	addlw	_gpsMessage& (0+255)
  2232  01C2  0086               	movwf	6
  2233  01C3  3001               	movlw	1	; select bank2/3
  2234  01C4  0087               	movwf	7
  2235  01C5  0801               	movf	1,w
  2236  01C6  3ED0               	addlw	208
  2237  01C7  00AE               	movwf	??_DecodeGPS
  2238  01C8  30FF               	movlw	255
  2239  01C9  1803               	skipnc
  2240  01CA  3000               	movlw	0
  2241  01CB  00AF               	movwf	??_DecodeGPS+1
  2242  01CC  082E               	movf	??_DecodeGPS,w
  2243  01CD  07BC               	addwf	DecodeGPS@latitude+2,f
  2244  01CE  082F               	movf	??_DecodeGPS+1,w
  2245  01CF  3DBD               	addwfc	DecodeGPS@latitude+3,f
  2246  01D0  3001               	movlw	1
  2247  01D1  07C6               	addwf	DecodeGPS@x,f
  2248  01D2  3000               	movlw	0
  2249  01D3  3DC7               	addwfc	DecodeGPS@x+1,f
  2250                           
  2251                           ;launcher_functions.c: 409: x = x + 1;
  2252  01D4  0846               	movf	DecodeGPS@x,w
  2253  01D5  3E01               	addlw	1
  2254  01D6  00C6               	movwf	DecodeGPS@x
  2255  01D7  3000               	movlw	0
  2256  01D8  3D47               	addwfc	DecodeGPS@x+1,w
  2257  01D9  00C7               	movwf	DecodeGPS@x+1
  2258                           
  2259                           ;launcher_functions.c: 412: latitude[2] = (gpsMessage[x++] - 48)*10;
  2260  01DA  0846               	movf	DecodeGPS@x,w
  2261  01DB  3E20               	addlw	_gpsMessage& (0+255)
  2262  01DC  0086               	movwf	6
  2263  01DD  3001               	movlw	1	; select bank2/3
  2264  01DE  0087               	movwf	7
  2265  01DF  0801               	movf	1,w
  2266  01E0  3ED0               	addlw	208
  2267  01E1  00A0               	movwf	___wmul@multiplier
  2268  01E2  30FF               	movlw	255
  2269  01E3  1803               	skipnc
  2270  01E4  3000               	movlw	0
  2271  01E5  00A1               	movwf	___wmul@multiplier+1
  2272  01E6  300A               	movlw	10
  2273  01E7  00A2               	movwf	___wmul@multiplicand
  2274  01E8  3000               	movlw	0
  2275  01E9  00A3               	movwf	___wmul@multiplicand+1
  2276  01EA  318E  261C  3181   	fcall	___wmul
  2277  01ED  0020               	movlb	0	; select bank0
  2278  01EE  0821               	movf	?___wmul+1,w
  2279  01EF  01BF               	clrf	DecodeGPS@latitude+5
  2280  01F0  07BF               	addwf	DecodeGPS@latitude+5,f
  2281  01F1  0820               	movf	?___wmul,w
  2282  01F2  01BE               	clrf	DecodeGPS@latitude+4
  2283  01F3  07BE               	addwf	DecodeGPS@latitude+4,f
  2284  01F4  3001               	movlw	1
  2285  01F5  07C6               	addwf	DecodeGPS@x,f
  2286  01F6  3000               	movlw	0
  2287  01F7  3DC7               	addwfc	DecodeGPS@x+1,f
  2288                           
  2289                           ;launcher_functions.c: 413: latitude[2] += (gpsMessage[x++] - 48);
  2290  01F8  0846               	movf	DecodeGPS@x,w
  2291  01F9  3E20               	addlw	_gpsMessage& (0+255)
  2292  01FA  0086               	movwf	6
  2293  01FB  3001               	movlw	1	; select bank2/3
  2294  01FC  0087               	movwf	7
  2295  01FD  0801               	movf	1,w
  2296  01FE  3ED0               	addlw	208
  2297  01FF  00AE               	movwf	??_DecodeGPS
  2298  0200  30FF               	movlw	255
  2299  0201  1803               	skipnc
  2300  0202  3000               	movlw	0
  2301  0203  00AF               	movwf	??_DecodeGPS+1
  2302  0204  082E               	movf	??_DecodeGPS,w
  2303  0205  07BE               	addwf	DecodeGPS@latitude+4,f
  2304  0206  082F               	movf	??_DecodeGPS+1,w
  2305  0207  3DBF               	addwfc	DecodeGPS@latitude+5,f
  2306  0208  3001               	movlw	1
  2307  0209  07C6               	addwf	DecodeGPS@x,f
  2308  020A  3000               	movlw	0
  2309  020B  3DC7               	addwfc	DecodeGPS@x+1,f
  2310                           
  2311                           ;launcher_functions.c: 414: latitude[2] = (latitude[2]*60)/100;
  2312  020C  3064               	movlw	100
  2313  020D  00A6               	movwf	___lwdiv@divisor
  2314  020E  3000               	movlw	0
  2315  020F  00A7               	movwf	___lwdiv@divisor+1
  2316  0210  083F               	movf	DecodeGPS@latitude+5,w
  2317  0211  01A1               	clrf	___wmul@multiplier+1
  2318  0212  07A1               	addwf	___wmul@multiplier+1,f
  2319  0213  083E               	movf	DecodeGPS@latitude+4,w
  2320  0214  01A0               	clrf	___wmul@multiplier
  2321  0215  07A0               	addwf	___wmul@multiplier,f
  2322  0216  303C               	movlw	60
  2323  0217  00A2               	movwf	___wmul@multiplicand
  2324  0218  3000               	movlw	0
  2325  0219  00A3               	movwf	___wmul@multiplicand+1
  2326  021A  318E  261C  3181   	fcall	___wmul
  2327  021D  0020               	movlb	0	; select bank0
  2328  021E  0821               	movf	?___wmul+1,w
  2329  021F  01A9               	clrf	___lwdiv@dividend+1
  2330  0220  07A9               	addwf	___lwdiv@dividend+1,f
  2331  0221  0820               	movf	?___wmul,w
  2332  0222  01A8               	clrf	___lwdiv@dividend
  2333  0223  07A8               	addwf	___lwdiv@dividend,f
  2334  0224  318F  2727  3181   	fcall	___lwdiv
  2335  0227  0020               	movlb	0	; select bank0
  2336  0228  0827               	movf	?___lwdiv+1,w
  2337  0229  01BF               	clrf	DecodeGPS@latitude+5
  2338  022A  07BF               	addwf	DecodeGPS@latitude+5,f
  2339  022B  0826               	movf	?___lwdiv,w
  2340  022C  01BE               	clrf	DecodeGPS@latitude+4
  2341  022D  07BE               	addwf	DecodeGPS@latitude+4,f
  2342                           
  2343                           ;launcher_functions.c: 417: x = x + 2;
  2344  022E  0846               	movf	DecodeGPS@x,w
  2345  022F  3E02               	addlw	2
  2346  0230  00C6               	movwf	DecodeGPS@x
  2347  0231  3000               	movlw	0
  2348  0232  3D47               	addwfc	DecodeGPS@x+1,w
  2349  0233  00C7               	movwf	DecodeGPS@x+1
  2350  0234                     l2009:	
  2351                           
  2352                           ;launcher_functions.c: 418: }
  2353                           ;launcher_functions.c: 421: x = x + 1;
  2354  0234  0846               	movf	DecodeGPS@x,w
  2355  0235  3E01               	addlw	1
  2356  0236  00C6               	movwf	DecodeGPS@x
  2357  0237  3000               	movlw	0
  2358  0238  3D47               	addwfc	DecodeGPS@x+1,w
  2359  0239  00C7               	movwf	DecodeGPS@x+1
  2360                           
  2361                           ;launcher_functions.c: 424: if(gpsMessage[x] != ',')
  2362  023A  0846               	movf	DecodeGPS@x,w
  2363  023B  3E20               	addlw	_gpsMessage& (0+255)
  2364  023C  0086               	movwf	6
  2365  023D  3001               	movlw	1	; select bank2/3
  2366  023E  0087               	movwf	7
  2367  023F  0801               	movf	1,w
  2368  0240  3A2C               	xorlw	44
  2369  0241  1903               	skipnz
  2370  0242  2A50               	goto	l2017
  2371                           
  2372                           ;launcher_functions.c: 425: northSouth = gpsMessage[x++];
  2373  0243  0846               	movf	DecodeGPS@x,w
  2374  0244  3E20               	addlw	_gpsMessage& (0+255)
  2375  0245  0086               	movwf	6
  2376  0246  3001               	movlw	1	; select bank2/3
  2377  0247  0087               	movwf	7
  2378  0248  0801               	movf	1,w
  2379  0249  00AE               	movwf	??_DecodeGPS
  2380  024A  082E               	movf	??_DecodeGPS,w
  2381  024B  00B7               	movwf	DecodeGPS@northSouth
  2382  024C  3001               	movlw	1
  2383  024D  07C6               	addwf	DecodeGPS@x,f
  2384  024E  3000               	movlw	0
  2385  024F  3DC7               	addwfc	DecodeGPS@x+1,f
  2386  0250                     l2017:	
  2387                           
  2388                           ;launcher_functions.c: 428: x = x + 1;
  2389  0250  0846               	movf	DecodeGPS@x,w
  2390  0251  3E01               	addlw	1
  2391  0252  00C6               	movwf	DecodeGPS@x
  2392  0253  3000               	movlw	0
  2393  0254  3D47               	addwfc	DecodeGPS@x+1,w
  2394  0255  00C7               	movwf	DecodeGPS@x+1
  2395                           
  2396                           ;launcher_functions.c: 431: if(gpsMessage[x]!= ',')
  2397  0256  0846               	movf	DecodeGPS@x,w
  2398  0257  3E20               	addlw	_gpsMessage& (0+255)
  2399  0258  0086               	movwf	6
  2400  0259  3001               	movlw	1	; select bank2/3
  2401  025A  0087               	movwf	7
  2402  025B  0801               	movf	1,w
  2403  025C  3A2C               	xorlw	44
  2404  025D  1903               	skipnz
  2405  025E  2B3F               	goto	l2053
  2406                           
  2407                           ;launcher_functions.c: 432: {
  2408                           ;launcher_functions.c: 434: longitude[0] = (gpsMessage[x++] - 48)*100;
  2409  025F  0846               	movf	DecodeGPS@x,w
  2410  0260  3E20               	addlw	_gpsMessage& (0+255)
  2411  0261  0086               	movwf	6
  2412  0262  3001               	movlw	1	; select bank2/3
  2413  0263  0087               	movwf	7
  2414  0264  0801               	movf	1,w
  2415  0265  3ED0               	addlw	208
  2416  0266  00A0               	movwf	___wmul@multiplier
  2417  0267  30FF               	movlw	255
  2418  0268  1803               	skipnc
  2419  0269  3000               	movlw	0
  2420  026A  00A1               	movwf	___wmul@multiplier+1
  2421  026B  3064               	movlw	100
  2422  026C  00A2               	movwf	___wmul@multiplicand
  2423  026D  3000               	movlw	0
  2424  026E  00A3               	movwf	___wmul@multiplicand+1
  2425  026F  318E  261C  3181   	fcall	___wmul
  2426  0272  0020               	movlb	0	; select bank0
  2427  0273  0821               	movf	?___wmul+1,w
  2428  0274  01C1               	clrf	DecodeGPS@longitude+1
  2429  0275  07C1               	addwf	DecodeGPS@longitude+1,f
  2430  0276  0820               	movf	?___wmul,w
  2431  0277  01C0               	clrf	DecodeGPS@longitude
  2432  0278  07C0               	addwf	DecodeGPS@longitude,f
  2433  0279  3001               	movlw	1
  2434  027A  07C6               	addwf	DecodeGPS@x,f
  2435  027B  3000               	movlw	0
  2436  027C  3DC7               	addwfc	DecodeGPS@x+1,f
  2437                           
  2438                           ;launcher_functions.c: 435: longitude[0] += (gpsMessage[x++] - 48)*10;
  2439  027D  0846               	movf	DecodeGPS@x,w
  2440  027E  3E20               	addlw	_gpsMessage& (0+255)
  2441  027F  0086               	movwf	6
  2442  0280  3001               	movlw	1	; select bank2/3
  2443  0281  0087               	movwf	7
  2444  0282  0801               	movf	1,w
  2445  0283  3ED0               	addlw	208
  2446  0284  00A0               	movwf	___wmul@multiplier
  2447  0285  30FF               	movlw	255
  2448  0286  1803               	skipnc
  2449  0287  3000               	movlw	0
  2450  0288  00A1               	movwf	___wmul@multiplier+1
  2451  0289  300A               	movlw	10
  2452  028A  00A2               	movwf	___wmul@multiplicand
  2453  028B  3000               	movlw	0
  2454  028C  00A3               	movwf	___wmul@multiplicand+1
  2455  028D  318E  261C  3181   	fcall	___wmul
  2456  0290  0020               	movlb	0	; select bank0
  2457  0291  0820               	movf	?___wmul,w
  2458  0292  07C0               	addwf	DecodeGPS@longitude,f
  2459  0293  0821               	movf	?___wmul+1,w
  2460  0294  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2461  0295  3001               	movlw	1
  2462  0296  07C6               	addwf	DecodeGPS@x,f
  2463  0297  3000               	movlw	0
  2464  0298  3DC7               	addwfc	DecodeGPS@x+1,f
  2465                           
  2466                           ;launcher_functions.c: 436: longitude[0] += (gpsMessage[x++] - 48);
  2467  0299  0846               	movf	DecodeGPS@x,w
  2468  029A  3E20               	addlw	_gpsMessage& (0+255)
  2469  029B  0086               	movwf	6
  2470  029C  3001               	movlw	1	; select bank2/3
  2471  029D  0087               	movwf	7
  2472  029E  0801               	movf	1,w
  2473  029F  3ED0               	addlw	208
  2474  02A0  00AE               	movwf	??_DecodeGPS
  2475  02A1  30FF               	movlw	255
  2476  02A2  1803               	skipnc
  2477  02A3  3000               	movlw	0
  2478  02A4  00AF               	movwf	??_DecodeGPS+1
  2479  02A5  082E               	movf	??_DecodeGPS,w
  2480  02A6  07C0               	addwf	DecodeGPS@longitude,f
  2481  02A7  082F               	movf	??_DecodeGPS+1,w
  2482  02A8  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2483  02A9  3001               	movlw	1
  2484  02AA  07C6               	addwf	DecodeGPS@x,f
  2485  02AB  3000               	movlw	0
  2486  02AC  3DC7               	addwfc	DecodeGPS@x+1,f
  2487                           
  2488                           ;launcher_functions.c: 439: longitude[1] = (gpsMessage[x++] - 48)*10;
  2489  02AD  0846               	movf	DecodeGPS@x,w
  2490  02AE  3E20               	addlw	_gpsMessage& (0+255)
  2491  02AF  0086               	movwf	6
  2492  02B0  3001               	movlw	1	; select bank2/3
  2493  02B1  0087               	movwf	7
  2494  02B2  0801               	movf	1,w
  2495  02B3  3ED0               	addlw	208
  2496  02B4  00A0               	movwf	___wmul@multiplier
  2497  02B5  30FF               	movlw	255
  2498  02B6  1803               	skipnc
  2499  02B7  3000               	movlw	0
  2500  02B8  00A1               	movwf	___wmul@multiplier+1
  2501  02B9  300A               	movlw	10
  2502  02BA  00A2               	movwf	___wmul@multiplicand
  2503  02BB  3000               	movlw	0
  2504  02BC  00A3               	movwf	___wmul@multiplicand+1
  2505  02BD  318E  261C  3181   	fcall	___wmul
  2506  02C0  0020               	movlb	0	; select bank0
  2507  02C1  0821               	movf	?___wmul+1,w
  2508  02C2  01C3               	clrf	DecodeGPS@longitude+3
  2509  02C3  07C3               	addwf	DecodeGPS@longitude+3,f
  2510  02C4  0820               	movf	?___wmul,w
  2511  02C5  01C2               	clrf	DecodeGPS@longitude+2
  2512  02C6  07C2               	addwf	DecodeGPS@longitude+2,f
  2513  02C7  3001               	movlw	1
  2514  02C8  07C6               	addwf	DecodeGPS@x,f
  2515  02C9  3000               	movlw	0
  2516  02CA  3DC7               	addwfc	DecodeGPS@x+1,f
  2517                           
  2518                           ;launcher_functions.c: 440: longitude[1] += (gpsMessage[x++] - 48);
  2519  02CB  0846               	movf	DecodeGPS@x,w
  2520  02CC  3E20               	addlw	_gpsMessage& (0+255)
  2521  02CD  0086               	movwf	6
  2522  02CE  3001               	movlw	1	; select bank2/3
  2523  02CF  0087               	movwf	7
  2524  02D0  0801               	movf	1,w
  2525  02D1  3ED0               	addlw	208
  2526  02D2  00AE               	movwf	??_DecodeGPS
  2527  02D3  30FF               	movlw	255
  2528  02D4  1803               	skipnc
  2529  02D5  3000               	movlw	0
  2530  02D6  00AF               	movwf	??_DecodeGPS+1
  2531  02D7  082E               	movf	??_DecodeGPS,w
  2532  02D8  07C2               	addwf	DecodeGPS@longitude+2,f
  2533  02D9  082F               	movf	??_DecodeGPS+1,w
  2534  02DA  3DC3               	addwfc	DecodeGPS@longitude+3,f
  2535  02DB  3001               	movlw	1
  2536  02DC  07C6               	addwf	DecodeGPS@x,f
  2537  02DD  3000               	movlw	0
  2538  02DE  3DC7               	addwfc	DecodeGPS@x+1,f
  2539                           
  2540                           ;launcher_functions.c: 443: x = x + 1;
  2541  02DF  0846               	movf	DecodeGPS@x,w
  2542  02E0  3E01               	addlw	1
  2543  02E1  00C6               	movwf	DecodeGPS@x
  2544  02E2  3000               	movlw	0
  2545  02E3  3D47               	addwfc	DecodeGPS@x+1,w
  2546  02E4  00C7               	movwf	DecodeGPS@x+1
  2547                           
  2548                           ;launcher_functions.c: 446: longitude[2] = (gpsMessage[x++] - 48)*10;
  2549  02E5  0846               	movf	DecodeGPS@x,w
  2550  02E6  3E20               	addlw	_gpsMessage& (0+255)
  2551  02E7  0086               	movwf	6
  2552  02E8  3001               	movlw	1	; select bank2/3
  2553  02E9  0087               	movwf	7
  2554  02EA  0801               	movf	1,w
  2555  02EB  3ED0               	addlw	208
  2556  02EC  00A0               	movwf	___wmul@multiplier
  2557  02ED  30FF               	movlw	255
  2558  02EE  1803               	skipnc
  2559  02EF  3000               	movlw	0
  2560  02F0  00A1               	movwf	___wmul@multiplier+1
  2561  02F1  300A               	movlw	10
  2562  02F2  00A2               	movwf	___wmul@multiplicand
  2563  02F3  3000               	movlw	0
  2564  02F4  00A3               	movwf	___wmul@multiplicand+1
  2565  02F5  318E  261C  3181   	fcall	___wmul
  2566  02F8  0020               	movlb	0	; select bank0
  2567  02F9  0821               	movf	?___wmul+1,w
  2568  02FA  01C5               	clrf	DecodeGPS@longitude+5
  2569  02FB  07C5               	addwf	DecodeGPS@longitude+5,f
  2570  02FC  0820               	movf	?___wmul,w
  2571  02FD  01C4               	clrf	DecodeGPS@longitude+4
  2572  02FE  07C4               	addwf	DecodeGPS@longitude+4,f
  2573  02FF  3001               	movlw	1
  2574  0300  07C6               	addwf	DecodeGPS@x,f
  2575  0301  3000               	movlw	0
  2576  0302  3DC7               	addwfc	DecodeGPS@x+1,f
  2577                           
  2578                           ;launcher_functions.c: 447: longitude[2] += (gpsMessage[x++] - 48);
  2579  0303  0846               	movf	DecodeGPS@x,w
  2580  0304  3E20               	addlw	_gpsMessage& (0+255)
  2581  0305  0086               	movwf	6
  2582  0306  3001               	movlw	1	; select bank2/3
  2583  0307  0087               	movwf	7
  2584  0308  0801               	movf	1,w
  2585  0309  3ED0               	addlw	208
  2586  030A  00AE               	movwf	??_DecodeGPS
  2587  030B  30FF               	movlw	255
  2588  030C  1803               	skipnc
  2589  030D  3000               	movlw	0
  2590  030E  00AF               	movwf	??_DecodeGPS+1
  2591  030F  082E               	movf	??_DecodeGPS,w
  2592  0310  07C4               	addwf	DecodeGPS@longitude+4,f
  2593  0311  082F               	movf	??_DecodeGPS+1,w
  2594  0312  3DC5               	addwfc	DecodeGPS@longitude+5,f
  2595  0313  3001               	movlw	1
  2596  0314  07C6               	addwf	DecodeGPS@x,f
  2597  0315  3000               	movlw	0
  2598  0316  3DC7               	addwfc	DecodeGPS@x+1,f
  2599                           
  2600                           ;launcher_functions.c: 448: longitude[2] = (longitude[2]*60)/100;
  2601  0317  3064               	movlw	100
  2602  0318  00A6               	movwf	___lwdiv@divisor
  2603  0319  3000               	movlw	0
  2604  031A  00A7               	movwf	___lwdiv@divisor+1
  2605  031B  0845               	movf	DecodeGPS@longitude+5,w
  2606  031C  01A1               	clrf	___wmul@multiplier+1
  2607  031D  07A1               	addwf	___wmul@multiplier+1,f
  2608  031E  0844               	movf	DecodeGPS@longitude+4,w
  2609  031F  01A0               	clrf	___wmul@multiplier
  2610  0320  07A0               	addwf	___wmul@multiplier,f
  2611  0321  303C               	movlw	60
  2612  0322  00A2               	movwf	___wmul@multiplicand
  2613  0323  3000               	movlw	0
  2614  0324  00A3               	movwf	___wmul@multiplicand+1
  2615  0325  318E  261C  3181   	fcall	___wmul
  2616  0328  0020               	movlb	0	; select bank0
  2617  0329  0821               	movf	?___wmul+1,w
  2618  032A  01A9               	clrf	___lwdiv@dividend+1
  2619  032B  07A9               	addwf	___lwdiv@dividend+1,f
  2620  032C  0820               	movf	?___wmul,w
  2621  032D  01A8               	clrf	___lwdiv@dividend
  2622  032E  07A8               	addwf	___lwdiv@dividend,f
  2623  032F  318F  2727  3181   	fcall	___lwdiv
  2624  0332  0020               	movlb	0	; select bank0
  2625  0333  0827               	movf	?___lwdiv+1,w
  2626  0334  01C5               	clrf	DecodeGPS@longitude+5
  2627  0335  07C5               	addwf	DecodeGPS@longitude+5,f
  2628  0336  0826               	movf	?___lwdiv,w
  2629  0337  01C4               	clrf	DecodeGPS@longitude+4
  2630  0338  07C4               	addwf	DecodeGPS@longitude+4,f
  2631                           
  2632                           ;launcher_functions.c: 451: x = x + 2;
  2633  0339  0846               	movf	DecodeGPS@x,w
  2634  033A  3E02               	addlw	2
  2635  033B  00C6               	movwf	DecodeGPS@x
  2636  033C  3000               	movlw	0
  2637  033D  3D47               	addwfc	DecodeGPS@x+1,w
  2638  033E  00C7               	movwf	DecodeGPS@x+1
  2639  033F                     l2053:	
  2640                           
  2641                           ;launcher_functions.c: 452: }
  2642                           ;launcher_functions.c: 455: x = x + 1;
  2643  033F  0846               	movf	DecodeGPS@x,w
  2644  0340  3E01               	addlw	1
  2645  0341  00C6               	movwf	DecodeGPS@x
  2646  0342  3000               	movlw	0
  2647  0343  3D47               	addwfc	DecodeGPS@x+1,w
  2648  0344  00C7               	movwf	DecodeGPS@x+1
  2649                           
  2650                           ;launcher_functions.c: 458: if(gpsMessage[x] != ',')
  2651  0345  0846               	movf	DecodeGPS@x,w
  2652  0346  3E20               	addlw	_gpsMessage& (0+255)
  2653  0347  0086               	movwf	6
  2654  0348  3001               	movlw	1	; select bank2/3
  2655  0349  0087               	movwf	7
  2656  034A  0801               	movf	1,w
  2657  034B  3A2C               	xorlw	44
  2658  034C  1903               	skipnz
  2659  034D  2B5B               	goto	l2061
  2660                           
  2661                           ;launcher_functions.c: 459: eastWest = gpsMessage[x++];
  2662  034E  0846               	movf	DecodeGPS@x,w
  2663  034F  3E20               	addlw	_gpsMessage& (0+255)
  2664  0350  0086               	movwf	6
  2665  0351  3001               	movlw	1	; select bank2/3
  2666  0352  0087               	movwf	7
  2667  0353  0801               	movf	1,w
  2668  0354  00AE               	movwf	??_DecodeGPS
  2669  0355  082E               	movf	??_DecodeGPS,w
  2670  0356  00B8               	movwf	DecodeGPS@eastWest
  2671  0357  3001               	movlw	1
  2672  0358  07C6               	addwf	DecodeGPS@x,f
  2673  0359  3000               	movlw	0
  2674  035A  3DC7               	addwfc	DecodeGPS@x+1,f
  2675  035B                     l2061:	
  2676                           
  2677                           ;launcher_functions.c: 462: x = x + 1;
  2678  035B  0846               	movf	DecodeGPS@x,w
  2679  035C  3E01               	addlw	1
  2680  035D  00C6               	movwf	DecodeGPS@x
  2681  035E  3000               	movlw	0
  2682  035F  3D47               	addwfc	DecodeGPS@x+1,w
  2683  0360  00C7               	movwf	DecodeGPS@x+1
  2684  0361                     l2063:	
  2685                           ;launcher_functions.c: 465: while(gpsMessage[x++] != ','){}
  2686                           
  2687  0361  0847               	movf	DecodeGPS@x+1,w
  2688  0362  00AF               	movwf	??_DecodeGPS+1
  2689  0363  0846               	movf	DecodeGPS@x,w
  2690  0364  00AE               	movwf	??_DecodeGPS
  2691  0365  0AC6               	incf	DecodeGPS@x,f
  2692  0366  1903               	skipnz
  2693  0367  0AC7               	incf	DecodeGPS@x+1,f
  2694  0368  082E               	movf	??_DecodeGPS,w
  2695  0369  3E20               	addlw	_gpsMessage& (0+255)
  2696  036A  0086               	movwf	6
  2697  036B  3001               	movlw	1	; select bank2/3
  2698  036C  0087               	movwf	7
  2699  036D  0801               	movf	1,w
  2700  036E  3A2C               	xorlw	44
  2701  036F  1D03               	skipz
  2702  0370  2B61               	goto	l2063
  2703                           
  2704                           ;launcher_functions.c: 468: status = gpsMessage[x];
  2705  0371  0846               	movf	DecodeGPS@x,w
  2706  0372  3E20               	addlw	_gpsMessage& (0+255)
  2707  0373  0086               	movwf	6
  2708  0374  3001               	movlw	1	; select bank2/3
  2709  0375  0087               	movwf	7
  2710  0376  0801               	movf	1,w
  2711  0377  00AE               	movwf	??_DecodeGPS
  2712  0378  082E               	movf	??_DecodeGPS,w
  2713  0379  00B9               	movwf	DecodeGPS@status
  2714                           
  2715                           ;launcher_functions.c: 470: if(status == 'A')
  2716  037A  0839               	movf	DecodeGPS@status,w
  2717  037B  3A41               	xorlw	65
  2718  037C  1D03               	skipz
  2719  037D  2B81               	goto	l390
  2720                           
  2721                           ;launcher_functions.c: 471: gpsInvalidFlag = 0;
  2722  037E  0021               	movlb	1	; select bank1
  2723  037F  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2724  0380  2B84               	goto	l2071
  2725  0381                     l390:	
  2726                           
  2727                           ;launcher_functions.c: 472: else
  2728                           ;launcher_functions.c: 473: gpsInvalidFlag = 1;
  2729  0381  0021               	movlb	1	; select bank1
  2730  0382  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2731  0383  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2732  0384                     l2071:	
  2733                           
  2734                           ;launcher_functions.c: 477: if(!gpsInvalidFlag)
  2735  0384  08BE               	movf	_gpsInvalidFlag^(0+128),f
  2736  0385  1D03               	skipz
  2737  0386  0008               	return
  2738                           
  2739                           ;launcher_functions.c: 478: {
  2740                           ;launcher_functions.c: 480: for(x=0;x<3;x++)
  2741  0387  0020               	movlb	0	; select bank0
  2742  0388  01C6               	clrf	DecodeGPS@x
  2743  0389  01C7               	clrf	DecodeGPS@x+1
  2744  038A  0847               	movf	DecodeGPS@x+1,w
  2745  038B  3A80               	xorlw	128
  2746  038C  00AE               	movwf	??_DecodeGPS
  2747  038D  3080               	movlw	128
  2748  038E  022E               	subwf	??_DecodeGPS,w
  2749  038F  1D03               	skipz
  2750  0390  2B93               	goto	u1675
  2751  0391  3003               	movlw	3
  2752  0392  0246               	subwf	DecodeGPS@x,w
  2753  0393                     u1675:	
  2754  0393  1803               	btfsc	3,0
  2755  0394  2BBD               	goto	l2085
  2756  0395                     l2079:	
  2757                           
  2758                           ;launcher_functions.c: 481: {
  2759                           ;launcher_functions.c: 482: validLatitude[x] = latitude[x];
  2760  0395  0020               	movlb	0	; select bank0
  2761  0396  3546               	lslf	DecodeGPS@x,w
  2762  0397  3E3A               	addlw	DecodeGPS@latitude& (0+255)
  2763  0398  0086               	movwf	6
  2764  0399  0187               	clrf	7
  2765  039A  3546               	lslf	DecodeGPS@x,w
  2766  039B  3ECD               	addlw	_validLatitude& (0+255)
  2767  039C  0084               	movwf	4
  2768  039D  0185               	clrf	5
  2769  039E  3F40               	moviw [0]fsr1
  2770  039F  3F80               	movwi [0]fsr0
  2771  03A0  3F41               	moviw [1]fsr1
  2772  03A1  3F81               	movwi [1]fsr0
  2773                           
  2774                           ;launcher_functions.c: 483: validLongitude[x] = longitude[x];
  2775  03A2  3546               	lslf	DecodeGPS@x,w
  2776  03A3  3E40               	addlw	DecodeGPS@longitude& (0+255)
  2777  03A4  0086               	movwf	6
  2778  03A5  0187               	clrf	7
  2779  03A6  3546               	lslf	DecodeGPS@x,w
  2780  03A7  3ED3               	addlw	_validLongitude& (0+255)
  2781  03A8  0084               	movwf	4
  2782  03A9  0185               	clrf	5
  2783  03AA  3F40               	moviw [0]fsr1
  2784  03AB  3F80               	movwi [0]fsr0
  2785  03AC  3F41               	moviw [1]fsr1
  2786  03AD  3F81               	movwi [1]fsr0
  2787  03AE  3001               	movlw	1
  2788  03AF  07C6               	addwf	DecodeGPS@x,f
  2789  03B0  3000               	movlw	0
  2790  03B1  3DC7               	addwfc	DecodeGPS@x+1,f
  2791  03B2  0847               	movf	DecodeGPS@x+1,w
  2792  03B3  3A80               	xorlw	128
  2793  03B4  00AE               	movwf	??_DecodeGPS
  2794  03B5  3080               	movlw	128
  2795  03B6  022E               	subwf	??_DecodeGPS,w
  2796  03B7  1D03               	skipz
  2797  03B8  2BBB               	goto	u1685
  2798  03B9  3003               	movlw	3
  2799  03BA  0246               	subwf	DecodeGPS@x,w
  2800  03BB                     u1685:	
  2801  03BB  1C03               	skipc
  2802  03BC  2B95               	goto	l2079
  2803  03BD                     l2085:	
  2804                           
  2805                           ;launcher_functions.c: 484: }
  2806                           ;launcher_functions.c: 485: validNorthSouth = northSouth;
  2807  03BD  0020               	movlb	0	; select bank0
  2808  03BE  0837               	movf	DecodeGPS@northSouth,w
  2809  03BF  00AE               	movwf	??_DecodeGPS
  2810  03C0  082E               	movf	??_DecodeGPS,w
  2811  03C1  0021               	movlb	1	; select bank1
  2812  03C2  00C0               	movwf	_validNorthSouth^(0+128)
  2813                           
  2814                           ;launcher_functions.c: 486: validEastWest = eastWest;
  2815  03C3  0020               	movlb	0	; select bank0
  2816  03C4  0838               	movf	DecodeGPS@eastWest,w
  2817  03C5  00AE               	movwf	??_DecodeGPS
  2818  03C6  082E               	movf	??_DecodeGPS,w
  2819  03C7  0021               	movlb	1	; select bank1
  2820  03C8  00BF               	movwf	_validEastWest^(0+128)
  2821  03C9  0008               	return
  2822  03CA                     __end_of_DecodeGPS:	
  2823                           
  2824                           	psect	text4
  2825  0E1C                     __ptext4:	
  2826 ;; *************** function ___wmul *****************
  2827 ;; Defined at:
  2828 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2831 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  product         2    4[BANK0 ] unsigned int 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2    0[BANK0 ] unsigned int 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2843 ;;      Params:         0       4       0       0       0       0       0       0
  2844 ;;      Locals:         0       2       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0
  2846 ;;      Totals:         0       6       0       0       0       0       0       0
  2847 ;;Total ram usage:        6 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    2
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_DecodeGPS
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function ___wmul
  2859  0E1C                     ___wmul:	
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2863  0E1C  0020               	movlb	0	; select bank0
  2864  0E1D  01A4               	clrf	___wmul@product
  2865  0E1E  01A5               	clrf	___wmul@product+1
  2866  0E1F                     l1763:	
  2867  0E1F  1C20               	btfss	___wmul@multiplier,0
  2868  0E20  2E25               	goto	l540
  2869  0E21  0822               	movf	___wmul@multiplicand,w
  2870  0E22  07A4               	addwf	___wmul@product,f
  2871  0E23  0823               	movf	___wmul@multiplicand+1,w
  2872  0E24  3DA5               	addwfc	___wmul@product+1,f
  2873  0E25                     l540:	
  2874  0E25  3001               	movlw	1
  2875  0E26                     u1185:	
  2876  0E26  35A2               	lslf	___wmul@multiplicand,f
  2877  0E27  0DA3               	rlf	___wmul@multiplicand+1,f
  2878  0E28  0B89               	decfsz	9,f
  2879  0E29  2E26               	goto	u1185
  2880  0E2A  3001               	movlw	1
  2881  0E2B                     u1195:	
  2882  0E2B  36A1               	lsrf	___wmul@multiplier+1,f
  2883  0E2C  0CA0               	rrf	___wmul@multiplier,f
  2884  0E2D  0B89               	decfsz	9,f
  2885  0E2E  2E2B               	goto	u1195
  2886  0E2F  0821               	movf	___wmul@multiplier+1,w
  2887  0E30  0420               	iorwf	___wmul@multiplier,w
  2888  0E31  1D03               	skipz
  2889  0E32  2E1F               	goto	l1763
  2890  0E33  0825               	movf	___wmul@product+1,w
  2891  0E34  01A1               	clrf	?___wmul+1
  2892  0E35  07A1               	addwf	?___wmul+1,f
  2893  0E36  0824               	movf	___wmul@product,w
  2894  0E37  01A0               	clrf	?___wmul
  2895  0E38  07A0               	addwf	?___wmul,f
  2896  0E39  0008               	return
  2897  0E3A                     __end_of___wmul:	
  2898                           
  2899                           	psect	text5
  2900  06EA                     __ptext5:	
  2901 ;; *************** function _SetupGPS *****************
  2902 ;; Defined at:
  2903 ;;		line 333 in file "launcher_functions.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  message        22   42[BANK0 ] unsigned char [22]
  2908 ;;  startSequenc    6   64[BANK0 ] unsigned char [6]
  2909 ;;  MID             4   70[BANK0 ] unsigned char [4]
  2910 ;;  x               2   74[BANK0 ] int 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2920 ;;      Params:         0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0      34       0       0       0       0       0       0
  2922 ;;      Temps:          0       3       0       0       0       0       0       0
  2923 ;;      Totals:         0      37       0       0       0       0       0       0
  2924 ;;Total ram usage:       37 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    4
  2927 ;; This function calls:
  2928 ;;		_sprintf
  2929 ;;		_uart_write_message
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _SetupGPS
  2937  06EA                     _SetupGPS:	
  2938                           
  2939                           ;launcher_functions.c: 335: int x;
  2940                           ;launcher_functions.c: 336: unsigned char startSequence[6] = "$PSRF";
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2944  06EA  30B4               	movlw	low SetupGPS@F4917
  2945  06EB  0086               	movwf	6
  2946  06EC  3000               	movlw	high SetupGPS@F4917
  2947  06ED  0087               	movwf	7
  2948  06EE  3060               	movlw	low SetupGPS@startSequence
  2949  06EF  0084               	movwf	4
  2950  06F0  3000               	movlw	high SetupGPS@startSequence
  2951  06F1  0085               	movwf	5
  2952  06F2  3006               	movlw	6
  2953  06F3  0020               	movlb	0	; select bank0
  2954  06F4  00C7               	movwf	??_SetupGPS
  2955  06F5                     u1690:	
  2956  06F5  0016               	moviw fsr1++
  2957  06F6  001A               	movwi fsr0++
  2958  06F7  0BC7               	decfsz	??_SetupGPS,f
  2959  06F8  2EF5               	goto	u1690
  2960                           
  2961                           ;launcher_functions.c: 337: unsigned char MID[4] = "103";
  2962  06F9  0021               	movlb	1	; select bank1
  2963  06FA  083D               	movf	(SetupGPS@F4919+3)^(0+128),w
  2964  06FB  0020               	movlb	0	; select bank0
  2965  06FC  00E9               	movwf	SetupGPS@MID+3
  2966  06FD  0021               	movlb	1	; select bank1
  2967  06FE  083C               	movf	(SetupGPS@F4919+2)^(0+128),w
  2968  06FF  0020               	movlb	0	; select bank0
  2969  0700  00E8               	movwf	SetupGPS@MID+2
  2970  0701  0021               	movlb	1	; select bank1
  2971  0702  083B               	movf	(SetupGPS@F4919+1)^(0+128),w
  2972  0703  0020               	movlb	0	; select bank0
  2973  0704  00E7               	movwf	SetupGPS@MID+1
  2974  0705  0021               	movlb	1	; select bank1
  2975  0706  083A               	movf	SetupGPS@F4919^(0+128),w
  2976  0707  0020               	movlb	0	; select bank0
  2977  0708  00E6               	movwf	SetupGPS@MID
  2978                           
  2979                           ;launcher_functions.c: 338: unsigned char message[22];
  2980                           ;launcher_functions.c: 341: for(x = 0; x < 6; x++)
  2981  0709  01EA               	clrf	SetupGPS@x
  2982  070A  01EB               	clrf	SetupGPS@x+1
  2983  070B  086B               	movf	SetupGPS@x+1,w
  2984  070C  3A80               	xorlw	128
  2985  070D  00C7               	movwf	??_SetupGPS
  2986  070E  3080               	movlw	128
  2987  070F  0247               	subwf	??_SetupGPS,w
  2988  0710  1D03               	skipz
  2989  0711  2F14               	goto	u1705
  2990  0712  3006               	movlw	6
  2991  0713  026A               	subwf	SetupGPS@x,w
  2992  0714                     u1705:	
  2993  0714  1803               	btfsc	3,0
  2994  0715  2F54               	goto	l2233
  2995  0716                     l2223:	
  2996                           
  2997                           ;launcher_functions.c: 342: {
  2998                           ;launcher_functions.c: 343: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2999  0716  3015               	movlw	21
  3000  0717  0020               	movlb	0	; select bank0
  3001  0718  00C9               	movwf	??_SetupGPS+2
  3002  0719  304B               	movlw	75
  3003  071A  00C8               	movwf	??_SetupGPS+1
  3004  071B  30D1               	movlw	209
  3005  071C  00C7               	movwf	??_SetupGPS
  3006  071D                     u2207:	
  3007  071D  0BC7               	decfsz	??_SetupGPS,f
  3008  071E  2F1D               	goto	u2207
  3009  071F  0BC8               	decfsz	??_SetupGPS+1,f
  3010  0720  2F1D               	goto	u2207
  3011  0721  0BC9               	decfsz	??_SetupGPS+2,f
  3012  0722  2F1D               	goto	u2207
  3013  0723  0000               	nop
  3014                           
  3015                           ;launcher_functions.c: 344: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3016  0724  300A               	movlw	low (STR_1| (0+32768))
  3017  0725  0020               	movlb	0	; select bank0
  3018  0726  00B4               	movwf	sprintf@f
  3019  0727  3088               	movlw	high (STR_1| (0+32768))
  3020  0728  00B5               	movwf	sprintf@f+1
  3021  0729  3060               	movlw	SetupGPS@startSequence& (0+255)
  3022  072A  00C7               	movwf	??_SetupGPS
  3023  072B  0847               	movf	??_SetupGPS,w
  3024  072C  00B6               	movwf	?_sprintf+2
  3025  072D  3066               	movlw	SetupGPS@MID& (0+255)
  3026  072E  00C8               	movwf	??_SetupGPS+1
  3027  072F  0848               	movf	??_SetupGPS+1,w
  3028  0730  00B7               	movwf	?_sprintf+3
  3029  0731  086B               	movf	SetupGPS@x+1,w
  3030  0732  01B9               	clrf	?_sprintf+5
  3031  0733  07B9               	addwf	?_sprintf+5,f
  3032  0734  086A               	movf	SetupGPS@x,w
  3033  0735  01B8               	clrf	?_sprintf+4
  3034  0736  07B8               	addwf	?_sprintf+4,f
  3035  0737  304A               	movlw	SetupGPS@message& (0+255)
  3036  0738  3185  2537  3186   	fcall	_sprintf
  3037                           
  3038                           ;launcher_functions.c: 345: uart_write_message(message, 22);
  3039  073B  3016               	movlw	22
  3040  073C  0020               	movlb	0	; select bank0
  3041  073D  00A8               	movwf	uart_write_message@size
  3042  073E  3000               	movlw	0
  3043  073F  00A9               	movwf	uart_write_message@size+1
  3044  0740  304A               	movlw	SetupGPS@message& (0+255)
  3045  0741  3187  277C  3186   	fcall	_uart_write_message
  3046  0744  3001               	movlw	1
  3047  0745  0020               	movlb	0	; select bank0
  3048  0746  07EA               	addwf	SetupGPS@x,f
  3049  0747  3000               	movlw	0
  3050  0748  3DEB               	addwfc	SetupGPS@x+1,f
  3051  0749  086B               	movf	SetupGPS@x+1,w
  3052  074A  3A80               	xorlw	128
  3053  074B  00C7               	movwf	??_SetupGPS
  3054  074C  3080               	movlw	128
  3055  074D  0247               	subwf	??_SetupGPS,w
  3056  074E  1D03               	skipz
  3057  074F  2F52               	goto	u1715
  3058  0750  3006               	movlw	6
  3059  0751  026A               	subwf	SetupGPS@x,w
  3060  0752                     u1715:	
  3061  0752  1C03               	skipc
  3062  0753  2F16               	goto	l2223
  3063  0754                     l2233:	
  3064                           
  3065                           ;launcher_functions.c: 346: }
  3066                           ;launcher_functions.c: 348: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3067  0754  3015               	movlw	21
  3068  0755  0020               	movlb	0	; select bank0
  3069  0756  00C9               	movwf	??_SetupGPS+2
  3070  0757  304B               	movlw	75
  3071  0758  00C8               	movwf	??_SetupGPS+1
  3072  0759  30D1               	movlw	209
  3073  075A  00C7               	movwf	??_SetupGPS
  3074  075B                     u2217:	
  3075  075B  0BC7               	decfsz	??_SetupGPS,f
  3076  075C  2F5B               	goto	u2217
  3077  075D  0BC8               	decfsz	??_SetupGPS+1,f
  3078  075E  2F5B               	goto	u2217
  3079  075F  0BC9               	decfsz	??_SetupGPS+2,f
  3080  0760  2F5B               	goto	u2217
  3081  0761  0000               	nop
  3082                           
  3083                           ;launcher_functions.c: 350: sprintf(message, "%s%s,01,01,01,00*", startSequence, MID);
  3084  0762  301D               	movlw	low (STR_2| (0+32768))
  3085  0763  0020               	movlb	0	; select bank0
  3086  0764  00B4               	movwf	sprintf@f
  3087  0765  3088               	movlw	high (STR_2| (0+32768))
  3088  0766  00B5               	movwf	sprintf@f+1
  3089  0767  3060               	movlw	SetupGPS@startSequence& (0+255)
  3090  0768  00C7               	movwf	??_SetupGPS
  3091  0769  0847               	movf	??_SetupGPS,w
  3092  076A  00B6               	movwf	?_sprintf+2
  3093  076B  3066               	movlw	SetupGPS@MID& (0+255)
  3094  076C  00C8               	movwf	??_SetupGPS+1
  3095  076D  0848               	movf	??_SetupGPS+1,w
  3096  076E  00B7               	movwf	?_sprintf+3
  3097  076F  304A               	movlw	SetupGPS@message& (0+255)
  3098  0770  3185  2537  3186   	fcall	_sprintf
  3099                           
  3100                           ;launcher_functions.c: 351: uart_write_message(message, 22);
  3101  0773  3016               	movlw	22
  3102  0774  0020               	movlb	0	; select bank0
  3103  0775  00A8               	movwf	uart_write_message@size
  3104  0776  3000               	movlw	0
  3105  0777  00A9               	movwf	uart_write_message@size+1
  3106  0778  304A               	movlw	SetupGPS@message& (0+255)
  3107  0779  3187  277C         	fcall	_uart_write_message
  3108  077B  0008               	return
  3109  077C                     __end_of_SetupGPS:	
  3110                           
  3111                           	psect	text6
  3112  077C                     __ptext6:	
  3113 ;; *************** function _uart_write_message *****************
  3114 ;; Defined at:
  3115 ;;		line 289 in file "launcher_functions.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  data            1    wreg     PTR unsigned char 
  3118 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3119 ;;  size            2    8[BANK0 ] int 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3122 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3123 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3124 ;;  x               2   17[BANK0 ] int 
  3125 ;;  checksum        1   19[BANK0 ] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;		None               void
  3128 ;; Registers used:
  3129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3135 ;;      Params:         0       2       0       0       0       0       0       0
  3136 ;;      Locals:         0      10       0       0       0       0       0       0
  3137 ;;      Temps:          0       3       0       0       0       0       0       0
  3138 ;;      Totals:         0      15       0       0       0       0       0       0
  3139 ;;Total ram usage:       15 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    3
  3142 ;; This function calls:
  3143 ;;		_compute_checksum
  3144 ;;		_uart_xmit
  3145 ;; This function is called by:
  3146 ;;		_SetupGPS
  3147 ;;		_UpdateGPS
  3148 ;;		_DisableGPS
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _uart_write_message
  3154  077C                     _uart_write_message:	
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3158                           ;uart_write_message@data stored from wreg
  3159  077C  0020               	movlb	0	; select bank0
  3160  077D  00B4               	movwf	uart_write_message@data
  3161                           
  3162                           ;launcher_functions.c: 291: int x;
  3163                           ;launcher_functions.c: 292: unsigned char checksum;
  3164                           ;launcher_functions.c: 293: unsigned char ascii_checksum[2];
  3165                           ;launcher_functions.c: 295: checksum = compute_checksum(data, size);
  3166  077E  0829               	movf	uart_write_message@size+1,w
  3167  077F  01A1               	clrf	compute_checksum@size+1
  3168  0780  07A1               	addwf	compute_checksum@size+1,f
  3169  0781  0828               	movf	uart_write_message@size,w
  3170  0782  01A0               	clrf	compute_checksum@size
  3171  0783  07A0               	addwf	compute_checksum@size,f
  3172  0784  0834               	movf	uart_write_message@data,w
  3173  0785  318F  275E  3187   	fcall	_compute_checksum
  3174  0788  0020               	movlb	0	; select bank0
  3175  0789  00AA               	movwf	??_uart_write_message
  3176  078A  082A               	movf	??_uart_write_message,w
  3177  078B  00B3               	movwf	uart_write_message@checksum
  3178                           
  3179                           ;launcher_functions.c: 296: ascii_checksum[0] = checksum >> 4;
  3180  078C  0833               	movf	uart_write_message@checksum,w
  3181  078D  00AA               	movwf	??_uart_write_message
  3182  078E  3004               	movlw	4
  3183  078F                     u1395:	
  3184  078F  36AA               	lsrf	??_uart_write_message,f
  3185  0790  0B89               	decfsz	9,f
  3186  0791  2F8F               	goto	u1395
  3187  0792  082A               	movf	??_uart_write_message,w
  3188  0793  00AB               	movwf	??_uart_write_message+1
  3189  0794  082B               	movf	??_uart_write_message+1,w
  3190  0795  00B5               	movwf	uart_write_message@ascii_checksum
  3191                           
  3192                           ;launcher_functions.c: 297: ascii_checksum[1] = checksum & 0x0F;
  3193  0796  0833               	movf	uart_write_message@checksum,w
  3194  0797  390F               	andlw	15
  3195  0798  00AA               	movwf	??_uart_write_message
  3196  0799  082A               	movf	??_uart_write_message,w
  3197  079A  00B6               	movwf	uart_write_message@ascii_checksum+1
  3198                           
  3199                           ;launcher_functions.c: 299: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3200  079B  300A               	movlw	10
  3201  079C  0235               	subwf	uart_write_message@ascii_checksum,w
  3202  079D  1C03               	skipc
  3203  079E  2FA1               	goto	l1867
  3204  079F  3037               	movlw	55
  3205  07A0  2FA2               	goto	L1
  3206  07A1                     l1867:	
  3207  07A1  3030               	movlw	48
  3208  07A2                     L1:	
  3209  07A2  00AD               	movwf	_uart_write_message$1353
  3210  07A3  3000               	movlw	0
  3211  07A4  00AE               	movwf	_uart_write_message$1353+1
  3212  07A5  082D               	movf	_uart_write_message$1353,w
  3213  07A6  00AA               	movwf	??_uart_write_message
  3214  07A7  082A               	movf	??_uart_write_message,w
  3215  07A8  07B5               	addwf	uart_write_message@ascii_checksum,f
  3216                           
  3217                           ;launcher_functions.c: 300: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3218  07A9  300A               	movlw	10
  3219  07AA  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3220  07AB  1C03               	skipc
  3221  07AC  2FAF               	goto	l1875
  3222  07AD  3037               	movlw	55
  3223  07AE  2FB0               	goto	L2
  3224  07AF                     l1875:	
  3225  07AF  3030               	movlw	48
  3226  07B0                     L2:	
  3227  07B0  00AF               	movwf	_uart_write_message$1354
  3228  07B1  3000               	movlw	0
  3229  07B2  00B0               	movwf	_uart_write_message$1354+1
  3230  07B3  082F               	movf	_uart_write_message$1354,w
  3231  07B4  00AA               	movwf	??_uart_write_message
  3232  07B5  082A               	movf	??_uart_write_message,w
  3233  07B6  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3234                           
  3235                           ;launcher_functions.c: 302: for(x=0; x<size-1; x++)
  3236  07B7  01B1               	clrf	uart_write_message@x
  3237  07B8  01B2               	clrf	uart_write_message@x+1
  3238  07B9                     l1885:	
  3239  07B9  0828               	movf	uart_write_message@size,w
  3240  07BA  3EFF               	addlw	255
  3241  07BB  00AA               	movwf	??_uart_write_message
  3242  07BC  30FF               	movlw	255
  3243  07BD  3D29               	addwfc	uart_write_message@size+1,w
  3244  07BE  00AB               	movwf	??_uart_write_message+1
  3245  07BF  0832               	movf	uart_write_message@x+1,w
  3246  07C0  3A80               	xorlw	128
  3247  07C1  00AC               	movwf	??_uart_write_message+2
  3248  07C2  082B               	movf	??_uart_write_message+1,w
  3249  07C3  3A80               	xorlw	128
  3250  07C4  022C               	subwf	??_uart_write_message+2,w
  3251  07C5  1D03               	skipz
  3252  07C6  2FC9               	goto	u1425
  3253  07C7  082A               	movf	??_uart_write_message,w
  3254  07C8  0231               	subwf	uart_write_message@x,w
  3255  07C9                     u1425:	
  3256  07C9  1803               	btfsc	3,0
  3257  07CA  2FDC               	goto	l1887
  3258                           
  3259                           ;launcher_functions.c: 303: {
  3260                           ;launcher_functions.c: 304: uart_xmit(data[x]);
  3261  07CB  0020               	movlb	0	; select bank0
  3262  07CC  0831               	movf	uart_write_message@x,w
  3263  07CD  0734               	addwf	uart_write_message@data,w
  3264  07CE  00AA               	movwf	??_uart_write_message
  3265  07CF  082A               	movf	??_uart_write_message,w
  3266  07D0  0086               	movwf	6
  3267  07D1  0187               	clrf	7
  3268  07D2  0801               	movf	1,w
  3269  07D3  318D  254E  3187   	fcall	_uart_xmit
  3270  07D6  3001               	movlw	1
  3271  07D7  0020               	movlb	0	; select bank0
  3272  07D8  07B1               	addwf	uart_write_message@x,f
  3273  07D9  3000               	movlw	0
  3274  07DA  3DB2               	addwfc	uart_write_message@x+1,f
  3275  07DB  2FB9               	goto	l1885
  3276  07DC                     l1887:	
  3277                           
  3278                           ;launcher_functions.c: 305: }
  3279                           ;launcher_functions.c: 306: uart_xmit(ascii_checksum[0]);
  3280  07DC  0020               	movlb	0	; select bank0
  3281  07DD  0835               	movf	uart_write_message@ascii_checksum,w
  3282  07DE  318D  254E  3187   	fcall	_uart_xmit
  3283                           
  3284                           ;launcher_functions.c: 307: uart_xmit(ascii_checksum[1]);
  3285  07E1  0020               	movlb	0	; select bank0
  3286  07E2  0836               	movf	uart_write_message@ascii_checksum+1,w
  3287  07E3  318D  254E  3187   	fcall	_uart_xmit
  3288                           
  3289                           ;launcher_functions.c: 309: uart_xmit(0x0D);
  3290  07E6  300D               	movlw	13
  3291  07E7  318D  254E  3187   	fcall	_uart_xmit
  3292                           
  3293                           ;launcher_functions.c: 310: uart_xmit(0x0A);
  3294  07EA  300A               	movlw	10
  3295  07EB  318D  254E  3187   	fcall	_uart_xmit
  3296  07EE                     l343:	
  3297                           ;launcher_functions.c: 311: while(!TXSTAbits.TRMT);
  3298                           
  3299  07EE  0023               	movlb	3	; select bank3
  3300  07EF  189E               	btfsc	30,1	;volatile
  3301  07F0  0008               	return
  3302  07F1  2FEE               	goto	l343
  3303  07F2                     __end_of_uart_write_message:	
  3304                           
  3305                           	psect	text7
  3306  0D4E                     __ptext7:	
  3307 ;; *************** function _uart_xmit *****************
  3308 ;; Defined at:
  3309 ;;		line 281 in file "launcher_functions.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  mydata_byte     1    wreg     unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;		None               void
  3316 ;; Registers used:
  3317 ;;		wreg
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3323 ;;      Params:         0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       1       0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0
  3326 ;;      Totals:         0       1       0       0       0       0       0       0
  3327 ;;Total ram usage:        1 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    2
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_uart_write_message
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _uart_xmit
  3339  0D4E                     _uart_xmit:	
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _uart_xmit: [wreg]
  3343                           ;uart_xmit@mydata_byte stored from wreg
  3344  0D4E  0020               	movlb	0	; select bank0
  3345  0D4F  00A0               	movwf	uart_xmit@mydata_byte
  3346  0D50                     l326:	
  3347                           ;launcher_functions.c: 284: while(!TXSTAbits.TRMT);
  3348                           
  3349  0D50  0023               	movlb	3	; select bank3
  3350  0D51  1C9E               	btfss	30,1	;volatile
  3351  0D52  2D50               	goto	l326
  3352                           
  3353                           ;launcher_functions.c: 285: TXREG = mydata_byte;
  3354  0D53  0020               	movlb	0	; select bank0
  3355  0D54  0820               	movf	uart_xmit@mydata_byte,w
  3356  0D55  0023               	movlb	3	; select bank3
  3357  0D56  009A               	movwf	26	;volatile
  3358  0D57  0008               	return
  3359  0D58                     __end_of_uart_xmit:	
  3360                           
  3361                           	psect	text8
  3362  0F5E                     __ptext8:	
  3363 ;; *************** function _compute_checksum *****************
  3364 ;; Defined at:
  3365 ;;		line 270 in file "launcher_functions.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  data            1    wreg     PTR unsigned char 
  3368 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3369 ;;  size            2    0[BANK0 ] int 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3372 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3373 ;;  x               2    6[BANK0 ] int 
  3374 ;;  checksum        1    4[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      unsigned char 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3384 ;;      Params:         0       2       0       0       0       0       0       0
  3385 ;;      Locals:         0       4       0       0       0       0       0       0
  3386 ;;      Temps:          0       2       0       0       0       0       0       0
  3387 ;;      Totals:         0       8       0       0       0       0       0       0
  3388 ;;Total ram usage:        8 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_uart_write_message
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _compute_checksum
  3400  0F5E                     _compute_checksum:	
  3401                           
  3402                           ;incstack = 0
  3403                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3404                           ;compute_checksum@data stored from wreg
  3405  0F5E  0020               	movlb	0	; select bank0
  3406  0F5F  00A5               	movwf	compute_checksum@data
  3407                           
  3408                           ;launcher_functions.c: 272: unsigned char checksum = 0;
  3409  0F60  01A4               	clrf	compute_checksum@checksum
  3410                           
  3411                           ;launcher_functions.c: 273: int x;
  3412                           ;launcher_functions.c: 274: for(x=0; x<size; x++)
  3413  0F61  01A6               	clrf	compute_checksum@x
  3414  0F62  01A7               	clrf	compute_checksum@x+1
  3415  0F63                     l1751:	
  3416  0F63  0827               	movf	compute_checksum@x+1,w
  3417  0F64  3A80               	xorlw	128
  3418  0F65  00A2               	movwf	??_compute_checksum
  3419  0F66  0821               	movf	compute_checksum@size+1,w
  3420  0F67  3A80               	xorlw	128
  3421  0F68  0222               	subwf	??_compute_checksum,w
  3422  0F69  1D03               	skipz
  3423  0F6A  2F6D               	goto	u1155
  3424  0F6B  0820               	movf	compute_checksum@size,w
  3425  0F6C  0226               	subwf	compute_checksum@x,w
  3426  0F6D                     u1155:	
  3427  0F6D  1803               	btfsc	3,0
  3428  0F6E  2F9D               	goto	l1753
  3429                           
  3430                           ;launcher_functions.c: 275: {
  3431                           ;launcher_functions.c: 276: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3432  0F6F  0020               	movlb	0	; select bank0
  3433  0F70  0826               	movf	compute_checksum@x,w
  3434  0F71  0725               	addwf	compute_checksum@data,w
  3435  0F72  00A2               	movwf	??_compute_checksum
  3436  0F73  0822               	movf	??_compute_checksum,w
  3437  0F74  0086               	movwf	6
  3438  0F75  0187               	clrf	7
  3439  0F76  0801               	movf	1,w
  3440  0F77  3A24               	xorlw	36
  3441  0F78  1903               	skipnz
  3442  0F79  2F98               	goto	l1749
  3443  0F7A  0826               	movf	compute_checksum@x,w
  3444  0F7B  0725               	addwf	compute_checksum@data,w
  3445  0F7C  00A2               	movwf	??_compute_checksum
  3446  0F7D  0822               	movf	??_compute_checksum,w
  3447  0F7E  0086               	movwf	6
  3448  0F7F  0187               	clrf	7
  3449  0F80  0801               	movf	1,w
  3450  0F81  3A2A               	xorlw	42
  3451  0F82  1903               	skipnz
  3452  0F83  2F98               	goto	l1749
  3453  0F84  0826               	movf	compute_checksum@x,w
  3454  0F85  0725               	addwf	compute_checksum@data,w
  3455  0F86  00A2               	movwf	??_compute_checksum
  3456  0F87  0822               	movf	??_compute_checksum,w
  3457  0F88  0086               	movwf	6
  3458  0F89  0187               	clrf	7
  3459  0F8A  0801               	movf	1,w
  3460  0F8B  3A21               	xorlw	33
  3461  0F8C  1903               	skipnz
  3462  0F8D  2F98               	goto	l1749
  3463                           
  3464                           ;launcher_functions.c: 277: checksum ^= data[x];
  3465  0F8E  0826               	movf	compute_checksum@x,w
  3466  0F8F  0725               	addwf	compute_checksum@data,w
  3467  0F90  00A2               	movwf	??_compute_checksum
  3468  0F91  0822               	movf	??_compute_checksum,w
  3469  0F92  0086               	movwf	6
  3470  0F93  0187               	clrf	7
  3471  0F94  0801               	movf	1,w
  3472  0F95  00A3               	movwf	??_compute_checksum+1
  3473  0F96  0823               	movf	??_compute_checksum+1,w
  3474  0F97  06A4               	xorwf	compute_checksum@checksum,f
  3475  0F98                     l1749:	
  3476  0F98  3001               	movlw	1
  3477  0F99  07A6               	addwf	compute_checksum@x,f
  3478  0F9A  3000               	movlw	0
  3479  0F9B  3DA7               	addwfc	compute_checksum@x+1,f
  3480  0F9C  2F63               	goto	l1751
  3481  0F9D                     l1753:	
  3482                           
  3483                           ;launcher_functions.c: 278: }
  3484                           ;launcher_functions.c: 279: return checksum;
  3485  0F9D  0020               	movlb	0	; select bank0
  3486  0F9E  0824               	movf	compute_checksum@checksum,w
  3487  0F9F  0008               	return
  3488  0FA0                     __end_of_compute_checksum:	
  3489                           
  3490                           	psect	text9
  3491  0537                     __ptext9:	
  3492 ;; *************** function _sprintf *****************
  3493 ;; Defined at:
  3494 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  sp              1    wreg     PTR unsigned char 
  3497 ;;		 -> SetupGPS@message(22), 
  3498 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  3499 ;;		 -> STR_2(18), STR_1(19), 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  3502 ;;		 -> SetupGPS@message(22), 
  3503 ;;  _val            4   34[BANK0 ] struct .
  3504 ;;  c               1   38[BANK0 ] char 
  3505 ;;  ap              1   32[BANK0 ] PTR void [1]
  3506 ;;		 -> ?_sprintf(2), 
  3507 ;;  prec            1   31[BANK0 ] char 
  3508 ;;  flag            1   30[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  2   20[BANK0 ] int 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3518 ;;      Params:         0       6       0       0       0       0       0       0
  3519 ;;      Locals:         0       9       0       0       0       0       0       0
  3520 ;;      Temps:          0       4       0       0       0       0       0       0
  3521 ;;      Totals:         0      19       0       0       0       0       0       0
  3522 ;;Total ram usage:       19 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    3
  3525 ;; This function calls:
  3526 ;;		___lwdiv
  3527 ;;		___lwmod
  3528 ;; This function is called by:
  3529 ;;		_SetupGPS
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _sprintf
  3535  0537                     _sprintf:	
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3539                           ;sprintf@sp stored from wreg
  3540  0537  0020               	movlb	0	; select bank0
  3541  0538  00C1               	movwf	sprintf@sp
  3542                           
  3543                           ;doprnt.c: 494: va_list ap;
  3544                           ;doprnt.c: 499: signed char c;
  3545                           ;doprnt.c: 506: signed char prec;
  3546                           ;doprnt.c: 508: unsigned char flag;
  3547                           ;doprnt.c: 527: union {
  3548                           ;doprnt.c: 528: unsigned int _val;
  3549                           ;doprnt.c: 529: struct {
  3550                           ;doprnt.c: 530: const char * _cp;
  3551                           ;doprnt.c: 531: unsigned _len;
  3552                           ;doprnt.c: 532: } _str;
  3553                           ;doprnt.c: 533: } _val;
  3554                           ;doprnt.c: 542: *ap = __va_start();
  3555  0539  3036               	movlw	(?_sprintf+2)& (0+255)
  3556  053A  00BA               	movwf	??_sprintf
  3557  053B  083A               	movf	??_sprintf,w
  3558  053C  00C0               	movwf	sprintf@ap
  3559  053D                     l1957:	
  3560                           ;doprnt.c: 545: while(c = *f++) {
  3561                           
  3562  053D  0835               	movf	sprintf@f+1,w
  3563  053E  00BB               	movwf	??_sprintf+1
  3564  053F  0834               	movf	sprintf@f,w
  3565  0540  00BA               	movwf	??_sprintf
  3566  0541  0AB4               	incf	sprintf@f,f
  3567  0542  1903               	skipnz
  3568  0543  0AB5               	incf	sprintf@f+1,f
  3569  0544  083A               	movf	??_sprintf,w
  3570  0545  0084               	movwf	4
  3571  0546  083B               	movf	??_sprintf+1,w
  3572  0547  0085               	movwf	5
  3573  0548  0800               	movf	0,w	;code access
  3574  0549  00BC               	movwf	??_sprintf+2
  3575  054A  083C               	movf	??_sprintf+2,w
  3576  054B  00C6               	movwf	sprintf@c
  3577  054C  08C6               	movf	sprintf@c,f
  3578  054D  1903               	btfsc	3,2
  3579  054E  2E38               	goto	l1959
  3580                           
  3581                           ;doprnt.c: 547: if(c != '%')
  3582  054F  0846               	movf	sprintf@c,w
  3583  0550  3A25               	xorlw	37
  3584  0551  1903               	skipnz
  3585  0552  2D5F               	goto	l1897
  3586                           
  3587                           ;doprnt.c: 549: {
  3588                           ;doprnt.c: 550: ((*sp++ = (c)));
  3589  0553  0846               	movf	sprintf@c,w
  3590  0554  00BA               	movwf	??_sprintf
  3591  0555  0841               	movf	sprintf@sp,w
  3592  0556  0086               	movwf	6
  3593  0557  0187               	clrf	7
  3594  0558  083A               	movf	??_sprintf,w
  3595  0559  0081               	movwf	1
  3596  055A  3001               	movlw	1
  3597  055B  00BA               	movwf	??_sprintf
  3598  055C  083A               	movf	??_sprintf,w
  3599  055D  07C1               	addwf	sprintf@sp,f
  3600                           
  3601                           ;doprnt.c: 551: continue;
  3602  055E  2D3D               	goto	l1957
  3603  055F                     l1897:	
  3604                           
  3605                           ;doprnt.c: 552: }
  3606                           ;doprnt.c: 557: flag = 0;
  3607  055F  01BE               	clrf	sprintf@flag
  3608                           
  3609                           ;doprnt.c: 644: switch(c = *f++) {
  3610  0560  2D90               	goto	l1917
  3611  0561                     l1899:	
  3612                           ;doprnt.c: 737: case 's':
  3613                           
  3614                           ;doprnt.c: 707: case 'i':
  3615                           ;doprnt.c: 708: break;
  3616                           
  3617                           ;doprnt.c: 706: case 'd':
  3618                           
  3619                           ;doprnt.c: 647: goto alldone;
  3620                           
  3621                           ;doprnt.c: 646: case 0:
  3622                           
  3623                           
  3624                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3625  0561  0840               	movf	sprintf@ap,w
  3626  0562  0086               	movwf	6
  3627  0563  0187               	clrf	7
  3628  0564  0801               	movf	1,w
  3629  0565  00C2               	movwf	sprintf@_val
  3630  0566  3000               	movlw	0
  3631  0567  00C3               	movwf	sprintf@_val+1
  3632  0568  3001               	movlw	1
  3633  0569  00BA               	movwf	??_sprintf
  3634  056A  083A               	movf	??_sprintf,w
  3635  056B  07C0               	addwf	sprintf@ap,f
  3636                           
  3637                           ;doprnt.c: 749: if(!_val._str._cp)
  3638  056C  0843               	movf	sprintf@_val+1,w
  3639  056D  0442               	iorwf	sprintf@_val,w
  3640  056E  1D03               	skipz
  3641  056F  2D74               	goto	l1913
  3642                           
  3643                           ;doprnt.c: 750: _val._str._cp = "(null)";
  3644  0570  302F               	movlw	low (STR_3| (0+32768))
  3645  0571  00C2               	movwf	sprintf@_val
  3646  0572  3088               	movlw	high (STR_3| (0+32768))
  3647  0573  00C3               	movwf	sprintf@_val+1
  3648  0574                     l1913:	
  3649                           ;doprnt.c: 786: while(*_val._str._cp)
  3650                           
  3651  0574  0842               	movf	sprintf@_val,w
  3652  0575  0084               	movwf	4
  3653  0576  0843               	movf	sprintf@_val+1,w
  3654  0577  0085               	movwf	5
  3655  0578  0800               	movf	0,w	;code access
  3656  0579  3800               	iorlw	0
  3657  057A  1903               	btfsc	3,2
  3658  057B  2D3D               	goto	l1957
  3659                           
  3660                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  3661  057C  0842               	movf	sprintf@_val,w
  3662  057D  0084               	movwf	4
  3663  057E  0843               	movf	sprintf@_val+1,w
  3664  057F  0085               	movwf	5
  3665  0580  0800               	movf	0,w	;code access
  3666  0581  00BA               	movwf	??_sprintf
  3667  0582  0841               	movf	sprintf@sp,w
  3668  0583  0086               	movwf	6
  3669  0584  0187               	clrf	7
  3670  0585  083A               	movf	??_sprintf,w
  3671  0586  0081               	movwf	1
  3672  0587  3001               	movlw	1
  3673  0588  07C2               	addwf	sprintf@_val,f
  3674  0589  3000               	movlw	0
  3675  058A  3DC3               	addwfc	sprintf@_val+1,f
  3676  058B  3001               	movlw	1
  3677  058C  00BA               	movwf	??_sprintf
  3678  058D  083A               	movf	??_sprintf,w
  3679  058E  07C1               	addwf	sprintf@sp,f
  3680  058F  2D74               	goto	l1913
  3681  0590                     l1917:	
  3682                           ;doprnt.c: 831: }
  3683                           
  3684                           ;doprnt.c: 822: continue;
  3685                           
  3686                           ;doprnt.c: 811: default:
  3687                           
  3688                           ;doprnt.c: 788: continue;
  3689                           
  3690  0590  0835               	movf	sprintf@f+1,w
  3691  0591  00BB               	movwf	??_sprintf+1
  3692  0592  0834               	movf	sprintf@f,w
  3693  0593  00BA               	movwf	??_sprintf
  3694  0594  0AB4               	incf	sprintf@f,f
  3695  0595  1903               	skipnz
  3696  0596  0AB5               	incf	sprintf@f+1,f
  3697  0597  083A               	movf	??_sprintf,w
  3698  0598  0084               	movwf	4
  3699  0599  083B               	movf	??_sprintf+1,w
  3700  059A  0085               	movwf	5
  3701  059B  0800               	movf	0,w	;code access
  3702  059C  00C6               	movwf	sprintf@c
  3703                           
  3704                           ; Switch size 1, requested type "space"
  3705                           ; Number of cases is 4, Range of values is 0 to 115
  3706                           ; switch strategies available:
  3707                           ; Name         Instructions Cycles
  3708                           ; simple_byte           13     7 (average)
  3709                           ; direct_byte          238     6 (fixed)
  3710                           ; jumptable            260     6 (fixed)
  3711                           ;	Chosen strategy is simple_byte
  3712  059D  3A00               	xorlw	0	; case 0
  3713  059E  1903               	skipnz
  3714  059F  2E38               	goto	l1959
  3715  05A0  3A64               	xorlw	100	; case 100
  3716  05A1  1903               	skipnz
  3717  05A2  2DAA               	goto	l1919
  3718  05A3  3A0D               	xorlw	13	; case 105
  3719  05A4  1903               	skipnz
  3720  05A5  2DAA               	goto	l1919
  3721  05A6  3A1A               	xorlw	26	; case 115
  3722  05A7  1903               	skipnz
  3723  05A8  2D61               	goto	l1899
  3724  05A9  2D3D               	goto	l1957
  3725  05AA                     l1919:	
  3726                           
  3727                           ;doprnt.c: 1262: {
  3728                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3729  05AA  0840               	movf	sprintf@ap,w
  3730  05AB  0086               	movwf	6
  3731  05AC  0187               	clrf	7
  3732  05AD  3F40               	moviw [0]fsr1
  3733  05AE  00C2               	movwf	sprintf@_val
  3734  05AF  3F41               	moviw [1]fsr1
  3735  05B0  00C3               	movwf	sprintf@_val+1
  3736  05B1  3002               	movlw	2
  3737  05B2  00BA               	movwf	??_sprintf
  3738  05B3  083A               	movf	??_sprintf,w
  3739  05B4  07C0               	addwf	sprintf@ap,f
  3740                           
  3741                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3742  05B5  1FC3               	btfss	sprintf@_val+1,7
  3743  05B6  2DC0               	goto	l1929
  3744                           
  3745                           ;doprnt.c: 1271: flag |= 0x03;
  3746  05B7  3003               	movlw	3
  3747  05B8  00BA               	movwf	??_sprintf
  3748  05B9  083A               	movf	??_sprintf,w
  3749  05BA  04BE               	iorwf	sprintf@flag,f
  3750                           
  3751                           ;doprnt.c: 1272: _val._val = -_val._val;
  3752  05BB  09C2               	comf	sprintf@_val,f
  3753  05BC  09C3               	comf	sprintf@_val+1,f
  3754  05BD  0AC2               	incf	sprintf@_val,f
  3755  05BE  1903               	skipnz
  3756  05BF  0AC3               	incf	sprintf@_val+1,f
  3757  05C0                     l1929:	
  3758                           
  3759                           ;doprnt.c: 1273: }
  3760                           ;doprnt.c: 1275: }
  3761                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3762  05C0  01C6               	clrf	sprintf@c
  3763  05C1  0AC6               	incf	sprintf@c,f
  3764  05C2  0846               	movf	sprintf@c,w
  3765  05C3  3A05               	xorlw	5
  3766  05C4  1903               	btfsc	3,2
  3767  05C5  2DE5               	goto	l1941
  3768  05C6                     l1933:	
  3769                           
  3770                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3771  05C6  0846               	movf	sprintf@c,w
  3772  05C7  00BA               	movwf	??_sprintf
  3773  05C8  01BB               	clrf	??_sprintf+1
  3774  05C9  35BA               	lslf	??_sprintf,f
  3775  05CA  0DBB               	rlf	??_sprintf+1,f
  3776  05CB  3000               	movlw	low (_dpowers| (0+32768))
  3777  05CC  073A               	addwf	??_sprintf,w
  3778  05CD  0084               	movwf	4
  3779  05CE  3088               	movlw	high (_dpowers| (0+32768))
  3780  05CF  3D3B               	addwfc	??_sprintf+1,w
  3781  05D0  0085               	movwf	5
  3782  05D1  3F00               	moviw [0]fsr0
  3783  05D2  00BC               	movwf	??_sprintf+2
  3784  05D3  3F01               	moviw [1]fsr0
  3785  05D4  00BD               	movwf	??_sprintf+3
  3786  05D5  083D               	movf	??_sprintf+3,w
  3787  05D6  0243               	subwf	sprintf@_val+1,w
  3788  05D7  1D03               	skipz
  3789  05D8  2DDB               	goto	u1495
  3790  05D9  083C               	movf	??_sprintf+2,w
  3791  05DA  0242               	subwf	sprintf@_val,w
  3792  05DB                     u1495:	
  3793  05DB  1C03               	btfss	3,0
  3794  05DC  2DE5               	goto	l1941
  3795                           
  3796                           ;doprnt.c: 1316: break;
  3797  05DD  3001               	movlw	1
  3798  05DE  00BA               	movwf	??_sprintf
  3799  05DF  083A               	movf	??_sprintf,w
  3800  05E0  07C6               	addwf	sprintf@c,f
  3801  05E1  0846               	movf	sprintf@c,w
  3802  05E2  3A05               	xorlw	5
  3803  05E3  1D03               	skipz
  3804  05E4  2DC6               	goto	l1933
  3805  05E5                     l1941:	
  3806                           
  3807                           ;doprnt.c: 1431: {
  3808                           ;doprnt.c: 1447: if(flag & 0x03)
  3809  05E5  083E               	movf	sprintf@flag,w
  3810  05E6  3903               	andlw	3
  3811  05E7  1903               	btfsc	3,2
  3812  05E8  2DF4               	goto	l1947
  3813                           
  3814                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3815  05E9  302D               	movlw	45
  3816  05EA  00BA               	movwf	??_sprintf
  3817  05EB  0841               	movf	sprintf@sp,w
  3818  05EC  0086               	movwf	6
  3819  05ED  0187               	clrf	7
  3820  05EE  083A               	movf	??_sprintf,w
  3821  05EF  0081               	movwf	1
  3822  05F0  3001               	movlw	1
  3823  05F1  00BA               	movwf	??_sprintf
  3824  05F2  083A               	movf	??_sprintf,w
  3825  05F3  07C1               	addwf	sprintf@sp,f
  3826  05F4                     l1947:	
  3827                           
  3828                           ;doprnt.c: 1478: }
  3829                           ;doprnt.c: 1481: prec = c;
  3830  05F4  0846               	movf	sprintf@c,w
  3831  05F5  00BA               	movwf	??_sprintf
  3832  05F6  083A               	movf	??_sprintf,w
  3833  05F7  00BF               	movwf	sprintf@prec
  3834  05F8                     l1955:	
  3835                           ;doprnt.c: 1483: while(prec--) {
  3836                           
  3837  05F8  30FF               	movlw	-1
  3838  05F9  00BA               	movwf	??_sprintf
  3839  05FA  083A               	movf	??_sprintf,w
  3840  05FB  07BF               	addwf	sprintf@prec,f
  3841  05FC  083F               	movf	sprintf@prec,w
  3842  05FD  3AFF               	xorlw	255
  3843  05FE  1903               	btfsc	3,2
  3844  05FF  2D3D               	goto	l1957
  3845                           
  3846                           ;doprnt.c: 1487: {
  3847                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3848  0600  300A               	movlw	10
  3849  0601  00AE               	movwf	___lwmod@divisor
  3850  0602  3000               	movlw	0
  3851  0603  00AF               	movwf	___lwmod@divisor+1
  3852  0604  083F               	movf	sprintf@prec,w
  3853  0605  00BA               	movwf	??_sprintf
  3854  0606  01BB               	clrf	??_sprintf+1
  3855  0607  35BA               	lslf	??_sprintf,f
  3856  0608  0DBB               	rlf	??_sprintf+1,f
  3857  0609  3000               	movlw	low (_dpowers| (0+32768))
  3858  060A  073A               	addwf	??_sprintf,w
  3859  060B  0084               	movwf	4
  3860  060C  3088               	movlw	high (_dpowers| (0+32768))
  3861  060D  3D3B               	addwfc	??_sprintf+1,w
  3862  060E  0085               	movwf	5
  3863  060F  3F00               	moviw [0]fsr0
  3864  0610  00A6               	movwf	___lwdiv@divisor
  3865  0611  3F01               	moviw [1]fsr0
  3866  0612  00A7               	movwf	___lwdiv@divisor+1
  3867  0613  0843               	movf	sprintf@_val+1,w
  3868  0614  01A9               	clrf	___lwdiv@dividend+1
  3869  0615  07A9               	addwf	___lwdiv@dividend+1,f
  3870  0616  0842               	movf	sprintf@_val,w
  3871  0617  01A8               	clrf	___lwdiv@dividend
  3872  0618  07A8               	addwf	___lwdiv@dividend,f
  3873  0619  318F  2727  3185   	fcall	___lwdiv
  3874  061C  0020               	movlb	0	; select bank0
  3875  061D  0827               	movf	?___lwdiv+1,w
  3876  061E  01B1               	clrf	___lwmod@dividend+1
  3877  061F  07B1               	addwf	___lwmod@dividend+1,f
  3878  0620  0826               	movf	?___lwdiv,w
  3879  0621  01B0               	clrf	___lwmod@dividend
  3880  0622  07B0               	addwf	___lwmod@dividend,f
  3881  0623  318E  26F8  3185   	fcall	___lwmod
  3882  0626  0020               	movlb	0	; select bank0
  3883  0627  082E               	movf	?___lwmod,w
  3884  0628  3E30               	addlw	48
  3885  0629  00BC               	movwf	??_sprintf+2
  3886  062A  083C               	movf	??_sprintf+2,w
  3887  062B  00C6               	movwf	sprintf@c
  3888                           
  3889                           ;doprnt.c: 1532: }
  3890                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3891  062C  0846               	movf	sprintf@c,w
  3892  062D  00BA               	movwf	??_sprintf
  3893  062E  0841               	movf	sprintf@sp,w
  3894  062F  0086               	movwf	6
  3895  0630  0187               	clrf	7
  3896  0631  083A               	movf	??_sprintf,w
  3897  0632  0081               	movwf	1
  3898  0633  3001               	movlw	1
  3899  0634  00BA               	movwf	??_sprintf
  3900  0635  083A               	movf	??_sprintf,w
  3901  0636  07C1               	addwf	sprintf@sp,f
  3902  0637  2DF8               	goto	l1955
  3903  0638                     l1959:	
  3904                           ;doprnt.c: 1534: }
  3905                           ;doprnt.c: 1542: }
  3906                           ;doprnt.c: 1544: alldone:
  3907                           
  3908                           
  3909                           ;doprnt.c: 1547: *sp = 0;
  3910  0638  0841               	movf	sprintf@sp,w
  3911  0639  0086               	movwf	6
  3912  063A  0187               	clrf	7
  3913  063B  0181               	clrf	1
  3914  063C  0008               	return
  3915  063D                     __end_of_sprintf:	
  3916                           ;doprnt.c: 1549: return 0;
  3917                           ;	Return value of _sprintf is never used
  3918                           
  3919                           
  3920                           	psect	text10
  3921  0EF8                     __ptext10:	
  3922 ;; *************** function ___lwmod *****************
  3923 ;; Defined at:
  3924 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  divisor         2   14[BANK0 ] unsigned int 
  3927 ;;  dividend        2   16[BANK0 ] unsigned int 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  counter         1   19[BANK0 ] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  2   14[BANK0 ] unsigned int 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3939 ;;      Params:         0       4       0       0       0       0       0       0
  3940 ;;      Locals:         0       1       0       0       0       0       0       0
  3941 ;;      Temps:          0       1       0       0       0       0       0       0
  3942 ;;      Totals:         0       6       0       0       0       0       0       0
  3943 ;;Total ram usage:        6 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_sprintf
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function ___lwmod
  3955  0EF8                     ___lwmod:	
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3959  0EF8  0020               	movlb	0	; select bank0
  3960  0EF9  082F               	movf	___lwmod@divisor+1,w
  3961  0EFA  042E               	iorwf	___lwmod@divisor,w
  3962  0EFB  1903               	skipnz
  3963  0EFC  2F20               	goto	l1817
  3964  0EFD  01B3               	clrf	___lwmod@counter
  3965  0EFE  0AB3               	incf	___lwmod@counter,f
  3966  0EFF                     l1807:	
  3967  0EFF  1BAF               	btfsc	___lwmod@divisor+1,7
  3968  0F00  2F0B               	goto	l1809
  3969  0F01  3001               	movlw	1
  3970  0F02                     u1295:	
  3971  0F02  35AE               	lslf	___lwmod@divisor,f
  3972  0F03  0DAF               	rlf	___lwmod@divisor+1,f
  3973  0F04  0B89               	decfsz	9,f
  3974  0F05  2F02               	goto	u1295
  3975  0F06  3001               	movlw	1
  3976  0F07  00B2               	movwf	??___lwmod
  3977  0F08  0832               	movf	??___lwmod,w
  3978  0F09  07B3               	addwf	___lwmod@counter,f
  3979  0F0A  2EFF               	goto	l1807
  3980  0F0B                     l1809:	
  3981  0F0B  082F               	movf	___lwmod@divisor+1,w
  3982  0F0C  0231               	subwf	___lwmod@dividend+1,w
  3983  0F0D  1D03               	skipz
  3984  0F0E  2F11               	goto	u1315
  3985  0F0F  082E               	movf	___lwmod@divisor,w
  3986  0F10  0230               	subwf	___lwmod@dividend,w
  3987  0F11                     u1315:	
  3988  0F11  1C03               	skipc
  3989  0F12  2F17               	goto	l1813
  3990  0F13  082E               	movf	___lwmod@divisor,w
  3991  0F14  02B0               	subwf	___lwmod@dividend,f
  3992  0F15  082F               	movf	___lwmod@divisor+1,w
  3993  0F16  3BB1               	subwfb	___lwmod@dividend+1,f
  3994  0F17                     l1813:	
  3995  0F17  3001               	movlw	1
  3996  0F18                     u1325:	
  3997  0F18  36AF               	lsrf	___lwmod@divisor+1,f
  3998  0F19  0CAE               	rrf	___lwmod@divisor,f
  3999  0F1A  0B89               	decfsz	9,f
  4000  0F1B  2F18               	goto	u1325
  4001  0F1C  3001               	movlw	1
  4002  0F1D  02B3               	subwf	___lwmod@counter,f
  4003  0F1E  1D03               	btfss	3,2
  4004  0F1F  2F0B               	goto	l1809
  4005  0F20                     l1817:	
  4006  0F20  0831               	movf	___lwmod@dividend+1,w
  4007  0F21  01AF               	clrf	?___lwmod+1
  4008  0F22  07AF               	addwf	?___lwmod+1,f
  4009  0F23  0830               	movf	___lwmod@dividend,w
  4010  0F24  01AE               	clrf	?___lwmod
  4011  0F25  07AE               	addwf	?___lwmod,f
  4012  0F26  0008               	return
  4013  0F27                     __end_of___lwmod:	
  4014                           
  4015                           	psect	text11
  4016  0F27                     __ptext11:	
  4017 ;; *************** function ___lwdiv *****************
  4018 ;; Defined at:
  4019 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  divisor         2    6[BANK0 ] unsigned int 
  4022 ;;  dividend        2    8[BANK0 ] unsigned int 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  quotient        2   11[BANK0 ] unsigned int 
  4025 ;;  counter         1   13[BANK0 ] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    6[BANK0 ] unsigned int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4035 ;;      Params:         0       4       0       0       0       0       0       0
  4036 ;;      Locals:         0       3       0       0       0       0       0       0
  4037 ;;      Temps:          0       1       0       0       0       0       0       0
  4038 ;;      Totals:         0       8       0       0       0       0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    2
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_DecodeGPS
  4046 ;;		_sprintf
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function ___lwdiv
  4052  0F27                     ___lwdiv:	
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4056  0F27  0020               	movlb	0	; select bank0
  4057  0F28  01AB               	clrf	___lwdiv@quotient
  4058  0F29  01AC               	clrf	___lwdiv@quotient+1
  4059  0F2A  0827               	movf	___lwdiv@divisor+1,w
  4060  0F2B  0426               	iorwf	___lwdiv@divisor,w
  4061  0F2C  1903               	skipnz
  4062  0F2D  2F57               	goto	l1795
  4063  0F2E  01AD               	clrf	___lwdiv@counter
  4064  0F2F  0AAD               	incf	___lwdiv@counter,f
  4065  0F30                     l1783:	
  4066  0F30  1BA7               	btfsc	___lwdiv@divisor+1,7
  4067  0F31  2F3C               	goto	l1785
  4068  0F32  3001               	movlw	1
  4069  0F33                     u1225:	
  4070  0F33  35A6               	lslf	___lwdiv@divisor,f
  4071  0F34  0DA7               	rlf	___lwdiv@divisor+1,f
  4072  0F35  0B89               	decfsz	9,f
  4073  0F36  2F33               	goto	u1225
  4074  0F37  3001               	movlw	1
  4075  0F38  00AA               	movwf	??___lwdiv
  4076  0F39  082A               	movf	??___lwdiv,w
  4077  0F3A  07AD               	addwf	___lwdiv@counter,f
  4078  0F3B  2F30               	goto	l1783
  4079  0F3C                     l1785:	
  4080  0F3C  3001               	movlw	1
  4081  0F3D                     u1245:	
  4082  0F3D  35AB               	lslf	___lwdiv@quotient,f
  4083  0F3E  0DAC               	rlf	___lwdiv@quotient+1,f
  4084  0F3F  0B89               	decfsz	9,f
  4085  0F40  2F3D               	goto	u1245
  4086  0F41  0827               	movf	___lwdiv@divisor+1,w
  4087  0F42  0229               	subwf	___lwdiv@dividend+1,w
  4088  0F43  1D03               	skipz
  4089  0F44  2F47               	goto	u1255
  4090  0F45  0826               	movf	___lwdiv@divisor,w
  4091  0F46  0228               	subwf	___lwdiv@dividend,w
  4092  0F47                     u1255:	
  4093  0F47  1C03               	skipc
  4094  0F48  2F4E               	goto	l1791
  4095  0F49  0826               	movf	___lwdiv@divisor,w
  4096  0F4A  02A8               	subwf	___lwdiv@dividend,f
  4097  0F4B  0827               	movf	___lwdiv@divisor+1,w
  4098  0F4C  3BA9               	subwfb	___lwdiv@dividend+1,f
  4099  0F4D  142B               	bsf	___lwdiv@quotient,0
  4100  0F4E                     l1791:	
  4101  0F4E  3001               	movlw	1
  4102  0F4F                     u1265:	
  4103  0F4F  36A7               	lsrf	___lwdiv@divisor+1,f
  4104  0F50  0CA6               	rrf	___lwdiv@divisor,f
  4105  0F51  0B89               	decfsz	9,f
  4106  0F52  2F4F               	goto	u1265
  4107  0F53  3001               	movlw	1
  4108  0F54  02AD               	subwf	___lwdiv@counter,f
  4109  0F55  1D03               	btfss	3,2
  4110  0F56  2F3C               	goto	l1785
  4111  0F57                     l1795:	
  4112  0F57  082C               	movf	___lwdiv@quotient+1,w
  4113  0F58  01A7               	clrf	?___lwdiv+1
  4114  0F59  07A7               	addwf	?___lwdiv+1,f
  4115  0F5A  082B               	movf	___lwdiv@quotient,w
  4116  0F5B  01A6               	clrf	?___lwdiv
  4117  0F5C  07A6               	addwf	?___lwdiv,f
  4118  0F5D  0008               	return
  4119  0F5E                     __end_of___lwdiv:	
  4120                           
  4121                           	psect	text12
  4122  03CA                     __ptext12:	
  4123 ;; *************** function _RecordMode *****************
  4124 ;; Defined at:
  4125 ;;		line 512 in file "launcher_functions.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  address         4   28[BANK0 ] long 
  4130 ;;  x               2   32[BANK0 ] int 
  4131 ;;  count           2   26[BANK0 ] int 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;		None               void
  4134 ;; Registers used:
  4135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4141 ;;      Params:         0       0       0       0       0       0       0       0
  4142 ;;      Locals:         0       8       0       0       0       0       0       0
  4143 ;;      Temps:          0       5       0       0       0       0       0       0
  4144 ;;      Totals:         0      13       0       0       0       0       0       0
  4145 ;;Total ram usage:       13 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    5
  4148 ;; This function calls:
  4149 ;;		_ReadBuffer
  4150 ;;		_WriteOverheadSPI
  4151 ;;		_WriteSPI
  4152 ;; This function is called by:
  4153 ;;		_main
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function _RecordMode
  4159  03CA                     _RecordMode:	
  4160                           
  4161                           ;launcher_functions.c: 514: long int address = 18;
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4165  03CA  3000               	movlw	0
  4166  03CB  0020               	movlb	0	; select bank0
  4167  03CC  00BF               	movwf	RecordMode@address+3
  4168  03CD  3000               	movlw	0
  4169  03CE  00BE               	movwf	RecordMode@address+2
  4170  03CF  3000               	movlw	0
  4171  03D0  00BD               	movwf	RecordMode@address+1
  4172  03D1  3012               	movlw	18
  4173  03D2  00BC               	movwf	RecordMode@address
  4174                           
  4175                           ;launcher_functions.c: 515: int count = 18;
  4176  03D3  3012               	movlw	18
  4177  03D4  00BA               	movwf	RecordMode@count
  4178  03D5  3000               	movlw	0
  4179  03D6  00BB               	movwf	RecordMode@count+1
  4180                           
  4181                           ;launcher_functions.c: 516: int x;
  4182                           ;launcher_functions.c: 518: (start) = 0;
  4183  03D7  01FB               	clrf	_start
  4184  03D8  01FC               	clrf	_start+1
  4185                           
  4186                           ;launcher_functions.c: 519: (end) = 0;
  4187  03D9  01F9               	clrf	_end
  4188  03DA  01FA               	clrf	_end+1
  4189                           
  4190                           ;launcher_functions.c: 522: WriteOverheadSPI(address);
  4191  03DB  083F               	movf	RecordMode@address+3,w
  4192  03DC  00AA               	movwf	WriteOverheadSPI@address+3
  4193  03DD  083E               	movf	RecordMode@address+2,w
  4194  03DE  00A9               	movwf	WriteOverheadSPI@address+2
  4195  03DF  083D               	movf	RecordMode@address+1,w
  4196  03E0  00A8               	movwf	WriteOverheadSPI@address+1
  4197  03E1  083C               	movf	RecordMode@address,w
  4198  03E2  00A7               	movwf	WriteOverheadSPI@address
  4199  03E3  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4200                           
  4201                           ;launcher_functions.c: 523: for(x=0;x<3;x++)
  4202  03E6  0020               	movlb	0	; select bank0
  4203  03E7  01C0               	clrf	RecordMode@x
  4204  03E8  01C1               	clrf	RecordMode@x+1
  4205  03E9  0841               	movf	RecordMode@x+1,w
  4206  03EA  3A80               	xorlw	128
  4207  03EB  00B5               	movwf	??_RecordMode
  4208  03EC  3080               	movlw	128
  4209  03ED  0235               	subwf	??_RecordMode,w
  4210  03EE  1D03               	skipz
  4211  03EF  2BF2               	goto	u1725
  4212  03F0  3003               	movlw	3
  4213  03F1  0240               	subwf	RecordMode@x,w
  4214  03F2                     u1725:	
  4215  03F2  1803               	btfsc	3,0
  4216  03F3  2C1A               	goto	l2259
  4217  03F4                     l2253:	
  4218                           
  4219                           ;launcher_functions.c: 524: {
  4220                           ;launcher_functions.c: 525: WriteSPI(validLongitude[x]);
  4221  03F4  0020               	movlb	0	; select bank0
  4222  03F5  3540               	lslf	RecordMode@x,w
  4223  03F6  3ED3               	addlw	_validLongitude& (0+255)
  4224  03F7  0086               	movwf	6
  4225  03F8  0187               	clrf	7
  4226  03F9  0801               	movf	1,w
  4227  03FA  318D  25AB  3183   	fcall	_WriteSPI
  4228                           
  4229                           ;launcher_functions.c: 526: WriteSPI(validLongitude[x]>>8);
  4230  03FD  0020               	movlb	0	; select bank0
  4231  03FE  3540               	lslf	RecordMode@x,w
  4232  03FF  3ED3               	addlw	_validLongitude& (0+255)
  4233  0400  0086               	movwf	6
  4234  0401  0187               	clrf	7
  4235  0402  3F40               	moviw [0]fsr1
  4236  0403  00B5               	movwf	??_RecordMode
  4237  0404  3F41               	moviw [1]fsr1
  4238  0405  00B6               	movwf	??_RecordMode+1
  4239  0406  0836               	movf	??_RecordMode+1,w
  4240  0407  318D  25AB  3183   	fcall	_WriteSPI
  4241  040A  3001               	movlw	1
  4242  040B  0020               	movlb	0	; select bank0
  4243  040C  07C0               	addwf	RecordMode@x,f
  4244  040D  3000               	movlw	0
  4245  040E  3DC1               	addwfc	RecordMode@x+1,f
  4246  040F  0841               	movf	RecordMode@x+1,w
  4247  0410  3A80               	xorlw	128
  4248  0411  00B5               	movwf	??_RecordMode
  4249  0412  3080               	movlw	128
  4250  0413  0235               	subwf	??_RecordMode,w
  4251  0414  1D03               	skipz
  4252  0415  2C18               	goto	u1735
  4253  0416  3003               	movlw	3
  4254  0417  0240               	subwf	RecordMode@x,w
  4255  0418                     u1735:	
  4256  0418  1C03               	skipc
  4257  0419  2BF4               	goto	l2253
  4258  041A                     l2259:	
  4259                           
  4260                           ;launcher_functions.c: 527: }
  4261                           ;launcher_functions.c: 528: WriteSPI(validNorthSouth);
  4262  041A  0021               	movlb	1	; select bank1
  4263  041B  0840               	movf	_validNorthSouth^(0+128),w
  4264  041C  318D  25AB  3183   	fcall	_WriteSPI
  4265                           
  4266                           ;launcher_functions.c: 529: for(x=0;x<3;x++)
  4267  041F  0020               	movlb	0	; select bank0
  4268  0420  01C0               	clrf	RecordMode@x
  4269  0421  01C1               	clrf	RecordMode@x+1
  4270  0422  0841               	movf	RecordMode@x+1,w
  4271  0423  3A80               	xorlw	128
  4272  0424  00B5               	movwf	??_RecordMode
  4273  0425  3080               	movlw	128
  4274  0426  0235               	subwf	??_RecordMode,w
  4275  0427  1D03               	skipz
  4276  0428  2C2B               	goto	u1745
  4277  0429  3003               	movlw	3
  4278  042A  0240               	subwf	RecordMode@x,w
  4279  042B                     u1745:	
  4280  042B  1803               	btfsc	3,0
  4281  042C  2C53               	goto	l2273
  4282  042D                     l2267:	
  4283                           
  4284                           ;launcher_functions.c: 530: {
  4285                           ;launcher_functions.c: 531: WriteSPI(validLatitude[x]);
  4286  042D  0020               	movlb	0	; select bank0
  4287  042E  3540               	lslf	RecordMode@x,w
  4288  042F  3ECD               	addlw	_validLatitude& (0+255)
  4289  0430  0086               	movwf	6
  4290  0431  0187               	clrf	7
  4291  0432  0801               	movf	1,w
  4292  0433  318D  25AB  3183   	fcall	_WriteSPI
  4293                           
  4294                           ;launcher_functions.c: 532: WriteSPI(validLatitude[x]>>8);
  4295  0436  0020               	movlb	0	; select bank0
  4296  0437  3540               	lslf	RecordMode@x,w
  4297  0438  3ECD               	addlw	_validLatitude& (0+255)
  4298  0439  0086               	movwf	6
  4299  043A  0187               	clrf	7
  4300  043B  3F40               	moviw [0]fsr1
  4301  043C  00B5               	movwf	??_RecordMode
  4302  043D  3F41               	moviw [1]fsr1
  4303  043E  00B6               	movwf	??_RecordMode+1
  4304  043F  0836               	movf	??_RecordMode+1,w
  4305  0440  318D  25AB  3183   	fcall	_WriteSPI
  4306  0443  3001               	movlw	1
  4307  0444  0020               	movlb	0	; select bank0
  4308  0445  07C0               	addwf	RecordMode@x,f
  4309  0446  3000               	movlw	0
  4310  0447  3DC1               	addwfc	RecordMode@x+1,f
  4311  0448  0841               	movf	RecordMode@x+1,w
  4312  0449  3A80               	xorlw	128
  4313  044A  00B5               	movwf	??_RecordMode
  4314  044B  3080               	movlw	128
  4315  044C  0235               	subwf	??_RecordMode,w
  4316  044D  1D03               	skipz
  4317  044E  2C51               	goto	u1755
  4318  044F  3003               	movlw	3
  4319  0450  0240               	subwf	RecordMode@x,w
  4320  0451                     u1755:	
  4321  0451  1C03               	skipc
  4322  0452  2C2D               	goto	l2267
  4323  0453                     l2273:	
  4324                           
  4325                           ;launcher_functions.c: 533: }
  4326                           ;launcher_functions.c: 534: WriteSPI(validEastWest);
  4327  0453  0021               	movlb	1	; select bank1
  4328  0454  083F               	movf	_validEastWest^(0+128),w
  4329  0455  318D  25AB  3183   	fcall	_WriteSPI
  4330                           
  4331                           ;launcher_functions.c: 536: TMR1IF = 0;
  4332  0458  0020               	movlb	0	; select bank0
  4333  0459  1011               	bcf	17,0	;volatile
  4334                           
  4335                           ;launcher_functions.c: 537: TMR1IE = 1;
  4336  045A  0021               	movlb	1	; select bank1
  4337  045B  1411               	bsf	17,0	;volatile
  4338                           
  4339                           ;launcher_functions.c: 538: TMR1ON = 1;
  4340  045C  0020               	movlb	0	; select bank0
  4341  045D  1418               	bsf	24,0	;volatile
  4342  045E                     l2297:	
  4343                           ;launcher_functions.c: 540: while((recordFlag) && (address < 131072))
  4344                           
  4345  045E  0021               	movlb	1	; select bank1
  4346  045F  085D               	movf	_recordFlag^(0+128),w
  4347  0460  1903               	btfsc	3,2
  4348  0461  2CAF               	goto	l420
  4349  0462  0020               	movlb	0	; select bank0
  4350  0463  083F               	movf	RecordMode@address+3,w
  4351  0464  3A80               	xorlw	128
  4352  0465  00B5               	movwf	??_RecordMode
  4353  0466  3000               	movlw	0
  4354  0467  3A80               	xorlw	128
  4355  0468  0235               	subwf	??_RecordMode,w
  4356  0469  1D03               	skipz
  4357  046A  2C75               	goto	u1793
  4358  046B  3002               	movlw	2
  4359  046C  023E               	subwf	RecordMode@address+2,w
  4360  046D  1D03               	skipz
  4361  046E  2C75               	goto	u1793
  4362  046F  3000               	movlw	0
  4363  0470  023D               	subwf	RecordMode@address+1,w
  4364  0471  1D03               	skipz
  4365  0472  2C75               	goto	u1793
  4366  0473  3000               	movlw	0
  4367  0474  023C               	subwf	RecordMode@address,w
  4368  0475                     u1793:	
  4369  0475  1803               	btfsc	3,0
  4370  0476  2CAE               	goto	u1790
  4371                           
  4372                           ;launcher_functions.c: 541: {
  4373                           ;launcher_functions.c: 542: if(count>=256)
  4374  0477  083B               	movf	RecordMode@count+1,w
  4375  0478  3A80               	xorlw	128
  4376  0479  00B5               	movwf	??_RecordMode
  4377  047A  3081               	movlw	129
  4378  047B  0235               	subwf	??_RecordMode,w
  4379  047C  1D03               	skipz
  4380  047D  2C80               	goto	u1765
  4381  047E  3000               	movlw	0
  4382  047F  023A               	subwf	RecordMode@count,w
  4383  0480                     u1765:	
  4384  0480  1C03               	skipc
  4385  0481  2C92               	goto	l2289
  4386                           
  4387                           ;launcher_functions.c: 543: {
  4388                           ;launcher_functions.c: 544: LATC2 = (0);
  4389  0482  0022               	movlb	2	; select bank2
  4390  0483  110E               	bcf	14,2	;volatile
  4391                           
  4392                           ;launcher_functions.c: 545: count = 0;
  4393  0484  0020               	movlb	0	; select bank0
  4394  0485  01BA               	clrf	RecordMode@count
  4395  0486  01BB               	clrf	RecordMode@count+1
  4396                           
  4397                           ;launcher_functions.c: 546: WriteOverheadSPI(address);
  4398  0487  083F               	movf	RecordMode@address+3,w
  4399  0488  00AA               	movwf	WriteOverheadSPI@address+3
  4400  0489  083E               	movf	RecordMode@address+2,w
  4401  048A  00A9               	movwf	WriteOverheadSPI@address+2
  4402  048B  083D               	movf	RecordMode@address+1,w
  4403  048C  00A8               	movwf	WriteOverheadSPI@address+1
  4404  048D  083C               	movf	RecordMode@address,w
  4405  048E  00A7               	movwf	WriteOverheadSPI@address
  4406  048F  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4407  0492                     l2289:	
  4408                           
  4409                           ;launcher_functions.c: 547: }
  4410                           ;launcher_functions.c: 548: if(!((((start))==((end)))?(1):(0)))
  4411  0492  087A               	movf	_end+1,w
  4412  0493  067C               	xorwf	_start+1,w
  4413  0494  1D03               	skipz
  4414  0495  2C98               	goto	u1775
  4415  0496  0879               	movf	_end,w
  4416  0497  067B               	xorwf	_start,w
  4417  0498                     u1775:	
  4418  0498  1903               	skipnz
  4419  0499  2C5E               	goto	l2297
  4420                           
  4421                           ;launcher_functions.c: 549: {
  4422                           ;launcher_functions.c: 550: WriteSPI(ReadBuffer());
  4423  049A  318D  25EB  3183   	fcall	_ReadBuffer
  4424  049D  318D  25AB  3183   	fcall	_WriteSPI
  4425                           
  4426                           ;launcher_functions.c: 551: address++;
  4427  04A0  3001               	movlw	1
  4428  04A1  0020               	movlb	0	; select bank0
  4429  04A2  07BC               	addwf	RecordMode@address,f
  4430  04A3  3000               	movlw	0
  4431  04A4  3DBD               	addwfc	RecordMode@address+1,f
  4432  04A5  3000               	movlw	0
  4433  04A6  3DBE               	addwfc	RecordMode@address+2,f
  4434  04A7  3000               	movlw	0
  4435  04A8  3DBF               	addwfc	RecordMode@address+3,f
  4436                           
  4437                           ;launcher_functions.c: 552: count++;
  4438  04A9  3001               	movlw	1
  4439  04AA  07BA               	addwf	RecordMode@count,f
  4440  04AB  3000               	movlw	0
  4441  04AC  3DBB               	addwfc	RecordMode@count+1,f
  4442  04AD  2C5E               	goto	l2297
  4443  04AE                     u1790:	
  4444  04AE  0021               	movlb	1	; select bank1
  4445  04AF                     l420:	
  4446                           
  4447                           ;launcher_functions.c: 553: }
  4448                           ;launcher_functions.c: 554: }
  4449                           ;launcher_functions.c: 555: LATC2 = (0);
  4450  04AF  0022               	movlb	2	; select bank2
  4451  04B0  110E               	bcf	14,2	;volatile
  4452                           
  4453                           ;launcher_functions.c: 556: TMR1IE = 0;
  4454  04B1  0021               	movlb	1	; select bank1
  4455  04B2  1011               	bcf	17,0	;volatile
  4456                           
  4457                           ;launcher_functions.c: 557: TMR1ON = 0;
  4458  04B3  0020               	movlb	0	; select bank0
  4459  04B4  1018               	bcf	24,0	;volatile
  4460                           
  4461                           ;launcher_functions.c: 558: _delay((unsigned long)((5)*(16000000/4000.0)));
  4462  04B5  301A               	movlw	26
  4463  04B6  00B6               	movwf	??_RecordMode+1
  4464  04B7  30F8               	movlw	248
  4465  04B8  00B5               	movwf	??_RecordMode
  4466  04B9                     u2227:	
  4467  04B9  0BB5               	decfsz	??_RecordMode,f
  4468  04BA  2CB9               	goto	u2227
  4469  04BB  0BB6               	decfsz	??_RecordMode+1,f
  4470  04BC  2CB9               	goto	u2227
  4471  04BD  0000               	nop
  4472                           
  4473                           ;launcher_functions.c: 559: WriteOverheadSPI(0x0000000E);
  4474  04BE  3000               	movlw	0
  4475  04BF  0020               	movlb	0	; select bank0
  4476  04C0  00AA               	movwf	WriteOverheadSPI@address+3
  4477  04C1  3000               	movlw	0
  4478  04C2  00A9               	movwf	WriteOverheadSPI@address+2
  4479  04C3  3000               	movlw	0
  4480  04C4  00A8               	movwf	WriteOverheadSPI@address+1
  4481  04C5  300E               	movlw	14
  4482  04C6  00A7               	movwf	WriteOverheadSPI@address
  4483  04C7  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4484                           
  4485                           ;launcher_functions.c: 560: if(address >= 131072)
  4486  04CA  0020               	movlb	0	; select bank0
  4487  04CB  083F               	movf	RecordMode@address+3,w
  4488  04CC  3A80               	xorlw	128
  4489  04CD  00B5               	movwf	??_RecordMode
  4490  04CE  3000               	movlw	0
  4491  04CF  3A80               	xorlw	128
  4492  04D0  0235               	subwf	??_RecordMode,w
  4493  04D1  1D03               	skipz
  4494  04D2  2CDD               	goto	u1803
  4495  04D3  3002               	movlw	2
  4496  04D4  023E               	subwf	RecordMode@address+2,w
  4497  04D5  1D03               	skipz
  4498  04D6  2CDD               	goto	u1803
  4499  04D7  3000               	movlw	0
  4500  04D8  023D               	subwf	RecordMode@address+1,w
  4501  04D9  1D03               	skipz
  4502  04DA  2CDD               	goto	u1803
  4503  04DB  3000               	movlw	0
  4504  04DC  023C               	subwf	RecordMode@address,w
  4505  04DD                     u1803:	
  4506  04DD  1C03               	skipc
  4507  04DE  2CED               	goto	l2309
  4508                           
  4509                           ;launcher_functions.c: 561: {
  4510                           ;launcher_functions.c: 562: WriteSPI(131072 - 1);
  4511  04DF  30FF               	movlw	255
  4512  04E0  318D  25AB  3183   	fcall	_WriteSPI
  4513                           
  4514                           ;launcher_functions.c: 563: WriteSPI((131072 - 1)>>8);
  4515  04E3  30FF               	movlw	255
  4516  04E4  318D  25AB  3183   	fcall	_WriteSPI
  4517                           
  4518                           ;launcher_functions.c: 564: WriteSPI((131072 - 1)>>16);
  4519  04E7  3001               	movlw	1
  4520  04E8  318D  25AB  3183   	fcall	_WriteSPI
  4521                           
  4522                           ;launcher_functions.c: 565: WriteSPI((131072 - 1)>>24);
  4523  04EB  3000               	movlw	0
  4524  04EC  2D2E               	goto	L3
  4525  04ED                     l2309:	
  4526                           ;launcher_functions.c: 566: }
  4527                           
  4528                           
  4529                           ;launcher_functions.c: 567: else
  4530                           ;launcher_functions.c: 568: {
  4531                           ;launcher_functions.c: 569: WriteSPI(address);
  4532  04ED  0020               	movlb	0	; select bank0
  4533  04EE  083C               	movf	RecordMode@address,w
  4534  04EF  318D  25AB  3183   	fcall	_WriteSPI
  4535                           
  4536                           ;launcher_functions.c: 570: WriteSPI(address>>8);
  4537  04F2  0020               	movlb	0	; select bank0
  4538  04F3  083C               	movf	RecordMode@address,w
  4539  04F4  00B5               	movwf	??_RecordMode
  4540  04F5  083D               	movf	RecordMode@address+1,w
  4541  04F6  00B6               	movwf	??_RecordMode+1
  4542  04F7  083E               	movf	RecordMode@address+2,w
  4543  04F8  00B7               	movwf	??_RecordMode+2
  4544  04F9  083F               	movf	RecordMode@address+3,w
  4545  04FA  00B8               	movwf	??_RecordMode+3
  4546  04FB  3008               	movlw	8
  4547  04FC  00B9               	movwf	??_RecordMode+4
  4548  04FD                     u1815:	
  4549  04FD  37B8               	asrf	??_RecordMode+3,f
  4550  04FE  0CB7               	rrf	??_RecordMode+2,f
  4551  04FF  0CB6               	rrf	??_RecordMode+1,f
  4552  0500  0CB5               	rrf	??_RecordMode,f
  4553  0501  0BB9               	decfsz	??_RecordMode+4,f
  4554  0502  2CFD               	goto	u1815
  4555  0503  0835               	movf	??_RecordMode,w
  4556  0504  318D  25AB  3183   	fcall	_WriteSPI
  4557                           
  4558                           ;launcher_functions.c: 571: WriteSPI(address>>16);
  4559  0507  0020               	movlb	0	; select bank0
  4560  0508  083C               	movf	RecordMode@address,w
  4561  0509  00B5               	movwf	??_RecordMode
  4562  050A  083D               	movf	RecordMode@address+1,w
  4563  050B  00B6               	movwf	??_RecordMode+1
  4564  050C  083E               	movf	RecordMode@address+2,w
  4565  050D  00B7               	movwf	??_RecordMode+2
  4566  050E  083F               	movf	RecordMode@address+3,w
  4567  050F  00B8               	movwf	??_RecordMode+3
  4568  0510  3010               	movlw	16
  4569  0511  00B9               	movwf	??_RecordMode+4
  4570  0512                     u1825:	
  4571  0512  37B8               	asrf	??_RecordMode+3,f
  4572  0513  0CB7               	rrf	??_RecordMode+2,f
  4573  0514  0CB6               	rrf	??_RecordMode+1,f
  4574  0515  0CB5               	rrf	??_RecordMode,f
  4575  0516  0BB9               	decfsz	??_RecordMode+4,f
  4576  0517  2D12               	goto	u1825
  4577  0518  0835               	movf	??_RecordMode,w
  4578  0519  318D  25AB  3183   	fcall	_WriteSPI
  4579                           
  4580                           ;launcher_functions.c: 572: WriteSPI(address>>24);
  4581  051C  0020               	movlb	0	; select bank0
  4582  051D  083C               	movf	RecordMode@address,w
  4583  051E  00B5               	movwf	??_RecordMode
  4584  051F  083D               	movf	RecordMode@address+1,w
  4585  0520  00B6               	movwf	??_RecordMode+1
  4586  0521  083E               	movf	RecordMode@address+2,w
  4587  0522  00B7               	movwf	??_RecordMode+2
  4588  0523  083F               	movf	RecordMode@address+3,w
  4589  0524  00B8               	movwf	??_RecordMode+3
  4590  0525  3018               	movlw	24
  4591  0526  00B9               	movwf	??_RecordMode+4
  4592  0527                     u1835:	
  4593  0527  37B8               	asrf	??_RecordMode+3,f
  4594  0528  0CB7               	rrf	??_RecordMode+2,f
  4595  0529  0CB6               	rrf	??_RecordMode+1,f
  4596  052A  0CB5               	rrf	??_RecordMode,f
  4597  052B  0BB9               	decfsz	??_RecordMode+4,f
  4598  052C  2D27               	goto	u1835
  4599  052D  0835               	movf	??_RecordMode,w
  4600  052E                     L3:	
  4601  052E  318D  25AB         	fcall	_WriteSPI
  4602                           
  4603                           ;launcher_functions.c: 573: }
  4604                           ;launcher_functions.c: 574: LATC2 = (0);
  4605  0530  0022               	movlb	2	; select bank2
  4606  0531  110E               	bcf	14,2	;volatile
  4607                           
  4608                           ;launcher_functions.c: 575: (start) = 0;
  4609  0532  01FB               	clrf	_start
  4610  0533  01FC               	clrf	_start+1
  4611                           
  4612                           ;launcher_functions.c: 576: (end) = 0;
  4613  0534  01F9               	clrf	_end
  4614  0535  01FA               	clrf	_end+1
  4615  0536  0008               	return
  4616  0537                     __end_of_RecordMode:	
  4617                           
  4618                           	psect	text13
  4619  0FA0                     __ptext13:	
  4620 ;; *************** function _WriteOverheadSPI *****************
  4621 ;; Defined at:
  4622 ;;		line 168 in file "launcher_functions.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  address         4    7[BANK0 ] long 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  4627 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;		None               void
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4637 ;;      Params:         0       4       0       0       0       0       0       0
  4638 ;;      Locals:         0       4       0       0       0       0       0       0
  4639 ;;      Temps:          0       6       0       0       0       0       0       0
  4640 ;;      Totals:         0      14       0       0       0       0       0       0
  4641 ;;Total ram usage:       14 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    4
  4644 ;; This function calls:
  4645 ;;		_ReadStatusSPI
  4646 ;;		_WriteSPI
  4647 ;; This function is called by:
  4648 ;;		_RecordMode
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _WriteOverheadSPI
  4654  0FA0                     _WriteOverheadSPI:	
  4655                           
  4656                           ;launcher_functions.c: 170: unsigned char address_bytes[3];
  4657                           ;launcher_functions.c: 171: unsigned char StatusReg;
  4658                           ;launcher_functions.c: 173: address_bytes[0]=(unsigned char)(address>>8);
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  4662  0FA0  0020               	movlb	0	; select bank0
  4663  0FA1  0827               	movf	WriteOverheadSPI@address,w
  4664  0FA2  00AB               	movwf	??_WriteOverheadSPI
  4665  0FA3  0828               	movf	WriteOverheadSPI@address+1,w
  4666  0FA4  00AC               	movwf	??_WriteOverheadSPI+1
  4667  0FA5  0829               	movf	WriteOverheadSPI@address+2,w
  4668  0FA6  00AD               	movwf	??_WriteOverheadSPI+2
  4669  0FA7  082A               	movf	WriteOverheadSPI@address+3,w
  4670  0FA8  00AE               	movwf	??_WriteOverheadSPI+3
  4671  0FA9  3008               	movlw	8
  4672  0FAA  00AF               	movwf	??_WriteOverheadSPI+4
  4673  0FAB                     u1345:	
  4674  0FAB  37AE               	asrf	??_WriteOverheadSPI+3,f
  4675  0FAC  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4676  0FAD  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4677  0FAE  0CAB               	rrf	??_WriteOverheadSPI,f
  4678  0FAF  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4679  0FB0  2FAB               	goto	u1345
  4680  0FB1  082B               	movf	??_WriteOverheadSPI,w
  4681  0FB2  00B0               	movwf	??_WriteOverheadSPI+5
  4682  0FB3  0830               	movf	??_WriteOverheadSPI+5,w
  4683  0FB4  00B1               	movwf	WriteOverheadSPI@address_bytes
  4684                           
  4685                           ;launcher_functions.c: 174: address_bytes[1]=(unsigned char)(address>>4);
  4686  0FB5  0827               	movf	WriteOverheadSPI@address,w
  4687  0FB6  00AB               	movwf	??_WriteOverheadSPI
  4688  0FB7  0828               	movf	WriteOverheadSPI@address+1,w
  4689  0FB8  00AC               	movwf	??_WriteOverheadSPI+1
  4690  0FB9  0829               	movf	WriteOverheadSPI@address+2,w
  4691  0FBA  00AD               	movwf	??_WriteOverheadSPI+2
  4692  0FBB  082A               	movf	WriteOverheadSPI@address+3,w
  4693  0FBC  00AE               	movwf	??_WriteOverheadSPI+3
  4694  0FBD  3004               	movlw	4
  4695  0FBE  00AF               	movwf	??_WriteOverheadSPI+4
  4696  0FBF                     u1355:	
  4697  0FBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  4698  0FC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4699  0FC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4700  0FC2  0CAB               	rrf	??_WriteOverheadSPI,f
  4701  0FC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4702  0FC4  2FBF               	goto	u1355
  4703  0FC5  082B               	movf	??_WriteOverheadSPI,w
  4704  0FC6  00B0               	movwf	??_WriteOverheadSPI+5
  4705  0FC7  0830               	movf	??_WriteOverheadSPI+5,w
  4706  0FC8  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  4707                           
  4708                           ;launcher_functions.c: 175: address_bytes[2]=(unsigned char)(address);
  4709  0FC9  0827               	movf	WriteOverheadSPI@address,w
  4710  0FCA  00AB               	movwf	??_WriteOverheadSPI
  4711  0FCB  082B               	movf	??_WriteOverheadSPI,w
  4712  0FCC  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  4713  0FCD                     l1833:	
  4714                           ;launcher_functions.c: 177: do
  4715                           
  4716                           
  4717                           ;launcher_functions.c: 178: {
  4718                           ;launcher_functions.c: 179: StatusReg = (ReadStatusSPI() & 0x01);
  4719  0FCD  318D  2576  318F   	fcall	_ReadStatusSPI
  4720  0FD0  3901               	andlw	1
  4721  0FD1  0020               	movlb	0	; select bank0
  4722  0FD2  00AB               	movwf	??_WriteOverheadSPI
  4723  0FD3  082B               	movf	??_WriteOverheadSPI,w
  4724  0FD4  00B4               	movwf	WriteOverheadSPI@StatusReg
  4725                           
  4726                           ;launcher_functions.c: 180: } while (StatusReg);
  4727  0FD5  08B4               	movf	WriteOverheadSPI@StatusReg,f
  4728  0FD6  1D03               	skipz
  4729  0FD7  2FCD               	goto	l1833
  4730                           
  4731                           ;launcher_functions.c: 183: LATC2 = (1);
  4732  0FD8  0022               	movlb	2	; select bank2
  4733  0FD9  150E               	bsf	14,2	;volatile
  4734                           
  4735                           ;launcher_functions.c: 184: WriteSPI((0x06));
  4736  0FDA  3006               	movlw	6
  4737  0FDB  318D  25AB  318F   	fcall	_WriteSPI
  4738                           
  4739                           ;launcher_functions.c: 185: LATC2 = (0);
  4740  0FDE  0022               	movlb	2	; select bank2
  4741  0FDF  110E               	bcf	14,2	;volatile
  4742  0FE0                     l296:	
  4743                           ;launcher_functions.c: 187: do
  4744                           
  4745                           
  4746                           ;launcher_functions.c: 188: {
  4747                           ;launcher_functions.c: 189: StatusReg = (ReadStatusSPI() & 0x02);
  4748  0FE0  318D  2576  318F   	fcall	_ReadStatusSPI
  4749  0FE3  3902               	andlw	2
  4750  0FE4  0020               	movlb	0	; select bank0
  4751  0FE5  00AB               	movwf	??_WriteOverheadSPI
  4752  0FE6  082B               	movf	??_WriteOverheadSPI,w
  4753  0FE7  00B4               	movwf	WriteOverheadSPI@StatusReg
  4754                           
  4755                           ;launcher_functions.c: 190: } while (!StatusReg);
  4756  0FE8  0834               	movf	WriteOverheadSPI@StatusReg,w
  4757  0FE9  1903               	btfsc	3,2
  4758  0FEA  2FE0               	goto	l296
  4759                           
  4760                           ;launcher_functions.c: 194: LATC2=(1);
  4761  0FEB  0022               	movlb	2	; select bank2
  4762  0FEC  150E               	bsf	14,2	;volatile
  4763                           
  4764                           ;launcher_functions.c: 195: WriteSPI((0x02));
  4765  0FED  3002               	movlw	2
  4766  0FEE  318D  25AB  318F   	fcall	_WriteSPI
  4767                           
  4768                           ;launcher_functions.c: 196: WriteSPI(address_bytes[0]);
  4769  0FF1  0020               	movlb	0	; select bank0
  4770  0FF2  0831               	movf	WriteOverheadSPI@address_bytes,w
  4771  0FF3  318D  25AB  318F   	fcall	_WriteSPI
  4772                           
  4773                           ;launcher_functions.c: 197: WriteSPI(address_bytes[1]);
  4774  0FF6  0020               	movlb	0	; select bank0
  4775  0FF7  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  4776  0FF8  318D  25AB  318F   	fcall	_WriteSPI
  4777                           
  4778                           ;launcher_functions.c: 198: WriteSPI(address_bytes[2]);
  4779  0FFB  0020               	movlb	0	; select bank0
  4780  0FFC  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  4781  0FFD  318D  25AB         	fcall	_WriteSPI
  4782  0FFF  0008               	return
  4783  1000                     __end_of_WriteOverheadSPI:	
  4784                           ;launcher_functions.c: 200: return;
  4785                           
  4786                           
  4787                           	psect	text14
  4788  0D76                     __ptext14:	
  4789 ;; *************** function _ReadStatusSPI *****************
  4790 ;; Defined at:
  4791 ;;		line 156 in file "launcher_functions.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  dataRead        1    6[BANK0 ] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      unsigned char 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, pclath, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4805 ;;      Params:         0       0       0       0       0       0       0       0
  4806 ;;      Locals:         0       1       0       0       0       0       0       0
  4807 ;;      Temps:          0       1       0       0       0       0       0       0
  4808 ;;      Totals:         0       2       0       0       0       0       0       0
  4809 ;;Total ram usage:        2 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    3
  4812 ;; This function calls:
  4813 ;;		_ReadSPI
  4814 ;;		_WriteSPI
  4815 ;; This function is called by:
  4816 ;;		_WriteOverheadSPI
  4817 ;;		_ReadOverheadSPI
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _ReadStatusSPI
  4823  0D76                     _ReadStatusSPI:	
  4824                           
  4825                           ;launcher_functions.c: 158: unsigned char dataRead;
  4826                           ;launcher_functions.c: 160: LATC2=(1);
  4827                           
  4828                           ;incstack = 0
  4829                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  4830  0D76  0022               	movlb	2	; select bank2
  4831  0D77  150E               	bsf	14,2	;volatile
  4832                           
  4833                           ;launcher_functions.c: 161: WriteSPI((0x05));
  4834  0D78  3005               	movlw	5
  4835  0D79  318D  25AB  318D   	fcall	_WriteSPI
  4836                           
  4837                           ;launcher_functions.c: 162: dataRead = ReadSPI();
  4838  0D7C  3187  27F2         	fcall	_ReadSPI
  4839  0D7E  0020               	movlb	0	; select bank0
  4840  0D7F  00A5               	movwf	??_ReadStatusSPI
  4841  0D80  0825               	movf	??_ReadStatusSPI,w
  4842  0D81  00A6               	movwf	ReadStatusSPI@dataRead
  4843                           
  4844                           ;launcher_functions.c: 163: LATC2=(0);
  4845  0D82  0022               	movlb	2	; select bank2
  4846  0D83  110E               	bcf	14,2	;volatile
  4847                           
  4848                           ;launcher_functions.c: 165: return(dataRead);
  4849  0D84  0020               	movlb	0	; select bank0
  4850  0D85  0826               	movf	ReadStatusSPI@dataRead,w
  4851  0D86  0008               	return
  4852  0D87                     __end_of_ReadStatusSPI:	
  4853                           
  4854                           	psect	text15
  4855  0DAB                     __ptext15:	
  4856 ;; *************** function _WriteSPI *****************
  4857 ;; Defined at:
  4858 ;;		line 136 in file "launcher_functions.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  databyte        1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  databyte        1    4[BANK0 ] unsigned char 
  4863 ;;  temp            2    2[BANK0 ] unsigned int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;		None               void
  4866 ;; Registers used:
  4867 ;;		wreg
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4873 ;;      Params:         0       0       0       0       0       0       0       0
  4874 ;;      Locals:         0       3       0       0       0       0       0       0
  4875 ;;      Temps:          0       2       0       0       0       0       0       0
  4876 ;;      Totals:         0       5       0       0       0       0       0       0
  4877 ;;Total ram usage:        5 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    2
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_ReadStatusSPI
  4884 ;;		_WriteOverheadSPI
  4885 ;;		_RecordMode
  4886 ;;		_ReadOverheadSPI
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           
  4891                           ;psect for function _WriteSPI
  4892  0DAB                     _WriteSPI:	
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _WriteSPI: [wreg]
  4896                           ;WriteSPI@databyte stored from wreg
  4897  0DAB  0020               	movlb	0	; select bank0
  4898  0DAC  00A4               	movwf	WriteSPI@databyte
  4899                           
  4900                           ;launcher_functions.c: 138: unsigned int temp;
  4901                           ;launcher_functions.c: 139: temp = SSPBUF;
  4902  0DAD  0024               	movlb	4	; select bank4
  4903  0DAE  0811               	movf	17,w	;volatile
  4904  0DAF  0020               	movlb	0	; select bank0
  4905  0DB0  00A0               	movwf	??_WriteSPI
  4906  0DB1  01A1               	clrf	??_WriteSPI+1
  4907  0DB2  0820               	movf	??_WriteSPI,w
  4908  0DB3  00A2               	movwf	WriteSPI@temp
  4909  0DB4  0821               	movf	??_WriteSPI+1,w
  4910  0DB5  00A3               	movwf	WriteSPI@temp+1
  4911                           
  4912                           ;launcher_functions.c: 140: PIR1bits.SSP1IF=0;
  4913  0DB6  1191               	bcf	17,3	;volatile
  4914                           
  4915                           ;launcher_functions.c: 141: SSPBUF = databyte;
  4916  0DB7  0824               	movf	WriteSPI@databyte,w
  4917  0DB8  0024               	movlb	4	; select bank4
  4918  0DB9  0091               	movwf	17	;volatile
  4919  0DBA                     l279:	
  4920                           ;launcher_functions.c: 142: while(!PIR1bits.SSP1IF);
  4921                           
  4922  0DBA  0020               	movlb	0	; select bank0
  4923  0DBB  1991               	btfsc	17,3	;volatile
  4924  0DBC  0008               	return
  4925  0DBD  2DBA               	goto	l279
  4926  0DBE                     __end_of_WriteSPI:	
  4927                           
  4928                           	psect	text16
  4929  07F2                     __ptext16:	
  4930 ;; *************** function _ReadSPI *****************
  4931 ;; Defined at:
  4932 ;;		line 145 in file "launcher_functions.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  dataByte        1    1[BANK0 ] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      unsigned char 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4946 ;;      Params:         0       0       0       0       0       0       0       0
  4947 ;;      Locals:         0       1       0       0       0       0       0       0
  4948 ;;      Temps:          0       1       0       0       0       0       0       0
  4949 ;;      Totals:         0       2       0       0       0       0       0       0
  4950 ;;Total ram usage:        2 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    2
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_ReadStatusSPI
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _ReadSPI
  4962  07F2                     _ReadSPI:	
  4963                           
  4964                           ;launcher_functions.c: 147: unsigned char dataByte;
  4965                           ;launcher_functions.c: 149: SSPBUF = 0x00;
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in _ReadSPI: [wreg+status,2]
  4969  07F2  0024               	movlb	4	; select bank4
  4970  07F3  0191               	clrf	17	;volatile
  4971  07F4                     l285:	
  4972                           ;launcher_functions.c: 150: while(!SSPSTATbits.BF);
  4973                           
  4974  07F4  1C14               	btfss	20,0	;volatile
  4975  07F5  2FF4               	goto	l285
  4976                           
  4977                           ;launcher_functions.c: 151: dataByte = SSPBUF;
  4978  07F6  0811               	movf	17,w	;volatile
  4979  07F7  0020               	movlb	0	; select bank0
  4980  07F8  00A0               	movwf	??_ReadSPI
  4981  07F9  0820               	movf	??_ReadSPI,w
  4982  07FA  00A1               	movwf	ReadSPI@dataByte
  4983                           
  4984                           ;launcher_functions.c: 152: PIR1bits.SSP1IF=0;
  4985  07FB  1191               	bcf	17,3	;volatile
  4986                           
  4987                           ;launcher_functions.c: 153: return (dataByte);
  4988  07FC  0821               	movf	ReadSPI@dataByte,w
  4989  07FD  0008               	return
  4990  07FE                     __end_of_ReadSPI:	
  4991                           
  4992                           	psect	text17
  4993  0DEB                     __ptext17:	
  4994 ;; *************** function _ReadBuffer *****************
  4995 ;; Defined at:
  4996 ;;		line 215 in file "launcher_functions.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  read_data       1    1[BANK0 ] unsigned char 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      unsigned char 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5010 ;;      Params:         0       0       0       0       0       0       0       0
  5011 ;;      Locals:         0       1       0       0       0       0       0       0
  5012 ;;      Temps:          0       1       0       0       0       0       0       0
  5013 ;;      Totals:         0       2       0       0       0       0       0       0
  5014 ;;Total ram usage:        2 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    2
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_RecordMode
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _ReadBuffer
  5026  0DEB                     _ReadBuffer:	
  5027                           
  5028                           ;launcher_functions.c: 217: unsigned char read_data;
  5029                           ;launcher_functions.c: 219: read_data = buffer[start];
  5030                           
  5031                           ;incstack = 0
  5032                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5033  0DEB  087B               	movf	_start,w
  5034  0DEC  3EA0               	addlw	_buffer& (0+255)
  5035  0DED  0086               	movwf	6
  5036  0DEE  3001               	movlw	1	; select bank3/4
  5037  0DEF  0087               	movwf	7
  5038  0DF0  0801               	movf	1,w
  5039  0DF1  0020               	movlb	0	; select bank0
  5040  0DF2  00A0               	movwf	??_ReadBuffer
  5041  0DF3  0820               	movf	??_ReadBuffer,w
  5042  0DF4  00A1               	movwf	ReadBuffer@read_data
  5043                           
  5044                           ;launcher_functions.c: 220: if (start == 51)
  5045  0DF5  3033               	movlw	51
  5046  0DF6  067B               	xorwf	_start,w
  5047  0DF7  047C               	iorwf	_start+1,w
  5048  0DF8  1D03               	skipz
  5049  0DF9  2DFD               	goto	l1853
  5050                           
  5051                           ;launcher_functions.c: 221: start = 0;
  5052  0DFA  01FB               	clrf	_start
  5053  0DFB  01FC               	clrf	_start+1
  5054  0DFC  2E01               	goto	l307
  5055  0DFD                     l1853:	
  5056                           
  5057                           ;launcher_functions.c: 222: else
  5058                           ;launcher_functions.c: 223: start++;
  5059  0DFD  3001               	movlw	1
  5060  0DFE  07FB               	addwf	_start,f
  5061  0DFF  3000               	movlw	0
  5062  0E00  3DFC               	addwfc	_start+1,f
  5063  0E01                     l307:	
  5064                           
  5065                           ;launcher_functions.c: 224: return read_data;
  5066  0E01  0821               	movf	ReadBuffer@read_data,w
  5067  0E02  0008               	return
  5068  0E03                     __end_of_ReadBuffer:	
  5069                           
  5070                           	psect	text18
  5071  0D3F                     __ptext18:	
  5072 ;; *************** function _InitWatchdog *****************
  5073 ;; Defined at:
  5074 ;;		line 127 in file "launcher_functions.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5088 ;;      Params:         0       0       0       0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _InitWatchdog
  5104  0D3F                     _InitWatchdog:	
  5105                           
  5106                           ;launcher_functions.c: 130: WDTCONbits.WDTPS = 0x0A;
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5110  0D3F  0021               	movlb	1	; select bank1
  5111  0D40  0817               	movf	23,w	;volatile
  5112  0D41  39C1               	andlw	-63
  5113  0D42  3814               	iorlw	20
  5114  0D43  0097               	movwf	23	;volatile
  5115                           
  5116                           ;launcher_functions.c: 131: WDTCONbits.SWDTEN = 0;
  5117  0D44  1017               	bcf	23,0	;volatile
  5118  0D45  0008               	return
  5119  0D46                     __end_of_InitWatchdog:	
  5120                           
  5121                           	psect	text19
  5122  0D58                     __ptext19:	
  5123 ;; *************** function _InitTimer1 *****************
  5124 ;; Defined at:
  5125 ;;		line 96 in file "launcher_functions.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5139 ;;      Params:         0       0       0       0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0
  5142 ;;      Totals:         0       0       0       0       0       0       0       0
  5143 ;;Total ram usage:        0 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    2
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _InitTimer1
  5155  0D58                     _InitTimer1:	
  5156                           
  5157                           ;launcher_functions.c: 98: T1CONbits.TMR1CS = 0;
  5158                           
  5159                           ;incstack = 0
  5160                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  5161  0D58  303F               	movlw	-193
  5162  0D59  0020               	movlb	0	; select bank0
  5163  0D5A  0598               	andwf	24,f	;volatile
  5164                           
  5165                           ;launcher_functions.c: 99: T1CONbits.T1CKPS = 2;
  5166  0D5B  0818               	movf	24,w	;volatile
  5167  0D5C  39CF               	andlw	-49
  5168  0D5D  3820               	iorlw	32
  5169  0D5E  0098               	movwf	24	;volatile
  5170                           
  5171                           ;launcher_functions.c: 100: T1CONbits.nT1SYNC = 1;
  5172  0D5F  1518               	bsf	24,2	;volatile
  5173                           
  5174                           ;launcher_functions.c: 101: T1GCONbits.TMR1GE = 0;
  5175  0D60  1399               	bcf	25,7	;volatile
  5176                           
  5177                           ;launcher_functions.c: 102: TMR1H = 0xFF;
  5178  0D61  30FF               	movlw	255
  5179  0D62  0097               	movwf	23	;volatile
  5180                           
  5181                           ;launcher_functions.c: 103: TMR1L = 0xCD;
  5182  0D63  30CD               	movlw	205
  5183  0D64  0096               	movwf	22	;volatile
  5184                           
  5185                           ;launcher_functions.c: 104: T1CONbits.TMR1ON = 1;
  5186  0D65  1418               	bsf	24,0	;volatile
  5187  0D66  0008               	return
  5188  0D67                     __end_of_InitTimer1:	
  5189                           
  5190                           	psect	text20
  5191  0D99                     __ptext20:	
  5192 ;; *************** function _InitSPI *****************
  5193 ;; Defined at:
  5194 ;;		line 108 in file "launcher_functions.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;		None               void
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5208 ;;      Params:         0       0       0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    2
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_main
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _InitSPI
  5224  0D99                     _InitSPI:	
  5225                           
  5226                           ;launcher_functions.c: 111: TRISCbits.TRISC2 = 0;
  5227                           
  5228                           ;incstack = 0
  5229                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5230  0D99  0021               	movlb	1	; select bank1
  5231  0D9A  110E               	bcf	14,2	;volatile
  5232                           
  5233                           ;launcher_functions.c: 112: TRISCbits.TRISC3 = 0;
  5234  0D9B  118E               	bcf	14,3	;volatile
  5235                           
  5236                           ;launcher_functions.c: 113: TRISCbits.TRISC4 = 1;
  5237  0D9C  160E               	bsf	14,4	;volatile
  5238                           
  5239                           ;launcher_functions.c: 114: TRISCbits.TRISC5 = 0;
  5240  0D9D  128E               	bcf	14,5	;volatile
  5241                           
  5242                           ;launcher_functions.c: 116: LATC2 = (0);
  5243  0D9E  0022               	movlb	2	; select bank2
  5244  0D9F  110E               	bcf	14,2	;volatile
  5245                           
  5246                           ;launcher_functions.c: 119: SSPCON1bits.SSPEN=0x00;
  5247  0DA0  0024               	movlb	4	; select bank4
  5248  0DA1  1295               	bcf	21,5	;volatile
  5249                           
  5250                           ;launcher_functions.c: 120: SSPCON1bits.SSPM=0x01;
  5251  0DA2  0815               	movf	21,w	;volatile
  5252  0DA3  39F0               	andlw	-16
  5253  0DA4  3801               	iorlw	1
  5254  0DA5  0095               	movwf	21	;volatile
  5255                           
  5256                           ;launcher_functions.c: 121: SSPCON1bits.CKP=0;
  5257  0DA6  1215               	bcf	21,4	;volatile
  5258                           
  5259                           ;launcher_functions.c: 122: SSPSTATbits.CKE=1;
  5260  0DA7  1714               	bsf	20,6	;volatile
  5261                           
  5262                           ;launcher_functions.c: 123: SSPSTATbits.SMP=0;
  5263  0DA8  1394               	bcf	20,7	;volatile
  5264                           
  5265                           ;launcher_functions.c: 124: SSPCON1bits.SSPEN=0x01;
  5266  0DA9  1695               	bsf	21,5	;volatile
  5267  0DAA  0008               	return
  5268  0DAB                     __end_of_InitSPI:	
  5269                           
  5270                           	psect	text21
  5271  0ECB                     __ptext21:	
  5272 ;; *************** function _InitGPIO *****************
  5273 ;; Defined at:
  5274 ;;		line 13 in file "launcher_functions.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;		None               void
  5281 ;; Registers used:
  5282 ;;		status,2
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5288 ;;      Params:         0       0       0       0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0
  5291 ;;      Totals:         0       0       0       0       0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _InitGPIO
  5304  0ECB                     _InitGPIO:	
  5305                           
  5306                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _InitGPIO: [status,2]
  5310  0ECB  0021               	movlb	1	; select bank1
  5311  0ECC  148C               	bsf	12,1	;volatile
  5312                           
  5313                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  5314  0ECD  0023               	movlb	3	; select bank3
  5315  0ECE  108C               	bcf	12,1	;volatile
  5316                           
  5317                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  5318  0ECF  0027               	movlb	7	; select bank7
  5319  0ED0  1491               	bsf	17,1	;volatile
  5320                           
  5321                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  5322  0ED1  1492               	bsf	18,1	;volatile
  5323                           
  5324                           ;launcher_functions.c: 22: IOCAF = 0x00;
  5325  0ED2  0193               	clrf	19	;volatile
  5326                           
  5327                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  5328  0ED3  158B               	bsf	11,3	;volatile
  5329                           
  5330                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  5331  0ED4  0021               	movlb	1	; select bank1
  5332  0ED5  158D               	bsf	13,3	;volatile
  5333                           
  5334                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  5335  0ED6  0023               	movlb	3	; select bank3
  5336  0ED7  118D               	bcf	13,3	;volatile
  5337                           
  5338                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  5339  0ED8  0027               	movlb	7	; select bank7
  5340  0ED9  1595               	bsf	21,3	;volatile
  5341                           
  5342                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  5343  0EDA  1594               	bsf	20,3	;volatile
  5344                           
  5345                           ;launcher_functions.c: 30: IOCBF = 0x00;
  5346  0EDB  0196               	clrf	22	;volatile
  5347                           
  5348                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  5349  0EDC  158B               	bsf	11,3	;volatile
  5350                           
  5351                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  5352  0EDD  0021               	movlb	1	; select bank1
  5353  0EDE  140C               	bsf	12,0	;volatile
  5354                           
  5355                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  5356  0EDF  150C               	bsf	12,2	;volatile
  5357                           
  5358                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  5359  0EE0  158C               	bsf	12,3	;volatile
  5360                           
  5361                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  5362  0EE1  120C               	bcf	12,4	;volatile
  5363                           
  5364                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  5365  0EE2  128C               	bcf	12,5	;volatile
  5366                           
  5367                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  5368  0EE3  130C               	bcf	12,6	;volatile
  5369                           
  5370                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  5371  0EE4  138C               	bcf	12,7	;volatile
  5372                           
  5373                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  5374  0EE5  100D               	bcf	13,0	;volatile
  5375                           
  5376                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  5377  0EE6  148D               	bsf	13,1	;volatile
  5378                           
  5379                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  5380  0EE7  110D               	bcf	13,2	;volatile
  5381                           
  5382                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  5383  0EE8  120D               	bcf	13,4	;volatile
  5384                           
  5385                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  5386  0EE9  128D               	bcf	13,5	;volatile
  5387                           
  5388                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  5389  0EEA  0020               	movlb	0	; select bank0
  5390  0EEB  100D               	bcf	13,0	;volatile
  5391                           
  5392                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  5393  0EEC  120D               	bcf	13,4	;volatile
  5394                           
  5395                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  5396  0EED  128D               	bcf	13,5	;volatile
  5397                           
  5398                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  5399  0EEE  0023               	movlb	3	; select bank3
  5400  0EEF  100D               	bcf	13,0	;volatile
  5401                           
  5402                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  5403  0EF0  108D               	bcf	13,1	;volatile
  5404                           
  5405                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  5406  0EF1  110D               	bcf	13,2	;volatile
  5407                           
  5408                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  5409  0EF2  120D               	bcf	13,4	;volatile
  5410                           
  5411                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  5412  0EF3  128D               	bcf	13,5	;volatile
  5413                           
  5414                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  5415  0EF4  0021               	movlb	1	; select bank1
  5416  0EF5  100E               	bcf	14,0	;volatile
  5417                           
  5418                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  5419  0EF6  108E               	bcf	14,1	;volatile
  5420  0EF7  0008               	return
  5421  0EF8                     __end_of_InitGPIO:	
  5422                           
  5423                           	psect	text22
  5424  0D46                     __ptext22:	
  5425 ;; *************** function _InitCLK *****************
  5426 ;; Defined at:
  5427 ;;		line 8 in file "launcher_functions.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;		None               void
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5441 ;;      Params:         0       0       0       0       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0
  5444 ;;      Totals:         0       0       0       0       0       0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    2
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_main
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           
  5456                           ;psect for function _InitCLK
  5457  0D46                     _InitCLK:	
  5458                           
  5459                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  5460                           
  5461                           ;incstack = 0
  5462                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  5463  0D46  3078               	movlw	120
  5464  0D47  0021               	movlb	1	; select bank1
  5465  0D48  0499               	iorwf	25,f	;volatile
  5466                           
  5467                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  5468  0D49  0819               	movf	25,w	;volatile
  5469  0D4A  39FC               	andlw	-4
  5470  0D4B  3802               	iorlw	2
  5471  0D4C  0099               	movwf	25	;volatile
  5472  0D4D  0008               	return
  5473  0D4E                     __end_of_InitCLK:	
  5474                           
  5475                           	psect	text23
  5476  0E03                     __ptext23:	
  5477 ;; *************** function _InitADC *****************
  5478 ;; Defined at:
  5479 ;;		line 73 in file "launcher_functions.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;		None               void
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5493 ;;      Params:         0       0       0       0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0
  5496 ;;      Totals:         0       0       0       0       0       0       0       0
  5497 ;;Total ram usage:        0 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    2
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_main
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function _InitADC
  5509  0E03                     _InitADC:	
  5510                           
  5511                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  5515  0E03  0021               	movlb	1	; select bank1
  5516  0E04  140C               	bsf	12,0	;volatile
  5517                           
  5518                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  5519  0E05  0023               	movlb	3	; select bank3
  5520  0E06  140C               	bsf	12,0	;volatile
  5521                           
  5522                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  5523  0E07  0021               	movlb	1	; select bank1
  5524  0E08  081E               	movf	30,w	;volatile
  5525  0E09  398F               	andlw	-113
  5526  0E0A  3850               	iorlw	80
  5527  0E0B  009E               	movwf	30	;volatile
  5528                           
  5529                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  5530  0E0C  30FC               	movlw	-4
  5531  0E0D  059E               	andwf	30,f	;volatile
  5532                           
  5533                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  5534  0E0E  111E               	bcf	30,2	;volatile
  5535                           
  5536                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  5537  0E0F  3083               	movlw	-125
  5538  0E10  059D               	andwf	29,f	;volatile
  5539                           
  5540                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  5541  0E11  300F               	movlw	15
  5542  0E12  049F               	iorwf	31,f	;volatile
  5543                           
  5544                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  5545  0E13  139E               	bcf	30,7	;volatile
  5546                           
  5547                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  5548  0E14  179D               	bsf	29,7	;volatile
  5549                           
  5550                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  5551  0E15  141D               	bsf	29,0	;volatile
  5552                           
  5553                           ;launcher_functions.c: 90: ADIF = 0;
  5554  0E16  0020               	movlb	0	; select bank0
  5555  0E17  1311               	bcf	17,6	;volatile
  5556                           
  5557                           ;launcher_functions.c: 91: ADIE = 1;
  5558  0E18  0021               	movlb	1	; select bank1
  5559  0E19  1711               	bsf	17,6	;volatile
  5560                           
  5561                           ;launcher_functions.c: 92: PEIE = 1;
  5562  0E1A  170B               	bsf	11,6	;volatile
  5563  0E1B  0008               	return
  5564  0E1C                     __end_of_InitADC:	
  5565                           
  5566                           	psect	text24
  5567  0E3A                     __ptext24:	
  5568 ;; *************** function _Hibernate *****************
  5569 ;; Defined at:
  5570 ;;		line 498 in file "launcher_functions.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  count           1    4[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;		None               void
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5584 ;;      Params:         0       0       0       0       0       0       0       0
  5585 ;;      Locals:         0       1       0       0       0       0       0       0
  5586 ;;      Temps:          0       1       0       0       0       0       0       0
  5587 ;;      Totals:         0       2       0       0       0       0       0       0
  5588 ;;Total ram usage:        2 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    3
  5591 ;; This function calls:
  5592 ;;		_ToggleSleepGPS
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _Hibernate
  5600  0E3A                     _Hibernate:	
  5601                           
  5602                           ;launcher_functions.c: 500: unsigned char count = 0;
  5603                           
  5604                           ;incstack = 0
  5605                           ; Regs used in _Hibernate: [wreg+status,2+status,0+pclath+cstack]
  5606  0E3A  0020               	movlb	0	; select bank0
  5607  0E3B  01A4               	clrf	Hibernate@count
  5608                           
  5609                           ;launcher_functions.c: 501: WDTCONbits.WDTPS = 14;
  5610  0E3C  0021               	movlb	1	; select bank1
  5611  0E3D  0817               	movf	23,w	;volatile
  5612  0E3E  39C1               	andlw	-63
  5613  0E3F  381C               	iorlw	28
  5614  0E40  0097               	movwf	23	;volatile
  5615                           
  5616                           ;launcher_functions.c: 502: WDTCONbits.SWDTEN = 1;
  5617  0E41  1417               	bsf	23,0	;volatile
  5618                           
  5619                           ;launcher_functions.c: 503: while(!recordFlag && count++ < 3)
  5620  0E42  2E4D               	goto	l2347
  5621  0E43                     l2349:	
  5622  0E43  3001               	movlw	1
  5623  0E44  0020               	movlb	0	; select bank0
  5624  0E45  00A3               	movwf	??_Hibernate
  5625  0E46  0823               	movf	??_Hibernate,w
  5626  0E47  07A4               	addwf	Hibernate@count,f
  5627  0E48  3004               	movlw	4
  5628  0E49  0224               	subwf	Hibernate@count,w
  5629  0E4A  1803               	btfsc	3,0
  5630  0E4B  2E51               	goto	l405
  5631  0E4C  0063               	sleep	;# 
  5632  0E4D                     l2347:	
  5633  0E4D  0021               	movlb	1	; select bank1
  5634  0E4E  08DD               	movf	_recordFlag^(0+128),f
  5635  0E4F  1903               	btfsc	3,2
  5636  0E50  2E43               	goto	l2349
  5637  0E51                     l405:	
  5638                           
  5639                           ;launcher_functions.c: 506: }
  5640                           ;launcher_functions.c: 507: WDTCONbits.SWDTEN = 0;
  5641  0E51  0021               	movlb	1	; select bank1
  5642  0E52  1017               	bcf	23,0	;volatile
  5643                           
  5644                           ;launcher_functions.c: 508: if(!PORTCbits.RC7)
  5645  0E53  0020               	movlb	0	; select bank0
  5646  0E54  1B8E               	btfsc	14,7	;volatile
  5647  0E55  0008               	return
  5648                           
  5649                           ;launcher_functions.c: 509: ToggleSleepGPS();
  5650  0E56  318E  269E         	fcall	_ToggleSleepGPS
  5651  0E58  0008               	return
  5652  0E59                     __end_of_Hibernate:	
  5653                           
  5654                           	psect	text25
  5655  0E9E                     __ptext25:	
  5656 ;; *************** function _ToggleSleepGPS *****************
  5657 ;; Defined at:
  5658 ;;		line 316 in file "launcher_functions.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;		None               void
  5665 ;; Registers used:
  5666 ;;		wreg
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5672 ;;      Params:         0       0       0       0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0
  5674 ;;      Temps:          0       3       0       0       0       0       0       0
  5675 ;;      Totals:         0       3       0       0       0       0       0       0
  5676 ;;Total ram usage:        3 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    2
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_main
  5683 ;;		_Hibernate
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           
  5688                           ;psect for function _ToggleSleepGPS
  5689  0E9E                     _ToggleSleepGPS:	
  5690                           
  5691                           ;launcher_functions.c: 318: PORTAbits.RA6 = 0;
  5692                           
  5693                           ;incstack = 0
  5694                           ; Regs used in _ToggleSleepGPS: [wreg]
  5695  0E9E  0020               	movlb	0	; select bank0
  5696  0E9F  130C               	bcf	12,6	;volatile
  5697                           
  5698                           ;launcher_functions.c: 319: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5699  0EA0  3015               	movlw	21
  5700  0EA1  00A2               	movwf	??_ToggleSleepGPS+2
  5701  0EA2  304B               	movlw	75
  5702  0EA3  00A1               	movwf	??_ToggleSleepGPS+1
  5703  0EA4  30D1               	movlw	209
  5704  0EA5  00A0               	movwf	??_ToggleSleepGPS
  5705  0EA6                     u2237:	
  5706  0EA6  0BA0               	decfsz	??_ToggleSleepGPS,f
  5707  0EA7  2EA6               	goto	u2237
  5708  0EA8  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  5709  0EA9  2EA6               	goto	u2237
  5710  0EAA  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  5711  0EAB  2EA6               	goto	u2237
  5712  0EAC  0000               	nop
  5713                           
  5714                           ;launcher_functions.c: 320: PORTAbits.RA6 = 1;
  5715  0EAD  0020               	movlb	0	; select bank0
  5716  0EAE  170C               	bsf	12,6	;volatile
  5717                           
  5718                           ;launcher_functions.c: 321: _delay((unsigned long)((100)*(16000000/4000.0)));
  5719  0EAF  3003               	movlw	3
  5720  0EB0  00A2               	movwf	??_ToggleSleepGPS+2
  5721  0EB1  3008               	movlw	8
  5722  0EB2  00A1               	movwf	??_ToggleSleepGPS+1
  5723  0EB3  3078               	movlw	120
  5724  0EB4  00A0               	movwf	??_ToggleSleepGPS
  5725  0EB5                     u2247:	
  5726  0EB5  0BA0               	decfsz	??_ToggleSleepGPS,f
  5727  0EB6  2EB5               	goto	u2247
  5728  0EB7  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  5729  0EB8  2EB5               	goto	u2247
  5730  0EB9  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  5731  0EBA  2EB5               	goto	u2247
  5732                           
  5733                           ;launcher_functions.c: 322: PORTAbits.RA6 = 0;
  5734  0EBB  0020               	movlb	0	; select bank0
  5735  0EBC  130C               	bcf	12,6	;volatile
  5736                           
  5737                           ;launcher_functions.c: 323: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5738  0EBD  3015               	movlw	21
  5739  0EBE  00A2               	movwf	??_ToggleSleepGPS+2
  5740  0EBF  304B               	movlw	75
  5741  0EC0  00A1               	movwf	??_ToggleSleepGPS+1
  5742  0EC1  30D1               	movlw	209
  5743  0EC2  00A0               	movwf	??_ToggleSleepGPS
  5744  0EC3                     u2257:	
  5745  0EC3  0BA0               	decfsz	??_ToggleSleepGPS,f
  5746  0EC4  2EC3               	goto	u2257
  5747  0EC5  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  5748  0EC6  2EC3               	goto	u2257
  5749  0EC7  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  5750  0EC8  2EC3               	goto	u2257
  5751  0EC9  0000               	nop
  5752  0ECA  0008               	return
  5753  0ECB                     __end_of_ToggleSleepGPS:	
  5754                           
  5755                           	psect	text26
  5756  0D87                     __ptext26:	
  5757 ;; *************** function _GoToSleep *****************
  5758 ;; Defined at:
  5759 ;;		line 490 in file "launcher_functions.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  count           1    wreg     unsigned char 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  count           1    1[BANK0 ] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;		None               void
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5773 ;;      Params:         0       0       0       0       0       0       0       0
  5774 ;;      Locals:         0       1       0       0       0       0       0       0
  5775 ;;      Temps:          0       1       0       0       0       0       0       0
  5776 ;;      Totals:         0       2       0       0       0       0       0       0
  5777 ;;Total ram usage:        2 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    2
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_main
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function _GoToSleep
  5789  0D87                     _GoToSleep:	
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  5793                           ;GoToSleep@count stored from wreg
  5794  0D87  0020               	movlb	0	; select bank0
  5795  0D88  00A1               	movwf	GoToSleep@count
  5796                           
  5797                           ;launcher_functions.c: 492: WDTCONbits.WDTPS = count;
  5798  0D89  0821               	movf	GoToSleep@count,w
  5799  0D8A  00A0               	movwf	??_GoToSleep
  5800  0D8B  0DA0               	rlf	??_GoToSleep,f
  5801  0D8C  0021               	movlb	1	; select bank1
  5802  0D8D  0817               	movf	23,w	;volatile
  5803  0D8E  0020               	movlb	0	; select bank0
  5804  0D8F  0620               	xorwf	??_GoToSleep,w
  5805  0D90  39C1               	andlw	-63
  5806  0D91  0620               	xorwf	??_GoToSleep,w
  5807  0D92  0021               	movlb	1	; select bank1
  5808  0D93  0097               	movwf	23	;volatile
  5809                           
  5810                           ;launcher_functions.c: 493: WDTCONbits.SWDTEN = 1;
  5811  0D94  1417               	bsf	23,0	;volatile
  5812  0D95  0063               	sleep	;# 
  5813                           
  5814                           ;launcher_functions.c: 495: WDTCONbits.SWDTEN = 0;
  5815  0D96  0021               	movlb	1	; select bank1
  5816  0D97  1017               	bcf	23,0	;volatile
  5817  0D98  0008               	return
  5818  0D99                     __end_of_GoToSleep:	
  5819                           
  5820                           	psect	intentry
  5821  0004                     __pintentry:	
  5822 ;; *************** function _isr *****************
  5823 ;; Defined at:
  5824 ;;		line 88 in file "launcher_main.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5838 ;;      Params:         0       0       0       0       0       0       0       0
  5839 ;;      Locals:         2       0       0       0       0       0       0       0
  5840 ;;      Temps:          5       0       0       0       0       0       0       0
  5841 ;;      Totals:         7       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        7 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    1
  5845 ;; This function calls:
  5846 ;;		_WriteBuffer
  5847 ;; This function is called by:
  5848 ;;		Interrupt level 1
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852  0004                     _isr:	
  5853                           
  5854                           ;incstack = 0
  5855                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5856  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5857  0005  3180               	pagesel	$
  5858  0006  0020               	movlb	0	; select bank0
  5859  0007  087F               	movf	127,w
  5860  0008  00F6               	movwf	??_isr+4
  5861                           
  5862                           ;launcher_main.c: 91: if (PIR1bits.RCIF)
  5863  0009  1E91               	btfss	17,5	;volatile
  5864  000A  282E               	goto	i1l2443
  5865                           
  5866                           ;launcher_main.c: 92: {
  5867                           ;launcher_main.c: 94: if(OERR)
  5868  000B  0023               	movlb	3	; select bank3
  5869  000C  1C9D               	btfss	29,1	;volatile
  5870  000D  2810               	goto	i1l2431
  5871                           
  5872                           ;launcher_main.c: 95: {
  5873                           ;launcher_main.c: 96: RCSTAbits.CREN = 0;
  5874  000E  121D               	bcf	29,4	;volatile
  5875                           
  5876                           ;launcher_main.c: 97: RCSTAbits.CREN = 1;
  5877  000F  161D               	bsf	29,4	;volatile
  5878  0010                     i1l2431:	
  5879                           
  5880                           ;launcher_main.c: 98: }
  5881                           ;launcher_main.c: 99: gpsMessage[gpsIndex++] = RCREG;
  5882  0010  0819               	movf	25,w	;volatile
  5883  0011  00F2               	movwf	??_isr
  5884  0012  0021               	movlb	1	; select bank1
  5885  0013  0863               	movf	_gpsIndex^(0+128),w
  5886  0014  3E20               	addlw	_gpsMessage& (0+255)
  5887  0015  0086               	movwf	6
  5888  0016  3001               	movlw	1	; select bank2/3
  5889  0017  0087               	movwf	7
  5890  0018  0872               	movf	??_isr,w
  5891  0019  0081               	movwf	1
  5892  001A  3001               	movlw	1
  5893  001B  00F2               	movwf	??_isr
  5894  001C  0872               	movf	??_isr,w
  5895  001D  07E3               	addwf	_gpsIndex^(0+128),f	;volatile
  5896                           
  5897                           ;launcher_main.c: 100: if(gpsMessage[gpsIndex-1] == 0x0A)
  5898  001E  0863               	movf	_gpsIndex^(0+128),w
  5899  001F  3EFF               	addlw	255
  5900  0020  3E20               	addlw	_gpsMessage& (0+255)
  5901  0021  0086               	movwf	6
  5902  0022  3001               	movlw	1	; select bank2/3
  5903  0023  0087               	movwf	7
  5904  0024  0801               	movf	1,w
  5905  0025  3A0A               	xorlw	10
  5906  0026  1D03               	skipz
  5907  0027  282B               	goto	i1l2439
  5908                           
  5909                           ;launcher_main.c: 101: {
  5910                           ;launcher_main.c: 102: messageDoneFlag = 1;
  5911  0028  01FD               	clrf	_messageDoneFlag
  5912  0029  0AFD               	incf	_messageDoneFlag,f
  5913                           
  5914                           ;launcher_main.c: 103: }
  5915  002A  282C               	goto	i1l2441
  5916  002B                     i1l2439:	
  5917                           
  5918                           ;launcher_main.c: 104: else
  5919                           ;launcher_main.c: 105: {
  5920                           ;launcher_main.c: 106: messageDoneFlag = 0;
  5921  002B  01FD               	clrf	_messageDoneFlag
  5922  002C                     i1l2441:	
  5923                           
  5924                           ;launcher_main.c: 107: }
  5925                           ;launcher_main.c: 108: PIR1bits.RCIF = 0;
  5926  002C  0020               	movlb	0	; select bank0
  5927  002D  1291               	bcf	17,5	;volatile
  5928  002E                     i1l2443:	
  5929                           
  5930                           ;launcher_main.c: 109: }
  5931                           ;launcher_main.c: 112: if (TMR1IF && TMR1IE)
  5932  002E  1C11               	btfss	17,0	;volatile
  5933  002F  283D               	goto	i1l2453
  5934  0030  0021               	movlb	1	; select bank1
  5935  0031  1C11               	btfss	17,0	;volatile
  5936  0032  283D               	goto	i1l2453
  5937                           
  5938                           ;launcher_main.c: 113: {
  5939                           ;launcher_main.c: 114: TMR1H = 0xFF;
  5940  0033  30FF               	movlw	255
  5941  0034  0020               	movlb	0	; select bank0
  5942  0035  0097               	movwf	23	;volatile
  5943                           
  5944                           ;launcher_main.c: 115: TMR1L = 0xCD;
  5945  0036  30CD               	movlw	205
  5946  0037  0096               	movwf	22	;volatile
  5947                           
  5948                           ;launcher_main.c: 116: TMR1IF = 0;
  5949  0038  1011               	bcf	17,0	;volatile
  5950                           
  5951                           ;launcher_main.c: 118: if(recordFlag)
  5952  0039  0021               	movlb	1	; select bank1
  5953  003A  085D               	movf	_recordFlag^(0+128),w
  5954  003B  1D03               	skipz
  5955                           
  5956                           ;launcher_main.c: 119: {
  5957                           ;launcher_main.c: 120: ADCON0bits.ADGO = 1;
  5958  003C  149D               	bsf	29,1	;volatile
  5959  003D                     i1l2453:	
  5960                           
  5961                           ;launcher_main.c: 121: }
  5962                           ;launcher_main.c: 122: }
  5963                           ;launcher_main.c: 125: if(PIR1bits.ADIF & PIE1bits.ADIE)
  5964  003D  0021               	movlb	1	; select bank1
  5965  003E  0E11               	swapf	17,w	;volatile
  5966  003F  0C89               	rrf	9,f
  5967  0040  0C89               	rrf	9,f
  5968  0041  3901               	andlw	1
  5969  0042  00F2               	movwf	??_isr
  5970  0043  0020               	movlb	0	; select bank0
  5971  0044  0E11               	swapf	17,w	;volatile
  5972  0045  0C89               	rrf	9,f
  5973  0046  0C89               	rrf	9,f
  5974  0047  3901               	andlw	1
  5975  0048  0572               	andwf	??_isr,w
  5976  0049  1903               	btfsc	3,2
  5977  004A  287B               	goto	i1l2467
  5978                           
  5979                           ;launcher_main.c: 126: {
  5980                           ;launcher_main.c: 127: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  5981  004B  3033               	movlw	51
  5982  004C  0679               	xorwf	_end,w
  5983  004D  047A               	iorwf	_end+1,w
  5984  004E  1903               	skipnz
  5985  004F  2865               	goto	i1l2459
  5986  0050  0879               	movf	_end,w
  5987  0051  3E01               	addlw	1
  5988  0052  00F2               	movwf	??_isr
  5989  0053  3000               	movlw	0
  5990  0054  3D7A               	addwfc	_end+1,w
  5991  0055  00F3               	movwf	??_isr+1
  5992  0056  087C               	movf	_start+1,w
  5993  0057  0673               	xorwf	??_isr+1,w
  5994  0058  1D03               	skipz
  5995  0059  285C               	goto	u206_25
  5996  005A  087B               	movf	_start,w
  5997  005B  0672               	xorwf	??_isr,w
  5998  005C                     u206_25:	
  5999  005C  3000               	movlw	0
  6000  005D  1903               	skipnz
  6001  005E  3001               	movlw	1
  6002  005F  00F4               	movwf	??_isr+2
  6003  0060  01F5               	clrf	??_isr+3
  6004  0061  0874               	movf	??_isr+2,w
  6005  0062  00F7               	movwf	_isr$570
  6006  0063  0875               	movf	??_isr+3,w
  6007  0064  286F               	goto	L4
  6008  0065                     i1l2459:	
  6009  0065  087C               	movf	_start+1,w
  6010  0066  047B               	iorwf	_start,w
  6011  0067  3000               	movlw	0
  6012  0068  1903               	skipnz
  6013  0069  3001               	movlw	1
  6014  006A  00F2               	movwf	??_isr
  6015  006B  01F3               	clrf	??_isr+1
  6016  006C  0872               	movf	??_isr,w
  6017  006D  00F7               	movwf	_isr$570
  6018  006E  0873               	movf	??_isr+1,w
  6019  006F                     L4:	
  6020  006F  00F8               	movwf	_isr$570+1
  6021  0070  0878               	movf	_isr$570+1,w
  6022  0071  0477               	iorwf	_isr$570,w
  6023  0072  1D03               	skipz
  6024  0073  2879               	goto	i1l2465
  6025                           
  6026                           ;launcher_main.c: 128: {
  6027                           ;launcher_main.c: 129: WriteBuffer(ADRESH);
  6028  0074  0021               	movlb	1	; select bank1
  6029  0075  081C               	movf	28,w	;volatile
  6030  0076  318D  25D4  3180   	fcall	_WriteBuffer
  6031  0079                     i1l2465:	
  6032                           
  6033                           ;launcher_main.c: 130: }
  6034                           ;launcher_main.c: 131: PIR1bits.ADIF = 0;
  6035  0079  0020               	movlb	0	; select bank0
  6036  007A  1311               	bcf	17,6	;volatile
  6037  007B                     i1l2467:	
  6038                           
  6039                           ;launcher_main.c: 132: }
  6040                           ;launcher_main.c: 135: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6041  007B  1D8B               	btfss	11,3	;volatile
  6042  007C  28A6               	goto	i1l2481
  6043  007D  0027               	movlb	7	; select bank7
  6044  007E  1D96               	btfss	22,3	;volatile
  6045  007F  28A6               	goto	i1l2481
  6046                           
  6047                           ;launcher_main.c: 136: {
  6048                           ;launcher_main.c: 137: IOCBFbits.IOCBF3 = 0;
  6049  0080  1196               	bcf	22,3	;volatile
  6050                           
  6051                           ;launcher_main.c: 138: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6052  0081  0020               	movlb	0	; select bank0
  6053  0082  0C0D               	rrf	13,w	;volatile
  6054  0083  00F2               	movwf	??_isr
  6055  0084  0CF2               	rrf	??_isr,f
  6056  0085  0C72               	rrf	??_isr,w
  6057  0086  3901               	andlw	1
  6058  0087  00F3               	movwf	??_isr+1
  6059  0088  0027               	movlb	7	; select bank7
  6060  0089  0C14               	rrf	20,w	;volatile
  6061  008A  00F4               	movwf	??_isr+2
  6062  008B  0CF4               	rrf	??_isr+2,f
  6063  008C  0C74               	rrf	??_isr+2,w
  6064  008D  3901               	andlw	1
  6065  008E  0573               	andwf	??_isr+1,w
  6066  008F  1903               	btfsc	3,2
  6067  0090  2894               	goto	i1l2477
  6068                           
  6069                           ;launcher_main.c: 139: {
  6070                           ;launcher_main.c: 140: recordFlag = 1;
  6071  0091  0021               	movlb	1	; select bank1
  6072  0092  01DD               	clrf	_recordFlag^(0+128)
  6073  0093  0ADD               	incf	_recordFlag^(0+128),f
  6074  0094                     i1l2477:	
  6075                           
  6076                           ;launcher_main.c: 141: }
  6077                           ;launcher_main.c: 142: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6078  0094  0027               	movlb	7	; select bank7
  6079  0095  0C15               	rrf	21,w	;volatile
  6080  0096  00F2               	movwf	??_isr
  6081  0097  0CF2               	rrf	??_isr,f
  6082  0098  0C72               	rrf	??_isr,w
  6083  0099  3901               	andlw	1
  6084  009A  00F3               	movwf	??_isr+1
  6085  009B  1003               	clrc
  6086  009C  0020               	movlb	0	; select bank0
  6087  009D  1D8D               	btfss	13,3	;volatile
  6088  009E  1403               	setc
  6089  009F  3000               	movlw	0
  6090  00A0  3D09               	addwfc	9,w
  6091  00A1  0573               	andwf	??_isr+1,w
  6092  00A2  1903               	btfsc	3,2
  6093  00A3  28A6               	goto	i1l2481
  6094                           
  6095                           ;launcher_main.c: 143: {
  6096                           ;launcher_main.c: 144: recordFlag = 0;
  6097  00A4  0021               	movlb	1	; select bank1
  6098  00A5  01DD               	clrf	_recordFlag^(0+128)
  6099  00A6                     i1l2481:	
  6100                           
  6101                           ;launcher_main.c: 145: }
  6102                           ;launcher_main.c: 146: }
  6103                           ;launcher_main.c: 149: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6104  00A6  1D8B               	btfss	11,3	;volatile
  6105  00A7  28C8               	goto	i1l140
  6106  00A8  0027               	movlb	7	; select bank7
  6107  00A9  1C93               	btfss	19,1	;volatile
  6108  00AA  28C8               	goto	i1l140
  6109                           
  6110                           ;launcher_main.c: 150: {
  6111                           ;launcher_main.c: 151: IOCAFbits.IOCAF1 = 0;
  6112  00AB  1093               	bcf	19,1	;volatile
  6113                           
  6114                           ;launcher_main.c: 152: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6115  00AC  0020               	movlb	0	; select bank0
  6116  00AD  0C0C               	rrf	12,w	;volatile
  6117  00AE  3901               	andlw	1
  6118  00AF  00F2               	movwf	??_isr
  6119  00B0  0027               	movlb	7	; select bank7
  6120  00B1  0C11               	rrf	17,w	;volatile
  6121  00B2  3901               	andlw	1
  6122  00B3  0572               	andwf	??_isr,w
  6123  00B4  1903               	btfsc	3,2
  6124  00B5  28B9               	goto	i1l2491
  6125                           
  6126                           ;launcher_main.c: 153: {
  6127                           ;launcher_main.c: 154: strobeFlag = 1;
  6128  00B6  0021               	movlb	1	; select bank1
  6129  00B7  01DE               	clrf	_strobeFlag^(0+128)
  6130  00B8  0ADE               	incf	_strobeFlag^(0+128),f
  6131  00B9                     i1l2491:	
  6132                           
  6133                           ;launcher_main.c: 155: }
  6134                           ;launcher_main.c: 156: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6135  00B9  0027               	movlb	7	; select bank7
  6136  00BA  0C12               	rrf	18,w	;volatile
  6137  00BB  3901               	andlw	1
  6138  00BC  00F2               	movwf	??_isr
  6139  00BD  1003               	clrc
  6140  00BE  0020               	movlb	0	; select bank0
  6141  00BF  1C8C               	btfss	12,1	;volatile
  6142  00C0  1403               	setc
  6143  00C1  3000               	movlw	0
  6144  00C2  3D09               	addwfc	9,w
  6145  00C3  0572               	andwf	??_isr,w
  6146  00C4  1903               	btfsc	3,2
  6147  00C5  28C8               	goto	i1l140
  6148                           
  6149                           ;launcher_main.c: 157: {
  6150                           ;launcher_main.c: 158: strobeFlag = 0;
  6151  00C6  0021               	movlb	1	; select bank1
  6152  00C7  01DE               	clrf	_strobeFlag^(0+128)
  6153  00C8                     i1l140:	
  6154  00C8  0876               	movf	??_isr+4,w
  6155  00C9  0020               	movlb	0	; select bank0
  6156  00CA  00FF               	movwf	127
  6157  00CB  107E               	bcf	126,0	;clear compiler interrupt flag
  6158  00CC  0009               	retfie
  6159  00CD                     __end_of_isr:	
  6160                           
  6161                           	psect	text28
  6162  0DD4                     __ptext28:	
  6163 ;; *************** function _WriteBuffer *****************
  6164 ;; Defined at:
  6165 ;;		line 205 in file "launcher_functions.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  data            1    wreg     unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  data            1    1[COMMON] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;		None               void
  6172 ;; Registers used:
  6173 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6179 ;;      Params:         0       0       0       0       0       0       0       0
  6180 ;;      Locals:         1       0       0       0       0       0       0       0
  6181 ;;      Temps:          1       0       0       0       0       0       0       0
  6182 ;;      Totals:         2       0       0       0       0       0       0       0
  6183 ;;Total ram usage:        2 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_isr
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _WriteBuffer
  6194  0DD4                     _WriteBuffer:	
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6198                           ;WriteBuffer@data stored from wreg
  6199  0DD4  00F1               	movwf	WriteBuffer@data
  6200                           
  6201                           ;launcher_functions.c: 207: buffer[end] = data;
  6202  0DD5  0871               	movf	WriteBuffer@data,w
  6203  0DD6  00F0               	movwf	??_WriteBuffer
  6204  0DD7  0879               	movf	_end,w
  6205  0DD8  3EA0               	addlw	_buffer& (0+255)
  6206  0DD9  0086               	movwf	6
  6207  0DDA  3001               	movlw	1	; select bank3/4
  6208  0DDB  0087               	movwf	7
  6209  0DDC  0870               	movf	??_WriteBuffer,w
  6210  0DDD  0081               	movwf	1
  6211                           
  6212                           ;launcher_functions.c: 209: if (end == 51)
  6213  0DDE  3033               	movlw	51
  6214  0DDF  0679               	xorwf	_end,w
  6215  0DE0  047A               	iorwf	_end+1,w
  6216  0DE1  1D03               	skipz
  6217  0DE2  2DE6               	goto	i1l2359
  6218                           
  6219                           ;launcher_functions.c: 210: end = 0;
  6220  0DE3  01F9               	clrf	_end
  6221  0DE4  01FA               	clrf	_end+1
  6222  0DE5  0008               	return
  6223  0DE6                     i1l2359:	
  6224                           
  6225                           ;launcher_functions.c: 211: else
  6226                           ;launcher_functions.c: 212: end++;
  6227  0DE6  3001               	movlw	1
  6228  0DE7  07F9               	addwf	_end,f
  6229  0DE8  3000               	movlw	0
  6230  0DE9  3DFA               	addwfc	_end+1,f
  6231  0DEA  0008               	return
  6232  0DEB                     __end_of_WriteBuffer:	
  6233  007E                     btemp	set	126	;btemp
  6234  007E                     pic14e$flags	set	126
  6235  007E                     wtemp	set	126
  6236  007E                     wtemp0	set	126
  6237  0080                     wtemp1	set	128
  6238  0082                     wtemp2	set	130
  6239  0084                     wtemp3	set	132
  6240  0086                     wtemp4	set	134
  6241  0088                     wtemp5	set	136
  6242  007F                     wtemp6	set	127
  6243  007E                     ttemp	set	126
  6244  007E                     ttemp0	set	126
  6245  0081                     ttemp1	set	129
  6246  0084                     ttemp2	set	132
  6247  0087                     ttemp3	set	135
  6248  007F                     ttemp4	set	127
  6249  007E                     ltemp	set	126
  6250  007E                     ltemp0	set	126
  6251  0082                     ltemp1	set	130
  6252  0086                     ltemp2	set	134
  6253  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    10
    Data        55
    BSS         136
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80      4      68
    BANK2            80      0      72
    BANK3            80      0      51
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 22
		 -> SetupGPS@message(BANK0[22]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1411$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___lwdiv
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _RecordMode->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI
    _Hibernate->_ToggleSleepGPS

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8280
                                             76 BANK0      4     0      4
                                              0 BANK1      4     4      0
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    4263
                                             40 BANK0     23    23      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           26    26      0    3130
                                             14 BANK0     26    26      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            37    37      0    2983
                                             39 BANK0     37    37      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1613
                                             20 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          13    13      0     942
                                             21 BANK0     13    13      0
                         _ReadBuffer
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     513
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              3 BANK0      2     2      0
                     _ToggleSleepGPS
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (6) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
     _ToggleSleepGPS
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _RecordMode
     _ReadBuffer
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     11D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      33      12       63.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     11D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 19:48:33 2014

               DecodeGPS@latitude 003A                       _SSPSTATbits 0214               ___wmul@multiplicand 0022  
            __size_of_WriteBuffer 0017                       __CFG_LVP$ON 0000                               l107 0678  
                             l307 0E01                               l420 04AF                               l405 0E51  
                             l326 0D50                               l343 07EE                               l540 0E25  
                             l285 07F4                               l390 0381                               l279 0DBA  
                             l296 0FE0                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0030                               wreg 0009  
              DecodeGPS@longitude 0040                   DisableGPS@F4914 00A0                              l2017 0250  
                            l2009 0234                              l2061 035B                              l2053 033F  
                            l2223 0716                              l2071 0384                              l2063 0361  
                            l2233 0754                              l2309 04ED                              l2253 03F4  
                            l2085 03BD                              l2413 06D1                              l2079 0395  
                            l2423 06E6                              l2407 06AD                              l2273 0453  
                            l2329 0E97                              l2347 0E4D                              l2267 042D  
                            l2259 041A                              l2419 06DD                              l2349 0E43  
                            l1813 0F17                              l1807 0EFF                              l1751 0F63  
                            l1833 0FCD                              l2289 0492                              l2297 045E  
                            l1809 0F0B                              l1817 0F20                              l1913 0574  
                            l1753 0F9D                              l2385 0662                              l1763 0E1F  
                            l2387 0665                              l1853 0DFD                              l1941 05E5  
                            l1933 05C6                              l1917 0590                              l1749 0F98  
                            l2397 0680                              l1791 0F4E                              l1783 0F30  
                            l1919 05AA                              l1785 0F3C                              l1929 05C0  
                            l1795 0F57                              l1955 05F8                              l1947 05F4  
                            l1875 07AF                              l1867 07A1                              l1971 013F  
                            l1957 053D                              l1885 07B9                              l1959 0638  
                            l1887 07DC                              l1975 0150                              l1897 055F  
                            l1977 0160                              l1899 0561                              _ADIE 048E  
                            _ADIF 008E                              ?_isr 0070            __size_of_ReadStatusSPI 0011  
                            STR_1 080A                              STR_2 081D                              STR_3 082F  
                            u1225 0F33                              u1315 0F11                              u1155 0F6D  
                            u1245 0F3D                              u1325 0F18                              u1255 0F47  
                            u2207 071D                              u1345 0FAB                              u1265 0F4F  
                            u1425 07C9                              u2217 075B                              u1185 0E26  
                            u1355 0FBF                              u2227 04B9                              u1195 0E2B  
                            u1540 0112                              u2237 0EA6                              u1550 0120  
                            u2247 0EB5                              u1295 0F02                              u1560 012E  
                            u2257 0EC3                              u1705 0714                              u1803 04DD  
                            u1395 078F                              u1715 0752                              u1725 03F2  
                            u2197 0670                              u1815 04FD                              u1735 0418  
                            u1495 05DB                              u1575 013D                              u1840 0E85  
                            u1825 0512                              u1745 042B                              u1690 06F5  
                            u1835 0527                              u1755 0451                              u1675 0393  
                            u1595 015E                              u1765 0480                              u1685 03BB  
                            u1790 04AE                              u1775 0498                              u1793 0475  
                            _PEIE 005E                              _RCIE 048D                              _OERR 0CE9  
                            _main 063D                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              ltemp 007E  
                            start 00CD                              ttemp 007E                              wtemp 007E  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 0E1C  
                 __end_of_InitCLK 0D4E                   __end_of_InitSPI 0DAB                   __end_of_ReadSPI 07FE  
              ??_compute_checksum 0022                             ??_isr 0072                     ?_InitWatchdog 0070  
           ReadStatusSPI@dataRead 0026                             ?_main 006C                             _LATC2 0872  
                           _IOCAF 0393                             _IOCBF 0396                   __end_of___lwdiv 0F5E  
                           i1l140 00C8                   __end_of___lwmod 0F27                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
               RecordMode@address 003C                   __end_of_dpowers 080A               DecodeGPS@northSouth 0037  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 063D            uart_write_message@data 0034  
          uart_write_message@size 0028                        _ReadBuffer 0DEB                   __initialization 00CF  
                      _InitTimer1 0D58                 ?_WriteOverheadSPI 0027                      __end_of_main 06EA  
              __size_of_DecodeGPS 02C3                  __end_of_InitGPIO 0EF8                    ??_InitWatchdog 0020  
                   _ReadStatusSPI 0D76                ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0035  
                          ??_main 00DF                __size_of_GoToSleep 0012                   ReadSPI@dataByte 0021  
                  __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 077C     WriteOverheadSPI@address_bytes 0031  
              __size_of_Hibernate 001F                        _RecordMode 03CA                            _ADRESH 009C  
                __end_of_WriteSPI 0DBE                            i1l2431 0010                            i1l2441 002C  
                          i1l2443 002E                            i1l2453 003D                            i1l2359 0DE6  
                          i1l2439 002B                            i1l2481 00A6                            i1l2465 0079  
                          i1l2491 00B9                            i1l2459 0065                            i1l2467 007B  
                          i1l2477 0094                            u206_25 005C                            _TMR1IE 0488  
                          _TMR1IF 0088                            _SPBRGH 019C                            _TMR1ON 00C0  
                          _SPBRGL 019B                            _SSPBUF 0211                         ??_InitADC 0020  
                       ??_InitCLK 0020                         ??_InitSPI 0020                         ??_ReadSPI 0020  
                  ?_ReadStatusSPI 0070                            ___wmul 0E1C                  __end_of_initUART 0D76  
                       ??___lwdiv 002A                         ??___lwmod 0032                            _buffer 01A0  
     __size_of_uart_write_message 0076                __size_of_UpdateGPS 0024                       RecordMode@x 0040  
             main@periodicCounter 00E2                 __end_of_DecodeGPS 03CA                         ??_sprintf 003A  
                  _gpsInvalidFlag 00BE           __end_of__initialization 0103                 __end_of_GoToSleep 0D99  
                     ?_ReadBuffer 0070                 __end_of_Hibernate 0E59                       ?_InitTimer1 0070  
                  __pcstackCOMMON 0070                      __pidataBANK1 0E59                      __pidataBANK2 0DBE  
                    WriteSPI@temp 0022                       ?_RecordMode 0070              __end_of_InitWatchdog 0D46  
                      __pbssBANK1 00C1                        __pbssBANK2 0120                        __pbssBANK3 01A0  
                       ?_InitGPIO 0070                   SetupGPS@message 004A                   ??_ReadStatusSPI 0025  
               __end_of_UpdateGPS 0E9E                        __pmaintext 063D                         ?_SetupGPS 0070  
                         ?___wmul 0020                     ??_WriteBuffer 0070                        __pintentry 0004  
                  _validLongitude 00D3         UpdateGPS@GPSupdateMessage 0049                         ?_WriteSPI 0070  
              __size_of_uart_xmit 000A         __size_of_compute_checksum 0042               __size_of_ReadBuffer 0018  
             __size_of_InitTimer1 000F                        ??_InitGPIO 0020                         ?_initUART 0070  
                         _InitADC 0E03                           _InitCLK 0D46                           _InitSPI 0D99  
                      _gpsMessage 0120           __size_of_ToggleSleepGPS 002D                           _ReadSPI 07F2  
                     SetupGPS@MID 0066                        ??_SetupGPS 0047               __size_of_RecordMode 016D  
                 __size_of___wmul 001E                           ___lwdiv 0F27                           ___lwmod 0EF8  
                         _isr$570 0077                        ??_WriteSPI 0020                           __ptext1 0D67  
                         __ptext2 0E7A                           __ptext3 0107                           __ptext4 0E1C  
                         __ptext5 06EA                           __ptext6 077C                           __ptext7 0D4E  
                         __ptext8 0F5E                           __ptext9 0537                         _T1CONbits 0018  
                         _dpowers 0800               __end_of_WriteBuffer 0DEB                      __size_of_isr 00C9  
                       _IOCAFbits 0393                         _IOCBFbits 0396                         _IOCANbits 0392  
       __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395                         _IOCAPbits 0391  
                       _IOCBPbits 0394                        _recordFlag 00DD                           _sprintf 0537  
                         clrloop0 0D3A              end_of_initialization 0103                        ??_initUART 0020  
                         init_ram 0D33                           initloop 0D34                   WriteBuffer@data 0071  
               __end_of_uart_xmit 0D58                         _RCSTAbits 019D                  WriteSPI@databyte 0024  
                    __pstringtext 0800                         _PORTAbits 000C                         _PORTBbits 000D  
                       _PORTCbits 000E                    Hibernate@count 0024                  __CFG_FOSC$INTOSC 0000  
           __size_of_InitWatchdog 0007                         _TRISAbits 008C                         _TRISBbits 008D  
                       _TRISCbits 008E           WriteOverheadSPI@address 0027                   DecodeGPS@status 0039  
            uart_xmit@mydata_byte 0020                         _DecodeGPS 0107                         _TXSTAbits 019E  
                    ??_ReadBuffer 0020                        _strobeFlag 00DE                      ??_InitTimer1 0020  
                       _GoToSleep 0D87                       _WriteBuffer 0DD4                    __end_of___wmul 0E3A  
      __end_of_uart_write_message 07F2                         _Hibernate 0E3A                      _InitWatchdog 0D3F  
                   SetupGPS@F4917 00B4                     SetupGPS@F4919 00BA               start_initialization 00CF  
                _compute_checksum 0F5E         WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 0035  
                     __end_of_isr 00CD                __end_of_ReadBuffer 0E03                 compute_checksum@x 0026  
              __end_of_InitTimer1 0D67                        ?_DecodeGPS 0070                    _ToggleSleepGPS 0E9E  
               __size_of_InitGPIO 002D                         SetupGPS@x 006A              compute_checksum@data 0025  
                      ?_GoToSleep 0070              compute_checksum@size 0020                          ??___wmul 0024  
              __end_of_RecordMode 0537                       __pdataBANK1 00A0                       __pdataBANK2 0152  
               __size_of_SetupGPS 0092                         _UpdateGPS 0E7A                        ?_Hibernate 0070  
        compute_checksum@checksum 0024                 __size_of_WriteSPI 0013                       __pbssCOMMON 0079  
                       ___latbits 0001                     __pcstackBANK0 0020                     __pcstackBANK1 00DF  
                _WriteOverheadSPI 0FA0               __end_of__stringdata 0836               uart_write_message@x 0031  
                   _validEastWest 00BF            __end_of_ToggleSleepGPS 0ECB                   _messageDoneFlag 007D  
                     sprintf@_val 0042                       sprintf@flag 003E                       sprintf@prec 003F  
                        ?_InitADC 0070                          ?_InitCLK 0070                          ?_InitSPI 0070  
               __size_of_initUART 000F                          ?_ReadSPI 0070                         __pnvBANK1 00E3  
                   _validLatitude 00CD                  ___lwdiv@dividend 0028             __end_of_ReadStatusSPI 0D87  
                        ?___lwdiv 0026                          ?___lwmod 002E                        ?_UpdateGPS 0070  
                  UpdateGPS@F4924 0152                  __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 002B  
                        ?_sprintf 0034        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 00C0                       ??_DecodeGPS 002E                    ___wmul@product 0024  
                        _LATBbits 010D                         clear_ram0 0D39                          _PIE1bits 0091  
                  DecodeGPS@F4930 00C7                    DecodeGPS@F4926 00AD                    DecodeGPS@F4928 00C1  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0D4E  
                     ??_Hibernate 0023                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 080A                        _ADCON2bits 009F                 ___wmul@multiplier 0020  
                 RecordMode@count 003A                          _InitGPIO 0ECB                  __size_of_InitADC 0019  
                __size_of_InitCLK 0008                  __size_of_InitSPI 0012                  __size_of_ReadSPI 000C  
        __end_of_compute_checksum 0FA0             SetupGPS@startSequence 0060                          _SetupGPS 06EA  
                      ?_uart_xmit 0070                      ?_WriteBuffer 0070                       ??_UpdateGPS 0048  
                __size_of___lwdiv 0037                  __size_of___lwmod 002F                          _WriteSPI 0DAB  
         _uart_write_message$1353 002D           _uart_write_message$1354 002F                        _ANSELAbits 018C  
                      _ANSELBbits 018D               ReadBuffer@read_data 0021                   ___lwdiv@divisor 0026  
                 ___lwdiv@counter 002D                          __ptext10 0EF8                          __ptext11 0F27  
                        __ptext20 0D99                          __ptext12 03CA                          __ptext21 0ECB  
                        __ptext13 0FA0                        _T1GCONbits 0019                          __ptext22 0D46  
                        __ptext14 0D76                          __ptext23 0E03                          __ptext15 0DAB  
                        __ptext24 0E3A                          __ptext16 07F2                          __ptext25 0E9E  
                        __ptext17 0DEB                          __ptext26 0D87                          __ptext18 0D3F  
                        __ptext19 0D58                          __ptext28 0DD4                _uart_write_message 077C  
                __size_of_sprintf 0106                          _gpsIndex 00E3                          _initUART 0D67  
                   __size_of_main 00AD               ?_uart_write_message 0028                        DecodeGPS@x 0046  
        __end_of_WriteOverheadSPI 1000                    GoToSleep@count 0021                          main@argc 006C  
                        main@argv 006E              ??_uart_write_message 002A                        _INTCONbits 000B  
                     pic14e$flags 007E                          intlevel1 0000                         sprintf@ap 0040  
                       sprintf@sp 0041                  ___lwmod@dividend 0030                 __CFG_CLKOUTEN$OFF 0000  
                      _OSCCONbits 0099                       ??_uart_xmit 0020                          sprintf@c 0046  
                        sprintf@f 0034                   ___lwmod@divisor 002E                   ___lwmod@counter 0033  
                ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215                        _WDTCONbits 0097  
                 _recordEndAdress 00D9                 DecodeGPS@eastWest 0038  
