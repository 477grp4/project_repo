

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 17:32:45 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0094                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  011F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0197                     	;# 
   125  0199                     	;# 
   126  0199                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019A                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019D                     	;# 
   140  019D                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019E                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  020E                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  028E                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  030C                     	;# 
   181  030D                     	;# 
   182  030E                     	;# 
   183  038C                     	;# 
   184  038D                     	;# 
   185  038E                     	;# 
   186  0390                     	;# 
   187  0391                     	;# 
   188  0392                     	;# 
   189  0393                     	;# 
   190  0394                     	;# 
   191  0395                     	;# 
   192  0396                     	;# 
   193  0397                     	;# 
   194  0398                     	;# 
   195  0399                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0511                     	;# 
   200  0513                     	;# 
   201  051A                     	;# 
   202  0811                     	;# 
   203  0812                     	;# 
   204  0813                     	;# 
   205  0814                     	;# 
   206  0815                     	;# 
   207  0816                     	;# 
   208  0817                     	;# 
   209  0818                     	;# 
   210  0819                     	;# 
   211  081A                     	;# 
   212  081B                     	;# 
   213  081C                     	;# 
   214  081D                     	;# 
   215  081E                     	;# 
   216  081F                     	;# 
   217  0820                     	;# 
   218  0821                     	;# 
   219  0821                     	;# 
   220  0822                     	;# 
   221  0823                     	;# 
   222  0823                     	;# 
   223  0824                     	;# 
   224  0825                     	;# 
   225  0825                     	;# 
   226  0826                     	;# 
   227  0827                     	;# 
   228  0827                     	;# 
   229  0828                     	;# 
   230  0829                     	;# 
   231  082A                     	;# 
   232  082B                     	;# 
   233  082C                     	;# 
   234  082D                     	;# 
   235  082E                     	;# 
   236  082F                     	;# 
   237  0831                     	;# 
   238  0832                     	;# 
   239  0833                     	;# 
   240  0834                     	;# 
   241  0835                     	;# 
   242  0836                     	;# 
   243  0837                     	;# 
   244  0838                     	;# 
   245  0839                     	;# 
   246  083A                     	;# 
   247  083B                     	;# 
   248  083C                     	;# 
   249  083D                     	;# 
   250  083E                     	;# 
   251  083F                     	;# 
   252  0840                     	;# 
   253  0841                     	;# 
   254  0841                     	;# 
   255  0842                     	;# 
   256  0843                     	;# 
   257  0843                     	;# 
   258  0844                     	;# 
   259  0845                     	;# 
   260  0845                     	;# 
   261  0846                     	;# 
   262  0847                     	;# 
   263  0847                     	;# 
   264  0848                     	;# 
   265  0849                     	;# 
   266  084A                     	;# 
   267  084B                     	;# 
   268  084C                     	;# 
   269  084D                     	;# 
   270  084E                     	;# 
   271  084F                     	;# 
   272  0FE4                     	;# 
   273  0FE5                     	;# 
   274  0FE6                     	;# 
   275  0FE7                     	;# 
   276  0FE8                     	;# 
   277  0FE9                     	;# 
   278  0FEA                     	;# 
   279  0FEB                     	;# 
   280  0FED                     	;# 
   281  0FEE                     	;# 
   282  0FEF                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0094                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  0111                     	;# 
   334  0112                     	;# 
   335  0113                     	;# 
   336  0114                     	;# 
   337  0115                     	;# 
   338  0116                     	;# 
   339  0117                     	;# 
   340  0118                     	;# 
   341  0119                     	;# 
   342  011D                     	;# 
   343  011D                     	;# 
   344  011E                     	;# 
   345  011F                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348  0191                     	;# 
   349  0191                     	;# 
   350  0192                     	;# 
   351  0193                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  0199                     	;# 
   360  019A                     	;# 
   361  019A                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019C                     	;# 
   371  019D                     	;# 
   372  019D                     	;# 
   373  019D                     	;# 
   374  019E                     	;# 
   375  019E                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  020C                     	;# 
   383  020D                     	;# 
   384  020E                     	;# 
   385  0210                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0216                     	;# 
   398  0216                     	;# 
   399  0217                     	;# 
   400  0217                     	;# 
   401  028C                     	;# 
   402  028D                     	;# 
   403  028E                     	;# 
   404  0291                     	;# 
   405  0291                     	;# 
   406  0292                     	;# 
   407  0293                     	;# 
   408  0298                     	;# 
   409  0298                     	;# 
   410  0299                     	;# 
   411  029A                     	;# 
   412  030C                     	;# 
   413  030D                     	;# 
   414  030E                     	;# 
   415  038C                     	;# 
   416  038D                     	;# 
   417  038E                     	;# 
   418  0390                     	;# 
   419  0391                     	;# 
   420  0392                     	;# 
   421  0393                     	;# 
   422  0394                     	;# 
   423  0395                     	;# 
   424  0396                     	;# 
   425  0397                     	;# 
   426  0398                     	;# 
   427  0399                     	;# 
   428  039D                     	;# 
   429  039E                     	;# 
   430  039F                     	;# 
   431  0511                     	;# 
   432  0513                     	;# 
   433  051A                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  0815                     	;# 
   439  0816                     	;# 
   440  0817                     	;# 
   441  0818                     	;# 
   442  0819                     	;# 
   443  081A                     	;# 
   444  081B                     	;# 
   445  081C                     	;# 
   446  081D                     	;# 
   447  081E                     	;# 
   448  081F                     	;# 
   449  0820                     	;# 
   450  0821                     	;# 
   451  0821                     	;# 
   452  0822                     	;# 
   453  0823                     	;# 
   454  0823                     	;# 
   455  0824                     	;# 
   456  0825                     	;# 
   457  0825                     	;# 
   458  0826                     	;# 
   459  0827                     	;# 
   460  0827                     	;# 
   461  0828                     	;# 
   462  0829                     	;# 
   463  082A                     	;# 
   464  082B                     	;# 
   465  082C                     	;# 
   466  082D                     	;# 
   467  082E                     	;# 
   468  082F                     	;# 
   469  0831                     	;# 
   470  0832                     	;# 
   471  0833                     	;# 
   472  0834                     	;# 
   473  0835                     	;# 
   474  0836                     	;# 
   475  0837                     	;# 
   476  0838                     	;# 
   477  0839                     	;# 
   478  083A                     	;# 
   479  083B                     	;# 
   480  083C                     	;# 
   481  083D                     	;# 
   482  083E                     	;# 
   483  083F                     	;# 
   484  0840                     	;# 
   485  0841                     	;# 
   486  0841                     	;# 
   487  0842                     	;# 
   488  0843                     	;# 
   489  0843                     	;# 
   490  0844                     	;# 
   491  0845                     	;# 
   492  0845                     	;# 
   493  0846                     	;# 
   494  0847                     	;# 
   495  0847                     	;# 
   496  0848                     	;# 
   497  0849                     	;# 
   498  084A                     	;# 
   499  084B                     	;# 
   500  084C                     	;# 
   501  084D                     	;# 
   502  084E                     	;# 
   503  084F                     	;# 
   504  0FE4                     	;# 
   505  0FE5                     	;# 
   506  0FE6                     	;# 
   507  0FE7                     	;# 
   508  0FE8                     	;# 
   509  0FE9                     	;# 
   510  0FEA                     	;# 
   511  0FEB                     	;# 
   512  0FED                     	;# 
   513  0FEE                     	;# 
   514  0FEF                     	;# 
   515  0000                     	;# 
   516  0001                     	;# 
   517  0002                     	;# 
   518  0003                     	;# 
   519  0004                     	;# 
   520  0005                     	;# 
   521  0006                     	;# 
   522  0007                     	;# 
   523  0008                     	;# 
   524  0009                     	;# 
   525  000A                     	;# 
   526  000B                     	;# 
   527  000C                     	;# 
   528  000D                     	;# 
   529  000E                     	;# 
   530  0010                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0014                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  0090                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0094                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  0111                     	;# 
   566  0112                     	;# 
   567  0113                     	;# 
   568  0114                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011D                     	;# 
   575  011D                     	;# 
   576  011E                     	;# 
   577  011F                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  0210                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  028C                     	;# 
   634  028D                     	;# 
   635  028E                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  030C                     	;# 
   645  030D                     	;# 
   646  030E                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  0390                     	;# 
   651  0391                     	;# 
   652  0392                     	;# 
   653  0393                     	;# 
   654  0394                     	;# 
   655  0395                     	;# 
   656  0396                     	;# 
   657  0397                     	;# 
   658  0398                     	;# 
   659  0399                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0511                     	;# 
   664  0513                     	;# 
   665  051A                     	;# 
   666  0811                     	;# 
   667  0812                     	;# 
   668  0813                     	;# 
   669  0814                     	;# 
   670  0815                     	;# 
   671  0816                     	;# 
   672  0817                     	;# 
   673  0818                     	;# 
   674  0819                     	;# 
   675  081A                     	;# 
   676  081B                     	;# 
   677  081C                     	;# 
   678  081D                     	;# 
   679  081E                     	;# 
   680  081F                     	;# 
   681  0820                     	;# 
   682  0821                     	;# 
   683  0821                     	;# 
   684  0822                     	;# 
   685  0823                     	;# 
   686  0823                     	;# 
   687  0824                     	;# 
   688  0825                     	;# 
   689  0825                     	;# 
   690  0826                     	;# 
   691  0827                     	;# 
   692  0827                     	;# 
   693  0828                     	;# 
   694  0829                     	;# 
   695  082A                     	;# 
   696  082B                     	;# 
   697  082C                     	;# 
   698  082D                     	;# 
   699  082E                     	;# 
   700  082F                     	;# 
   701  0831                     	;# 
   702  0832                     	;# 
   703  0833                     	;# 
   704  0834                     	;# 
   705  0835                     	;# 
   706  0836                     	;# 
   707  0837                     	;# 
   708  0838                     	;# 
   709  0839                     	;# 
   710  083A                     	;# 
   711  083B                     	;# 
   712  083C                     	;# 
   713  083D                     	;# 
   714  083E                     	;# 
   715  083F                     	;# 
   716  0840                     	;# 
   717  0841                     	;# 
   718  0841                     	;# 
   719  0842                     	;# 
   720  0843                     	;# 
   721  0843                     	;# 
   722  0844                     	;# 
   723  0845                     	;# 
   724  0845                     	;# 
   725  0846                     	;# 
   726  0847                     	;# 
   727  0847                     	;# 
   728  0848                     	;# 
   729  0849                     	;# 
   730  084A                     	;# 
   731  084B                     	;# 
   732  084C                     	;# 
   733  084D                     	;# 
   734  084E                     	;# 
   735  084F                     	;# 
   736  0FE4                     	;# 
   737  0FE5                     	;# 
   738  0FE6                     	;# 
   739  0FE7                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEB                     	;# 
   744  0FED                     	;# 
   745  0FEE                     	;# 
   746  0FEF                     	;# 
   747                           
   748                           	psect	idataBANK1
   749  0E58                     __pidataBANK1:	
   750                           
   751                           ;initializer for DisableGPS@F4913
   752  0E58  3424               	retlw	36
   753  0E59  3450               	retlw	80
   754  0E5A  3453               	retlw	83
   755  0E5B  3452               	retlw	82
   756  0E5C  3446               	retlw	70
   757  0E5D  3431               	retlw	49
   758  0E5E  3431               	retlw	49
   759  0E5F  3437               	retlw	55
   760  0E60  342C               	retlw	44
   761  0E61  3431               	retlw	49
   762  0E62  3436               	retlw	54
   763  0E63  342A               	retlw	42
   764  0E64  3400               	retlw	0
   765                           
   766                           ;initializer for DecodeGPS@F4926
   767  0E65  3424               	retlw	36
   768  0E66  3447               	retlw	71
   769  0E67  3450               	retlw	80
   770  0E68  3447               	retlw	71
   771  0E69  344C               	retlw	76
   772  0E6A  344C               	retlw	76
   773  0E6B  3400               	retlw	0
   774                           
   775                           ;initializer for SetupGPS@F4916
   776  0E6C  3424               	retlw	36
   777  0E6D  3450               	retlw	80
   778  0E6E  3453               	retlw	83
   779  0E6F  3452               	retlw	82
   780  0E70  3446               	retlw	70
   781  0E71  3400               	retlw	0
   782                           
   783                           ;initializer for SetupGPS@F4918
   784  0E72  3431               	retlw	49
   785  0E73  3430               	retlw	48
   786  0E74  3433               	retlw	51
   787  0E75  3400               	retlw	0
   788                           
   789                           ;initializer for _gpsInvalidFlag
   790  0E76  3401               	retlw	1
   791                           
   792                           ;initializer for _validEastWest
   793  0E77  3445               	retlw	69
   794                           
   795                           ;initializer for _validNorthSouth
   796  0E78  344E               	retlw	78
   797                           
   798                           	psect	idataBANK2
   799  0DE0                     __pidataBANK2:	
   800                           
   801                           ;initializer for UpdateGPS@F4923
   802  0DE0  3424               	retlw	36
   803  0DE1  3450               	retlw	80
   804  0DE2  3453               	retlw	83
   805  0DE3  3452               	retlw	82
   806  0DE4  3446               	retlw	70
   807  0DE5  3431               	retlw	49
   808  0DE6  3430               	retlw	48
   809  0DE7  3433               	retlw	51
   810  0DE8  342C               	retlw	44
   811  0DE9  3430               	retlw	48
   812  0DEA  3431               	retlw	49
   813  0DEB  342C               	retlw	44
   814  0DEC  3430               	retlw	48
   815  0DED  3431               	retlw	49
   816  0DEE  342C               	retlw	44
   817  0DEF  3430               	retlw	48
   818  0DF0  3430               	retlw	48
   819  0DF1  342C               	retlw	44
   820  0DF2  3430               	retlw	48
   821  0DF3  3430               	retlw	48
   822  0DF4  342A               	retlw	42
   823  0DF5  3400               	retlw	0
   824                           
   825                           	psect	stringtext
   826  0800                     __pstringtext:	
   827  0800                     _dpowers:	
   828  0800  3401               	retlw	1
   829  0801  3400               	retlw	0
   830  0802  340A               	retlw	10
   831  0803  3400               	retlw	0
   832  0804  3464               	retlw	100
   833  0805  3400               	retlw	0
   834  0806  34E8               	retlw	232
   835  0807  3403               	retlw	3
   836  0808  3410               	retlw	16
   837  0809  3427               	retlw	39
   838  080A                     __end_of_dpowers:	
   839  080A                     __stringdata:	
   840  080A                     STR_1:	
   841  080A  3425               	retlw	37	;'%'
   842  080B  3473               	retlw	115	;'s'
   843  080C  3425               	retlw	37	;'%'
   844  080D  3473               	retlw	115	;'s'
   845  080E  342C               	retlw	44	;','
   846  080F  3430               	retlw	48	;'0'
   847  0810  3425               	retlw	37	;'%'
   848  0811  3464               	retlw	100	;'d'
   849  0812  342C               	retlw	44	;','
   850  0813  3430               	retlw	48	;'0'
   851  0814  3430               	retlw	48	;'0'
   852  0815  342C               	retlw	44	;','
   853  0816  3430               	retlw	48	;'0'
   854  0817  3430               	retlw	48	;'0'
   855  0818  342C               	retlw	44	;','
   856  0819  3430               	retlw	48	;'0'
   857  081A  3430               	retlw	48	;'0'
   858  081B  342A               	retlw	42	;'*'
   859  081C  3400               	retlw	0
   860  081D                     STR_2:	
   861  081D  3425               	retlw	37	;'%'
   862  081E  3473               	retlw	115	;'s'
   863  081F  3425               	retlw	37	;'%'
   864  0820  3473               	retlw	115	;'s'
   865  0821  342C               	retlw	44	;','
   866  0822  3430               	retlw	48	;'0'
   867  0823  3431               	retlw	49	;'1'
   868  0824  342C               	retlw	44	;','
   869  0825  3430               	retlw	48	;'0'
   870  0826  3431               	retlw	49	;'1'
   871  0827  342C               	retlw	44	;','
   872  0828  3430               	retlw	48	;'0'
   873  0829  3431               	retlw	49	;'1'
   874  082A  342C               	retlw	44	;','
   875  082B  3430               	retlw	48	;'0'
   876  082C  3430               	retlw	48	;'0'
   877  082D  342A               	retlw	42	;'*'
   878  082E  3400               	retlw	0
   879  082F                     STR_3:	
   880  082F  3428               	retlw	40	;'('
   881  0830  346E               	retlw	110	;'n'
   882  0831  3475               	retlw	117	;'u'
   883  0832  346C               	retlw	108	;'l'
   884  0833  346C               	retlw	108	;'l'
   885  0834  3429               	retlw	41	;')'
   886  0835  3400               	retlw	0
   887  0836                     __end_of__stringdata:	
   888                           
   889                           ; #config settings
   890  0000                     
   891                           	psect	nvBANK1
   892  00E3                     __pnvBANK1:	
   893  00E3                     _gpsIndex:	
   894  00E3                     	ds	1
   895  000B                     _INTCONbits	set	11
   896  0011                     _PIR1bits	set	17
   897  000C                     _PORTAbits	set	12
   898  000D                     _PORTBbits	set	13
   899  0018                     _T1CONbits	set	24
   900  0019                     _T1GCONbits	set	25
   901  0017                     _TMR1H	set	23
   902  0016                     _TMR1L	set	22
   903  008E                     _ADIF	set	142
   904  005F                     _GIE	set	95
   905  005E                     _PEIE	set	94
   906  0066                     _RA6	set	102
   907  0088                     _TMR1IF	set	136
   908  00C0                     _TMR1ON	set	192
   909  009D                     _ADCON0bits	set	157
   910  009E                     _ADCON1bits	set	158
   911  009F                     _ADCON2bits	set	159
   912  009C                     _ADRESH	set	156
   913  0099                     _OSCCONbits	set	153
   914  0091                     _PIE1bits	set	145
   915  008C                     _TRISAbits	set	140
   916  008D                     _TRISBbits	set	141
   917  008E                     _TRISCbits	set	142
   918  0097                     _WDTCONbits	set	151
   919  048E                     _ADIE	set	1166
   920  048D                     _RCIE	set	1165
   921  0488                     _TMR1IE	set	1160
   922  010D                     _LATBbits	set	269
   923  0872                     _LATC2	set	2162
   924  018C                     _ANSELAbits	set	396
   925  018D                     _ANSELBbits	set	397
   926  0199                     _RCREG	set	409
   927  019D                     _RCSTAbits	set	413
   928  019C                     _SPBRGH	set	412
   929  019B                     _SPBRGL	set	411
   930  019A                     _TXREG	set	410
   931  019E                     _TXSTAbits	set	414
   932  0CE9                     _OERR	set	3305
   933  0211                     _SSPBUF	set	529
   934  0215                     _SSPCON1bits	set	533
   935  0214                     _SSPSTATbits	set	532
   936  0393                     _IOCAF	set	915
   937  0393                     _IOCAFbits	set	915
   938  0392                     _IOCANbits	set	914
   939  0391                     _IOCAPbits	set	913
   940  0396                     _IOCBF	set	918
   941  0396                     _IOCBFbits	set	918
   942  0395                     _IOCBNbits	set	917
   943  0394                     _IOCBPbits	set	916
   944                           
   945                           	psect	cinit
   946  00CF                     start_initialization:	
   947  00CF                     __initialization:	
   948                           
   949                           ; Clear objects allocated to COMMON
   950  00CF  01F9               	clrf	__pbssCOMMON& (0+127)
   951  00D0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   952  00D1  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   953  00D2  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   954  00D3  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   955                           
   956                           ; Clear objects allocated to BANK1
   957  00D4  30C1               	movlw	low __pbssBANK1
   958  00D5  0084               	movwf	4
   959  00D6  3000               	movlw	high __pbssBANK1
   960  00D7  0085               	movwf	5
   961  00D8  301E               	movlw	30
   962  00D9  318D  254F  3180   	fcall	clear_ram0
   963                           
   964                           ; Clear objects allocated to BANK2
   965  00DC  3020               	movlw	low __pbssBANK2
   966  00DD  0084               	movwf	4
   967  00DE  3001               	movlw	high __pbssBANK2
   968  00DF  0085               	movwf	5
   969  00E0  3032               	movlw	50
   970  00E1  318D  254F  3180   	fcall	clear_ram0
   971                           
   972                           ; Clear objects allocated to BANK3
   973  00E4  30A0               	movlw	low __pbssBANK3
   974  00E5  0084               	movwf	4
   975  00E6  3001               	movlw	high __pbssBANK3
   976  00E7  0085               	movwf	5
   977  00E8  3033               	movlw	51
   978  00E9  318D  254F  3180   	fcall	clear_ram0
   979                           
   980                           ; Initialize objects allocated to BANK1
   981  00EC  3058               	movlw	low __pidataBANK1
   982  00ED  0084               	movwf	4
   983  00EE  308E               	movlw	(high __pidataBANK1)| (0+128)
   984  00EF  0085               	movwf	5
   985  00F0  30A0               	movlw	low __pdataBANK1
   986  00F1  0086               	movwf	6
   987  00F2  3000               	movlw	high __pdataBANK1
   988  00F3  0087               	movwf	7
   989  00F4  3021               	movlw	33
   990  00F5  318D  2549  3180   	fcall	init_ram
   991                           
   992                           ; Initialize objects allocated to BANK2
   993  00F8  30E0               	movlw	low __pidataBANK2
   994  00F9  0084               	movwf	4
   995  00FA  308D               	movlw	(high __pidataBANK2)| (0+128)
   996  00FB  0085               	movwf	5
   997  00FC  3052               	movlw	low __pdataBANK2
   998  00FD  0086               	movwf	6
   999  00FE  3001               	movlw	high __pdataBANK2
  1000  00FF  0087               	movwf	7
  1001  0100  3016               	movlw	22
  1002  0101  318D  2549         	fcall	init_ram
  1003  0103                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006  0103                     __end_of__initialization:	
  1007  0103  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1008  0104  0020               	movlb	0
  1009  0105  3186  2E3D         	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bssCOMMON
  1012  0079                     __pbssCOMMON:	
  1013  0079                     _end:	
  1014  0079                     	ds	2
  1015  007B                     _start:	
  1016  007B                     	ds	2
  1017  007D                     _messageDoneFlag:	
  1018  007D                     	ds	1
  1019                           
  1020                           	psect	bssBANK1
  1021  00C1                     __pbssBANK1:	
  1022  00C1                     DecodeGPS@F4928:	
  1023  00C1                     	ds	6
  1024  00C7                     DecodeGPS@F4930:	
  1025  00C7                     	ds	6
  1026  00CD                     _validLatitude:	
  1027  00CD                     	ds	6
  1028  00D3                     _validLongitude:	
  1029  00D3                     	ds	6
  1030  00D9                     _recordEndAdress:	
  1031  00D9                     	ds	4
  1032  00DD                     _recordFlag:	
  1033  00DD                     	ds	1
  1034  00DE                     _strobeFlag:	
  1035  00DE                     	ds	1
  1036                           
  1037                           	psect	dataBANK1
  1038  00A0                     __pdataBANK1:	
  1039  00A0                     DisableGPS@F4913:	
  1040  00A0                     	ds	13
  1041  00AD                     DecodeGPS@F4926:	
  1042  00AD                     	ds	7
  1043  00B4                     SetupGPS@F4916:	
  1044  00B4                     	ds	6
  1045  00BA                     SetupGPS@F4918:	
  1046  00BA                     	ds	4
  1047  00BE                     _gpsInvalidFlag:	
  1048  00BE                     	ds	1
  1049  00BF                     _validEastWest:	
  1050  00BF                     	ds	1
  1051  00C0                     _validNorthSouth:	
  1052  00C0                     	ds	1
  1053                           
  1054                           	psect	bssBANK2
  1055  0120                     __pbssBANK2:	
  1056  0120                     _gpsMessage:	
  1057  0120                     	ds	50
  1058                           
  1059                           	psect	dataBANK2
  1060  0152                     __pdataBANK2:	
  1061  0152                     UpdateGPS@F4923:	
  1062  0152                     	ds	22
  1063                           
  1064                           	psect	bssBANK3
  1065  01A0                     __pbssBANK3:	
  1066  01A0                     _buffer:	
  1067  01A0                     	ds	51
  1068                           
  1069                           	psect	clrtext
  1070  0D4F                     clear_ram0:	
  1071                           ;	Called with FSR0 containing the base address, and
  1072                           ;	WREG with the size to clear
  1073                           
  1074  0D4F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1075  0D50                     clrloop0:	
  1076  0D50  0180               	clrf	0	;clear RAM location pointed to by FSR
  1077  0D51  3101               	addfsr 0,1
  1078  0D52  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1079  0D53  2D50               	goto	clrloop0	;have we reached the end yet?
  1080  0D54  3400               	retlw	0	;all done for this memory range, return
  1081                           
  1082                           	psect	inittext
  1083  0D49                     init_ram:	
  1084  0D49  00FE               	movwf	126
  1085  0D4A                     initloop:	
  1086  0D4A  0012               	moviw fsr0++
  1087  0D4B  001E               	movwi fsr1++
  1088  0D4C  0BFE               	decfsz	126,f
  1089  0D4D  2D4A               	goto	initloop
  1090  0D4E  3400               	retlw	0
  1091                           
  1092                           	psect	cstackBANK1
  1093  00DF                     __pcstackBANK1:	
  1094  00DF                     ??_main:	
  1095                           
  1096                           ; 0 bytes @ 0x0
  1097  00DF                     	ds	3
  1098  00E2                     main@periodicCounter:	
  1099                           
  1100                           ; 1 bytes @ 0x3
  1101  00E2                     	ds	1
  1102                           
  1103                           	psect	cstackCOMMON
  1104  0070                     __pcstackCOMMON:	
  1105  0070                     ?_InitCLK:	
  1106  0070                     ?_InitGPIO:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_InitADC:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_InitSPI:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_InitTimer1:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_InitWatchdog:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_initUART:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?_ToggleSleepGPS:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_SetupGPS:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?_RecordMode:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_UpdateGPS:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ?_GoToSleep:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ?_GoToSleepTenMin:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_WriteBuffer:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ??_WriteBuffer:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ?_DecodeGPS:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_isr:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ?_WriteSPI:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ?_uart_xmit:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ?_ReadSPI:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_ReadStatusSPI:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_ReadBuffer:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 1 bytes @ 0x0
  1171  0070                     	ds	1
  1172  0071                     WriteBuffer@data:	
  1173                           
  1174                           ; 1 bytes @ 0x1
  1175  0071                     	ds	1
  1176  0072                     ??_isr:	
  1177                           
  1178                           ; 0 bytes @ 0x2
  1179  0072                     	ds	5
  1180  0077                     _isr$528:	
  1181                           
  1182                           ; 2 bytes @ 0x7
  1183  0077                     	ds	2
  1184                           
  1185                           	psect	cstackBANK0
  1186  0020                     __pcstackBANK0:	
  1187  0020                     ??_InitCLK:	
  1188  0020                     ??_InitGPIO:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  0020                     ??_InitADC:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  0020                     ??_InitSPI:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  0020                     ??_InitTimer1:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  0020                     ??_InitWatchdog:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0020                     ??_initUART:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0020                     ??_ToggleSleepGPS:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0020                     ??_GoToSleep:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0020                     ??_GoToSleepTenMin:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0020                     ??_WriteSPI:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0020                     ??_ReadSPI:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0020                     ??_ReadBuffer:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0020                     ??_uart_xmit:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0020                     ?_compute_checksum:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0020                     ?___wmul:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0020                     uart_xmit@mydata_byte:	
  1234                           ; 2 bytes @ 0x0
  1235                           
  1236  0020                     compute_checksum@size:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0020                     ___wmul@multiplier:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x0
  1244  0020                     	ds	1
  1245  0021                     ReadSPI@dataByte:	
  1246  0021                     ReadBuffer@read_data:	
  1247                           ; 1 bytes @ 0x1
  1248                           
  1249  0021                     GoToSleep@count:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252  0021                     GoToSleepTenMin@count:	
  1253                           ; 1 bytes @ 0x1
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x1
  1257  0021                     	ds	1
  1258  0022                     ??_compute_checksum:	
  1259  0022                     WriteSPI@temp:	
  1260                           ; 0 bytes @ 0x2
  1261                           
  1262  0022                     ___wmul@multiplicand:	
  1263                           ; 2 bytes @ 0x2
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x2
  1267  0022                     	ds	2
  1268  0024                     ??___wmul:	
  1269  0024                     WriteSPI@databyte:	
  1270                           ; 0 bytes @ 0x4
  1271                           
  1272  0024                     compute_checksum@checksum:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275  0024                     ___wmul@product:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0x4
  1280  0024                     	ds	1
  1281  0025                     ??_ReadStatusSPI:	
  1282  0025                     compute_checksum@data:	
  1283                           ; 0 bytes @ 0x5
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x5
  1287  0025                     	ds	1
  1288  0026                     ?___lwdiv:	
  1289  0026                     ReadStatusSPI@dataRead:	
  1290                           ; 2 bytes @ 0x6
  1291                           
  1292  0026                     compute_checksum@x:	
  1293                           ; 1 bytes @ 0x6
  1294                           
  1295  0026                     ___lwdiv@divisor:	
  1296                           ; 2 bytes @ 0x6
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x6
  1300  0026                     	ds	1
  1301  0027                     ?_WriteOverheadSPI:	
  1302  0027                     WriteOverheadSPI@address:	
  1303                           ; 0 bytes @ 0x7
  1304                           
  1305                           
  1306                           ; 4 bytes @ 0x7
  1307  0027                     	ds	1
  1308  0028                     ?_uart_write_message:	
  1309  0028                     uart_write_message@size:	
  1310                           ; 0 bytes @ 0x8
  1311                           
  1312  0028                     ___lwdiv@dividend:	
  1313                           ; 2 bytes @ 0x8
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x8
  1317  0028                     	ds	2
  1318  002A                     ??_uart_write_message:	
  1319  002A                     ??___lwdiv:	
  1320                           ; 0 bytes @ 0xA
  1321                           
  1322                           
  1323                           ; 0 bytes @ 0xA
  1324  002A                     	ds	1
  1325  002B                     ??_WriteOverheadSPI:	
  1326  002B                     ___lwdiv@quotient:	
  1327                           ; 0 bytes @ 0xB
  1328                           
  1329                           
  1330                           ; 2 bytes @ 0xB
  1331  002B                     	ds	2
  1332  002D                     ___lwdiv@counter:	
  1333  002D                     _uart_write_message$1290:	
  1334                           ; 1 bytes @ 0xD
  1335                           
  1336                           
  1337                           ; 2 bytes @ 0xD
  1338  002D                     	ds	1
  1339  002E                     ??_DecodeGPS:	
  1340  002E                     ?___lwmod:	
  1341                           ; 0 bytes @ 0xE
  1342                           
  1343  002E                     ___lwmod@divisor:	
  1344                           ; 2 bytes @ 0xE
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0xE
  1348  002E                     	ds	1
  1349  002F                     _uart_write_message$1291:	
  1350                           
  1351                           ; 2 bytes @ 0xF
  1352  002F                     	ds	1
  1353  0030                     ___lwmod@dividend:	
  1354  0030                     DecodeGPS@messageID:	
  1355                           ; 2 bytes @ 0x10
  1356                           
  1357                           
  1358                           ; 7 bytes @ 0x10
  1359  0030                     	ds	1
  1360  0031                     uart_write_message@x:	
  1361  0031                     WriteOverheadSPI@address_bytes:	
  1362                           ; 2 bytes @ 0x11
  1363                           
  1364                           
  1365                           ; 3 bytes @ 0x11
  1366  0031                     	ds	1
  1367  0032                     ??___lwmod:	
  1368                           
  1369                           ; 0 bytes @ 0x12
  1370  0032                     	ds	1
  1371  0033                     uart_write_message@checksum:	
  1372  0033                     ___lwmod@counter:	
  1373                           ; 1 bytes @ 0x13
  1374                           
  1375                           
  1376                           ; 1 bytes @ 0x13
  1377  0033                     	ds	1
  1378  0034                     ?_sprintf:	
  1379  0034                     WriteOverheadSPI@StatusReg:	
  1380                           ; 2 bytes @ 0x14
  1381                           
  1382  0034                     uart_write_message@data:	
  1383                           ; 1 bytes @ 0x14
  1384                           
  1385  0034                     sprintf@f:	
  1386                           ; 1 bytes @ 0x14
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x14
  1390  0034                     	ds	1
  1391  0035                     ??_RecordMode:	
  1392  0035                     uart_write_message@ascii_checksum:	
  1393                           ; 0 bytes @ 0x15
  1394                           
  1395                           
  1396                           ; 2 bytes @ 0x15
  1397  0035                     	ds	2
  1398  0037                     DecodeGPS@northSouth:	
  1399                           
  1400                           ; 1 bytes @ 0x17
  1401  0037                     	ds	1
  1402  0038                     DecodeGPS@eastWest:	
  1403                           
  1404                           ; 1 bytes @ 0x18
  1405  0038                     	ds	1
  1406  0039                     DecodeGPS@status:	
  1407                           
  1408                           ; 1 bytes @ 0x19
  1409  0039                     	ds	1
  1410  003A                     ??_sprintf:	
  1411  003A                     RecordMode@count:	
  1412                           ; 0 bytes @ 0x1A
  1413                           
  1414  003A                     DecodeGPS@latitude:	
  1415                           ; 2 bytes @ 0x1A
  1416                           
  1417                           
  1418                           ; 6 bytes @ 0x1A
  1419  003A                     	ds	2
  1420  003C                     RecordMode@address:	
  1421                           
  1422                           ; 4 bytes @ 0x1C
  1423  003C                     	ds	2
  1424  003E                     sprintf@flag:	
  1425                           
  1426                           ; 1 bytes @ 0x1E
  1427  003E                     	ds	1
  1428  003F                     sprintf@prec:	
  1429                           
  1430                           ; 1 bytes @ 0x1F
  1431  003F                     	ds	1
  1432  0040                     sprintf@ap:	
  1433  0040                     RecordMode@x:	
  1434                           ; 1 bytes @ 0x20
  1435                           
  1436  0040                     DecodeGPS@longitude:	
  1437                           ; 2 bytes @ 0x20
  1438                           
  1439                           
  1440                           ; 6 bytes @ 0x20
  1441  0040                     	ds	1
  1442  0041                     sprintf@sp:	
  1443                           
  1444                           ; 1 bytes @ 0x21
  1445  0041                     	ds	1
  1446  0042                     sprintf@_val:	
  1447                           
  1448                           ; 4 bytes @ 0x22
  1449  0042                     	ds	4
  1450  0046                     sprintf@c:	
  1451  0046                     DecodeGPS@x:	
  1452                           ; 1 bytes @ 0x26
  1453                           
  1454                           
  1455                           ; 2 bytes @ 0x26
  1456  0046                     	ds	1
  1457  0047                     ??_SetupGPS:	
  1458                           
  1459                           ; 0 bytes @ 0x27
  1460  0047                     	ds	1
  1461  0048                     ??_UpdateGPS:	
  1462                           
  1463                           ; 0 bytes @ 0x28
  1464  0048                     	ds	2
  1465  004A                     SetupGPS@message:	
  1466                           
  1467                           ; 22 bytes @ 0x2A
  1468  004A                     	ds	1
  1469  004B                     UpdateGPS@GPSupdateMessage:	
  1470                           
  1471                           ; 22 bytes @ 0x2B
  1472  004B                     	ds	21
  1473  0060                     SetupGPS@startSequence:	
  1474                           
  1475                           ; 6 bytes @ 0x40
  1476  0060                     	ds	6
  1477  0066                     SetupGPS@MID:	
  1478                           
  1479                           ; 4 bytes @ 0x46
  1480  0066                     	ds	4
  1481  006A                     SetupGPS@x:	
  1482                           
  1483                           ; 2 bytes @ 0x4A
  1484  006A                     	ds	2
  1485  006C                     ?_main:	
  1486  006C                     main@argc:	
  1487                           ; 2 bytes @ 0x4C
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x4C
  1491  006C                     	ds	2
  1492  006E                     main@argv:	
  1493                           
  1494                           ; 2 bytes @ 0x4E
  1495  006E                     	ds	2
  1496                           
  1497                           	psect	maintext
  1498  063D                     __pmaintext:	
  1499 ;;
  1500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1501 ;;
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 20 in file "launcher_main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  argc            2   76[BANK0 ] int 
  1507 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  periodicCoun    1    3[BANK1 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2   76[BANK0 ] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 17F/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1519 ;;      Params:         0       4       0       0       0       0       0       0
  1520 ;;      Locals:         0       0       1       0       0       0       0       0
  1521 ;;      Temps:          0       0       3       0       0       0       0       0
  1522 ;;      Totals:         0       4       4       0       0       0       0       0
  1523 ;;Total ram usage:        8 bytes
  1524 ;; Hardware stack levels required when called:    6
  1525 ;; This function calls:
  1526 ;;		_GoToSleep
  1527 ;;		_GoToSleepTenMin
  1528 ;;		_InitADC
  1529 ;;		_InitCLK
  1530 ;;		_InitGPIO
  1531 ;;		_InitSPI
  1532 ;;		_InitTimer1
  1533 ;;		_InitWatchdog
  1534 ;;		_RecordMode
  1535 ;;		_SetupGPS
  1536 ;;		_ToggleSleepGPS
  1537 ;;		_UpdateGPS
  1538 ;;		_initUART
  1539 ;; This function is called by:
  1540 ;;		Startup code after reset
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _main
  1546  063D                     _main:	
  1547                           
  1548                           ;launcher_main.c: 23: InitCLK();
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1552  063D  318D  255C  3186   	fcall	_InitCLK
  1553                           
  1554                           ;launcher_main.c: 24: InitGPIO();
  1555  0640  318E  269B  3186   	fcall	_InitGPIO
  1556                           
  1557                           ;launcher_main.c: 25: InitADC();
  1558  0643  318E  2625  3186   	fcall	_InitADC
  1559                           
  1560                           ;launcher_main.c: 26: InitSPI();
  1561  0646  318D  25BB  3186   	fcall	_InitSPI
  1562                           
  1563                           ;launcher_main.c: 27: InitTimer1();
  1564  0649  318D  257A  3186   	fcall	_InitTimer1
  1565                           
  1566                           ;launcher_main.c: 28: InitWatchdog();
  1567  064C  318D  2555  3186   	fcall	_InitWatchdog
  1568                           
  1569                           ;launcher_main.c: 29: initUART();
  1570  064F  318D  2589  3186   	fcall	_initUART
  1571                           
  1572                           ;launcher_main.c: 31: unsigned char periodicCounter;
  1573                           ;launcher_main.c: 32: gpsIndex = 1;
  1574  0652  3001               	movlw	1
  1575  0653  0021               	movlb	1	; select bank1
  1576  0654  00DF               	movwf	??_main^(0+128)
  1577  0655  085F               	movf	??_main^(0+128),w
  1578  0656  00E3               	movwf	_gpsIndex^(0+128)	;volatile
  1579                           
  1580                           ;launcher_main.c: 34: INTCONbits.GIE = 1;
  1581  0657  178B               	bsf	11,7	;volatile
  1582                           
  1583                           ;launcher_main.c: 36: ToggleSleepGPS();
  1584  0658  318E  2679  3186   	fcall	_ToggleSleepGPS
  1585                           
  1586                           ;launcher_main.c: 37: SetupGPS();
  1587  065B  3186  26DC  3186   	fcall	_SetupGPS
  1588  065E                     l2360:	
  1589                           ;launcher_main.c: 39: while(1){
  1590                           
  1591                           
  1592                           ;launcher_main.c: 42: if(strobeFlag)
  1593  065E  0021               	movlb	1	; select bank1
  1594  065F  085E               	movf	_strobeFlag^(0+128),w
  1595  0660  1903               	btfsc	3,2
  1596  0661  2E73               	goto	l104
  1597                           
  1598                           ;launcher_main.c: 43: {
  1599                           ;launcher_main.c: 45: PORTAbits.RA1 = 1;
  1600  0662  0020               	movlb	0	; select bank0
  1601  0663  148C               	bsf	12,1	;volatile
  1602                           
  1603                           ;launcher_main.c: 46: _delay((unsigned long)((100)*(16000000/4000.0)));
  1604  0664  3003               	movlw	3
  1605  0665  0021               	movlb	1	; select bank1
  1606  0666  00E1               	movwf	(??_main^(0+128)+2)
  1607  0667  3008               	movlw	8
  1608  0668  00E0               	movwf	(??_main^(0+128)+1)
  1609  0669  3078               	movlw	120
  1610  066A  00DF               	movwf	??_main^(0+128)
  1611  066B                     u2117:	
  1612  066B  0BDF               	decfsz	??_main^(0+128),f
  1613  066C  2E6B               	goto	u2117
  1614  066D  0BE0               	decfsz	(??_main^(0+128)+1),f
  1615  066E  2E6B               	goto	u2117
  1616  066F  0BE1               	decfsz	(??_main^(0+128)+2),f
  1617  0670  2E6B               	goto	u2117
  1618                           
  1619                           ;launcher_main.c: 47: PORTAbits.RA1 = 0;
  1620  0671  0020               	movlb	0	; select bank0
  1621  0672  108C               	bcf	12,1	;volatile
  1622  0673                     l104:	
  1623                           
  1624                           ;launcher_main.c: 48: }
  1625                           ;launcher_main.c: 50: if(recordFlag)
  1626  0673  0021               	movlb	1	; select bank1
  1627  0674  085D               	movf	_recordFlag^(0+128),w
  1628  0675  1903               	btfsc	3,2
  1629  0676  2E7B               	goto	l2370
  1630                           
  1631                           ;launcher_main.c: 51: {
  1632                           ;launcher_main.c: 52: RecordMode();
  1633  0677  3183  23CA  3186   	fcall	_RecordMode
  1634  067A  0021               	movlb	1	; select bank1
  1635  067B                     l2370:	
  1636                           
  1637                           ;launcher_main.c: 53: }
  1638                           ;launcher_main.c: 56: UpdateGPS();
  1639  067B  318E  26F5  3186   	fcall	_UpdateGPS
  1640                           
  1641                           ;launcher_main.c: 58: if(gpsInvalidFlag)
  1642  067E  0021               	movlb	1	; select bank1
  1643  067F  083E               	movf	_gpsInvalidFlag^(0+128),w
  1644  0680  1903               	btfsc	3,2
  1645  0681  2EA8               	goto	l2380
  1646                           
  1647                           ;launcher_main.c: 59: {
  1648                           ;launcher_main.c: 60: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1649  0682  0022               	movlb	2	; select bank2
  1650  0683  080D               	movf	13,w	;volatile
  1651  0684  39FF               	andlw	255
  1652  0685  3820               	iorlw	32
  1653  0686  0021               	movlb	1	; select bank1
  1654  0687  00DF               	movwf	??_main^(0+128)
  1655  0688  0020               	movlb	0	; select bank0
  1656  0689  080D               	movf	13,w	;volatile
  1657  068A  0021               	movlb	1	; select bank1
  1658  068B  065F               	xorwf	??_main^(0+128),w
  1659  068C  3900               	andlw	-256
  1660  068D  065F               	xorwf	??_main^(0+128),w
  1661  068E  0020               	movlb	0	; select bank0
  1662  068F  008D               	movwf	13	;volatile
  1663                           
  1664                           ;launcher_main.c: 61: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1665  0690  0022               	movlb	2	; select bank2
  1666  0691  080D               	movf	13,w	;volatile
  1667  0692  39FF               	andlw	255
  1668  0693  39EF               	andlw	239
  1669  0694  0021               	movlb	1	; select bank1
  1670  0695  00DF               	movwf	??_main^(0+128)
  1671  0696  0020               	movlb	0	; select bank0
  1672  0697  080D               	movf	13,w	;volatile
  1673  0698  0021               	movlb	1	; select bank1
  1674  0699  065F               	xorwf	??_main^(0+128),w
  1675  069A  3900               	andlw	-256
  1676  069B  065F               	xorwf	??_main^(0+128),w
  1677  069C  0020               	movlb	0	; select bank0
  1678  069D  008D               	movwf	13	;volatile
  1679                           
  1680                           ;launcher_main.c: 62: if(periodicCounter < 18)
  1681  069E  3012               	movlw	18
  1682  069F  0021               	movlb	1	; select bank1
  1683  06A0  0262               	subwf	main@periodicCounter^(0+128),w
  1684  06A1  1803               	skipnc
  1685  06A2  2ECC               	goto	l2386
  1686                           
  1687                           ;launcher_main.c: 63: periodicCounter++;
  1688  06A3  3001               	movlw	1
  1689  06A4  00DF               	movwf	??_main^(0+128)
  1690  06A5  085F               	movf	??_main^(0+128),w
  1691  06A6  07E2               	addwf	main@periodicCounter^(0+128),f
  1692                           
  1693                           ;launcher_main.c: 64: }
  1694  06A7  2ECC               	goto	l2386
  1695  06A8                     l2380:	
  1696                           
  1697                           ;launcher_main.c: 65: else
  1698                           ;launcher_main.c: 66: {
  1699                           ;launcher_main.c: 67: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1700  06A8  0022               	movlb	2	; select bank2
  1701  06A9  080D               	movf	13,w	;volatile
  1702  06AA  39FF               	andlw	255
  1703  06AB  3810               	iorlw	16
  1704  06AC  0021               	movlb	1	; select bank1
  1705  06AD  00DF               	movwf	??_main^(0+128)
  1706  06AE  0020               	movlb	0	; select bank0
  1707  06AF  080D               	movf	13,w	;volatile
  1708  06B0  0021               	movlb	1	; select bank1
  1709  06B1  065F               	xorwf	??_main^(0+128),w
  1710  06B2  3900               	andlw	-256
  1711  06B3  065F               	xorwf	??_main^(0+128),w
  1712  06B4  0020               	movlb	0	; select bank0
  1713  06B5  008D               	movwf	13	;volatile
  1714                           
  1715                           ;launcher_main.c: 68: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1716  06B6  0022               	movlb	2	; select bank2
  1717  06B7  080D               	movf	13,w	;volatile
  1718  06B8  39FF               	andlw	255
  1719  06B9  39DF               	andlw	223
  1720  06BA  0021               	movlb	1	; select bank1
  1721  06BB  00DF               	movwf	??_main^(0+128)
  1722  06BC  0020               	movlb	0	; select bank0
  1723  06BD  080D               	movf	13,w	;volatile
  1724  06BE  0021               	movlb	1	; select bank1
  1725  06BF  065F               	xorwf	??_main^(0+128),w
  1726  06C0  3900               	andlw	-256
  1727  06C1  065F               	xorwf	??_main^(0+128),w
  1728  06C2  0020               	movlb	0	; select bank0
  1729  06C3  008D               	movwf	13	;volatile
  1730                           
  1731                           ;launcher_main.c: 69: periodicCounter = 10;
  1732  06C4  300A               	movlw	10
  1733  06C5  0021               	movlb	1	; select bank1
  1734  06C6  00DF               	movwf	??_main^(0+128)
  1735  06C7  085F               	movf	??_main^(0+128),w
  1736  06C8  00E2               	movwf	main@periodicCounter^(0+128)
  1737                           
  1738                           ;launcher_main.c: 70: ToggleSleepGPS();
  1739  06C9  318E  2679  3186   	fcall	_ToggleSleepGPS
  1740  06CC                     l2386:	
  1741                           
  1742                           ;launcher_main.c: 71: }
  1743                           ;launcher_main.c: 73: if(!recordFlag)
  1744  06CC  0021               	movlb	1	; select bank1
  1745  06CD  08DD               	movf	_recordFlag^(0+128),f
  1746  06CE  1D03               	skipz
  1747  06CF  2E5E               	goto	l2360
  1748                           
  1749                           ;launcher_main.c: 74: {
  1750                           ;launcher_main.c: 75: if(gpsInvalidFlag)
  1751  06D0  083E               	movf	_gpsInvalidFlag^(0+128),w
  1752  06D1  1903               	btfsc	3,2
  1753  06D2  2ED8               	goto	l2392
  1754                           
  1755                           ;launcher_main.c: 76: GoToSleep(periodicCounter);
  1756  06D3  0862               	movf	main@periodicCounter^(0+128),w
  1757  06D4  318D  25A9  3186   	fcall	_GoToSleep
  1758  06D7  2E5E               	goto	l2360
  1759  06D8                     l2392:	
  1760                           
  1761                           ;launcher_main.c: 77: else
  1762                           ;launcher_main.c: 78: GoToSleepTenMin();
  1763  06D8  318E  263E  3186   	fcall	_GoToSleepTenMin
  1764  06DB  2E5E               	goto	l2360
  1765  06DC                     __end_of_main:	
  1766                           ;launcher_main.c: 79: }
  1767                           ;launcher_main.c: 80: }
  1768                           ;launcher_main.c: 82: return (0);
  1769                           ;	Return value of _main is never used
  1770                           
  1771                           
  1772                           	psect	text1
  1773  0D89                     __ptext1:	
  1774 ;; *************** function _initUART *****************
  1775 ;; Defined at:
  1776 ;;		line 252 in file "launcher_functions.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;		None               void
  1783 ;; Registers used:
  1784 ;;		wreg, status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1790 ;;      Params:         0       0       0       0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    2
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _initUART
  1806  0D89                     _initUART:	
  1807                           
  1808                           ;launcher_functions.c: 255: TRISCbits.TRISC6 = 0;
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _initUART: [wreg+status,2]
  1812  0D89  0021               	movlb	1	; select bank1
  1813  0D8A  130E               	bcf	14,6	;volatile
  1814                           
  1815                           ;launcher_functions.c: 256: TRISCbits.TRISC7 = 1;
  1816  0D8B  178E               	bsf	14,7	;volatile
  1817                           
  1818                           ;launcher_functions.c: 257: TXSTAbits.BRGH = 0;
  1819  0D8C  0023               	movlb	3	; select bank3
  1820  0D8D  111E               	bcf	30,2	;volatile
  1821                           
  1822                           ;launcher_functions.c: 259: SPBRGH = 0;
  1823  0D8E  019C               	clrf	28	;volatile
  1824                           
  1825                           ;launcher_functions.c: 260: SPBRGL = 51;
  1826  0D8F  3033               	movlw	51
  1827  0D90  009B               	movwf	27	;volatile
  1828                           
  1829                           ;launcher_functions.c: 261: TXSTAbits.TX9 = 0;
  1830  0D91  131E               	bcf	30,6	;volatile
  1831                           
  1832                           ;launcher_functions.c: 262: TXSTAbits.SYNC = 0;
  1833  0D92  121E               	bcf	30,4	;volatile
  1834                           
  1835                           ;launcher_functions.c: 263: TXSTAbits.TXEN = 1;
  1836  0D93  169E               	bsf	30,5	;volatile
  1837                           
  1838                           ;launcher_functions.c: 265: RCSTAbits.SPEN = 1;
  1839  0D94  179D               	bsf	29,7	;volatile
  1840                           
  1841                           ;launcher_functions.c: 266: RCSTAbits.RX9 = 0;
  1842  0D95  131D               	bcf	29,6	;volatile
  1843                           
  1844                           ;launcher_functions.c: 267: RCSTAbits.CREN = 1;
  1845  0D96  161D               	bsf	29,4	;volatile
  1846  0D97  0008               	return
  1847  0D98                     __end_of_initUART:	
  1848                           
  1849                           	psect	text2
  1850  0EF5                     __ptext2:	
  1851 ;; *************** function _UpdateGPS *****************
  1852 ;; Defined at:
  1853 ;;		line 357 in file "launcher_functions.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  GPSupdateMes   22   43[BANK0 ] unsigned char [22]
  1858 ;; Return value:  Size  Location     Type
  1859 ;;		None               void
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1867 ;;      Params:         0       0       0       0       0       0       0       0
  1868 ;;      Locals:         0      22       0       0       0       0       0       0
  1869 ;;      Temps:          0       3       0       0       0       0       0       0
  1870 ;;      Totals:         0      25       0       0       0       0       0       0
  1871 ;;Total ram usage:       25 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    4
  1874 ;; This function calls:
  1875 ;;		_DecodeGPS
  1876 ;;		_uart_write_message
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _UpdateGPS
  1884  0EF5                     _UpdateGPS:	
  1885                           
  1886                           ;launcher_functions.c: 359: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,00,00*"
      +                          ;
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1890  0EF5  3052               	movlw	low UpdateGPS@F4923
  1891  0EF6  0086               	movwf	6
  1892  0EF7  3001               	movlw	high UpdateGPS@F4923
  1893  0EF8  0087               	movwf	7
  1894  0EF9  304B               	movlw	low UpdateGPS@GPSupdateMessage
  1895  0EFA  0084               	movwf	4
  1896  0EFB  3000               	movlw	high UpdateGPS@GPSupdateMessage
  1897  0EFC  0085               	movwf	5
  1898  0EFD  3016               	movlw	22
  1899  0EFE  0020               	movlb	0	; select bank0
  1900  0EFF  00C8               	movwf	??_UpdateGPS
  1901  0F00                     u1790:	
  1902  0F00  0016               	moviw fsr1++
  1903  0F01  001A               	movwi fsr0++
  1904  0F02  0BC8               	decfsz	??_UpdateGPS,f
  1905  0F03  2F00               	goto	u1790
  1906                           
  1907                           ;launcher_functions.c: 362: RCIE = 1;
  1908  0F04  0021               	movlb	1	; select bank1
  1909  0F05  1691               	bsf	17,5	;volatile
  1910                           
  1911                           ;launcher_functions.c: 363: PEIE = 1;
  1912  0F06  170B               	bsf	11,6	;volatile
  1913                           
  1914                           ;launcher_functions.c: 364: GIE = 1;
  1915  0F07  178B               	bsf	11,7	;volatile
  1916                           
  1917                           ;launcher_functions.c: 366: gpsIndex = 0;
  1918  0F08  01E3               	clrf	_gpsIndex^(0+128)	;volatile
  1919                           
  1920                           ;launcher_functions.c: 367: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1921  0F09  3015               	movlw	21
  1922  0F0A  0020               	movlb	0	; select bank0
  1923  0F0B  00CA               	movwf	??_UpdateGPS+2
  1924  0F0C  304B               	movlw	75
  1925  0F0D  00C9               	movwf	??_UpdateGPS+1
  1926  0F0E  30D1               	movlw	209
  1927  0F0F  00C8               	movwf	??_UpdateGPS
  1928  0F10                     u2127:	
  1929  0F10  0BC8               	decfsz	??_UpdateGPS,f
  1930  0F11  2F10               	goto	u2127
  1931  0F12  0BC9               	decfsz	??_UpdateGPS+1,f
  1932  0F13  2F10               	goto	u2127
  1933  0F14  0BCA               	decfsz	??_UpdateGPS+2,f
  1934  0F15  2F10               	goto	u2127
  1935  0F16  0000               	nop
  1936                           
  1937                           ;launcher_functions.c: 368: uart_write_message(GPSupdateMessage, 22);
  1938  0F17  3016               	movlw	22
  1939  0F18  0020               	movlb	0	; select bank0
  1940  0F19  00A8               	movwf	uart_write_message@size
  1941  0F1A  3000               	movlw	0
  1942  0F1B  00A9               	movwf	uart_write_message@size+1
  1943  0F1C  304B               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  1944  0F1D  3187  276E  318E   	fcall	_uart_write_message
  1945  0F20                     l2310:	
  1946                           ;launcher_functions.c: 369: while(!messageDoneFlag);
  1947                           
  1948  0F20  087D               	movf	_messageDoneFlag,w
  1949  0F21  1903               	btfsc	3,2
  1950  0F22  2F20               	goto	l2310
  1951                           
  1952                           ;launcher_functions.c: 370: messageDoneFlag = 0;
  1953  0F23  01FD               	clrf	_messageDoneFlag
  1954                           
  1955                           ;launcher_functions.c: 371: DecodeGPS();
  1956  0F24  3181  2107         	fcall	_DecodeGPS
  1957  0F26  0008               	return
  1958  0F27                     __end_of_UpdateGPS:	
  1959                           
  1960                           	psect	text3
  1961  0107                     __ptext3:	
  1962 ;; *************** function _DecodeGPS *****************
  1963 ;; Defined at:
  1964 ;;		line 377 in file "launcher_functions.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  messageID       7   16[BANK0 ] unsigned char [7]
  1969 ;;  longitude       6   32[BANK0 ] unsigned int [3]
  1970 ;;  latitude        6   26[BANK0 ] unsigned int [3]
  1971 ;;  x               2   38[BANK0 ] int 
  1972 ;;  status          1   25[BANK0 ] unsigned char 
  1973 ;;  eastWest        1   24[BANK0 ] unsigned char 
  1974 ;;  northSouth      1   23[BANK0 ] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;		None               void
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1984 ;;      Params:         0       0       0       0       0       0       0       0
  1985 ;;      Locals:         0      24       0       0       0       0       0       0
  1986 ;;      Temps:          0       2       0       0       0       0       0       0
  1987 ;;      Totals:         0      26       0       0       0       0       0       0
  1988 ;;Total ram usage:       26 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    3
  1991 ;; This function calls:
  1992 ;;		___lwdiv
  1993 ;;		___wmul
  1994 ;; This function is called by:
  1995 ;;		_UpdateGPS
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _DecodeGPS
  2001  0107                     _DecodeGPS:	
  2002                           
  2003                           ;launcher_functions.c: 380: unsigned char messageID[7] = "$GPGLL";
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2007  0107  30AD               	movlw	low DecodeGPS@F4926
  2008  0108  0086               	movwf	6
  2009  0109  3000               	movlw	high DecodeGPS@F4926
  2010  010A  0087               	movwf	7
  2011  010B  3030               	movlw	low DecodeGPS@messageID
  2012  010C  0084               	movwf	4
  2013  010D  3000               	movlw	high DecodeGPS@messageID
  2014  010E  0085               	movwf	5
  2015  010F  3007               	movlw	7
  2016  0110  0020               	movlb	0	; select bank0
  2017  0111  00AE               	movwf	??_DecodeGPS
  2018  0112                     u1490:	
  2019  0112  0016               	moviw fsr1++
  2020  0113  001A               	movwi fsr0++
  2021  0114  0BAE               	decfsz	??_DecodeGPS,f
  2022  0115  2912               	goto	u1490
  2023                           
  2024                           ;launcher_functions.c: 381: unsigned int latitude[3] = {0,0,0};
  2025  0116  30C1               	movlw	low DecodeGPS@F4928
  2026  0117  0086               	movwf	6
  2027  0118  3000               	movlw	high DecodeGPS@F4928
  2028  0119  0087               	movwf	7
  2029  011A  303A               	movlw	low DecodeGPS@latitude
  2030  011B  0084               	movwf	4
  2031  011C  3000               	movlw	high DecodeGPS@latitude
  2032  011D  0085               	movwf	5
  2033  011E  3006               	movlw	6
  2034  011F  00AE               	movwf	??_DecodeGPS
  2035  0120                     u1500:	
  2036  0120  0016               	moviw fsr1++
  2037  0121  001A               	movwi fsr0++
  2038  0122  0BAE               	decfsz	??_DecodeGPS,f
  2039  0123  2920               	goto	u1500
  2040                           
  2041                           ;launcher_functions.c: 382: unsigned int longitude[3] = {0,0,0};
  2042  0124  30C7               	movlw	low DecodeGPS@F4930
  2043  0125  0086               	movwf	6
  2044  0126  3000               	movlw	high DecodeGPS@F4930
  2045  0127  0087               	movwf	7
  2046  0128  3040               	movlw	low DecodeGPS@longitude
  2047  0129  0084               	movwf	4
  2048  012A  3000               	movlw	high DecodeGPS@longitude
  2049  012B  0085               	movwf	5
  2050  012C  3006               	movlw	6
  2051  012D  00AE               	movwf	??_DecodeGPS
  2052  012E                     u1510:	
  2053  012E  0016               	moviw fsr1++
  2054  012F  001A               	movwi fsr0++
  2055  0130  0BAE               	decfsz	??_DecodeGPS,f
  2056  0131  292E               	goto	u1510
  2057                           
  2058                           ;launcher_functions.c: 383: unsigned char northSouth;
  2059                           ;launcher_functions.c: 384: unsigned char eastWest;
  2060                           ;launcher_functions.c: 385: unsigned char status;
  2061                           ;launcher_functions.c: 386: int x;
  2062                           ;launcher_functions.c: 388: for(x=0;x<6;x++)
  2063  0132  01C6               	clrf	DecodeGPS@x
  2064  0133  01C7               	clrf	DecodeGPS@x+1
  2065  0134  0847               	movf	DecodeGPS@x+1,w
  2066  0135  3A80               	xorlw	128
  2067  0136  00AE               	movwf	??_DecodeGPS
  2068  0137  3080               	movlw	128
  2069  0138  022E               	subwf	??_DecodeGPS,w
  2070  0139  1D03               	skipz
  2071  013A  293D               	goto	u1525
  2072  013B  3006               	movlw	6
  2073  013C  0246               	subwf	DecodeGPS@x,w
  2074  013D                     u1525:	
  2075  013D  1803               	btfsc	3,0
  2076  013E  2960               	goto	l1948
  2077  013F                     l1942:	
  2078                           
  2079                           ;launcher_functions.c: 389: {
  2080                           ;launcher_functions.c: 390: if(gpsMessage[x] != messageID[x])
  2081  013F  0020               	movlb	0	; select bank0
  2082  0140  0846               	movf	DecodeGPS@x,w
  2083  0141  3E30               	addlw	DecodeGPS@messageID& (0+255)
  2084  0142  0086               	movwf	6
  2085  0143  0187               	clrf	7
  2086  0144  0846               	movf	DecodeGPS@x,w
  2087  0145  3E20               	addlw	_gpsMessage& (0+255)
  2088  0146  0084               	movwf	4
  2089  0147  3001               	movlw	1	; select bank2/3
  2090  0148  0085               	movwf	5
  2091  0149  0800               	movf	0,w
  2092  014A  0601               	xorwf	1,w
  2093  014B  1903               	skipnz
  2094  014C  2950               	goto	l1946
  2095                           
  2096                           ;launcher_functions.c: 391: gpsInvalidFlag = 1;
  2097  014D  0021               	movlb	1	; select bank1
  2098  014E  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2099  014F  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2100  0150                     l1946:	
  2101  0150  3001               	movlw	1
  2102  0151  0020               	movlb	0	; select bank0
  2103  0152  07C6               	addwf	DecodeGPS@x,f
  2104  0153  3000               	movlw	0
  2105  0154  3DC7               	addwfc	DecodeGPS@x+1,f
  2106  0155  0847               	movf	DecodeGPS@x+1,w
  2107  0156  3A80               	xorlw	128
  2108  0157  00AE               	movwf	??_DecodeGPS
  2109  0158  3080               	movlw	128
  2110  0159  022E               	subwf	??_DecodeGPS,w
  2111  015A  1D03               	skipz
  2112  015B  295E               	goto	u1545
  2113  015C  3006               	movlw	6
  2114  015D  0246               	subwf	DecodeGPS@x,w
  2115  015E                     u1545:	
  2116  015E  1C03               	skipc
  2117  015F  293F               	goto	l1942
  2118  0160                     l1948:	
  2119                           
  2120                           ;launcher_functions.c: 392: }
  2121                           ;launcher_functions.c: 395: x = x + 1;
  2122  0160  0020               	movlb	0	; select bank0
  2123  0161  0846               	movf	DecodeGPS@x,w
  2124  0162  3E01               	addlw	1
  2125  0163  00C6               	movwf	DecodeGPS@x
  2126  0164  3000               	movlw	0
  2127  0165  3D47               	addwfc	DecodeGPS@x+1,w
  2128  0166  00C7               	movwf	DecodeGPS@x+1
  2129                           
  2130                           ;launcher_functions.c: 398: if(gpsMessage[x]!= ',')
  2131  0167  0846               	movf	DecodeGPS@x,w
  2132  0168  3E20               	addlw	_gpsMessage& (0+255)
  2133  0169  0086               	movwf	6
  2134  016A  3001               	movlw	1	; select bank2/3
  2135  016B  0087               	movwf	7
  2136  016C  0801               	movf	1,w
  2137  016D  3A2C               	xorlw	44
  2138  016E  1903               	skipnz
  2139  016F  2A34               	goto	l1980
  2140                           
  2141                           ;launcher_functions.c: 399: {
  2142                           ;launcher_functions.c: 401: latitude[0] = (gpsMessage[x++] - 48)*10;
  2143  0170  0846               	movf	DecodeGPS@x,w
  2144  0171  3E20               	addlw	_gpsMessage& (0+255)
  2145  0172  0086               	movwf	6
  2146  0173  3001               	movlw	1	; select bank2/3
  2147  0174  0087               	movwf	7
  2148  0175  0801               	movf	1,w
  2149  0176  3ED0               	addlw	208
  2150  0177  00A0               	movwf	___wmul@multiplier
  2151  0178  30FF               	movlw	255
  2152  0179  1803               	skipnc
  2153  017A  3000               	movlw	0
  2154  017B  00A1               	movwf	___wmul@multiplier+1
  2155  017C  300A               	movlw	10
  2156  017D  00A2               	movwf	___wmul@multiplicand
  2157  017E  3000               	movlw	0
  2158  017F  00A3               	movwf	___wmul@multiplicand+1
  2159  0180  3187  27E0  3181   	fcall	___wmul
  2160  0183  0020               	movlb	0	; select bank0
  2161  0184  0821               	movf	?___wmul+1,w
  2162  0185  01BB               	clrf	DecodeGPS@latitude+1
  2163  0186  07BB               	addwf	DecodeGPS@latitude+1,f
  2164  0187  0820               	movf	?___wmul,w
  2165  0188  01BA               	clrf	DecodeGPS@latitude
  2166  0189  07BA               	addwf	DecodeGPS@latitude,f
  2167  018A  3001               	movlw	1
  2168  018B  07C6               	addwf	DecodeGPS@x,f
  2169  018C  3000               	movlw	0
  2170  018D  3DC7               	addwfc	DecodeGPS@x+1,f
  2171                           
  2172                           ;launcher_functions.c: 402: latitude[0] += (gpsMessage[x++] - 48);
  2173  018E  0846               	movf	DecodeGPS@x,w
  2174  018F  3E20               	addlw	_gpsMessage& (0+255)
  2175  0190  0086               	movwf	6
  2176  0191  3001               	movlw	1	; select bank2/3
  2177  0192  0087               	movwf	7
  2178  0193  0801               	movf	1,w
  2179  0194  3ED0               	addlw	208
  2180  0195  00AE               	movwf	??_DecodeGPS
  2181  0196  30FF               	movlw	255
  2182  0197  1803               	skipnc
  2183  0198  3000               	movlw	0
  2184  0199  00AF               	movwf	??_DecodeGPS+1
  2185  019A  082E               	movf	??_DecodeGPS,w
  2186  019B  07BA               	addwf	DecodeGPS@latitude,f
  2187  019C  082F               	movf	??_DecodeGPS+1,w
  2188  019D  3DBB               	addwfc	DecodeGPS@latitude+1,f
  2189  019E  3001               	movlw	1
  2190  019F  07C6               	addwf	DecodeGPS@x,f
  2191  01A0  3000               	movlw	0
  2192  01A1  3DC7               	addwfc	DecodeGPS@x+1,f
  2193                           
  2194                           ;launcher_functions.c: 405: latitude[1] = (gpsMessage[x++] - 48)*10;
  2195  01A2  0846               	movf	DecodeGPS@x,w
  2196  01A3  3E20               	addlw	_gpsMessage& (0+255)
  2197  01A4  0086               	movwf	6
  2198  01A5  3001               	movlw	1	; select bank2/3
  2199  01A6  0087               	movwf	7
  2200  01A7  0801               	movf	1,w
  2201  01A8  3ED0               	addlw	208
  2202  01A9  00A0               	movwf	___wmul@multiplier
  2203  01AA  30FF               	movlw	255
  2204  01AB  1803               	skipnc
  2205  01AC  3000               	movlw	0
  2206  01AD  00A1               	movwf	___wmul@multiplier+1
  2207  01AE  300A               	movlw	10
  2208  01AF  00A2               	movwf	___wmul@multiplicand
  2209  01B0  3000               	movlw	0
  2210  01B1  00A3               	movwf	___wmul@multiplicand+1
  2211  01B2  3187  27E0  3181   	fcall	___wmul
  2212  01B5  0020               	movlb	0	; select bank0
  2213  01B6  0821               	movf	?___wmul+1,w
  2214  01B7  01BD               	clrf	DecodeGPS@latitude+3
  2215  01B8  07BD               	addwf	DecodeGPS@latitude+3,f
  2216  01B9  0820               	movf	?___wmul,w
  2217  01BA  01BC               	clrf	DecodeGPS@latitude+2
  2218  01BB  07BC               	addwf	DecodeGPS@latitude+2,f
  2219  01BC  3001               	movlw	1
  2220  01BD  07C6               	addwf	DecodeGPS@x,f
  2221  01BE  3000               	movlw	0
  2222  01BF  3DC7               	addwfc	DecodeGPS@x+1,f
  2223                           
  2224                           ;launcher_functions.c: 406: latitude[1] += (gpsMessage[x++] - 48);
  2225  01C0  0846               	movf	DecodeGPS@x,w
  2226  01C1  3E20               	addlw	_gpsMessage& (0+255)
  2227  01C2  0086               	movwf	6
  2228  01C3  3001               	movlw	1	; select bank2/3
  2229  01C4  0087               	movwf	7
  2230  01C5  0801               	movf	1,w
  2231  01C6  3ED0               	addlw	208
  2232  01C7  00AE               	movwf	??_DecodeGPS
  2233  01C8  30FF               	movlw	255
  2234  01C9  1803               	skipnc
  2235  01CA  3000               	movlw	0
  2236  01CB  00AF               	movwf	??_DecodeGPS+1
  2237  01CC  082E               	movf	??_DecodeGPS,w
  2238  01CD  07BC               	addwf	DecodeGPS@latitude+2,f
  2239  01CE  082F               	movf	??_DecodeGPS+1,w
  2240  01CF  3DBD               	addwfc	DecodeGPS@latitude+3,f
  2241  01D0  3001               	movlw	1
  2242  01D1  07C6               	addwf	DecodeGPS@x,f
  2243  01D2  3000               	movlw	0
  2244  01D3  3DC7               	addwfc	DecodeGPS@x+1,f
  2245                           
  2246                           ;launcher_functions.c: 409: x = x + 1;
  2247  01D4  0846               	movf	DecodeGPS@x,w
  2248  01D5  3E01               	addlw	1
  2249  01D6  00C6               	movwf	DecodeGPS@x
  2250  01D7  3000               	movlw	0
  2251  01D8  3D47               	addwfc	DecodeGPS@x+1,w
  2252  01D9  00C7               	movwf	DecodeGPS@x+1
  2253                           
  2254                           ;launcher_functions.c: 412: latitude[2] = (gpsMessage[x++] - 48)*10;
  2255  01DA  0846               	movf	DecodeGPS@x,w
  2256  01DB  3E20               	addlw	_gpsMessage& (0+255)
  2257  01DC  0086               	movwf	6
  2258  01DD  3001               	movlw	1	; select bank2/3
  2259  01DE  0087               	movwf	7
  2260  01DF  0801               	movf	1,w
  2261  01E0  3ED0               	addlw	208
  2262  01E1  00A0               	movwf	___wmul@multiplier
  2263  01E2  30FF               	movlw	255
  2264  01E3  1803               	skipnc
  2265  01E4  3000               	movlw	0
  2266  01E5  00A1               	movwf	___wmul@multiplier+1
  2267  01E6  300A               	movlw	10
  2268  01E7  00A2               	movwf	___wmul@multiplicand
  2269  01E8  3000               	movlw	0
  2270  01E9  00A3               	movwf	___wmul@multiplicand+1
  2271  01EA  3187  27E0  3181   	fcall	___wmul
  2272  01ED  0020               	movlb	0	; select bank0
  2273  01EE  0821               	movf	?___wmul+1,w
  2274  01EF  01BF               	clrf	DecodeGPS@latitude+5
  2275  01F0  07BF               	addwf	DecodeGPS@latitude+5,f
  2276  01F1  0820               	movf	?___wmul,w
  2277  01F2  01BE               	clrf	DecodeGPS@latitude+4
  2278  01F3  07BE               	addwf	DecodeGPS@latitude+4,f
  2279  01F4  3001               	movlw	1
  2280  01F5  07C6               	addwf	DecodeGPS@x,f
  2281  01F6  3000               	movlw	0
  2282  01F7  3DC7               	addwfc	DecodeGPS@x+1,f
  2283                           
  2284                           ;launcher_functions.c: 413: latitude[2] += (gpsMessage[x++] - 48);
  2285  01F8  0846               	movf	DecodeGPS@x,w
  2286  01F9  3E20               	addlw	_gpsMessage& (0+255)
  2287  01FA  0086               	movwf	6
  2288  01FB  3001               	movlw	1	; select bank2/3
  2289  01FC  0087               	movwf	7
  2290  01FD  0801               	movf	1,w
  2291  01FE  3ED0               	addlw	208
  2292  01FF  00AE               	movwf	??_DecodeGPS
  2293  0200  30FF               	movlw	255
  2294  0201  1803               	skipnc
  2295  0202  3000               	movlw	0
  2296  0203  00AF               	movwf	??_DecodeGPS+1
  2297  0204  082E               	movf	??_DecodeGPS,w
  2298  0205  07BE               	addwf	DecodeGPS@latitude+4,f
  2299  0206  082F               	movf	??_DecodeGPS+1,w
  2300  0207  3DBF               	addwfc	DecodeGPS@latitude+5,f
  2301  0208  3001               	movlw	1
  2302  0209  07C6               	addwf	DecodeGPS@x,f
  2303  020A  3000               	movlw	0
  2304  020B  3DC7               	addwfc	DecodeGPS@x+1,f
  2305                           
  2306                           ;launcher_functions.c: 414: latitude[2] = (latitude[2]*60)/100;
  2307  020C  3064               	movlw	100
  2308  020D  00A6               	movwf	___lwdiv@divisor
  2309  020E  3000               	movlw	0
  2310  020F  00A7               	movwf	___lwdiv@divisor+1
  2311  0210  083F               	movf	DecodeGPS@latitude+5,w
  2312  0211  01A1               	clrf	___wmul@multiplier+1
  2313  0212  07A1               	addwf	___wmul@multiplier+1,f
  2314  0213  083E               	movf	DecodeGPS@latitude+4,w
  2315  0214  01A0               	clrf	___wmul@multiplier
  2316  0215  07A0               	addwf	___wmul@multiplier,f
  2317  0216  303C               	movlw	60
  2318  0217  00A2               	movwf	___wmul@multiplicand
  2319  0218  3000               	movlw	0
  2320  0219  00A3               	movwf	___wmul@multiplicand+1
  2321  021A  3187  27E0  3181   	fcall	___wmul
  2322  021D  0020               	movlb	0	; select bank0
  2323  021E  0821               	movf	?___wmul+1,w
  2324  021F  01A9               	clrf	___lwdiv@dividend+1
  2325  0220  07A9               	addwf	___lwdiv@dividend+1,f
  2326  0221  0820               	movf	?___wmul,w
  2327  0222  01A8               	clrf	___lwdiv@dividend
  2328  0223  07A8               	addwf	___lwdiv@dividend,f
  2329  0224  318F  2727  3181   	fcall	___lwdiv
  2330  0227  0020               	movlb	0	; select bank0
  2331  0228  0827               	movf	?___lwdiv+1,w
  2332  0229  01BF               	clrf	DecodeGPS@latitude+5
  2333  022A  07BF               	addwf	DecodeGPS@latitude+5,f
  2334  022B  0826               	movf	?___lwdiv,w
  2335  022C  01BE               	clrf	DecodeGPS@latitude+4
  2336  022D  07BE               	addwf	DecodeGPS@latitude+4,f
  2337                           
  2338                           ;launcher_functions.c: 417: x = x + 2;
  2339  022E  0846               	movf	DecodeGPS@x,w
  2340  022F  3E02               	addlw	2
  2341  0230  00C6               	movwf	DecodeGPS@x
  2342  0231  3000               	movlw	0
  2343  0232  3D47               	addwfc	DecodeGPS@x+1,w
  2344  0233  00C7               	movwf	DecodeGPS@x+1
  2345  0234                     l1980:	
  2346                           
  2347                           ;launcher_functions.c: 418: }
  2348                           ;launcher_functions.c: 421: x = x + 1;
  2349  0234  0846               	movf	DecodeGPS@x,w
  2350  0235  3E01               	addlw	1
  2351  0236  00C6               	movwf	DecodeGPS@x
  2352  0237  3000               	movlw	0
  2353  0238  3D47               	addwfc	DecodeGPS@x+1,w
  2354  0239  00C7               	movwf	DecodeGPS@x+1
  2355                           
  2356                           ;launcher_functions.c: 424: if(gpsMessage[x] != ',')
  2357  023A  0846               	movf	DecodeGPS@x,w
  2358  023B  3E20               	addlw	_gpsMessage& (0+255)
  2359  023C  0086               	movwf	6
  2360  023D  3001               	movlw	1	; select bank2/3
  2361  023E  0087               	movwf	7
  2362  023F  0801               	movf	1,w
  2363  0240  3A2C               	xorlw	44
  2364  0241  1903               	skipnz
  2365  0242  2A50               	goto	l1988
  2366                           
  2367                           ;launcher_functions.c: 425: northSouth = gpsMessage[x++];
  2368  0243  0846               	movf	DecodeGPS@x,w
  2369  0244  3E20               	addlw	_gpsMessage& (0+255)
  2370  0245  0086               	movwf	6
  2371  0246  3001               	movlw	1	; select bank2/3
  2372  0247  0087               	movwf	7
  2373  0248  0801               	movf	1,w
  2374  0249  00AE               	movwf	??_DecodeGPS
  2375  024A  082E               	movf	??_DecodeGPS,w
  2376  024B  00B7               	movwf	DecodeGPS@northSouth
  2377  024C  3001               	movlw	1
  2378  024D  07C6               	addwf	DecodeGPS@x,f
  2379  024E  3000               	movlw	0
  2380  024F  3DC7               	addwfc	DecodeGPS@x+1,f
  2381  0250                     l1988:	
  2382                           
  2383                           ;launcher_functions.c: 428: x = x + 1;
  2384  0250  0846               	movf	DecodeGPS@x,w
  2385  0251  3E01               	addlw	1
  2386  0252  00C6               	movwf	DecodeGPS@x
  2387  0253  3000               	movlw	0
  2388  0254  3D47               	addwfc	DecodeGPS@x+1,w
  2389  0255  00C7               	movwf	DecodeGPS@x+1
  2390                           
  2391                           ;launcher_functions.c: 431: if(gpsMessage[x]!= ',')
  2392  0256  0846               	movf	DecodeGPS@x,w
  2393  0257  3E20               	addlw	_gpsMessage& (0+255)
  2394  0258  0086               	movwf	6
  2395  0259  3001               	movlw	1	; select bank2/3
  2396  025A  0087               	movwf	7
  2397  025B  0801               	movf	1,w
  2398  025C  3A2C               	xorlw	44
  2399  025D  1903               	skipnz
  2400  025E  2B3F               	goto	l2024
  2401                           
  2402                           ;launcher_functions.c: 432: {
  2403                           ;launcher_functions.c: 434: longitude[0] = (gpsMessage[x++] - 48)*100;
  2404  025F  0846               	movf	DecodeGPS@x,w
  2405  0260  3E20               	addlw	_gpsMessage& (0+255)
  2406  0261  0086               	movwf	6
  2407  0262  3001               	movlw	1	; select bank2/3
  2408  0263  0087               	movwf	7
  2409  0264  0801               	movf	1,w
  2410  0265  3ED0               	addlw	208
  2411  0266  00A0               	movwf	___wmul@multiplier
  2412  0267  30FF               	movlw	255
  2413  0268  1803               	skipnc
  2414  0269  3000               	movlw	0
  2415  026A  00A1               	movwf	___wmul@multiplier+1
  2416  026B  3064               	movlw	100
  2417  026C  00A2               	movwf	___wmul@multiplicand
  2418  026D  3000               	movlw	0
  2419  026E  00A3               	movwf	___wmul@multiplicand+1
  2420  026F  3187  27E0  3181   	fcall	___wmul
  2421  0272  0020               	movlb	0	; select bank0
  2422  0273  0821               	movf	?___wmul+1,w
  2423  0274  01C1               	clrf	DecodeGPS@longitude+1
  2424  0275  07C1               	addwf	DecodeGPS@longitude+1,f
  2425  0276  0820               	movf	?___wmul,w
  2426  0277  01C0               	clrf	DecodeGPS@longitude
  2427  0278  07C0               	addwf	DecodeGPS@longitude,f
  2428  0279  3001               	movlw	1
  2429  027A  07C6               	addwf	DecodeGPS@x,f
  2430  027B  3000               	movlw	0
  2431  027C  3DC7               	addwfc	DecodeGPS@x+1,f
  2432                           
  2433                           ;launcher_functions.c: 435: longitude[0] += (gpsMessage[x++] - 48)*10;
  2434  027D  0846               	movf	DecodeGPS@x,w
  2435  027E  3E20               	addlw	_gpsMessage& (0+255)
  2436  027F  0086               	movwf	6
  2437  0280  3001               	movlw	1	; select bank2/3
  2438  0281  0087               	movwf	7
  2439  0282  0801               	movf	1,w
  2440  0283  3ED0               	addlw	208
  2441  0284  00A0               	movwf	___wmul@multiplier
  2442  0285  30FF               	movlw	255
  2443  0286  1803               	skipnc
  2444  0287  3000               	movlw	0
  2445  0288  00A1               	movwf	___wmul@multiplier+1
  2446  0289  300A               	movlw	10
  2447  028A  00A2               	movwf	___wmul@multiplicand
  2448  028B  3000               	movlw	0
  2449  028C  00A3               	movwf	___wmul@multiplicand+1
  2450  028D  3187  27E0  3181   	fcall	___wmul
  2451  0290  0020               	movlb	0	; select bank0
  2452  0291  0820               	movf	?___wmul,w
  2453  0292  07C0               	addwf	DecodeGPS@longitude,f
  2454  0293  0821               	movf	?___wmul+1,w
  2455  0294  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2456  0295  3001               	movlw	1
  2457  0296  07C6               	addwf	DecodeGPS@x,f
  2458  0297  3000               	movlw	0
  2459  0298  3DC7               	addwfc	DecodeGPS@x+1,f
  2460                           
  2461                           ;launcher_functions.c: 436: longitude[0] += (gpsMessage[x++] - 48);
  2462  0299  0846               	movf	DecodeGPS@x,w
  2463  029A  3E20               	addlw	_gpsMessage& (0+255)
  2464  029B  0086               	movwf	6
  2465  029C  3001               	movlw	1	; select bank2/3
  2466  029D  0087               	movwf	7
  2467  029E  0801               	movf	1,w
  2468  029F  3ED0               	addlw	208
  2469  02A0  00AE               	movwf	??_DecodeGPS
  2470  02A1  30FF               	movlw	255
  2471  02A2  1803               	skipnc
  2472  02A3  3000               	movlw	0
  2473  02A4  00AF               	movwf	??_DecodeGPS+1
  2474  02A5  082E               	movf	??_DecodeGPS,w
  2475  02A6  07C0               	addwf	DecodeGPS@longitude,f
  2476  02A7  082F               	movf	??_DecodeGPS+1,w
  2477  02A8  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2478  02A9  3001               	movlw	1
  2479  02AA  07C6               	addwf	DecodeGPS@x,f
  2480  02AB  3000               	movlw	0
  2481  02AC  3DC7               	addwfc	DecodeGPS@x+1,f
  2482                           
  2483                           ;launcher_functions.c: 439: longitude[1] = (gpsMessage[x++] - 48)*10;
  2484  02AD  0846               	movf	DecodeGPS@x,w
  2485  02AE  3E20               	addlw	_gpsMessage& (0+255)
  2486  02AF  0086               	movwf	6
  2487  02B0  3001               	movlw	1	; select bank2/3
  2488  02B1  0087               	movwf	7
  2489  02B2  0801               	movf	1,w
  2490  02B3  3ED0               	addlw	208
  2491  02B4  00A0               	movwf	___wmul@multiplier
  2492  02B5  30FF               	movlw	255
  2493  02B6  1803               	skipnc
  2494  02B7  3000               	movlw	0
  2495  02B8  00A1               	movwf	___wmul@multiplier+1
  2496  02B9  300A               	movlw	10
  2497  02BA  00A2               	movwf	___wmul@multiplicand
  2498  02BB  3000               	movlw	0
  2499  02BC  00A3               	movwf	___wmul@multiplicand+1
  2500  02BD  3187  27E0  3181   	fcall	___wmul
  2501  02C0  0020               	movlb	0	; select bank0
  2502  02C1  0821               	movf	?___wmul+1,w
  2503  02C2  01C3               	clrf	DecodeGPS@longitude+3
  2504  02C3  07C3               	addwf	DecodeGPS@longitude+3,f
  2505  02C4  0820               	movf	?___wmul,w
  2506  02C5  01C2               	clrf	DecodeGPS@longitude+2
  2507  02C6  07C2               	addwf	DecodeGPS@longitude+2,f
  2508  02C7  3001               	movlw	1
  2509  02C8  07C6               	addwf	DecodeGPS@x,f
  2510  02C9  3000               	movlw	0
  2511  02CA  3DC7               	addwfc	DecodeGPS@x+1,f
  2512                           
  2513                           ;launcher_functions.c: 440: longitude[1] += (gpsMessage[x++] - 48);
  2514  02CB  0846               	movf	DecodeGPS@x,w
  2515  02CC  3E20               	addlw	_gpsMessage& (0+255)
  2516  02CD  0086               	movwf	6
  2517  02CE  3001               	movlw	1	; select bank2/3
  2518  02CF  0087               	movwf	7
  2519  02D0  0801               	movf	1,w
  2520  02D1  3ED0               	addlw	208
  2521  02D2  00AE               	movwf	??_DecodeGPS
  2522  02D3  30FF               	movlw	255
  2523  02D4  1803               	skipnc
  2524  02D5  3000               	movlw	0
  2525  02D6  00AF               	movwf	??_DecodeGPS+1
  2526  02D7  082E               	movf	??_DecodeGPS,w
  2527  02D8  07C2               	addwf	DecodeGPS@longitude+2,f
  2528  02D9  082F               	movf	??_DecodeGPS+1,w
  2529  02DA  3DC3               	addwfc	DecodeGPS@longitude+3,f
  2530  02DB  3001               	movlw	1
  2531  02DC  07C6               	addwf	DecodeGPS@x,f
  2532  02DD  3000               	movlw	0
  2533  02DE  3DC7               	addwfc	DecodeGPS@x+1,f
  2534                           
  2535                           ;launcher_functions.c: 443: x = x + 1;
  2536  02DF  0846               	movf	DecodeGPS@x,w
  2537  02E0  3E01               	addlw	1
  2538  02E1  00C6               	movwf	DecodeGPS@x
  2539  02E2  3000               	movlw	0
  2540  02E3  3D47               	addwfc	DecodeGPS@x+1,w
  2541  02E4  00C7               	movwf	DecodeGPS@x+1
  2542                           
  2543                           ;launcher_functions.c: 446: longitude[2] = (gpsMessage[x++] - 48)*10;
  2544  02E5  0846               	movf	DecodeGPS@x,w
  2545  02E6  3E20               	addlw	_gpsMessage& (0+255)
  2546  02E7  0086               	movwf	6
  2547  02E8  3001               	movlw	1	; select bank2/3
  2548  02E9  0087               	movwf	7
  2549  02EA  0801               	movf	1,w
  2550  02EB  3ED0               	addlw	208
  2551  02EC  00A0               	movwf	___wmul@multiplier
  2552  02ED  30FF               	movlw	255
  2553  02EE  1803               	skipnc
  2554  02EF  3000               	movlw	0
  2555  02F0  00A1               	movwf	___wmul@multiplier+1
  2556  02F1  300A               	movlw	10
  2557  02F2  00A2               	movwf	___wmul@multiplicand
  2558  02F3  3000               	movlw	0
  2559  02F4  00A3               	movwf	___wmul@multiplicand+1
  2560  02F5  3187  27E0  3181   	fcall	___wmul
  2561  02F8  0020               	movlb	0	; select bank0
  2562  02F9  0821               	movf	?___wmul+1,w
  2563  02FA  01C5               	clrf	DecodeGPS@longitude+5
  2564  02FB  07C5               	addwf	DecodeGPS@longitude+5,f
  2565  02FC  0820               	movf	?___wmul,w
  2566  02FD  01C4               	clrf	DecodeGPS@longitude+4
  2567  02FE  07C4               	addwf	DecodeGPS@longitude+4,f
  2568  02FF  3001               	movlw	1
  2569  0300  07C6               	addwf	DecodeGPS@x,f
  2570  0301  3000               	movlw	0
  2571  0302  3DC7               	addwfc	DecodeGPS@x+1,f
  2572                           
  2573                           ;launcher_functions.c: 447: longitude[2] += (gpsMessage[x++] - 48);
  2574  0303  0846               	movf	DecodeGPS@x,w
  2575  0304  3E20               	addlw	_gpsMessage& (0+255)
  2576  0305  0086               	movwf	6
  2577  0306  3001               	movlw	1	; select bank2/3
  2578  0307  0087               	movwf	7
  2579  0308  0801               	movf	1,w
  2580  0309  3ED0               	addlw	208
  2581  030A  00AE               	movwf	??_DecodeGPS
  2582  030B  30FF               	movlw	255
  2583  030C  1803               	skipnc
  2584  030D  3000               	movlw	0
  2585  030E  00AF               	movwf	??_DecodeGPS+1
  2586  030F  082E               	movf	??_DecodeGPS,w
  2587  0310  07C4               	addwf	DecodeGPS@longitude+4,f
  2588  0311  082F               	movf	??_DecodeGPS+1,w
  2589  0312  3DC5               	addwfc	DecodeGPS@longitude+5,f
  2590  0313  3001               	movlw	1
  2591  0314  07C6               	addwf	DecodeGPS@x,f
  2592  0315  3000               	movlw	0
  2593  0316  3DC7               	addwfc	DecodeGPS@x+1,f
  2594                           
  2595                           ;launcher_functions.c: 448: longitude[2] = (longitude[2]*60)/100;
  2596  0317  3064               	movlw	100
  2597  0318  00A6               	movwf	___lwdiv@divisor
  2598  0319  3000               	movlw	0
  2599  031A  00A7               	movwf	___lwdiv@divisor+1
  2600  031B  0845               	movf	DecodeGPS@longitude+5,w
  2601  031C  01A1               	clrf	___wmul@multiplier+1
  2602  031D  07A1               	addwf	___wmul@multiplier+1,f
  2603  031E  0844               	movf	DecodeGPS@longitude+4,w
  2604  031F  01A0               	clrf	___wmul@multiplier
  2605  0320  07A0               	addwf	___wmul@multiplier,f
  2606  0321  303C               	movlw	60
  2607  0322  00A2               	movwf	___wmul@multiplicand
  2608  0323  3000               	movlw	0
  2609  0324  00A3               	movwf	___wmul@multiplicand+1
  2610  0325  3187  27E0  3181   	fcall	___wmul
  2611  0328  0020               	movlb	0	; select bank0
  2612  0329  0821               	movf	?___wmul+1,w
  2613  032A  01A9               	clrf	___lwdiv@dividend+1
  2614  032B  07A9               	addwf	___lwdiv@dividend+1,f
  2615  032C  0820               	movf	?___wmul,w
  2616  032D  01A8               	clrf	___lwdiv@dividend
  2617  032E  07A8               	addwf	___lwdiv@dividend,f
  2618  032F  318F  2727  3181   	fcall	___lwdiv
  2619  0332  0020               	movlb	0	; select bank0
  2620  0333  0827               	movf	?___lwdiv+1,w
  2621  0334  01C5               	clrf	DecodeGPS@longitude+5
  2622  0335  07C5               	addwf	DecodeGPS@longitude+5,f
  2623  0336  0826               	movf	?___lwdiv,w
  2624  0337  01C4               	clrf	DecodeGPS@longitude+4
  2625  0338  07C4               	addwf	DecodeGPS@longitude+4,f
  2626                           
  2627                           ;launcher_functions.c: 451: x = x + 2;
  2628  0339  0846               	movf	DecodeGPS@x,w
  2629  033A  3E02               	addlw	2
  2630  033B  00C6               	movwf	DecodeGPS@x
  2631  033C  3000               	movlw	0
  2632  033D  3D47               	addwfc	DecodeGPS@x+1,w
  2633  033E  00C7               	movwf	DecodeGPS@x+1
  2634  033F                     l2024:	
  2635                           
  2636                           ;launcher_functions.c: 452: }
  2637                           ;launcher_functions.c: 455: x = x + 1;
  2638  033F  0846               	movf	DecodeGPS@x,w
  2639  0340  3E01               	addlw	1
  2640  0341  00C6               	movwf	DecodeGPS@x
  2641  0342  3000               	movlw	0
  2642  0343  3D47               	addwfc	DecodeGPS@x+1,w
  2643  0344  00C7               	movwf	DecodeGPS@x+1
  2644                           
  2645                           ;launcher_functions.c: 458: if(gpsMessage[x] != ',')
  2646  0345  0846               	movf	DecodeGPS@x,w
  2647  0346  3E20               	addlw	_gpsMessage& (0+255)
  2648  0347  0086               	movwf	6
  2649  0348  3001               	movlw	1	; select bank2/3
  2650  0349  0087               	movwf	7
  2651  034A  0801               	movf	1,w
  2652  034B  3A2C               	xorlw	44
  2653  034C  1903               	skipnz
  2654  034D  2B5B               	goto	l2032
  2655                           
  2656                           ;launcher_functions.c: 459: eastWest = gpsMessage[x++];
  2657  034E  0846               	movf	DecodeGPS@x,w
  2658  034F  3E20               	addlw	_gpsMessage& (0+255)
  2659  0350  0086               	movwf	6
  2660  0351  3001               	movlw	1	; select bank2/3
  2661  0352  0087               	movwf	7
  2662  0353  0801               	movf	1,w
  2663  0354  00AE               	movwf	??_DecodeGPS
  2664  0355  082E               	movf	??_DecodeGPS,w
  2665  0356  00B8               	movwf	DecodeGPS@eastWest
  2666  0357  3001               	movlw	1
  2667  0358  07C6               	addwf	DecodeGPS@x,f
  2668  0359  3000               	movlw	0
  2669  035A  3DC7               	addwfc	DecodeGPS@x+1,f
  2670  035B                     l2032:	
  2671                           
  2672                           ;launcher_functions.c: 462: x = x + 1;
  2673  035B  0846               	movf	DecodeGPS@x,w
  2674  035C  3E01               	addlw	1
  2675  035D  00C6               	movwf	DecodeGPS@x
  2676  035E  3000               	movlw	0
  2677  035F  3D47               	addwfc	DecodeGPS@x+1,w
  2678  0360  00C7               	movwf	DecodeGPS@x+1
  2679  0361                     l2034:	
  2680                           ;launcher_functions.c: 465: while(gpsMessage[x++] != ','){}
  2681                           
  2682  0361  0847               	movf	DecodeGPS@x+1,w
  2683  0362  00AF               	movwf	??_DecodeGPS+1
  2684  0363  0846               	movf	DecodeGPS@x,w
  2685  0364  00AE               	movwf	??_DecodeGPS
  2686  0365  0AC6               	incf	DecodeGPS@x,f
  2687  0366  1903               	skipnz
  2688  0367  0AC7               	incf	DecodeGPS@x+1,f
  2689  0368  082E               	movf	??_DecodeGPS,w
  2690  0369  3E20               	addlw	_gpsMessage& (0+255)
  2691  036A  0086               	movwf	6
  2692  036B  3001               	movlw	1	; select bank2/3
  2693  036C  0087               	movwf	7
  2694  036D  0801               	movf	1,w
  2695  036E  3A2C               	xorlw	44
  2696  036F  1D03               	skipz
  2697  0370  2B61               	goto	l2034
  2698                           
  2699                           ;launcher_functions.c: 468: status = gpsMessage[x];
  2700  0371  0846               	movf	DecodeGPS@x,w
  2701  0372  3E20               	addlw	_gpsMessage& (0+255)
  2702  0373  0086               	movwf	6
  2703  0374  3001               	movlw	1	; select bank2/3
  2704  0375  0087               	movwf	7
  2705  0376  0801               	movf	1,w
  2706  0377  00AE               	movwf	??_DecodeGPS
  2707  0378  082E               	movf	??_DecodeGPS,w
  2708  0379  00B9               	movwf	DecodeGPS@status
  2709                           
  2710                           ;launcher_functions.c: 470: if(status == 'A')
  2711  037A  0839               	movf	DecodeGPS@status,w
  2712  037B  3A41               	xorlw	65
  2713  037C  1D03               	skipz
  2714  037D  2B81               	goto	l380
  2715                           
  2716                           ;launcher_functions.c: 471: gpsInvalidFlag = 0;
  2717  037E  0021               	movlb	1	; select bank1
  2718  037F  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2719  0380  2B84               	goto	l2042
  2720  0381                     l380:	
  2721                           
  2722                           ;launcher_functions.c: 472: else
  2723                           ;launcher_functions.c: 473: gpsInvalidFlag = 1;
  2724  0381  0021               	movlb	1	; select bank1
  2725  0382  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2726  0383  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2727  0384                     l2042:	
  2728                           
  2729                           ;launcher_functions.c: 477: if(!gpsInvalidFlag)
  2730  0384  08BE               	movf	_gpsInvalidFlag^(0+128),f
  2731  0385  1D03               	skipz
  2732  0386  0008               	return
  2733                           
  2734                           ;launcher_functions.c: 478: {
  2735                           ;launcher_functions.c: 480: for(x=0;x<3;x++)
  2736  0387  0020               	movlb	0	; select bank0
  2737  0388  01C6               	clrf	DecodeGPS@x
  2738  0389  01C7               	clrf	DecodeGPS@x+1
  2739  038A  0847               	movf	DecodeGPS@x+1,w
  2740  038B  3A80               	xorlw	128
  2741  038C  00AE               	movwf	??_DecodeGPS
  2742  038D  3080               	movlw	128
  2743  038E  022E               	subwf	??_DecodeGPS,w
  2744  038F  1D03               	skipz
  2745  0390  2B93               	goto	u1625
  2746  0391  3003               	movlw	3
  2747  0392  0246               	subwf	DecodeGPS@x,w
  2748  0393                     u1625:	
  2749  0393  1803               	btfsc	3,0
  2750  0394  2BBD               	goto	l2056
  2751  0395                     l2050:	
  2752                           
  2753                           ;launcher_functions.c: 481: {
  2754                           ;launcher_functions.c: 482: validLatitude[x] = latitude[x];
  2755  0395  0020               	movlb	0	; select bank0
  2756  0396  3546               	lslf	DecodeGPS@x,w
  2757  0397  3E3A               	addlw	DecodeGPS@latitude& (0+255)
  2758  0398  0086               	movwf	6
  2759  0399  0187               	clrf	7
  2760  039A  3546               	lslf	DecodeGPS@x,w
  2761  039B  3ECD               	addlw	_validLatitude& (0+255)
  2762  039C  0084               	movwf	4
  2763  039D  0185               	clrf	5
  2764  039E  3F40               	moviw [0]fsr1
  2765  039F  3F80               	movwi [0]fsr0
  2766  03A0  3F41               	moviw [1]fsr1
  2767  03A1  3F81               	movwi [1]fsr0
  2768                           
  2769                           ;launcher_functions.c: 483: validLongitude[x] = longitude[x];
  2770  03A2  3546               	lslf	DecodeGPS@x,w
  2771  03A3  3E40               	addlw	DecodeGPS@longitude& (0+255)
  2772  03A4  0086               	movwf	6
  2773  03A5  0187               	clrf	7
  2774  03A6  3546               	lslf	DecodeGPS@x,w
  2775  03A7  3ED3               	addlw	_validLongitude& (0+255)
  2776  03A8  0084               	movwf	4
  2777  03A9  0185               	clrf	5
  2778  03AA  3F40               	moviw [0]fsr1
  2779  03AB  3F80               	movwi [0]fsr0
  2780  03AC  3F41               	moviw [1]fsr1
  2781  03AD  3F81               	movwi [1]fsr0
  2782  03AE  3001               	movlw	1
  2783  03AF  07C6               	addwf	DecodeGPS@x,f
  2784  03B0  3000               	movlw	0
  2785  03B1  3DC7               	addwfc	DecodeGPS@x+1,f
  2786  03B2  0847               	movf	DecodeGPS@x+1,w
  2787  03B3  3A80               	xorlw	128
  2788  03B4  00AE               	movwf	??_DecodeGPS
  2789  03B5  3080               	movlw	128
  2790  03B6  022E               	subwf	??_DecodeGPS,w
  2791  03B7  1D03               	skipz
  2792  03B8  2BBB               	goto	u1635
  2793  03B9  3003               	movlw	3
  2794  03BA  0246               	subwf	DecodeGPS@x,w
  2795  03BB                     u1635:	
  2796  03BB  1C03               	skipc
  2797  03BC  2B95               	goto	l2050
  2798  03BD                     l2056:	
  2799                           
  2800                           ;launcher_functions.c: 484: }
  2801                           ;launcher_functions.c: 485: validNorthSouth = northSouth;
  2802  03BD  0020               	movlb	0	; select bank0
  2803  03BE  0837               	movf	DecodeGPS@northSouth,w
  2804  03BF  00AE               	movwf	??_DecodeGPS
  2805  03C0  082E               	movf	??_DecodeGPS,w
  2806  03C1  0021               	movlb	1	; select bank1
  2807  03C2  00C0               	movwf	_validNorthSouth^(0+128)
  2808                           
  2809                           ;launcher_functions.c: 486: validEastWest = eastWest;
  2810  03C3  0020               	movlb	0	; select bank0
  2811  03C4  0838               	movf	DecodeGPS@eastWest,w
  2812  03C5  00AE               	movwf	??_DecodeGPS
  2813  03C6  082E               	movf	??_DecodeGPS,w
  2814  03C7  0021               	movlb	1	; select bank1
  2815  03C8  00BF               	movwf	_validEastWest^(0+128)
  2816  03C9  0008               	return
  2817  03CA                     __end_of_DecodeGPS:	
  2818                           
  2819                           	psect	text4
  2820  07E0                     __ptext4:	
  2821 ;; *************** function ___wmul *****************
  2822 ;; Defined at:
  2823 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2826 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  product         2    4[BANK0 ] unsigned int 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2    0[BANK0 ] unsigned int 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2838 ;;      Params:         0       4       0       0       0       0       0       0
  2839 ;;      Locals:         0       2       0       0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0       0
  2841 ;;      Totals:         0       6       0       0       0       0       0       0
  2842 ;;Total ram usage:        6 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    2
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_DecodeGPS
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function ___wmul
  2854  07E0                     ___wmul:	
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2858  07E0  0020               	movlb	0	; select bank0
  2859  07E1  01A4               	clrf	___wmul@product
  2860  07E2  01A5               	clrf	___wmul@product+1
  2861  07E3                     l1742:	
  2862  07E3  1C20               	btfss	___wmul@multiplier,0
  2863  07E4  2FE9               	goto	l529
  2864  07E5  0822               	movf	___wmul@multiplicand,w
  2865  07E6  07A4               	addwf	___wmul@product,f
  2866  07E7  0823               	movf	___wmul@multiplicand+1,w
  2867  07E8  3DA5               	addwfc	___wmul@product+1,f
  2868  07E9                     l529:	
  2869  07E9  3001               	movlw	1
  2870  07EA                     u1145:	
  2871  07EA  35A2               	lslf	___wmul@multiplicand,f
  2872  07EB  0DA3               	rlf	___wmul@multiplicand+1,f
  2873  07EC  0B89               	decfsz	9,f
  2874  07ED  2FEA               	goto	u1145
  2875  07EE  3001               	movlw	1
  2876  07EF                     u1155:	
  2877  07EF  36A1               	lsrf	___wmul@multiplier+1,f
  2878  07F0  0CA0               	rrf	___wmul@multiplier,f
  2879  07F1  0B89               	decfsz	9,f
  2880  07F2  2FEF               	goto	u1155
  2881  07F3  0821               	movf	___wmul@multiplier+1,w
  2882  07F4  0420               	iorwf	___wmul@multiplier,w
  2883  07F5  1D03               	skipz
  2884  07F6  2FE3               	goto	l1742
  2885  07F7  0825               	movf	___wmul@product+1,w
  2886  07F8  01A1               	clrf	?___wmul+1
  2887  07F9  07A1               	addwf	?___wmul+1,f
  2888  07FA  0824               	movf	___wmul@product,w
  2889  07FB  01A0               	clrf	?___wmul
  2890  07FC  07A0               	addwf	?___wmul,f
  2891  07FD  0008               	return
  2892  07FE                     __end_of___wmul:	
  2893                           
  2894                           	psect	text5
  2895  0E79                     __ptext5:	
  2896 ;; *************** function _ToggleSleepGPS *****************
  2897 ;; Defined at:
  2898 ;;		line 315 in file "launcher_functions.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2912 ;;      Params:         0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0
  2914 ;;      Temps:          0       3       0       0       0       0       0       0
  2915 ;;      Totals:         0       3       0       0       0       0       0       0
  2916 ;;Total ram usage:        3 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    2
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _ToggleSleepGPS
  2928  0E79                     _ToggleSleepGPS:	
  2929                           
  2930                           ;launcher_functions.c: 317: TRISAbits.TRISA6 = 0;
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _ToggleSleepGPS: [wreg]
  2934  0E79  0021               	movlb	1	; select bank1
  2935  0E7A  130C               	bcf	12,6	;volatile
  2936                           
  2937                           ;launcher_functions.c: 319: RA6 = 0;
  2938  0E7B  0020               	movlb	0	; select bank0
  2939  0E7C  130C               	bcf	12,6	;volatile
  2940                           
  2941                           ;launcher_functions.c: 320: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2942  0E7D  3015               	movlw	21
  2943  0E7E  00A2               	movwf	??_ToggleSleepGPS+2
  2944  0E7F  304B               	movlw	75
  2945  0E80  00A1               	movwf	??_ToggleSleepGPS+1
  2946  0E81  30D1               	movlw	209
  2947  0E82  00A0               	movwf	??_ToggleSleepGPS
  2948  0E83                     u2137:	
  2949  0E83  0BA0               	decfsz	??_ToggleSleepGPS,f
  2950  0E84  2E83               	goto	u2137
  2951  0E85  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2952  0E86  2E83               	goto	u2137
  2953  0E87  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2954  0E88  2E83               	goto	u2137
  2955  0E89  0000               	nop
  2956                           
  2957                           ;launcher_functions.c: 321: RA6 = 1;
  2958  0E8A  0020               	movlb	0	; select bank0
  2959  0E8B  170C               	bsf	12,6	;volatile
  2960                           
  2961                           ;launcher_functions.c: 322: _delay((unsigned long)((100)*(16000000/4000.0)));
  2962  0E8C  3003               	movlw	3
  2963  0E8D  00A2               	movwf	??_ToggleSleepGPS+2
  2964  0E8E  3008               	movlw	8
  2965  0E8F  00A1               	movwf	??_ToggleSleepGPS+1
  2966  0E90  3078               	movlw	120
  2967  0E91  00A0               	movwf	??_ToggleSleepGPS
  2968  0E92                     u2147:	
  2969  0E92  0BA0               	decfsz	??_ToggleSleepGPS,f
  2970  0E93  2E92               	goto	u2147
  2971  0E94  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2972  0E95  2E92               	goto	u2147
  2973  0E96  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2974  0E97  2E92               	goto	u2147
  2975                           
  2976                           ;launcher_functions.c: 323: RA6 = 0;
  2977  0E98  0020               	movlb	0	; select bank0
  2978  0E99  130C               	bcf	12,6	;volatile
  2979  0E9A  0008               	return
  2980  0E9B                     __end_of_ToggleSleepGPS:	
  2981                           
  2982                           	psect	text6
  2983  06DC                     __ptext6:	
  2984 ;; *************** function _SetupGPS *****************
  2985 ;; Defined at:
  2986 ;;		line 333 in file "launcher_functions.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  message        22   42[BANK0 ] unsigned char [22]
  2991 ;;  startSequenc    6   64[BANK0 ] unsigned char [6]
  2992 ;;  MID             4   70[BANK0 ] unsigned char [4]
  2993 ;;  x               2   74[BANK0 ] int 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;		None               void
  2996 ;; Registers used:
  2997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3003 ;;      Params:         0       0       0       0       0       0       0       0
  3004 ;;      Locals:         0      34       0       0       0       0       0       0
  3005 ;;      Temps:          0       3       0       0       0       0       0       0
  3006 ;;      Totals:         0      37       0       0       0       0       0       0
  3007 ;;Total ram usage:       37 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    4
  3010 ;; This function calls:
  3011 ;;		_sprintf
  3012 ;;		_uart_write_message
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _SetupGPS
  3020  06DC                     _SetupGPS:	
  3021                           
  3022                           ;launcher_functions.c: 335: int x;
  3023                           ;launcher_functions.c: 336: unsigned char startSequence[6] = "$PSRF";
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3027  06DC  30B4               	movlw	low SetupGPS@F4916
  3028  06DD  0086               	movwf	6
  3029  06DE  3000               	movlw	high SetupGPS@F4916
  3030  06DF  0087               	movwf	7
  3031  06E0  3060               	movlw	low SetupGPS@startSequence
  3032  06E1  0084               	movwf	4
  3033  06E2  3000               	movlw	high SetupGPS@startSequence
  3034  06E3  0085               	movwf	5
  3035  06E4  3006               	movlw	6
  3036  06E5  0020               	movlb	0	; select bank0
  3037  06E6  00C7               	movwf	??_SetupGPS
  3038  06E7                     u1640:	
  3039  06E7  0016               	moviw fsr1++
  3040  06E8  001A               	movwi fsr0++
  3041  06E9  0BC7               	decfsz	??_SetupGPS,f
  3042  06EA  2EE7               	goto	u1640
  3043                           
  3044                           ;launcher_functions.c: 337: unsigned char MID[4] = "103";
  3045  06EB  0021               	movlb	1	; select bank1
  3046  06EC  083D               	movf	(SetupGPS@F4918+3)^(0+128),w
  3047  06ED  0020               	movlb	0	; select bank0
  3048  06EE  00E9               	movwf	SetupGPS@MID+3
  3049  06EF  0021               	movlb	1	; select bank1
  3050  06F0  083C               	movf	(SetupGPS@F4918+2)^(0+128),w
  3051  06F1  0020               	movlb	0	; select bank0
  3052  06F2  00E8               	movwf	SetupGPS@MID+2
  3053  06F3  0021               	movlb	1	; select bank1
  3054  06F4  083B               	movf	(SetupGPS@F4918+1)^(0+128),w
  3055  06F5  0020               	movlb	0	; select bank0
  3056  06F6  00E7               	movwf	SetupGPS@MID+1
  3057  06F7  0021               	movlb	1	; select bank1
  3058  06F8  083A               	movf	SetupGPS@F4918^(0+128),w
  3059  06F9  0020               	movlb	0	; select bank0
  3060  06FA  00E6               	movwf	SetupGPS@MID
  3061                           
  3062                           ;launcher_functions.c: 338: unsigned char message[22];
  3063                           ;launcher_functions.c: 341: for(x = 0; x < 6; x++)
  3064  06FB  01EA               	clrf	SetupGPS@x
  3065  06FC  01EB               	clrf	SetupGPS@x+1
  3066  06FD  086B               	movf	SetupGPS@x+1,w
  3067  06FE  3A80               	xorlw	128
  3068  06FF  00C7               	movwf	??_SetupGPS
  3069  0700  3080               	movlw	128
  3070  0701  0247               	subwf	??_SetupGPS,w
  3071  0702  1D03               	skipz
  3072  0703  2F06               	goto	u1655
  3073  0704  3006               	movlw	6
  3074  0705  026A               	subwf	SetupGPS@x,w
  3075  0706                     u1655:	
  3076  0706  1803               	btfsc	3,0
  3077  0707  2F46               	goto	l2212
  3078  0708                     l2202:	
  3079                           
  3080                           ;launcher_functions.c: 342: {
  3081                           ;launcher_functions.c: 343: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3082  0708  3015               	movlw	21
  3083  0709  0020               	movlb	0	; select bank0
  3084  070A  00C9               	movwf	??_SetupGPS+2
  3085  070B  304B               	movlw	75
  3086  070C  00C8               	movwf	??_SetupGPS+1
  3087  070D  30D1               	movlw	209
  3088  070E  00C7               	movwf	??_SetupGPS
  3089  070F                     u2157:	
  3090  070F  0BC7               	decfsz	??_SetupGPS,f
  3091  0710  2F0F               	goto	u2157
  3092  0711  0BC8               	decfsz	??_SetupGPS+1,f
  3093  0712  2F0F               	goto	u2157
  3094  0713  0BC9               	decfsz	??_SetupGPS+2,f
  3095  0714  2F0F               	goto	u2157
  3096  0715  0000               	nop
  3097                           
  3098                           ;launcher_functions.c: 344: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3099  0716  300A               	movlw	low (STR_1| (0+32768))
  3100  0717  0020               	movlb	0	; select bank0
  3101  0718  00B4               	movwf	sprintf@f
  3102  0719  3088               	movlw	high (STR_1| (0+32768))
  3103  071A  00B5               	movwf	sprintf@f+1
  3104  071B  3060               	movlw	SetupGPS@startSequence& (0+255)
  3105  071C  00C7               	movwf	??_SetupGPS
  3106  071D  0847               	movf	??_SetupGPS,w
  3107  071E  00B6               	movwf	?_sprintf+2
  3108  071F  3066               	movlw	SetupGPS@MID& (0+255)
  3109  0720  00C8               	movwf	??_SetupGPS+1
  3110  0721  0848               	movf	??_SetupGPS+1,w
  3111  0722  00B7               	movwf	?_sprintf+3
  3112  0723  086B               	movf	SetupGPS@x+1,w
  3113  0724  01B9               	clrf	?_sprintf+5
  3114  0725  07B9               	addwf	?_sprintf+5,f
  3115  0726  086A               	movf	SetupGPS@x,w
  3116  0727  01B8               	clrf	?_sprintf+4
  3117  0728  07B8               	addwf	?_sprintf+4,f
  3118  0729  304A               	movlw	SetupGPS@message& (0+255)
  3119  072A  3185  2537  3186   	fcall	_sprintf
  3120                           
  3121                           ;launcher_functions.c: 345: uart_write_message(message, 22);
  3122  072D  3016               	movlw	22
  3123  072E  0020               	movlb	0	; select bank0
  3124  072F  00A8               	movwf	uart_write_message@size
  3125  0730  3000               	movlw	0
  3126  0731  00A9               	movwf	uart_write_message@size+1
  3127  0732  304A               	movlw	SetupGPS@message& (0+255)
  3128  0733  3187  276E  3186   	fcall	_uart_write_message
  3129  0736  3001               	movlw	1
  3130  0737  0020               	movlb	0	; select bank0
  3131  0738  07EA               	addwf	SetupGPS@x,f
  3132  0739  3000               	movlw	0
  3133  073A  3DEB               	addwfc	SetupGPS@x+1,f
  3134  073B  086B               	movf	SetupGPS@x+1,w
  3135  073C  3A80               	xorlw	128
  3136  073D  00C7               	movwf	??_SetupGPS
  3137  073E  3080               	movlw	128
  3138  073F  0247               	subwf	??_SetupGPS,w
  3139  0740  1D03               	skipz
  3140  0741  2F44               	goto	u1665
  3141  0742  3006               	movlw	6
  3142  0743  026A               	subwf	SetupGPS@x,w
  3143  0744                     u1665:	
  3144  0744  1C03               	skipc
  3145  0745  2F08               	goto	l2202
  3146  0746                     l2212:	
  3147                           
  3148                           ;launcher_functions.c: 346: }
  3149                           ;launcher_functions.c: 348: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3150  0746  3015               	movlw	21
  3151  0747  0020               	movlb	0	; select bank0
  3152  0748  00C9               	movwf	??_SetupGPS+2
  3153  0749  304B               	movlw	75
  3154  074A  00C8               	movwf	??_SetupGPS+1
  3155  074B  30D1               	movlw	209
  3156  074C  00C7               	movwf	??_SetupGPS
  3157  074D                     u2167:	
  3158  074D  0BC7               	decfsz	??_SetupGPS,f
  3159  074E  2F4D               	goto	u2167
  3160  074F  0BC8               	decfsz	??_SetupGPS+1,f
  3161  0750  2F4D               	goto	u2167
  3162  0751  0BC9               	decfsz	??_SetupGPS+2,f
  3163  0752  2F4D               	goto	u2167
  3164  0753  0000               	nop
  3165                           
  3166                           ;launcher_functions.c: 350: sprintf(message, "%s%s,01,01,01,00*", startSequence, MID);
  3167  0754  301D               	movlw	low (STR_2| (0+32768))
  3168  0755  0020               	movlb	0	; select bank0
  3169  0756  00B4               	movwf	sprintf@f
  3170  0757  3088               	movlw	high (STR_2| (0+32768))
  3171  0758  00B5               	movwf	sprintf@f+1
  3172  0759  3060               	movlw	SetupGPS@startSequence& (0+255)
  3173  075A  00C7               	movwf	??_SetupGPS
  3174  075B  0847               	movf	??_SetupGPS,w
  3175  075C  00B6               	movwf	?_sprintf+2
  3176  075D  3066               	movlw	SetupGPS@MID& (0+255)
  3177  075E  00C8               	movwf	??_SetupGPS+1
  3178  075F  0848               	movf	??_SetupGPS+1,w
  3179  0760  00B7               	movwf	?_sprintf+3
  3180  0761  304A               	movlw	SetupGPS@message& (0+255)
  3181  0762  3185  2537  3186   	fcall	_sprintf
  3182                           
  3183                           ;launcher_functions.c: 351: uart_write_message(message, 22);
  3184  0765  3016               	movlw	22
  3185  0766  0020               	movlb	0	; select bank0
  3186  0767  00A8               	movwf	uart_write_message@size
  3187  0768  3000               	movlw	0
  3188  0769  00A9               	movwf	uart_write_message@size+1
  3189  076A  304A               	movlw	SetupGPS@message& (0+255)
  3190  076B  3187  276E         	fcall	_uart_write_message
  3191  076D  0008               	return
  3192  076E                     __end_of_SetupGPS:	
  3193                           
  3194                           	psect	text7
  3195  076E                     __ptext7:	
  3196 ;; *************** function _uart_write_message *****************
  3197 ;; Defined at:
  3198 ;;		line 288 in file "launcher_functions.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  data            1    wreg     PTR unsigned char 
  3201 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3202 ;;  size            2    8[BANK0 ] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3205 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3206 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3207 ;;  x               2   17[BANK0 ] int 
  3208 ;;  checksum        1   19[BANK0 ] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;		None               void
  3211 ;; Registers used:
  3212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3218 ;;      Params:         0       2       0       0       0       0       0       0
  3219 ;;      Locals:         0      10       0       0       0       0       0       0
  3220 ;;      Temps:          0       3       0       0       0       0       0       0
  3221 ;;      Totals:         0      15       0       0       0       0       0       0
  3222 ;;Total ram usage:       15 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    3
  3225 ;; This function calls:
  3226 ;;		_compute_checksum
  3227 ;;		_uart_xmit
  3228 ;; This function is called by:
  3229 ;;		_SetupGPS
  3230 ;;		_UpdateGPS
  3231 ;;		_DisableGPS
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function _uart_write_message
  3237  076E                     _uart_write_message:	
  3238                           
  3239                           ;incstack = 0
  3240                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3241                           ;uart_write_message@data stored from wreg
  3242  076E  0020               	movlb	0	; select bank0
  3243  076F  00B4               	movwf	uart_write_message@data
  3244                           
  3245                           ;launcher_functions.c: 290: int x;
  3246                           ;launcher_functions.c: 291: unsigned char checksum;
  3247                           ;launcher_functions.c: 292: unsigned char ascii_checksum[2];
  3248                           ;launcher_functions.c: 294: checksum = compute_checksum(data, size);
  3249  0770  0829               	movf	uart_write_message@size+1,w
  3250  0771  01A1               	clrf	compute_checksum@size+1
  3251  0772  07A1               	addwf	compute_checksum@size+1,f
  3252  0773  0828               	movf	uart_write_message@size,w
  3253  0774  01A0               	clrf	compute_checksum@size
  3254  0775  07A0               	addwf	compute_checksum@size,f
  3255  0776  0834               	movf	uart_write_message@data,w
  3256  0777  318F  275E  3187   	fcall	_compute_checksum
  3257  077A  0020               	movlb	0	; select bank0
  3258  077B  00AA               	movwf	??_uart_write_message
  3259  077C  082A               	movf	??_uart_write_message,w
  3260  077D  00B3               	movwf	uart_write_message@checksum
  3261                           
  3262                           ;launcher_functions.c: 295: ascii_checksum[0] = checksum >> 4;
  3263  077E  0833               	movf	uart_write_message@checksum,w
  3264  077F  00AA               	movwf	??_uart_write_message
  3265  0780  3004               	movlw	4
  3266  0781                     u1355:	
  3267  0781  36AA               	lsrf	??_uart_write_message,f
  3268  0782  0B89               	decfsz	9,f
  3269  0783  2F81               	goto	u1355
  3270  0784  082A               	movf	??_uart_write_message,w
  3271  0785  00AB               	movwf	??_uart_write_message+1
  3272  0786  082B               	movf	??_uart_write_message+1,w
  3273  0787  00B5               	movwf	uart_write_message@ascii_checksum
  3274                           
  3275                           ;launcher_functions.c: 296: ascii_checksum[1] = checksum & 0x0F;
  3276  0788  0833               	movf	uart_write_message@checksum,w
  3277  0789  390F               	andlw	15
  3278  078A  00AA               	movwf	??_uart_write_message
  3279  078B  082A               	movf	??_uart_write_message,w
  3280  078C  00B6               	movwf	uart_write_message@ascii_checksum+1
  3281                           
  3282                           ;launcher_functions.c: 298: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3283  078D  300A               	movlw	10
  3284  078E  0235               	subwf	uart_write_message@ascii_checksum,w
  3285  078F  1C03               	skipc
  3286  0790  2F93               	goto	l1838
  3287  0791  3037               	movlw	55
  3288  0792  2F94               	goto	L1
  3289  0793                     l1838:	
  3290  0793  3030               	movlw	48
  3291  0794                     L1:	
  3292  0794  00AD               	movwf	_uart_write_message$1290
  3293  0795  3000               	movlw	0
  3294  0796  00AE               	movwf	_uart_write_message$1290+1
  3295  0797  082D               	movf	_uart_write_message$1290,w
  3296  0798  00AA               	movwf	??_uart_write_message
  3297  0799  082A               	movf	??_uart_write_message,w
  3298  079A  07B5               	addwf	uart_write_message@ascii_checksum,f
  3299                           
  3300                           ;launcher_functions.c: 299: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3301  079B  300A               	movlw	10
  3302  079C  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3303  079D  1C03               	skipc
  3304  079E  2FA1               	goto	l1846
  3305  079F  3037               	movlw	55
  3306  07A0  2FA2               	goto	L2
  3307  07A1                     l1846:	
  3308  07A1  3030               	movlw	48
  3309  07A2                     L2:	
  3310  07A2  00AF               	movwf	_uart_write_message$1291
  3311  07A3  3000               	movlw	0
  3312  07A4  00B0               	movwf	_uart_write_message$1291+1
  3313  07A5  082F               	movf	_uart_write_message$1291,w
  3314  07A6  00AA               	movwf	??_uart_write_message
  3315  07A7  082A               	movf	??_uart_write_message,w
  3316  07A8  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3317                           
  3318                           ;launcher_functions.c: 301: for(x=0; x<size-1; x++)
  3319  07A9  01B1               	clrf	uart_write_message@x
  3320  07AA  01B2               	clrf	uart_write_message@x+1
  3321  07AB                     l1856:	
  3322  07AB  0828               	movf	uart_write_message@size,w
  3323  07AC  3EFF               	addlw	255
  3324  07AD  00AA               	movwf	??_uart_write_message
  3325  07AE  30FF               	movlw	255
  3326  07AF  3D29               	addwfc	uart_write_message@size+1,w
  3327  07B0  00AB               	movwf	??_uart_write_message+1
  3328  07B1  0832               	movf	uart_write_message@x+1,w
  3329  07B2  3A80               	xorlw	128
  3330  07B3  00AC               	movwf	??_uart_write_message+2
  3331  07B4  082B               	movf	??_uart_write_message+1,w
  3332  07B5  3A80               	xorlw	128
  3333  07B6  022C               	subwf	??_uart_write_message+2,w
  3334  07B7  1D03               	skipz
  3335  07B8  2FBB               	goto	u1385
  3336  07B9  082A               	movf	??_uart_write_message,w
  3337  07BA  0231               	subwf	uart_write_message@x,w
  3338  07BB                     u1385:	
  3339  07BB  1803               	btfsc	3,0
  3340  07BC  2FCE               	goto	l1858
  3341                           
  3342                           ;launcher_functions.c: 302: {
  3343                           ;launcher_functions.c: 303: uart_xmit(data[x]);
  3344  07BD  0020               	movlb	0	; select bank0
  3345  07BE  0831               	movf	uart_write_message@x,w
  3346  07BF  0734               	addwf	uart_write_message@data,w
  3347  07C0  00AA               	movwf	??_uart_write_message
  3348  07C1  082A               	movf	??_uart_write_message,w
  3349  07C2  0086               	movwf	6
  3350  07C3  0187               	clrf	7
  3351  07C4  0801               	movf	1,w
  3352  07C5  318D  2564  3187   	fcall	_uart_xmit
  3353  07C8  3001               	movlw	1
  3354  07C9  0020               	movlb	0	; select bank0
  3355  07CA  07B1               	addwf	uart_write_message@x,f
  3356  07CB  3000               	movlw	0
  3357  07CC  3DB2               	addwfc	uart_write_message@x+1,f
  3358  07CD  2FAB               	goto	l1856
  3359  07CE                     l1858:	
  3360                           
  3361                           ;launcher_functions.c: 304: }
  3362                           ;launcher_functions.c: 305: uart_xmit(ascii_checksum[0]);
  3363  07CE  0020               	movlb	0	; select bank0
  3364  07CF  0835               	movf	uart_write_message@ascii_checksum,w
  3365  07D0  318D  2564  3187   	fcall	_uart_xmit
  3366                           
  3367                           ;launcher_functions.c: 306: uart_xmit(ascii_checksum[1]);
  3368  07D3  0020               	movlb	0	; select bank0
  3369  07D4  0836               	movf	uart_write_message@ascii_checksum+1,w
  3370  07D5  318D  2564  3187   	fcall	_uart_xmit
  3371                           
  3372                           ;launcher_functions.c: 308: uart_xmit(0x0D);
  3373  07D8  300D               	movlw	13
  3374  07D9  318D  2564  3187   	fcall	_uart_xmit
  3375                           
  3376                           ;launcher_functions.c: 309: uart_xmit(0x0A);
  3377  07DC  300A               	movlw	10
  3378  07DD  318D  2564         	fcall	_uart_xmit
  3379  07DF  0008               	return
  3380  07E0                     __end_of_uart_write_message:	
  3381                           
  3382                           	psect	text8
  3383  0D64                     __ptext8:	
  3384 ;; *************** function _uart_xmit *****************
  3385 ;; Defined at:
  3386 ;;		line 280 in file "launcher_functions.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  mydata_byte     1    wreg     unsigned char 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3400 ;;      Params:         0       0       0       0       0       0       0       0
  3401 ;;      Locals:         0       1       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0
  3403 ;;      Totals:         0       1       0       0       0       0       0       0
  3404 ;;Total ram usage:        1 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    2
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_uart_write_message
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           
  3415                           ;psect for function _uart_xmit
  3416  0D64                     _uart_xmit:	
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _uart_xmit: [wreg]
  3420                           ;uart_xmit@mydata_byte stored from wreg
  3421  0D64  0020               	movlb	0	; select bank0
  3422  0D65  00A0               	movwf	uart_xmit@mydata_byte
  3423  0D66                     l319:	
  3424                           ;launcher_functions.c: 283: while(!TXSTAbits.TRMT);
  3425                           
  3426  0D66  0023               	movlb	3	; select bank3
  3427  0D67  1C9E               	btfss	30,1	;volatile
  3428  0D68  2D66               	goto	l319
  3429                           
  3430                           ;launcher_functions.c: 284: TXREG = mydata_byte;
  3431  0D69  0020               	movlb	0	; select bank0
  3432  0D6A  0820               	movf	uart_xmit@mydata_byte,w
  3433  0D6B  0023               	movlb	3	; select bank3
  3434  0D6C  009A               	movwf	26	;volatile
  3435  0D6D  0008               	return
  3436  0D6E                     __end_of_uart_xmit:	
  3437                           
  3438                           	psect	text9
  3439  0F5E                     __ptext9:	
  3440 ;; *************** function _compute_checksum *****************
  3441 ;; Defined at:
  3442 ;;		line 269 in file "launcher_functions.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  data            1    wreg     PTR unsigned char 
  3445 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3446 ;;  size            2    0[BANK0 ] int 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3449 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3450 ;;  x               2    6[BANK0 ] int 
  3451 ;;  checksum        1    4[BANK0 ] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      unsigned char 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3461 ;;      Params:         0       2       0       0       0       0       0       0
  3462 ;;      Locals:         0       4       0       0       0       0       0       0
  3463 ;;      Temps:          0       2       0       0       0       0       0       0
  3464 ;;      Totals:         0       8       0       0       0       0       0       0
  3465 ;;Total ram usage:        8 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    2
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_uart_write_message
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _compute_checksum
  3477  0F5E                     _compute_checksum:	
  3478                           
  3479                           ;incstack = 0
  3480                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3481                           ;compute_checksum@data stored from wreg
  3482  0F5E  0020               	movlb	0	; select bank0
  3483  0F5F  00A5               	movwf	compute_checksum@data
  3484                           
  3485                           ;launcher_functions.c: 271: unsigned char checksum = 0;
  3486  0F60  01A4               	clrf	compute_checksum@checksum
  3487                           
  3488                           ;launcher_functions.c: 272: int x;
  3489                           ;launcher_functions.c: 273: for(x=0; x<size; x++)
  3490  0F61  01A6               	clrf	compute_checksum@x
  3491  0F62  01A7               	clrf	compute_checksum@x+1
  3492  0F63                     l1730:	
  3493  0F63  0827               	movf	compute_checksum@x+1,w
  3494  0F64  3A80               	xorlw	128
  3495  0F65  00A2               	movwf	??_compute_checksum
  3496  0F66  0821               	movf	compute_checksum@size+1,w
  3497  0F67  3A80               	xorlw	128
  3498  0F68  0222               	subwf	??_compute_checksum,w
  3499  0F69  1D03               	skipz
  3500  0F6A  2F6D               	goto	u1115
  3501  0F6B  0820               	movf	compute_checksum@size,w
  3502  0F6C  0226               	subwf	compute_checksum@x,w
  3503  0F6D                     u1115:	
  3504  0F6D  1803               	btfsc	3,0
  3505  0F6E  2F9D               	goto	l1732
  3506                           
  3507                           ;launcher_functions.c: 274: {
  3508                           ;launcher_functions.c: 275: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3509  0F6F  0020               	movlb	0	; select bank0
  3510  0F70  0826               	movf	compute_checksum@x,w
  3511  0F71  0725               	addwf	compute_checksum@data,w
  3512  0F72  00A2               	movwf	??_compute_checksum
  3513  0F73  0822               	movf	??_compute_checksum,w
  3514  0F74  0086               	movwf	6
  3515  0F75  0187               	clrf	7
  3516  0F76  0801               	movf	1,w
  3517  0F77  3A24               	xorlw	36
  3518  0F78  1903               	skipnz
  3519  0F79  2F98               	goto	l1728
  3520  0F7A  0826               	movf	compute_checksum@x,w
  3521  0F7B  0725               	addwf	compute_checksum@data,w
  3522  0F7C  00A2               	movwf	??_compute_checksum
  3523  0F7D  0822               	movf	??_compute_checksum,w
  3524  0F7E  0086               	movwf	6
  3525  0F7F  0187               	clrf	7
  3526  0F80  0801               	movf	1,w
  3527  0F81  3A2A               	xorlw	42
  3528  0F82  1903               	skipnz
  3529  0F83  2F98               	goto	l1728
  3530  0F84  0826               	movf	compute_checksum@x,w
  3531  0F85  0725               	addwf	compute_checksum@data,w
  3532  0F86  00A2               	movwf	??_compute_checksum
  3533  0F87  0822               	movf	??_compute_checksum,w
  3534  0F88  0086               	movwf	6
  3535  0F89  0187               	clrf	7
  3536  0F8A  0801               	movf	1,w
  3537  0F8B  3A21               	xorlw	33
  3538  0F8C  1903               	skipnz
  3539  0F8D  2F98               	goto	l1728
  3540                           
  3541                           ;launcher_functions.c: 276: checksum ^= data[x];
  3542  0F8E  0826               	movf	compute_checksum@x,w
  3543  0F8F  0725               	addwf	compute_checksum@data,w
  3544  0F90  00A2               	movwf	??_compute_checksum
  3545  0F91  0822               	movf	??_compute_checksum,w
  3546  0F92  0086               	movwf	6
  3547  0F93  0187               	clrf	7
  3548  0F94  0801               	movf	1,w
  3549  0F95  00A3               	movwf	??_compute_checksum+1
  3550  0F96  0823               	movf	??_compute_checksum+1,w
  3551  0F97  06A4               	xorwf	compute_checksum@checksum,f
  3552  0F98                     l1728:	
  3553  0F98  3001               	movlw	1
  3554  0F99  07A6               	addwf	compute_checksum@x,f
  3555  0F9A  3000               	movlw	0
  3556  0F9B  3DA7               	addwfc	compute_checksum@x+1,f
  3557  0F9C  2F63               	goto	l1730
  3558  0F9D                     l1732:	
  3559                           
  3560                           ;launcher_functions.c: 277: }
  3561                           ;launcher_functions.c: 278: return checksum;
  3562  0F9D  0020               	movlb	0	; select bank0
  3563  0F9E  0824               	movf	compute_checksum@checksum,w
  3564  0F9F  0008               	return
  3565  0FA0                     __end_of_compute_checksum:	
  3566                           
  3567                           	psect	text10
  3568  0537                     __ptext10:	
  3569 ;; *************** function _sprintf *****************
  3570 ;; Defined at:
  3571 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  sp              1    wreg     PTR unsigned char 
  3574 ;;		 -> SetupGPS@message(22), 
  3575 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  3576 ;;		 -> STR_2(18), STR_1(19), 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  3579 ;;		 -> SetupGPS@message(22), 
  3580 ;;  _val            4   34[BANK0 ] struct .
  3581 ;;  c               1   38[BANK0 ] char 
  3582 ;;  ap              1   32[BANK0 ] PTR void [1]
  3583 ;;		 -> ?_sprintf(2), 
  3584 ;;  prec            1   31[BANK0 ] char 
  3585 ;;  flag            1   30[BANK0 ] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2   20[BANK0 ] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3595 ;;      Params:         0       6       0       0       0       0       0       0
  3596 ;;      Locals:         0       9       0       0       0       0       0       0
  3597 ;;      Temps:          0       4       0       0       0       0       0       0
  3598 ;;      Totals:         0      19       0       0       0       0       0       0
  3599 ;;Total ram usage:       19 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    3
  3602 ;; This function calls:
  3603 ;;		___lwdiv
  3604 ;;		___lwmod
  3605 ;; This function is called by:
  3606 ;;		_SetupGPS
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _sprintf
  3612  0537                     _sprintf:	
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3616                           ;sprintf@sp stored from wreg
  3617  0537  0020               	movlb	0	; select bank0
  3618  0538  00C1               	movwf	sprintf@sp
  3619                           
  3620                           ;doprnt.c: 494: va_list ap;
  3621                           ;doprnt.c: 499: signed char c;
  3622                           ;doprnt.c: 506: signed char prec;
  3623                           ;doprnt.c: 508: unsigned char flag;
  3624                           ;doprnt.c: 527: union {
  3625                           ;doprnt.c: 528: unsigned int _val;
  3626                           ;doprnt.c: 529: struct {
  3627                           ;doprnt.c: 530: const char * _cp;
  3628                           ;doprnt.c: 531: unsigned _len;
  3629                           ;doprnt.c: 532: } _str;
  3630                           ;doprnt.c: 533: } _val;
  3631                           ;doprnt.c: 542: *ap = __va_start();
  3632  0539  3036               	movlw	(?_sprintf+2)& (0+255)
  3633  053A  00BA               	movwf	??_sprintf
  3634  053B  083A               	movf	??_sprintf,w
  3635  053C  00C0               	movwf	sprintf@ap
  3636  053D                     l1928:	
  3637                           ;doprnt.c: 545: while(c = *f++) {
  3638                           
  3639  053D  0835               	movf	sprintf@f+1,w
  3640  053E  00BB               	movwf	??_sprintf+1
  3641  053F  0834               	movf	sprintf@f,w
  3642  0540  00BA               	movwf	??_sprintf
  3643  0541  0AB4               	incf	sprintf@f,f
  3644  0542  1903               	skipnz
  3645  0543  0AB5               	incf	sprintf@f+1,f
  3646  0544  083A               	movf	??_sprintf,w
  3647  0545  0084               	movwf	4
  3648  0546  083B               	movf	??_sprintf+1,w
  3649  0547  0085               	movwf	5
  3650  0548  0800               	movf	0,w	;code access
  3651  0549  00BC               	movwf	??_sprintf+2
  3652  054A  083C               	movf	??_sprintf+2,w
  3653  054B  00C6               	movwf	sprintf@c
  3654  054C  08C6               	movf	sprintf@c,f
  3655  054D  1903               	btfsc	3,2
  3656  054E  2E38               	goto	l1930
  3657                           
  3658                           ;doprnt.c: 547: if(c != '%')
  3659  054F  0846               	movf	sprintf@c,w
  3660  0550  3A25               	xorlw	37
  3661  0551  1903               	skipnz
  3662  0552  2D5F               	goto	l1868
  3663                           
  3664                           ;doprnt.c: 549: {
  3665                           ;doprnt.c: 550: ((*sp++ = (c)));
  3666  0553  0846               	movf	sprintf@c,w
  3667  0554  00BA               	movwf	??_sprintf
  3668  0555  0841               	movf	sprintf@sp,w
  3669  0556  0086               	movwf	6
  3670  0557  0187               	clrf	7
  3671  0558  083A               	movf	??_sprintf,w
  3672  0559  0081               	movwf	1
  3673  055A  3001               	movlw	1
  3674  055B  00BA               	movwf	??_sprintf
  3675  055C  083A               	movf	??_sprintf,w
  3676  055D  07C1               	addwf	sprintf@sp,f
  3677                           
  3678                           ;doprnt.c: 551: continue;
  3679  055E  2D3D               	goto	l1928
  3680  055F                     l1868:	
  3681                           
  3682                           ;doprnt.c: 552: }
  3683                           ;doprnt.c: 557: flag = 0;
  3684  055F  01BE               	clrf	sprintf@flag
  3685                           
  3686                           ;doprnt.c: 644: switch(c = *f++) {
  3687  0560  2D90               	goto	l1888
  3688  0561                     l1870:	
  3689                           ;doprnt.c: 737: case 's':
  3690                           
  3691                           ;doprnt.c: 707: case 'i':
  3692                           ;doprnt.c: 708: break;
  3693                           
  3694                           ;doprnt.c: 706: case 'd':
  3695                           
  3696                           ;doprnt.c: 647: goto alldone;
  3697                           
  3698                           ;doprnt.c: 646: case 0:
  3699                           
  3700                           
  3701                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3702  0561  0840               	movf	sprintf@ap,w
  3703  0562  0086               	movwf	6
  3704  0563  0187               	clrf	7
  3705  0564  0801               	movf	1,w
  3706  0565  00C2               	movwf	sprintf@_val
  3707  0566  3000               	movlw	0
  3708  0567  00C3               	movwf	sprintf@_val+1
  3709  0568  3001               	movlw	1
  3710  0569  00BA               	movwf	??_sprintf
  3711  056A  083A               	movf	??_sprintf,w
  3712  056B  07C0               	addwf	sprintf@ap,f
  3713                           
  3714                           ;doprnt.c: 749: if(!_val._str._cp)
  3715  056C  0843               	movf	sprintf@_val+1,w
  3716  056D  0442               	iorwf	sprintf@_val,w
  3717  056E  1D03               	skipz
  3718  056F  2D74               	goto	l1884
  3719                           
  3720                           ;doprnt.c: 750: _val._str._cp = "(null)";
  3721  0570  302F               	movlw	low (STR_3| (0+32768))
  3722  0571  00C2               	movwf	sprintf@_val
  3723  0572  3088               	movlw	high (STR_3| (0+32768))
  3724  0573  00C3               	movwf	sprintf@_val+1
  3725  0574                     l1884:	
  3726                           ;doprnt.c: 786: while(*_val._str._cp)
  3727                           
  3728  0574  0842               	movf	sprintf@_val,w
  3729  0575  0084               	movwf	4
  3730  0576  0843               	movf	sprintf@_val+1,w
  3731  0577  0085               	movwf	5
  3732  0578  0800               	movf	0,w	;code access
  3733  0579  3800               	iorlw	0
  3734  057A  1903               	btfsc	3,2
  3735  057B  2D3D               	goto	l1928
  3736                           
  3737                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  3738  057C  0842               	movf	sprintf@_val,w
  3739  057D  0084               	movwf	4
  3740  057E  0843               	movf	sprintf@_val+1,w
  3741  057F  0085               	movwf	5
  3742  0580  0800               	movf	0,w	;code access
  3743  0581  00BA               	movwf	??_sprintf
  3744  0582  0841               	movf	sprintf@sp,w
  3745  0583  0086               	movwf	6
  3746  0584  0187               	clrf	7
  3747  0585  083A               	movf	??_sprintf,w
  3748  0586  0081               	movwf	1
  3749  0587  3001               	movlw	1
  3750  0588  07C2               	addwf	sprintf@_val,f
  3751  0589  3000               	movlw	0
  3752  058A  3DC3               	addwfc	sprintf@_val+1,f
  3753  058B  3001               	movlw	1
  3754  058C  00BA               	movwf	??_sprintf
  3755  058D  083A               	movf	??_sprintf,w
  3756  058E  07C1               	addwf	sprintf@sp,f
  3757  058F  2D74               	goto	l1884
  3758  0590                     l1888:	
  3759                           ;doprnt.c: 831: }
  3760                           
  3761                           ;doprnt.c: 822: continue;
  3762                           
  3763                           ;doprnt.c: 811: default:
  3764                           
  3765                           ;doprnt.c: 788: continue;
  3766                           
  3767  0590  0835               	movf	sprintf@f+1,w
  3768  0591  00BB               	movwf	??_sprintf+1
  3769  0592  0834               	movf	sprintf@f,w
  3770  0593  00BA               	movwf	??_sprintf
  3771  0594  0AB4               	incf	sprintf@f,f
  3772  0595  1903               	skipnz
  3773  0596  0AB5               	incf	sprintf@f+1,f
  3774  0597  083A               	movf	??_sprintf,w
  3775  0598  0084               	movwf	4
  3776  0599  083B               	movf	??_sprintf+1,w
  3777  059A  0085               	movwf	5
  3778  059B  0800               	movf	0,w	;code access
  3779  059C  00C6               	movwf	sprintf@c
  3780                           
  3781                           ; Switch size 1, requested type "space"
  3782                           ; Number of cases is 4, Range of values is 0 to 115
  3783                           ; switch strategies available:
  3784                           ; Name         Instructions Cycles
  3785                           ; simple_byte           13     7 (average)
  3786                           ; direct_byte          238     6 (fixed)
  3787                           ; jumptable            260     6 (fixed)
  3788                           ;	Chosen strategy is simple_byte
  3789  059D  3A00               	xorlw	0	; case 0
  3790  059E  1903               	skipnz
  3791  059F  2E38               	goto	l1930
  3792  05A0  3A64               	xorlw	100	; case 100
  3793  05A1  1903               	skipnz
  3794  05A2  2DAA               	goto	l1890
  3795  05A3  3A0D               	xorlw	13	; case 105
  3796  05A4  1903               	skipnz
  3797  05A5  2DAA               	goto	l1890
  3798  05A6  3A1A               	xorlw	26	; case 115
  3799  05A7  1903               	skipnz
  3800  05A8  2D61               	goto	l1870
  3801  05A9  2D3D               	goto	l1928
  3802  05AA                     l1890:	
  3803                           
  3804                           ;doprnt.c: 1262: {
  3805                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3806  05AA  0840               	movf	sprintf@ap,w
  3807  05AB  0086               	movwf	6
  3808  05AC  0187               	clrf	7
  3809  05AD  3F40               	moviw [0]fsr1
  3810  05AE  00C2               	movwf	sprintf@_val
  3811  05AF  3F41               	moviw [1]fsr1
  3812  05B0  00C3               	movwf	sprintf@_val+1
  3813  05B1  3002               	movlw	2
  3814  05B2  00BA               	movwf	??_sprintf
  3815  05B3  083A               	movf	??_sprintf,w
  3816  05B4  07C0               	addwf	sprintf@ap,f
  3817                           
  3818                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3819  05B5  1FC3               	btfss	sprintf@_val+1,7
  3820  05B6  2DC0               	goto	l1900
  3821                           
  3822                           ;doprnt.c: 1271: flag |= 0x03;
  3823  05B7  3003               	movlw	3
  3824  05B8  00BA               	movwf	??_sprintf
  3825  05B9  083A               	movf	??_sprintf,w
  3826  05BA  04BE               	iorwf	sprintf@flag,f
  3827                           
  3828                           ;doprnt.c: 1272: _val._val = -_val._val;
  3829  05BB  09C2               	comf	sprintf@_val,f
  3830  05BC  09C3               	comf	sprintf@_val+1,f
  3831  05BD  0AC2               	incf	sprintf@_val,f
  3832  05BE  1903               	skipnz
  3833  05BF  0AC3               	incf	sprintf@_val+1,f
  3834  05C0                     l1900:	
  3835                           
  3836                           ;doprnt.c: 1273: }
  3837                           ;doprnt.c: 1275: }
  3838                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3839  05C0  01C6               	clrf	sprintf@c
  3840  05C1  0AC6               	incf	sprintf@c,f
  3841  05C2  0846               	movf	sprintf@c,w
  3842  05C3  3A05               	xorlw	5
  3843  05C4  1903               	btfsc	3,2
  3844  05C5  2DE5               	goto	l1912
  3845  05C6                     l1904:	
  3846                           
  3847                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3848  05C6  0846               	movf	sprintf@c,w
  3849  05C7  00BA               	movwf	??_sprintf
  3850  05C8  01BB               	clrf	??_sprintf+1
  3851  05C9  35BA               	lslf	??_sprintf,f
  3852  05CA  0DBB               	rlf	??_sprintf+1,f
  3853  05CB  3000               	movlw	low (_dpowers| (0+32768))
  3854  05CC  073A               	addwf	??_sprintf,w
  3855  05CD  0084               	movwf	4
  3856  05CE  3088               	movlw	high (_dpowers| (0+32768))
  3857  05CF  3D3B               	addwfc	??_sprintf+1,w
  3858  05D0  0085               	movwf	5
  3859  05D1  3F00               	moviw [0]fsr0
  3860  05D2  00BC               	movwf	??_sprintf+2
  3861  05D3  3F01               	moviw [1]fsr0
  3862  05D4  00BD               	movwf	??_sprintf+3
  3863  05D5  083D               	movf	??_sprintf+3,w
  3864  05D6  0243               	subwf	sprintf@_val+1,w
  3865  05D7  1D03               	skipz
  3866  05D8  2DDB               	goto	u1445
  3867  05D9  083C               	movf	??_sprintf+2,w
  3868  05DA  0242               	subwf	sprintf@_val,w
  3869  05DB                     u1445:	
  3870  05DB  1C03               	btfss	3,0
  3871  05DC  2DE5               	goto	l1912
  3872                           
  3873                           ;doprnt.c: 1316: break;
  3874  05DD  3001               	movlw	1
  3875  05DE  00BA               	movwf	??_sprintf
  3876  05DF  083A               	movf	??_sprintf,w
  3877  05E0  07C6               	addwf	sprintf@c,f
  3878  05E1  0846               	movf	sprintf@c,w
  3879  05E2  3A05               	xorlw	5
  3880  05E3  1D03               	skipz
  3881  05E4  2DC6               	goto	l1904
  3882  05E5                     l1912:	
  3883                           
  3884                           ;doprnt.c: 1431: {
  3885                           ;doprnt.c: 1447: if(flag & 0x03)
  3886  05E5  083E               	movf	sprintf@flag,w
  3887  05E6  3903               	andlw	3
  3888  05E7  1903               	btfsc	3,2
  3889  05E8  2DF4               	goto	l1918
  3890                           
  3891                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3892  05E9  302D               	movlw	45
  3893  05EA  00BA               	movwf	??_sprintf
  3894  05EB  0841               	movf	sprintf@sp,w
  3895  05EC  0086               	movwf	6
  3896  05ED  0187               	clrf	7
  3897  05EE  083A               	movf	??_sprintf,w
  3898  05EF  0081               	movwf	1
  3899  05F0  3001               	movlw	1
  3900  05F1  00BA               	movwf	??_sprintf
  3901  05F2  083A               	movf	??_sprintf,w
  3902  05F3  07C1               	addwf	sprintf@sp,f
  3903  05F4                     l1918:	
  3904                           
  3905                           ;doprnt.c: 1478: }
  3906                           ;doprnt.c: 1481: prec = c;
  3907  05F4  0846               	movf	sprintf@c,w
  3908  05F5  00BA               	movwf	??_sprintf
  3909  05F6  083A               	movf	??_sprintf,w
  3910  05F7  00BF               	movwf	sprintf@prec
  3911  05F8                     l1926:	
  3912                           ;doprnt.c: 1483: while(prec--) {
  3913                           
  3914  05F8  30FF               	movlw	-1
  3915  05F9  00BA               	movwf	??_sprintf
  3916  05FA  083A               	movf	??_sprintf,w
  3917  05FB  07BF               	addwf	sprintf@prec,f
  3918  05FC  083F               	movf	sprintf@prec,w
  3919  05FD  3AFF               	xorlw	255
  3920  05FE  1903               	btfsc	3,2
  3921  05FF  2D3D               	goto	l1928
  3922                           
  3923                           ;doprnt.c: 1487: {
  3924                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3925  0600  300A               	movlw	10
  3926  0601  00AE               	movwf	___lwmod@divisor
  3927  0602  3000               	movlw	0
  3928  0603  00AF               	movwf	___lwmod@divisor+1
  3929  0604  083F               	movf	sprintf@prec,w
  3930  0605  00BA               	movwf	??_sprintf
  3931  0606  01BB               	clrf	??_sprintf+1
  3932  0607  35BA               	lslf	??_sprintf,f
  3933  0608  0DBB               	rlf	??_sprintf+1,f
  3934  0609  3000               	movlw	low (_dpowers| (0+32768))
  3935  060A  073A               	addwf	??_sprintf,w
  3936  060B  0084               	movwf	4
  3937  060C  3088               	movlw	high (_dpowers| (0+32768))
  3938  060D  3D3B               	addwfc	??_sprintf+1,w
  3939  060E  0085               	movwf	5
  3940  060F  3F00               	moviw [0]fsr0
  3941  0610  00A6               	movwf	___lwdiv@divisor
  3942  0611  3F01               	moviw [1]fsr0
  3943  0612  00A7               	movwf	___lwdiv@divisor+1
  3944  0613  0843               	movf	sprintf@_val+1,w
  3945  0614  01A9               	clrf	___lwdiv@dividend+1
  3946  0615  07A9               	addwf	___lwdiv@dividend+1,f
  3947  0616  0842               	movf	sprintf@_val,w
  3948  0617  01A8               	clrf	___lwdiv@dividend
  3949  0618  07A8               	addwf	___lwdiv@dividend,f
  3950  0619  318F  2727  3185   	fcall	___lwdiv
  3951  061C  0020               	movlb	0	; select bank0
  3952  061D  0827               	movf	?___lwdiv+1,w
  3953  061E  01B1               	clrf	___lwmod@dividend+1
  3954  061F  07B1               	addwf	___lwmod@dividend+1,f
  3955  0620  0826               	movf	?___lwdiv,w
  3956  0621  01B0               	clrf	___lwmod@dividend
  3957  0622  07B0               	addwf	___lwmod@dividend,f
  3958  0623  318E  26C6  3185   	fcall	___lwmod
  3959  0626  0020               	movlb	0	; select bank0
  3960  0627  082E               	movf	?___lwmod,w
  3961  0628  3E30               	addlw	48
  3962  0629  00BC               	movwf	??_sprintf+2
  3963  062A  083C               	movf	??_sprintf+2,w
  3964  062B  00C6               	movwf	sprintf@c
  3965                           
  3966                           ;doprnt.c: 1532: }
  3967                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3968  062C  0846               	movf	sprintf@c,w
  3969  062D  00BA               	movwf	??_sprintf
  3970  062E  0841               	movf	sprintf@sp,w
  3971  062F  0086               	movwf	6
  3972  0630  0187               	clrf	7
  3973  0631  083A               	movf	??_sprintf,w
  3974  0632  0081               	movwf	1
  3975  0633  3001               	movlw	1
  3976  0634  00BA               	movwf	??_sprintf
  3977  0635  083A               	movf	??_sprintf,w
  3978  0636  07C1               	addwf	sprintf@sp,f
  3979  0637  2DF8               	goto	l1926
  3980  0638                     l1930:	
  3981                           ;doprnt.c: 1534: }
  3982                           ;doprnt.c: 1542: }
  3983                           ;doprnt.c: 1544: alldone:
  3984                           
  3985                           
  3986                           ;doprnt.c: 1547: *sp = 0;
  3987  0638  0841               	movf	sprintf@sp,w
  3988  0639  0086               	movwf	6
  3989  063A  0187               	clrf	7
  3990  063B  0181               	clrf	1
  3991  063C  0008               	return
  3992  063D                     __end_of_sprintf:	
  3993                           ;doprnt.c: 1549: return 0;
  3994                           ;	Return value of _sprintf is never used
  3995                           
  3996                           
  3997                           	psect	text11
  3998  0EC6                     __ptext11:	
  3999 ;; *************** function ___lwmod *****************
  4000 ;; Defined at:
  4001 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  divisor         2   14[BANK0 ] unsigned int 
  4004 ;;  dividend        2   16[BANK0 ] unsigned int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  counter         1   19[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2   14[BANK0 ] unsigned int 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4016 ;;      Params:         0       4       0       0       0       0       0       0
  4017 ;;      Locals:         0       1       0       0       0       0       0       0
  4018 ;;      Temps:          0       1       0       0       0       0       0       0
  4019 ;;      Totals:         0       6       0       0       0       0       0       0
  4020 ;;Total ram usage:        6 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    2
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_sprintf
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function ___lwmod
  4032  0EC6                     ___lwmod:	
  4033                           
  4034                           ;incstack = 0
  4035                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4036  0EC6  0020               	movlb	0	; select bank0
  4037  0EC7  082F               	movf	___lwmod@divisor+1,w
  4038  0EC8  042E               	iorwf	___lwmod@divisor,w
  4039  0EC9  1903               	skipnz
  4040  0ECA  2EEE               	goto	l1796
  4041  0ECB  01B3               	clrf	___lwmod@counter
  4042  0ECC  0AB3               	incf	___lwmod@counter,f
  4043  0ECD                     l1786:	
  4044  0ECD  1BAF               	btfsc	___lwmod@divisor+1,7
  4045  0ECE  2ED9               	goto	l1788
  4046  0ECF  3001               	movlw	1
  4047  0ED0                     u1255:	
  4048  0ED0  35AE               	lslf	___lwmod@divisor,f
  4049  0ED1  0DAF               	rlf	___lwmod@divisor+1,f
  4050  0ED2  0B89               	decfsz	9,f
  4051  0ED3  2ED0               	goto	u1255
  4052  0ED4  3001               	movlw	1
  4053  0ED5  00B2               	movwf	??___lwmod
  4054  0ED6  0832               	movf	??___lwmod,w
  4055  0ED7  07B3               	addwf	___lwmod@counter,f
  4056  0ED8  2ECD               	goto	l1786
  4057  0ED9                     l1788:	
  4058  0ED9  082F               	movf	___lwmod@divisor+1,w
  4059  0EDA  0231               	subwf	___lwmod@dividend+1,w
  4060  0EDB  1D03               	skipz
  4061  0EDC  2EDF               	goto	u1275
  4062  0EDD  082E               	movf	___lwmod@divisor,w
  4063  0EDE  0230               	subwf	___lwmod@dividend,w
  4064  0EDF                     u1275:	
  4065  0EDF  1C03               	skipc
  4066  0EE0  2EE5               	goto	l1792
  4067  0EE1  082E               	movf	___lwmod@divisor,w
  4068  0EE2  02B0               	subwf	___lwmod@dividend,f
  4069  0EE3  082F               	movf	___lwmod@divisor+1,w
  4070  0EE4  3BB1               	subwfb	___lwmod@dividend+1,f
  4071  0EE5                     l1792:	
  4072  0EE5  3001               	movlw	1
  4073  0EE6                     u1285:	
  4074  0EE6  36AF               	lsrf	___lwmod@divisor+1,f
  4075  0EE7  0CAE               	rrf	___lwmod@divisor,f
  4076  0EE8  0B89               	decfsz	9,f
  4077  0EE9  2EE6               	goto	u1285
  4078  0EEA  3001               	movlw	1
  4079  0EEB  02B3               	subwf	___lwmod@counter,f
  4080  0EEC  1D03               	btfss	3,2
  4081  0EED  2ED9               	goto	l1788
  4082  0EEE                     l1796:	
  4083  0EEE  0831               	movf	___lwmod@dividend+1,w
  4084  0EEF  01AF               	clrf	?___lwmod+1
  4085  0EF0  07AF               	addwf	?___lwmod+1,f
  4086  0EF1  0830               	movf	___lwmod@dividend,w
  4087  0EF2  01AE               	clrf	?___lwmod
  4088  0EF3  07AE               	addwf	?___lwmod,f
  4089  0EF4  0008               	return
  4090  0EF5                     __end_of___lwmod:	
  4091                           
  4092                           	psect	text12
  4093  0F27                     __ptext12:	
  4094 ;; *************** function ___lwdiv *****************
  4095 ;; Defined at:
  4096 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  divisor         2    6[BANK0 ] unsigned int 
  4099 ;;  dividend        2    8[BANK0 ] unsigned int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  quotient        2   11[BANK0 ] unsigned int 
  4102 ;;  counter         1   13[BANK0 ] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  2    6[BANK0 ] unsigned int 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4112 ;;      Params:         0       4       0       0       0       0       0       0
  4113 ;;      Locals:         0       3       0       0       0       0       0       0
  4114 ;;      Temps:          0       1       0       0       0       0       0       0
  4115 ;;      Totals:         0       8       0       0       0       0       0       0
  4116 ;;Total ram usage:        8 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    2
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_DecodeGPS
  4123 ;;		_sprintf
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function ___lwdiv
  4129  0F27                     ___lwdiv:	
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4133  0F27  0020               	movlb	0	; select bank0
  4134  0F28  01AB               	clrf	___lwdiv@quotient
  4135  0F29  01AC               	clrf	___lwdiv@quotient+1
  4136  0F2A  0827               	movf	___lwdiv@divisor+1,w
  4137  0F2B  0426               	iorwf	___lwdiv@divisor,w
  4138  0F2C  1903               	skipnz
  4139  0F2D  2F57               	goto	l1774
  4140  0F2E  01AD               	clrf	___lwdiv@counter
  4141  0F2F  0AAD               	incf	___lwdiv@counter,f
  4142  0F30                     l1762:	
  4143  0F30  1BA7               	btfsc	___lwdiv@divisor+1,7
  4144  0F31  2F3C               	goto	l1764
  4145  0F32  3001               	movlw	1
  4146  0F33                     u1185:	
  4147  0F33  35A6               	lslf	___lwdiv@divisor,f
  4148  0F34  0DA7               	rlf	___lwdiv@divisor+1,f
  4149  0F35  0B89               	decfsz	9,f
  4150  0F36  2F33               	goto	u1185
  4151  0F37  3001               	movlw	1
  4152  0F38  00AA               	movwf	??___lwdiv
  4153  0F39  082A               	movf	??___lwdiv,w
  4154  0F3A  07AD               	addwf	___lwdiv@counter,f
  4155  0F3B  2F30               	goto	l1762
  4156  0F3C                     l1764:	
  4157  0F3C  3001               	movlw	1
  4158  0F3D                     u1205:	
  4159  0F3D  35AB               	lslf	___lwdiv@quotient,f
  4160  0F3E  0DAC               	rlf	___lwdiv@quotient+1,f
  4161  0F3F  0B89               	decfsz	9,f
  4162  0F40  2F3D               	goto	u1205
  4163  0F41  0827               	movf	___lwdiv@divisor+1,w
  4164  0F42  0229               	subwf	___lwdiv@dividend+1,w
  4165  0F43  1D03               	skipz
  4166  0F44  2F47               	goto	u1215
  4167  0F45  0826               	movf	___lwdiv@divisor,w
  4168  0F46  0228               	subwf	___lwdiv@dividend,w
  4169  0F47                     u1215:	
  4170  0F47  1C03               	skipc
  4171  0F48  2F4E               	goto	l1770
  4172  0F49  0826               	movf	___lwdiv@divisor,w
  4173  0F4A  02A8               	subwf	___lwdiv@dividend,f
  4174  0F4B  0827               	movf	___lwdiv@divisor+1,w
  4175  0F4C  3BA9               	subwfb	___lwdiv@dividend+1,f
  4176  0F4D  142B               	bsf	___lwdiv@quotient,0
  4177  0F4E                     l1770:	
  4178  0F4E  3001               	movlw	1
  4179  0F4F                     u1225:	
  4180  0F4F  36A7               	lsrf	___lwdiv@divisor+1,f
  4181  0F50  0CA6               	rrf	___lwdiv@divisor,f
  4182  0F51  0B89               	decfsz	9,f
  4183  0F52  2F4F               	goto	u1225
  4184  0F53  3001               	movlw	1
  4185  0F54  02AD               	subwf	___lwdiv@counter,f
  4186  0F55  1D03               	btfss	3,2
  4187  0F56  2F3C               	goto	l1764
  4188  0F57                     l1774:	
  4189  0F57  082C               	movf	___lwdiv@quotient+1,w
  4190  0F58  01A7               	clrf	?___lwdiv+1
  4191  0F59  07A7               	addwf	?___lwdiv+1,f
  4192  0F5A  082B               	movf	___lwdiv@quotient,w
  4193  0F5B  01A6               	clrf	?___lwdiv
  4194  0F5C  07A6               	addwf	?___lwdiv,f
  4195  0F5D  0008               	return
  4196  0F5E                     __end_of___lwdiv:	
  4197                           
  4198                           	psect	text13
  4199  03CA                     __ptext13:	
  4200 ;; *************** function _RecordMode *****************
  4201 ;; Defined at:
  4202 ;;		line 510 in file "launcher_functions.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  address         4   28[BANK0 ] long 
  4207 ;;  x               2   32[BANK0 ] int 
  4208 ;;  count           2   26[BANK0 ] int 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;		None               void
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4218 ;;      Params:         0       0       0       0       0       0       0       0
  4219 ;;      Locals:         0       8       0       0       0       0       0       0
  4220 ;;      Temps:          0       5       0       0       0       0       0       0
  4221 ;;      Totals:         0      13       0       0       0       0       0       0
  4222 ;;Total ram usage:       13 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    5
  4225 ;; This function calls:
  4226 ;;		_ReadBuffer
  4227 ;;		_WriteOverheadSPI
  4228 ;;		_WriteSPI
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _RecordMode
  4236  03CA                     _RecordMode:	
  4237                           
  4238                           ;launcher_functions.c: 512: long int address = 18;
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4242  03CA  3000               	movlw	0
  4243  03CB  0020               	movlb	0	; select bank0
  4244  03CC  00BF               	movwf	RecordMode@address+3
  4245  03CD  3000               	movlw	0
  4246  03CE  00BE               	movwf	RecordMode@address+2
  4247  03CF  3000               	movlw	0
  4248  03D0  00BD               	movwf	RecordMode@address+1
  4249  03D1  3012               	movlw	18
  4250  03D2  00BC               	movwf	RecordMode@address
  4251                           
  4252                           ;launcher_functions.c: 513: int count = 18;
  4253  03D3  3012               	movlw	18
  4254  03D4  00BA               	movwf	RecordMode@count
  4255  03D5  3000               	movlw	0
  4256  03D6  00BB               	movwf	RecordMode@count+1
  4257                           
  4258                           ;launcher_functions.c: 514: int x;
  4259                           ;launcher_functions.c: 516: (start) = 0;
  4260  03D7  01FB               	clrf	_start
  4261  03D8  01FC               	clrf	_start+1
  4262                           
  4263                           ;launcher_functions.c: 517: (end) = 0;
  4264  03D9  01F9               	clrf	_end
  4265  03DA  01FA               	clrf	_end+1
  4266                           
  4267                           ;launcher_functions.c: 520: WriteOverheadSPI(address);
  4268  03DB  083F               	movf	RecordMode@address+3,w
  4269  03DC  00AA               	movwf	WriteOverheadSPI@address+3
  4270  03DD  083E               	movf	RecordMode@address+2,w
  4271  03DE  00A9               	movwf	WriteOverheadSPI@address+2
  4272  03DF  083D               	movf	RecordMode@address+1,w
  4273  03E0  00A8               	movwf	WriteOverheadSPI@address+1
  4274  03E1  083C               	movf	RecordMode@address,w
  4275  03E2  00A7               	movwf	WriteOverheadSPI@address
  4276  03E3  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4277                           
  4278                           ;launcher_functions.c: 521: for(x=0;x<3;x++)
  4279  03E6  0020               	movlb	0	; select bank0
  4280  03E7  01C0               	clrf	RecordMode@x
  4281  03E8  01C1               	clrf	RecordMode@x+1
  4282  03E9  0841               	movf	RecordMode@x+1,w
  4283  03EA  3A80               	xorlw	128
  4284  03EB  00B5               	movwf	??_RecordMode
  4285  03EC  3080               	movlw	128
  4286  03ED  0235               	subwf	??_RecordMode,w
  4287  03EE  1D03               	skipz
  4288  03EF  2BF2               	goto	u1675
  4289  03F0  3003               	movlw	3
  4290  03F1  0240               	subwf	RecordMode@x,w
  4291  03F2                     u1675:	
  4292  03F2  1803               	btfsc	3,0
  4293  03F3  2C1A               	goto	l2238
  4294  03F4                     l2232:	
  4295                           
  4296                           ;launcher_functions.c: 522: {
  4297                           ;launcher_functions.c: 523: WriteSPI(validLongitude[x]);
  4298  03F4  0020               	movlb	0	; select bank0
  4299  03F5  3540               	lslf	RecordMode@x,w
  4300  03F6  3ED3               	addlw	_validLongitude& (0+255)
  4301  03F7  0086               	movwf	6
  4302  03F8  0187               	clrf	7
  4303  03F9  0801               	movf	1,w
  4304  03FA  318D  25CD  3183   	fcall	_WriteSPI
  4305                           
  4306                           ;launcher_functions.c: 524: WriteSPI(validLongitude[x]>>8);
  4307  03FD  0020               	movlb	0	; select bank0
  4308  03FE  3540               	lslf	RecordMode@x,w
  4309  03FF  3ED3               	addlw	_validLongitude& (0+255)
  4310  0400  0086               	movwf	6
  4311  0401  0187               	clrf	7
  4312  0402  3F40               	moviw [0]fsr1
  4313  0403  00B5               	movwf	??_RecordMode
  4314  0404  3F41               	moviw [1]fsr1
  4315  0405  00B6               	movwf	??_RecordMode+1
  4316  0406  0836               	movf	??_RecordMode+1,w
  4317  0407  318D  25CD  3183   	fcall	_WriteSPI
  4318  040A  3001               	movlw	1
  4319  040B  0020               	movlb	0	; select bank0
  4320  040C  07C0               	addwf	RecordMode@x,f
  4321  040D  3000               	movlw	0
  4322  040E  3DC1               	addwfc	RecordMode@x+1,f
  4323  040F  0841               	movf	RecordMode@x+1,w
  4324  0410  3A80               	xorlw	128
  4325  0411  00B5               	movwf	??_RecordMode
  4326  0412  3080               	movlw	128
  4327  0413  0235               	subwf	??_RecordMode,w
  4328  0414  1D03               	skipz
  4329  0415  2C18               	goto	u1685
  4330  0416  3003               	movlw	3
  4331  0417  0240               	subwf	RecordMode@x,w
  4332  0418                     u1685:	
  4333  0418  1C03               	skipc
  4334  0419  2BF4               	goto	l2232
  4335  041A                     l2238:	
  4336                           
  4337                           ;launcher_functions.c: 525: }
  4338                           ;launcher_functions.c: 526: WriteSPI(validNorthSouth);
  4339  041A  0021               	movlb	1	; select bank1
  4340  041B  0840               	movf	_validNorthSouth^(0+128),w
  4341  041C  318D  25CD  3183   	fcall	_WriteSPI
  4342                           
  4343                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  4344  041F  0020               	movlb	0	; select bank0
  4345  0420  01C0               	clrf	RecordMode@x
  4346  0421  01C1               	clrf	RecordMode@x+1
  4347  0422  0841               	movf	RecordMode@x+1,w
  4348  0423  3A80               	xorlw	128
  4349  0424  00B5               	movwf	??_RecordMode
  4350  0425  3080               	movlw	128
  4351  0426  0235               	subwf	??_RecordMode,w
  4352  0427  1D03               	skipz
  4353  0428  2C2B               	goto	u1695
  4354  0429  3003               	movlw	3
  4355  042A  0240               	subwf	RecordMode@x,w
  4356  042B                     u1695:	
  4357  042B  1803               	btfsc	3,0
  4358  042C  2C53               	goto	l2252
  4359  042D                     l2246:	
  4360                           
  4361                           ;launcher_functions.c: 528: {
  4362                           ;launcher_functions.c: 529: WriteSPI(validLatitude[x]);
  4363  042D  0020               	movlb	0	; select bank0
  4364  042E  3540               	lslf	RecordMode@x,w
  4365  042F  3ECD               	addlw	_validLatitude& (0+255)
  4366  0430  0086               	movwf	6
  4367  0431  0187               	clrf	7
  4368  0432  0801               	movf	1,w
  4369  0433  318D  25CD  3183   	fcall	_WriteSPI
  4370                           
  4371                           ;launcher_functions.c: 530: WriteSPI(validLatitude[x]>>8);
  4372  0436  0020               	movlb	0	; select bank0
  4373  0437  3540               	lslf	RecordMode@x,w
  4374  0438  3ECD               	addlw	_validLatitude& (0+255)
  4375  0439  0086               	movwf	6
  4376  043A  0187               	clrf	7
  4377  043B  3F40               	moviw [0]fsr1
  4378  043C  00B5               	movwf	??_RecordMode
  4379  043D  3F41               	moviw [1]fsr1
  4380  043E  00B6               	movwf	??_RecordMode+1
  4381  043F  0836               	movf	??_RecordMode+1,w
  4382  0440  318D  25CD  3183   	fcall	_WriteSPI
  4383  0443  3001               	movlw	1
  4384  0444  0020               	movlb	0	; select bank0
  4385  0445  07C0               	addwf	RecordMode@x,f
  4386  0446  3000               	movlw	0
  4387  0447  3DC1               	addwfc	RecordMode@x+1,f
  4388  0448  0841               	movf	RecordMode@x+1,w
  4389  0449  3A80               	xorlw	128
  4390  044A  00B5               	movwf	??_RecordMode
  4391  044B  3080               	movlw	128
  4392  044C  0235               	subwf	??_RecordMode,w
  4393  044D  1D03               	skipz
  4394  044E  2C51               	goto	u1705
  4395  044F  3003               	movlw	3
  4396  0450  0240               	subwf	RecordMode@x,w
  4397  0451                     u1705:	
  4398  0451  1C03               	skipc
  4399  0452  2C2D               	goto	l2246
  4400  0453                     l2252:	
  4401                           
  4402                           ;launcher_functions.c: 531: }
  4403                           ;launcher_functions.c: 532: WriteSPI(validEastWest);
  4404  0453  0021               	movlb	1	; select bank1
  4405  0454  083F               	movf	_validEastWest^(0+128),w
  4406  0455  318D  25CD  3183   	fcall	_WriteSPI
  4407                           
  4408                           ;launcher_functions.c: 534: TMR1IF = 0;
  4409  0458  0020               	movlb	0	; select bank0
  4410  0459  1011               	bcf	17,0	;volatile
  4411                           
  4412                           ;launcher_functions.c: 535: TMR1IE = 1;
  4413  045A  0021               	movlb	1	; select bank1
  4414  045B  1411               	bsf	17,0	;volatile
  4415                           
  4416                           ;launcher_functions.c: 536: TMR1ON = 1;
  4417  045C  0020               	movlb	0	; select bank0
  4418  045D  1418               	bsf	24,0	;volatile
  4419  045E                     l2276:	
  4420                           ;launcher_functions.c: 538: while((recordFlag) && (address < 131072))
  4421                           
  4422  045E  0021               	movlb	1	; select bank1
  4423  045F  085D               	movf	_recordFlag^(0+128),w
  4424  0460  1903               	btfsc	3,2
  4425  0461  2CAF               	goto	l409
  4426  0462  0020               	movlb	0	; select bank0
  4427  0463  083F               	movf	RecordMode@address+3,w
  4428  0464  3A80               	xorlw	128
  4429  0465  00B5               	movwf	??_RecordMode
  4430  0466  3000               	movlw	0
  4431  0467  3A80               	xorlw	128
  4432  0468  0235               	subwf	??_RecordMode,w
  4433  0469  1D03               	skipz
  4434  046A  2C75               	goto	u1743
  4435  046B  3002               	movlw	2
  4436  046C  023E               	subwf	RecordMode@address+2,w
  4437  046D  1D03               	skipz
  4438  046E  2C75               	goto	u1743
  4439  046F  3000               	movlw	0
  4440  0470  023D               	subwf	RecordMode@address+1,w
  4441  0471  1D03               	skipz
  4442  0472  2C75               	goto	u1743
  4443  0473  3000               	movlw	0
  4444  0474  023C               	subwf	RecordMode@address,w
  4445  0475                     u1743:	
  4446  0475  1803               	btfsc	3,0
  4447  0476  2CAE               	goto	u1740
  4448                           
  4449                           ;launcher_functions.c: 539: {
  4450                           ;launcher_functions.c: 540: if(count>=256)
  4451  0477  083B               	movf	RecordMode@count+1,w
  4452  0478  3A80               	xorlw	128
  4453  0479  00B5               	movwf	??_RecordMode
  4454  047A  3081               	movlw	129
  4455  047B  0235               	subwf	??_RecordMode,w
  4456  047C  1D03               	skipz
  4457  047D  2C80               	goto	u1715
  4458  047E  3000               	movlw	0
  4459  047F  023A               	subwf	RecordMode@count,w
  4460  0480                     u1715:	
  4461  0480  1C03               	skipc
  4462  0481  2C92               	goto	l2268
  4463                           
  4464                           ;launcher_functions.c: 541: {
  4465                           ;launcher_functions.c: 542: LATC2 = 1;
  4466  0482  0022               	movlb	2	; select bank2
  4467  0483  150E               	bsf	14,2	;volatile
  4468                           
  4469                           ;launcher_functions.c: 543: count = 0;
  4470  0484  0020               	movlb	0	; select bank0
  4471  0485  01BA               	clrf	RecordMode@count
  4472  0486  01BB               	clrf	RecordMode@count+1
  4473                           
  4474                           ;launcher_functions.c: 544: WriteOverheadSPI(address);
  4475  0487  083F               	movf	RecordMode@address+3,w
  4476  0488  00AA               	movwf	WriteOverheadSPI@address+3
  4477  0489  083E               	movf	RecordMode@address+2,w
  4478  048A  00A9               	movwf	WriteOverheadSPI@address+2
  4479  048B  083D               	movf	RecordMode@address+1,w
  4480  048C  00A8               	movwf	WriteOverheadSPI@address+1
  4481  048D  083C               	movf	RecordMode@address,w
  4482  048E  00A7               	movwf	WriteOverheadSPI@address
  4483  048F  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4484  0492                     l2268:	
  4485                           
  4486                           ;launcher_functions.c: 545: }
  4487                           ;launcher_functions.c: 546: if(!((((start))==((end)))?(1):(0)))
  4488  0492  087A               	movf	_end+1,w
  4489  0493  067C               	xorwf	_start+1,w
  4490  0494  1D03               	skipz
  4491  0495  2C98               	goto	u1725
  4492  0496  0879               	movf	_end,w
  4493  0497  067B               	xorwf	_start,w
  4494  0498                     u1725:	
  4495  0498  1903               	skipnz
  4496  0499  2C5E               	goto	l2276
  4497                           
  4498                           ;launcher_functions.c: 547: {
  4499                           ;launcher_functions.c: 548: WriteSPI(ReadBuffer());
  4500  049A  318E  260D  3183   	fcall	_ReadBuffer
  4501  049D  318D  25CD  3183   	fcall	_WriteSPI
  4502                           
  4503                           ;launcher_functions.c: 549: address++;
  4504  04A0  3001               	movlw	1
  4505  04A1  0020               	movlb	0	; select bank0
  4506  04A2  07BC               	addwf	RecordMode@address,f
  4507  04A3  3000               	movlw	0
  4508  04A4  3DBD               	addwfc	RecordMode@address+1,f
  4509  04A5  3000               	movlw	0
  4510  04A6  3DBE               	addwfc	RecordMode@address+2,f
  4511  04A7  3000               	movlw	0
  4512  04A8  3DBF               	addwfc	RecordMode@address+3,f
  4513                           
  4514                           ;launcher_functions.c: 550: count++;
  4515  04A9  3001               	movlw	1
  4516  04AA  07BA               	addwf	RecordMode@count,f
  4517  04AB  3000               	movlw	0
  4518  04AC  3DBB               	addwfc	RecordMode@count+1,f
  4519  04AD  2C5E               	goto	l2276
  4520  04AE                     u1740:	
  4521  04AE  0021               	movlb	1	; select bank1
  4522  04AF                     l409:	
  4523                           
  4524                           ;launcher_functions.c: 551: }
  4525                           ;launcher_functions.c: 552: }
  4526                           ;launcher_functions.c: 553: LATC2 = 1;
  4527  04AF  0022               	movlb	2	; select bank2
  4528  04B0  150E               	bsf	14,2	;volatile
  4529                           
  4530                           ;launcher_functions.c: 554: TMR1IE = 0;
  4531  04B1  0021               	movlb	1	; select bank1
  4532  04B2  1011               	bcf	17,0	;volatile
  4533                           
  4534                           ;launcher_functions.c: 555: TMR1ON = 0;
  4535  04B3  0020               	movlb	0	; select bank0
  4536  04B4  1018               	bcf	24,0	;volatile
  4537                           
  4538                           ;launcher_functions.c: 556: _delay((unsigned long)((5)*(16000000/4000.0)));
  4539  04B5  301A               	movlw	26
  4540  04B6  00B6               	movwf	??_RecordMode+1
  4541  04B7  30F8               	movlw	248
  4542  04B8  00B5               	movwf	??_RecordMode
  4543  04B9                     u2177:	
  4544  04B9  0BB5               	decfsz	??_RecordMode,f
  4545  04BA  2CB9               	goto	u2177
  4546  04BB  0BB6               	decfsz	??_RecordMode+1,f
  4547  04BC  2CB9               	goto	u2177
  4548  04BD  0000               	nop
  4549                           
  4550                           ;launcher_functions.c: 557: WriteOverheadSPI(0x0000000E);
  4551  04BE  3000               	movlw	0
  4552  04BF  0020               	movlb	0	; select bank0
  4553  04C0  00AA               	movwf	WriteOverheadSPI@address+3
  4554  04C1  3000               	movlw	0
  4555  04C2  00A9               	movwf	WriteOverheadSPI@address+2
  4556  04C3  3000               	movlw	0
  4557  04C4  00A8               	movwf	WriteOverheadSPI@address+1
  4558  04C5  300E               	movlw	14
  4559  04C6  00A7               	movwf	WriteOverheadSPI@address
  4560  04C7  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4561                           
  4562                           ;launcher_functions.c: 558: if(address >= 131072)
  4563  04CA  0020               	movlb	0	; select bank0
  4564  04CB  083F               	movf	RecordMode@address+3,w
  4565  04CC  3A80               	xorlw	128
  4566  04CD  00B5               	movwf	??_RecordMode
  4567  04CE  3000               	movlw	0
  4568  04CF  3A80               	xorlw	128
  4569  04D0  0235               	subwf	??_RecordMode,w
  4570  04D1  1D03               	skipz
  4571  04D2  2CDD               	goto	u1753
  4572  04D3  3002               	movlw	2
  4573  04D4  023E               	subwf	RecordMode@address+2,w
  4574  04D5  1D03               	skipz
  4575  04D6  2CDD               	goto	u1753
  4576  04D7  3000               	movlw	0
  4577  04D8  023D               	subwf	RecordMode@address+1,w
  4578  04D9  1D03               	skipz
  4579  04DA  2CDD               	goto	u1753
  4580  04DB  3000               	movlw	0
  4581  04DC  023C               	subwf	RecordMode@address,w
  4582  04DD                     u1753:	
  4583  04DD  1C03               	skipc
  4584  04DE  2CED               	goto	l2288
  4585                           
  4586                           ;launcher_functions.c: 559: {
  4587                           ;launcher_functions.c: 560: WriteSPI(131072 - 1);
  4588  04DF  30FF               	movlw	255
  4589  04E0  318D  25CD  3183   	fcall	_WriteSPI
  4590                           
  4591                           ;launcher_functions.c: 561: WriteSPI((131072 - 1)>>8);
  4592  04E3  30FF               	movlw	255
  4593  04E4  318D  25CD  3183   	fcall	_WriteSPI
  4594                           
  4595                           ;launcher_functions.c: 562: WriteSPI((131072 - 1)>>16);
  4596  04E7  3001               	movlw	1
  4597  04E8  318D  25CD  3183   	fcall	_WriteSPI
  4598                           
  4599                           ;launcher_functions.c: 563: WriteSPI((131072 - 1)>>24);
  4600  04EB  3000               	movlw	0
  4601  04EC  2D2E               	goto	L3
  4602  04ED                     l2288:	
  4603                           ;launcher_functions.c: 564: }
  4604                           
  4605                           
  4606                           ;launcher_functions.c: 565: else
  4607                           ;launcher_functions.c: 566: {
  4608                           ;launcher_functions.c: 567: WriteSPI(address);
  4609  04ED  0020               	movlb	0	; select bank0
  4610  04EE  083C               	movf	RecordMode@address,w
  4611  04EF  318D  25CD  3183   	fcall	_WriteSPI
  4612                           
  4613                           ;launcher_functions.c: 568: WriteSPI(address>>8);
  4614  04F2  0020               	movlb	0	; select bank0
  4615  04F3  083C               	movf	RecordMode@address,w
  4616  04F4  00B5               	movwf	??_RecordMode
  4617  04F5  083D               	movf	RecordMode@address+1,w
  4618  04F6  00B6               	movwf	??_RecordMode+1
  4619  04F7  083E               	movf	RecordMode@address+2,w
  4620  04F8  00B7               	movwf	??_RecordMode+2
  4621  04F9  083F               	movf	RecordMode@address+3,w
  4622  04FA  00B8               	movwf	??_RecordMode+3
  4623  04FB  3008               	movlw	8
  4624  04FC  00B9               	movwf	??_RecordMode+4
  4625  04FD                     u1765:	
  4626  04FD  37B8               	asrf	??_RecordMode+3,f
  4627  04FE  0CB7               	rrf	??_RecordMode+2,f
  4628  04FF  0CB6               	rrf	??_RecordMode+1,f
  4629  0500  0CB5               	rrf	??_RecordMode,f
  4630  0501  0BB9               	decfsz	??_RecordMode+4,f
  4631  0502  2CFD               	goto	u1765
  4632  0503  0835               	movf	??_RecordMode,w
  4633  0504  318D  25CD  3183   	fcall	_WriteSPI
  4634                           
  4635                           ;launcher_functions.c: 569: WriteSPI(address>>16);
  4636  0507  0020               	movlb	0	; select bank0
  4637  0508  083C               	movf	RecordMode@address,w
  4638  0509  00B5               	movwf	??_RecordMode
  4639  050A  083D               	movf	RecordMode@address+1,w
  4640  050B  00B6               	movwf	??_RecordMode+1
  4641  050C  083E               	movf	RecordMode@address+2,w
  4642  050D  00B7               	movwf	??_RecordMode+2
  4643  050E  083F               	movf	RecordMode@address+3,w
  4644  050F  00B8               	movwf	??_RecordMode+3
  4645  0510  3010               	movlw	16
  4646  0511  00B9               	movwf	??_RecordMode+4
  4647  0512                     u1775:	
  4648  0512  37B8               	asrf	??_RecordMode+3,f
  4649  0513  0CB7               	rrf	??_RecordMode+2,f
  4650  0514  0CB6               	rrf	??_RecordMode+1,f
  4651  0515  0CB5               	rrf	??_RecordMode,f
  4652  0516  0BB9               	decfsz	??_RecordMode+4,f
  4653  0517  2D12               	goto	u1775
  4654  0518  0835               	movf	??_RecordMode,w
  4655  0519  318D  25CD  3183   	fcall	_WriteSPI
  4656                           
  4657                           ;launcher_functions.c: 570: WriteSPI(address>>24);
  4658  051C  0020               	movlb	0	; select bank0
  4659  051D  083C               	movf	RecordMode@address,w
  4660  051E  00B5               	movwf	??_RecordMode
  4661  051F  083D               	movf	RecordMode@address+1,w
  4662  0520  00B6               	movwf	??_RecordMode+1
  4663  0521  083E               	movf	RecordMode@address+2,w
  4664  0522  00B7               	movwf	??_RecordMode+2
  4665  0523  083F               	movf	RecordMode@address+3,w
  4666  0524  00B8               	movwf	??_RecordMode+3
  4667  0525  3018               	movlw	24
  4668  0526  00B9               	movwf	??_RecordMode+4
  4669  0527                     u1785:	
  4670  0527  37B8               	asrf	??_RecordMode+3,f
  4671  0528  0CB7               	rrf	??_RecordMode+2,f
  4672  0529  0CB6               	rrf	??_RecordMode+1,f
  4673  052A  0CB5               	rrf	??_RecordMode,f
  4674  052B  0BB9               	decfsz	??_RecordMode+4,f
  4675  052C  2D27               	goto	u1785
  4676  052D  0835               	movf	??_RecordMode,w
  4677  052E                     L3:	
  4678  052E  318D  25CD         	fcall	_WriteSPI
  4679                           
  4680                           ;launcher_functions.c: 571: }
  4681                           ;launcher_functions.c: 572: LATC2 = 1;
  4682  0530  0022               	movlb	2	; select bank2
  4683  0531  150E               	bsf	14,2	;volatile
  4684                           
  4685                           ;launcher_functions.c: 573: (start) = 0;
  4686  0532  01FB               	clrf	_start
  4687  0533  01FC               	clrf	_start+1
  4688                           
  4689                           ;launcher_functions.c: 574: (end) = 0;
  4690  0534  01F9               	clrf	_end
  4691  0535  01FA               	clrf	_end+1
  4692  0536  0008               	return
  4693  0537                     __end_of_RecordMode:	
  4694                           
  4695                           	psect	text14
  4696  0FA0                     __ptext14:	
  4697 ;; *************** function _WriteOverheadSPI *****************
  4698 ;; Defined at:
  4699 ;;		line 167 in file "launcher_functions.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  address         4    7[BANK0 ] long 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  4704 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;		None               void
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4714 ;;      Params:         0       4       0       0       0       0       0       0
  4715 ;;      Locals:         0       4       0       0       0       0       0       0
  4716 ;;      Temps:          0       6       0       0       0       0       0       0
  4717 ;;      Totals:         0      14       0       0       0       0       0       0
  4718 ;;Total ram usage:       14 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    4
  4721 ;; This function calls:
  4722 ;;		_ReadStatusSPI
  4723 ;;		_WriteSPI
  4724 ;; This function is called by:
  4725 ;;		_RecordMode
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _WriteOverheadSPI
  4731  0FA0                     _WriteOverheadSPI:	
  4732                           
  4733                           ;launcher_functions.c: 169: unsigned char address_bytes[3];
  4734                           ;launcher_functions.c: 170: unsigned char StatusReg;
  4735                           ;launcher_functions.c: 172: address_bytes[0]=(unsigned char)(address>>8);
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  4739  0FA0  0020               	movlb	0	; select bank0
  4740  0FA1  0827               	movf	WriteOverheadSPI@address,w
  4741  0FA2  00AB               	movwf	??_WriteOverheadSPI
  4742  0FA3  0828               	movf	WriteOverheadSPI@address+1,w
  4743  0FA4  00AC               	movwf	??_WriteOverheadSPI+1
  4744  0FA5  0829               	movf	WriteOverheadSPI@address+2,w
  4745  0FA6  00AD               	movwf	??_WriteOverheadSPI+2
  4746  0FA7  082A               	movf	WriteOverheadSPI@address+3,w
  4747  0FA8  00AE               	movwf	??_WriteOverheadSPI+3
  4748  0FA9  3008               	movlw	8
  4749  0FAA  00AF               	movwf	??_WriteOverheadSPI+4
  4750  0FAB                     u1305:	
  4751  0FAB  37AE               	asrf	??_WriteOverheadSPI+3,f
  4752  0FAC  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4753  0FAD  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4754  0FAE  0CAB               	rrf	??_WriteOverheadSPI,f
  4755  0FAF  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4756  0FB0  2FAB               	goto	u1305
  4757  0FB1  082B               	movf	??_WriteOverheadSPI,w
  4758  0FB2  00B0               	movwf	??_WriteOverheadSPI+5
  4759  0FB3  0830               	movf	??_WriteOverheadSPI+5,w
  4760  0FB4  00B1               	movwf	WriteOverheadSPI@address_bytes
  4761                           
  4762                           ;launcher_functions.c: 173: address_bytes[1]=(unsigned char)(address>>4);
  4763  0FB5  0827               	movf	WriteOverheadSPI@address,w
  4764  0FB6  00AB               	movwf	??_WriteOverheadSPI
  4765  0FB7  0828               	movf	WriteOverheadSPI@address+1,w
  4766  0FB8  00AC               	movwf	??_WriteOverheadSPI+1
  4767  0FB9  0829               	movf	WriteOverheadSPI@address+2,w
  4768  0FBA  00AD               	movwf	??_WriteOverheadSPI+2
  4769  0FBB  082A               	movf	WriteOverheadSPI@address+3,w
  4770  0FBC  00AE               	movwf	??_WriteOverheadSPI+3
  4771  0FBD  3004               	movlw	4
  4772  0FBE  00AF               	movwf	??_WriteOverheadSPI+4
  4773  0FBF                     u1315:	
  4774  0FBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  4775  0FC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4776  0FC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4777  0FC2  0CAB               	rrf	??_WriteOverheadSPI,f
  4778  0FC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4779  0FC4  2FBF               	goto	u1315
  4780  0FC5  082B               	movf	??_WriteOverheadSPI,w
  4781  0FC6  00B0               	movwf	??_WriteOverheadSPI+5
  4782  0FC7  0830               	movf	??_WriteOverheadSPI+5,w
  4783  0FC8  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  4784                           
  4785                           ;launcher_functions.c: 174: address_bytes[2]=(unsigned char)(address);
  4786  0FC9  0827               	movf	WriteOverheadSPI@address,w
  4787  0FCA  00AB               	movwf	??_WriteOverheadSPI
  4788  0FCB  082B               	movf	??_WriteOverheadSPI,w
  4789  0FCC  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  4790  0FCD                     l1804:	
  4791                           ;launcher_functions.c: 176: do
  4792                           
  4793                           
  4794                           ;launcher_functions.c: 177: {
  4795                           ;launcher_functions.c: 178: StatusReg = (ReadStatusSPI() & 0x01);
  4796  0FCD  318D  2598  318F   	fcall	_ReadStatusSPI
  4797  0FD0  3901               	andlw	1
  4798  0FD1  0020               	movlb	0	; select bank0
  4799  0FD2  00AB               	movwf	??_WriteOverheadSPI
  4800  0FD3  082B               	movf	??_WriteOverheadSPI,w
  4801  0FD4  00B4               	movwf	WriteOverheadSPI@StatusReg
  4802                           
  4803                           ;launcher_functions.c: 179: } while (StatusReg);
  4804  0FD5  08B4               	movf	WriteOverheadSPI@StatusReg,f
  4805  0FD6  1D03               	skipz
  4806  0FD7  2FCD               	goto	l1804
  4807                           
  4808                           ;launcher_functions.c: 182: LATC2 = 1;
  4809  0FD8  0022               	movlb	2	; select bank2
  4810  0FD9  150E               	bsf	14,2	;volatile
  4811                           
  4812                           ;launcher_functions.c: 183: WriteSPI((0x06));
  4813  0FDA  3006               	movlw	6
  4814  0FDB  318D  25CD  318F   	fcall	_WriteSPI
  4815                           
  4816                           ;launcher_functions.c: 184: LATC2=0;
  4817  0FDE  0022               	movlb	2	; select bank2
  4818  0FDF  110E               	bcf	14,2	;volatile
  4819  0FE0                     l289:	
  4820                           ;launcher_functions.c: 186: do
  4821                           
  4822                           
  4823                           ;launcher_functions.c: 187: {
  4824                           ;launcher_functions.c: 188: StatusReg = (ReadStatusSPI() & 0x02);
  4825  0FE0  318D  2598  318F   	fcall	_ReadStatusSPI
  4826  0FE3  3902               	andlw	2
  4827  0FE4  0020               	movlb	0	; select bank0
  4828  0FE5  00AB               	movwf	??_WriteOverheadSPI
  4829  0FE6  082B               	movf	??_WriteOverheadSPI,w
  4830  0FE7  00B4               	movwf	WriteOverheadSPI@StatusReg
  4831                           
  4832                           ;launcher_functions.c: 189: } while (!StatusReg);
  4833  0FE8  0834               	movf	WriteOverheadSPI@StatusReg,w
  4834  0FE9  1903               	btfsc	3,2
  4835  0FEA  2FE0               	goto	l289
  4836                           
  4837                           ;launcher_functions.c: 193: LATC2=1;
  4838  0FEB  0022               	movlb	2	; select bank2
  4839  0FEC  150E               	bsf	14,2	;volatile
  4840                           
  4841                           ;launcher_functions.c: 194: WriteSPI((0x02));
  4842  0FED  3002               	movlw	2
  4843  0FEE  318D  25CD  318F   	fcall	_WriteSPI
  4844                           
  4845                           ;launcher_functions.c: 195: WriteSPI(address_bytes[0]);
  4846  0FF1  0020               	movlb	0	; select bank0
  4847  0FF2  0831               	movf	WriteOverheadSPI@address_bytes,w
  4848  0FF3  318D  25CD  318F   	fcall	_WriteSPI
  4849                           
  4850                           ;launcher_functions.c: 196: WriteSPI(address_bytes[1]);
  4851  0FF6  0020               	movlb	0	; select bank0
  4852  0FF7  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  4853  0FF8  318D  25CD  318F   	fcall	_WriteSPI
  4854                           
  4855                           ;launcher_functions.c: 197: WriteSPI(address_bytes[2]);
  4856  0FFB  0020               	movlb	0	; select bank0
  4857  0FFC  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  4858  0FFD  318D  25CD         	fcall	_WriteSPI
  4859  0FFF  0008               	return
  4860  1000                     __end_of_WriteOverheadSPI:	
  4861                           ;launcher_functions.c: 199: return;
  4862                           
  4863                           
  4864                           	psect	text15
  4865  0D98                     __ptext15:	
  4866 ;; *************** function _ReadStatusSPI *****************
  4867 ;; Defined at:
  4868 ;;		line 155 in file "launcher_functions.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  dataRead        1    6[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4882 ;;      Params:         0       0       0       0       0       0       0       0
  4883 ;;      Locals:         0       1       0       0       0       0       0       0
  4884 ;;      Temps:          0       1       0       0       0       0       0       0
  4885 ;;      Totals:         0       2       0       0       0       0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    3
  4889 ;; This function calls:
  4890 ;;		_ReadSPI
  4891 ;;		_WriteSPI
  4892 ;; This function is called by:
  4893 ;;		_WriteOverheadSPI
  4894 ;;		_ReadOverheadSPI
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _ReadStatusSPI
  4900  0D98                     _ReadStatusSPI:	
  4901                           
  4902                           ;launcher_functions.c: 157: unsigned char dataRead;
  4903                           ;launcher_functions.c: 159: LATC2=1;
  4904                           
  4905                           ;incstack = 0
  4906                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  4907  0D98  0022               	movlb	2	; select bank2
  4908  0D99  150E               	bsf	14,2	;volatile
  4909                           
  4910                           ;launcher_functions.c: 160: WriteSPI((0x05));
  4911  0D9A  3005               	movlw	5
  4912  0D9B  318D  25CD  318D   	fcall	_WriteSPI
  4913                           
  4914                           ;launcher_functions.c: 161: dataRead = ReadSPI();
  4915  0D9E  318D  256E         	fcall	_ReadSPI
  4916  0DA0  0020               	movlb	0	; select bank0
  4917  0DA1  00A5               	movwf	??_ReadStatusSPI
  4918  0DA2  0825               	movf	??_ReadStatusSPI,w
  4919  0DA3  00A6               	movwf	ReadStatusSPI@dataRead
  4920                           
  4921                           ;launcher_functions.c: 162: LATC2=0;
  4922  0DA4  0022               	movlb	2	; select bank2
  4923  0DA5  110E               	bcf	14,2	;volatile
  4924                           
  4925                           ;launcher_functions.c: 164: return(dataRead);
  4926  0DA6  0020               	movlb	0	; select bank0
  4927  0DA7  0826               	movf	ReadStatusSPI@dataRead,w
  4928  0DA8  0008               	return
  4929  0DA9                     __end_of_ReadStatusSPI:	
  4930                           
  4931                           	psect	text16
  4932  0DCD                     __ptext16:	
  4933 ;; *************** function _WriteSPI *****************
  4934 ;; Defined at:
  4935 ;;		line 135 in file "launcher_functions.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  databyte        1    wreg     unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  databyte        1    4[BANK0 ] unsigned char 
  4940 ;;  temp            2    2[BANK0 ] unsigned int 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;		None               void
  4943 ;; Registers used:
  4944 ;;		wreg
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4950 ;;      Params:         0       0       0       0       0       0       0       0
  4951 ;;      Locals:         0       3       0       0       0       0       0       0
  4952 ;;      Temps:          0       2       0       0       0       0       0       0
  4953 ;;      Totals:         0       5       0       0       0       0       0       0
  4954 ;;Total ram usage:        5 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    2
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_ReadStatusSPI
  4961 ;;		_WriteOverheadSPI
  4962 ;;		_RecordMode
  4963 ;;		_ReadOverheadSPI
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function _WriteSPI
  4969  0DCD                     _WriteSPI:	
  4970                           
  4971                           ;incstack = 0
  4972                           ; Regs used in _WriteSPI: [wreg]
  4973                           ;WriteSPI@databyte stored from wreg
  4974  0DCD  0020               	movlb	0	; select bank0
  4975  0DCE  00A4               	movwf	WriteSPI@databyte
  4976                           
  4977                           ;launcher_functions.c: 137: unsigned int temp;
  4978                           ;launcher_functions.c: 138: temp = SSPBUF;
  4979  0DCF  0024               	movlb	4	; select bank4
  4980  0DD0  0811               	movf	17,w	;volatile
  4981  0DD1  0020               	movlb	0	; select bank0
  4982  0DD2  00A0               	movwf	??_WriteSPI
  4983  0DD3  01A1               	clrf	??_WriteSPI+1
  4984  0DD4  0820               	movf	??_WriteSPI,w
  4985  0DD5  00A2               	movwf	WriteSPI@temp
  4986  0DD6  0821               	movf	??_WriteSPI+1,w
  4987  0DD7  00A3               	movwf	WriteSPI@temp+1
  4988                           
  4989                           ;launcher_functions.c: 139: PIR1bits.SSP1IF=0;
  4990  0DD8  1191               	bcf	17,3	;volatile
  4991                           
  4992                           ;launcher_functions.c: 140: SSPBUF = databyte;
  4993  0DD9  0824               	movf	WriteSPI@databyte,w
  4994  0DDA  0024               	movlb	4	; select bank4
  4995  0DDB  0091               	movwf	17	;volatile
  4996  0DDC                     l272:	
  4997                           ;launcher_functions.c: 141: while(!PIR1bits.SSP1IF);
  4998                           
  4999  0DDC  0020               	movlb	0	; select bank0
  5000  0DDD  1991               	btfsc	17,3	;volatile
  5001  0DDE  0008               	return
  5002  0DDF  2DDC               	goto	l272
  5003  0DE0                     __end_of_WriteSPI:	
  5004                           
  5005                           	psect	text17
  5006  0D6E                     __ptext17:	
  5007 ;; *************** function _ReadSPI *****************
  5008 ;; Defined at:
  5009 ;;		line 144 in file "launcher_functions.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5023 ;;      Params:         0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       1       0       0       0       0       0       0
  5025 ;;      Temps:          0       1       0       0       0       0       0       0
  5026 ;;      Totals:         0       2       0       0       0       0       0       0
  5027 ;;Total ram usage:        2 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    2
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_ReadStatusSPI
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _ReadSPI
  5039  0D6E                     _ReadSPI:	
  5040                           
  5041                           ;launcher_functions.c: 146: unsigned char dataByte;
  5042                           ;launcher_functions.c: 148: SSPBUF = 0x00;
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _ReadSPI: [wreg+status,2]
  5046  0D6E  0024               	movlb	4	; select bank4
  5047  0D6F  0191               	clrf	17	;volatile
  5048  0D70                     l278:	
  5049                           ;launcher_functions.c: 149: while(!SSPSTATbits.BF);
  5050                           
  5051  0D70  1C14               	btfss	20,0	;volatile
  5052  0D71  2D70               	goto	l278
  5053                           
  5054                           ;launcher_functions.c: 150: dataByte = SSPBUF;
  5055  0D72  0811               	movf	17,w	;volatile
  5056  0D73  0020               	movlb	0	; select bank0
  5057  0D74  00A0               	movwf	??_ReadSPI
  5058  0D75  0820               	movf	??_ReadSPI,w
  5059  0D76  00A1               	movwf	ReadSPI@dataByte
  5060                           
  5061                           ;launcher_functions.c: 151: PIR1bits.SSP1IF=0;
  5062  0D77  1191               	bcf	17,3	;volatile
  5063                           
  5064                           ;launcher_functions.c: 152: return (dataByte);
  5065  0D78  0821               	movf	ReadSPI@dataByte,w
  5066  0D79  0008               	return
  5067  0D7A                     __end_of_ReadSPI:	
  5068                           
  5069                           	psect	text18
  5070  0E0D                     __ptext18:	
  5071 ;; *************** function _ReadBuffer *****************
  5072 ;; Defined at:
  5073 ;;		line 214 in file "launcher_functions.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  read_data       1    1[BANK0 ] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      unsigned char 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5087 ;;      Params:         0       0       0       0       0       0       0       0
  5088 ;;      Locals:         0       1       0       0       0       0       0       0
  5089 ;;      Temps:          0       1       0       0       0       0       0       0
  5090 ;;      Totals:         0       2       0       0       0       0       0       0
  5091 ;;Total ram usage:        2 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    2
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_RecordMode
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _ReadBuffer
  5103  0E0D                     _ReadBuffer:	
  5104                           
  5105                           ;launcher_functions.c: 216: unsigned char read_data;
  5106                           ;launcher_functions.c: 218: read_data = buffer[start];
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5110  0E0D  087B               	movf	_start,w
  5111  0E0E  3EA0               	addlw	_buffer& (0+255)
  5112  0E0F  0086               	movwf	6
  5113  0E10  3001               	movlw	1	; select bank3/4
  5114  0E11  0087               	movwf	7
  5115  0E12  0801               	movf	1,w
  5116  0E13  0020               	movlb	0	; select bank0
  5117  0E14  00A0               	movwf	??_ReadBuffer
  5118  0E15  0820               	movf	??_ReadBuffer,w
  5119  0E16  00A1               	movwf	ReadBuffer@read_data
  5120                           
  5121                           ;launcher_functions.c: 219: if (start == 51)
  5122  0E17  3033               	movlw	51
  5123  0E18  067B               	xorwf	_start,w
  5124  0E19  047C               	iorwf	_start+1,w
  5125  0E1A  1D03               	skipz
  5126  0E1B  2E1F               	goto	l1824
  5127                           
  5128                           ;launcher_functions.c: 220: start = 0;
  5129  0E1C  01FB               	clrf	_start
  5130  0E1D  01FC               	clrf	_start+1
  5131  0E1E  2E23               	goto	l300
  5132  0E1F                     l1824:	
  5133                           
  5134                           ;launcher_functions.c: 221: else
  5135                           ;launcher_functions.c: 222: start++;
  5136  0E1F  3001               	movlw	1
  5137  0E20  07FB               	addwf	_start,f
  5138  0E21  3000               	movlw	0
  5139  0E22  3DFC               	addwfc	_start+1,f
  5140  0E23                     l300:	
  5141                           
  5142                           ;launcher_functions.c: 223: return read_data;
  5143  0E23  0821               	movf	ReadBuffer@read_data,w
  5144  0E24  0008               	return
  5145  0E25                     __end_of_ReadBuffer:	
  5146                           
  5147                           	psect	text19
  5148  0D55                     __ptext19:	
  5149 ;; *************** function _InitWatchdog *****************
  5150 ;; Defined at:
  5151 ;;		line 126 in file "launcher_functions.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;		None               void
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5165 ;;      Params:         0       0       0       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    2
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function _InitWatchdog
  5181  0D55                     _InitWatchdog:	
  5182                           
  5183                           ;launcher_functions.c: 129: WDTCONbits.WDTPS = 0x0A;
  5184                           
  5185                           ;incstack = 0
  5186                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5187  0D55  0021               	movlb	1	; select bank1
  5188  0D56  0817               	movf	23,w	;volatile
  5189  0D57  39C1               	andlw	-63
  5190  0D58  3814               	iorlw	20
  5191  0D59  0097               	movwf	23	;volatile
  5192                           
  5193                           ;launcher_functions.c: 130: WDTCONbits.SWDTEN = 0;
  5194  0D5A  1017               	bcf	23,0	;volatile
  5195  0D5B  0008               	return
  5196  0D5C                     __end_of_InitWatchdog:	
  5197                           
  5198                           	psect	text20
  5199  0D7A                     __ptext20:	
  5200 ;; *************** function _InitTimer1 *****************
  5201 ;; Defined at:
  5202 ;;		line 95 in file "launcher_functions.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;		None
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;		None               void
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5216 ;;      Params:         0       0       0       0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0
  5219 ;;      Totals:         0       0       0       0       0       0       0       0
  5220 ;;Total ram usage:        0 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    2
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_main
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _InitTimer1
  5232  0D7A                     _InitTimer1:	
  5233                           
  5234                           ;launcher_functions.c: 97: T1CONbits.TMR1CS = 0;
  5235                           
  5236                           ;incstack = 0
  5237                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  5238  0D7A  303F               	movlw	-193
  5239  0D7B  0020               	movlb	0	; select bank0
  5240  0D7C  0598               	andwf	24,f	;volatile
  5241                           
  5242                           ;launcher_functions.c: 98: T1CONbits.T1CKPS = 2;
  5243  0D7D  0818               	movf	24,w	;volatile
  5244  0D7E  39CF               	andlw	-49
  5245  0D7F  3820               	iorlw	32
  5246  0D80  0098               	movwf	24	;volatile
  5247                           
  5248                           ;launcher_functions.c: 99: T1CONbits.nT1SYNC = 1;
  5249  0D81  1518               	bsf	24,2	;volatile
  5250                           
  5251                           ;launcher_functions.c: 100: T1GCONbits.TMR1GE = 0;
  5252  0D82  1399               	bcf	25,7	;volatile
  5253                           
  5254                           ;launcher_functions.c: 101: TMR1H = 0xFF;
  5255  0D83  30FF               	movlw	255
  5256  0D84  0097               	movwf	23	;volatile
  5257                           
  5258                           ;launcher_functions.c: 102: TMR1L = 0xCD;
  5259  0D85  30CD               	movlw	205
  5260  0D86  0096               	movwf	22	;volatile
  5261                           
  5262                           ;launcher_functions.c: 103: T1CONbits.TMR1ON = 1;
  5263  0D87  1418               	bsf	24,0	;volatile
  5264  0D88  0008               	return
  5265  0D89                     __end_of_InitTimer1:	
  5266                           
  5267                           	psect	text21
  5268  0DBB                     __ptext21:	
  5269 ;; *************** function _InitSPI *****************
  5270 ;; Defined at:
  5271 ;;		line 107 in file "launcher_functions.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;		None               void
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5285 ;;      Params:         0       0       0       0       0       0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0
  5288 ;;      Totals:         0       0       0       0       0       0       0       0
  5289 ;;Total ram usage:        0 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    2
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_main
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           
  5300                           ;psect for function _InitSPI
  5301  0DBB                     _InitSPI:	
  5302                           
  5303                           ;launcher_functions.c: 110: TRISCbits.TRISC2 = 0;
  5304                           
  5305                           ;incstack = 0
  5306                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5307  0DBB  0021               	movlb	1	; select bank1
  5308  0DBC  110E               	bcf	14,2	;volatile
  5309                           
  5310                           ;launcher_functions.c: 111: TRISCbits.TRISC3 = 0;
  5311  0DBD  118E               	bcf	14,3	;volatile
  5312                           
  5313                           ;launcher_functions.c: 112: TRISCbits.TRISC4 = 1;
  5314  0DBE  160E               	bsf	14,4	;volatile
  5315                           
  5316                           ;launcher_functions.c: 113: TRISCbits.TRISC5 = 0;
  5317  0DBF  128E               	bcf	14,5	;volatile
  5318                           
  5319                           ;launcher_functions.c: 115: LATC2 = 0;
  5320  0DC0  0022               	movlb	2	; select bank2
  5321  0DC1  110E               	bcf	14,2	;volatile
  5322                           
  5323                           ;launcher_functions.c: 118: SSPCON1bits.SSPEN=0x00;
  5324  0DC2  0024               	movlb	4	; select bank4
  5325  0DC3  1295               	bcf	21,5	;volatile
  5326                           
  5327                           ;launcher_functions.c: 119: SSPCON1bits.SSPM=0x01;
  5328  0DC4  0815               	movf	21,w	;volatile
  5329  0DC5  39F0               	andlw	-16
  5330  0DC6  3801               	iorlw	1
  5331  0DC7  0095               	movwf	21	;volatile
  5332                           
  5333                           ;launcher_functions.c: 120: SSPCON1bits.CKP=0;
  5334  0DC8  1215               	bcf	21,4	;volatile
  5335                           
  5336                           ;launcher_functions.c: 121: SSPSTATbits.CKE=1;
  5337  0DC9  1714               	bsf	20,6	;volatile
  5338                           
  5339                           ;launcher_functions.c: 122: SSPSTATbits.SMP=0;
  5340  0DCA  1394               	bcf	20,7	;volatile
  5341                           
  5342                           ;launcher_functions.c: 123: SSPCON1bits.SSPEN=0x01;
  5343  0DCB  1695               	bsf	21,5	;volatile
  5344  0DCC  0008               	return
  5345  0DCD                     __end_of_InitSPI:	
  5346                           
  5347                           	psect	text22
  5348  0E9B                     __ptext22:	
  5349 ;; *************** function _InitGPIO *****************
  5350 ;; Defined at:
  5351 ;;		line 13 in file "launcher_functions.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;		None               void
  5358 ;; Registers used:
  5359 ;;		status,2
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5365 ;;      Params:         0       0       0       0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0
  5368 ;;      Totals:         0       0       0       0       0       0       0       0
  5369 ;;Total ram usage:        0 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_main
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function _InitGPIO
  5381  0E9B                     _InitGPIO:	
  5382                           
  5383                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _InitGPIO: [status,2]
  5387  0E9B  0021               	movlb	1	; select bank1
  5388  0E9C  148C               	bsf	12,1	;volatile
  5389                           
  5390                           ;launcher_functions.c: 19: IOCAPbits.IOCAP1 = 1;
  5391  0E9D  0027               	movlb	7	; select bank7
  5392  0E9E  1491               	bsf	17,1	;volatile
  5393                           
  5394                           ;launcher_functions.c: 20: IOCANbits.IOCAN1 = 1;
  5395  0E9F  1492               	bsf	18,1	;volatile
  5396                           
  5397                           ;launcher_functions.c: 21: IOCAF = 0x00;
  5398  0EA0  0193               	clrf	19	;volatile
  5399                           
  5400                           ;launcher_functions.c: 22: INTCONbits.IOCIE = 1;
  5401  0EA1  158B               	bsf	11,3	;volatile
  5402                           
  5403                           ;launcher_functions.c: 25: TRISBbits.TRISB3 = 1;
  5404  0EA2  0021               	movlb	1	; select bank1
  5405  0EA3  158D               	bsf	13,3	;volatile
  5406                           
  5407                           ;launcher_functions.c: 26: ANSELBbits.ANSB3 = 0;
  5408  0EA4  0023               	movlb	3	; select bank3
  5409  0EA5  118D               	bcf	13,3	;volatile
  5410                           
  5411                           ;launcher_functions.c: 27: IOCBNbits.IOCBN3 = 1;
  5412  0EA6  0027               	movlb	7	; select bank7
  5413  0EA7  1595               	bsf	21,3	;volatile
  5414                           
  5415                           ;launcher_functions.c: 28: IOCBPbits.IOCBP3 = 1;
  5416  0EA8  1594               	bsf	20,3	;volatile
  5417                           
  5418                           ;launcher_functions.c: 29: IOCBF = 0x00;
  5419  0EA9  0196               	clrf	22	;volatile
  5420                           
  5421                           ;launcher_functions.c: 30: INTCONbits.IOCIE = 1;
  5422  0EAA  158B               	bsf	11,3	;volatile
  5423                           
  5424                           ;launcher_functions.c: 33: TRISAbits.TRISA0 = 1;
  5425  0EAB  0021               	movlb	1	; select bank1
  5426  0EAC  140C               	bsf	12,0	;volatile
  5427                           
  5428                           ;launcher_functions.c: 35: TRISAbits.TRISA2 = 1;
  5429  0EAD  150C               	bsf	12,2	;volatile
  5430                           
  5431                           ;launcher_functions.c: 36: TRISAbits.TRISA3 = 1;
  5432  0EAE  158C               	bsf	12,3	;volatile
  5433                           
  5434                           ;launcher_functions.c: 37: TRISAbits.TRISA4 = 0;
  5435  0EAF  120C               	bcf	12,4	;volatile
  5436                           
  5437                           ;launcher_functions.c: 38: TRISAbits.TRISA5 = 0;
  5438  0EB0  128C               	bcf	12,5	;volatile
  5439                           
  5440                           ;launcher_functions.c: 39: TRISAbits.TRISA6 = 0;
  5441  0EB1  130C               	bcf	12,6	;volatile
  5442                           
  5443                           ;launcher_functions.c: 40: TRISAbits.TRISA7 = 0;
  5444  0EB2  138C               	bcf	12,7	;volatile
  5445                           
  5446                           ;launcher_functions.c: 43: TRISBbits.TRISB0 = 0;
  5447  0EB3  100D               	bcf	13,0	;volatile
  5448                           
  5449                           ;launcher_functions.c: 44: TRISBbits.TRISB1 = 1;
  5450  0EB4  148D               	bsf	13,1	;volatile
  5451                           
  5452                           ;launcher_functions.c: 45: TRISBbits.TRISB2 = 0;
  5453  0EB5  110D               	bcf	13,2	;volatile
  5454                           
  5455                           ;launcher_functions.c: 47: TRISBbits.TRISB4 = 0;
  5456  0EB6  120D               	bcf	13,4	;volatile
  5457                           
  5458                           ;launcher_functions.c: 48: TRISBbits.TRISB5 = 0;
  5459  0EB7  128D               	bcf	13,5	;volatile
  5460                           
  5461                           ;launcher_functions.c: 50: PORTBbits.RB0 = 0;
  5462  0EB8  0020               	movlb	0	; select bank0
  5463  0EB9  100D               	bcf	13,0	;volatile
  5464                           
  5465                           ;launcher_functions.c: 51: PORTBbits.RB4 = 0;
  5466  0EBA  120D               	bcf	13,4	;volatile
  5467                           
  5468                           ;launcher_functions.c: 52: PORTBbits.RB5 = 0;
  5469  0EBB  128D               	bcf	13,5	;volatile
  5470                           
  5471                           ;launcher_functions.c: 54: ANSELBbits.ANSB0 = 0;
  5472  0EBC  0023               	movlb	3	; select bank3
  5473  0EBD  100D               	bcf	13,0	;volatile
  5474                           
  5475                           ;launcher_functions.c: 55: ANSELBbits.ANSB1 = 0;
  5476  0EBE  108D               	bcf	13,1	;volatile
  5477                           
  5478                           ;launcher_functions.c: 56: ANSELBbits.ANSB2 = 0;
  5479  0EBF  110D               	bcf	13,2	;volatile
  5480                           
  5481                           ;launcher_functions.c: 58: ANSELBbits.ANSB4 = 0;
  5482  0EC0  120D               	bcf	13,4	;volatile
  5483                           
  5484                           ;launcher_functions.c: 59: ANSELBbits.ANSB5 = 0;
  5485  0EC1  128D               	bcf	13,5	;volatile
  5486                           
  5487                           ;launcher_functions.c: 62: TRISCbits.TRISC0 = 0;
  5488  0EC2  0021               	movlb	1	; select bank1
  5489  0EC3  100E               	bcf	14,0	;volatile
  5490                           
  5491                           ;launcher_functions.c: 63: TRISCbits.TRISC1 = 0;
  5492  0EC4  108E               	bcf	14,1	;volatile
  5493  0EC5  0008               	return
  5494  0EC6                     __end_of_InitGPIO:	
  5495                           
  5496                           	psect	text23
  5497  0D5C                     __ptext23:	
  5498 ;; *************** function _InitCLK *****************
  5499 ;; Defined at:
  5500 ;;		line 8 in file "launcher_functions.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;		None               void
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5514 ;;      Params:         0       0       0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0
  5517 ;;      Totals:         0       0       0       0       0       0       0       0
  5518 ;;Total ram usage:        0 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    2
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_main
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _InitCLK
  5530  0D5C                     _InitCLK:	
  5531                           
  5532                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  5536  0D5C  3078               	movlw	120
  5537  0D5D  0021               	movlb	1	; select bank1
  5538  0D5E  0499               	iorwf	25,f	;volatile
  5539                           
  5540                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  5541  0D5F  0819               	movf	25,w	;volatile
  5542  0D60  39FC               	andlw	-4
  5543  0D61  3802               	iorlw	2
  5544  0D62  0099               	movwf	25	;volatile
  5545  0D63  0008               	return
  5546  0D64                     __end_of_InitCLK:	
  5547                           
  5548                           	psect	text24
  5549  0E25                     __ptext24:	
  5550 ;; *************** function _InitADC *****************
  5551 ;; Defined at:
  5552 ;;		line 72 in file "launcher_functions.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;		None               void
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5566 ;;      Params:         0       0       0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    2
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _InitADC
  5582  0E25                     _InitADC:	
  5583                           
  5584                           ;launcher_functions.c: 75: TRISAbits.TRISA0 = 1;
  5585                           
  5586                           ;incstack = 0
  5587                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  5588  0E25  0021               	movlb	1	; select bank1
  5589  0E26  140C               	bsf	12,0	;volatile
  5590                           
  5591                           ;launcher_functions.c: 76: ANSELAbits.ANSA0 = 1;
  5592  0E27  0023               	movlb	3	; select bank3
  5593  0E28  140C               	bsf	12,0	;volatile
  5594                           
  5595                           ;launcher_functions.c: 79: ADCON1bits.ADCS = 0x05;
  5596  0E29  0021               	movlb	1	; select bank1
  5597  0E2A  081E               	movf	30,w	;volatile
  5598  0E2B  398F               	andlw	-113
  5599  0E2C  3850               	iorlw	80
  5600  0E2D  009E               	movwf	30	;volatile
  5601                           
  5602                           ;launcher_functions.c: 80: ADCON1bits.ADPREF = 0x00;
  5603  0E2E  30FC               	movlw	-4
  5604  0E2F  059E               	andwf	30,f	;volatile
  5605                           
  5606                           ;launcher_functions.c: 81: ADCON1bits.ADNREF = 0x00;
  5607  0E30  111E               	bcf	30,2	;volatile
  5608                           
  5609                           ;launcher_functions.c: 82: ADCON0bits.CHS = 0x00;
  5610  0E31  3083               	movlw	-125
  5611  0E32  059D               	andwf	29,f	;volatile
  5612                           
  5613                           ;launcher_functions.c: 83: ADCON2bits.CHSN = 0xF;
  5614  0E33  300F               	movlw	15
  5615  0E34  049F               	iorwf	31,f	;volatile
  5616                           
  5617                           ;launcher_functions.c: 84: ADCON1bits.ADFM = 0;
  5618  0E35  139E               	bcf	30,7	;volatile
  5619                           
  5620                           ;launcher_functions.c: 85: ADCON0bits.ADRMD = 1;
  5621  0E36  179D               	bsf	29,7	;volatile
  5622                           
  5623                           ;launcher_functions.c: 86: ADCON0bits.ADON = 1;
  5624  0E37  141D               	bsf	29,0	;volatile
  5625                           
  5626                           ;launcher_functions.c: 89: ADIF = 0;
  5627  0E38  0020               	movlb	0	; select bank0
  5628  0E39  1311               	bcf	17,6	;volatile
  5629                           
  5630                           ;launcher_functions.c: 90: ADIE = 1;
  5631  0E3A  0021               	movlb	1	; select bank1
  5632  0E3B  1711               	bsf	17,6	;volatile
  5633                           
  5634                           ;launcher_functions.c: 91: PEIE = 1;
  5635  0E3C  170B               	bsf	11,6	;volatile
  5636  0E3D  0008               	return
  5637  0E3E                     __end_of_InitADC:	
  5638                           
  5639                           	psect	text25
  5640  0E3E                     __ptext25:	
  5641 ;; *************** function _GoToSleepTenMin *****************
  5642 ;; Defined at:
  5643 ;;		line 498 in file "launcher_functions.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  count           1    1[BANK0 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;		None               void
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5657 ;;      Params:         0       0       0       0       0       0       0       0
  5658 ;;      Locals:         0       1       0       0       0       0       0       0
  5659 ;;      Temps:          0       1       0       0       0       0       0       0
  5660 ;;      Totals:         0       2       0       0       0       0       0       0
  5661 ;;Total ram usage:        2 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    2
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_main
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function _GoToSleepTenMin
  5673  0E3E                     _GoToSleepTenMin:	
  5674                           
  5675                           ;launcher_functions.c: 500: unsigned char count = 0;
  5676                           
  5677                           ;incstack = 0
  5678                           ; Regs used in _GoToSleepTenMin: [wreg+status,2+status,0]
  5679  0E3E  0020               	movlb	0	; select bank0
  5680  0E3F  01A1               	clrf	GoToSleepTenMin@count
  5681                           
  5682                           ;launcher_functions.c: 501: WDTCONbits.WDTPS = 18;
  5683  0E40  0021               	movlb	1	; select bank1
  5684  0E41  0817               	movf	23,w	;volatile
  5685  0E42  39C1               	andlw	-63
  5686  0E43  3824               	iorlw	36
  5687  0E44  0097               	movwf	23	;volatile
  5688                           
  5689                           ;launcher_functions.c: 502: WDTCONbits.SWDTEN = 1;
  5690  0E45  1417               	bsf	23,0	;volatile
  5691                           
  5692                           ;launcher_functions.c: 503: while(!recordFlag && count++ < 3)
  5693  0E46  2E51               	goto	l2328
  5694  0E47                     l2330:	
  5695  0E47  3001               	movlw	1
  5696  0E48  0020               	movlb	0	; select bank0
  5697  0E49  00A0               	movwf	??_GoToSleepTenMin
  5698  0E4A  0820               	movf	??_GoToSleepTenMin,w
  5699  0E4B  07A1               	addwf	GoToSleepTenMin@count,f
  5700  0E4C  3004               	movlw	4
  5701  0E4D  0221               	subwf	GoToSleepTenMin@count,w
  5702  0E4E  1803               	btfsc	3,0
  5703  0E4F  2E55               	goto	l395
  5704  0E50  0063               	sleep	;# 
  5705  0E51                     l2328:	
  5706  0E51  0021               	movlb	1	; select bank1
  5707  0E52  08DD               	movf	_recordFlag^(0+128),f
  5708  0E53  1903               	btfsc	3,2
  5709  0E54  2E47               	goto	l2330
  5710  0E55                     l395:	
  5711                           
  5712                           ;launcher_functions.c: 506: }
  5713                           ;launcher_functions.c: 507: WDTCONbits.SWDTEN = 0;
  5714  0E55  0021               	movlb	1	; select bank1
  5715  0E56  1017               	bcf	23,0	;volatile
  5716  0E57  0008               	return
  5717  0E58                     __end_of_GoToSleepTenMin:	
  5718                           
  5719                           	psect	text26
  5720  0DA9                     __ptext26:	
  5721 ;; *************** function _GoToSleep *****************
  5722 ;; Defined at:
  5723 ;;		line 490 in file "launcher_functions.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  count           1    wreg     unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  count           1    1[BANK0 ] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;		None               void
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5737 ;;      Params:         0       0       0       0       0       0       0       0
  5738 ;;      Locals:         0       1       0       0       0       0       0       0
  5739 ;;      Temps:          0       1       0       0       0       0       0       0
  5740 ;;      Totals:         0       2       0       0       0       0       0       0
  5741 ;;Total ram usage:        2 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    2
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_main
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _GoToSleep
  5753  0DA9                     _GoToSleep:	
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  5757                           ;GoToSleep@count stored from wreg
  5758  0DA9  0020               	movlb	0	; select bank0
  5759  0DAA  00A1               	movwf	GoToSleep@count
  5760                           
  5761                           ;launcher_functions.c: 492: WDTCONbits.WDTPS = count;
  5762  0DAB  0821               	movf	GoToSleep@count,w
  5763  0DAC  00A0               	movwf	??_GoToSleep
  5764  0DAD  0DA0               	rlf	??_GoToSleep,f
  5765  0DAE  0021               	movlb	1	; select bank1
  5766  0DAF  0817               	movf	23,w	;volatile
  5767  0DB0  0020               	movlb	0	; select bank0
  5768  0DB1  0620               	xorwf	??_GoToSleep,w
  5769  0DB2  39C1               	andlw	-63
  5770  0DB3  0620               	xorwf	??_GoToSleep,w
  5771  0DB4  0021               	movlb	1	; select bank1
  5772  0DB5  0097               	movwf	23	;volatile
  5773                           
  5774                           ;launcher_functions.c: 493: WDTCONbits.SWDTEN = 1;
  5775  0DB6  1417               	bsf	23,0	;volatile
  5776  0DB7  0063               	sleep	;# 
  5777                           
  5778                           ;launcher_functions.c: 495: WDTCONbits.SWDTEN = 0;
  5779  0DB8  0021               	movlb	1	; select bank1
  5780  0DB9  1017               	bcf	23,0	;volatile
  5781  0DBA  0008               	return
  5782  0DBB                     __end_of_GoToSleep:	
  5783                           
  5784                           	psect	intentry
  5785  0004                     __pintentry:	
  5786 ;; *************** function _isr *****************
  5787 ;; Defined at:
  5788 ;;		line 85 in file "launcher_main.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5802 ;;      Params:         0       0       0       0       0       0       0       0
  5803 ;;      Locals:         2       0       0       0       0       0       0       0
  5804 ;;      Temps:          5       0       0       0       0       0       0       0
  5805 ;;      Totals:         7       0       0       0       0       0       0       0
  5806 ;;Total ram usage:        7 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    1
  5809 ;; This function calls:
  5810 ;;		_WriteBuffer
  5811 ;; This function is called by:
  5812 ;;		Interrupt level 1
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816  0004                     _isr:	
  5817                           
  5818                           ;incstack = 0
  5819                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5820  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5821  0005  3180               	pagesel	$
  5822  0006  0020               	movlb	0	; select bank0
  5823  0007  087F               	movf	127,w
  5824  0008  00F6               	movwf	??_isr+4
  5825                           
  5826                           ;launcher_main.c: 88: if (PIR1bits.RCIF)
  5827  0009  1E91               	btfss	17,5	;volatile
  5828  000A  282E               	goto	i1l2412
  5829                           
  5830                           ;launcher_main.c: 89: {
  5831                           ;launcher_main.c: 91: if(OERR)
  5832  000B  0023               	movlb	3	; select bank3
  5833  000C  1C9D               	btfss	29,1	;volatile
  5834  000D  2810               	goto	i1l2400
  5835                           
  5836                           ;launcher_main.c: 92: {
  5837                           ;launcher_main.c: 93: RCSTAbits.CREN = 0;
  5838  000E  121D               	bcf	29,4	;volatile
  5839                           
  5840                           ;launcher_main.c: 94: RCSTAbits.CREN = 1;
  5841  000F  161D               	bsf	29,4	;volatile
  5842  0010                     i1l2400:	
  5843                           
  5844                           ;launcher_main.c: 95: }
  5845                           ;launcher_main.c: 96: gpsMessage[gpsIndex++] = RCREG;
  5846  0010  0819               	movf	25,w	;volatile
  5847  0011  00F2               	movwf	??_isr
  5848  0012  0021               	movlb	1	; select bank1
  5849  0013  0863               	movf	_gpsIndex^(0+128),w
  5850  0014  3E20               	addlw	_gpsMessage& (0+255)
  5851  0015  0086               	movwf	6
  5852  0016  3001               	movlw	1	; select bank2/3
  5853  0017  0087               	movwf	7
  5854  0018  0872               	movf	??_isr,w
  5855  0019  0081               	movwf	1
  5856  001A  3001               	movlw	1
  5857  001B  00F2               	movwf	??_isr
  5858  001C  0872               	movf	??_isr,w
  5859  001D  07E3               	addwf	_gpsIndex^(0+128),f	;volatile
  5860                           
  5861                           ;launcher_main.c: 97: if(gpsMessage[gpsIndex-1] == 0x0A)
  5862  001E  0863               	movf	_gpsIndex^(0+128),w
  5863  001F  3EFF               	addlw	255
  5864  0020  3E20               	addlw	_gpsMessage& (0+255)
  5865  0021  0086               	movwf	6
  5866  0022  3001               	movlw	1	; select bank2/3
  5867  0023  0087               	movwf	7
  5868  0024  0801               	movf	1,w
  5869  0025  3A0A               	xorlw	10
  5870  0026  1D03               	skipz
  5871  0027  282B               	goto	i1l2408
  5872                           
  5873                           ;launcher_main.c: 98: {
  5874                           ;launcher_main.c: 99: messageDoneFlag = 1;
  5875  0028  01FD               	clrf	_messageDoneFlag
  5876  0029  0AFD               	incf	_messageDoneFlag,f
  5877                           
  5878                           ;launcher_main.c: 100: }
  5879  002A  282C               	goto	i1l2410
  5880  002B                     i1l2408:	
  5881                           
  5882                           ;launcher_main.c: 101: else
  5883                           ;launcher_main.c: 102: {
  5884                           ;launcher_main.c: 103: messageDoneFlag = 0;
  5885  002B  01FD               	clrf	_messageDoneFlag
  5886  002C                     i1l2410:	
  5887                           
  5888                           ;launcher_main.c: 104: }
  5889                           ;launcher_main.c: 105: PIR1bits.RCIF = 0;
  5890  002C  0020               	movlb	0	; select bank0
  5891  002D  1291               	bcf	17,5	;volatile
  5892  002E                     i1l2412:	
  5893                           
  5894                           ;launcher_main.c: 106: }
  5895                           ;launcher_main.c: 109: if (TMR1IF && TMR1IE)
  5896  002E  1C11               	btfss	17,0	;volatile
  5897  002F  283D               	goto	i1l2422
  5898  0030  0021               	movlb	1	; select bank1
  5899  0031  1C11               	btfss	17,0	;volatile
  5900  0032  283D               	goto	i1l2422
  5901                           
  5902                           ;launcher_main.c: 110: {
  5903                           ;launcher_main.c: 111: TMR1H = 0xFF;
  5904  0033  30FF               	movlw	255
  5905  0034  0020               	movlb	0	; select bank0
  5906  0035  0097               	movwf	23	;volatile
  5907                           
  5908                           ;launcher_main.c: 112: TMR1L = 0xCD;
  5909  0036  30CD               	movlw	205
  5910  0037  0096               	movwf	22	;volatile
  5911                           
  5912                           ;launcher_main.c: 113: TMR1IF = 0;
  5913  0038  1011               	bcf	17,0	;volatile
  5914                           
  5915                           ;launcher_main.c: 115: if(recordFlag)
  5916  0039  0021               	movlb	1	; select bank1
  5917  003A  085D               	movf	_recordFlag^(0+128),w
  5918  003B  1D03               	skipz
  5919                           
  5920                           ;launcher_main.c: 116: {
  5921                           ;launcher_main.c: 117: ADCON0bits.ADGO = 1;
  5922  003C  149D               	bsf	29,1	;volatile
  5923  003D                     i1l2422:	
  5924                           
  5925                           ;launcher_main.c: 118: }
  5926                           ;launcher_main.c: 119: }
  5927                           ;launcher_main.c: 122: if(PIR1bits.ADIF & PIE1bits.ADIE)
  5928  003D  0021               	movlb	1	; select bank1
  5929  003E  0E11               	swapf	17,w	;volatile
  5930  003F  0C89               	rrf	9,f
  5931  0040  0C89               	rrf	9,f
  5932  0041  3901               	andlw	1
  5933  0042  00F2               	movwf	??_isr
  5934  0043  0020               	movlb	0	; select bank0
  5935  0044  0E11               	swapf	17,w	;volatile
  5936  0045  0C89               	rrf	9,f
  5937  0046  0C89               	rrf	9,f
  5938  0047  3901               	andlw	1
  5939  0048  0572               	andwf	??_isr,w
  5940  0049  1903               	btfsc	3,2
  5941  004A  287B               	goto	i1l2436
  5942                           
  5943                           ;launcher_main.c: 123: {
  5944                           ;launcher_main.c: 124: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  5945  004B  3033               	movlw	51
  5946  004C  0679               	xorwf	_end,w
  5947  004D  047A               	iorwf	_end+1,w
  5948  004E  1903               	skipnz
  5949  004F  2865               	goto	i1l2428
  5950  0050  0879               	movf	_end,w
  5951  0051  3E01               	addlw	1
  5952  0052  00F2               	movwf	??_isr
  5953  0053  3000               	movlw	0
  5954  0054  3D7A               	addwfc	_end+1,w
  5955  0055  00F3               	movwf	??_isr+1
  5956  0056  087C               	movf	_start+1,w
  5957  0057  0673               	xorwf	??_isr+1,w
  5958  0058  1D03               	skipz
  5959  0059  285C               	goto	u198_25
  5960  005A  087B               	movf	_start,w
  5961  005B  0672               	xorwf	??_isr,w
  5962  005C                     u198_25:	
  5963  005C  3000               	movlw	0
  5964  005D  1903               	skipnz
  5965  005E  3001               	movlw	1
  5966  005F  00F4               	movwf	??_isr+2
  5967  0060  01F5               	clrf	??_isr+3
  5968  0061  0874               	movf	??_isr+2,w
  5969  0062  00F7               	movwf	_isr$528
  5970  0063  0875               	movf	??_isr+3,w
  5971  0064  286F               	goto	L4
  5972  0065                     i1l2428:	
  5973  0065  087C               	movf	_start+1,w
  5974  0066  047B               	iorwf	_start,w
  5975  0067  3000               	movlw	0
  5976  0068  1903               	skipnz
  5977  0069  3001               	movlw	1
  5978  006A  00F2               	movwf	??_isr
  5979  006B  01F3               	clrf	??_isr+1
  5980  006C  0872               	movf	??_isr,w
  5981  006D  00F7               	movwf	_isr$528
  5982  006E  0873               	movf	??_isr+1,w
  5983  006F                     L4:	
  5984  006F  00F8               	movwf	_isr$528+1
  5985  0070  0878               	movf	_isr$528+1,w
  5986  0071  0477               	iorwf	_isr$528,w
  5987  0072  1D03               	skipz
  5988  0073  2879               	goto	i1l2434
  5989                           
  5990                           ;launcher_main.c: 125: {
  5991                           ;launcher_main.c: 126: WriteBuffer(ADRESH);
  5992  0074  0021               	movlb	1	; select bank1
  5993  0075  081C               	movf	28,w	;volatile
  5994  0076  318D  25F6  3180   	fcall	_WriteBuffer
  5995  0079                     i1l2434:	
  5996                           
  5997                           ;launcher_main.c: 127: }
  5998                           ;launcher_main.c: 128: PIR1bits.ADIF = 0;
  5999  0079  0020               	movlb	0	; select bank0
  6000  007A  1311               	bcf	17,6	;volatile
  6001  007B                     i1l2436:	
  6002                           
  6003                           ;launcher_main.c: 129: }
  6004                           ;launcher_main.c: 132: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6005  007B  1D8B               	btfss	11,3	;volatile
  6006  007C  28A6               	goto	i1l2450
  6007  007D  0027               	movlb	7	; select bank7
  6008  007E  1D96               	btfss	22,3	;volatile
  6009  007F  28A6               	goto	i1l2450
  6010                           
  6011                           ;launcher_main.c: 133: {
  6012                           ;launcher_main.c: 134: IOCBFbits.IOCBF3 = 0;
  6013  0080  1196               	bcf	22,3	;volatile
  6014                           
  6015                           ;launcher_main.c: 135: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6016  0081  0020               	movlb	0	; select bank0
  6017  0082  0C0D               	rrf	13,w	;volatile
  6018  0083  00F2               	movwf	??_isr
  6019  0084  0CF2               	rrf	??_isr,f
  6020  0085  0C72               	rrf	??_isr,w
  6021  0086  3901               	andlw	1
  6022  0087  00F3               	movwf	??_isr+1
  6023  0088  0027               	movlb	7	; select bank7
  6024  0089  0C14               	rrf	20,w	;volatile
  6025  008A  00F4               	movwf	??_isr+2
  6026  008B  0CF4               	rrf	??_isr+2,f
  6027  008C  0C74               	rrf	??_isr+2,w
  6028  008D  3901               	andlw	1
  6029  008E  0573               	andwf	??_isr+1,w
  6030  008F  1903               	btfsc	3,2
  6031  0090  2894               	goto	i1l2446
  6032                           
  6033                           ;launcher_main.c: 136: {
  6034                           ;launcher_main.c: 137: recordFlag = 1;
  6035  0091  0021               	movlb	1	; select bank1
  6036  0092  01DD               	clrf	_recordFlag^(0+128)
  6037  0093  0ADD               	incf	_recordFlag^(0+128),f
  6038  0094                     i1l2446:	
  6039                           
  6040                           ;launcher_main.c: 138: }
  6041                           ;launcher_main.c: 139: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6042  0094  0027               	movlb	7	; select bank7
  6043  0095  0C15               	rrf	21,w	;volatile
  6044  0096  00F2               	movwf	??_isr
  6045  0097  0CF2               	rrf	??_isr,f
  6046  0098  0C72               	rrf	??_isr,w
  6047  0099  3901               	andlw	1
  6048  009A  00F3               	movwf	??_isr+1
  6049  009B  1003               	clrc
  6050  009C  0020               	movlb	0	; select bank0
  6051  009D  1D8D               	btfss	13,3	;volatile
  6052  009E  1403               	setc
  6053  009F  3000               	movlw	0
  6054  00A0  3D09               	addwfc	9,w
  6055  00A1  0573               	andwf	??_isr+1,w
  6056  00A2  1903               	btfsc	3,2
  6057  00A3  28A6               	goto	i1l2450
  6058                           
  6059                           ;launcher_main.c: 140: {
  6060                           ;launcher_main.c: 141: recordFlag = 0;
  6061  00A4  0021               	movlb	1	; select bank1
  6062  00A5  01DD               	clrf	_recordFlag^(0+128)
  6063  00A6                     i1l2450:	
  6064                           
  6065                           ;launcher_main.c: 142: }
  6066                           ;launcher_main.c: 143: }
  6067                           ;launcher_main.c: 146: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6068  00A6  1D8B               	btfss	11,3	;volatile
  6069  00A7  28C8               	goto	i1l135
  6070  00A8  0027               	movlb	7	; select bank7
  6071  00A9  1C93               	btfss	19,1	;volatile
  6072  00AA  28C8               	goto	i1l135
  6073                           
  6074                           ;launcher_main.c: 147: {
  6075                           ;launcher_main.c: 148: IOCAFbits.IOCAF1 = 0;
  6076  00AB  1093               	bcf	19,1	;volatile
  6077                           
  6078                           ;launcher_main.c: 149: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6079  00AC  0020               	movlb	0	; select bank0
  6080  00AD  0C0C               	rrf	12,w	;volatile
  6081  00AE  3901               	andlw	1
  6082  00AF  00F2               	movwf	??_isr
  6083  00B0  0027               	movlb	7	; select bank7
  6084  00B1  0C11               	rrf	17,w	;volatile
  6085  00B2  3901               	andlw	1
  6086  00B3  0572               	andwf	??_isr,w
  6087  00B4  1903               	btfsc	3,2
  6088  00B5  28B9               	goto	i1l2460
  6089                           
  6090                           ;launcher_main.c: 150: {
  6091                           ;launcher_main.c: 151: strobeFlag = 1;
  6092  00B6  0021               	movlb	1	; select bank1
  6093  00B7  01DE               	clrf	_strobeFlag^(0+128)
  6094  00B8  0ADE               	incf	_strobeFlag^(0+128),f
  6095  00B9                     i1l2460:	
  6096                           
  6097                           ;launcher_main.c: 152: }
  6098                           ;launcher_main.c: 153: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6099  00B9  0027               	movlb	7	; select bank7
  6100  00BA  0C12               	rrf	18,w	;volatile
  6101  00BB  3901               	andlw	1
  6102  00BC  00F2               	movwf	??_isr
  6103  00BD  1003               	clrc
  6104  00BE  0020               	movlb	0	; select bank0
  6105  00BF  1C8C               	btfss	12,1	;volatile
  6106  00C0  1403               	setc
  6107  00C1  3000               	movlw	0
  6108  00C2  3D09               	addwfc	9,w
  6109  00C3  0572               	andwf	??_isr,w
  6110  00C4  1903               	btfsc	3,2
  6111  00C5  28C8               	goto	i1l135
  6112                           
  6113                           ;launcher_main.c: 154: {
  6114                           ;launcher_main.c: 155: strobeFlag = 0;
  6115  00C6  0021               	movlb	1	; select bank1
  6116  00C7  01DE               	clrf	_strobeFlag^(0+128)
  6117  00C8                     i1l135:	
  6118  00C8  0876               	movf	??_isr+4,w
  6119  00C9  0020               	movlb	0	; select bank0
  6120  00CA  00FF               	movwf	127
  6121  00CB  107E               	bcf	126,0	;clear compiler interrupt flag
  6122  00CC  0009               	retfie
  6123  00CD                     __end_of_isr:	
  6124                           
  6125                           	psect	text28
  6126  0DF6                     __ptext28:	
  6127 ;; *************** function _WriteBuffer *****************
  6128 ;; Defined at:
  6129 ;;		line 204 in file "launcher_functions.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  data            1    wreg     unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  data            1    1[COMMON] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;		None               void
  6136 ;; Registers used:
  6137 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6143 ;;      Params:         0       0       0       0       0       0       0       0
  6144 ;;      Locals:         1       0       0       0       0       0       0       0
  6145 ;;      Temps:          1       0       0       0       0       0       0       0
  6146 ;;      Totals:         2       0       0       0       0       0       0       0
  6147 ;;Total ram usage:        2 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_isr
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _WriteBuffer
  6158  0DF6                     _WriteBuffer:	
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6162                           ;WriteBuffer@data stored from wreg
  6163  0DF6  00F1               	movwf	WriteBuffer@data
  6164                           
  6165                           ;launcher_functions.c: 206: buffer[end] = data;
  6166  0DF7  0871               	movf	WriteBuffer@data,w
  6167  0DF8  00F0               	movwf	??_WriteBuffer
  6168  0DF9  0879               	movf	_end,w
  6169  0DFA  3EA0               	addlw	_buffer& (0+255)
  6170  0DFB  0086               	movwf	6
  6171  0DFC  3001               	movlw	1	; select bank3/4
  6172  0DFD  0087               	movwf	7
  6173  0DFE  0870               	movf	??_WriteBuffer,w
  6174  0DFF  0081               	movwf	1
  6175                           
  6176                           ;launcher_functions.c: 208: if (end == 51)
  6177  0E00  3033               	movlw	51
  6178  0E01  0679               	xorwf	_end,w
  6179  0E02  047A               	iorwf	_end+1,w
  6180  0E03  1D03               	skipz
  6181  0E04  2E08               	goto	i1l2338
  6182                           
  6183                           ;launcher_functions.c: 209: end = 0;
  6184  0E05  01F9               	clrf	_end
  6185  0E06  01FA               	clrf	_end+1
  6186  0E07  0008               	return
  6187  0E08                     i1l2338:	
  6188                           
  6189                           ;launcher_functions.c: 210: else
  6190                           ;launcher_functions.c: 211: end++;
  6191  0E08  3001               	movlw	1
  6192  0E09  07F9               	addwf	_end,f
  6193  0E0A  3000               	movlw	0
  6194  0E0B  3DFA               	addwfc	_end+1,f
  6195  0E0C  0008               	return
  6196  0E0D                     __end_of_WriteBuffer:	
  6197  007E                     btemp	set	126	;btemp
  6198  007E                     pic14e$flags	set	126
  6199  007E                     wtemp	set	126
  6200  007E                     wtemp0	set	126
  6201  0080                     wtemp1	set	128
  6202  0082                     wtemp2	set	130
  6203  0084                     wtemp3	set	132
  6204  0086                     wtemp4	set	134
  6205  0088                     wtemp5	set	136
  6206  007F                     wtemp6	set	127
  6207  007E                     ttemp	set	126
  6208  007E                     ttemp0	set	126
  6209  0081                     ttemp1	set	129
  6210  0084                     ttemp2	set	132
  6211  0087                     ttemp3	set	135
  6212  007F                     ttemp4	set	127
  6213  007E                     ltemp	set	126
  6214  007E                     ltemp0	set	126
  6215  0082                     ltemp1	set	130
  6216  0086                     ltemp2	set	134
  6217  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    10
    Data        55
    BSS         136
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80      4      68
    BANK2            80      0      72
    BANK3            80      0      51
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 22
		 -> SetupGPS@message(BANK0[22]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1348$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___lwdiv
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _RecordMode->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8279
                                             76 BANK0      4     0      4
                                              0 BANK1      4     4      0
                          _GoToSleep
                    _GoToSleepTenMin
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           25    25      0    4263
                                             40 BANK0     25    25      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           26    26      0    3130
                                             14 BANK0     26    26      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            37    37      0    2983
                                             39 BANK0     37    37      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1613
                                             20 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          13    13      0     942
                                             21 BANK0     13    13      0
                         _ReadBuffer
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     513
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GoToSleepTenMin                                      2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (6) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _GoToSleepTenMin
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _RecordMode
     _ReadBuffer
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     11D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      33      12       63.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     11D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 17:32:45 2014

               DecodeGPS@latitude 003A                       _SSPSTATbits 0214               ___wmul@multiplicand 0022  
            __size_of_WriteBuffer 0017                       __CFG_LVP$ON 0000                               l104 0673  
                             l300 0E23                               l319 0D66                               l272 0DDC  
                             l409 04AF                               l380 0381                               l278 0D70  
                             l289 0FE0                               l529 07E9                               l395 0E55  
                             _GIE 005F                               _RA6 0066                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0030                               wreg 0009  
              DecodeGPS@longitude 0040                   DisableGPS@F4913 00A0                              l2032 035B  
                            l2024 033F                              l2202 0708                              l2050 0395  
                            l2042 0384                              l2034 0361                              l2212 0746  
                            l2310 0F20                              l2232 03F4                              l2056 03BD  
                            l2330 0E47                              l2252 0453                              l2246 042D  
                            l2238 041A                              l2328 0E51                              l2360 065E  
                            l1730 0F63                              l2370 067B                              l1804 0FCD  
                            l2268 0492                              l2276 045E                              l1900 05C0  
                            l1732 0F9D                              l2380 06A8                              l1742 07E3  
                            l1824 0E1F                              l2288 04ED                              l1912 05E5  
                            l1904 05C6                              l1728 0F98                              l2392 06D8  
                            l1770 0F4E                              l1762 0F30                              l1930 0638  
                            l2386 06CC                              l1764 0F3C                              l1774 0F57  
                            l1926 05F8                              l1918 05F4                              l1870 0561  
                            l1846 07A1                              l1838 0793                              l1942 013F  
                            l1792 0EE5                              l1928 053D                              l1856 07AB  
                            l1786 0ECD                              l1890 05AA                              l1858 07CE  
                            l1946 0150                              l1788 0ED9                              l1796 0EEE  
                            l1884 0574                              l1868 055F                              l1980 0234  
                            l1948 0160                              l1888 0590                              l1988 0250  
                            _ADIE 048E                              _ADIF 008E                              ?_isr 0070  
          __size_of_ReadStatusSPI 0011                              STR_1 080A                              STR_2 081D  
                            STR_3 082F                              u1115 0F6D                              u1205 0F3D  
                            u1215 0F47                              u1305 0FAB                              u1225 0F4F  
                            u1145 07EA                              u1315 0FBF                              u1155 07EF  
                            u1500 0120                              u2117 066B                              u1510 012E  
                            u1255 0ED0                              u2127 0F10                              u1185 0F33  
                            u2137 0E83                              u1275 0EDF                              u1355 0781  
                            u2147 0E92                              u1285 0EE6                              u1445 05DB  
                            u2157 070F                              u1525 013D                              u2167 074D  
                            u1640 06E7                              u2177 04B9                              u1705 0451  
                            u1385 07BB                              u1625 0393                              u1545 015E  
                            u1490 0112                              u1715 0480                              u1635 03BB  
                            u1740 04AE                              u1725 0498                              u1743 0475  
                            u1655 0706                              u1753 04DD                              u1665 0744  
                            u1675 03F2                              u1765 04FD                              u1685 0418  
                            u1790 0F00                              u1775 0512                              u1695 042B  
                            u1785 0527                              _PEIE 005E                              _RCIE 048D  
                            _OERR 0CE9                              _main 063D                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E                              start 00CD                              ttemp 007E  
                            wtemp 007E                     __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020  
                 __end_of_InitADC 0E3E                   __end_of_InitCLK 0D64                   __end_of_InitSPI 0DCD  
                 __end_of_ReadSPI 0D7A                ??_compute_checksum 0022                             ??_isr 0072  
                   ?_InitWatchdog 0070             ReadStatusSPI@dataRead 0026                             ?_main 006C  
                           _LATC2 0872                             _IOCAF 0393                             _IOCBF 0396  
                 __end_of___lwdiv 0F5E                             i1l135 00C8                   __end_of___lwmod 0EF5  
                           _RCREG 0199                             _TMR1H 0017                             _TMR1L 0016  
                           _TXREG 019A                 RecordMode@address 003C                 ??_GoToSleepTenMin 0020  
                 __end_of_dpowers 080A               DecodeGPS@northSouth 0037                             _start 007B  
                  __CFG_BOREN$OFF 0000                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                 __end_of_sprintf 063D            uart_write_message@data 0034            uart_write_message@size 0028  
                      _ReadBuffer 0E0D                   __initialization 00CF                        _InitTimer1 0D7A  
               ?_WriteOverheadSPI 0027                      __end_of_main 06DC                __size_of_DecodeGPS 02C3  
                __end_of_InitGPIO 0EC6                    ??_InitWatchdog 0020                     _ReadStatusSPI 0D98  
              ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0035                            ??_main 00DF  
              __size_of_GoToSleep 0012                   ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000  
                __end_of_SetupGPS 076E     WriteOverheadSPI@address_bytes 0031                        _RecordMode 03CA  
                          _ADRESH 009C                  __end_of_WriteSPI 0DE0                            i1l2400 0010  
                          i1l2410 002C                            i1l2412 002E                            i1l2422 003D  
                          i1l2408 002B                            i1l2338 0E08                            i1l2450 00A6  
                          i1l2434 0079                            i1l2460 00B9                            i1l2428 0065  
                          i1l2436 007B                            i1l2446 0094                            u198_25 005C  
                          _TMR1IE 0488                            _TMR1IF 0088                            _SPBRGH 019C  
                          _TMR1ON 00C0                            _SPBRGL 019B                            _SSPBUF 0211  
                       ??_InitADC 0020                         ??_InitCLK 0020                         ??_InitSPI 0020  
                       ??_ReadSPI 0020                    ?_ReadStatusSPI 0070                            ___wmul 07E0  
                __end_of_initUART 0D98                         ??___lwdiv 002A                         ??___lwmod 0032  
                          _buffer 01A0       __size_of_uart_write_message 0072                __size_of_UpdateGPS 0032  
                     RecordMode@x 0040               main@periodicCounter 00E2                 __end_of_DecodeGPS 03CA  
                       ??_sprintf 003A                    _gpsInvalidFlag 00BE           __end_of__initialization 0103  
               __end_of_GoToSleep 0DBB                       ?_ReadBuffer 0070                       ?_InitTimer1 0070  
                  __pcstackCOMMON 0070                      __pidataBANK1 0E58                      __pidataBANK2 0DE0  
                    WriteSPI@temp 0022                       ?_RecordMode 0070              __end_of_InitWatchdog 0D5C  
                      __pbssBANK1 00C1                        __pbssBANK2 0120                        __pbssBANK3 01A0  
                       ?_InitGPIO 0070                   SetupGPS@message 004A                   ??_ReadStatusSPI 0025  
               __end_of_UpdateGPS 0F27                        __pmaintext 063D                         ?_SetupGPS 0070  
                         ?___wmul 0020                     ??_WriteBuffer 0070                        __pintentry 0004  
                  _validLongitude 00D3         UpdateGPS@GPSupdateMessage 004B                   _GoToSleepTenMin 0E3E  
                       ?_WriteSPI 0070                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                       ?_initUART 0070                           _InitADC 0E25                           _InitCLK 0D5C  
                         _InitSPI 0DBB                        _gpsMessage 0120           __size_of_ToggleSleepGPS 0022  
                         _ReadSPI 0D6E                       SetupGPS@MID 0066                        ??_SetupGPS 0047  
             __size_of_RecordMode 016D                   __size_of___wmul 001E                           ___lwdiv 0F27  
                         ___lwmod 0EC6                           _isr$528 0077                        ??_WriteSPI 0020  
                         __ptext1 0D89                           __ptext2 0EF5                           __ptext3 0107  
                         __ptext4 07E0                           __ptext5 0E79                           __ptext6 06DC  
                         __ptext7 076E                           __ptext8 0D64                           __ptext9 0F5E  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0E0D  
                    __size_of_isr 00C9                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 00DD  
                         _sprintf 0537                           clrloop0 0D50              end_of_initialization 0103  
                      ??_initUART 0020                           init_ram 0D49                           initloop 0D4A  
         __end_of_GoToSleepTenMin 0E58                   WriteBuffer@data 0071                 __end_of_uart_xmit 0D6E  
                       _RCSTAbits 019D                  WriteSPI@databyte 0024                      __pstringtext 0800  
                       _PORTAbits 000C                         _PORTBbits 000D                  __CFG_FOSC$INTOSC 0000  
           __size_of_InitWatchdog 0007                         _TRISAbits 008C                         _TRISBbits 008D  
                       _TRISCbits 008E           WriteOverheadSPI@address 0027                   DecodeGPS@status 0039  
            uart_xmit@mydata_byte 0020                         _DecodeGPS 0107                         _TXSTAbits 019E  
            GoToSleepTenMin@count 0021                      ??_ReadBuffer 0020                        _strobeFlag 00DE  
                    ??_InitTimer1 0020                         _GoToSleep 0DA9                       _WriteBuffer 0DF6  
                  __end_of___wmul 07FE        __end_of_uart_write_message 07E0                      _InitWatchdog 0D55  
                   SetupGPS@F4916 00B4                     SetupGPS@F4918 00BA               start_initialization 00CF  
                _compute_checksum 0F5E         WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 0035  
                     __end_of_isr 00CD                __end_of_ReadBuffer 0E25                 compute_checksum@x 0026  
              __end_of_InitTimer1 0D89                        ?_DecodeGPS 0070                    _ToggleSleepGPS 0E79  
               __size_of_InitGPIO 002B                  ?_GoToSleepTenMin 0070                         SetupGPS@x 006A  
            compute_checksum@data 0025                        ?_GoToSleep 0070              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 0537                       __pdataBANK1 00A0  
                     __pdataBANK2 0152                 __size_of_SetupGPS 0092                         _UpdateGPS 0EF5  
        compute_checksum@checksum 0024                 __size_of_WriteSPI 0013                       __pbssCOMMON 0079  
                       ___latbits 0001                     __pcstackBANK0 0020                     __pcstackBANK1 00DF  
                _WriteOverheadSPI 0FA0               __end_of__stringdata 0836               uart_write_message@x 0031  
                   _validEastWest 00BF            __end_of_ToggleSleepGPS 0E9B                   _messageDoneFlag 007D  
                     sprintf@_val 0042                       sprintf@flag 003E                       sprintf@prec 003F  
                        ?_InitADC 0070                          ?_InitCLK 0070                          ?_InitSPI 0070  
               __size_of_initUART 000F                          ?_ReadSPI 0070                         __pnvBANK1 00E3  
                   _validLatitude 00CD                  ___lwdiv@dividend 0028             __end_of_ReadStatusSPI 0DA9  
                        ?___lwdiv 0026                          ?___lwmod 002E                        ?_UpdateGPS 0070  
                  UpdateGPS@F4923 0152                  __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 002B  
                        ?_sprintf 0034        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 00C0                       ??_DecodeGPS 002E                    ___wmul@product 0024  
                        _LATBbits 010D                         clear_ram0 0D4F                          _PIE1bits 0091  
                  DecodeGPS@F4930 00C7                    DecodeGPS@F4926 00AD                    DecodeGPS@F4928 00C1  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0D64  
                      _ADCON0bits 009D                        _ADCON1bits 009E                       __stringdata 080A  
                      _ADCON2bits 009F                 ___wmul@multiplier 0020                   RecordMode@count 003A  
                        _InitGPIO 0E9B                  __size_of_InitADC 0019                  __size_of_InitCLK 0008  
                __size_of_InitSPI 0012                  __size_of_ReadSPI 000C          __end_of_compute_checksum 0FA0  
           SetupGPS@startSequence 0060                          _SetupGPS 06DC                        ?_uart_xmit 0070  
                    ?_WriteBuffer 0070                       ??_UpdateGPS 0048                  __size_of___lwdiv 0037  
                __size_of___lwmod 002F                          _WriteSPI 0DCD           _uart_write_message$1290 002D  
         _uart_write_message$1291 002F                        _ANSELAbits 018C                        _ANSELBbits 018D  
             ReadBuffer@read_data 0021                   ___lwdiv@divisor 0026                   ___lwdiv@counter 002D  
                        __ptext10 0537                          __ptext11 0EC6                          __ptext20 0D7A  
                        __ptext12 0F27                          __ptext21 0DBB                          __ptext13 03CA  
                      _T1GCONbits 0019                          __ptext22 0E9B                          __ptext14 0FA0  
                        __ptext23 0D5C                          __ptext15 0D98                          __ptext24 0E25  
                        __ptext16 0DCD                          __ptext25 0E3E                          __ptext17 0D6E  
                        __ptext26 0DA9                          __ptext18 0E0D                          __ptext19 0D55  
                        __ptext28 0DF6                _uart_write_message 076E                  __size_of_sprintf 0106  
                        _gpsIndex 00E3                          _initUART 0D89                     __size_of_main 009F  
             ?_uart_write_message 0028                        DecodeGPS@x 0046          __end_of_WriteOverheadSPI 1000  
                  GoToSleep@count 0021                          main@argc 006C                          main@argv 006E  
            ??_uart_write_message 002A                        _INTCONbits 000B                       pic14e$flags 007E  
                        intlevel1 0000                         sprintf@ap 0040                         sprintf@sp 0041  
                ___lwmod@dividend 0030                 __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099  
                     ??_uart_xmit 0020          __size_of_GoToSleepTenMin 001A                          sprintf@c 0046  
                        sprintf@f 0034                   ___lwmod@divisor 002E                   ___lwmod@counter 0033  
                ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215                        _WDTCONbits 0097  
                 _recordEndAdress 00D9                 DecodeGPS@eastWest 0038  
