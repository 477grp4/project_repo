

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Nov 06 19:44:52 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  011F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  0210                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  028C                     	;# 
   180  028D                     	;# 
   181  028E                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  030C                     	;# 
   191  030D                     	;# 
   192  030E                     	;# 
   193  038C                     	;# 
   194  038D                     	;# 
   195  038E                     	;# 
   196  0390                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  0397                     	;# 
   204  0398                     	;# 
   205  0399                     	;# 
   206  039D                     	;# 
   207  039E                     	;# 
   208  039F                     	;# 
   209  0511                     	;# 
   210  0513                     	;# 
   211  051A                     	;# 
   212  0811                     	;# 
   213  0812                     	;# 
   214  0813                     	;# 
   215  0814                     	;# 
   216  0815                     	;# 
   217  0816                     	;# 
   218  0817                     	;# 
   219  0818                     	;# 
   220  0819                     	;# 
   221  081A                     	;# 
   222  081B                     	;# 
   223  081C                     	;# 
   224  081D                     	;# 
   225  081E                     	;# 
   226  081F                     	;# 
   227  0820                     	;# 
   228  0821                     	;# 
   229  0821                     	;# 
   230  0822                     	;# 
   231  0823                     	;# 
   232  0823                     	;# 
   233  0824                     	;# 
   234  0825                     	;# 
   235  0825                     	;# 
   236  0826                     	;# 
   237  0827                     	;# 
   238  0827                     	;# 
   239  0828                     	;# 
   240  0829                     	;# 
   241  082A                     	;# 
   242  082B                     	;# 
   243  082C                     	;# 
   244  082D                     	;# 
   245  082E                     	;# 
   246  082F                     	;# 
   247  0831                     	;# 
   248  0832                     	;# 
   249  0833                     	;# 
   250  0834                     	;# 
   251  0835                     	;# 
   252  0836                     	;# 
   253  0837                     	;# 
   254  0838                     	;# 
   255  0839                     	;# 
   256  083A                     	;# 
   257  083B                     	;# 
   258  083C                     	;# 
   259  083D                     	;# 
   260  083E                     	;# 
   261  083F                     	;# 
   262  0840                     	;# 
   263  0841                     	;# 
   264  0841                     	;# 
   265  0842                     	;# 
   266  0843                     	;# 
   267  0843                     	;# 
   268  0844                     	;# 
   269  0845                     	;# 
   270  0845                     	;# 
   271  0846                     	;# 
   272  0847                     	;# 
   273  0847                     	;# 
   274  0848                     	;# 
   275  0849                     	;# 
   276  084A                     	;# 
   277  084B                     	;# 
   278  084C                     	;# 
   279  084D                     	;# 
   280  084E                     	;# 
   281  084F                     	;# 
   282  0FE4                     	;# 
   283  0FE5                     	;# 
   284  0FE6                     	;# 
   285  0FE7                     	;# 
   286  0FE8                     	;# 
   287  0FE9                     	;# 
   288  0FEA                     	;# 
   289  0FEB                     	;# 
   290  0FED                     	;# 
   291  0FEE                     	;# 
   292  0FEF                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  0090                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0094                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0113                     	;# 
   346  0114                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011D                     	;# 
   353  011D                     	;# 
   354  011E                     	;# 
   355  011F                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0194                     	;# 
   365  0195                     	;# 
   366  0196                     	;# 
   367  0199                     	;# 
   368  0199                     	;# 
   369  0199                     	;# 
   370  019A                     	;# 
   371  019A                     	;# 
   372  019A                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019C                     	;# 
   381  019D                     	;# 
   382  019D                     	;# 
   383  019D                     	;# 
   384  019E                     	;# 
   385  019E                     	;# 
   386  019E                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  019F                     	;# 
   391  019F                     	;# 
   392  020C                     	;# 
   393  020D                     	;# 
   394  020E                     	;# 
   395  0210                     	;# 
   396  0211                     	;# 
   397  0211                     	;# 
   398  0212                     	;# 
   399  0212                     	;# 
   400  0213                     	;# 
   401  0213                     	;# 
   402  0214                     	;# 
   403  0214                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0216                     	;# 
   408  0216                     	;# 
   409  0217                     	;# 
   410  0217                     	;# 
   411  028C                     	;# 
   412  028D                     	;# 
   413  028E                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0298                     	;# 
   419  0298                     	;# 
   420  0299                     	;# 
   421  029A                     	;# 
   422  030C                     	;# 
   423  030D                     	;# 
   424  030E                     	;# 
   425  038C                     	;# 
   426  038D                     	;# 
   427  038E                     	;# 
   428  0390                     	;# 
   429  0391                     	;# 
   430  0392                     	;# 
   431  0393                     	;# 
   432  0394                     	;# 
   433  0395                     	;# 
   434  0396                     	;# 
   435  0397                     	;# 
   436  0398                     	;# 
   437  0399                     	;# 
   438  039D                     	;# 
   439  039E                     	;# 
   440  039F                     	;# 
   441  0511                     	;# 
   442  0513                     	;# 
   443  051A                     	;# 
   444  0811                     	;# 
   445  0812                     	;# 
   446  0813                     	;# 
   447  0814                     	;# 
   448  0815                     	;# 
   449  0816                     	;# 
   450  0817                     	;# 
   451  0818                     	;# 
   452  0819                     	;# 
   453  081A                     	;# 
   454  081B                     	;# 
   455  081C                     	;# 
   456  081D                     	;# 
   457  081E                     	;# 
   458  081F                     	;# 
   459  0820                     	;# 
   460  0821                     	;# 
   461  0821                     	;# 
   462  0822                     	;# 
   463  0823                     	;# 
   464  0823                     	;# 
   465  0824                     	;# 
   466  0825                     	;# 
   467  0825                     	;# 
   468  0826                     	;# 
   469  0827                     	;# 
   470  0827                     	;# 
   471  0828                     	;# 
   472  0829                     	;# 
   473  082A                     	;# 
   474  082B                     	;# 
   475  082C                     	;# 
   476  082D                     	;# 
   477  082E                     	;# 
   478  082F                     	;# 
   479  0831                     	;# 
   480  0832                     	;# 
   481  0833                     	;# 
   482  0834                     	;# 
   483  0835                     	;# 
   484  0836                     	;# 
   485  0837                     	;# 
   486  0838                     	;# 
   487  0839                     	;# 
   488  083A                     	;# 
   489  083B                     	;# 
   490  083C                     	;# 
   491  083D                     	;# 
   492  083E                     	;# 
   493  083F                     	;# 
   494  0840                     	;# 
   495  0841                     	;# 
   496  0841                     	;# 
   497  0842                     	;# 
   498  0843                     	;# 
   499  0843                     	;# 
   500  0844                     	;# 
   501  0845                     	;# 
   502  0845                     	;# 
   503  0846                     	;# 
   504  0847                     	;# 
   505  0847                     	;# 
   506  0848                     	;# 
   507  0849                     	;# 
   508  084A                     	;# 
   509  084B                     	;# 
   510  084C                     	;# 
   511  084D                     	;# 
   512  084E                     	;# 
   513  084F                     	;# 
   514  0FE4                     	;# 
   515  0FE5                     	;# 
   516  0FE6                     	;# 
   517  0FE7                     	;# 
   518  0FE8                     	;# 
   519  0FE9                     	;# 
   520  0FEA                     	;# 
   521  0FEB                     	;# 
   522  0FED                     	;# 
   523  0FEE                     	;# 
   524  0FEF                     	;# 
   525  0000                     	;# 
   526  0001                     	;# 
   527  0002                     	;# 
   528  0003                     	;# 
   529  0004                     	;# 
   530  0005                     	;# 
   531  0006                     	;# 
   532  0007                     	;# 
   533  0008                     	;# 
   534  0009                     	;# 
   535  000A                     	;# 
   536  000B                     	;# 
   537  000C                     	;# 
   538  000D                     	;# 
   539  000E                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0014                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0016                     	;# 
   547  0017                     	;# 
   548  0018                     	;# 
   549  0019                     	;# 
   550  001A                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  008C                     	;# 
   554  008D                     	;# 
   555  008E                     	;# 
   556  0090                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0094                     	;# 
   560  0095                     	;# 
   561  0096                     	;# 
   562  0097                     	;# 
   563  0098                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  009F                     	;# 
   572  010C                     	;# 
   573  010D                     	;# 
   574  010E                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0113                     	;# 
   578  0114                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011D                     	;# 
   585  011D                     	;# 
   586  011E                     	;# 
   587  011F                     	;# 
   588  018C                     	;# 
   589  018D                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  0199                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019A                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019D                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  020C                     	;# 
   625  020D                     	;# 
   626  020E                     	;# 
   627  0210                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  028C                     	;# 
   644  028D                     	;# 
   645  028E                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0298                     	;# 
   651  0298                     	;# 
   652  0299                     	;# 
   653  029A                     	;# 
   654  030C                     	;# 
   655  030D                     	;# 
   656  030E                     	;# 
   657  038C                     	;# 
   658  038D                     	;# 
   659  038E                     	;# 
   660  0390                     	;# 
   661  0391                     	;# 
   662  0392                     	;# 
   663  0393                     	;# 
   664  0394                     	;# 
   665  0395                     	;# 
   666  0396                     	;# 
   667  0397                     	;# 
   668  0398                     	;# 
   669  0399                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0511                     	;# 
   674  0513                     	;# 
   675  051A                     	;# 
   676  0811                     	;# 
   677  0812                     	;# 
   678  0813                     	;# 
   679  0814                     	;# 
   680  0815                     	;# 
   681  0816                     	;# 
   682  0817                     	;# 
   683  0818                     	;# 
   684  0819                     	;# 
   685  081A                     	;# 
   686  081B                     	;# 
   687  081C                     	;# 
   688  081D                     	;# 
   689  081E                     	;# 
   690  081F                     	;# 
   691  0820                     	;# 
   692  0821                     	;# 
   693  0821                     	;# 
   694  0822                     	;# 
   695  0823                     	;# 
   696  0823                     	;# 
   697  0824                     	;# 
   698  0825                     	;# 
   699  0825                     	;# 
   700  0826                     	;# 
   701  0827                     	;# 
   702  0827                     	;# 
   703  0828                     	;# 
   704  0829                     	;# 
   705  082A                     	;# 
   706  082B                     	;# 
   707  082C                     	;# 
   708  082D                     	;# 
   709  082E                     	;# 
   710  082F                     	;# 
   711  0831                     	;# 
   712  0832                     	;# 
   713  0833                     	;# 
   714  0834                     	;# 
   715  0835                     	;# 
   716  0836                     	;# 
   717  0837                     	;# 
   718  0838                     	;# 
   719  0839                     	;# 
   720  083A                     	;# 
   721  083B                     	;# 
   722  083C                     	;# 
   723  083D                     	;# 
   724  083E                     	;# 
   725  083F                     	;# 
   726  0840                     	;# 
   727  0841                     	;# 
   728  0841                     	;# 
   729  0842                     	;# 
   730  0843                     	;# 
   731  0843                     	;# 
   732  0844                     	;# 
   733  0845                     	;# 
   734  0845                     	;# 
   735  0846                     	;# 
   736  0847                     	;# 
   737  0847                     	;# 
   738  0848                     	;# 
   739  0849                     	;# 
   740  084A                     	;# 
   741  084B                     	;# 
   742  084C                     	;# 
   743  084D                     	;# 
   744  084E                     	;# 
   745  084F                     	;# 
   746  0FE4                     	;# 
   747  0FE5                     	;# 
   748  0FE6                     	;# 
   749  0FE7                     	;# 
   750  0FE8                     	;# 
   751  0FE9                     	;# 
   752  0FEA                     	;# 
   753  0FEB                     	;# 
   754  0FED                     	;# 
   755  0FEE                     	;# 
   756  0FEF                     	;# 
   757                           
   758                           	psect	idataBANK0
   759  0BB2                     __pidataBANK0:	
   760                           
   761                           ;initializer for _gpsInvalidFlag
   762  0BB2  3401               	retlw	1
   763                           
   764                           ;initializer for _validEastWest
   765  0BB3  3445               	retlw	69
   766                           
   767                           ;initializer for _validNorthSouth
   768  0BB4  344E               	retlw	78
   769                           
   770                           	psect	idataBANK1
   771  0BDA                     __pidataBANK1:	
   772                           
   773                           ;initializer for SetupGPS@F4927
   774  0BDA  3431               	retlw	49
   775  0BDB  3430               	retlw	48
   776  0BDC  3433               	retlw	51
   777  0BDD  3400               	retlw	0
   778                           
   779                           ;initializer for _validLatitude
   780  0BDE  3428               	retlw	40
   781  0BDF  3419               	retlw	25
   782  0BE0  3414               	retlw	20
   783                           
   784                           ;initializer for _validLongitude
   785  0BE1  3456               	retlw	86
   786  0BE2  3444               	retlw	68
   787  0BE3  3414               	retlw	20
   788                           
   789                           	psect	idataBANK2
   790  0CC8                     __pidataBANK2:	
   791                           
   792                           ;initializer for DisableGPS@F4922
   793  0CC8  3424               	retlw	36
   794  0CC9  3450               	retlw	80
   795  0CCA  3453               	retlw	83
   796  0CCB  3452               	retlw	82
   797  0CCC  3446               	retlw	70
   798  0CCD  3431               	retlw	49
   799  0CCE  3431               	retlw	49
   800  0CCF  3437               	retlw	55
   801  0CD0  342C               	retlw	44
   802  0CD1  3431               	retlw	49
   803  0CD2  3436               	retlw	54
   804  0CD3  342A               	retlw	42
   805  0CD4  3400               	retlw	0
   806                           
   807                           ;initializer for DecodeGPS@F4935
   808  0CD5  3424               	retlw	36
   809  0CD6  3447               	retlw	71
   810  0CD7  3450               	retlw	80
   811  0CD8  3447               	retlw	71
   812  0CD9  344C               	retlw	76
   813  0CDA  344C               	retlw	76
   814  0CDB  3400               	retlw	0
   815                           
   816                           ;initializer for SetupGPS@F4925
   817  0CDC  3424               	retlw	36
   818  0CDD  3450               	retlw	80
   819  0CDE  3453               	retlw	83
   820  0CDF  3452               	retlw	82
   821  0CE0  3446               	retlw	70
   822  0CE1  3400               	retlw	0
   823                           
   824                           	psect	idataBANK3
   825  0C83                     __pidataBANK3:	
   826                           
   827                           ;initializer for UpdateGPS@F4933
   828  0C83  3424               	retlw	36
   829  0C84  3450               	retlw	80
   830  0C85  3453               	retlw	83
   831  0C86  3452               	retlw	82
   832  0C87  3446               	retlw	70
   833  0C88  3431               	retlw	49
   834  0C89  3430               	retlw	48
   835  0C8A  3433               	retlw	51
   836  0C8B  342C               	retlw	44
   837  0C8C  3430               	retlw	48
   838  0C8D  3431               	retlw	49
   839  0C8E  342C               	retlw	44
   840  0C8F  3430               	retlw	48
   841  0C90  3430               	retlw	48
   842  0C91  342C               	retlw	44
   843  0C92  3430               	retlw	48
   844  0C93  3431               	retlw	49
   845  0C94  342C               	retlw	44
   846  0C95  3430               	retlw	48
   847  0C96  3430               	retlw	48
   848  0C97  342A               	retlw	42
   849  0C98  3400               	retlw	0
   850                           
   851                           	psect	stringtext
   852  0800                     __pstringtext:	
   853  0800                     _dpowers:	
   854  0800  3401               	retlw	1
   855  0801  3400               	retlw	0
   856  0802  340A               	retlw	10
   857  0803  3400               	retlw	0
   858  0804  3464               	retlw	100
   859  0805  3400               	retlw	0
   860  0806  34E8               	retlw	232
   861  0807  3403               	retlw	3
   862  0808  3410               	retlw	16
   863  0809  3427               	retlw	39
   864  080A                     __end_of_dpowers:	
   865  000B                     _INTCONbits	set	11
   866  0011                     _PIR1bits	set	17
   867  000C                     _PORTAbits	set	12
   868  000D                     _PORTBbits	set	13
   869  000E                     _PORTCbits	set	14
   870  0018                     _T1CONbits	set	24
   871  0019                     _T1GCONbits	set	25
   872  0015                     _TMR0	set	21
   873  0017                     _TMR1H	set	23
   874  0016                     _TMR1L	set	22
   875  008E                     _ADIF	set	142
   876  005F                     _GIE	set	95
   877  005E                     _PEIE	set	94
   878  005D                     _TMR0IE	set	93
   879  005A                     _TMR0IF	set	90
   880  0088                     _TMR1IF	set	136
   881  00C0                     _TMR1ON	set	192
   882  009D                     _ADCON0bits	set	157
   883  009E                     _ADCON1bits	set	158
   884  009F                     _ADCON2bits	set	159
   885  009C                     _ADRESH	set	156
   886  0099                     _OSCCONbits	set	153
   887  0091                     _PIE1bits	set	145
   888  008C                     _TRISAbits	set	140
   889  008D                     _TRISBbits	set	141
   890  008E                     _TRISCbits	set	142
   891  0097                     _WDTCONbits	set	151
   892  048E                     _ADIE	set	1166
   893  04A8                     _PS0	set	1192
   894  04A9                     _PS1	set	1193
   895  04AA                     _PS2	set	1194
   896  04AB                     _PSA	set	1195
   897  048D                     _RCIE	set	1165
   898  04AD                     _TMR0CS	set	1197
   899  0488                     _TMR1IE	set	1160
   900  010D                     _LATBbits	set	269
   901  010E                     _LATCbits	set	270
   902  0872                     _LATC2	set	2162
   903  018C                     _ANSELAbits	set	396
   904  018D                     _ANSELBbits	set	397
   905  0199                     _RCREG	set	409
   906  019D                     _RCSTAbits	set	413
   907  019C                     _SPBRGH	set	412
   908  019B                     _SPBRGL	set	411
   909  019A                     _TXREG	set	410
   910  019E                     _TXSTAbits	set	414
   911  0CE9                     _OERR	set	3305
   912  0211                     _SSPBUF	set	529
   913  0215                     _SSPCON1bits	set	533
   914  0214                     _SSPSTATbits	set	532
   915  0393                     _IOCAF	set	915
   916  0393                     _IOCAFbits	set	915
   917  0392                     _IOCANbits	set	914
   918  0391                     _IOCAPbits	set	913
   919  0396                     _IOCBF	set	918
   920  0396                     _IOCBFbits	set	918
   921  0395                     _IOCBNbits	set	917
   922  0394                     _IOCBPbits	set	916
   923  080A                     __stringdata:	
   924  080A                     STR_1:	
   925  080A  3425               	retlw	37	;'%'
   926  080B  3473               	retlw	115	;'s'
   927  080C  3425               	retlw	37	;'%'
   928  080D  3473               	retlw	115	;'s'
   929  080E  342C               	retlw	44	;','
   930  080F  3430               	retlw	48	;'0'
   931  0810  3425               	retlw	37	;'%'
   932  0811  3464               	retlw	100	;'d'
   933  0812  342C               	retlw	44	;','
   934  0813  3430               	retlw	48	;'0'
   935  0814  3430               	retlw	48	;'0'
   936  0815  342C               	retlw	44	;','
   937  0816  3430               	retlw	48	;'0'
   938  0817  3430               	retlw	48	;'0'
   939  0818  342C               	retlw	44	;','
   940  0819  3430               	retlw	48	;'0'
   941  081A  3430               	retlw	48	;'0'
   942  081B  342A               	retlw	42	;'*'
   943  081C  3400               	retlw	0
   944  081D                     STR_2:	
   945  081D  3428               	retlw	40	;'('
   946  081E  346E               	retlw	110	;'n'
   947  081F  3475               	retlw	117	;'u'
   948  0820  346C               	retlw	108	;'l'
   949  0821  346C               	retlw	108	;'l'
   950  0822  3429               	retlw	41	;')'
   951  0823  3400               	retlw	0
   952  0824                     __end_of__stringdata:	
   953                           
   954                           ; #config settings
   955  0000                     
   956                           	psect	cinit
   957  00DA                     start_initialization:	
   958  00DA                     __initialization:	
   959                           
   960                           ; Clear objects allocated to COMMON
   961  00DA  01F9               	clrf	__pbssCOMMON& (0+127)
   962  00DB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   963  00DC  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   964  00DD  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   965  00DE  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   966                           
   967                           ; Clear objects allocated to BANK0
   968  00DF  01E5               	clrf	__pbssBANK0& (0+127)
   969  00E0  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   970  00E1  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   971  00E2  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   972  00E3  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   973  00E4  01EA               	clrf	(__pbssBANK0+5)& (0+127)
   974                           
   975                           ; Clear objects allocated to BANK1
   976  00E5  0021               	movlb	1	; select bank1
   977  00E6  01E8               	clrf	__pbssBANK1& (0+127)
   978  00E7  01E9               	clrf	(__pbssBANK1+1)& (0+127)
   979  00E8  01EA               	clrf	(__pbssBANK1+2)& (0+127)
   980  00E9  01EB               	clrf	(__pbssBANK1+3)& (0+127)
   981  00EA  01EC               	clrf	(__pbssBANK1+4)& (0+127)
   982  00EB  01ED               	clrf	(__pbssBANK1+5)& (0+127)
   983                           
   984                           ; Clear objects allocated to BANK2
   985  00EC  3020               	movlw	low __pbssBANK2
   986  00ED  0084               	movwf	4
   987  00EE  3001               	movlw	high __pbssBANK2
   988  00EF  0085               	movwf	5
   989  00F0  3036               	movlw	54
   990  00F1  318B  23BB  3180   	fcall	clear_ram0
   991                           
   992                           ; Clear objects allocated to BANK3
   993  00F4  30A0               	movlw	low __pbssBANK3
   994  00F5  0084               	movwf	4
   995  00F6  3001               	movlw	high __pbssBANK3
   996  00F7  0085               	movwf	5
   997  00F8  3033               	movlw	51
   998  00F9  318B  23BB  3180   	fcall	clear_ram0
   999                           
  1000                           ; Clear objects allocated to BANK4
  1001  00FC  3020               	movlw	low __pbssBANK4
  1002  00FD  0084               	movwf	4
  1003  00FE  3002               	movlw	high __pbssBANK4
  1004  00FF  0085               	movwf	5
  1005  0100  3048               	movlw	72
  1006  0101  318B  23BB  3180   	fcall	clear_ram0
  1007                           
  1008                           ; Initialize objects allocated to BANK0
  1009  0104  30B2               	movlw	low __pidataBANK0
  1010  0105  0084               	movwf	4
  1011  0106  308B               	movlw	(high __pidataBANK0)| (0+128)
  1012  0107  0085               	movwf	5
  1013  0108  306B               	movlw	low __pdataBANK0
  1014  0109  0086               	movwf	6
  1015  010A  3000               	movlw	high __pdataBANK0
  1016  010B  0087               	movwf	7
  1017  010C  3003               	movlw	3
  1018  010D  318B  23B5  3180   	fcall	init_ram
  1019                           
  1020                           ; Initialize objects allocated to BANK1
  1021  0110  30DA               	movlw	low __pidataBANK1
  1022  0111  0084               	movwf	4
  1023  0112  308B               	movlw	(high __pidataBANK1)| (0+128)
  1024  0113  0085               	movwf	5
  1025  0114  30DE               	movlw	low __pdataBANK1
  1026  0115  0086               	movwf	6
  1027  0116  3000               	movlw	high __pdataBANK1
  1028  0117  0087               	movwf	7
  1029  0118  300A               	movlw	10
  1030  0119  318B  23B5  3180   	fcall	init_ram
  1031                           
  1032                           ; Initialize objects allocated to BANK2
  1033  011C  30C8               	movlw	low __pidataBANK2
  1034  011D  0084               	movwf	4
  1035  011E  308C               	movlw	(high __pidataBANK2)| (0+128)
  1036  011F  0085               	movwf	5
  1037  0120  3056               	movlw	low __pdataBANK2
  1038  0121  0086               	movwf	6
  1039  0122  3001               	movlw	high __pdataBANK2
  1040  0123  0087               	movwf	7
  1041  0124  301A               	movlw	26
  1042  0125  318B  23B5  3180   	fcall	init_ram
  1043                           
  1044                           ; Initialize objects allocated to BANK3
  1045  0128  3083               	movlw	low __pidataBANK3
  1046  0129  0084               	movwf	4
  1047  012A  308C               	movlw	(high __pidataBANK3)| (0+128)
  1048  012B  0085               	movwf	5
  1049  012C  30D3               	movlw	low __pdataBANK3
  1050  012D  0086               	movwf	6
  1051  012E  3001               	movlw	high __pdataBANK3
  1052  012F  0087               	movwf	7
  1053  0130  3016               	movlw	22
  1054  0131  318B  23B5         	fcall	init_ram
  1055  0133                     end_of_initialization:	
  1056                           ;End of C runtime variable initialization code
  1057                           
  1058  0133                     __end_of__initialization:	
  1059  0133  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1060  0134  0020               	movlb	0
  1061  0135  3185  2D30         	ljmp	_main	;jump to C main() function
  1062                           
  1063                           	psect	bssCOMMON
  1064  0079                     __pbssCOMMON:	
  1065  0079                     _end:	
  1066  0079                     	ds	2
  1067  007B                     _start:	
  1068  007B                     	ds	2
  1069  007D                     _gpsIndex:	
  1070  007D                     	ds	1
  1071                           
  1072                           	psect	bssBANK0
  1073  0065                     __pbssBANK0:	
  1074  0065                     _eeprom_timeoutFlag:	
  1075  0065                     	ds	1
  1076  0066                     _gpsTimeoutState:	
  1077  0066                     	ds	1
  1078  0067                     _hasValidGPSFlag:	
  1079  0067                     	ds	1
  1080  0068                     _messageDoneFlag:	
  1081  0068                     	ds	1
  1082  0069                     _recordFlag:	
  1083  0069                     	ds	1
  1084  006A                     _strobeFlag:	
  1085  006A                     	ds	1
  1086                           
  1087                           	psect	dataBANK0
  1088  006B                     __pdataBANK0:	
  1089  006B                     _gpsInvalidFlag:	
  1090  006B                     	ds	1
  1091  006C                     _validEastWest:	
  1092  006C                     	ds	1
  1093  006D                     _validNorthSouth:	
  1094  006D                     	ds	1
  1095                           
  1096                           	psect	bssBANK1
  1097  00E8                     __pbssBANK1:	
  1098  00E8                     DecodeGPS@F4937:	
  1099  00E8                     	ds	3
  1100  00EB                     DecodeGPS@F4939:	
  1101  00EB                     	ds	3
  1102                           
  1103                           	psect	dataBANK1
  1104  00DE                     __pdataBANK1:	
  1105  00DE                     SetupGPS@F4927:	
  1106  00DE                     	ds	4
  1107  00E2                     _validLatitude:	
  1108  00E2                     	ds	3
  1109  00E5                     _validLongitude:	
  1110  00E5                     	ds	3
  1111                           
  1112                           	psect	bssBANK2
  1113  0120                     __pbssBANK2:	
  1114  0120                     _recordEndAdress:	
  1115  0120                     	ds	4
  1116  0124                     _gpsMessage:	
  1117  0124                     	ds	50
  1118                           
  1119                           	psect	dataBANK2
  1120  0156                     __pdataBANK2:	
  1121  0156                     DisableGPS@F4922:	
  1122  0156                     	ds	13
  1123  0163                     DecodeGPS@F4935:	
  1124  0163                     	ds	7
  1125  016A                     SetupGPS@F4925:	
  1126  016A                     	ds	6
  1127                           
  1128                           	psect	bssBANK3
  1129  01A0                     __pbssBANK3:	
  1130  01A0                     _buffer:	
  1131  01A0                     	ds	51
  1132                           
  1133                           	psect	dataBANK3
  1134  01D3                     __pdataBANK3:	
  1135  01D3                     UpdateGPS@F4933:	
  1136  01D3                     	ds	22
  1137                           
  1138                           	psect	bssBANK4
  1139  0220                     __pbssBANK4:	
  1140  0220                     _preRecordingAddresses:	
  1141  0220                     	ds	72
  1142                           
  1143                           	psect	clrtext
  1144  0BBB                     clear_ram0:	
  1145                           ;	Called with FSR0 containing the base address, and
  1146                           ;	WREG with the size to clear
  1147                           
  1148  0BBB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1149  0BBC                     clrloop0:	
  1150  0BBC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1151  0BBD  3101               	addfsr 0,1
  1152  0BBE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1153  0BBF  2BBC               	goto	clrloop0	;have we reached the end yet?
  1154  0BC0  3400               	retlw	0	;all done for this memory range, return
  1155                           
  1156                           	psect	inittext
  1157  0BB5                     init_ram:	
  1158  0BB5  00FE               	movwf	126
  1159  0BB6                     initloop:	
  1160  0BB6  0012               	moviw fsr0++
  1161  0BB7  001E               	movwi fsr1++
  1162  0BB8  0BFE               	decfsz	126,f
  1163  0BB9  2BB6               	goto	initloop
  1164  0BBA  3400               	retlw	0
  1165                           
  1166                           	psect	cstackBANK1
  1167  00A0                     __pcstackBANK1:	
  1168  00A0                     SetupGPS@message:	
  1169                           
  1170                           ; 50 bytes @ 0x0
  1171  00A0                     	ds	50
  1172  00D2                     SetupGPS@startSequence:	
  1173                           
  1174                           ; 6 bytes @ 0x32
  1175  00D2                     	ds	6
  1176  00D8                     SetupGPS@MID:	
  1177                           
  1178                           ; 4 bytes @ 0x38
  1179  00D8                     	ds	4
  1180  00DC                     SetupGPS@x:	
  1181                           
  1182                           ; 2 bytes @ 0x3C
  1183  00DC                     	ds	2
  1184                           
  1185                           	psect	cstackCOMMON
  1186  0070                     __pcstackCOMMON:	
  1187  0070                     ?_InitCLK:	
  1188  0070                     ?_InitGPIO:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  0070                     ?_InitADC:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  0070                     ?_InitTimer0:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  0070                     ?_InitTimer1:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  0070                     ?_InitWatchdog:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0070                     ?_InitUART:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0070                     ?_ToggleSleepGPS:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0070                     ?_SetupGPS:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0070                     ?_RecordMode:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0070                     ?_UpdateGPS:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0070                     ?_GoToSleep:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0070                     ?_Hibernate:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0070                     ?_WriteBuffer:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0070                     ??_WriteBuffer:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0070                     ?_DecodeGPS:	
  1231                           ; 0 bytes @ 0x0
  1232                           
  1233  0070                     ?_SendGPSSPI:	
  1234                           ; 0 bytes @ 0x0
  1235                           
  1236  0070                     ?_isr:	
  1237                           ; 0 bytes @ 0x0
  1238                           
  1239  0070                     ?_InitSPI:	
  1240                           ; 0 bytes @ 0x0
  1241                           
  1242  0070                     ?_WriteSPI:	
  1243                           ; 0 bytes @ 0x0
  1244                           
  1245  0070                     ?_uart_xmit:	
  1246                           ; 0 bytes @ 0x0
  1247                           
  1248  0070                     ?_CheckDisconnect:	
  1249                           ; 0 bytes @ 0x0
  1250                           
  1251  0070                     ?_ReadSPI:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_ReadStatusSPI:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_ReadBuffer:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x0
  1262  0070                     	ds	1
  1263  0071                     WriteBuffer@data:	
  1264                           
  1265                           ; 1 bytes @ 0x1
  1266  0071                     	ds	1
  1267  0072                     ??_isr:	
  1268                           
  1269                           ; 0 bytes @ 0x2
  1270  0072                     	ds	5
  1271  0077                     _isr$541:	
  1272                           
  1273                           ; 2 bytes @ 0x7
  1274  0077                     	ds	2
  1275                           
  1276                           	psect	cstackBANK0
  1277  0020                     __pcstackBANK0:	
  1278  0020                     ??_InitCLK:	
  1279  0020                     ??_InitGPIO:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0020                     ??_InitADC:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0020                     ??_InitTimer0:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0020                     ??_InitTimer1:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0020                     ??_InitWatchdog:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0020                     ??_InitUART:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0020                     ??_ToggleSleepGPS:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0020                     ??_GoToSleep:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0020                     ??_Hibernate:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0020                     ??_InitSPI:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0020                     ??_WriteSPI:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0020                     ??_ReadSPI:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0020                     ??_ReadBuffer:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0020                     ??_uart_xmit:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0020                     ?_compute_checksum:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0020                     ?___bmul:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0020                     ?___wmul:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0020                     ?___lwdiv:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333  0020                     uart_xmit@mydata_byte:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336  0020                     ___bmul@multiplicand:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0020                     compute_checksum@size:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0020                     ___wmul@multiplier:	
  1343                           ; 2 bytes @ 0x0
  1344                           
  1345  0020                     ___lwdiv@divisor:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x0
  1350  0020                     	ds	1
  1351  0021                     ??___bmul:	
  1352  0021                     ReadSPI@dataByte:	
  1353                           ; 0 bytes @ 0x1
  1354                           
  1355  0021                     ReadBuffer@read_data:	
  1356                           ; 1 bytes @ 0x1
  1357                           
  1358  0021                     GoToSleep@count:	
  1359                           ; 1 bytes @ 0x1
  1360                           
  1361  0021                     Hibernate@count:	
  1362                           ; 1 bytes @ 0x1
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x1
  1366  0021                     	ds	1
  1367  0022                     ??_compute_checksum:	
  1368  0022                     ___bmul@product:	
  1369                           ; 0 bytes @ 0x2
  1370                           
  1371  0022                     WriteSPI@temp:	
  1372                           ; 1 bytes @ 0x2
  1373                           
  1374  0022                     ___wmul@multiplicand:	
  1375                           ; 2 bytes @ 0x2
  1376                           
  1377  0022                     ___lwdiv@dividend:	
  1378                           ; 2 bytes @ 0x2
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0x2
  1382  0022                     	ds	1
  1383  0023                     ___bmul@multiplier:	
  1384                           
  1385                           ; 1 bytes @ 0x3
  1386  0023                     	ds	1
  1387  0024                     ??___wmul:	
  1388  0024                     ??___lwdiv:	
  1389                           ; 0 bytes @ 0x4
  1390                           
  1391  0024                     WriteSPI@databyte:	
  1392                           ; 0 bytes @ 0x4
  1393                           
  1394  0024                     compute_checksum@checksum:	
  1395                           ; 1 bytes @ 0x4
  1396                           
  1397  0024                     ___wmul@product:	
  1398                           ; 1 bytes @ 0x4
  1399                           
  1400                           
  1401                           ; 2 bytes @ 0x4
  1402  0024                     	ds	1
  1403  0025                     ??_ReadStatusSPI:	
  1404  0025                     compute_checksum@data:	
  1405                           ; 0 bytes @ 0x5
  1406                           
  1407  0025                     ___lwdiv@quotient:	
  1408                           ; 1 bytes @ 0x5
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x5
  1412  0025                     	ds	1
  1413  0026                     ?___awdiv:	
  1414  0026                     ReadStatusSPI@dataRead:	
  1415                           ; 2 bytes @ 0x6
  1416                           
  1417  0026                     compute_checksum@x:	
  1418                           ; 1 bytes @ 0x6
  1419                           
  1420  0026                     ___awdiv@divisor:	
  1421                           ; 2 bytes @ 0x6
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x6
  1425  0026                     	ds	1
  1426  0027                     ??_CheckDisconnect:	
  1427  0027                     ?_WriteOverheadSPI:	
  1428                           ; 0 bytes @ 0x7
  1429                           
  1430  0027                     ___lwdiv@counter:	
  1431                           ; 0 bytes @ 0x7
  1432                           
  1433  0027                     WriteOverheadSPI@address:	
  1434                           ; 1 bytes @ 0x7
  1435                           
  1436                           
  1437                           ; 4 bytes @ 0x7
  1438  0027                     	ds	1
  1439  0028                     ?_uart_write_message:	
  1440  0028                     ?___lwmod:	
  1441                           ; 0 bytes @ 0x8
  1442                           
  1443  0028                     CheckDisconnect@status:	
  1444                           ; 2 bytes @ 0x8
  1445                           
  1446  0028                     uart_write_message@size:	
  1447                           ; 1 bytes @ 0x8
  1448                           
  1449  0028                     ___awdiv@dividend:	
  1450                           ; 2 bytes @ 0x8
  1451                           
  1452  0028                     ___lwmod@divisor:	
  1453                           ; 2 bytes @ 0x8
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x8
  1457  0028                     	ds	2
  1458  002A                     ??_uart_write_message:	
  1459  002A                     ??___awdiv:	
  1460                           ; 0 bytes @ 0xA
  1461                           
  1462  002A                     ___lwmod@dividend:	
  1463                           ; 0 bytes @ 0xA
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0xA
  1467  002A                     	ds	1
  1468  002B                     ??_WriteOverheadSPI:	
  1469  002B                     ___awdiv@counter:	
  1470                           ; 0 bytes @ 0xB
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0xB
  1474  002B                     	ds	1
  1475  002C                     ??___lwmod:	
  1476  002C                     ___awdiv@sign:	
  1477                           ; 0 bytes @ 0xC
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0xC
  1481  002C                     	ds	1
  1482  002D                     ___lwmod@counter:	
  1483  002D                     _uart_write_message$1397:	
  1484                           ; 1 bytes @ 0xD
  1485                           
  1486  002D                     ___awdiv@quotient:	
  1487                           ; 2 bytes @ 0xD
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0xD
  1491  002D                     	ds	1
  1492  002E                     ?_sprintf:	
  1493  002E                     sprintf@f:	
  1494                           ; 2 bytes @ 0xE
  1495                           
  1496                           
  1497                           ; 2 bytes @ 0xE
  1498  002E                     	ds	1
  1499  002F                     ??_DecodeGPS:	
  1500  002F                     _uart_write_message$1398:	
  1501                           ; 0 bytes @ 0xF
  1502                           
  1503                           
  1504                           ; 2 bytes @ 0xF
  1505  002F                     	ds	2
  1506  0031                     uart_write_message@x:	
  1507  0031                     WriteOverheadSPI@address_bytes:	
  1508                           ; 2 bytes @ 0x11
  1509                           
  1510                           
  1511                           ; 3 bytes @ 0x11
  1512  0031                     	ds	1
  1513  0032                     DecodeGPS@messageID:	
  1514                           
  1515                           ; 7 bytes @ 0x12
  1516  0032                     	ds	1
  1517  0033                     uart_write_message@checksum:	
  1518                           
  1519                           ; 1 bytes @ 0x13
  1520  0033                     	ds	1
  1521  0034                     ??_sprintf:	
  1522  0034                     WriteOverheadSPI@StatusReg:	
  1523                           ; 0 bytes @ 0x14
  1524                           
  1525  0034                     uart_write_message@data:	
  1526                           ; 1 bytes @ 0x14
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x14
  1530  0034                     	ds	1
  1531  0035                     ??_SendGPSSPI:	
  1532  0035                     uart_write_message@ascii_checksum:	
  1533                           ; 0 bytes @ 0x15
  1534                           
  1535                           
  1536                           ; 2 bytes @ 0x15
  1537  0035                     	ds	1
  1538  0036                     SendGPSSPI@address:	
  1539                           
  1540                           ; 4 bytes @ 0x16
  1541  0036                     	ds	2
  1542  0038                     sprintf@flag:	
  1543                           
  1544                           ; 1 bytes @ 0x18
  1545  0038                     	ds	1
  1546  0039                     DecodeGPS@northSouth:	
  1547  0039                     sprintf@prec:	
  1548                           ; 1 bytes @ 0x19
  1549                           
  1550                           
  1551                           ; 1 bytes @ 0x19
  1552  0039                     	ds	1
  1553  003A                     DecodeGPS@eastWest:	
  1554  003A                     sprintf@ap:	
  1555                           ; 1 bytes @ 0x1A
  1556                           
  1557  003A                     SendGPSSPI@x:	
  1558                           ; 1 bytes @ 0x1A
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0x1A
  1562  003A                     	ds	1
  1563  003B                     DecodeGPS@status:	
  1564  003B                     sprintf@sp:	
  1565                           ; 1 bytes @ 0x1B
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x1B
  1569  003B                     	ds	1
  1570  003C                     ??_RecordMode:	
  1571  003C                     DecodeGPS@latitude:	
  1572                           ; 0 bytes @ 0x1C
  1573                           
  1574  003C                     sprintf@_val:	
  1575                           ; 3 bytes @ 0x1C
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0x1C
  1579  003C                     	ds	3
  1580  003F                     DecodeGPS@longitude:	
  1581                           
  1582                           ; 3 bytes @ 0x1F
  1583  003F                     	ds	1
  1584  0040                     sprintf@c:	
  1585                           
  1586                           ; 1 bytes @ 0x20
  1587  0040                     	ds	1
  1588  0041                     ??_SetupGPS:	
  1589  0041                     RecordMode@count:	
  1590                           ; 0 bytes @ 0x21
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x21
  1594  0041                     	ds	1
  1595  0042                     DecodeGPS@x:	
  1596                           
  1597                           ; 2 bytes @ 0x22
  1598  0042                     	ds	1
  1599  0043                     RecordMode@address:	
  1600                           
  1601                           ; 4 bytes @ 0x23
  1602  0043                     	ds	1
  1603  0044                     ??_UpdateGPS:	
  1604                           
  1605                           ; 0 bytes @ 0x24
  1606  0044                     	ds	1
  1607  0045                     UpdateGPS@GPSupdateMessage:	
  1608                           
  1609                           ; 22 bytes @ 0x25
  1610  0045                     	ds	22
  1611  005B                     UpdateGPS@timeoutCounter:	
  1612                           
  1613                           ; 2 bytes @ 0x3B
  1614  005B                     	ds	2
  1615  005D                     ?_main:	
  1616  005D                     main@argc:	
  1617                           ; 2 bytes @ 0x3D
  1618                           
  1619                           
  1620                           ; 2 bytes @ 0x3D
  1621  005D                     	ds	2
  1622  005F                     main@argv:	
  1623                           
  1624                           ; 2 bytes @ 0x3F
  1625  005F                     	ds	2
  1626  0061                     ??_main:	
  1627                           
  1628                           ; 0 bytes @ 0x41
  1629  0061                     	ds	3
  1630  0064                     main@periodicCounter:	
  1631                           
  1632                           ; 1 bytes @ 0x44
  1633  0064                     	ds	1
  1634                           
  1635                           	psect	maintext
  1636  0530                     __pmaintext:	
  1637 ;;
  1638 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1639 ;;
  1640 ;; *************** function _main *****************
  1641 ;; Defined at:
  1642 ;;		line 20 in file "launcher_main.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  argc            2   61[BANK0 ] int 
  1645 ;;  argv            2   63[BANK0 ] PTR PTR unsigned char 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  periodicCoun    1   68[BANK0 ] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   61[BANK0 ] int 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 17F/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1657 ;;      Params:         0       4       0       0       0       0       0       0
  1658 ;;      Locals:         0       1       0       0       0       0       0       0
  1659 ;;      Temps:          0       3       0       0       0       0       0       0
  1660 ;;      Totals:         0       8       0       0       0       0       0       0
  1661 ;;Total ram usage:        8 bytes
  1662 ;; Hardware stack levels required when called:    7
  1663 ;; This function calls:
  1664 ;;		_GoToSleep
  1665 ;;		_Hibernate
  1666 ;;		_InitADC
  1667 ;;		_InitCLK
  1668 ;;		_InitGPIO
  1669 ;;		_InitTimer0
  1670 ;;		_InitTimer1
  1671 ;;		_InitUART
  1672 ;;		_InitWatchdog
  1673 ;;		_RecordMode
  1674 ;;		_SetupGPS
  1675 ;;		_ToggleSleepGPS
  1676 ;;		_UpdateGPS
  1677 ;; This function is called by:
  1678 ;;		Startup code after reset
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _main
  1684  0530                     _main:	
  1685                           
  1686                           ;launcher_main.c: 23: InitCLK();
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1690  0530  318B  23C8  3185   	fcall	_InitCLK
  1691                           
  1692                           ;launcher_main.c: 24: InitGPIO();
  1693  0533  318D  251C  3185   	fcall	_InitGPIO
  1694                           
  1695                           ;launcher_main.c: 25: InitADC();
  1696  0536  3187  27E7  3185   	fcall	_InitADC
  1697                           
  1698                           ;launcher_main.c: 27: InitTimer0();
  1699  0539  318B  23E4  3185   	fcall	_InitTimer0
  1700                           
  1701                           ;launcher_main.c: 28: InitTimer1();
  1702  053C  318B  23FC  3185   	fcall	_InitTimer1
  1703                           
  1704                           ;launcher_main.c: 29: InitWatchdog();
  1705  053F  318B  23C1  3185   	fcall	_InitWatchdog
  1706                           
  1707                           ;launcher_main.c: 30: InitUART();
  1708  0542  318C  240B  3185   	fcall	_InitUART
  1709                           
  1710                           ;launcher_main.c: 32: unsigned char periodicCounter = 10;
  1711  0545  300A               	movlw	10
  1712  0546  0020               	movlb	0	; select bank0
  1713  0547  00E1               	movwf	??_main
  1714  0548  0861               	movf	??_main,w
  1715  0549  00E4               	movwf	main@periodicCounter
  1716                           
  1717                           ;launcher_main.c: 33: gpsIndex = 0;
  1718  054A  01FD               	clrf	_gpsIndex	;volatile
  1719                           
  1720                           ;launcher_main.c: 35: INTCONbits.GIE = 1;
  1721  054B  178B               	bsf	11,7	;volatile
  1722                           
  1723                           ;launcher_main.c: 37: ToggleSleepGPS();
  1724  054C  318D  2549  3185   	fcall	_ToggleSleepGPS
  1725                           
  1726                           ;launcher_main.c: 38: SetupGPS();
  1727  054F  3187  276D  3185   	fcall	_SetupGPS
  1728                           
  1729                           ;launcher_main.c: 40: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1730  0552  0022               	movlb	2	; select bank2
  1731  0553  080D               	movf	13,w	;volatile
  1732  0554  39FF               	andlw	255
  1733  0555  39DF               	andlw	223
  1734  0556  0020               	movlb	0	; select bank0
  1735  0557  00E1               	movwf	??_main
  1736  0558  080D               	movf	13,w	;volatile
  1737  0559  0661               	xorwf	??_main,w
  1738  055A  3900               	andlw	-256
  1739  055B  0661               	xorwf	??_main,w
  1740  055C  008D               	movwf	13	;volatile
  1741                           
  1742                           ;launcher_main.c: 41: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1743  055D  0022               	movlb	2	; select bank2
  1744  055E  080D               	movf	13,w	;volatile
  1745  055F  39FF               	andlw	255
  1746  0560  3810               	iorlw	16
  1747  0561  0020               	movlb	0	; select bank0
  1748  0562  00E1               	movwf	??_main
  1749  0563  080D               	movf	13,w	;volatile
  1750  0564  0661               	xorwf	??_main,w
  1751  0565  3900               	andlw	-256
  1752  0566  0661               	xorwf	??_main,w
  1753  0567  008D               	movwf	13	;volatile
  1754                           
  1755                           ;launcher_main.c: 42: _delay((unsigned long)((100)*(16000000/4000.0)));
  1756  0568  3003               	movlw	3
  1757  0569  00E3               	movwf	??_main+2
  1758  056A  3008               	movlw	8
  1759  056B  00E2               	movwf	??_main+1
  1760  056C  3078               	movlw	120
  1761  056D  00E1               	movwf	??_main
  1762  056E                     u2917:	
  1763  056E  0BE1               	decfsz	??_main,f
  1764  056F  2D6E               	goto	u2917
  1765  0570  0BE2               	decfsz	??_main+1,f
  1766  0571  2D6E               	goto	u2917
  1767  0572  0BE3               	decfsz	??_main+2,f
  1768  0573  2D6E               	goto	u2917
  1769                           
  1770                           ;launcher_main.c: 43: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1771  0574  0022               	movlb	2	; select bank2
  1772  0575  080D               	movf	13,w	;volatile
  1773  0576  39FF               	andlw	255
  1774  0577  39EF               	andlw	239
  1775  0578  0020               	movlb	0	; select bank0
  1776  0579  00E1               	movwf	??_main
  1777  057A  080D               	movf	13,w	;volatile
  1778  057B  0661               	xorwf	??_main,w
  1779  057C  3900               	andlw	-256
  1780  057D  0661               	xorwf	??_main,w
  1781  057E  008D               	movwf	13	;volatile
  1782                           
  1783                           ;launcher_main.c: 46: LATC2 = (1);
  1784  057F  0022               	movlb	2	; select bank2
  1785  0580  150E               	bsf	14,2	;volatile
  1786  0581                     l2929:	
  1787                           ;launcher_main.c: 48: while(1){
  1788                           
  1789                           
  1790                           ;launcher_main.c: 58: LATC2 = (1);
  1791  0581  0022               	movlb	2	; select bank2
  1792  0582  150E               	bsf	14,2	;volatile
  1793                           
  1794                           ;launcher_main.c: 61: if(PORTAbits.RA1)
  1795  0583  0020               	movlb	0	; select bank0
  1796  0584  1C8C               	btfss	12,1	;volatile
  1797  0585  2D95               	goto	l114
  1798                           
  1799                           ;launcher_main.c: 62: {
  1800                           ;launcher_main.c: 64: PORTBbits.RB0 = 1;
  1801  0586  140D               	bsf	13,0	;volatile
  1802                           
  1803                           ;launcher_main.c: 65: _delay((unsigned long)((100)*(16000000/4000.0)));
  1804  0587  3003               	movlw	3
  1805  0588  00E3               	movwf	??_main+2
  1806  0589  3008               	movlw	8
  1807  058A  00E2               	movwf	??_main+1
  1808  058B  3078               	movlw	120
  1809  058C  00E1               	movwf	??_main
  1810  058D                     u2927:	
  1811  058D  0BE1               	decfsz	??_main,f
  1812  058E  2D8D               	goto	u2927
  1813  058F  0BE2               	decfsz	??_main+1,f
  1814  0590  2D8D               	goto	u2927
  1815  0591  0BE3               	decfsz	??_main+2,f
  1816  0592  2D8D               	goto	u2927
  1817                           
  1818                           ;launcher_main.c: 66: PORTBbits.RB0 = 0;
  1819  0593  0020               	movlb	0	; select bank0
  1820  0594  100D               	bcf	13,0	;volatile
  1821  0595                     l114:	
  1822                           
  1823                           ;launcher_main.c: 67: }
  1824                           ;launcher_main.c: 69: if(recordFlag)
  1825  0595  0869               	movf	_recordFlag,w
  1826  0596  1903               	btfsc	3,2
  1827  0597  2DAB               	goto	l2945
  1828                           
  1829                           ;launcher_main.c: 70: {
  1830                           ;launcher_main.c: 71: RecordMode();
  1831  0598  3183  2395  3185   	fcall	_RecordMode
  1832                           
  1833                           ;launcher_main.c: 72: recordFlag = 0;
  1834  059B  0020               	movlb	0	; select bank0
  1835  059C  01E9               	clrf	_recordFlag
  1836                           
  1837                           ;launcher_main.c: 73: _delay((unsigned long)((500)*(16000000/4000.0)));
  1838  059D  300B               	movlw	11
  1839  059E  00E3               	movwf	??_main+2
  1840  059F  3026               	movlw	38
  1841  05A0  00E2               	movwf	??_main+1
  1842  05A1  3066               	movlw	102
  1843  05A2  00E1               	movwf	??_main
  1844  05A3                     u2937:	
  1845  05A3  0BE1               	decfsz	??_main,f
  1846  05A4  2DA3               	goto	u2937
  1847  05A5  0BE2               	decfsz	??_main+1,f
  1848  05A6  2DA3               	goto	u2937
  1849  05A7  0BE3               	decfsz	??_main+2,f
  1850  05A8  2DA3               	goto	u2937
  1851  05A9  3200               	nop2
  1852  05AA  0020               	movlb	0	; select bank0
  1853  05AB                     l2945:	
  1854                           
  1855                           ;launcher_main.c: 74: }
  1856                           ;launcher_main.c: 77: if(gpsTimeoutState==0)
  1857  05AB  0020               	movlb	0	; select bank0
  1858  05AC  08E6               	movf	_gpsTimeoutState,f
  1859  05AD  1D03               	skipz
  1860  05AE  2DB3               	goto	l2949
  1861                           
  1862                           ;launcher_main.c: 78: UpdateGPS();
  1863  05AF  318E  261E  3185   	fcall	_UpdateGPS
  1864  05B2  2DDD               	goto	l2969
  1865  05B3                     l2949:	
  1866                           
  1867                           ;launcher_main.c: 79: else if(gpsTimeoutState==1)
  1868  05B3  0020               	movlb	0	; select bank0
  1869  05B4  0866               	movf	_gpsTimeoutState,w
  1870  05B5  3A01               	xorlw	1
  1871  05B6  1D03               	skipz
  1872  05B7  2DBD               	goto	l2955
  1873                           
  1874                           ;launcher_main.c: 80: {
  1875                           ;launcher_main.c: 81: ToggleSleepGPS();
  1876  05B8  318D  2549  3185   	fcall	_ToggleSleepGPS
  1877                           
  1878                           ;launcher_main.c: 82: gpsTimeoutState = 2;
  1879  05BB  3002               	movlw	2
  1880  05BC  2DC5               	goto	L1
  1881  05BD                     l2955:	
  1882                           ;launcher_main.c: 83: }
  1883                           
  1884                           
  1885                           ;launcher_main.c: 84: else if(gpsTimeoutState==2)
  1886  05BD  0866               	movf	_gpsTimeoutState,w
  1887  05BE  3A02               	xorlw	2
  1888  05BF  1D03               	skipz
  1889  05C0  2DCA               	goto	l2961
  1890                           
  1891                           ;launcher_main.c: 85: {
  1892                           ;launcher_main.c: 86: ToggleSleepGPS();
  1893  05C1  318D  2549  3185   	fcall	_ToggleSleepGPS
  1894                           
  1895                           ;launcher_main.c: 87: gpsTimeoutState = 3;
  1896  05C4  3003               	movlw	3
  1897  05C5                     L1:	
  1898  05C5  0020               	movlb	0	; select bank0
  1899  05C6  00E1               	movwf	??_main
  1900  05C7  0861               	movf	??_main,w
  1901  05C8  00E6               	movwf	_gpsTimeoutState
  1902                           
  1903                           ;launcher_main.c: 88: }
  1904  05C9  2DDD               	goto	l2969
  1905  05CA                     l2961:	
  1906                           
  1907                           ;launcher_main.c: 89: else if(gpsTimeoutState==3)
  1908  05CA  0866               	movf	_gpsTimeoutState,w
  1909  05CB  3A03               	xorlw	3
  1910  05CC  1D03               	skipz
  1911  05CD  2DDC               	goto	l2967
  1912                           
  1913                           ;launcher_main.c: 90: {
  1914                           ;launcher_main.c: 91: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1915  05CE  3015               	movlw	21
  1916  05CF  00E3               	movwf	??_main+2
  1917  05D0  304B               	movlw	75
  1918  05D1  00E2               	movwf	??_main+1
  1919  05D2  30D1               	movlw	209
  1920  05D3  00E1               	movwf	??_main
  1921  05D4                     u2947:	
  1922  05D4  0BE1               	decfsz	??_main,f
  1923  05D5  2DD4               	goto	u2947
  1924  05D6  0BE2               	decfsz	??_main+1,f
  1925  05D7  2DD4               	goto	u2947
  1926  05D8  0BE3               	decfsz	??_main+2,f
  1927  05D9  2DD4               	goto	u2947
  1928  05DA  0000               	nop
  1929                           
  1930                           ;launcher_main.c: 92: gpsTimeoutState = 0;
  1931  05DB  0020               	movlb	0	; select bank0
  1932  05DC                     l2967:	
  1933                           ;launcher_main.c: 93: }
  1934                           
  1935                           
  1936                           ;launcher_main.c: 94: else
  1937                           ;launcher_main.c: 95: {
  1938                           ;launcher_main.c: 96: gpsTimeoutState = 0;
  1939  05DC  01E6               	clrf	_gpsTimeoutState
  1940  05DD                     l2969:	
  1941                           
  1942                           ;launcher_main.c: 97: }
  1943                           ;launcher_main.c: 99: if(gpsInvalidFlag)
  1944  05DD  0020               	movlb	0	; select bank0
  1945  05DE  086B               	movf	_gpsInvalidFlag,w
  1946  05DF  1903               	btfsc	3,2
  1947  05E0  2E18               	goto	l2979
  1948                           
  1949                           ;launcher_main.c: 100: {
  1950                           ;launcher_main.c: 101: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1951  05E1  0022               	movlb	2	; select bank2
  1952  05E2  080D               	movf	13,w	;volatile
  1953  05E3  39FF               	andlw	255
  1954  05E4  3820               	iorlw	32
  1955  05E5  0020               	movlb	0	; select bank0
  1956  05E6  00E1               	movwf	??_main
  1957  05E7  080D               	movf	13,w	;volatile
  1958  05E8  0661               	xorwf	??_main,w
  1959  05E9  3900               	andlw	-256
  1960  05EA  0661               	xorwf	??_main,w
  1961  05EB  008D               	movwf	13	;volatile
  1962                           
  1963                           ;launcher_main.c: 102: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1964  05EC  0022               	movlb	2	; select bank2
  1965  05ED  080D               	movf	13,w	;volatile
  1966  05EE  39FF               	andlw	255
  1967  05EF  39EF               	andlw	239
  1968  05F0  0020               	movlb	0	; select bank0
  1969  05F1  00E1               	movwf	??_main
  1970  05F2  080D               	movf	13,w	;volatile
  1971  05F3  0661               	xorwf	??_main,w
  1972  05F4  3900               	andlw	-256
  1973  05F5  0661               	xorwf	??_main,w
  1974  05F6  008D               	movwf	13	;volatile
  1975                           
  1976                           ;launcher_main.c: 103: _delay((unsigned long)((250)*(16000000/4000.0)));
  1977  05F7  3006               	movlw	6
  1978  05F8  00E3               	movwf	??_main+2
  1979  05F9  3013               	movlw	19
  1980  05FA  00E2               	movwf	??_main+1
  1981  05FB  30B1               	movlw	177
  1982  05FC  00E1               	movwf	??_main
  1983  05FD                     u2957:	
  1984  05FD  0BE1               	decfsz	??_main,f
  1985  05FE  2DFD               	goto	u2957
  1986  05FF  0BE2               	decfsz	??_main+1,f
  1987  0600  2DFD               	goto	u2957
  1988  0601  0BE3               	decfsz	??_main+2,f
  1989  0602  2DFD               	goto	u2957
  1990  0603  3200               	nop2
  1991                           
  1992                           ;launcher_main.c: 104: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1993  0604  0022               	movlb	2	; select bank2
  1994  0605  080D               	movf	13,w	;volatile
  1995  0606  39FF               	andlw	255
  1996  0607  39DF               	andlw	223
  1997  0608  0020               	movlb	0	; select bank0
  1998  0609  00E1               	movwf	??_main
  1999  060A  080D               	movf	13,w	;volatile
  2000  060B  0661               	xorwf	??_main,w
  2001  060C  3900               	andlw	-256
  2002  060D  0661               	xorwf	??_main,w
  2003  060E  008D               	movwf	13	;volatile
  2004                           
  2005                           ;launcher_main.c: 105: if(periodicCounter < 14)
  2006  060F  300E               	movlw	14
  2007  0610  0264               	subwf	main@periodicCounter,w
  2008  0611  1803               	skipnc
  2009  0612  2E4A               	goto	l2985
  2010                           
  2011                           ;launcher_main.c: 106: periodicCounter++;
  2012  0613  3001               	movlw	1
  2013  0614  00E1               	movwf	??_main
  2014  0615  0861               	movf	??_main,w
  2015  0616  07E4               	addwf	main@periodicCounter,f
  2016                           
  2017                           ;launcher_main.c: 107: }
  2018  0617  2E4A               	goto	l2985
  2019  0618                     l2979:	
  2020                           
  2021                           ;launcher_main.c: 108: else
  2022                           ;launcher_main.c: 109: {
  2023                           ;launcher_main.c: 110: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  2024  0618  0022               	movlb	2	; select bank2
  2025  0619  080D               	movf	13,w	;volatile
  2026  061A  39FF               	andlw	255
  2027  061B  3810               	iorlw	16
  2028  061C  0020               	movlb	0	; select bank0
  2029  061D  00E1               	movwf	??_main
  2030  061E  080D               	movf	13,w	;volatile
  2031  061F  0661               	xorwf	??_main,w
  2032  0620  3900               	andlw	-256
  2033  0621  0661               	xorwf	??_main,w
  2034  0622  008D               	movwf	13	;volatile
  2035                           
  2036                           ;launcher_main.c: 111: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  2037  0623  0022               	movlb	2	; select bank2
  2038  0624  080D               	movf	13,w	;volatile
  2039  0625  39FF               	andlw	255
  2040  0626  39DF               	andlw	223
  2041  0627  0020               	movlb	0	; select bank0
  2042  0628  00E1               	movwf	??_main
  2043  0629  080D               	movf	13,w	;volatile
  2044  062A  0661               	xorwf	??_main,w
  2045  062B  3900               	andlw	-256
  2046  062C  0661               	xorwf	??_main,w
  2047  062D  008D               	movwf	13	;volatile
  2048                           
  2049                           ;launcher_main.c: 112: _delay((unsigned long)((250)*(16000000/4000.0)));
  2050  062E  3006               	movlw	6
  2051  062F  00E3               	movwf	??_main+2
  2052  0630  3013               	movlw	19
  2053  0631  00E2               	movwf	??_main+1
  2054  0632  30B1               	movlw	177
  2055  0633  00E1               	movwf	??_main
  2056  0634                     u2967:	
  2057  0634  0BE1               	decfsz	??_main,f
  2058  0635  2E34               	goto	u2967
  2059  0636  0BE2               	decfsz	??_main+1,f
  2060  0637  2E34               	goto	u2967
  2061  0638  0BE3               	decfsz	??_main+2,f
  2062  0639  2E34               	goto	u2967
  2063  063A  3200               	nop2
  2064                           
  2065                           ;launcher_main.c: 113: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  2066  063B  0022               	movlb	2	; select bank2
  2067  063C  080D               	movf	13,w	;volatile
  2068  063D  39FF               	andlw	255
  2069  063E  39EF               	andlw	239
  2070  063F  0020               	movlb	0	; select bank0
  2071  0640  00E1               	movwf	??_main
  2072  0641  080D               	movf	13,w	;volatile
  2073  0642  0661               	xorwf	??_main,w
  2074  0643  3900               	andlw	-256
  2075  0644  0661               	xorwf	??_main,w
  2076  0645  008D               	movwf	13	;volatile
  2077                           
  2078                           ;launcher_main.c: 114: periodicCounter = 10;
  2079  0646  300A               	movlw	10
  2080  0647  00E1               	movwf	??_main
  2081  0648  0861               	movf	??_main,w
  2082  0649  00E4               	movwf	main@periodicCounter
  2083  064A                     l2985:	
  2084                           
  2085                           ;launcher_main.c: 115: }
  2086                           ;launcher_main.c: 117: if(!recordFlag)
  2087  064A  08E9               	movf	_recordFlag,f
  2088  064B  1D03               	skipz
  2089  064C  2D81               	goto	l2929
  2090                           
  2091                           ;launcher_main.c: 118: {
  2092                           ;launcher_main.c: 119: if(PORTAbits.RA1)
  2093  064D  1C8C               	btfss	12,1	;volatile
  2094  064E  2E54               	goto	l2991
  2095                           
  2096                           ;launcher_main.c: 120: GoToSleep(10);
  2097  064F  300A               	movlw	10
  2098  0650  318C  243A  3185   	fcall	_GoToSleep
  2099  0653  2D81               	goto	l2929
  2100  0654                     l2991:	
  2101                           
  2102                           ;launcher_main.c: 121: else if(gpsInvalidFlag)
  2103  0654  0020               	movlb	0	; select bank0
  2104  0655  086B               	movf	_gpsInvalidFlag,w
  2105  0656  1903               	btfsc	3,2
  2106  0657  2E5D               	goto	l2995
  2107                           
  2108                           ;launcher_main.c: 122: GoToSleep(periodicCounter);
  2109  0658  0864               	movf	main@periodicCounter,w
  2110  0659  318C  243A  3185   	fcall	_GoToSleep
  2111  065C  2D81               	goto	l2929
  2112  065D                     l2995:	
  2113                           
  2114                           ;launcher_main.c: 123: else
  2115                           ;launcher_main.c: 124: {
  2116                           ;launcher_main.c: 125: ToggleSleepGPS();
  2117  065D  318D  2549  3185   	fcall	_ToggleSleepGPS
  2118                           
  2119                           ;launcher_main.c: 126: Hibernate();
  2120  0660  318C  24E2  3185   	fcall	_Hibernate
  2121                           
  2122                           ;launcher_main.c: 127: ToggleSleepGPS();
  2123  0663  318D  2549  3185   	fcall	_ToggleSleepGPS
  2124  0666  2D81               	goto	l2929
  2125  0667                     __end_of_main:	
  2126                           ;launcher_main.c: 128: }
  2127                           ;launcher_main.c: 129: }
  2128                           ;launcher_main.c: 132: }
  2129                           ;launcher_main.c: 134: return (0);
  2130                           ;	Return value of _main is never used
  2131                           
  2132                           
  2133                           	psect	text1
  2134  0E1E                     __ptext1:	
  2135 ;; *************** function _UpdateGPS *****************
  2136 ;; Defined at:
  2137 ;;		line 380 in file "launcher_functions.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  GPSupdateMes   22   37[BANK0 ] unsigned char [22]
  2142 ;;  timeoutCount    2   59[BANK0 ] unsigned int 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;		None               void
  2145 ;; Registers used:
  2146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2152 ;;      Params:         0       0       0       0       0       0       0       0
  2153 ;;      Locals:         0      24       0       0       0       0       0       0
  2154 ;;      Temps:          0       1       0       0       0       0       0       0
  2155 ;;      Totals:         0      25       0       0       0       0       0       0
  2156 ;;Total ram usage:       25 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    4
  2159 ;; This function calls:
  2160 ;;		_DecodeGPS
  2161 ;;		_uart_write_message
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _UpdateGPS
  2169  0E1E                     _UpdateGPS:	
  2170                           
  2171                           ;launcher_functions.c: 382: unsigned int timeoutCounter = 0;
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2175  0E1E  0020               	movlb	0	; select bank0
  2176  0E1F  01DB               	clrf	UpdateGPS@timeoutCounter
  2177  0E20  01DC               	clrf	UpdateGPS@timeoutCounter+1
  2178                           
  2179                           ;launcher_functions.c: 383: unsigned char GPSupdateMessage[22] = "$PSRF103,01,00,01,00*"
      +                          ;
  2180  0E21  30D3               	movlw	low UpdateGPS@F4933
  2181  0E22  0086               	movwf	6
  2182  0E23  3001               	movlw	high UpdateGPS@F4933
  2183  0E24  0087               	movwf	7
  2184  0E25  3045               	movlw	low UpdateGPS@GPSupdateMessage
  2185  0E26  0084               	movwf	4
  2186  0E27  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2187  0E28  0085               	movwf	5
  2188  0E29  3016               	movlw	22
  2189  0E2A  00C4               	movwf	??_UpdateGPS
  2190  0E2B                     u2370:	
  2191  0E2B  0016               	moviw fsr1++
  2192  0E2C  001A               	movwi fsr0++
  2193  0E2D  0BC4               	decfsz	??_UpdateGPS,f
  2194  0E2E  2E2B               	goto	u2370
  2195                           
  2196                           ;launcher_functions.c: 386: RCIE = 1;
  2197  0E2F  0021               	movlb	1	; select bank1
  2198  0E30  1691               	bsf	17,5	;volatile
  2199                           
  2200                           ;launcher_functions.c: 387: PEIE = 1;
  2201  0E31  170B               	bsf	11,6	;volatile
  2202                           
  2203                           ;launcher_functions.c: 388: GIE = 1;
  2204  0E32  178B               	bsf	11,7	;volatile
  2205                           
  2206                           ;launcher_functions.c: 393: gpsIndex = 0;
  2207  0E33  01FD               	clrf	_gpsIndex	;volatile
  2208                           
  2209                           ;launcher_functions.c: 394: uart_write_message(GPSupdateMessage, 22);
  2210  0E34  3016               	movlw	22
  2211  0E35  0020               	movlb	0	; select bank0
  2212  0E36  00A8               	movwf	uart_write_message@size
  2213  0E37  3000               	movlw	0
  2214  0E38  00A9               	movwf	uart_write_message@size+1
  2215  0E39  3045               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2216  0E3A  318F  278A  318E   	fcall	_uart_write_message
  2217                           
  2218                           ;launcher_functions.c: 397: TMR0IF = 0;
  2219  0E3D  110B               	bcf	11,2	;volatile
  2220                           
  2221                           ;launcher_functions.c: 398: TMR0 = 0x00;;
  2222  0E3E  0020               	movlb	0	; select bank0
  2223  0E3F  2E47               	goto	l2855
  2224  0E40                     l422:	
  2225                           ;launcher_functions.c: 399: while(!messageDoneFlag && (timeoutCounter <= 61))
  2226                           
  2227                           
  2228                           ;launcher_functions.c: 400: {
  2229                           ;launcher_functions.c: 401: if(INTCONbits.TMR0IF)
  2230  0E40  1D0B               	btfss	11,2	;volatile
  2231  0E41  2E48               	goto	l2857
  2232                           
  2233                           ;launcher_functions.c: 402: {
  2234                           ;launcher_functions.c: 403: timeoutCounter++;
  2235  0E42  3001               	movlw	1
  2236  0E43  07DB               	addwf	UpdateGPS@timeoutCounter,f
  2237  0E44  3000               	movlw	0
  2238  0E45  3DDC               	addwfc	UpdateGPS@timeoutCounter+1,f
  2239                           
  2240                           ;launcher_functions.c: 404: TMR0IF = 0;
  2241  0E46  110B               	bcf	11,2	;volatile
  2242  0E47                     l2855:	
  2243                           
  2244                           ;launcher_functions.c: 405: TMR0 = 0x00;;
  2245  0E47  0195               	clrf	21	;volatile
  2246  0E48                     l2857:	
  2247  0E48  08E8               	movf	_messageDoneFlag,f
  2248  0E49  1D03               	skipz
  2249  0E4A  2E52               	goto	l2861
  2250  0E4B  3000               	movlw	0
  2251  0E4C  025C               	subwf	UpdateGPS@timeoutCounter+1,w
  2252  0E4D  303E               	movlw	62
  2253  0E4E  1903               	skipnz
  2254  0E4F  025B               	subwf	UpdateGPS@timeoutCounter,w
  2255  0E50  1C03               	skipc
  2256  0E51  2E40               	goto	l422
  2257  0E52                     l2861:	
  2258                           
  2259                           ;launcher_functions.c: 406: }
  2260                           ;launcher_functions.c: 407: }
  2261                           ;launcher_functions.c: 408: if(timeoutCounter > 61)
  2262  0E52  3000               	movlw	0
  2263  0E53  025C               	subwf	UpdateGPS@timeoutCounter+1,w
  2264  0E54  303E               	movlw	62
  2265  0E55  1903               	skipnz
  2266  0E56  025B               	subwf	UpdateGPS@timeoutCounter,w
  2267  0E57  1C03               	skipc
  2268  0E58  2E5C               	goto	l2865
  2269                           
  2270                           ;launcher_functions.c: 409: {
  2271                           ;launcher_functions.c: 410: gpsTimeoutState = 1;
  2272  0E59  01E6               	clrf	_gpsTimeoutState
  2273  0E5A  0AE6               	incf	_gpsTimeoutState,f
  2274                           
  2275                           ;launcher_functions.c: 411: return;
  2276  0E5B  0008               	return
  2277  0E5C                     l2865:	
  2278                           
  2279                           ;launcher_functions.c: 412: }
  2280                           ;launcher_functions.c: 414: messageDoneFlag = 0;
  2281  0E5C  01E8               	clrf	_messageDoneFlag
  2282                           
  2283                           ;launcher_functions.c: 415: DecodeGPS();
  2284  0E5D  3181  2137         	fcall	_DecodeGPS
  2285  0E5F  0008               	return
  2286  0E60                     __end_of_UpdateGPS:	
  2287                           
  2288                           	psect	text2
  2289  0137                     __ptext2:	
  2290 ;; *************** function _DecodeGPS *****************
  2291 ;; Defined at:
  2292 ;;		line 421 in file "launcher_functions.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  messageID       7   18[BANK0 ] unsigned char [7]
  2297 ;;  longitude       3   31[BANK0 ] unsigned char [3]
  2298 ;;  latitude        3   28[BANK0 ] unsigned char [3]
  2299 ;;  x               2   34[BANK0 ] int 
  2300 ;;  status          1   27[BANK0 ] unsigned char 
  2301 ;;  eastWest        1   26[BANK0 ] unsigned char 
  2302 ;;  northSouth      1   25[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2312 ;;      Params:         0       0       0       0       0       0       0       0
  2313 ;;      Locals:         0      18       0       0       0       0       0       0
  2314 ;;      Temps:          0       3       0       0       0       0       0       0
  2315 ;;      Totals:         0      21       0       0       0       0       0       0
  2316 ;;Total ram usage:       21 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    3
  2319 ;; This function calls:
  2320 ;;		___awdiv
  2321 ;;		___bmul
  2322 ;;		___wmul
  2323 ;; This function is called by:
  2324 ;;		_UpdateGPS
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           
  2329                           ;psect for function _DecodeGPS
  2330  0137                     _DecodeGPS:	
  2331                           
  2332                           ;launcher_functions.c: 424: unsigned char messageID[7] = "$GPGLL";
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2336  0137  3063               	movlw	low DecodeGPS@F4935
  2337  0138  0086               	movwf	6
  2338  0139  3001               	movlw	high DecodeGPS@F4935
  2339  013A  0087               	movwf	7
  2340  013B  3032               	movlw	low DecodeGPS@messageID
  2341  013C  0084               	movwf	4
  2342  013D  3000               	movlw	high DecodeGPS@messageID
  2343  013E  0085               	movwf	5
  2344  013F  3007               	movlw	7
  2345  0140  0020               	movlb	0	; select bank0
  2346  0141  00AF               	movwf	??_DecodeGPS
  2347  0142                     u2020:	
  2348  0142  0016               	moviw fsr1++
  2349  0143  001A               	movwi fsr0++
  2350  0144  0BAF               	decfsz	??_DecodeGPS,f
  2351  0145  2942               	goto	u2020
  2352                           
  2353                           ;launcher_functions.c: 425: unsigned char latitude[3] = {0,0,0};
  2354  0146  0021               	movlb	1	; select bank1
  2355  0147  0868               	movf	DecodeGPS@F4937^(0+128),w
  2356  0148  0020               	movlb	0	; select bank0
  2357  0149  00BC               	movwf	DecodeGPS@latitude
  2358  014A  0021               	movlb	1	; select bank1
  2359  014B  0869               	movf	(DecodeGPS@F4937+1)^(0+128),w
  2360  014C  0020               	movlb	0	; select bank0
  2361  014D  00BD               	movwf	DecodeGPS@latitude+1
  2362  014E  0021               	movlb	1	; select bank1
  2363  014F  086A               	movf	(DecodeGPS@F4937+2)^(0+128),w
  2364  0150  0020               	movlb	0	; select bank0
  2365  0151  00BE               	movwf	DecodeGPS@latitude+2
  2366                           
  2367                           ;launcher_functions.c: 426: unsigned char longitude[3] = {0,0,0};
  2368  0152  0021               	movlb	1	; select bank1
  2369  0153  086B               	movf	DecodeGPS@F4939^(0+128),w
  2370  0154  0020               	movlb	0	; select bank0
  2371  0155  00BF               	movwf	DecodeGPS@longitude
  2372  0156  0021               	movlb	1	; select bank1
  2373  0157  086C               	movf	(DecodeGPS@F4939+1)^(0+128),w
  2374  0158  0020               	movlb	0	; select bank0
  2375  0159  00C0               	movwf	DecodeGPS@longitude+1
  2376  015A  0021               	movlb	1	; select bank1
  2377  015B  086D               	movf	(DecodeGPS@F4939+2)^(0+128),w
  2378  015C  0020               	movlb	0	; select bank0
  2379  015D  00C1               	movwf	DecodeGPS@longitude+2
  2380                           
  2381                           ;launcher_functions.c: 427: unsigned char northSouth;
  2382                           ;launcher_functions.c: 428: unsigned char eastWest;
  2383                           ;launcher_functions.c: 429: unsigned char status;
  2384                           ;launcher_functions.c: 430: int x;
  2385                           ;launcher_functions.c: 432: for(x=0;x<6;x++)
  2386  015E  01C2               	clrf	DecodeGPS@x
  2387  015F  01C3               	clrf	DecodeGPS@x+1
  2388  0160  0843               	movf	DecodeGPS@x+1,w
  2389  0161  3A80               	xorlw	128
  2390  0162  00AF               	movwf	??_DecodeGPS
  2391  0163  3080               	movlw	128
  2392  0164  022F               	subwf	??_DecodeGPS,w
  2393  0165  1D03               	skipz
  2394  0166  2969               	goto	u2035
  2395  0167  3006               	movlw	6
  2396  0168  0242               	subwf	DecodeGPS@x,w
  2397  0169                     u2035:	
  2398  0169  1803               	btfsc	3,0
  2399  016A  298B               	goto	l2413
  2400  016B                     l2407:	
  2401                           
  2402                           ;launcher_functions.c: 433: {
  2403                           ;launcher_functions.c: 434: if(gpsMessage[x] != messageID[x])
  2404  016B  0020               	movlb	0	; select bank0
  2405  016C  0842               	movf	DecodeGPS@x,w
  2406  016D  3E32               	addlw	DecodeGPS@messageID& (0+255)
  2407  016E  0086               	movwf	6
  2408  016F  0187               	clrf	7
  2409  0170  0842               	movf	DecodeGPS@x,w
  2410  0171  3E24               	addlw	_gpsMessage& (0+255)
  2411  0172  0084               	movwf	4
  2412  0173  3001               	movlw	1	; select bank2/3
  2413  0174  0085               	movwf	5
  2414  0175  0800               	movf	0,w
  2415  0176  0601               	xorwf	1,w
  2416  0177  1903               	skipnz
  2417  0178  297C               	goto	l2411
  2418                           
  2419                           ;launcher_functions.c: 435: {
  2420                           ;launcher_functions.c: 436: gpsInvalidFlag = 1;
  2421  0179  01EB               	clrf	_gpsInvalidFlag
  2422  017A  0AEB               	incf	_gpsInvalidFlag,f
  2423                           
  2424                           ;launcher_functions.c: 437: return;
  2425  017B  0008               	return
  2426  017C                     l2411:	
  2427  017C  3001               	movlw	1
  2428  017D  07C2               	addwf	DecodeGPS@x,f
  2429  017E  3000               	movlw	0
  2430  017F  3DC3               	addwfc	DecodeGPS@x+1,f
  2431  0180  0843               	movf	DecodeGPS@x+1,w
  2432  0181  3A80               	xorlw	128
  2433  0182  00AF               	movwf	??_DecodeGPS
  2434  0183  3080               	movlw	128
  2435  0184  022F               	subwf	??_DecodeGPS,w
  2436  0185  1D03               	skipz
  2437  0186  2989               	goto	u2055
  2438  0187  3006               	movlw	6
  2439  0188  0242               	subwf	DecodeGPS@x,w
  2440  0189                     u2055:	
  2441  0189  1C03               	skipc
  2442  018A  296B               	goto	l2407
  2443  018B                     l2413:	
  2444                           
  2445                           ;launcher_functions.c: 438: }
  2446                           ;launcher_functions.c: 439: }
  2447                           ;launcher_functions.c: 442: x = x + 1;
  2448  018B  0020               	movlb	0	; select bank0
  2449  018C  0842               	movf	DecodeGPS@x,w
  2450  018D  3E01               	addlw	1
  2451  018E  00C2               	movwf	DecodeGPS@x
  2452  018F  3000               	movlw	0
  2453  0190  3D43               	addwfc	DecodeGPS@x+1,w
  2454  0191  00C3               	movwf	DecodeGPS@x+1
  2455                           
  2456                           ;launcher_functions.c: 445: if(gpsMessage[x]!= ',')
  2457  0192  0842               	movf	DecodeGPS@x,w
  2458  0193  3E24               	addlw	_gpsMessage& (0+255)
  2459  0194  0086               	movwf	6
  2460  0195  3001               	movlw	1	; select bank2/3
  2461  0196  0087               	movwf	7
  2462  0197  0801               	movf	1,w
  2463  0198  3A2C               	xorlw	44
  2464  0199  1903               	skipnz
  2465  019A  2A34               	goto	l2445
  2466                           
  2467                           ;launcher_functions.c: 446: {
  2468                           ;launcher_functions.c: 448: latitude[0] = (gpsMessage[x++] - 48)*10;
  2469  019B  300A               	movlw	10
  2470  019C  00AF               	movwf	??_DecodeGPS
  2471  019D  082F               	movf	??_DecodeGPS,w
  2472  019E  00A0               	movwf	___bmul@multiplicand
  2473  019F  0842               	movf	DecodeGPS@x,w
  2474  01A0  3E24               	addlw	_gpsMessage& (0+255)
  2475  01A1  0086               	movwf	6
  2476  01A2  3001               	movlw	1	; select bank2/3
  2477  01A3  0087               	movwf	7
  2478  01A4  0801               	movf	1,w
  2479  01A5  3ED0               	addlw	208
  2480  01A6  318C  245E  3181   	fcall	___bmul
  2481  01A9  0020               	movlb	0	; select bank0
  2482  01AA  00B0               	movwf	??_DecodeGPS+1
  2483  01AB  0830               	movf	??_DecodeGPS+1,w
  2484  01AC  00BC               	movwf	DecodeGPS@latitude
  2485  01AD  3001               	movlw	1
  2486  01AE  07C2               	addwf	DecodeGPS@x,f
  2487  01AF  3000               	movlw	0
  2488  01B0  3DC3               	addwfc	DecodeGPS@x+1,f
  2489                           
  2490                           ;launcher_functions.c: 449: latitude[0] += (gpsMessage[x++] - 48);
  2491  01B1  0842               	movf	DecodeGPS@x,w
  2492  01B2  3E24               	addlw	_gpsMessage& (0+255)
  2493  01B3  0086               	movwf	6
  2494  01B4  3001               	movlw	1	; select bank2/3
  2495  01B5  0087               	movwf	7
  2496  01B6  0801               	movf	1,w
  2497  01B7  3ED0               	addlw	208
  2498  01B8  00AF               	movwf	??_DecodeGPS
  2499  01B9  082F               	movf	??_DecodeGPS,w
  2500  01BA  07BC               	addwf	DecodeGPS@latitude,f
  2501  01BB  3001               	movlw	1
  2502  01BC  07C2               	addwf	DecodeGPS@x,f
  2503  01BD  3000               	movlw	0
  2504  01BE  3DC3               	addwfc	DecodeGPS@x+1,f
  2505                           
  2506                           ;launcher_functions.c: 452: latitude[1] = (gpsMessage[x++] - 48)*10;
  2507  01BF  300A               	movlw	10
  2508  01C0  00AF               	movwf	??_DecodeGPS
  2509  01C1  082F               	movf	??_DecodeGPS,w
  2510  01C2  00A0               	movwf	___bmul@multiplicand
  2511  01C3  0842               	movf	DecodeGPS@x,w
  2512  01C4  3E24               	addlw	_gpsMessage& (0+255)
  2513  01C5  0086               	movwf	6
  2514  01C6  3001               	movlw	1	; select bank2/3
  2515  01C7  0087               	movwf	7
  2516  01C8  0801               	movf	1,w
  2517  01C9  3ED0               	addlw	208
  2518  01CA  318C  245E  3181   	fcall	___bmul
  2519  01CD  0020               	movlb	0	; select bank0
  2520  01CE  00B0               	movwf	??_DecodeGPS+1
  2521  01CF  0830               	movf	??_DecodeGPS+1,w
  2522  01D0  00BD               	movwf	DecodeGPS@latitude+1
  2523  01D1  3001               	movlw	1
  2524  01D2  07C2               	addwf	DecodeGPS@x,f
  2525  01D3  3000               	movlw	0
  2526  01D4  3DC3               	addwfc	DecodeGPS@x+1,f
  2527                           
  2528                           ;launcher_functions.c: 453: latitude[1] += (gpsMessage[x++] - 48);
  2529  01D5  0842               	movf	DecodeGPS@x,w
  2530  01D6  3E24               	addlw	_gpsMessage& (0+255)
  2531  01D7  0086               	movwf	6
  2532  01D8  3001               	movlw	1	; select bank2/3
  2533  01D9  0087               	movwf	7
  2534  01DA  0801               	movf	1,w
  2535  01DB  3ED0               	addlw	208
  2536  01DC  00AF               	movwf	??_DecodeGPS
  2537  01DD  082F               	movf	??_DecodeGPS,w
  2538  01DE  07BD               	addwf	DecodeGPS@latitude+1,f
  2539  01DF  3001               	movlw	1
  2540  01E0  07C2               	addwf	DecodeGPS@x,f
  2541  01E1  3000               	movlw	0
  2542  01E2  3DC3               	addwfc	DecodeGPS@x+1,f
  2543                           
  2544                           ;launcher_functions.c: 456: x = x + 1;
  2545  01E3  0842               	movf	DecodeGPS@x,w
  2546  01E4  3E01               	addlw	1
  2547  01E5  00C2               	movwf	DecodeGPS@x
  2548  01E6  3000               	movlw	0
  2549  01E7  3D43               	addwfc	DecodeGPS@x+1,w
  2550  01E8  00C3               	movwf	DecodeGPS@x+1
  2551                           
  2552                           ;launcher_functions.c: 459: latitude[2] = (gpsMessage[x++] - 48)*10;
  2553  01E9  300A               	movlw	10
  2554  01EA  00AF               	movwf	??_DecodeGPS
  2555  01EB  082F               	movf	??_DecodeGPS,w
  2556  01EC  00A0               	movwf	___bmul@multiplicand
  2557  01ED  0842               	movf	DecodeGPS@x,w
  2558  01EE  3E24               	addlw	_gpsMessage& (0+255)
  2559  01EF  0086               	movwf	6
  2560  01F0  3001               	movlw	1	; select bank2/3
  2561  01F1  0087               	movwf	7
  2562  01F2  0801               	movf	1,w
  2563  01F3  3ED0               	addlw	208
  2564  01F4  318C  245E  3181   	fcall	___bmul
  2565  01F7  0020               	movlb	0	; select bank0
  2566  01F8  00B0               	movwf	??_DecodeGPS+1
  2567  01F9  0830               	movf	??_DecodeGPS+1,w
  2568  01FA  00BE               	movwf	DecodeGPS@latitude+2
  2569  01FB  3001               	movlw	1
  2570  01FC  07C2               	addwf	DecodeGPS@x,f
  2571  01FD  3000               	movlw	0
  2572  01FE  3DC3               	addwfc	DecodeGPS@x+1,f
  2573                           
  2574                           ;launcher_functions.c: 460: latitude[2] += (gpsMessage[x++] - 48);
  2575  01FF  0842               	movf	DecodeGPS@x,w
  2576  0200  3E24               	addlw	_gpsMessage& (0+255)
  2577  0201  0086               	movwf	6
  2578  0202  3001               	movlw	1	; select bank2/3
  2579  0203  0087               	movwf	7
  2580  0204  0801               	movf	1,w
  2581  0205  3ED0               	addlw	208
  2582  0206  00AF               	movwf	??_DecodeGPS
  2583  0207  082F               	movf	??_DecodeGPS,w
  2584  0208  07BE               	addwf	DecodeGPS@latitude+2,f
  2585  0209  3001               	movlw	1
  2586  020A  07C2               	addwf	DecodeGPS@x,f
  2587  020B  3000               	movlw	0
  2588  020C  3DC3               	addwfc	DecodeGPS@x+1,f
  2589                           
  2590                           ;launcher_functions.c: 461: latitude[2] = (latitude[2]*60)/100;
  2591  020D  3064               	movlw	100
  2592  020E  00A6               	movwf	___awdiv@divisor
  2593  020F  3000               	movlw	0
  2594  0210  00A7               	movwf	___awdiv@divisor+1
  2595  0211  083E               	movf	DecodeGPS@latitude+2,w
  2596  0212  00AF               	movwf	??_DecodeGPS
  2597  0213  01B0               	clrf	??_DecodeGPS+1
  2598  0214  082F               	movf	??_DecodeGPS,w
  2599  0215  00A0               	movwf	___wmul@multiplier
  2600  0216  0830               	movf	??_DecodeGPS+1,w
  2601  0217  00A1               	movwf	___wmul@multiplier+1
  2602  0218  303C               	movlw	60
  2603  0219  00A2               	movwf	___wmul@multiplicand
  2604  021A  3000               	movlw	0
  2605  021B  00A3               	movwf	___wmul@multiplicand+1
  2606  021C  318C  24FE  3181   	fcall	___wmul
  2607  021F  0020               	movlb	0	; select bank0
  2608  0220  0821               	movf	?___wmul+1,w
  2609  0221  01A9               	clrf	___awdiv@dividend+1
  2610  0222  07A9               	addwf	___awdiv@dividend+1,f
  2611  0223  0820               	movf	?___wmul,w
  2612  0224  01A8               	clrf	___awdiv@dividend
  2613  0225  07A8               	addwf	___awdiv@dividend,f
  2614  0226  318E  2660  3181   	fcall	___awdiv
  2615  0229  0020               	movlb	0	; select bank0
  2616  022A  0826               	movf	?___awdiv,w
  2617  022B  00B1               	movwf	??_DecodeGPS+2
  2618  022C  0831               	movf	??_DecodeGPS+2,w
  2619  022D  00BE               	movwf	DecodeGPS@latitude+2
  2620                           
  2621                           ;launcher_functions.c: 464: x = x + 2;
  2622  022E  0842               	movf	DecodeGPS@x,w
  2623  022F  3E02               	addlw	2
  2624  0230  00C2               	movwf	DecodeGPS@x
  2625  0231  3000               	movlw	0
  2626  0232  3D43               	addwfc	DecodeGPS@x+1,w
  2627  0233  00C3               	movwf	DecodeGPS@x+1
  2628  0234                     l2445:	
  2629                           
  2630                           ;launcher_functions.c: 465: }
  2631                           ;launcher_functions.c: 468: x = x + 1;
  2632  0234  0842               	movf	DecodeGPS@x,w
  2633  0235  3E01               	addlw	1
  2634  0236  00C2               	movwf	DecodeGPS@x
  2635  0237  3000               	movlw	0
  2636  0238  3D43               	addwfc	DecodeGPS@x+1,w
  2637  0239  00C3               	movwf	DecodeGPS@x+1
  2638                           
  2639                           ;launcher_functions.c: 471: if(gpsMessage[x] != ',')
  2640  023A  0842               	movf	DecodeGPS@x,w
  2641  023B  3E24               	addlw	_gpsMessage& (0+255)
  2642  023C  0086               	movwf	6
  2643  023D  3001               	movlw	1	; select bank2/3
  2644  023E  0087               	movwf	7
  2645  023F  0801               	movf	1,w
  2646  0240  3A2C               	xorlw	44
  2647  0241  1903               	skipnz
  2648  0242  2A50               	goto	l2453
  2649                           
  2650                           ;launcher_functions.c: 472: northSouth = gpsMessage[x++];
  2651  0243  0842               	movf	DecodeGPS@x,w
  2652  0244  3E24               	addlw	_gpsMessage& (0+255)
  2653  0245  0086               	movwf	6
  2654  0246  3001               	movlw	1	; select bank2/3
  2655  0247  0087               	movwf	7
  2656  0248  0801               	movf	1,w
  2657  0249  00AF               	movwf	??_DecodeGPS
  2658  024A  082F               	movf	??_DecodeGPS,w
  2659  024B  00B9               	movwf	DecodeGPS@northSouth
  2660  024C  3001               	movlw	1
  2661  024D  07C2               	addwf	DecodeGPS@x,f
  2662  024E  3000               	movlw	0
  2663  024F  3DC3               	addwfc	DecodeGPS@x+1,f
  2664  0250                     l2453:	
  2665                           
  2666                           ;launcher_functions.c: 475: x = x + 1;
  2667  0250  0842               	movf	DecodeGPS@x,w
  2668  0251  3E01               	addlw	1
  2669  0252  00C2               	movwf	DecodeGPS@x
  2670  0253  3000               	movlw	0
  2671  0254  3D43               	addwfc	DecodeGPS@x+1,w
  2672  0255  00C3               	movwf	DecodeGPS@x+1
  2673                           
  2674                           ;launcher_functions.c: 478: if(gpsMessage[x]!= ',')
  2675  0256  0842               	movf	DecodeGPS@x,w
  2676  0257  3E24               	addlw	_gpsMessage& (0+255)
  2677  0258  0086               	movwf	6
  2678  0259  3001               	movlw	1	; select bank2/3
  2679  025A  0087               	movwf	7
  2680  025B  0801               	movf	1,w
  2681  025C  3A2C               	xorlw	44
  2682  025D  1903               	skipnz
  2683  025E  2B0E               	goto	l2489
  2684                           
  2685                           ;launcher_functions.c: 479: {
  2686                           ;launcher_functions.c: 481: longitude[0] = (gpsMessage[x++] - 48)*100;
  2687  025F  3064               	movlw	100
  2688  0260  00AF               	movwf	??_DecodeGPS
  2689  0261  082F               	movf	??_DecodeGPS,w
  2690  0262  00A0               	movwf	___bmul@multiplicand
  2691  0263  0842               	movf	DecodeGPS@x,w
  2692  0264  3E24               	addlw	_gpsMessage& (0+255)
  2693  0265  0086               	movwf	6
  2694  0266  3001               	movlw	1	; select bank2/3
  2695  0267  0087               	movwf	7
  2696  0268  0801               	movf	1,w
  2697  0269  3ED0               	addlw	208
  2698  026A  318C  245E  3181   	fcall	___bmul
  2699  026D  0020               	movlb	0	; select bank0
  2700  026E  00B0               	movwf	??_DecodeGPS+1
  2701  026F  0830               	movf	??_DecodeGPS+1,w
  2702  0270  00BF               	movwf	DecodeGPS@longitude
  2703  0271  3001               	movlw	1
  2704  0272  07C2               	addwf	DecodeGPS@x,f
  2705  0273  3000               	movlw	0
  2706  0274  3DC3               	addwfc	DecodeGPS@x+1,f
  2707                           
  2708                           ;launcher_functions.c: 482: longitude[0] += (gpsMessage[x++] - 48)*10;
  2709  0275  300A               	movlw	10
  2710  0276  00AF               	movwf	??_DecodeGPS
  2711  0277  082F               	movf	??_DecodeGPS,w
  2712  0278  00A0               	movwf	___bmul@multiplicand
  2713  0279  0842               	movf	DecodeGPS@x,w
  2714  027A  3E24               	addlw	_gpsMessage& (0+255)
  2715  027B  0086               	movwf	6
  2716  027C  3001               	movlw	1	; select bank2/3
  2717  027D  0087               	movwf	7
  2718  027E  0801               	movf	1,w
  2719  027F  3ED0               	addlw	208
  2720  0280  318C  245E  3181   	fcall	___bmul
  2721  0283  0020               	movlb	0	; select bank0
  2722  0284  00B0               	movwf	??_DecodeGPS+1
  2723  0285  0830               	movf	??_DecodeGPS+1,w
  2724  0286  07BF               	addwf	DecodeGPS@longitude,f
  2725  0287  3001               	movlw	1
  2726  0288  07C2               	addwf	DecodeGPS@x,f
  2727  0289  3000               	movlw	0
  2728  028A  3DC3               	addwfc	DecodeGPS@x+1,f
  2729                           
  2730                           ;launcher_functions.c: 483: longitude[0] += (gpsMessage[x++] - 48);
  2731  028B  0842               	movf	DecodeGPS@x,w
  2732  028C  3E24               	addlw	_gpsMessage& (0+255)
  2733  028D  0086               	movwf	6
  2734  028E  3001               	movlw	1	; select bank2/3
  2735  028F  0087               	movwf	7
  2736  0290  0801               	movf	1,w
  2737  0291  3ED0               	addlw	208
  2738  0292  00AF               	movwf	??_DecodeGPS
  2739  0293  082F               	movf	??_DecodeGPS,w
  2740  0294  07BF               	addwf	DecodeGPS@longitude,f
  2741  0295  3001               	movlw	1
  2742  0296  07C2               	addwf	DecodeGPS@x,f
  2743  0297  3000               	movlw	0
  2744  0298  3DC3               	addwfc	DecodeGPS@x+1,f
  2745                           
  2746                           ;launcher_functions.c: 486: longitude[1] = (gpsMessage[x++] - 48)*10;
  2747  0299  300A               	movlw	10
  2748  029A  00AF               	movwf	??_DecodeGPS
  2749  029B  082F               	movf	??_DecodeGPS,w
  2750  029C  00A0               	movwf	___bmul@multiplicand
  2751  029D  0842               	movf	DecodeGPS@x,w
  2752  029E  3E24               	addlw	_gpsMessage& (0+255)
  2753  029F  0086               	movwf	6
  2754  02A0  3001               	movlw	1	; select bank2/3
  2755  02A1  0087               	movwf	7
  2756  02A2  0801               	movf	1,w
  2757  02A3  3ED0               	addlw	208
  2758  02A4  318C  245E  3181   	fcall	___bmul
  2759  02A7  0020               	movlb	0	; select bank0
  2760  02A8  00B0               	movwf	??_DecodeGPS+1
  2761  02A9  0830               	movf	??_DecodeGPS+1,w
  2762  02AA  00C0               	movwf	DecodeGPS@longitude+1
  2763  02AB  3001               	movlw	1
  2764  02AC  07C2               	addwf	DecodeGPS@x,f
  2765  02AD  3000               	movlw	0
  2766  02AE  3DC3               	addwfc	DecodeGPS@x+1,f
  2767                           
  2768                           ;launcher_functions.c: 487: longitude[1] += (gpsMessage[x++] - 48);
  2769  02AF  0842               	movf	DecodeGPS@x,w
  2770  02B0  3E24               	addlw	_gpsMessage& (0+255)
  2771  02B1  0086               	movwf	6
  2772  02B2  3001               	movlw	1	; select bank2/3
  2773  02B3  0087               	movwf	7
  2774  02B4  0801               	movf	1,w
  2775  02B5  3ED0               	addlw	208
  2776  02B6  00AF               	movwf	??_DecodeGPS
  2777  02B7  082F               	movf	??_DecodeGPS,w
  2778  02B8  07C0               	addwf	DecodeGPS@longitude+1,f
  2779  02B9  3001               	movlw	1
  2780  02BA  07C2               	addwf	DecodeGPS@x,f
  2781  02BB  3000               	movlw	0
  2782  02BC  3DC3               	addwfc	DecodeGPS@x+1,f
  2783                           
  2784                           ;launcher_functions.c: 490: x = x + 1;
  2785  02BD  0842               	movf	DecodeGPS@x,w
  2786  02BE  3E01               	addlw	1
  2787  02BF  00C2               	movwf	DecodeGPS@x
  2788  02C0  3000               	movlw	0
  2789  02C1  3D43               	addwfc	DecodeGPS@x+1,w
  2790  02C2  00C3               	movwf	DecodeGPS@x+1
  2791                           
  2792                           ;launcher_functions.c: 493: longitude[2] = (gpsMessage[x++] - 48)*10;
  2793  02C3  300A               	movlw	10
  2794  02C4  00AF               	movwf	??_DecodeGPS
  2795  02C5  082F               	movf	??_DecodeGPS,w
  2796  02C6  00A0               	movwf	___bmul@multiplicand
  2797  02C7  0842               	movf	DecodeGPS@x,w
  2798  02C8  3E24               	addlw	_gpsMessage& (0+255)
  2799  02C9  0086               	movwf	6
  2800  02CA  3001               	movlw	1	; select bank2/3
  2801  02CB  0087               	movwf	7
  2802  02CC  0801               	movf	1,w
  2803  02CD  3ED0               	addlw	208
  2804  02CE  318C  245E  3181   	fcall	___bmul
  2805  02D1  0020               	movlb	0	; select bank0
  2806  02D2  00B0               	movwf	??_DecodeGPS+1
  2807  02D3  0830               	movf	??_DecodeGPS+1,w
  2808  02D4  00C1               	movwf	DecodeGPS@longitude+2
  2809  02D5  3001               	movlw	1
  2810  02D6  07C2               	addwf	DecodeGPS@x,f
  2811  02D7  3000               	movlw	0
  2812  02D8  3DC3               	addwfc	DecodeGPS@x+1,f
  2813                           
  2814                           ;launcher_functions.c: 494: longitude[2] += (gpsMessage[x++] - 48);
  2815  02D9  0842               	movf	DecodeGPS@x,w
  2816  02DA  3E24               	addlw	_gpsMessage& (0+255)
  2817  02DB  0086               	movwf	6
  2818  02DC  3001               	movlw	1	; select bank2/3
  2819  02DD  0087               	movwf	7
  2820  02DE  0801               	movf	1,w
  2821  02DF  3ED0               	addlw	208
  2822  02E0  00AF               	movwf	??_DecodeGPS
  2823  02E1  082F               	movf	??_DecodeGPS,w
  2824  02E2  07C1               	addwf	DecodeGPS@longitude+2,f
  2825  02E3  3001               	movlw	1
  2826  02E4  07C2               	addwf	DecodeGPS@x,f
  2827  02E5  3000               	movlw	0
  2828  02E6  3DC3               	addwfc	DecodeGPS@x+1,f
  2829                           
  2830                           ;launcher_functions.c: 495: longitude[2] = (longitude[2]*60)/100;
  2831  02E7  3064               	movlw	100
  2832  02E8  00A6               	movwf	___awdiv@divisor
  2833  02E9  3000               	movlw	0
  2834  02EA  00A7               	movwf	___awdiv@divisor+1
  2835  02EB  0841               	movf	DecodeGPS@longitude+2,w
  2836  02EC  00AF               	movwf	??_DecodeGPS
  2837  02ED  01B0               	clrf	??_DecodeGPS+1
  2838  02EE  082F               	movf	??_DecodeGPS,w
  2839  02EF  00A0               	movwf	___wmul@multiplier
  2840  02F0  0830               	movf	??_DecodeGPS+1,w
  2841  02F1  00A1               	movwf	___wmul@multiplier+1
  2842  02F2  303C               	movlw	60
  2843  02F3  00A2               	movwf	___wmul@multiplicand
  2844  02F4  3000               	movlw	0
  2845  02F5  00A3               	movwf	___wmul@multiplicand+1
  2846  02F6  318C  24FE  3181   	fcall	___wmul
  2847  02F9  0020               	movlb	0	; select bank0
  2848  02FA  0821               	movf	?___wmul+1,w
  2849  02FB  01A9               	clrf	___awdiv@dividend+1
  2850  02FC  07A9               	addwf	___awdiv@dividend+1,f
  2851  02FD  0820               	movf	?___wmul,w
  2852  02FE  01A8               	clrf	___awdiv@dividend
  2853  02FF  07A8               	addwf	___awdiv@dividend,f
  2854  0300  318E  2660  3181   	fcall	___awdiv
  2855  0303  0020               	movlb	0	; select bank0
  2856  0304  0826               	movf	?___awdiv,w
  2857  0305  00B1               	movwf	??_DecodeGPS+2
  2858  0306  0831               	movf	??_DecodeGPS+2,w
  2859  0307  00C1               	movwf	DecodeGPS@longitude+2
  2860                           
  2861                           ;launcher_functions.c: 498: x = x + 2;
  2862  0308  0842               	movf	DecodeGPS@x,w
  2863  0309  3E02               	addlw	2
  2864  030A  00C2               	movwf	DecodeGPS@x
  2865  030B  3000               	movlw	0
  2866  030C  3D43               	addwfc	DecodeGPS@x+1,w
  2867  030D  00C3               	movwf	DecodeGPS@x+1
  2868  030E                     l2489:	
  2869                           
  2870                           ;launcher_functions.c: 499: }
  2871                           ;launcher_functions.c: 502: x = x + 1;
  2872  030E  0842               	movf	DecodeGPS@x,w
  2873  030F  3E01               	addlw	1
  2874  0310  00C2               	movwf	DecodeGPS@x
  2875  0311  3000               	movlw	0
  2876  0312  3D43               	addwfc	DecodeGPS@x+1,w
  2877  0313  00C3               	movwf	DecodeGPS@x+1
  2878                           
  2879                           ;launcher_functions.c: 505: if(gpsMessage[x] != ',')
  2880  0314  0842               	movf	DecodeGPS@x,w
  2881  0315  3E24               	addlw	_gpsMessage& (0+255)
  2882  0316  0086               	movwf	6
  2883  0317  3001               	movlw	1	; select bank2/3
  2884  0318  0087               	movwf	7
  2885  0319  0801               	movf	1,w
  2886  031A  3A2C               	xorlw	44
  2887  031B  1903               	skipnz
  2888  031C  2B2A               	goto	l2497
  2889                           
  2890                           ;launcher_functions.c: 506: eastWest = gpsMessage[x++];
  2891  031D  0842               	movf	DecodeGPS@x,w
  2892  031E  3E24               	addlw	_gpsMessage& (0+255)
  2893  031F  0086               	movwf	6
  2894  0320  3001               	movlw	1	; select bank2/3
  2895  0321  0087               	movwf	7
  2896  0322  0801               	movf	1,w
  2897  0323  00AF               	movwf	??_DecodeGPS
  2898  0324  082F               	movf	??_DecodeGPS,w
  2899  0325  00BA               	movwf	DecodeGPS@eastWest
  2900  0326  3001               	movlw	1
  2901  0327  07C2               	addwf	DecodeGPS@x,f
  2902  0328  3000               	movlw	0
  2903  0329  3DC3               	addwfc	DecodeGPS@x+1,f
  2904  032A                     l2497:	
  2905                           
  2906                           ;launcher_functions.c: 509: x = x + 1;
  2907  032A  0842               	movf	DecodeGPS@x,w
  2908  032B  3E01               	addlw	1
  2909  032C  00C2               	movwf	DecodeGPS@x
  2910  032D  3000               	movlw	0
  2911  032E  3D43               	addwfc	DecodeGPS@x+1,w
  2912  032F  00C3               	movwf	DecodeGPS@x+1
  2913  0330                     l2499:	
  2914                           ;launcher_functions.c: 512: while(gpsMessage[x++] != ','){}
  2915                           
  2916  0330  0843               	movf	DecodeGPS@x+1,w
  2917  0331  00B0               	movwf	??_DecodeGPS+1
  2918  0332  0842               	movf	DecodeGPS@x,w
  2919  0333  00AF               	movwf	??_DecodeGPS
  2920  0334  0AC2               	incf	DecodeGPS@x,f
  2921  0335  1903               	skipnz
  2922  0336  0AC3               	incf	DecodeGPS@x+1,f
  2923  0337  082F               	movf	??_DecodeGPS,w
  2924  0338  3E24               	addlw	_gpsMessage& (0+255)
  2925  0339  0086               	movwf	6
  2926  033A  3001               	movlw	1	; select bank2/3
  2927  033B  0087               	movwf	7
  2928  033C  0801               	movf	1,w
  2929  033D  3A2C               	xorlw	44
  2930  033E  1D03               	skipz
  2931  033F  2B30               	goto	l2499
  2932                           
  2933                           ;launcher_functions.c: 515: status = gpsMessage[x];
  2934  0340  0842               	movf	DecodeGPS@x,w
  2935  0341  3E24               	addlw	_gpsMessage& (0+255)
  2936  0342  0086               	movwf	6
  2937  0343  3001               	movlw	1	; select bank2/3
  2938  0344  0087               	movwf	7
  2939  0345  0801               	movf	1,w
  2940  0346  00AF               	movwf	??_DecodeGPS
  2941  0347  082F               	movf	??_DecodeGPS,w
  2942  0348  00BB               	movwf	DecodeGPS@status
  2943                           
  2944                           ;launcher_functions.c: 517: if(status == 'A')
  2945  0349  083B               	movf	DecodeGPS@status,w
  2946  034A  3A41               	xorlw	65
  2947  034B  1D03               	skipz
  2948  034C  2B4F               	goto	l448
  2949                           
  2950                           ;launcher_functions.c: 518: gpsInvalidFlag = 0;
  2951  034D  01EB               	clrf	_gpsInvalidFlag
  2952  034E  2B51               	goto	l2507
  2953  034F                     l448:	
  2954                           
  2955                           ;launcher_functions.c: 519: else
  2956                           ;launcher_functions.c: 520: gpsInvalidFlag = 1;
  2957  034F  01EB               	clrf	_gpsInvalidFlag
  2958  0350  0AEB               	incf	_gpsInvalidFlag,f
  2959  0351                     l2507:	
  2960                           
  2961                           ;launcher_functions.c: 524: if(!gpsInvalidFlag)
  2962  0351  08EB               	movf	_gpsInvalidFlag,f
  2963  0352  1D03               	skipz
  2964  0353  0008               	return
  2965                           
  2966                           ;launcher_functions.c: 525: {
  2967                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  2968  0354  01C2               	clrf	DecodeGPS@x
  2969  0355  01C3               	clrf	DecodeGPS@x+1
  2970  0356  0843               	movf	DecodeGPS@x+1,w
  2971  0357  3A80               	xorlw	128
  2972  0358  00AF               	movwf	??_DecodeGPS
  2973  0359  3080               	movlw	128
  2974  035A  022F               	subwf	??_DecodeGPS,w
  2975  035B  1D03               	skipz
  2976  035C  2B5F               	goto	u2135
  2977  035D  3003               	movlw	3
  2978  035E  0242               	subwf	DecodeGPS@x,w
  2979  035F                     u2135:	
  2980  035F  1803               	btfsc	3,0
  2981  0360  2B89               	goto	l2521
  2982  0361                     l2515:	
  2983                           
  2984                           ;launcher_functions.c: 528: {
  2985                           ;launcher_functions.c: 529: validLatitude[x] = latitude[x];
  2986  0361  0020               	movlb	0	; select bank0
  2987  0362  0842               	movf	DecodeGPS@x,w
  2988  0363  3E3C               	addlw	DecodeGPS@latitude& (0+255)
  2989  0364  0086               	movwf	6
  2990  0365  0187               	clrf	7
  2991  0366  0801               	movf	1,w
  2992  0367  00AF               	movwf	??_DecodeGPS
  2993  0368  0842               	movf	DecodeGPS@x,w
  2994  0369  3EE2               	addlw	_validLatitude& (0+255)
  2995  036A  0086               	movwf	6
  2996  036B  0187               	clrf	7
  2997  036C  082F               	movf	??_DecodeGPS,w
  2998  036D  0081               	movwf	1
  2999                           
  3000                           ;launcher_functions.c: 530: validLongitude[x] = longitude[x];
  3001  036E  0842               	movf	DecodeGPS@x,w
  3002  036F  3E3F               	addlw	DecodeGPS@longitude& (0+255)
  3003  0370  0086               	movwf	6
  3004  0371  0187               	clrf	7
  3005  0372  0801               	movf	1,w
  3006  0373  00AF               	movwf	??_DecodeGPS
  3007  0374  0842               	movf	DecodeGPS@x,w
  3008  0375  3EE5               	addlw	_validLongitude& (0+255)
  3009  0376  0086               	movwf	6
  3010  0377  0187               	clrf	7
  3011  0378  082F               	movf	??_DecodeGPS,w
  3012  0379  0081               	movwf	1
  3013  037A  3001               	movlw	1
  3014  037B  07C2               	addwf	DecodeGPS@x,f
  3015  037C  3000               	movlw	0
  3016  037D  3DC3               	addwfc	DecodeGPS@x+1,f
  3017  037E  0843               	movf	DecodeGPS@x+1,w
  3018  037F  3A80               	xorlw	128
  3019  0380  00AF               	movwf	??_DecodeGPS
  3020  0381  3080               	movlw	128
  3021  0382  022F               	subwf	??_DecodeGPS,w
  3022  0383  1D03               	skipz
  3023  0384  2B87               	goto	u2145
  3024  0385  3003               	movlw	3
  3025  0386  0242               	subwf	DecodeGPS@x,w
  3026  0387                     u2145:	
  3027  0387  1C03               	skipc
  3028  0388  2B61               	goto	l2515
  3029  0389                     l2521:	
  3030                           
  3031                           ;launcher_functions.c: 531: }
  3032                           ;launcher_functions.c: 532: validNorthSouth = northSouth;
  3033  0389  0020               	movlb	0	; select bank0
  3034  038A  0839               	movf	DecodeGPS@northSouth,w
  3035  038B  00AF               	movwf	??_DecodeGPS
  3036  038C  082F               	movf	??_DecodeGPS,w
  3037  038D  00ED               	movwf	_validNorthSouth
  3038                           
  3039                           ;launcher_functions.c: 533: validEastWest = eastWest;
  3040  038E  083A               	movf	DecodeGPS@eastWest,w
  3041  038F  00AF               	movwf	??_DecodeGPS
  3042  0390  082F               	movf	??_DecodeGPS,w
  3043  0391  00EC               	movwf	_validEastWest
  3044                           
  3045                           ;launcher_functions.c: 535: hasValidGPSFlag = 1;
  3046  0392  01E7               	clrf	_hasValidGPSFlag
  3047  0393  0AE7               	incf	_hasValidGPSFlag,f
  3048  0394  0008               	return
  3049  0395                     __end_of_DecodeGPS:	
  3050                           
  3051                           	psect	text3
  3052  0CFE                     __ptext3:	
  3053 ;; *************** function ___wmul *****************
  3054 ;; Defined at:
  3055 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3058 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  product         2    4[BANK0 ] unsigned int 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  2    0[BANK0 ] unsigned int 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3070 ;;      Params:         0       4       0       0       0       0       0       0
  3071 ;;      Locals:         0       2       0       0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0
  3073 ;;      Totals:         0       6       0       0       0       0       0       0
  3074 ;;Total ram usage:        6 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    2
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_DecodeGPS
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function ___wmul
  3086  0CFE                     ___wmul:	
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3090  0CFE  0020               	movlb	0	; select bank0
  3091  0CFF  01A4               	clrf	___wmul@product
  3092  0D00  01A5               	clrf	___wmul@product+1
  3093  0D01                     l2161:	
  3094  0D01  1C20               	btfss	___wmul@multiplier,0
  3095  0D02  2D07               	goto	l632
  3096  0D03  0822               	movf	___wmul@multiplicand,w
  3097  0D04  07A4               	addwf	___wmul@product,f
  3098  0D05  0823               	movf	___wmul@multiplicand+1,w
  3099  0D06  3DA5               	addwfc	___wmul@product+1,f
  3100  0D07                     l632:	
  3101  0D07  3001               	movlw	1
  3102  0D08                     u1585:	
  3103  0D08  35A2               	lslf	___wmul@multiplicand,f
  3104  0D09  0DA3               	rlf	___wmul@multiplicand+1,f
  3105  0D0A  0B89               	decfsz	9,f
  3106  0D0B  2D08               	goto	u1585
  3107  0D0C  3001               	movlw	1
  3108  0D0D                     u1595:	
  3109  0D0D  36A1               	lsrf	___wmul@multiplier+1,f
  3110  0D0E  0CA0               	rrf	___wmul@multiplier,f
  3111  0D0F  0B89               	decfsz	9,f
  3112  0D10  2D0D               	goto	u1595
  3113  0D11  0821               	movf	___wmul@multiplier+1,w
  3114  0D12  0420               	iorwf	___wmul@multiplier,w
  3115  0D13  1D03               	skipz
  3116  0D14  2D01               	goto	l2161
  3117  0D15  0825               	movf	___wmul@product+1,w
  3118  0D16  01A1               	clrf	?___wmul+1
  3119  0D17  07A1               	addwf	?___wmul+1,f
  3120  0D18  0824               	movf	___wmul@product,w
  3121  0D19  01A0               	clrf	?___wmul
  3122  0D1A  07A0               	addwf	?___wmul,f
  3123  0D1B  0008               	return
  3124  0D1C                     __end_of___wmul:	
  3125                           
  3126                           	psect	text4
  3127  0C5E                     __ptext4:	
  3128 ;; *************** function ___bmul *****************
  3129 ;; Defined at:
  3130 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  multiplier      1    wreg     unsigned char 
  3133 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3136 ;;  product         1    2[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3146 ;;      Params:         0       1       0       0       0       0       0       0
  3147 ;;      Locals:         0       2       0       0       0       0       0       0
  3148 ;;      Temps:          0       1       0       0       0       0       0       0
  3149 ;;      Totals:         0       4       0       0       0       0       0       0
  3150 ;;Total ram usage:        4 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_DecodeGPS
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function ___bmul
  3162  0C5E                     ___bmul:	
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3166                           ;___bmul@multiplier stored from wreg
  3167  0C5E  0020               	movlb	0	; select bank0
  3168  0C5F  00A3               	movwf	___bmul@multiplier
  3169  0C60  01A2               	clrf	___bmul@product
  3170  0C61                     l2173:	
  3171  0C61  1C23               	btfss	___bmul@multiplier,0
  3172  0C62  2C67               	goto	l2177
  3173  0C63  0820               	movf	___bmul@multiplicand,w
  3174  0C64  00A1               	movwf	??___bmul
  3175  0C65  0821               	movf	??___bmul,w
  3176  0C66  07A2               	addwf	___bmul@product,f
  3177  0C67                     l2177:	
  3178  0C67  1003               	clrc
  3179  0C68  0DA0               	rlf	___bmul@multiplicand,f
  3180  0C69  1003               	clrc
  3181  0C6A  0CA3               	rrf	___bmul@multiplier,f
  3182  0C6B  08A3               	movf	___bmul@multiplier,f
  3183  0C6C  1D03               	skipz
  3184  0C6D  2C61               	goto	l2173
  3185  0C6E  0822               	movf	___bmul@product,w
  3186  0C6F  0008               	return
  3187  0C70                     __end_of___bmul:	
  3188                           
  3189                           	psect	text5
  3190  0E60                     __ptext5:	
  3191 ;; *************** function ___awdiv *****************
  3192 ;; Defined at:
  3193 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  divisor         2    6[BANK0 ] int 
  3196 ;;  dividend        2    8[BANK0 ] int 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  quotient        2   13[BANK0 ] int 
  3199 ;;  sign            1   12[BANK0 ] unsigned char 
  3200 ;;  counter         1   11[BANK0 ] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  2    6[BANK0 ] int 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3210 ;;      Params:         0       4       0       0       0       0       0       0
  3211 ;;      Locals:         0       4       0       0       0       0       0       0
  3212 ;;      Temps:          0       1       0       0       0       0       0       0
  3213 ;;      Totals:         0       9       0       0       0       0       0       0
  3214 ;;Total ram usage:        9 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    2
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_DecodeGPS
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function ___awdiv
  3226  0E60                     ___awdiv:	
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3230  0E60  0020               	movlb	0	; select bank0
  3231  0E61  01AC               	clrf	___awdiv@sign
  3232  0E62  1FA7               	btfss	___awdiv@divisor+1,7
  3233  0E63  2E6B               	goto	l2195
  3234  0E64  09A6               	comf	___awdiv@divisor,f
  3235  0E65  09A7               	comf	___awdiv@divisor+1,f
  3236  0E66  0AA6               	incf	___awdiv@divisor,f
  3237  0E67  1903               	skipnz
  3238  0E68  0AA7               	incf	___awdiv@divisor+1,f
  3239  0E69  01AC               	clrf	___awdiv@sign
  3240  0E6A  0AAC               	incf	___awdiv@sign,f
  3241  0E6B                     l2195:	
  3242  0E6B  1FA9               	btfss	___awdiv@dividend+1,7
  3243  0E6C  2E76               	goto	l2201
  3244  0E6D  09A8               	comf	___awdiv@dividend,f
  3245  0E6E  09A9               	comf	___awdiv@dividend+1,f
  3246  0E6F  0AA8               	incf	___awdiv@dividend,f
  3247  0E70  1903               	skipnz
  3248  0E71  0AA9               	incf	___awdiv@dividend+1,f
  3249  0E72  3001               	movlw	1
  3250  0E73  00AA               	movwf	??___awdiv
  3251  0E74  082A               	movf	??___awdiv,w
  3252  0E75  06AC               	xorwf	___awdiv@sign,f
  3253  0E76                     l2201:	
  3254  0E76  01AD               	clrf	___awdiv@quotient
  3255  0E77  01AE               	clrf	___awdiv@quotient+1
  3256  0E78  0827               	movf	___awdiv@divisor+1,w
  3257  0E79  0426               	iorwf	___awdiv@divisor,w
  3258  0E7A  1903               	skipnz
  3259  0E7B  2EA5               	goto	l2223
  3260  0E7C  01AB               	clrf	___awdiv@counter
  3261  0E7D  0AAB               	incf	___awdiv@counter,f
  3262  0E7E                     l2211:	
  3263  0E7E  1BA7               	btfsc	___awdiv@divisor+1,7
  3264  0E7F  2E8A               	goto	l2213
  3265  0E80  3001               	movlw	1
  3266  0E81                     u1665:	
  3267  0E81  35A6               	lslf	___awdiv@divisor,f
  3268  0E82  0DA7               	rlf	___awdiv@divisor+1,f
  3269  0E83  0B89               	decfsz	9,f
  3270  0E84  2E81               	goto	u1665
  3271  0E85  3001               	movlw	1
  3272  0E86  00AA               	movwf	??___awdiv
  3273  0E87  082A               	movf	??___awdiv,w
  3274  0E88  07AB               	addwf	___awdiv@counter,f
  3275  0E89  2E7E               	goto	l2211
  3276  0E8A                     l2213:	
  3277  0E8A  3001               	movlw	1
  3278  0E8B                     u1685:	
  3279  0E8B  35AD               	lslf	___awdiv@quotient,f
  3280  0E8C  0DAE               	rlf	___awdiv@quotient+1,f
  3281  0E8D  0B89               	decfsz	9,f
  3282  0E8E  2E8B               	goto	u1685
  3283  0E8F  0827               	movf	___awdiv@divisor+1,w
  3284  0E90  0229               	subwf	___awdiv@dividend+1,w
  3285  0E91  1D03               	skipz
  3286  0E92  2E95               	goto	u1695
  3287  0E93  0826               	movf	___awdiv@divisor,w
  3288  0E94  0228               	subwf	___awdiv@dividend,w
  3289  0E95                     u1695:	
  3290  0E95  1C03               	skipc
  3291  0E96  2E9C               	goto	l2219
  3292  0E97  0826               	movf	___awdiv@divisor,w
  3293  0E98  02A8               	subwf	___awdiv@dividend,f
  3294  0E99  0827               	movf	___awdiv@divisor+1,w
  3295  0E9A  3BA9               	subwfb	___awdiv@dividend+1,f
  3296  0E9B  142D               	bsf	___awdiv@quotient,0
  3297  0E9C                     l2219:	
  3298  0E9C  3001               	movlw	1
  3299  0E9D                     u1705:	
  3300  0E9D  36A7               	lsrf	___awdiv@divisor+1,f
  3301  0E9E  0CA6               	rrf	___awdiv@divisor,f
  3302  0E9F  0B89               	decfsz	9,f
  3303  0EA0  2E9D               	goto	u1705
  3304  0EA1  3001               	movlw	1
  3305  0EA2  02AB               	subwf	___awdiv@counter,f
  3306  0EA3  1D03               	btfss	3,2
  3307  0EA4  2E8A               	goto	l2213
  3308  0EA5                     l2223:	
  3309  0EA5  082C               	movf	___awdiv@sign,w
  3310  0EA6  1903               	btfsc	3,2
  3311  0EA7  2EAD               	goto	l2227
  3312  0EA8  09AD               	comf	___awdiv@quotient,f
  3313  0EA9  09AE               	comf	___awdiv@quotient+1,f
  3314  0EAA  0AAD               	incf	___awdiv@quotient,f
  3315  0EAB  1903               	skipnz
  3316  0EAC  0AAE               	incf	___awdiv@quotient+1,f
  3317  0EAD                     l2227:	
  3318  0EAD  082E               	movf	___awdiv@quotient+1,w
  3319  0EAE  01A7               	clrf	?___awdiv+1
  3320  0EAF  07A7               	addwf	?___awdiv+1,f
  3321  0EB0  082D               	movf	___awdiv@quotient,w
  3322  0EB1  01A6               	clrf	?___awdiv
  3323  0EB2  07A6               	addwf	?___awdiv,f
  3324  0EB3  0008               	return
  3325  0EB4                     __end_of___awdiv:	
  3326                           
  3327                           	psect	text6
  3328  0D49                     __ptext6:	
  3329 ;; *************** function _ToggleSleepGPS *****************
  3330 ;; Defined at:
  3331 ;;		line 335 in file "launcher_functions.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		wreg
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3345 ;;      Params:         0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       3       0       0       0       0       0       0
  3348 ;;      Totals:         0       3       0       0       0       0       0       0
  3349 ;;Total ram usage:        3 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    2
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _ToggleSleepGPS
  3361  0D49                     _ToggleSleepGPS:	
  3362                           
  3363                           ;launcher_functions.c: 337: PORTAbits.RA6 = 0;
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _ToggleSleepGPS: [wreg]
  3367  0D49  0020               	movlb	0	; select bank0
  3368  0D4A  130C               	bcf	12,6	;volatile
  3369                           
  3370                           ;launcher_functions.c: 338: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3371  0D4B  3015               	movlw	21
  3372  0D4C  00A2               	movwf	??_ToggleSleepGPS+2
  3373  0D4D  304B               	movlw	75
  3374  0D4E  00A1               	movwf	??_ToggleSleepGPS+1
  3375  0D4F  30D1               	movlw	209
  3376  0D50  00A0               	movwf	??_ToggleSleepGPS
  3377  0D51                     u2977:	
  3378  0D51  0BA0               	decfsz	??_ToggleSleepGPS,f
  3379  0D52  2D51               	goto	u2977
  3380  0D53  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3381  0D54  2D51               	goto	u2977
  3382  0D55  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3383  0D56  2D51               	goto	u2977
  3384  0D57  0000               	nop
  3385                           
  3386                           ;launcher_functions.c: 339: PORTAbits.RA6 = 1;
  3387  0D58  0020               	movlb	0	; select bank0
  3388  0D59  170C               	bsf	12,6	;volatile
  3389                           
  3390                           ;launcher_functions.c: 340: _delay((unsigned long)((100)*(16000000/4000.0)));
  3391  0D5A  3003               	movlw	3
  3392  0D5B  00A2               	movwf	??_ToggleSleepGPS+2
  3393  0D5C  3008               	movlw	8
  3394  0D5D  00A1               	movwf	??_ToggleSleepGPS+1
  3395  0D5E  3078               	movlw	120
  3396  0D5F  00A0               	movwf	??_ToggleSleepGPS
  3397  0D60                     u2987:	
  3398  0D60  0BA0               	decfsz	??_ToggleSleepGPS,f
  3399  0D61  2D60               	goto	u2987
  3400  0D62  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3401  0D63  2D60               	goto	u2987
  3402  0D64  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3403  0D65  2D60               	goto	u2987
  3404                           
  3405                           ;launcher_functions.c: 341: PORTAbits.RA6 = 0;
  3406  0D66  0020               	movlb	0	; select bank0
  3407  0D67  130C               	bcf	12,6	;volatile
  3408                           
  3409                           ;launcher_functions.c: 342: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3410  0D68  3015               	movlw	21
  3411  0D69  00A2               	movwf	??_ToggleSleepGPS+2
  3412  0D6A  304B               	movlw	75
  3413  0D6B  00A1               	movwf	??_ToggleSleepGPS+1
  3414  0D6C  30D1               	movlw	209
  3415  0D6D  00A0               	movwf	??_ToggleSleepGPS
  3416  0D6E                     u2997:	
  3417  0D6E  0BA0               	decfsz	??_ToggleSleepGPS,f
  3418  0D6F  2D6E               	goto	u2997
  3419  0D70  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3420  0D71  2D6E               	goto	u2997
  3421  0D72  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3422  0D73  2D6E               	goto	u2997
  3423  0D74  0000               	nop
  3424  0D75  0008               	return
  3425  0D76                     __end_of_ToggleSleepGPS:	
  3426                           
  3427                           	psect	text7
  3428  076D                     __ptext7:	
  3429 ;; *************** function _SetupGPS *****************
  3430 ;; Defined at:
  3431 ;;		line 353 in file "launcher_functions.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  message        50    0[BANK1 ] unsigned char [50]
  3436 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  3437 ;;  MID             4   56[BANK1 ] unsigned char [4]
  3438 ;;  x               2   60[BANK1 ] int 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;		None               void
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3448 ;;      Params:         0       0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0      62       0       0       0       0       0
  3450 ;;      Temps:          0       3       0       0       0       0       0       0
  3451 ;;      Totals:         0       3      62       0       0       0       0       0
  3452 ;;Total ram usage:       65 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    4
  3455 ;; This function calls:
  3456 ;;		_sprintf
  3457 ;;		_uart_write_message
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _SetupGPS
  3465  076D                     _SetupGPS:	
  3466                           
  3467                           ;launcher_functions.c: 355: int x;
  3468                           ;launcher_functions.c: 356: unsigned char startSequence[6] = "$PSRF";
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3472  076D  306A               	movlw	low SetupGPS@F4925
  3473  076E  0086               	movwf	6
  3474  076F  3001               	movlw	high SetupGPS@F4925
  3475  0770  0087               	movwf	7
  3476  0771  30D2               	movlw	low SetupGPS@startSequence
  3477  0772  0084               	movwf	4
  3478  0773  3000               	movlw	high SetupGPS@startSequence
  3479  0774  0085               	movwf	5
  3480  0775  3006               	movlw	6
  3481  0776  0020               	movlb	0	; select bank0
  3482  0777  00C1               	movwf	??_SetupGPS
  3483  0778                     u2210:	
  3484  0778  0016               	moviw fsr1++
  3485  0779  001A               	movwi fsr0++
  3486  077A  0BC1               	decfsz	??_SetupGPS,f
  3487  077B  2F78               	goto	u2210
  3488                           
  3489                           ;launcher_functions.c: 357: unsigned char MID[4] = "103";
  3490  077C  0021               	movlb	1	; select bank1
  3491  077D  0861               	movf	(SetupGPS@F4927+3)^(0+128),w
  3492  077E  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  3493  077F  0860               	movf	(SetupGPS@F4927+2)^(0+128),w
  3494  0780  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  3495  0781  085F               	movf	(SetupGPS@F4927+1)^(0+128),w
  3496  0782  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  3497  0783  085E               	movf	SetupGPS@F4927^(0+128),w
  3498  0784  00D8               	movwf	SetupGPS@MID^(0+128)
  3499                           
  3500                           ;launcher_functions.c: 358: unsigned char message[50];
  3501                           ;launcher_functions.c: 361: for(x = 0; x < 6; x++)
  3502  0785  01DC               	clrf	SetupGPS@x^(0+128)
  3503  0786  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  3504  0787  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3505  0788  3A80               	xorlw	128
  3506  0789  0020               	movlb	0	; select bank0
  3507  078A  00C1               	movwf	??_SetupGPS
  3508  078B  3080               	movlw	128
  3509  078C  0241               	subwf	??_SetupGPS,w
  3510  078D  1D03               	skipz
  3511  078E  2F92               	goto	u2225
  3512  078F  3006               	movlw	6
  3513  0790  0021               	movlb	1	; select bank1
  3514  0791  025C               	subwf	SetupGPS@x^(0+128),w
  3515  0792                     u2225:	
  3516  0792  1803               	btfsc	3,0
  3517  0793  2FD8               	goto	l2725
  3518  0794                     l2715:	
  3519                           
  3520                           ;launcher_functions.c: 362: {
  3521                           ;launcher_functions.c: 363: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3522  0794  3015               	movlw	21
  3523  0795  0020               	movlb	0	; select bank0
  3524  0796  00C3               	movwf	??_SetupGPS+2
  3525  0797  304B               	movlw	75
  3526  0798  00C2               	movwf	??_SetupGPS+1
  3527  0799  30D1               	movlw	209
  3528  079A  00C1               	movwf	??_SetupGPS
  3529  079B                     u3007:	
  3530  079B  0BC1               	decfsz	??_SetupGPS,f
  3531  079C  2F9B               	goto	u3007
  3532  079D  0BC2               	decfsz	??_SetupGPS+1,f
  3533  079E  2F9B               	goto	u3007
  3534  079F  0BC3               	decfsz	??_SetupGPS+2,f
  3535  07A0  2F9B               	goto	u3007
  3536  07A1  0000               	nop
  3537                           
  3538                           ;launcher_functions.c: 364: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3539  07A2  300A               	movlw	low (STR_1| (0+32768))
  3540  07A3  0020               	movlb	0	; select bank0
  3541  07A4  00AE               	movwf	sprintf@f
  3542  07A5  3088               	movlw	high (STR_1| (0+32768))
  3543  07A6  00AF               	movwf	sprintf@f+1
  3544  07A7  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3545  07A8  00C1               	movwf	??_SetupGPS
  3546  07A9  0841               	movf	??_SetupGPS,w
  3547  07AA  00B0               	movwf	?_sprintf+2
  3548  07AB  30D8               	movlw	SetupGPS@MID& (0+255)
  3549  07AC  00C2               	movwf	??_SetupGPS+1
  3550  07AD  0842               	movf	??_SetupGPS+1,w
  3551  07AE  00B1               	movwf	?_sprintf+3
  3552  07AF  0021               	movlb	1	; select bank1
  3553  07B0  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3554  07B1  0020               	movlb	0	; select bank0
  3555  07B2  01B3               	clrf	?_sprintf+5
  3556  07B3  07B3               	addwf	?_sprintf+5,f
  3557  07B4  0021               	movlb	1	; select bank1
  3558  07B5  085C               	movf	SetupGPS@x^(0+128),w
  3559  07B6  0020               	movlb	0	; select bank0
  3560  07B7  01B2               	clrf	?_sprintf+4
  3561  07B8  07B2               	addwf	?_sprintf+4,f
  3562  07B9  30A0               	movlw	SetupGPS@message& (0+255)
  3563  07BA  3186  2667  3187   	fcall	_sprintf
  3564                           
  3565                           ;launcher_functions.c: 365: uart_write_message(message, 22);
  3566  07BD  3016               	movlw	22
  3567  07BE  0020               	movlb	0	; select bank0
  3568  07BF  00A8               	movwf	uart_write_message@size
  3569  07C0  3000               	movlw	0
  3570  07C1  00A9               	movwf	uart_write_message@size+1
  3571  07C2  30A0               	movlw	SetupGPS@message& (0+255)
  3572  07C3  318F  278A  3187   	fcall	_uart_write_message
  3573  07C6  3001               	movlw	1
  3574  07C7  0021               	movlb	1	; select bank1
  3575  07C8  07DC               	addwf	SetupGPS@x^(0+128),f
  3576  07C9  3000               	movlw	0
  3577  07CA  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  3578  07CB  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3579  07CC  3A80               	xorlw	128
  3580  07CD  0020               	movlb	0	; select bank0
  3581  07CE  00C1               	movwf	??_SetupGPS
  3582  07CF  3080               	movlw	128
  3583  07D0  0241               	subwf	??_SetupGPS,w
  3584  07D1  1D03               	skipz
  3585  07D2  2FD6               	goto	u2235
  3586  07D3  3006               	movlw	6
  3587  07D4  0021               	movlb	1	; select bank1
  3588  07D5  025C               	subwf	SetupGPS@x^(0+128),w
  3589  07D6                     u2235:	
  3590  07D6  1C03               	skipc
  3591  07D7  2F94               	goto	l2715
  3592  07D8                     l2725:	
  3593                           
  3594                           ;launcher_functions.c: 366: }
  3595                           ;launcher_functions.c: 368: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3596  07D8  3015               	movlw	21
  3597  07D9  0020               	movlb	0	; select bank0
  3598  07DA  00C3               	movwf	??_SetupGPS+2
  3599  07DB  304B               	movlw	75
  3600  07DC  00C2               	movwf	??_SetupGPS+1
  3601  07DD  30D1               	movlw	209
  3602  07DE  00C1               	movwf	??_SetupGPS
  3603  07DF                     u3017:	
  3604  07DF  0BC1               	decfsz	??_SetupGPS,f
  3605  07E0  2FDF               	goto	u3017
  3606  07E1  0BC2               	decfsz	??_SetupGPS+1,f
  3607  07E2  2FDF               	goto	u3017
  3608  07E3  0BC3               	decfsz	??_SetupGPS+2,f
  3609  07E4  2FDF               	goto	u3017
  3610  07E5  0000               	nop
  3611  07E6  0008               	return
  3612  07E7                     __end_of_SetupGPS:	
  3613                           
  3614                           	psect	text8
  3615  0F8A                     __ptext8:	
  3616 ;; *************** function _uart_write_message *****************
  3617 ;; Defined at:
  3618 ;;		line 308 in file "launcher_functions.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  data            1    wreg     PTR unsigned char 
  3621 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3622 ;;  size            2    8[BANK0 ] int 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3625 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3626 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3627 ;;  x               2   17[BANK0 ] int 
  3628 ;;  checksum        1   19[BANK0 ] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3638 ;;      Params:         0       2       0       0       0       0       0       0
  3639 ;;      Locals:         0      10       0       0       0       0       0       0
  3640 ;;      Temps:          0       3       0       0       0       0       0       0
  3641 ;;      Totals:         0      15       0       0       0       0       0       0
  3642 ;;Total ram usage:       15 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    3
  3645 ;; This function calls:
  3646 ;;		_compute_checksum
  3647 ;;		_uart_xmit
  3648 ;; This function is called by:
  3649 ;;		_SetupGPS
  3650 ;;		_UpdateGPS
  3651 ;;		_DisableGPS
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _uart_write_message
  3657  0F8A                     _uart_write_message:	
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3661                           ;uart_write_message@data stored from wreg
  3662  0F8A  0020               	movlb	0	; select bank0
  3663  0F8B  00B4               	movwf	uart_write_message@data
  3664                           
  3665                           ;launcher_functions.c: 310: int x;
  3666                           ;launcher_functions.c: 311: unsigned char checksum;
  3667                           ;launcher_functions.c: 312: unsigned char ascii_checksum[2];
  3668                           ;launcher_functions.c: 314: checksum = compute_checksum(data, size);
  3669  0F8C  0829               	movf	uart_write_message@size+1,w
  3670  0F8D  01A1               	clrf	compute_checksum@size+1
  3671  0F8E  07A1               	addwf	compute_checksum@size+1,f
  3672  0F8F  0828               	movf	uart_write_message@size,w
  3673  0F90  01A0               	clrf	compute_checksum@size
  3674  0F91  07A0               	addwf	compute_checksum@size,f
  3675  0F92  0834               	movf	uart_write_message@data,w
  3676  0F93  318D  25DC  318F   	fcall	_compute_checksum
  3677  0F96  0020               	movlb	0	; select bank0
  3678  0F97  00AA               	movwf	??_uart_write_message
  3679  0F98  082A               	movf	??_uart_write_message,w
  3680  0F99  00B3               	movwf	uart_write_message@checksum
  3681                           
  3682                           ;launcher_functions.c: 315: ascii_checksum[0] = checksum >> 4;
  3683  0F9A  0833               	movf	uart_write_message@checksum,w
  3684  0F9B  00AA               	movwf	??_uart_write_message
  3685  0F9C  3004               	movlw	4
  3686  0F9D                     u1875:	
  3687  0F9D  36AA               	lsrf	??_uart_write_message,f
  3688  0F9E  0B89               	decfsz	9,f
  3689  0F9F  2F9D               	goto	u1875
  3690  0FA0  082A               	movf	??_uart_write_message,w
  3691  0FA1  00AB               	movwf	??_uart_write_message+1
  3692  0FA2  082B               	movf	??_uart_write_message+1,w
  3693  0FA3  00B5               	movwf	uart_write_message@ascii_checksum
  3694                           
  3695                           ;launcher_functions.c: 316: ascii_checksum[1] = checksum & 0x0F;
  3696  0FA4  0833               	movf	uart_write_message@checksum,w
  3697  0FA5  390F               	andlw	15
  3698  0FA6  00AA               	movwf	??_uart_write_message
  3699  0FA7  082A               	movf	??_uart_write_message,w
  3700  0FA8  00B6               	movwf	uart_write_message@ascii_checksum+1
  3701                           
  3702                           ;launcher_functions.c: 318: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3703  0FA9  300A               	movlw	10
  3704  0FAA  0235               	subwf	uart_write_message@ascii_checksum,w
  3705  0FAB  1C03               	skipc
  3706  0FAC  2FAF               	goto	l2299
  3707  0FAD  3037               	movlw	55
  3708  0FAE  2FB0               	goto	L2
  3709  0FAF                     l2299:	
  3710  0FAF  3030               	movlw	48
  3711  0FB0                     L2:	
  3712  0FB0  00AD               	movwf	_uart_write_message$1397
  3713  0FB1  3000               	movlw	0
  3714  0FB2  00AE               	movwf	_uart_write_message$1397+1
  3715  0FB3  082D               	movf	_uart_write_message$1397,w
  3716  0FB4  00AA               	movwf	??_uart_write_message
  3717  0FB5  082A               	movf	??_uart_write_message,w
  3718  0FB6  07B5               	addwf	uart_write_message@ascii_checksum,f
  3719                           
  3720                           ;launcher_functions.c: 319: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3721  0FB7  300A               	movlw	10
  3722  0FB8  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3723  0FB9  1C03               	skipc
  3724  0FBA  2FBD               	goto	l2307
  3725  0FBB  3037               	movlw	55
  3726  0FBC  2FBE               	goto	L3
  3727  0FBD                     l2307:	
  3728  0FBD  3030               	movlw	48
  3729  0FBE                     L3:	
  3730  0FBE  00AF               	movwf	_uart_write_message$1398
  3731  0FBF  3000               	movlw	0
  3732  0FC0  00B0               	movwf	_uart_write_message$1398+1
  3733  0FC1  082F               	movf	_uart_write_message$1398,w
  3734  0FC2  00AA               	movwf	??_uart_write_message
  3735  0FC3  082A               	movf	??_uart_write_message,w
  3736  0FC4  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3737                           
  3738                           ;launcher_functions.c: 321: for(x=0; x<size-1; x++)
  3739  0FC5  01B1               	clrf	uart_write_message@x
  3740  0FC6  01B2               	clrf	uart_write_message@x+1
  3741  0FC7                     l2317:	
  3742  0FC7  0828               	movf	uart_write_message@size,w
  3743  0FC8  3EFF               	addlw	255
  3744  0FC9  00AA               	movwf	??_uart_write_message
  3745  0FCA  30FF               	movlw	255
  3746  0FCB  3D29               	addwfc	uart_write_message@size+1,w
  3747  0FCC  00AB               	movwf	??_uart_write_message+1
  3748  0FCD  0832               	movf	uart_write_message@x+1,w
  3749  0FCE  3A80               	xorlw	128
  3750  0FCF  00AC               	movwf	??_uart_write_message+2
  3751  0FD0  082B               	movf	??_uart_write_message+1,w
  3752  0FD1  3A80               	xorlw	128
  3753  0FD2  022C               	subwf	??_uart_write_message+2,w
  3754  0FD3  1D03               	skipz
  3755  0FD4  2FD7               	goto	u1905
  3756  0FD5  082A               	movf	??_uart_write_message,w
  3757  0FD6  0231               	subwf	uart_write_message@x,w
  3758  0FD7                     u1905:	
  3759  0FD7  1803               	btfsc	3,0
  3760  0FD8  2FEA               	goto	l2319
  3761                           
  3762                           ;launcher_functions.c: 322: {
  3763                           ;launcher_functions.c: 323: uart_xmit(data[x]);
  3764  0FD9  0020               	movlb	0	; select bank0
  3765  0FDA  0831               	movf	uart_write_message@x,w
  3766  0FDB  0734               	addwf	uart_write_message@data,w
  3767  0FDC  00AA               	movwf	??_uart_write_message
  3768  0FDD  082A               	movf	??_uart_write_message,w
  3769  0FDE  0086               	movwf	6
  3770  0FDF  0187               	clrf	7
  3771  0FE0  0801               	movf	1,w
  3772  0FE1  318B  23D0  318F   	fcall	_uart_xmit
  3773  0FE4  3001               	movlw	1
  3774  0FE5  0020               	movlb	0	; select bank0
  3775  0FE6  07B1               	addwf	uart_write_message@x,f
  3776  0FE7  3000               	movlw	0
  3777  0FE8  3DB2               	addwfc	uart_write_message@x+1,f
  3778  0FE9  2FC7               	goto	l2317
  3779  0FEA                     l2319:	
  3780                           
  3781                           ;launcher_functions.c: 324: }
  3782                           ;launcher_functions.c: 325: uart_xmit(ascii_checksum[0]);
  3783  0FEA  0020               	movlb	0	; select bank0
  3784  0FEB  0835               	movf	uart_write_message@ascii_checksum,w
  3785  0FEC  318B  23D0  318F   	fcall	_uart_xmit
  3786                           
  3787                           ;launcher_functions.c: 326: uart_xmit(ascii_checksum[1]);
  3788  0FEF  0020               	movlb	0	; select bank0
  3789  0FF0  0836               	movf	uart_write_message@ascii_checksum+1,w
  3790  0FF1  318B  23D0  318F   	fcall	_uart_xmit
  3791                           
  3792                           ;launcher_functions.c: 328: uart_xmit(0x0D);
  3793  0FF4  300D               	movlw	13
  3794  0FF5  318B  23D0  318F   	fcall	_uart_xmit
  3795                           
  3796                           ;launcher_functions.c: 329: uart_xmit(0x0A);
  3797  0FF8  300A               	movlw	10
  3798  0FF9  318B  23D0  318F   	fcall	_uart_xmit
  3799  0FFC                     l396:	
  3800                           ;launcher_functions.c: 330: while(!TXSTAbits.TRMT);
  3801                           
  3802  0FFC  0023               	movlb	3	; select bank3
  3803  0FFD  189E               	btfsc	30,1	;volatile
  3804  0FFE  0008               	return
  3805  0FFF  2FFC               	goto	l396
  3806  1000                     __end_of_uart_write_message:	
  3807                           
  3808                           	psect	text9
  3809  0BD0                     __ptext9:	
  3810 ;; *************** function _uart_xmit *****************
  3811 ;; Defined at:
  3812 ;;		line 300 in file "launcher_functions.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  mydata_byte     1    wreg     unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3826 ;;      Params:         0       0       0       0       0       0       0       0
  3827 ;;      Locals:         0       1       0       0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0
  3829 ;;      Totals:         0       1       0       0       0       0       0       0
  3830 ;;Total ram usage:        1 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    2
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_uart_write_message
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function _uart_xmit
  3842  0BD0                     _uart_xmit:	
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _uart_xmit: [wreg]
  3846                           ;uart_xmit@mydata_byte stored from wreg
  3847  0BD0  0020               	movlb	0	; select bank0
  3848  0BD1  00A0               	movwf	uart_xmit@mydata_byte
  3849  0BD2                     l379:	
  3850                           ;launcher_functions.c: 303: while(!TXSTAbits.TRMT);
  3851                           
  3852  0BD2  0023               	movlb	3	; select bank3
  3853  0BD3  1C9E               	btfss	30,1	;volatile
  3854  0BD4  2BD2               	goto	l379
  3855                           
  3856                           ;launcher_functions.c: 304: TXREG = mydata_byte;
  3857  0BD5  0020               	movlb	0	; select bank0
  3858  0BD6  0820               	movf	uart_xmit@mydata_byte,w
  3859  0BD7  0023               	movlb	3	; select bank3
  3860  0BD8  009A               	movwf	26	;volatile
  3861  0BD9  0008               	return
  3862  0BDA                     __end_of_uart_xmit:	
  3863                           
  3864                           	psect	text10
  3865  0DDC                     __ptext10:	
  3866 ;; *************** function _compute_checksum *****************
  3867 ;; Defined at:
  3868 ;;		line 288 in file "launcher_functions.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  data            1    wreg     PTR unsigned char 
  3871 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3872 ;;  size            2    0[BANK0 ] int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3875 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3876 ;;  x               2    6[BANK0 ] int 
  3877 ;;  checksum        1    4[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      unsigned char 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3887 ;;      Params:         0       2       0       0       0       0       0       0
  3888 ;;      Locals:         0       4       0       0       0       0       0       0
  3889 ;;      Temps:          0       2       0       0       0       0       0       0
  3890 ;;      Totals:         0       8       0       0       0       0       0       0
  3891 ;;Total ram usage:        8 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_uart_write_message
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _compute_checksum
  3903  0DDC                     _compute_checksum:	
  3904                           
  3905                           ;incstack = 0
  3906                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3907                           ;compute_checksum@data stored from wreg
  3908  0DDC  0020               	movlb	0	; select bank0
  3909  0DDD  00A5               	movwf	compute_checksum@data
  3910                           
  3911                           ;launcher_functions.c: 290: unsigned char checksum = 0;
  3912  0DDE  01A4               	clrf	compute_checksum@checksum
  3913                           
  3914                           ;launcher_functions.c: 291: int x;
  3915                           ;launcher_functions.c: 292: for(x=0; x<size; x++)
  3916  0DDF  01A6               	clrf	compute_checksum@x
  3917  0DE0  01A7               	clrf	compute_checksum@x+1
  3918  0DE1                     l2149:	
  3919  0DE1  0827               	movf	compute_checksum@x+1,w
  3920  0DE2  3A80               	xorlw	128
  3921  0DE3  00A2               	movwf	??_compute_checksum
  3922  0DE4  0821               	movf	compute_checksum@size+1,w
  3923  0DE5  3A80               	xorlw	128
  3924  0DE6  0222               	subwf	??_compute_checksum,w
  3925  0DE7  1D03               	skipz
  3926  0DE8  2DEB               	goto	u1555
  3927  0DE9  0820               	movf	compute_checksum@size,w
  3928  0DEA  0226               	subwf	compute_checksum@x,w
  3929  0DEB                     u1555:	
  3930  0DEB  1803               	btfsc	3,0
  3931  0DEC  2E1B               	goto	l2151
  3932                           
  3933                           ;launcher_functions.c: 293: {
  3934                           ;launcher_functions.c: 294: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3935  0DED  0020               	movlb	0	; select bank0
  3936  0DEE  0826               	movf	compute_checksum@x,w
  3937  0DEF  0725               	addwf	compute_checksum@data,w
  3938  0DF0  00A2               	movwf	??_compute_checksum
  3939  0DF1  0822               	movf	??_compute_checksum,w
  3940  0DF2  0086               	movwf	6
  3941  0DF3  0187               	clrf	7
  3942  0DF4  0801               	movf	1,w
  3943  0DF5  3A24               	xorlw	36
  3944  0DF6  1903               	skipnz
  3945  0DF7  2E16               	goto	l2147
  3946  0DF8  0826               	movf	compute_checksum@x,w
  3947  0DF9  0725               	addwf	compute_checksum@data,w
  3948  0DFA  00A2               	movwf	??_compute_checksum
  3949  0DFB  0822               	movf	??_compute_checksum,w
  3950  0DFC  0086               	movwf	6
  3951  0DFD  0187               	clrf	7
  3952  0DFE  0801               	movf	1,w
  3953  0DFF  3A2A               	xorlw	42
  3954  0E00  1903               	skipnz
  3955  0E01  2E16               	goto	l2147
  3956  0E02  0826               	movf	compute_checksum@x,w
  3957  0E03  0725               	addwf	compute_checksum@data,w
  3958  0E04  00A2               	movwf	??_compute_checksum
  3959  0E05  0822               	movf	??_compute_checksum,w
  3960  0E06  0086               	movwf	6
  3961  0E07  0187               	clrf	7
  3962  0E08  0801               	movf	1,w
  3963  0E09  3A21               	xorlw	33
  3964  0E0A  1903               	skipnz
  3965  0E0B  2E16               	goto	l2147
  3966                           
  3967                           ;launcher_functions.c: 295: checksum ^= data[x];
  3968  0E0C  0826               	movf	compute_checksum@x,w
  3969  0E0D  0725               	addwf	compute_checksum@data,w
  3970  0E0E  00A2               	movwf	??_compute_checksum
  3971  0E0F  0822               	movf	??_compute_checksum,w
  3972  0E10  0086               	movwf	6
  3973  0E11  0187               	clrf	7
  3974  0E12  0801               	movf	1,w
  3975  0E13  00A3               	movwf	??_compute_checksum+1
  3976  0E14  0823               	movf	??_compute_checksum+1,w
  3977  0E15  06A4               	xorwf	compute_checksum@checksum,f
  3978  0E16                     l2147:	
  3979  0E16  3001               	movlw	1
  3980  0E17  07A6               	addwf	compute_checksum@x,f
  3981  0E18  3000               	movlw	0
  3982  0E19  3DA7               	addwfc	compute_checksum@x+1,f
  3983  0E1A  2DE1               	goto	l2149
  3984  0E1B                     l2151:	
  3985                           
  3986                           ;launcher_functions.c: 296: }
  3987                           ;launcher_functions.c: 297: return checksum;
  3988  0E1B  0020               	movlb	0	; select bank0
  3989  0E1C  0824               	movf	compute_checksum@checksum,w
  3990  0E1D  0008               	return
  3991  0E1E                     __end_of_compute_checksum:	
  3992                           
  3993                           	psect	text11
  3994  0667                     __ptext11:	
  3995 ;; *************** function _sprintf *****************
  3996 ;; Defined at:
  3997 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  sp              1    wreg     PTR unsigned char 
  4000 ;;		 -> SetupGPS@message(50), 
  4001 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4002 ;;		 -> STR_1(19), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  4005 ;;		 -> SetupGPS@message(50), 
  4006 ;;  _val            4   28[BANK0 ] struct .
  4007 ;;  c               1   32[BANK0 ] char 
  4008 ;;  ap              1   26[BANK0 ] PTR void [1]
  4009 ;;		 -> ?_sprintf(2), 
  4010 ;;  prec            1   25[BANK0 ] char 
  4011 ;;  flag            1   24[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  2   14[BANK0 ] int 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4021 ;;      Params:         0       6       0       0       0       0       0       0
  4022 ;;      Locals:         0       9       0       0       0       0       0       0
  4023 ;;      Temps:          0       4       0       0       0       0       0       0
  4024 ;;      Totals:         0      19       0       0       0       0       0       0
  4025 ;;Total ram usage:       19 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    3
  4028 ;; This function calls:
  4029 ;;		___lwdiv
  4030 ;;		___lwmod
  4031 ;; This function is called by:
  4032 ;;		_SetupGPS
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function _sprintf
  4038  0667                     _sprintf:	
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4042                           ;sprintf@sp stored from wreg
  4043  0667  0020               	movlb	0	; select bank0
  4044  0668  00BB               	movwf	sprintf@sp
  4045                           
  4046                           ;doprnt.c: 494: va_list ap;
  4047                           ;doprnt.c: 499: signed char c;
  4048                           ;doprnt.c: 506: signed char prec;
  4049                           ;doprnt.c: 508: unsigned char flag;
  4050                           ;doprnt.c: 527: union {
  4051                           ;doprnt.c: 528: unsigned int _val;
  4052                           ;doprnt.c: 529: struct {
  4053                           ;doprnt.c: 530: const char * _cp;
  4054                           ;doprnt.c: 531: unsigned _len;
  4055                           ;doprnt.c: 532: } _str;
  4056                           ;doprnt.c: 533: } _val;
  4057                           ;doprnt.c: 542: *ap = __va_start();
  4058  0669  3030               	movlw	(?_sprintf+2)& (0+255)
  4059  066A  00B4               	movwf	??_sprintf
  4060  066B  0834               	movf	??_sprintf,w
  4061  066C  00BA               	movwf	sprintf@ap
  4062  066D                     l2389:	
  4063                           ;doprnt.c: 545: while(c = *f++) {
  4064                           
  4065  066D  082F               	movf	sprintf@f+1,w
  4066  066E  00B5               	movwf	??_sprintf+1
  4067  066F  082E               	movf	sprintf@f,w
  4068  0670  00B4               	movwf	??_sprintf
  4069  0671  0AAE               	incf	sprintf@f,f
  4070  0672  1903               	skipnz
  4071  0673  0AAF               	incf	sprintf@f+1,f
  4072  0674  0834               	movf	??_sprintf,w
  4073  0675  0084               	movwf	4
  4074  0676  0835               	movf	??_sprintf+1,w
  4075  0677  0085               	movwf	5
  4076  0678  0800               	movf	0,w	;code access
  4077  0679  00B6               	movwf	??_sprintf+2
  4078  067A  0836               	movf	??_sprintf+2,w
  4079  067B  00C0               	movwf	sprintf@c
  4080  067C  08C0               	movf	sprintf@c,f
  4081  067D  1903               	btfsc	3,2
  4082  067E  2F68               	goto	l2391
  4083                           
  4084                           ;doprnt.c: 547: if(c != '%')
  4085  067F  0840               	movf	sprintf@c,w
  4086  0680  3A25               	xorlw	37
  4087  0681  1903               	skipnz
  4088  0682  2E8F               	goto	l2329
  4089                           
  4090                           ;doprnt.c: 549: {
  4091                           ;doprnt.c: 550: ((*sp++ = (c)));
  4092  0683  0840               	movf	sprintf@c,w
  4093  0684  00B4               	movwf	??_sprintf
  4094  0685  083B               	movf	sprintf@sp,w
  4095  0686  0086               	movwf	6
  4096  0687  0187               	clrf	7
  4097  0688  0834               	movf	??_sprintf,w
  4098  0689  0081               	movwf	1
  4099  068A  3001               	movlw	1
  4100  068B  00B4               	movwf	??_sprintf
  4101  068C  0834               	movf	??_sprintf,w
  4102  068D  07BB               	addwf	sprintf@sp,f
  4103                           
  4104                           ;doprnt.c: 551: continue;
  4105  068E  2E6D               	goto	l2389
  4106  068F                     l2329:	
  4107                           
  4108                           ;doprnt.c: 552: }
  4109                           ;doprnt.c: 557: flag = 0;
  4110  068F  01B8               	clrf	sprintf@flag
  4111                           
  4112                           ;doprnt.c: 644: switch(c = *f++) {
  4113  0690  2EC0               	goto	l2349
  4114  0691                     l2331:	
  4115                           ;doprnt.c: 737: case 's':
  4116                           
  4117                           ;doprnt.c: 707: case 'i':
  4118                           ;doprnt.c: 708: break;
  4119                           
  4120                           ;doprnt.c: 706: case 'd':
  4121                           
  4122                           ;doprnt.c: 647: goto alldone;
  4123                           
  4124                           ;doprnt.c: 646: case 0:
  4125                           
  4126                           
  4127                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  4128  0691  083A               	movf	sprintf@ap,w
  4129  0692  0086               	movwf	6
  4130  0693  0187               	clrf	7
  4131  0694  0801               	movf	1,w
  4132  0695  00BC               	movwf	sprintf@_val
  4133  0696  3000               	movlw	0
  4134  0697  00BD               	movwf	sprintf@_val+1
  4135  0698  3001               	movlw	1
  4136  0699  00B4               	movwf	??_sprintf
  4137  069A  0834               	movf	??_sprintf,w
  4138  069B  07BA               	addwf	sprintf@ap,f
  4139                           
  4140                           ;doprnt.c: 749: if(!_val._str._cp)
  4141  069C  083D               	movf	sprintf@_val+1,w
  4142  069D  043C               	iorwf	sprintf@_val,w
  4143  069E  1D03               	skipz
  4144  069F  2EA4               	goto	l2345
  4145                           
  4146                           ;doprnt.c: 750: _val._str._cp = "(null)";
  4147  06A0  301D               	movlw	low (STR_2| (0+32768))
  4148  06A1  00BC               	movwf	sprintf@_val
  4149  06A2  3088               	movlw	high (STR_2| (0+32768))
  4150  06A3  00BD               	movwf	sprintf@_val+1
  4151  06A4                     l2345:	
  4152                           ;doprnt.c: 786: while(*_val._str._cp)
  4153                           
  4154  06A4  083C               	movf	sprintf@_val,w
  4155  06A5  0084               	movwf	4
  4156  06A6  083D               	movf	sprintf@_val+1,w
  4157  06A7  0085               	movwf	5
  4158  06A8  0800               	movf	0,w	;code access
  4159  06A9  3800               	iorlw	0
  4160  06AA  1903               	btfsc	3,2
  4161  06AB  2E6D               	goto	l2389
  4162                           
  4163                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  4164  06AC  083C               	movf	sprintf@_val,w
  4165  06AD  0084               	movwf	4
  4166  06AE  083D               	movf	sprintf@_val+1,w
  4167  06AF  0085               	movwf	5
  4168  06B0  0800               	movf	0,w	;code access
  4169  06B1  00B4               	movwf	??_sprintf
  4170  06B2  083B               	movf	sprintf@sp,w
  4171  06B3  0086               	movwf	6
  4172  06B4  0187               	clrf	7
  4173  06B5  0834               	movf	??_sprintf,w
  4174  06B6  0081               	movwf	1
  4175  06B7  3001               	movlw	1
  4176  06B8  07BC               	addwf	sprintf@_val,f
  4177  06B9  3000               	movlw	0
  4178  06BA  3DBD               	addwfc	sprintf@_val+1,f
  4179  06BB  3001               	movlw	1
  4180  06BC  00B4               	movwf	??_sprintf
  4181  06BD  0834               	movf	??_sprintf,w
  4182  06BE  07BB               	addwf	sprintf@sp,f
  4183  06BF  2EA4               	goto	l2345
  4184  06C0                     l2349:	
  4185                           ;doprnt.c: 831: }
  4186                           
  4187                           ;doprnt.c: 822: continue;
  4188                           
  4189                           ;doprnt.c: 811: default:
  4190                           
  4191                           ;doprnt.c: 788: continue;
  4192                           
  4193  06C0  082F               	movf	sprintf@f+1,w
  4194  06C1  00B5               	movwf	??_sprintf+1
  4195  06C2  082E               	movf	sprintf@f,w
  4196  06C3  00B4               	movwf	??_sprintf
  4197  06C4  0AAE               	incf	sprintf@f,f
  4198  06C5  1903               	skipnz
  4199  06C6  0AAF               	incf	sprintf@f+1,f
  4200  06C7  0834               	movf	??_sprintf,w
  4201  06C8  0084               	movwf	4
  4202  06C9  0835               	movf	??_sprintf+1,w
  4203  06CA  0085               	movwf	5
  4204  06CB  0800               	movf	0,w	;code access
  4205  06CC  00C0               	movwf	sprintf@c
  4206                           
  4207                           ; Switch size 1, requested type "space"
  4208                           ; Number of cases is 4, Range of values is 0 to 115
  4209                           ; switch strategies available:
  4210                           ; Name         Instructions Cycles
  4211                           ; simple_byte           13     7 (average)
  4212                           ; direct_byte          238     6 (fixed)
  4213                           ; jumptable            260     6 (fixed)
  4214                           ;	Chosen strategy is simple_byte
  4215  06CD  3A00               	xorlw	0	; case 0
  4216  06CE  1903               	skipnz
  4217  06CF  2F68               	goto	l2391
  4218  06D0  3A64               	xorlw	100	; case 100
  4219  06D1  1903               	skipnz
  4220  06D2  2EDA               	goto	l2351
  4221  06D3  3A0D               	xorlw	13	; case 105
  4222  06D4  1903               	skipnz
  4223  06D5  2EDA               	goto	l2351
  4224  06D6  3A1A               	xorlw	26	; case 115
  4225  06D7  1903               	skipnz
  4226  06D8  2E91               	goto	l2331
  4227  06D9  2E6D               	goto	l2389
  4228  06DA                     l2351:	
  4229                           
  4230                           ;doprnt.c: 1262: {
  4231                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4232  06DA  083A               	movf	sprintf@ap,w
  4233  06DB  0086               	movwf	6
  4234  06DC  0187               	clrf	7
  4235  06DD  3F40               	moviw [0]fsr1
  4236  06DE  00BC               	movwf	sprintf@_val
  4237  06DF  3F41               	moviw [1]fsr1
  4238  06E0  00BD               	movwf	sprintf@_val+1
  4239  06E1  3002               	movlw	2
  4240  06E2  00B4               	movwf	??_sprintf
  4241  06E3  0834               	movf	??_sprintf,w
  4242  06E4  07BA               	addwf	sprintf@ap,f
  4243                           
  4244                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4245  06E5  1FBD               	btfss	sprintf@_val+1,7
  4246  06E6  2EF0               	goto	l2361
  4247                           
  4248                           ;doprnt.c: 1271: flag |= 0x03;
  4249  06E7  3003               	movlw	3
  4250  06E8  00B4               	movwf	??_sprintf
  4251  06E9  0834               	movf	??_sprintf,w
  4252  06EA  04B8               	iorwf	sprintf@flag,f
  4253                           
  4254                           ;doprnt.c: 1272: _val._val = -_val._val;
  4255  06EB  09BC               	comf	sprintf@_val,f
  4256  06EC  09BD               	comf	sprintf@_val+1,f
  4257  06ED  0ABC               	incf	sprintf@_val,f
  4258  06EE  1903               	skipnz
  4259  06EF  0ABD               	incf	sprintf@_val+1,f
  4260  06F0                     l2361:	
  4261                           
  4262                           ;doprnt.c: 1273: }
  4263                           ;doprnt.c: 1275: }
  4264                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4265  06F0  01C0               	clrf	sprintf@c
  4266  06F1  0AC0               	incf	sprintf@c,f
  4267  06F2  0840               	movf	sprintf@c,w
  4268  06F3  3A05               	xorlw	5
  4269  06F4  1903               	btfsc	3,2
  4270  06F5  2F15               	goto	l2373
  4271  06F6                     l2365:	
  4272                           
  4273                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4274  06F6  0840               	movf	sprintf@c,w
  4275  06F7  00B4               	movwf	??_sprintf
  4276  06F8  01B5               	clrf	??_sprintf+1
  4277  06F9  35B4               	lslf	??_sprintf,f
  4278  06FA  0DB5               	rlf	??_sprintf+1,f
  4279  06FB  3000               	movlw	low (_dpowers| (0+32768))
  4280  06FC  0734               	addwf	??_sprintf,w
  4281  06FD  0084               	movwf	4
  4282  06FE  3088               	movlw	high (_dpowers| (0+32768))
  4283  06FF  3D35               	addwfc	??_sprintf+1,w
  4284  0700  0085               	movwf	5
  4285  0701  3F00               	moviw [0]fsr0
  4286  0702  00B6               	movwf	??_sprintf+2
  4287  0703  3F01               	moviw [1]fsr0
  4288  0704  00B7               	movwf	??_sprintf+3
  4289  0705  0837               	movf	??_sprintf+3,w
  4290  0706  023D               	subwf	sprintf@_val+1,w
  4291  0707  1D03               	skipz
  4292  0708  2F0B               	goto	u1975
  4293  0709  0836               	movf	??_sprintf+2,w
  4294  070A  023C               	subwf	sprintf@_val,w
  4295  070B                     u1975:	
  4296  070B  1C03               	btfss	3,0
  4297  070C  2F15               	goto	l2373
  4298                           
  4299                           ;doprnt.c: 1316: break;
  4300  070D  3001               	movlw	1
  4301  070E  00B4               	movwf	??_sprintf
  4302  070F  0834               	movf	??_sprintf,w
  4303  0710  07C0               	addwf	sprintf@c,f
  4304  0711  0840               	movf	sprintf@c,w
  4305  0712  3A05               	xorlw	5
  4306  0713  1D03               	skipz
  4307  0714  2EF6               	goto	l2365
  4308  0715                     l2373:	
  4309                           
  4310                           ;doprnt.c: 1431: {
  4311                           ;doprnt.c: 1447: if(flag & 0x03)
  4312  0715  0838               	movf	sprintf@flag,w
  4313  0716  3903               	andlw	3
  4314  0717  1903               	btfsc	3,2
  4315  0718  2F24               	goto	l2379
  4316                           
  4317                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4318  0719  302D               	movlw	45
  4319  071A  00B4               	movwf	??_sprintf
  4320  071B  083B               	movf	sprintf@sp,w
  4321  071C  0086               	movwf	6
  4322  071D  0187               	clrf	7
  4323  071E  0834               	movf	??_sprintf,w
  4324  071F  0081               	movwf	1
  4325  0720  3001               	movlw	1
  4326  0721  00B4               	movwf	??_sprintf
  4327  0722  0834               	movf	??_sprintf,w
  4328  0723  07BB               	addwf	sprintf@sp,f
  4329  0724                     l2379:	
  4330                           
  4331                           ;doprnt.c: 1478: }
  4332                           ;doprnt.c: 1481: prec = c;
  4333  0724  0840               	movf	sprintf@c,w
  4334  0725  00B4               	movwf	??_sprintf
  4335  0726  0834               	movf	??_sprintf,w
  4336  0727  00B9               	movwf	sprintf@prec
  4337  0728                     l2387:	
  4338                           ;doprnt.c: 1483: while(prec--) {
  4339                           
  4340  0728  30FF               	movlw	-1
  4341  0729  00B4               	movwf	??_sprintf
  4342  072A  0834               	movf	??_sprintf,w
  4343  072B  07B9               	addwf	sprintf@prec,f
  4344  072C  0839               	movf	sprintf@prec,w
  4345  072D  3AFF               	xorlw	255
  4346  072E  1903               	btfsc	3,2
  4347  072F  2E6D               	goto	l2389
  4348                           
  4349                           ;doprnt.c: 1487: {
  4350                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4351  0730  300A               	movlw	10
  4352  0731  00A8               	movwf	___lwmod@divisor
  4353  0732  3000               	movlw	0
  4354  0733  00A9               	movwf	___lwmod@divisor+1
  4355  0734  0839               	movf	sprintf@prec,w
  4356  0735  00B4               	movwf	??_sprintf
  4357  0736  01B5               	clrf	??_sprintf+1
  4358  0737  35B4               	lslf	??_sprintf,f
  4359  0738  0DB5               	rlf	??_sprintf+1,f
  4360  0739  3000               	movlw	low (_dpowers| (0+32768))
  4361  073A  0734               	addwf	??_sprintf,w
  4362  073B  0084               	movwf	4
  4363  073C  3088               	movlw	high (_dpowers| (0+32768))
  4364  073D  3D35               	addwfc	??_sprintf+1,w
  4365  073E  0085               	movwf	5
  4366  073F  3F00               	moviw [0]fsr0
  4367  0740  00A0               	movwf	___lwdiv@divisor
  4368  0741  3F01               	moviw [1]fsr0
  4369  0742  00A1               	movwf	___lwdiv@divisor+1
  4370  0743  083D               	movf	sprintf@_val+1,w
  4371  0744  01A3               	clrf	___lwdiv@dividend+1
  4372  0745  07A3               	addwf	___lwdiv@dividend+1,f
  4373  0746  083C               	movf	sprintf@_val,w
  4374  0747  01A2               	clrf	___lwdiv@dividend
  4375  0748  07A2               	addwf	___lwdiv@dividend,f
  4376  0749  318D  25A5  3186   	fcall	___lwdiv
  4377  074C  0020               	movlb	0	; select bank0
  4378  074D  0821               	movf	?___lwdiv+1,w
  4379  074E  01AB               	clrf	___lwmod@dividend+1
  4380  074F  07AB               	addwf	___lwmod@dividend+1,f
  4381  0750  0820               	movf	?___lwdiv,w
  4382  0751  01AA               	clrf	___lwmod@dividend
  4383  0752  07AA               	addwf	___lwmod@dividend,f
  4384  0753  318D  2576  3186   	fcall	___lwmod
  4385  0756  0020               	movlb	0	; select bank0
  4386  0757  0828               	movf	?___lwmod,w
  4387  0758  3E30               	addlw	48
  4388  0759  00B6               	movwf	??_sprintf+2
  4389  075A  0836               	movf	??_sprintf+2,w
  4390  075B  00C0               	movwf	sprintf@c
  4391                           
  4392                           ;doprnt.c: 1532: }
  4393                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4394  075C  0840               	movf	sprintf@c,w
  4395  075D  00B4               	movwf	??_sprintf
  4396  075E  083B               	movf	sprintf@sp,w
  4397  075F  0086               	movwf	6
  4398  0760  0187               	clrf	7
  4399  0761  0834               	movf	??_sprintf,w
  4400  0762  0081               	movwf	1
  4401  0763  3001               	movlw	1
  4402  0764  00B4               	movwf	??_sprintf
  4403  0765  0834               	movf	??_sprintf,w
  4404  0766  07BB               	addwf	sprintf@sp,f
  4405  0767  2F28               	goto	l2387
  4406  0768                     l2391:	
  4407                           ;doprnt.c: 1534: }
  4408                           ;doprnt.c: 1542: }
  4409                           ;doprnt.c: 1544: alldone:
  4410                           
  4411                           
  4412                           ;doprnt.c: 1547: *sp = 0;
  4413  0768  083B               	movf	sprintf@sp,w
  4414  0769  0086               	movwf	6
  4415  076A  0187               	clrf	7
  4416  076B  0181               	clrf	1
  4417  076C  0008               	return
  4418  076D                     __end_of_sprintf:	
  4419                           ;doprnt.c: 1549: return 0;
  4420                           ;	Return value of _sprintf is never used
  4421                           
  4422                           
  4423                           	psect	text12
  4424  0D76                     __ptext12:	
  4425 ;; *************** function ___lwmod *****************
  4426 ;; Defined at:
  4427 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  divisor         2    8[BANK0 ] unsigned int 
  4430 ;;  dividend        2   10[BANK0 ] unsigned int 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  counter         1   13[BANK0 ] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  2    8[BANK0 ] unsigned int 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4442 ;;      Params:         0       4       0       0       0       0       0       0
  4443 ;;      Locals:         0       1       0       0       0       0       0       0
  4444 ;;      Temps:          0       1       0       0       0       0       0       0
  4445 ;;      Totals:         0       6       0       0       0       0       0       0
  4446 ;;Total ram usage:        6 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    2
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_sprintf
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           
  4457                           ;psect for function ___lwmod
  4458  0D76                     ___lwmod:	
  4459                           
  4460                           ;incstack = 0
  4461                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4462  0D76  0020               	movlb	0	; select bank0
  4463  0D77  0829               	movf	___lwmod@divisor+1,w
  4464  0D78  0428               	iorwf	___lwmod@divisor,w
  4465  0D79  1903               	skipnz
  4466  0D7A  2D9E               	goto	l2275
  4467  0D7B  01AD               	clrf	___lwmod@counter
  4468  0D7C  0AAD               	incf	___lwmod@counter,f
  4469  0D7D                     l2265:	
  4470  0D7D  1BA9               	btfsc	___lwmod@divisor+1,7
  4471  0D7E  2D89               	goto	l2267
  4472  0D7F  3001               	movlw	1
  4473  0D80                     u1815:	
  4474  0D80  35A8               	lslf	___lwmod@divisor,f
  4475  0D81  0DA9               	rlf	___lwmod@divisor+1,f
  4476  0D82  0B89               	decfsz	9,f
  4477  0D83  2D80               	goto	u1815
  4478  0D84  3001               	movlw	1
  4479  0D85  00AC               	movwf	??___lwmod
  4480  0D86  082C               	movf	??___lwmod,w
  4481  0D87  07AD               	addwf	___lwmod@counter,f
  4482  0D88  2D7D               	goto	l2265
  4483  0D89                     l2267:	
  4484  0D89  0829               	movf	___lwmod@divisor+1,w
  4485  0D8A  022B               	subwf	___lwmod@dividend+1,w
  4486  0D8B  1D03               	skipz
  4487  0D8C  2D8F               	goto	u1835
  4488  0D8D  0828               	movf	___lwmod@divisor,w
  4489  0D8E  022A               	subwf	___lwmod@dividend,w
  4490  0D8F                     u1835:	
  4491  0D8F  1C03               	skipc
  4492  0D90  2D95               	goto	l2271
  4493  0D91  0828               	movf	___lwmod@divisor,w
  4494  0D92  02AA               	subwf	___lwmod@dividend,f
  4495  0D93  0829               	movf	___lwmod@divisor+1,w
  4496  0D94  3BAB               	subwfb	___lwmod@dividend+1,f
  4497  0D95                     l2271:	
  4498  0D95  3001               	movlw	1
  4499  0D96                     u1845:	
  4500  0D96  36A9               	lsrf	___lwmod@divisor+1,f
  4501  0D97  0CA8               	rrf	___lwmod@divisor,f
  4502  0D98  0B89               	decfsz	9,f
  4503  0D99  2D96               	goto	u1845
  4504  0D9A  3001               	movlw	1
  4505  0D9B  02AD               	subwf	___lwmod@counter,f
  4506  0D9C  1D03               	btfss	3,2
  4507  0D9D  2D89               	goto	l2267
  4508  0D9E                     l2275:	
  4509  0D9E  082B               	movf	___lwmod@dividend+1,w
  4510  0D9F  01A9               	clrf	?___lwmod+1
  4511  0DA0  07A9               	addwf	?___lwmod+1,f
  4512  0DA1  082A               	movf	___lwmod@dividend,w
  4513  0DA2  01A8               	clrf	?___lwmod
  4514  0DA3  07A8               	addwf	?___lwmod,f
  4515  0DA4  0008               	return
  4516  0DA5                     __end_of___lwmod:	
  4517                           
  4518                           	psect	text13
  4519  0DA5                     __ptext13:	
  4520 ;; *************** function ___lwdiv *****************
  4521 ;; Defined at:
  4522 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  divisor         2    0[BANK0 ] unsigned int 
  4525 ;;  dividend        2    2[BANK0 ] unsigned int 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  quotient        2    5[BANK0 ] unsigned int 
  4528 ;;  counter         1    7[BANK0 ] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2    0[BANK0 ] unsigned int 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4538 ;;      Params:         0       4       0       0       0       0       0       0
  4539 ;;      Locals:         0       3       0       0       0       0       0       0
  4540 ;;      Temps:          0       1       0       0       0       0       0       0
  4541 ;;      Totals:         0       8       0       0       0       0       0       0
  4542 ;;Total ram usage:        8 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    2
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_sprintf
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function ___lwdiv
  4554  0DA5                     ___lwdiv:	
  4555                           
  4556                           ;incstack = 0
  4557                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4558  0DA5  0020               	movlb	0	; select bank0
  4559  0DA6  01A5               	clrf	___lwdiv@quotient
  4560  0DA7  01A6               	clrf	___lwdiv@quotient+1
  4561  0DA8  0821               	movf	___lwdiv@divisor+1,w
  4562  0DA9  0420               	iorwf	___lwdiv@divisor,w
  4563  0DAA  1903               	skipnz
  4564  0DAB  2DD5               	goto	l2253
  4565  0DAC  01A7               	clrf	___lwdiv@counter
  4566  0DAD  0AA7               	incf	___lwdiv@counter,f
  4567  0DAE                     l2241:	
  4568  0DAE  1BA1               	btfsc	___lwdiv@divisor+1,7
  4569  0DAF  2DBA               	goto	l2243
  4570  0DB0  3001               	movlw	1
  4571  0DB1                     u1745:	
  4572  0DB1  35A0               	lslf	___lwdiv@divisor,f
  4573  0DB2  0DA1               	rlf	___lwdiv@divisor+1,f
  4574  0DB3  0B89               	decfsz	9,f
  4575  0DB4  2DB1               	goto	u1745
  4576  0DB5  3001               	movlw	1
  4577  0DB6  00A4               	movwf	??___lwdiv
  4578  0DB7  0824               	movf	??___lwdiv,w
  4579  0DB8  07A7               	addwf	___lwdiv@counter,f
  4580  0DB9  2DAE               	goto	l2241
  4581  0DBA                     l2243:	
  4582  0DBA  3001               	movlw	1
  4583  0DBB                     u1765:	
  4584  0DBB  35A5               	lslf	___lwdiv@quotient,f
  4585  0DBC  0DA6               	rlf	___lwdiv@quotient+1,f
  4586  0DBD  0B89               	decfsz	9,f
  4587  0DBE  2DBB               	goto	u1765
  4588  0DBF  0821               	movf	___lwdiv@divisor+1,w
  4589  0DC0  0223               	subwf	___lwdiv@dividend+1,w
  4590  0DC1  1D03               	skipz
  4591  0DC2  2DC5               	goto	u1775
  4592  0DC3  0820               	movf	___lwdiv@divisor,w
  4593  0DC4  0222               	subwf	___lwdiv@dividend,w
  4594  0DC5                     u1775:	
  4595  0DC5  1C03               	skipc
  4596  0DC6  2DCC               	goto	l2249
  4597  0DC7  0820               	movf	___lwdiv@divisor,w
  4598  0DC8  02A2               	subwf	___lwdiv@dividend,f
  4599  0DC9  0821               	movf	___lwdiv@divisor+1,w
  4600  0DCA  3BA3               	subwfb	___lwdiv@dividend+1,f
  4601  0DCB  1425               	bsf	___lwdiv@quotient,0
  4602  0DCC                     l2249:	
  4603  0DCC  3001               	movlw	1
  4604  0DCD                     u1785:	
  4605  0DCD  36A1               	lsrf	___lwdiv@divisor+1,f
  4606  0DCE  0CA0               	rrf	___lwdiv@divisor,f
  4607  0DCF  0B89               	decfsz	9,f
  4608  0DD0  2DCD               	goto	u1785
  4609  0DD1  3001               	movlw	1
  4610  0DD2  02A7               	subwf	___lwdiv@counter,f
  4611  0DD3  1D03               	btfss	3,2
  4612  0DD4  2DBA               	goto	l2243
  4613  0DD5                     l2253:	
  4614  0DD5  0826               	movf	___lwdiv@quotient+1,w
  4615  0DD6  01A1               	clrf	?___lwdiv+1
  4616  0DD7  07A1               	addwf	?___lwdiv+1,f
  4617  0DD8  0825               	movf	___lwdiv@quotient,w
  4618  0DD9  01A0               	clrf	?___lwdiv
  4619  0DDA  07A0               	addwf	?___lwdiv,f
  4620  0DDB  0008               	return
  4621  0DDC                     __end_of___lwdiv:	
  4622                           
  4623                           	psect	text14
  4624  0395                     __ptext14:	
  4625 ;; *************** function _RecordMode *****************
  4626 ;; Defined at:
  4627 ;;		line 561 in file "launcher_functions.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  address         4   35[BANK0 ] long 
  4632 ;;  count           2   33[BANK0 ] int 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;		None               void
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4642 ;;      Params:         0       0       0       0       0       0       0       0
  4643 ;;      Locals:         0       6       0       0       0       0       0       0
  4644 ;;      Temps:          0       5       0       0       0       0       0       0
  4645 ;;      Totals:         0      11       0       0       0       0       0       0
  4646 ;;Total ram usage:       11 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    6
  4649 ;; This function calls:
  4650 ;;		_CheckDisconnect
  4651 ;;		_InitSPI
  4652 ;;		_ReadBuffer
  4653 ;;		_SendGPSSPI
  4654 ;;		_WriteOverheadSPI
  4655 ;;		_WriteSPI
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _RecordMode
  4663  0395                     _RecordMode:	
  4664                           
  4665                           ;launcher_functions.c: 563: PORTAbits.RA4 = 1;
  4666                           
  4667                           ;incstack = 0
  4668                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4669  0395  0020               	movlb	0	; select bank0
  4670  0396  160C               	bsf	12,4	;volatile
  4671                           
  4672                           ;launcher_functions.c: 564: long int address = 0xBB68+11;
  4673  0397  3000               	movlw	0
  4674  0398  00C6               	movwf	RecordMode@address+3
  4675  0399  3000               	movlw	0
  4676  039A  00C5               	movwf	RecordMode@address+2
  4677  039B  30BB               	movlw	187
  4678  039C  00C4               	movwf	RecordMode@address+1
  4679  039D  3073               	movlw	115
  4680  039E  00C3               	movwf	RecordMode@address
  4681                           
  4682                           ;launcher_functions.c: 565: int count = 115;
  4683  039F  3073               	movlw	115
  4684  03A0  00C1               	movwf	RecordMode@count
  4685  03A1  3000               	movlw	0
  4686  03A2  00C2               	movwf	RecordMode@count+1
  4687                           
  4688                           ;launcher_functions.c: 567: InitSPI();
  4689  03A3  318C  244C  3183   	fcall	_InitSPI
  4690                           
  4691                           ;launcher_functions.c: 570: if(CheckDisconnect())
  4692  03A6  318C  241A  3183   	fcall	_CheckDisconnect
  4693  03A9  3A00               	xorlw	0
  4694  03AA  1903               	skipnz
  4695  03AB  2BC1               	goto	l2747
  4696                           
  4697                           ;launcher_functions.c: 571: {
  4698                           ;launcher_functions.c: 572: LATC2 = (1);
  4699  03AC  0022               	movlb	2	; select bank2
  4700  03AD  150E               	bsf	14,2	;volatile
  4701                           
  4702                           ;launcher_functions.c: 573: (start) = 0;
  4703  03AE  01FB               	clrf	_start
  4704  03AF  01FC               	clrf	_start+1
  4705                           
  4706                           ;launcher_functions.c: 574: (end) = 0;
  4707  03B0  01F9               	clrf	_end
  4708  03B1  01FA               	clrf	_end+1
  4709                           
  4710                           ;launcher_functions.c: 575: SSPCON1bits.SSPEN=0;
  4711  03B2  0024               	movlb	4	; select bank4
  4712  03B3  1295               	bcf	21,5	;volatile
  4713                           
  4714                           ;launcher_functions.c: 578: PORTCbits.PORTC = LATCbits.LATC & 0xD7;
  4715  03B4  0022               	movlb	2	; select bank2
  4716  03B5  080E               	movf	14,w	;volatile
  4717  03B6  39FF               	andlw	255
  4718  03B7  39D7               	andlw	215
  4719  03B8  0020               	movlb	0	; select bank0
  4720  03B9  00BC               	movwf	??_RecordMode
  4721  03BA  080E               	movf	14,w	;volatile
  4722  03BB  063C               	xorwf	??_RecordMode,w
  4723  03BC  3900               	andlw	-256
  4724  03BD  063C               	xorwf	??_RecordMode,w
  4725  03BE  008E               	movwf	14	;volatile
  4726                           
  4727                           ;launcher_functions.c: 579: PORTAbits.RA4 = 0;
  4728  03BF  120C               	bcf	12,4	;volatile
  4729                           
  4730                           ;launcher_functions.c: 580: return;
  4731  03C0  0008               	return
  4732  03C1                     l2747:	
  4733                           
  4734                           ;launcher_functions.c: 581: }
  4735                           ;launcher_functions.c: 583: (start) = 0;
  4736  03C1  01FB               	clrf	_start
  4737  03C2  01FC               	clrf	_start+1
  4738                           
  4739                           ;launcher_functions.c: 584: (end) = 0;
  4740  03C3  01F9               	clrf	_end
  4741  03C4  01FA               	clrf	_end+1
  4742                           
  4743                           ;launcher_functions.c: 586: _delay((unsigned long)((300)*(16000000/4000.0)));
  4744  03C5  3007               	movlw	7
  4745  03C6  0020               	movlb	0	; select bank0
  4746  03C7  00BE               	movwf	??_RecordMode+2
  4747  03C8  3017               	movlw	23
  4748  03C9  00BD               	movwf	??_RecordMode+1
  4749  03CA  306F               	movlw	111
  4750  03CB  00BC               	movwf	??_RecordMode
  4751  03CC                     u3027:	
  4752  03CC  0BBC               	decfsz	??_RecordMode,f
  4753  03CD  2BCC               	goto	u3027
  4754  03CE  0BBD               	decfsz	??_RecordMode+1,f
  4755  03CF  2BCC               	goto	u3027
  4756  03D0  0BBE               	decfsz	??_RecordMode+2,f
  4757  03D1  2BCC               	goto	u3027
  4758  03D2  0000               	nop
  4759                           
  4760                           ;launcher_functions.c: 587: WriteOverheadSPI(address);
  4761  03D3  0020               	movlb	0	; select bank0
  4762  03D4  0846               	movf	RecordMode@address+3,w
  4763  03D5  00AA               	movwf	WriteOverheadSPI@address+3
  4764  03D6  0845               	movf	RecordMode@address+2,w
  4765  03D7  00A9               	movwf	WriteOverheadSPI@address+2
  4766  03D8  0844               	movf	RecordMode@address+1,w
  4767  03D9  00A8               	movwf	WriteOverheadSPI@address+1
  4768  03DA  0843               	movf	RecordMode@address,w
  4769  03DB  00A7               	movwf	WriteOverheadSPI@address
  4770  03DC  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4771                           
  4772                           ;launcher_functions.c: 588: TMR1IF = 0;
  4773  03DF  0020               	movlb	0	; select bank0
  4774  03E0  1011               	bcf	17,0	;volatile
  4775                           
  4776                           ;launcher_functions.c: 589: TMR1IE = 1;
  4777  03E1  0021               	movlb	1	; select bank1
  4778  03E2  1411               	bsf	17,0	;volatile
  4779                           
  4780                           ;launcher_functions.c: 590: TMR1ON = 1;
  4781  03E3  0020               	movlb	0	; select bank0
  4782  03E4  1418               	bsf	24,0	;volatile
  4783                           
  4784                           ;launcher_functions.c: 591: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  4785  03E5  0022               	movlb	2	; select bank2
  4786  03E6  080D               	movf	13,w	;volatile
  4787  03E7  39FF               	andlw	255
  4788  03E8  3820               	iorlw	32
  4789  03E9  0020               	movlb	0	; select bank0
  4790  03EA  00BC               	movwf	??_RecordMode
  4791  03EB  080D               	movf	13,w	;volatile
  4792  03EC  063C               	xorwf	??_RecordMode,w
  4793  03ED  3900               	andlw	-256
  4794  03EE  063C               	xorwf	??_RecordMode,w
  4795  03EF  008D               	movwf	13	;volatile
  4796                           
  4797                           ;launcher_functions.c: 592: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  4798  03F0  0022               	movlb	2	; select bank2
  4799  03F1  080D               	movf	13,w	;volatile
  4800  03F2  39FF               	andlw	255
  4801  03F3  39EF               	andlw	239
  4802  03F4  0020               	movlb	0	; select bank0
  4803  03F5  00BC               	movwf	??_RecordMode
  4804  03F6  080D               	movf	13,w	;volatile
  4805  03F7  063C               	xorwf	??_RecordMode,w
  4806  03F8  3900               	andlw	-256
  4807  03F9  063C               	xorwf	??_RecordMode,w
  4808  03FA  008D               	movwf	13	;volatile
  4809  03FB                     l2779:	
  4810                           ;launcher_functions.c: 594: while((recordFlag) && (address < 131072))
  4811                           
  4812  03FB  0020               	movlb	0	; select bank0
  4813  03FC  0869               	movf	_recordFlag,w
  4814  03FD  1903               	btfsc	3,2
  4815  03FE  2C82               	goto	l2799
  4816  03FF  0846               	movf	RecordMode@address+3,w
  4817  0400  3A80               	xorlw	128
  4818  0401  00BC               	movwf	??_RecordMode
  4819  0402  3000               	movlw	0
  4820  0403  3A80               	xorlw	128
  4821  0404  023C               	subwf	??_RecordMode,w
  4822  0405  1D03               	skipz
  4823  0406  2C11               	goto	u2283
  4824  0407  3002               	movlw	2
  4825  0408  0245               	subwf	RecordMode@address+2,w
  4826  0409  1D03               	skipz
  4827  040A  2C11               	goto	u2283
  4828  040B  3000               	movlw	0
  4829  040C  0244               	subwf	RecordMode@address+1,w
  4830  040D  1D03               	skipz
  4831  040E  2C11               	goto	u2283
  4832  040F  3000               	movlw	0
  4833  0410  0243               	subwf	RecordMode@address,w
  4834  0411                     u2283:	
  4835  0411  1803               	btfsc	3,0
  4836  0412  2C82               	goto	l2799
  4837                           
  4838                           ;launcher_functions.c: 595: {
  4839                           ;launcher_functions.c: 596: if(count>=256)
  4840  0413  0842               	movf	RecordMode@count+1,w
  4841  0414  3A80               	xorlw	128
  4842  0415  00BC               	movwf	??_RecordMode
  4843  0416  3081               	movlw	129
  4844  0417  023C               	subwf	??_RecordMode,w
  4845  0418  1D03               	skipz
  4846  0419  2C1C               	goto	u2255
  4847  041A  3000               	movlw	0
  4848  041B  0241               	subwf	RecordMode@count,w
  4849  041C                     u2255:	
  4850  041C  1C03               	skipc
  4851  041D  2C2E               	goto	l2771
  4852                           
  4853                           ;launcher_functions.c: 597: {
  4854                           ;launcher_functions.c: 598: LATC2 = (1);
  4855  041E  0022               	movlb	2	; select bank2
  4856  041F  150E               	bsf	14,2	;volatile
  4857                           
  4858                           ;launcher_functions.c: 599: count = 0;
  4859  0420  0020               	movlb	0	; select bank0
  4860  0421  01C1               	clrf	RecordMode@count
  4861  0422  01C2               	clrf	RecordMode@count+1
  4862                           
  4863                           ;launcher_functions.c: 600: WriteOverheadSPI(address);
  4864  0423  0846               	movf	RecordMode@address+3,w
  4865  0424  00AA               	movwf	WriteOverheadSPI@address+3
  4866  0425  0845               	movf	RecordMode@address+2,w
  4867  0426  00A9               	movwf	WriteOverheadSPI@address+2
  4868  0427  0844               	movf	RecordMode@address+1,w
  4869  0428  00A8               	movwf	WriteOverheadSPI@address+1
  4870  0429  0843               	movf	RecordMode@address,w
  4871  042A  00A7               	movwf	WriteOverheadSPI@address
  4872  042B  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4873  042E                     l2771:	
  4874                           
  4875                           ;launcher_functions.c: 601: }
  4876                           ;launcher_functions.c: 602: if(!((((start))==((end)))?(1):(0)))
  4877  042E  087A               	movf	_end+1,w
  4878  042F  067C               	xorwf	_start+1,w
  4879  0430  1D03               	skipz
  4880  0431  2C34               	goto	u2265
  4881  0432  0879               	movf	_end,w
  4882  0433  067B               	xorwf	_start,w
  4883  0434                     u2265:	
  4884  0434  1903               	skipnz
  4885  0435  2BFB               	goto	l2779
  4886                           
  4887                           ;launcher_functions.c: 603: {
  4888                           ;launcher_functions.c: 604: WriteSPI(ReadBuffer());
  4889  0436  318C  24B0  3183   	fcall	_ReadBuffer
  4890  0439  318C  2470  3183   	fcall	_WriteSPI
  4891                           
  4892                           ;launcher_functions.c: 605: address++;
  4893  043C  3001               	movlw	1
  4894  043D  0020               	movlb	0	; select bank0
  4895  043E  07C3               	addwf	RecordMode@address,f
  4896  043F  3000               	movlw	0
  4897  0440  3DC4               	addwfc	RecordMode@address+1,f
  4898  0441  3000               	movlw	0
  4899  0442  3DC5               	addwfc	RecordMode@address+2,f
  4900  0443  3000               	movlw	0
  4901  0444  3DC6               	addwfc	RecordMode@address+3,f
  4902                           
  4903                           ;launcher_functions.c: 606: count++;
  4904  0445  3001               	movlw	1
  4905  0446  07C1               	addwf	RecordMode@count,f
  4906  0447  3000               	movlw	0
  4907  0448  3DC2               	addwfc	RecordMode@count+1,f
  4908  0449  2BFB               	goto	l2779
  4909  044A                     l2783:	
  4910                           ;launcher_functions.c: 607: }
  4911                           ;launcher_functions.c: 609: }
  4912                           ;launcher_functions.c: 611: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4913                           
  4914                           
  4915                           ;launcher_functions.c: 612: {
  4916                           ;launcher_functions.c: 613: if(count>=256)
  4917  044A  0842               	movf	RecordMode@count+1,w
  4918  044B  3A80               	xorlw	128
  4919  044C  00BC               	movwf	??_RecordMode
  4920  044D  3081               	movlw	129
  4921  044E  023C               	subwf	??_RecordMode,w
  4922  044F  1D03               	skipz
  4923  0450  2C53               	goto	u2295
  4924  0451  3000               	movlw	0
  4925  0452  0241               	subwf	RecordMode@count,w
  4926  0453                     u2295:	
  4927  0453  1C03               	skipc
  4928  0454  2C65               	goto	l2791
  4929                           
  4930                           ;launcher_functions.c: 614: {
  4931                           ;launcher_functions.c: 615: LATC2 = (1);
  4932  0455  0022               	movlb	2	; select bank2
  4933  0456  150E               	bsf	14,2	;volatile
  4934                           
  4935                           ;launcher_functions.c: 616: count = 0;
  4936  0457  0020               	movlb	0	; select bank0
  4937  0458  01C1               	clrf	RecordMode@count
  4938  0459  01C2               	clrf	RecordMode@count+1
  4939                           
  4940                           ;launcher_functions.c: 617: WriteOverheadSPI(address);
  4941  045A  0846               	movf	RecordMode@address+3,w
  4942  045B  00AA               	movwf	WriteOverheadSPI@address+3
  4943  045C  0845               	movf	RecordMode@address+2,w
  4944  045D  00A9               	movwf	WriteOverheadSPI@address+2
  4945  045E  0844               	movf	RecordMode@address+1,w
  4946  045F  00A8               	movwf	WriteOverheadSPI@address+1
  4947  0460  0843               	movf	RecordMode@address,w
  4948  0461  00A7               	movwf	WriteOverheadSPI@address
  4949  0462  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4950  0465                     l2791:	
  4951                           
  4952                           ;launcher_functions.c: 618: }
  4953                           ;launcher_functions.c: 619: if(!((((start))==((end)))?(1):(0)))
  4954  0465  087A               	movf	_end+1,w
  4955  0466  067C               	xorwf	_start+1,w
  4956  0467  1D03               	skipz
  4957  0468  2C6B               	goto	u2305
  4958  0469  0879               	movf	_end,w
  4959  046A  067B               	xorwf	_start,w
  4960  046B                     u2305:	
  4961  046B  1D03               	btfss	3,2
  4962  046C  2C6F               	goto	l2793
  4963  046D  0020               	movlb	0	; select bank0
  4964  046E  2C82               	goto	l2799
  4965  046F                     l2793:	
  4966                           
  4967                           ;launcher_functions.c: 620: {
  4968                           ;launcher_functions.c: 621: WriteSPI(ReadBuffer());
  4969  046F  318C  24B0  3183   	fcall	_ReadBuffer
  4970  0472  318C  2470  3183   	fcall	_WriteSPI
  4971                           
  4972                           ;launcher_functions.c: 622: address++;
  4973  0475  3001               	movlw	1
  4974  0476  0020               	movlb	0	; select bank0
  4975  0477  07C3               	addwf	RecordMode@address,f
  4976  0478  3000               	movlw	0
  4977  0479  3DC4               	addwfc	RecordMode@address+1,f
  4978  047A  3000               	movlw	0
  4979  047B  3DC5               	addwfc	RecordMode@address+2,f
  4980  047C  3000               	movlw	0
  4981  047D  3DC6               	addwfc	RecordMode@address+3,f
  4982                           
  4983                           ;launcher_functions.c: 623: count++;
  4984  047E  3001               	movlw	1
  4985  047F  07C1               	addwf	RecordMode@count,f
  4986  0480  3000               	movlw	0
  4987  0481  3DC2               	addwfc	RecordMode@count+1,f
  4988  0482                     l2799:	
  4989  0482  087A               	movf	_end+1,w
  4990  0483  067C               	xorwf	_start+1,w
  4991  0484  1D03               	skipz
  4992  0485  2C88               	goto	u2315
  4993  0486  0879               	movf	_end,w
  4994  0487  067B               	xorwf	_start,w
  4995  0488                     u2315:	
  4996  0488  1903               	skipnz
  4997  0489  2C9F               	goto	l481
  4998  048A  0020               	movlb	0	; select bank0
  4999  048B  0846               	movf	RecordMode@address+3,w
  5000  048C  3A80               	xorlw	128
  5001  048D  00BC               	movwf	??_RecordMode
  5002  048E  3000               	movlw	0
  5003  048F  3A80               	xorlw	128
  5004  0490  023C               	subwf	??_RecordMode,w
  5005  0491  1D03               	skipz
  5006  0492  2C9D               	goto	u2323
  5007  0493  3002               	movlw	2
  5008  0494  0245               	subwf	RecordMode@address+2,w
  5009  0495  1D03               	skipz
  5010  0496  2C9D               	goto	u2323
  5011  0497  3000               	movlw	0
  5012  0498  0244               	subwf	RecordMode@address+1,w
  5013  0499  1D03               	skipz
  5014  049A  2C9D               	goto	u2323
  5015  049B  3000               	movlw	0
  5016  049C  0243               	subwf	RecordMode@address,w
  5017  049D                     u2323:	
  5018  049D  1C03               	skipc
  5019  049E  2C4A               	goto	l2783
  5020  049F                     l481:	
  5021                           
  5022                           ;launcher_functions.c: 624: }
  5023                           ;launcher_functions.c: 625: }
  5024                           ;launcher_functions.c: 626: LATC2 = (1);
  5025  049F  0022               	movlb	2	; select bank2
  5026  04A0  150E               	bsf	14,2	;volatile
  5027                           
  5028                           ;launcher_functions.c: 627: TMR1IE = 0;
  5029  04A1  0021               	movlb	1	; select bank1
  5030  04A2  1011               	bcf	17,0	;volatile
  5031                           
  5032                           ;launcher_functions.c: 628: TMR1ON = 0;
  5033  04A3  0020               	movlb	0	; select bank0
  5034  04A4  1018               	bcf	24,0	;volatile
  5035                           
  5036                           ;launcher_functions.c: 629: _delay((unsigned long)((5)*(16000000/4000.0)));
  5037  04A5  301A               	movlw	26
  5038  04A6  00BD               	movwf	??_RecordMode+1
  5039  04A7  30F8               	movlw	248
  5040  04A8  00BC               	movwf	??_RecordMode
  5041  04A9                     u3037:	
  5042  04A9  0BBC               	decfsz	??_RecordMode,f
  5043  04AA  2CA9               	goto	u3037
  5044  04AB  0BBD               	decfsz	??_RecordMode+1,f
  5045  04AC  2CA9               	goto	u3037
  5046  04AD  0000               	nop
  5047                           
  5048                           ;launcher_functions.c: 632: WriteOverheadSPI(0xBB68);
  5049  04AE  3000               	movlw	0
  5050  04AF  0020               	movlb	0	; select bank0
  5051  04B0  00AA               	movwf	WriteOverheadSPI@address+3
  5052  04B1  3000               	movlw	0
  5053  04B2  00A9               	movwf	WriteOverheadSPI@address+2
  5054  04B3  30BB               	movlw	187
  5055  04B4  00A8               	movwf	WriteOverheadSPI@address+1
  5056  04B5  3068               	movlw	104
  5057  04B6  00A7               	movwf	WriteOverheadSPI@address
  5058  04B7  318E  26B4  3183   	fcall	_WriteOverheadSPI
  5059                           
  5060                           ;launcher_functions.c: 633: if(address >= 131072)
  5061  04BA  0020               	movlb	0	; select bank0
  5062  04BB  0846               	movf	RecordMode@address+3,w
  5063  04BC  3A80               	xorlw	128
  5064  04BD  00BC               	movwf	??_RecordMode
  5065  04BE  3000               	movlw	0
  5066  04BF  3A80               	xorlw	128
  5067  04C0  023C               	subwf	??_RecordMode,w
  5068  04C1  1D03               	skipz
  5069  04C2  2CCD               	goto	u2333
  5070  04C3  3002               	movlw	2
  5071  04C4  0245               	subwf	RecordMode@address+2,w
  5072  04C5  1D03               	skipz
  5073  04C6  2CCD               	goto	u2333
  5074  04C7  3000               	movlw	0
  5075  04C8  0244               	subwf	RecordMode@address+1,w
  5076  04C9  1D03               	skipz
  5077  04CA  2CCD               	goto	u2333
  5078  04CB  3000               	movlw	0
  5079  04CC  0243               	subwf	RecordMode@address,w
  5080  04CD                     u2333:	
  5081  04CD  1C03               	skipc
  5082  04CE  2CD9               	goto	l2811
  5083                           
  5084                           ;launcher_functions.c: 634: {
  5085                           ;launcher_functions.c: 635: WriteSPI((131072 - 1)>>16);
  5086  04CF  3001               	movlw	1
  5087  04D0  318C  2470  3183   	fcall	_WriteSPI
  5088                           
  5089                           ;launcher_functions.c: 636: WriteSPI((131072 - 1)>>8);
  5090  04D3  30FF               	movlw	255
  5091  04D4  318C  2470  3183   	fcall	_WriteSPI
  5092                           
  5093                           ;launcher_functions.c: 637: WriteSPI(131072 - 1);
  5094  04D7  30FF               	movlw	255
  5095  04D8  2D05               	goto	L4
  5096  04D9                     l2811:	
  5097                           ;launcher_functions.c: 638: }
  5098                           
  5099                           
  5100                           ;launcher_functions.c: 639: else
  5101                           ;launcher_functions.c: 640: {
  5102                           ;launcher_functions.c: 641: WriteSPI(address>>16);
  5103  04D9  0020               	movlb	0	; select bank0
  5104  04DA  0843               	movf	RecordMode@address,w
  5105  04DB  00BC               	movwf	??_RecordMode
  5106  04DC  0844               	movf	RecordMode@address+1,w
  5107  04DD  00BD               	movwf	??_RecordMode+1
  5108  04DE  0845               	movf	RecordMode@address+2,w
  5109  04DF  00BE               	movwf	??_RecordMode+2
  5110  04E0  0846               	movf	RecordMode@address+3,w
  5111  04E1  00BF               	movwf	??_RecordMode+3
  5112  04E2  3010               	movlw	16
  5113  04E3  00C0               	movwf	??_RecordMode+4
  5114  04E4                     u2345:	
  5115  04E4  37BF               	asrf	??_RecordMode+3,f
  5116  04E5  0CBE               	rrf	??_RecordMode+2,f
  5117  04E6  0CBD               	rrf	??_RecordMode+1,f
  5118  04E7  0CBC               	rrf	??_RecordMode,f
  5119  04E8  0BC0               	decfsz	??_RecordMode+4,f
  5120  04E9  2CE4               	goto	u2345
  5121  04EA  083C               	movf	??_RecordMode,w
  5122  04EB  318C  2470  3183   	fcall	_WriteSPI
  5123                           
  5124                           ;launcher_functions.c: 642: WriteSPI(address>>8);
  5125  04EE  0020               	movlb	0	; select bank0
  5126  04EF  0843               	movf	RecordMode@address,w
  5127  04F0  00BC               	movwf	??_RecordMode
  5128  04F1  0844               	movf	RecordMode@address+1,w
  5129  04F2  00BD               	movwf	??_RecordMode+1
  5130  04F3  0845               	movf	RecordMode@address+2,w
  5131  04F4  00BE               	movwf	??_RecordMode+2
  5132  04F5  0846               	movf	RecordMode@address+3,w
  5133  04F6  00BF               	movwf	??_RecordMode+3
  5134  04F7  3008               	movlw	8
  5135  04F8  00C0               	movwf	??_RecordMode+4
  5136  04F9                     u2355:	
  5137  04F9  37BF               	asrf	??_RecordMode+3,f
  5138  04FA  0CBE               	rrf	??_RecordMode+2,f
  5139  04FB  0CBD               	rrf	??_RecordMode+1,f
  5140  04FC  0CBC               	rrf	??_RecordMode,f
  5141  04FD  0BC0               	decfsz	??_RecordMode+4,f
  5142  04FE  2CF9               	goto	u2355
  5143  04FF  083C               	movf	??_RecordMode,w
  5144  0500  318C  2470  3183   	fcall	_WriteSPI
  5145                           
  5146                           ;launcher_functions.c: 643: WriteSPI(address);
  5147  0503  0020               	movlb	0	; select bank0
  5148  0504  0843               	movf	RecordMode@address,w
  5149  0505                     L4:	
  5150  0505  318C  2470  3183   	fcall	_WriteSPI
  5151                           
  5152                           ;launcher_functions.c: 644: }
  5153                           ;launcher_functions.c: 646: LATC2 = (1);
  5154  0508  0022               	movlb	2	; select bank2
  5155  0509  150E               	bsf	14,2	;volatile
  5156                           
  5157                           ;launcher_functions.c: 647: if(hasValidGPSFlag)
  5158  050A  0020               	movlb	0	; select bank0
  5159  050B  0867               	movf	_hasValidGPSFlag,w
  5160  050C  1903               	btfsc	3,2
  5161  050D  2D12               	goto	l2821
  5162                           
  5163                           ;launcher_functions.c: 648: {
  5164                           ;launcher_functions.c: 649: SendGPSSPI();
  5165  050E  318F  2714         	fcall	_SendGPSSPI
  5166                           
  5167                           ;launcher_functions.c: 650: hasValidGPSFlag = 0;
  5168  0510  0020               	movlb	0	; select bank0
  5169  0511  01E7               	clrf	_hasValidGPSFlag
  5170  0512                     l2821:	
  5171                           
  5172                           ;launcher_functions.c: 651: }
  5173                           ;launcher_functions.c: 652: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  5174  0512  0022               	movlb	2	; select bank2
  5175  0513  080D               	movf	13,w	;volatile
  5176  0514  39FF               	andlw	255
  5177  0515  39DF               	andlw	223
  5178  0516  0020               	movlb	0	; select bank0
  5179  0517  00BC               	movwf	??_RecordMode
  5180  0518  080D               	movf	13,w	;volatile
  5181  0519  063C               	xorwf	??_RecordMode,w
  5182  051A  3900               	andlw	-256
  5183  051B  063C               	xorwf	??_RecordMode,w
  5184  051C  008D               	movwf	13	;volatile
  5185                           
  5186                           ;launcher_functions.c: 653: (start) = 0;
  5187  051D  01FB               	clrf	_start
  5188  051E  01FC               	clrf	_start+1
  5189                           
  5190                           ;launcher_functions.c: 654: (end) = 0;
  5191  051F  01F9               	clrf	_end
  5192  0520  01FA               	clrf	_end+1
  5193                           
  5194                           ;launcher_functions.c: 655: SSPCON1bits.SSPEN=0;
  5195  0521  0024               	movlb	4	; select bank4
  5196  0522  1295               	bcf	21,5	;volatile
  5197                           
  5198                           ;launcher_functions.c: 658: PORTCbits.PORTC = LATCbits.LATC & 0xD7;
  5199  0523  0022               	movlb	2	; select bank2
  5200  0524  080E               	movf	14,w	;volatile
  5201  0525  39FF               	andlw	255
  5202  0526  39D7               	andlw	215
  5203  0527  0020               	movlb	0	; select bank0
  5204  0528  00BC               	movwf	??_RecordMode
  5205  0529  080E               	movf	14,w	;volatile
  5206  052A  063C               	xorwf	??_RecordMode,w
  5207  052B  3900               	andlw	-256
  5208  052C  063C               	xorwf	??_RecordMode,w
  5209  052D  008E               	movwf	14	;volatile
  5210                           
  5211                           ;launcher_functions.c: 659: PORTAbits.RA4 = 0;
  5212  052E  120C               	bcf	12,4	;volatile
  5213  052F  0008               	return
  5214  0530                     __end_of_RecordMode:	
  5215                           
  5216                           	psect	text15
  5217  0F14                     __ptext15:	
  5218 ;; *************** function _SendGPSSPI *****************
  5219 ;; Defined at:
  5220 ;;		line 662 in file "launcher_functions.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  address         4   22[BANK0 ] long 
  5225 ;;  x               2   26[BANK0 ] int 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;		None               void
  5228 ;; Registers used:
  5229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5235 ;;      Params:         0       0       0       0       0       0       0       0
  5236 ;;      Locals:         0       6       0       0       0       0       0       0
  5237 ;;      Temps:          0       1       0       0       0       0       0       0
  5238 ;;      Totals:         0       7       0       0       0       0       0       0
  5239 ;;Total ram usage:        7 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    5
  5242 ;; This function calls:
  5243 ;;		_InitSPI
  5244 ;;		_WriteOverheadSPI
  5245 ;;		_WriteSPI
  5246 ;; This function is called by:
  5247 ;;		_RecordMode
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _SendGPSSPI
  5253  0F14                     _SendGPSSPI:	
  5254                           
  5255                           ;launcher_functions.c: 664: long int address = 0xBB68 + 3;
  5256                           
  5257                           ;incstack = 0
  5258                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5259  0F14  3000               	movlw	0
  5260  0F15  0020               	movlb	0	; select bank0
  5261  0F16  00B9               	movwf	SendGPSSPI@address+3
  5262  0F17  3000               	movlw	0
  5263  0F18  00B8               	movwf	SendGPSSPI@address+2
  5264  0F19  30BB               	movlw	187
  5265  0F1A  00B7               	movwf	SendGPSSPI@address+1
  5266  0F1B  306B               	movlw	107
  5267  0F1C  00B6               	movwf	SendGPSSPI@address
  5268                           
  5269                           ;launcher_functions.c: 665: int x;
  5270                           ;launcher_functions.c: 666: PORTAbits.RA4 = 1;
  5271  0F1D  160C               	bsf	12,4	;volatile
  5272                           
  5273                           ;launcher_functions.c: 667: if(SSPCON1bits.SSPEN == 0)
  5274  0F1E  0024               	movlb	4	; select bank4
  5275  0F1F  1A95               	btfsc	21,5	;volatile
  5276  0F20  2F24               	goto	l487
  5277                           
  5278                           ;launcher_functions.c: 668: InitSPI();
  5279  0F21  318C  244C  318F   	fcall	_InitSPI
  5280  0F24                     l487:	
  5281                           
  5282                           ;launcher_functions.c: 682: WriteOverheadSPI(address);
  5283  0F24  0020               	movlb	0	; select bank0
  5284  0F25  0839               	movf	SendGPSSPI@address+3,w
  5285  0F26  00AA               	movwf	WriteOverheadSPI@address+3
  5286  0F27  0838               	movf	SendGPSSPI@address+2,w
  5287  0F28  00A9               	movwf	WriteOverheadSPI@address+2
  5288  0F29  0837               	movf	SendGPSSPI@address+1,w
  5289  0F2A  00A8               	movwf	WriteOverheadSPI@address+1
  5290  0F2B  0836               	movf	SendGPSSPI@address,w
  5291  0F2C  00A7               	movwf	WriteOverheadSPI@address
  5292  0F2D  318E  26B4  318F   	fcall	_WriteOverheadSPI
  5293                           
  5294                           ;launcher_functions.c: 683: for(x=0;x<3;x++)
  5295  0F30  0020               	movlb	0	; select bank0
  5296  0F31  01BA               	clrf	SendGPSSPI@x
  5297  0F32  01BB               	clrf	SendGPSSPI@x+1
  5298  0F33  083B               	movf	SendGPSSPI@x+1,w
  5299  0F34  3A80               	xorlw	128
  5300  0F35  00B5               	movwf	??_SendGPSSPI
  5301  0F36  3080               	movlw	128
  5302  0F37  0235               	subwf	??_SendGPSSPI,w
  5303  0F38  1D03               	skipz
  5304  0F39  2F3C               	goto	u2175
  5305  0F3A  3003               	movlw	3
  5306  0F3B  023A               	subwf	SendGPSSPI@x,w
  5307  0F3C                     u2175:	
  5308  0F3C  1803               	btfsc	3,0
  5309  0F3D  2F57               	goto	l2559
  5310  0F3E                     l2553:	
  5311                           
  5312                           ;launcher_functions.c: 684: {
  5313                           ;launcher_functions.c: 685: WriteSPI(validLatitude[x]);
  5314  0F3E  0020               	movlb	0	; select bank0
  5315  0F3F  083A               	movf	SendGPSSPI@x,w
  5316  0F40  3EE2               	addlw	_validLatitude& (0+255)
  5317  0F41  0086               	movwf	6
  5318  0F42  0187               	clrf	7
  5319  0F43  0801               	movf	1,w
  5320  0F44  318C  2470  318F   	fcall	_WriteSPI
  5321  0F47  3001               	movlw	1
  5322  0F48  0020               	movlb	0	; select bank0
  5323  0F49  07BA               	addwf	SendGPSSPI@x,f
  5324  0F4A  3000               	movlw	0
  5325  0F4B  3DBB               	addwfc	SendGPSSPI@x+1,f
  5326  0F4C  083B               	movf	SendGPSSPI@x+1,w
  5327  0F4D  3A80               	xorlw	128
  5328  0F4E  00B5               	movwf	??_SendGPSSPI
  5329  0F4F  3080               	movlw	128
  5330  0F50  0235               	subwf	??_SendGPSSPI,w
  5331  0F51  1D03               	skipz
  5332  0F52  2F55               	goto	u2185
  5333  0F53  3003               	movlw	3
  5334  0F54  023A               	subwf	SendGPSSPI@x,w
  5335  0F55                     u2185:	
  5336  0F55  1C03               	skipc
  5337  0F56  2F3E               	goto	l2553
  5338  0F57                     l2559:	
  5339                           
  5340                           ;launcher_functions.c: 686: }
  5341                           ;launcher_functions.c: 687: WriteSPI(validNorthSouth);
  5342  0F57  0020               	movlb	0	; select bank0
  5343  0F58  086D               	movf	_validNorthSouth,w
  5344  0F59  318C  2470  318F   	fcall	_WriteSPI
  5345                           
  5346                           ;launcher_functions.c: 688: for(x=0;x<3;x++)
  5347  0F5C  0020               	movlb	0	; select bank0
  5348  0F5D  01BA               	clrf	SendGPSSPI@x
  5349  0F5E  01BB               	clrf	SendGPSSPI@x+1
  5350  0F5F  083B               	movf	SendGPSSPI@x+1,w
  5351  0F60  3A80               	xorlw	128
  5352  0F61  00B5               	movwf	??_SendGPSSPI
  5353  0F62  3080               	movlw	128
  5354  0F63  0235               	subwf	??_SendGPSSPI,w
  5355  0F64  1D03               	skipz
  5356  0F65  2F68               	goto	u2195
  5357  0F66  3003               	movlw	3
  5358  0F67  023A               	subwf	SendGPSSPI@x,w
  5359  0F68                     u2195:	
  5360  0F68  1803               	btfsc	3,0
  5361  0F69  2F83               	goto	l2573
  5362  0F6A                     l2567:	
  5363                           
  5364                           ;launcher_functions.c: 689: {
  5365                           ;launcher_functions.c: 690: WriteSPI(validLongitude[x]);
  5366  0F6A  0020               	movlb	0	; select bank0
  5367  0F6B  083A               	movf	SendGPSSPI@x,w
  5368  0F6C  3EE5               	addlw	_validLongitude& (0+255)
  5369  0F6D  0086               	movwf	6
  5370  0F6E  0187               	clrf	7
  5371  0F6F  0801               	movf	1,w
  5372  0F70  318C  2470  318F   	fcall	_WriteSPI
  5373  0F73  3001               	movlw	1
  5374  0F74  0020               	movlb	0	; select bank0
  5375  0F75  07BA               	addwf	SendGPSSPI@x,f
  5376  0F76  3000               	movlw	0
  5377  0F77  3DBB               	addwfc	SendGPSSPI@x+1,f
  5378  0F78  083B               	movf	SendGPSSPI@x+1,w
  5379  0F79  3A80               	xorlw	128
  5380  0F7A  00B5               	movwf	??_SendGPSSPI
  5381  0F7B  3080               	movlw	128
  5382  0F7C  0235               	subwf	??_SendGPSSPI,w
  5383  0F7D  1D03               	skipz
  5384  0F7E  2F81               	goto	u2205
  5385  0F7F  3003               	movlw	3
  5386  0F80  023A               	subwf	SendGPSSPI@x,w
  5387  0F81                     u2205:	
  5388  0F81  1C03               	skipc
  5389  0F82  2F6A               	goto	l2567
  5390  0F83                     l2573:	
  5391                           
  5392                           ;launcher_functions.c: 691: }
  5393                           ;launcher_functions.c: 692: WriteSPI(validEastWest);
  5394  0F83  0020               	movlb	0	; select bank0
  5395  0F84  086C               	movf	_validEastWest,w
  5396  0F85  318C  2470         	fcall	_WriteSPI
  5397                           
  5398                           ;launcher_functions.c: 694: LATC2 = (1);
  5399  0F87  0022               	movlb	2	; select bank2
  5400  0F88  150E               	bsf	14,2	;volatile
  5401  0F89  0008               	return
  5402  0F8A                     __end_of_SendGPSSPI:	
  5403                           ;launcher_functions.c: 702: return;
  5404                           
  5405                           
  5406                           	psect	text16
  5407  0EB4                     __ptext16:	
  5408 ;; *************** function _WriteOverheadSPI *****************
  5409 ;; Defined at:
  5410 ;;		line 182 in file "launcher_functions.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  address         4    7[BANK0 ] long 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5415 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;		None               void
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0, pclath, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5425 ;;      Params:         0       4       0       0       0       0       0       0
  5426 ;;      Locals:         0       4       0       0       0       0       0       0
  5427 ;;      Temps:          0       6       0       0       0       0       0       0
  5428 ;;      Totals:         0      14       0       0       0       0       0       0
  5429 ;;Total ram usage:       14 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    4
  5432 ;; This function calls:
  5433 ;;		_ReadStatusSPI
  5434 ;;		_WriteSPI
  5435 ;; This function is called by:
  5436 ;;		_RecordMode
  5437 ;;		_SendGPSSPI
  5438 ;;		_PreRecordMode
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _WriteOverheadSPI
  5444  0EB4                     _WriteOverheadSPI:	
  5445                           
  5446                           ;launcher_functions.c: 184: unsigned char address_bytes[3];
  5447                           ;launcher_functions.c: 185: unsigned char StatusReg;
  5448                           ;launcher_functions.c: 187: address_bytes[0]=(unsigned char)(address>>16);
  5449                           
  5450                           ;incstack = 0
  5451                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5452  0EB4  0020               	movlb	0	; select bank0
  5453  0EB5  0827               	movf	WriteOverheadSPI@address,w
  5454  0EB6  00AB               	movwf	??_WriteOverheadSPI
  5455  0EB7  0828               	movf	WriteOverheadSPI@address+1,w
  5456  0EB8  00AC               	movwf	??_WriteOverheadSPI+1
  5457  0EB9  0829               	movf	WriteOverheadSPI@address+2,w
  5458  0EBA  00AD               	movwf	??_WriteOverheadSPI+2
  5459  0EBB  082A               	movf	WriteOverheadSPI@address+3,w
  5460  0EBC  00AE               	movwf	??_WriteOverheadSPI+3
  5461  0EBD  3010               	movlw	16
  5462  0EBE  00AF               	movwf	??_WriteOverheadSPI+4
  5463  0EBF                     u1485:	
  5464  0EBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  5465  0EC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5466  0EC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5467  0EC2  0CAB               	rrf	??_WriteOverheadSPI,f
  5468  0EC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5469  0EC4  2EBF               	goto	u1485
  5470  0EC5  082B               	movf	??_WriteOverheadSPI,w
  5471  0EC6  00B0               	movwf	??_WriteOverheadSPI+5
  5472  0EC7  0830               	movf	??_WriteOverheadSPI+5,w
  5473  0EC8  00B1               	movwf	WriteOverheadSPI@address_bytes
  5474                           
  5475                           ;launcher_functions.c: 188: address_bytes[1]=(unsigned char)(address>>8);
  5476  0EC9  0827               	movf	WriteOverheadSPI@address,w
  5477  0ECA  00AB               	movwf	??_WriteOverheadSPI
  5478  0ECB  0828               	movf	WriteOverheadSPI@address+1,w
  5479  0ECC  00AC               	movwf	??_WriteOverheadSPI+1
  5480  0ECD  0829               	movf	WriteOverheadSPI@address+2,w
  5481  0ECE  00AD               	movwf	??_WriteOverheadSPI+2
  5482  0ECF  082A               	movf	WriteOverheadSPI@address+3,w
  5483  0ED0  00AE               	movwf	??_WriteOverheadSPI+3
  5484  0ED1  3008               	movlw	8
  5485  0ED2  00AF               	movwf	??_WriteOverheadSPI+4
  5486  0ED3                     u1495:	
  5487  0ED3  37AE               	asrf	??_WriteOverheadSPI+3,f
  5488  0ED4  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5489  0ED5  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5490  0ED6  0CAB               	rrf	??_WriteOverheadSPI,f
  5491  0ED7  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5492  0ED8  2ED3               	goto	u1495
  5493  0ED9  082B               	movf	??_WriteOverheadSPI,w
  5494  0EDA  00B0               	movwf	??_WriteOverheadSPI+5
  5495  0EDB  0830               	movf	??_WriteOverheadSPI+5,w
  5496  0EDC  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5497                           
  5498                           ;launcher_functions.c: 189: address_bytes[2]=(unsigned char)(address);
  5499  0EDD  0827               	movf	WriteOverheadSPI@address,w
  5500  0EDE  00AB               	movwf	??_WriteOverheadSPI
  5501  0EDF  082B               	movf	??_WriteOverheadSPI,w
  5502  0EE0  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5503  0EE1                     l2123:	
  5504                           ;launcher_functions.c: 191: do
  5505                           
  5506                           
  5507                           ;launcher_functions.c: 192: {
  5508                           ;launcher_functions.c: 193: StatusReg = (ReadStatusSPI() & 0x01);
  5509  0EE1  318C  2429  318E   	fcall	_ReadStatusSPI
  5510  0EE4  3901               	andlw	1
  5511  0EE5  0020               	movlb	0	; select bank0
  5512  0EE6  00AB               	movwf	??_WriteOverheadSPI
  5513  0EE7  082B               	movf	??_WriteOverheadSPI,w
  5514  0EE8  00B4               	movwf	WriteOverheadSPI@StatusReg
  5515                           
  5516                           ;launcher_functions.c: 194: } while (StatusReg);
  5517  0EE9  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5518  0EEA  1D03               	skipz
  5519  0EEB  2EE1               	goto	l2123
  5520                           
  5521                           ;launcher_functions.c: 197: LATC2 = (0);
  5522  0EEC  0022               	movlb	2	; select bank2
  5523  0EED  110E               	bcf	14,2	;volatile
  5524                           
  5525                           ;launcher_functions.c: 198: WriteSPI((0x06));
  5526  0EEE  3006               	movlw	6
  5527  0EEF  318C  2470  318E   	fcall	_WriteSPI
  5528                           
  5529                           ;launcher_functions.c: 199: LATC2 = (1);
  5530  0EF2  0022               	movlb	2	; select bank2
  5531  0EF3  150E               	bsf	14,2	;volatile
  5532  0EF4                     l349:	
  5533                           ;launcher_functions.c: 201: do
  5534                           
  5535                           
  5536                           ;launcher_functions.c: 202: {
  5537                           ;launcher_functions.c: 203: StatusReg = (ReadStatusSPI() & 0x02);
  5538  0EF4  318C  2429  318E   	fcall	_ReadStatusSPI
  5539  0EF7  3902               	andlw	2
  5540  0EF8  0020               	movlb	0	; select bank0
  5541  0EF9  00AB               	movwf	??_WriteOverheadSPI
  5542  0EFA  082B               	movf	??_WriteOverheadSPI,w
  5543  0EFB  00B4               	movwf	WriteOverheadSPI@StatusReg
  5544                           
  5545                           ;launcher_functions.c: 204: } while (!StatusReg);
  5546  0EFC  0834               	movf	WriteOverheadSPI@StatusReg,w
  5547  0EFD  1903               	btfsc	3,2
  5548  0EFE  2EF4               	goto	l349
  5549                           
  5550                           ;launcher_functions.c: 209: LATC2=(0);
  5551  0EFF  0022               	movlb	2	; select bank2
  5552  0F00  110E               	bcf	14,2	;volatile
  5553                           
  5554                           ;launcher_functions.c: 210: WriteSPI((0x02));
  5555  0F01  3002               	movlw	2
  5556  0F02  318C  2470  318E   	fcall	_WriteSPI
  5557                           
  5558                           ;launcher_functions.c: 211: WriteSPI(address_bytes[0]);
  5559  0F05  0020               	movlb	0	; select bank0
  5560  0F06  0831               	movf	WriteOverheadSPI@address_bytes,w
  5561  0F07  318C  2470  318E   	fcall	_WriteSPI
  5562                           
  5563                           ;launcher_functions.c: 212: WriteSPI(address_bytes[1]);
  5564  0F0A  0020               	movlb	0	; select bank0
  5565  0F0B  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5566  0F0C  318C  2470  318E   	fcall	_WriteSPI
  5567                           
  5568                           ;launcher_functions.c: 213: WriteSPI(address_bytes[2]);
  5569  0F0F  0020               	movlb	0	; select bank0
  5570  0F10  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5571  0F11  318C  2470         	fcall	_WriteSPI
  5572  0F13  0008               	return
  5573  0F14                     __end_of_WriteOverheadSPI:	
  5574                           ;launcher_functions.c: 215: return;
  5575                           
  5576                           
  5577                           	psect	text17
  5578  0C4C                     __ptext17:	
  5579 ;; *************** function _InitSPI *****************
  5580 ;; Defined at:
  5581 ;;		line 122 in file "launcher_functions.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;		None               void
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5595 ;;      Params:         0       0       0       0       0       0       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0
  5598 ;;      Totals:         0       0       0       0       0       0       0       0
  5599 ;;Total ram usage:        0 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    2
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_RecordMode
  5606 ;;		_SendGPSSPI
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           
  5611                           ;psect for function _InitSPI
  5612  0C4C                     _InitSPI:	
  5613                           
  5614                           ;launcher_functions.c: 125: TRISCbits.TRISC2 = 0;
  5615                           
  5616                           ;incstack = 0
  5617                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5618  0C4C  0021               	movlb	1	; select bank1
  5619  0C4D  110E               	bcf	14,2	;volatile
  5620                           
  5621                           ;launcher_functions.c: 126: TRISCbits.TRISC3 = 0;
  5622  0C4E  118E               	bcf	14,3	;volatile
  5623                           
  5624                           ;launcher_functions.c: 127: TRISCbits.TRISC4 = 1;
  5625  0C4F  160E               	bsf	14,4	;volatile
  5626                           
  5627                           ;launcher_functions.c: 128: TRISCbits.TRISC5 = 0;
  5628  0C50  128E               	bcf	14,5	;volatile
  5629                           
  5630                           ;launcher_functions.c: 130: LATC2 = (1);
  5631  0C51  0022               	movlb	2	; select bank2
  5632  0C52  150E               	bsf	14,2	;volatile
  5633                           
  5634                           ;launcher_functions.c: 133: SSPCON1bits.SSPEN=0x00;
  5635  0C53  0024               	movlb	4	; select bank4
  5636  0C54  1295               	bcf	21,5	;volatile
  5637                           
  5638                           ;launcher_functions.c: 134: SSPCON1bits.SSPM=0x01;
  5639  0C55  0815               	movf	21,w	;volatile
  5640  0C56  39F0               	andlw	-16
  5641  0C57  3801               	iorlw	1
  5642  0C58  0095               	movwf	21	;volatile
  5643                           
  5644                           ;launcher_functions.c: 135: SSPCON1bits.CKP=0;
  5645  0C59  1215               	bcf	21,4	;volatile
  5646                           
  5647                           ;launcher_functions.c: 136: SSPSTATbits.CKE=1;
  5648  0C5A  1714               	bsf	20,6	;volatile
  5649                           
  5650                           ;launcher_functions.c: 137: SSPSTATbits.SMP=0;
  5651  0C5B  1394               	bcf	20,7	;volatile
  5652                           
  5653                           ;launcher_functions.c: 138: SSPCON1bits.SSPEN=0x01;
  5654  0C5C  1695               	bsf	21,5	;volatile
  5655  0C5D  0008               	return
  5656  0C5E                     __end_of_InitSPI:	
  5657                           
  5658                           	psect	text18
  5659  0CB0                     __ptext18:	
  5660 ;; *************** function _ReadBuffer *****************
  5661 ;; Defined at:
  5662 ;;		line 230 in file "launcher_functions.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  read_data       1    1[BANK0 ] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      unsigned char 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5676 ;;      Params:         0       0       0       0       0       0       0       0
  5677 ;;      Locals:         0       1       0       0       0       0       0       0
  5678 ;;      Temps:          0       1       0       0       0       0       0       0
  5679 ;;      Totals:         0       2       0       0       0       0       0       0
  5680 ;;Total ram usage:        2 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    2
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_RecordMode
  5687 ;;		_PreRecordMode
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _ReadBuffer
  5693  0CB0                     _ReadBuffer:	
  5694                           
  5695                           ;launcher_functions.c: 232: unsigned char read_data;
  5696                           ;launcher_functions.c: 234: read_data = buffer[start];
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5700  0CB0  087B               	movf	_start,w
  5701  0CB1  3EA0               	addlw	_buffer& (0+255)
  5702  0CB2  0086               	movwf	6
  5703  0CB3  3001               	movlw	1	; select bank3/4
  5704  0CB4  0087               	movwf	7
  5705  0CB5  0801               	movf	1,w
  5706  0CB6  0020               	movlb	0	; select bank0
  5707  0CB7  00A0               	movwf	??_ReadBuffer
  5708  0CB8  0820               	movf	??_ReadBuffer,w
  5709  0CB9  00A1               	movwf	ReadBuffer@read_data
  5710                           
  5711                           ;launcher_functions.c: 235: if (start == 51)
  5712  0CBA  3033               	movlw	51
  5713  0CBB  067B               	xorwf	_start,w
  5714  0CBC  047C               	iorwf	_start+1,w
  5715  0CBD  1D03               	skipz
  5716  0CBE  2CC2               	goto	l2285
  5717                           
  5718                           ;launcher_functions.c: 236: start = 0;
  5719  0CBF  01FB               	clrf	_start
  5720  0CC0  01FC               	clrf	_start+1
  5721  0CC1  2CC6               	goto	l360
  5722  0CC2                     l2285:	
  5723                           
  5724                           ;launcher_functions.c: 237: else
  5725                           ;launcher_functions.c: 238: start++;
  5726  0CC2  3001               	movlw	1
  5727  0CC3  07FB               	addwf	_start,f
  5728  0CC4  3000               	movlw	0
  5729  0CC5  3DFC               	addwfc	_start+1,f
  5730  0CC6                     l360:	
  5731                           
  5732                           ;launcher_functions.c: 239: return read_data;
  5733  0CC6  0821               	movf	ReadBuffer@read_data,w
  5734  0CC7  0008               	return
  5735  0CC8                     __end_of_ReadBuffer:	
  5736                           
  5737                           	psect	text19
  5738  0C1A                     __ptext19:	
  5739 ;; *************** function _CheckDisconnect *****************
  5740 ;; Defined at:
  5741 ;;		line 706 in file "launcher_functions.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  status          1    8[BANK0 ] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      unsigned char 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0, pclath, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5755 ;;      Params:         0       0       0       0       0       0       0       0
  5756 ;;      Locals:         0       1       0       0       0       0       0       0
  5757 ;;      Temps:          0       1       0       0       0       0       0       0
  5758 ;;      Totals:         0       2       0       0       0       0       0       0
  5759 ;;Total ram usage:        2 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    4
  5762 ;; This function calls:
  5763 ;;		_ReadStatusSPI
  5764 ;; This function is called by:
  5765 ;;		_RecordMode
  5766 ;;		_PreRecordMode
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           
  5771                           ;psect for function _CheckDisconnect
  5772  0C1A                     _CheckDisconnect:	
  5773                           
  5774                           ;launcher_functions.c: 708: unsigned char status;
  5775                           ;launcher_functions.c: 709: status = ReadStatusSPI();
  5776                           
  5777                           ;incstack = 0
  5778                           ; Regs used in _CheckDisconnect: [wreg+status,2+status,0+pclath+cstack]
  5779  0C1A  318C  2429  318C   	fcall	_ReadStatusSPI
  5780  0C1D  0020               	movlb	0	; select bank0
  5781  0C1E  00A7               	movwf	??_CheckDisconnect
  5782  0C1F  0827               	movf	??_CheckDisconnect,w
  5783  0C20  00A8               	movwf	CheckDisconnect@status
  5784                           
  5785                           ;launcher_functions.c: 710: if(status==0xff)
  5786  0C21  0828               	movf	CheckDisconnect@status,w
  5787  0C22  3AFF               	xorlw	255
  5788  0C23  1D03               	skipz
  5789  0C24  2C27               	goto	l2535
  5790                           
  5791                           ;launcher_functions.c: 711: return 1;
  5792  0C25  3001               	movlw	1
  5793  0C26  0008               	return
  5794  0C27                     l2535:	
  5795                           
  5796                           ;launcher_functions.c: 712: else
  5797                           ;launcher_functions.c: 713: return 0;
  5798  0C27  3000               	movlw	0
  5799  0C28  0008               	return
  5800  0C29                     __end_of_CheckDisconnect:	
  5801                           
  5802                           	psect	text20
  5803  0C29                     __ptext20:	
  5804 ;; *************** function _ReadStatusSPI *****************
  5805 ;; Defined at:
  5806 ;;		line 170 in file "launcher_functions.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      unsigned char 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5820 ;;      Params:         0       0       0       0       0       0       0       0
  5821 ;;      Locals:         0       1       0       0       0       0       0       0
  5822 ;;      Temps:          0       1       0       0       0       0       0       0
  5823 ;;      Totals:         0       2       0       0       0       0       0       0
  5824 ;;Total ram usage:        2 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    3
  5827 ;; This function calls:
  5828 ;;		_ReadSPI
  5829 ;;		_WriteSPI
  5830 ;; This function is called by:
  5831 ;;		_WriteOverheadSPI
  5832 ;;		_CheckDisconnect
  5833 ;;		_ReadOverheadSPI
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function _ReadStatusSPI
  5839  0C29                     _ReadStatusSPI:	
  5840                           
  5841                           ;launcher_functions.c: 172: unsigned char dataRead;
  5842                           ;launcher_functions.c: 174: LATC2=(0);
  5843                           
  5844                           ;incstack = 0
  5845                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5846  0C29  0022               	movlb	2	; select bank2
  5847  0C2A  110E               	bcf	14,2	;volatile
  5848                           
  5849                           ;launcher_functions.c: 175: WriteSPI((0x05));
  5850  0C2B  3005               	movlw	5
  5851  0C2C  318C  2470  318C   	fcall	_WriteSPI
  5852                           
  5853                           ;launcher_functions.c: 176: dataRead = ReadSPI();
  5854  0C2F  318B  23F0         	fcall	_ReadSPI
  5855  0C31  0020               	movlb	0	; select bank0
  5856  0C32  00A5               	movwf	??_ReadStatusSPI
  5857  0C33  0825               	movf	??_ReadStatusSPI,w
  5858  0C34  00A6               	movwf	ReadStatusSPI@dataRead
  5859                           
  5860                           ;launcher_functions.c: 177: LATC2=(1);
  5861  0C35  0022               	movlb	2	; select bank2
  5862  0C36  150E               	bsf	14,2	;volatile
  5863                           
  5864                           ;launcher_functions.c: 179: return(dataRead);
  5865  0C37  0020               	movlb	0	; select bank0
  5866  0C38  0826               	movf	ReadStatusSPI@dataRead,w
  5867  0C39  0008               	return
  5868  0C3A                     __end_of_ReadStatusSPI:	
  5869                           
  5870                           	psect	text21
  5871  0C70                     __ptext21:	
  5872 ;; *************** function _WriteSPI *****************
  5873 ;; Defined at:
  5874 ;;		line 150 in file "launcher_functions.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  databyte        1    wreg     unsigned char 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  databyte        1    4[BANK0 ] unsigned char 
  5879 ;;  temp            2    2[BANK0 ] unsigned int 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;		None               void
  5882 ;; Registers used:
  5883 ;;		wreg
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5889 ;;      Params:         0       0       0       0       0       0       0       0
  5890 ;;      Locals:         0       3       0       0       0       0       0       0
  5891 ;;      Temps:          0       2       0       0       0       0       0       0
  5892 ;;      Totals:         0       5       0       0       0       0       0       0
  5893 ;;Total ram usage:        5 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    2
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_ReadStatusSPI
  5900 ;;		_WriteOverheadSPI
  5901 ;;		_RecordMode
  5902 ;;		_SendGPSSPI
  5903 ;;		_ReadOverheadSPI
  5904 ;;		_PreRecordMode
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           
  5909                           ;psect for function _WriteSPI
  5910  0C70                     _WriteSPI:	
  5911                           
  5912                           ;incstack = 0
  5913                           ; Regs used in _WriteSPI: [wreg]
  5914                           ;WriteSPI@databyte stored from wreg
  5915  0C70  0020               	movlb	0	; select bank0
  5916  0C71  00A4               	movwf	WriteSPI@databyte
  5917                           
  5918                           ;launcher_functions.c: 152: unsigned int temp;
  5919                           ;launcher_functions.c: 153: temp = SSPBUF;
  5920  0C72  0024               	movlb	4	; select bank4
  5921  0C73  0811               	movf	17,w	;volatile
  5922  0C74  0020               	movlb	0	; select bank0
  5923  0C75  00A0               	movwf	??_WriteSPI
  5924  0C76  01A1               	clrf	??_WriteSPI+1
  5925  0C77  0820               	movf	??_WriteSPI,w
  5926  0C78  00A2               	movwf	WriteSPI@temp
  5927  0C79  0821               	movf	??_WriteSPI+1,w
  5928  0C7A  00A3               	movwf	WriteSPI@temp+1
  5929                           
  5930                           ;launcher_functions.c: 154: PIR1bits.SSP1IF=0;
  5931  0C7B  1191               	bcf	17,3	;volatile
  5932                           
  5933                           ;launcher_functions.c: 155: SSPBUF = databyte;
  5934  0C7C  0824               	movf	WriteSPI@databyte,w
  5935  0C7D  0024               	movlb	4	; select bank4
  5936  0C7E  0091               	movwf	17	;volatile
  5937  0C7F                     l332:	
  5938                           ;launcher_functions.c: 156: while(!PIR1bits.SSP1IF);
  5939                           
  5940  0C7F  0020               	movlb	0	; select bank0
  5941  0C80  1991               	btfsc	17,3	;volatile
  5942  0C81  0008               	return
  5943  0C82  2C7F               	goto	l332
  5944  0C83                     __end_of_WriteSPI:	
  5945                           
  5946                           	psect	text22
  5947  0BF0                     __ptext22:	
  5948 ;; *************** function _ReadSPI *****************
  5949 ;; Defined at:
  5950 ;;		line 159 in file "launcher_functions.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      unsigned char 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5964 ;;      Params:         0       0       0       0       0       0       0       0
  5965 ;;      Locals:         0       1       0       0       0       0       0       0
  5966 ;;      Temps:          0       1       0       0       0       0       0       0
  5967 ;;      Totals:         0       2       0       0       0       0       0       0
  5968 ;;Total ram usage:        2 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    2
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_ReadStatusSPI
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _ReadSPI
  5980  0BF0                     _ReadSPI:	
  5981                           
  5982                           ;launcher_functions.c: 161: unsigned char dataByte;
  5983                           ;launcher_functions.c: 163: SSPBUF = 0x00;
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in _ReadSPI: [wreg+status,2]
  5987  0BF0  0024               	movlb	4	; select bank4
  5988  0BF1  0191               	clrf	17	;volatile
  5989  0BF2                     l338:	
  5990                           ;launcher_functions.c: 164: while(!SSPSTATbits.BF);
  5991                           
  5992  0BF2  1C14               	btfss	20,0	;volatile
  5993  0BF3  2BF2               	goto	l338
  5994                           
  5995                           ;launcher_functions.c: 165: dataByte = SSPBUF;
  5996  0BF4  0811               	movf	17,w	;volatile
  5997  0BF5  0020               	movlb	0	; select bank0
  5998  0BF6  00A0               	movwf	??_ReadSPI
  5999  0BF7  0820               	movf	??_ReadSPI,w
  6000  0BF8  00A1               	movwf	ReadSPI@dataByte
  6001                           
  6002                           ;launcher_functions.c: 166: PIR1bits.SSP1IF=0;
  6003  0BF9  1191               	bcf	17,3	;volatile
  6004                           
  6005                           ;launcher_functions.c: 167: return (dataByte);
  6006  0BFA  0821               	movf	ReadSPI@dataByte,w
  6007  0BFB  0008               	return
  6008  0BFC                     __end_of_ReadSPI:	
  6009                           
  6010                           	psect	text23
  6011  0BC1                     __ptext23:	
  6012 ;; *************** function _InitWatchdog *****************
  6013 ;; Defined at:
  6014 ;;		line 141 in file "launcher_functions.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;		None               void
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6028 ;;      Params:         0       0       0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    2
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_main
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           
  6043                           ;psect for function _InitWatchdog
  6044  0BC1                     _InitWatchdog:	
  6045                           
  6046                           ;launcher_functions.c: 144: WDTCONbits.WDTPS = 0x0A;
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  6050  0BC1  0021               	movlb	1	; select bank1
  6051  0BC2  0817               	movf	23,w	;volatile
  6052  0BC3  39C1               	andlw	-63
  6053  0BC4  3814               	iorlw	20
  6054  0BC5  0097               	movwf	23	;volatile
  6055                           
  6056                           ;launcher_functions.c: 145: WDTCONbits.SWDTEN = 0;
  6057  0BC6  1017               	bcf	23,0	;volatile
  6058  0BC7  0008               	return
  6059  0BC8                     __end_of_InitWatchdog:	
  6060                           
  6061                           	psect	text24
  6062  0C0B                     __ptext24:	
  6063 ;; *************** function _InitUART *****************
  6064 ;; Defined at:
  6065 ;;		line 270 in file "launcher_functions.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;		None               void
  6072 ;; Registers used:
  6073 ;;		wreg, status,2
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6079 ;;      Params:         0       0       0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    2
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_main
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function _InitUART
  6095  0C0B                     _InitUART:	
  6096                           
  6097                           ;launcher_functions.c: 273: TRISCbits.TRISC6 = 0;
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _InitUART: [wreg+status,2]
  6101  0C0B  0021               	movlb	1	; select bank1
  6102  0C0C  130E               	bcf	14,6	;volatile
  6103                           
  6104                           ;launcher_functions.c: 274: TRISCbits.TRISC7 = 1;
  6105  0C0D  178E               	bsf	14,7	;volatile
  6106                           
  6107                           ;launcher_functions.c: 275: TXSTAbits.BRGH = 0;
  6108  0C0E  0023               	movlb	3	; select bank3
  6109  0C0F  111E               	bcf	30,2	;volatile
  6110                           
  6111                           ;launcher_functions.c: 277: SPBRGH = 0;
  6112  0C10  019C               	clrf	28	;volatile
  6113                           
  6114                           ;launcher_functions.c: 278: SPBRGL = 51;
  6115  0C11  3033               	movlw	51
  6116  0C12  009B               	movwf	27	;volatile
  6117                           
  6118                           ;launcher_functions.c: 279: TXSTAbits.TX9 = 0;
  6119  0C13  131E               	bcf	30,6	;volatile
  6120                           
  6121                           ;launcher_functions.c: 280: TXSTAbits.SYNC = 0;
  6122  0C14  121E               	bcf	30,4	;volatile
  6123                           
  6124                           ;launcher_functions.c: 281: TXSTAbits.TXEN = 1;
  6125  0C15  169E               	bsf	30,5	;volatile
  6126                           
  6127                           ;launcher_functions.c: 283: RCSTAbits.SPEN = 1;
  6128  0C16  179D               	bsf	29,7	;volatile
  6129                           
  6130                           ;launcher_functions.c: 284: RCSTAbits.RX9 = 0;
  6131  0C17  131D               	bcf	29,6	;volatile
  6132                           
  6133                           ;launcher_functions.c: 285: RCSTAbits.CREN = 1;
  6134  0C18  161D               	bsf	29,4	;volatile
  6135  0C19  0008               	return
  6136  0C1A                     __end_of_InitUART:	
  6137                           
  6138                           	psect	text25
  6139  0BFC                     __ptext25:	
  6140 ;; *************** function _InitTimer1 *****************
  6141 ;; Defined at:
  6142 ;;		line 110 in file "launcher_functions.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;		None               void
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6156 ;;      Params:         0       0       0       0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0
  6159 ;;      Totals:         0       0       0       0       0       0       0       0
  6160 ;;Total ram usage:        0 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    2
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_main
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _InitTimer1
  6172  0BFC                     _InitTimer1:	
  6173                           
  6174                           ;launcher_functions.c: 112: T1CONbits.TMR1CS = 0;
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  6178  0BFC  303F               	movlw	-193
  6179  0BFD  0020               	movlb	0	; select bank0
  6180  0BFE  0598               	andwf	24,f	;volatile
  6181                           
  6182                           ;launcher_functions.c: 113: T1CONbits.T1CKPS = 2;
  6183  0BFF  0818               	movf	24,w	;volatile
  6184  0C00  39CF               	andlw	-49
  6185  0C01  3820               	iorlw	32
  6186  0C02  0098               	movwf	24	;volatile
  6187                           
  6188                           ;launcher_functions.c: 114: T1CONbits.nT1SYNC = 1;
  6189  0C03  1518               	bsf	24,2	;volatile
  6190                           
  6191                           ;launcher_functions.c: 115: T1GCONbits.TMR1GE = 0;
  6192  0C04  1399               	bcf	25,7	;volatile
  6193                           
  6194                           ;launcher_functions.c: 116: TMR1H = 0xFF;
  6195  0C05  30FF               	movlw	255
  6196  0C06  0097               	movwf	23	;volatile
  6197                           
  6198                           ;launcher_functions.c: 117: TMR1L = 0x71;
  6199  0C07  3071               	movlw	113
  6200  0C08  0096               	movwf	22	;volatile
  6201                           
  6202                           ;launcher_functions.c: 118: T1CONbits.TMR1ON = 1;
  6203  0C09  1418               	bsf	24,0	;volatile
  6204  0C0A  0008               	return
  6205  0C0B                     __end_of_InitTimer1:	
  6206                           
  6207                           	psect	text26
  6208  0BE4                     __ptext26:	
  6209 ;; *************** function _InitTimer0 *****************
  6210 ;; Defined at:
  6211 ;;		line 96 in file "launcher_functions.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;		None               void
  6218 ;; Registers used:
  6219 ;;		wreg
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6225 ;;      Params:         0       0       0       0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    2
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_main
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function _InitTimer0
  6241  0BE4                     _InitTimer0:	
  6242                           
  6243                           ;launcher_functions.c: 100: TMR0IE = 0;
  6244                           
  6245                           ;incstack = 0
  6246                           ; Regs used in _InitTimer0: [wreg]
  6247  0BE4  128B               	bcf	11,5	;volatile
  6248                           
  6249                           ;launcher_functions.c: 101: TMR0IF = 0;
  6250  0BE5  110B               	bcf	11,2	;volatile
  6251                           
  6252                           ;launcher_functions.c: 102: TMR0CS = 0;
  6253  0BE6  0021               	movlb	1	; select bank1
  6254  0BE7  1295               	bcf	21,5	;volatile
  6255                           
  6256                           ;launcher_functions.c: 103: PSA = 0;
  6257  0BE8  1195               	bcf	21,3	;volatile
  6258                           
  6259                           ;launcher_functions.c: 104: PS0 = 1;
  6260  0BE9  1415               	bsf	21,0	;volatile
  6261                           
  6262                           ;launcher_functions.c: 105: PS1 = 1;
  6263  0BEA  1495               	bsf	21,1	;volatile
  6264                           
  6265                           ;launcher_functions.c: 106: PS2 = 1;
  6266  0BEB  1515               	bsf	21,2	;volatile
  6267                           
  6268                           ;launcher_functions.c: 107: TMR0 = 61;;
  6269  0BEC  303D               	movlw	61
  6270  0BED  0020               	movlb	0	; select bank0
  6271  0BEE  0095               	movwf	21	;volatile
  6272  0BEF  0008               	return
  6273  0BF0                     __end_of_InitTimer0:	
  6274                           
  6275                           	psect	text27
  6276  0D1C                     __ptext27:	
  6277 ;; *************** function _InitGPIO *****************
  6278 ;; Defined at:
  6279 ;;		line 13 in file "launcher_functions.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;		None               void
  6286 ;; Registers used:
  6287 ;;		status,2
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6293 ;;      Params:         0       0       0       0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0
  6296 ;;      Totals:         0       0       0       0       0       0       0       0
  6297 ;;Total ram usage:        0 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    2
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_main
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _InitGPIO
  6309  0D1C                     _InitGPIO:	
  6310                           
  6311                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  6312                           
  6313                           ;incstack = 0
  6314                           ; Regs used in _InitGPIO: [status,2]
  6315  0D1C  0021               	movlb	1	; select bank1
  6316  0D1D  148C               	bsf	12,1	;volatile
  6317                           
  6318                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  6319  0D1E  0023               	movlb	3	; select bank3
  6320  0D1F  108C               	bcf	12,1	;volatile
  6321                           
  6322                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  6323  0D20  0027               	movlb	7	; select bank7
  6324  0D21  1491               	bsf	17,1	;volatile
  6325                           
  6326                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  6327  0D22  1492               	bsf	18,1	;volatile
  6328                           
  6329                           ;launcher_functions.c: 22: IOCAF = 0x00;
  6330  0D23  0193               	clrf	19	;volatile
  6331                           
  6332                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  6333  0D24  158B               	bsf	11,3	;volatile
  6334                           
  6335                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  6336  0D25  0021               	movlb	1	; select bank1
  6337  0D26  158D               	bsf	13,3	;volatile
  6338                           
  6339                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  6340  0D27  0023               	movlb	3	; select bank3
  6341  0D28  118D               	bcf	13,3	;volatile
  6342                           
  6343                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  6344  0D29  0027               	movlb	7	; select bank7
  6345  0D2A  1595               	bsf	21,3	;volatile
  6346                           
  6347                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  6348  0D2B  1594               	bsf	20,3	;volatile
  6349                           
  6350                           ;launcher_functions.c: 30: IOCBF = 0x00;
  6351  0D2C  0196               	clrf	22	;volatile
  6352                           
  6353                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  6354  0D2D  158B               	bsf	11,3	;volatile
  6355                           
  6356                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  6357  0D2E  0021               	movlb	1	; select bank1
  6358  0D2F  140C               	bsf	12,0	;volatile
  6359                           
  6360                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  6361  0D30  150C               	bsf	12,2	;volatile
  6362                           
  6363                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  6364  0D31  158C               	bsf	12,3	;volatile
  6365                           
  6366                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  6367  0D32  120C               	bcf	12,4	;volatile
  6368                           
  6369                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  6370  0D33  128C               	bcf	12,5	;volatile
  6371                           
  6372                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  6373  0D34  130C               	bcf	12,6	;volatile
  6374                           
  6375                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  6376  0D35  138C               	bcf	12,7	;volatile
  6377                           
  6378                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  6379  0D36  100D               	bcf	13,0	;volatile
  6380                           
  6381                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  6382  0D37  148D               	bsf	13,1	;volatile
  6383                           
  6384                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  6385  0D38  110D               	bcf	13,2	;volatile
  6386                           
  6387                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  6388  0D39  120D               	bcf	13,4	;volatile
  6389                           
  6390                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  6391  0D3A  128D               	bcf	13,5	;volatile
  6392                           
  6393                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  6394  0D3B  0020               	movlb	0	; select bank0
  6395  0D3C  100D               	bcf	13,0	;volatile
  6396                           
  6397                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  6398  0D3D  120D               	bcf	13,4	;volatile
  6399                           
  6400                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  6401  0D3E  128D               	bcf	13,5	;volatile
  6402                           
  6403                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6404  0D3F  0023               	movlb	3	; select bank3
  6405  0D40  100D               	bcf	13,0	;volatile
  6406                           
  6407                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6408  0D41  108D               	bcf	13,1	;volatile
  6409                           
  6410                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6411  0D42  110D               	bcf	13,2	;volatile
  6412                           
  6413                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6414  0D43  120D               	bcf	13,4	;volatile
  6415                           
  6416                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6417  0D44  128D               	bcf	13,5	;volatile
  6418                           
  6419                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6420  0D45  0021               	movlb	1	; select bank1
  6421  0D46  100E               	bcf	14,0	;volatile
  6422                           
  6423                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6424  0D47  108E               	bcf	14,1	;volatile
  6425  0D48  0008               	return
  6426  0D49                     __end_of_InitGPIO:	
  6427                           
  6428                           	psect	text28
  6429  0BC8                     __ptext28:	
  6430 ;; *************** function _InitCLK *****************
  6431 ;; Defined at:
  6432 ;;		line 8 in file "launcher_functions.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;		None
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;		None               void
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6446 ;;      Params:         0       0       0       0       0       0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0
  6449 ;;      Totals:         0       0       0       0       0       0       0       0
  6450 ;;Total ram usage:        0 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    2
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_main
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _InitCLK
  6462  0BC8                     _InitCLK:	
  6463                           
  6464                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6465                           
  6466                           ;incstack = 0
  6467                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6468  0BC8  3078               	movlw	120
  6469  0BC9  0021               	movlb	1	; select bank1
  6470  0BCA  0499               	iorwf	25,f	;volatile
  6471                           
  6472                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6473  0BCB  0819               	movf	25,w	;volatile
  6474  0BCC  39FC               	andlw	-4
  6475  0BCD  3802               	iorlw	2
  6476  0BCE  0099               	movwf	25	;volatile
  6477  0BCF  0008               	return
  6478  0BD0                     __end_of_InitCLK:	
  6479                           
  6480                           	psect	text29
  6481  07E7                     __ptext29:	
  6482 ;; *************** function _InitADC *****************
  6483 ;; Defined at:
  6484 ;;		line 73 in file "launcher_functions.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6498 ;;      Params:         0       0       0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    2
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_main
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _InitADC
  6514  07E7                     _InitADC:	
  6515                           
  6516                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6520  07E7  0021               	movlb	1	; select bank1
  6521  07E8  140C               	bsf	12,0	;volatile
  6522                           
  6523                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6524  07E9  0023               	movlb	3	; select bank3
  6525  07EA  140C               	bsf	12,0	;volatile
  6526                           
  6527                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6528  07EB  0021               	movlb	1	; select bank1
  6529  07EC  081E               	movf	30,w	;volatile
  6530  07ED  398F               	andlw	-113
  6531  07EE  3850               	iorlw	80
  6532  07EF  009E               	movwf	30	;volatile
  6533                           
  6534                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6535  07F0  30FC               	movlw	-4
  6536  07F1  059E               	andwf	30,f	;volatile
  6537                           
  6538                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6539  07F2  111E               	bcf	30,2	;volatile
  6540                           
  6541                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6542  07F3  3083               	movlw	-125
  6543  07F4  059D               	andwf	29,f	;volatile
  6544                           
  6545                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6546  07F5  300F               	movlw	15
  6547  07F6  049F               	iorwf	31,f	;volatile
  6548                           
  6549                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6550  07F7  139E               	bcf	30,7	;volatile
  6551                           
  6552                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6553  07F8  179D               	bsf	29,7	;volatile
  6554                           
  6555                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6556  07F9  141D               	bsf	29,0	;volatile
  6557                           
  6558                           ;launcher_functions.c: 90: ADIF = 0;
  6559  07FA  0020               	movlb	0	; select bank0
  6560  07FB  1311               	bcf	17,6	;volatile
  6561                           
  6562                           ;launcher_functions.c: 91: ADIE = 1;
  6563  07FC  0021               	movlb	1	; select bank1
  6564  07FD  1711               	bsf	17,6	;volatile
  6565                           
  6566                           ;launcher_functions.c: 92: PEIE = 1;
  6567  07FE  170B               	bsf	11,6	;volatile
  6568  07FF  0008               	return
  6569  0800                     __end_of_InitADC:	
  6570                           
  6571                           	psect	text30
  6572  0CE2                     __ptext30:	
  6573 ;; *************** function _Hibernate *****************
  6574 ;; Defined at:
  6575 ;;		line 549 in file "launcher_functions.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  count           1    1[BANK0 ] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;		None               void
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6589 ;;      Params:         0       0       0       0       0       0       0       0
  6590 ;;      Locals:         0       1       0       0       0       0       0       0
  6591 ;;      Temps:          0       1       0       0       0       0       0       0
  6592 ;;      Totals:         0       2       0       0       0       0       0       0
  6593 ;;Total ram usage:        2 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    2
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_main
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function _Hibernate
  6605  0CE2                     _Hibernate:	
  6606                           
  6607                           ;launcher_functions.c: 551: unsigned char count = 0;
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6611  0CE2  0020               	movlb	0	; select bank0
  6612  0CE3  01A1               	clrf	Hibernate@count
  6613                           
  6614                           ;launcher_functions.c: 552: WDTCONbits.WDTPS = 14;
  6615  0CE4  0021               	movlb	1	; select bank1
  6616  0CE5  0817               	movf	23,w	;volatile
  6617  0CE6  39C1               	andlw	-63
  6618  0CE7  381C               	iorlw	28
  6619  0CE8  0097               	movwf	23	;volatile
  6620                           
  6621                           ;launcher_functions.c: 553: WDTCONbits.SWDTEN = 1;
  6622  0CE9  1417               	bsf	23,0	;volatile
  6623                           
  6624                           ;launcher_functions.c: 554: while(!recordFlag && (count++ < 3) && !strobeFlag)
  6625  0CEA  2CEC               	goto	l2881
  6626  0CEB                     l459:	
  6627  0CEB  0063               	sleep	;# 
  6628  0CEC                     l2881:	
  6629  0CEC  0020               	movlb	0	; select bank0
  6630  0CED  08E9               	movf	_recordFlag,f
  6631  0CEE  1D03               	skipz
  6632  0CEF  2CFB               	goto	l462
  6633  0CF0  3001               	movlw	1
  6634  0CF1  00A0               	movwf	??_Hibernate
  6635  0CF2  0820               	movf	??_Hibernate,w
  6636  0CF3  07A1               	addwf	Hibernate@count,f
  6637  0CF4  3004               	movlw	4
  6638  0CF5  0221               	subwf	Hibernate@count,w
  6639  0CF6  1803               	skipnc
  6640  0CF7  2CFB               	goto	l462
  6641  0CF8  086A               	movf	_strobeFlag,w
  6642  0CF9  1903               	btfsc	3,2
  6643  0CFA  2CEB               	goto	l459
  6644  0CFB                     l462:	
  6645                           
  6646                           ;launcher_functions.c: 557: }
  6647                           ;launcher_functions.c: 558: WDTCONbits.SWDTEN = 0;
  6648  0CFB  0021               	movlb	1	; select bank1
  6649  0CFC  1017               	bcf	23,0	;volatile
  6650  0CFD  0008               	return
  6651  0CFE                     __end_of_Hibernate:	
  6652                           
  6653                           	psect	text31
  6654  0C3A                     __ptext31:	
  6655 ;; *************** function _GoToSleep *****************
  6656 ;; Defined at:
  6657 ;;		line 541 in file "launcher_functions.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  count           1    wreg     unsigned char 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  count           1    1[BANK0 ] unsigned char 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;		None               void
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6671 ;;      Params:         0       0       0       0       0       0       0       0
  6672 ;;      Locals:         0       1       0       0       0       0       0       0
  6673 ;;      Temps:          0       1       0       0       0       0       0       0
  6674 ;;      Totals:         0       2       0       0       0       0       0       0
  6675 ;;Total ram usage:        2 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    2
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function _GoToSleep
  6687  0C3A                     _GoToSleep:	
  6688                           
  6689                           ;incstack = 0
  6690                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6691                           ;GoToSleep@count stored from wreg
  6692  0C3A  0020               	movlb	0	; select bank0
  6693  0C3B  00A1               	movwf	GoToSleep@count
  6694                           
  6695                           ;launcher_functions.c: 543: WDTCONbits.WDTPS = count;
  6696  0C3C  0821               	movf	GoToSleep@count,w
  6697  0C3D  00A0               	movwf	??_GoToSleep
  6698  0C3E  0DA0               	rlf	??_GoToSleep,f
  6699  0C3F  0021               	movlb	1	; select bank1
  6700  0C40  0817               	movf	23,w	;volatile
  6701  0C41  0020               	movlb	0	; select bank0
  6702  0C42  0620               	xorwf	??_GoToSleep,w
  6703  0C43  39C1               	andlw	-63
  6704  0C44  0620               	xorwf	??_GoToSleep,w
  6705  0C45  0021               	movlb	1	; select bank1
  6706  0C46  0097               	movwf	23	;volatile
  6707                           
  6708                           ;launcher_functions.c: 544: WDTCONbits.SWDTEN = 1;
  6709  0C47  1417               	bsf	23,0	;volatile
  6710  0C48  0063               	sleep	;# 
  6711                           
  6712                           ;launcher_functions.c: 546: WDTCONbits.SWDTEN = 0;
  6713  0C49  0021               	movlb	1	; select bank1
  6714  0C4A  1017               	bcf	23,0	;volatile
  6715  0C4B  0008               	return
  6716  0C4C                     __end_of_GoToSleep:	
  6717                           
  6718                           	psect	intentry
  6719  0004                     __pintentry:	
  6720 ;; *************** function _isr *****************
  6721 ;; Defined at:
  6722 ;;		line 137 in file "launcher_main.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;		None               void
  6729 ;; Registers used:
  6730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6736 ;;      Params:         0       0       0       0       0       0       0       0
  6737 ;;      Locals:         2       0       0       0       0       0       0       0
  6738 ;;      Temps:          5       0       0       0       0       0       0       0
  6739 ;;      Totals:         7       0       0       0       0       0       0       0
  6740 ;;Total ram usage:        7 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    1
  6743 ;; This function calls:
  6744 ;;		_WriteBuffer
  6745 ;; This function is called by:
  6746 ;;		Interrupt level 1
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750  0004                     _isr:	
  6751                           
  6752                           ;incstack = 0
  6753                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6754  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6755  0005  3180               	pagesel	$
  6756  0006  0020               	movlb	0	; select bank0
  6757  0007  087F               	movf	127,w
  6758  0008  00F6               	movwf	??_isr+4
  6759                           
  6760                           ;launcher_main.c: 140: if (PIR1bits.RCIF)
  6761  0009  1E91               	btfss	17,5	;volatile
  6762  000A  2837               	goto	i1l3021
  6763                           
  6764                           ;launcher_main.c: 141: {
  6765                           ;launcher_main.c: 143: if(OERR)
  6766  000B  0023               	movlb	3	; select bank3
  6767  000C  1C9D               	btfss	29,1	;volatile
  6768  000D  2810               	goto	i1l3003
  6769                           
  6770                           ;launcher_main.c: 144: {
  6771                           ;launcher_main.c: 145: RCSTAbits.CREN = 0;
  6772  000E  121D               	bcf	29,4	;volatile
  6773                           
  6774                           ;launcher_main.c: 146: RCSTAbits.CREN = 1;
  6775  000F  161D               	bsf	29,4	;volatile
  6776  0010                     i1l3003:	
  6777                           
  6778                           ;launcher_main.c: 147: }
  6779                           ;launcher_main.c: 148: gpsMessage[gpsIndex++] = RCREG;
  6780  0010  0819               	movf	25,w	;volatile
  6781  0011  00F2               	movwf	??_isr
  6782  0012  087D               	movf	_gpsIndex,w
  6783  0013  3E24               	addlw	_gpsMessage& (0+255)
  6784  0014  0086               	movwf	6
  6785  0015  3001               	movlw	1	; select bank2/3
  6786  0016  0087               	movwf	7
  6787  0017  0872               	movf	??_isr,w
  6788  0018  0081               	movwf	1
  6789  0019  3001               	movlw	1
  6790  001A  00F2               	movwf	??_isr
  6791  001B  0872               	movf	??_isr,w
  6792  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6793                           
  6794                           ;launcher_main.c: 149: if(gpsIndex >= 50)
  6795  001D  3032               	movlw	50
  6796  001E  027D               	subwf	_gpsIndex,w	;volatile
  6797  001F  1C03               	skipc
  6798  0020  2826               	goto	i1l3013
  6799                           
  6800                           ;launcher_main.c: 150: {
  6801                           ;launcher_main.c: 151: messageDoneFlag = 1;
  6802  0021  0020               	movlb	0	; select bank0
  6803  0022  01E8               	clrf	_messageDoneFlag
  6804  0023  0AE8               	incf	_messageDoneFlag,f
  6805                           
  6806                           ;launcher_main.c: 152: gpsIndex = 0;
  6807  0024  01FD               	clrf	_gpsIndex	;volatile
  6808                           
  6809                           ;launcher_main.c: 153: }
  6810  0025  2836               	goto	i1l3019
  6811  0026                     i1l3013:	
  6812                           
  6813                           ;launcher_main.c: 154: else
  6814                           ;launcher_main.c: 155: {
  6815                           ;launcher_main.c: 156: if(gpsMessage[gpsIndex-1] == 0x0A)
  6816  0026  087D               	movf	_gpsIndex,w
  6817  0027  3EFF               	addlw	255
  6818  0028  3E24               	addlw	_gpsMessage& (0+255)
  6819  0029  0086               	movwf	6
  6820  002A  3001               	movlw	1	; select bank2/3
  6821  002B  0087               	movwf	7
  6822  002C  0801               	movf	1,w
  6823  002D  3A0A               	xorlw	10
  6824  002E  1D03               	skipz
  6825  002F  2834               	goto	i1l3017
  6826                           
  6827                           ;launcher_main.c: 157: {
  6828                           ;launcher_main.c: 158: messageDoneFlag = 1;
  6829  0030  0020               	movlb	0	; select bank0
  6830  0031  01E8               	clrf	_messageDoneFlag
  6831  0032  0AE8               	incf	_messageDoneFlag,f
  6832                           
  6833                           ;launcher_main.c: 159: }
  6834  0033  2836               	goto	i1l3019
  6835  0034                     i1l3017:	
  6836                           
  6837                           ;launcher_main.c: 160: else
  6838                           ;launcher_main.c: 161: {
  6839                           ;launcher_main.c: 162: messageDoneFlag = 0;
  6840  0034  0020               	movlb	0	; select bank0
  6841  0035  01E8               	clrf	_messageDoneFlag
  6842  0036                     i1l3019:	
  6843                           
  6844                           ;launcher_main.c: 163: }
  6845                           ;launcher_main.c: 164: }
  6846                           ;launcher_main.c: 165: PIR1bits.RCIF = 0;
  6847  0036  1291               	bcf	17,5	;volatile
  6848  0037                     i1l3021:	
  6849                           
  6850                           ;launcher_main.c: 166: }
  6851                           ;launcher_main.c: 169: if (TMR1IF && TMR1IE)
  6852  0037  1C11               	btfss	17,0	;volatile
  6853  0038  2848               	goto	i1l3031
  6854  0039  0021               	movlb	1	; select bank1
  6855  003A  1C11               	btfss	17,0	;volatile
  6856  003B  2848               	goto	i1l3031
  6857                           
  6858                           ;launcher_main.c: 170: {
  6859                           ;launcher_main.c: 171: TMR1H = 0xFF;
  6860  003C  30FF               	movlw	255
  6861  003D  0020               	movlb	0	; select bank0
  6862  003E  0097               	movwf	23	;volatile
  6863                           
  6864                           ;launcher_main.c: 172: TMR1L = 0x71;
  6865  003F  3071               	movlw	113
  6866  0040  0096               	movwf	22	;volatile
  6867                           
  6868                           ;launcher_main.c: 173: TMR1IF = 0;
  6869  0041  1011               	bcf	17,0	;volatile
  6870                           
  6871                           ;launcher_main.c: 175: if(recordFlag)
  6872  0042  0869               	movf	_recordFlag,w
  6873  0043  1903               	btfsc	3,2
  6874  0044  2848               	goto	i1l3031
  6875                           
  6876                           ;launcher_main.c: 176: {
  6877                           ;launcher_main.c: 177: ADCON0bits.ADGO = 1;
  6878  0045  0021               	movlb	1	; select bank1
  6879  0046  149D               	bsf	29,1	;volatile
  6880  0047  0020               	movlb	0	; select bank0
  6881  0048                     i1l3031:	
  6882                           
  6883                           ;launcher_main.c: 178: }
  6884                           ;launcher_main.c: 179: }
  6885                           ;launcher_main.c: 182: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6886  0048  0021               	movlb	1	; select bank1
  6887  0049  0E11               	swapf	17,w	;volatile
  6888  004A  0C89               	rrf	9,f
  6889  004B  0C89               	rrf	9,f
  6890  004C  3901               	andlw	1
  6891  004D  00F2               	movwf	??_isr
  6892  004E  0020               	movlb	0	; select bank0
  6893  004F  0E11               	swapf	17,w	;volatile
  6894  0050  0C89               	rrf	9,f
  6895  0051  0C89               	rrf	9,f
  6896  0052  3901               	andlw	1
  6897  0053  0572               	andwf	??_isr,w
  6898  0054  1903               	btfsc	3,2
  6899  0055  288A               	goto	i1l3047
  6900                           
  6901                           ;launcher_main.c: 183: {
  6902                           ;launcher_main.c: 184: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6903  0056  3033               	movlw	51
  6904  0057  0679               	xorwf	_end,w
  6905  0058  047A               	iorwf	_end+1,w
  6906  0059  1903               	skipnz
  6907  005A  2870               	goto	i1l3037
  6908  005B  0879               	movf	_end,w
  6909  005C  3E01               	addlw	1
  6910  005D  00F2               	movwf	??_isr
  6911  005E  3000               	movlw	0
  6912  005F  3D7A               	addwfc	_end+1,w
  6913  0060  00F3               	movwf	??_isr+1
  6914  0061  087C               	movf	_start+1,w
  6915  0062  0673               	xorwf	??_isr+1,w
  6916  0063  1D03               	skipz
  6917  0064  2867               	goto	u266_25
  6918  0065  087B               	movf	_start,w
  6919  0066  0672               	xorwf	??_isr,w
  6920  0067                     u266_25:	
  6921  0067  3000               	movlw	0
  6922  0068  1903               	skipnz
  6923  0069  3001               	movlw	1
  6924  006A  00F4               	movwf	??_isr+2
  6925  006B  01F5               	clrf	??_isr+3
  6926  006C  0874               	movf	??_isr+2,w
  6927  006D  00F7               	movwf	_isr$541
  6928  006E  0875               	movf	??_isr+3,w
  6929  006F  287A               	goto	L5
  6930  0070                     i1l3037:	
  6931  0070  087C               	movf	_start+1,w
  6932  0071  047B               	iorwf	_start,w
  6933  0072  3000               	movlw	0
  6934  0073  1903               	skipnz
  6935  0074  3001               	movlw	1
  6936  0075  00F2               	movwf	??_isr
  6937  0076  01F3               	clrf	??_isr+1
  6938  0077  0872               	movf	??_isr,w
  6939  0078  00F7               	movwf	_isr$541
  6940  0079  0873               	movf	??_isr+1,w
  6941  007A                     L5:	
  6942  007A  00F8               	movwf	_isr$541+1
  6943  007B  0878               	movf	_isr$541+1,w
  6944  007C  0477               	iorwf	_isr$541,w
  6945  007D  1D03               	skipz
  6946  007E  2888               	goto	i1l3045
  6947                           
  6948                           ;launcher_main.c: 185: {
  6949                           ;launcher_main.c: 186: if(recordFlag)
  6950  007F  0869               	movf	_recordFlag,w
  6951  0080  1903               	btfsc	3,2
  6952  0081  2888               	goto	i1l3045
  6953                           
  6954                           ;launcher_main.c: 187: WriteBuffer(ADRESH);
  6955  0082  0021               	movlb	1	; select bank1
  6956  0083  081C               	movf	28,w	;volatile
  6957  0084  318C  2499  3180   	fcall	_WriteBuffer
  6958  0087  0020               	movlb	0	; select bank0
  6959  0088                     i1l3045:	
  6960                           
  6961                           ;launcher_main.c: 188: }
  6962                           ;launcher_main.c: 189: PIR1bits.ADIF = 0;
  6963  0088  0020               	movlb	0	; select bank0
  6964  0089  1311               	bcf	17,6	;volatile
  6965  008A                     i1l3047:	
  6966                           
  6967                           ;launcher_main.c: 190: }
  6968                           ;launcher_main.c: 193: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6969  008A  1D8B               	btfss	11,3	;volatile
  6970  008B  28B3               	goto	i1l3061
  6971  008C  0027               	movlb	7	; select bank7
  6972  008D  1D96               	btfss	22,3	;volatile
  6973  008E  28B3               	goto	i1l3061
  6974                           
  6975                           ;launcher_main.c: 194: {
  6976                           ;launcher_main.c: 195: IOCBFbits.IOCBF3 = 0;
  6977  008F  1196               	bcf	22,3	;volatile
  6978                           
  6979                           ;launcher_main.c: 196: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6980  0090  0020               	movlb	0	; select bank0
  6981  0091  0C0D               	rrf	13,w	;volatile
  6982  0092  00F2               	movwf	??_isr
  6983  0093  0CF2               	rrf	??_isr,f
  6984  0094  0C72               	rrf	??_isr,w
  6985  0095  3901               	andlw	1
  6986  0096  00F3               	movwf	??_isr+1
  6987  0097  0027               	movlb	7	; select bank7
  6988  0098  0C14               	rrf	20,w	;volatile
  6989  0099  00F4               	movwf	??_isr+2
  6990  009A  0CF4               	rrf	??_isr+2,f
  6991  009B  0C74               	rrf	??_isr+2,w
  6992  009C  3901               	andlw	1
  6993  009D  0573               	andwf	??_isr+1,w
  6994  009E  1903               	btfsc	3,2
  6995  009F  28A3               	goto	i1l3057
  6996                           
  6997                           ;launcher_main.c: 197: {
  6998                           ;launcher_main.c: 198: recordFlag = 1;
  6999  00A0  0020               	movlb	0	; select bank0
  7000  00A1  01E9               	clrf	_recordFlag
  7001  00A2  0AE9               	incf	_recordFlag,f
  7002  00A3                     i1l3057:	
  7003                           
  7004                           ;launcher_main.c: 199: }
  7005                           ;launcher_main.c: 200: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  7006  00A3  0027               	movlb	7	; select bank7
  7007  00A4  0C15               	rrf	21,w	;volatile
  7008  00A5  00F2               	movwf	??_isr
  7009  00A6  0CF2               	rrf	??_isr,f
  7010  00A7  0C72               	rrf	??_isr,w
  7011  00A8  3901               	andlw	1
  7012  00A9  00F3               	movwf	??_isr+1
  7013  00AA  1003               	clrc
  7014  00AB  0020               	movlb	0	; select bank0
  7015  00AC  1D8D               	btfss	13,3	;volatile
  7016  00AD  1403               	setc
  7017  00AE  3000               	movlw	0
  7018  00AF  3D09               	addwfc	9,w
  7019  00B0  0573               	andwf	??_isr+1,w
  7020  00B1  1D03               	btfss	3,2
  7021                           
  7022                           ;launcher_main.c: 201: {
  7023                           ;launcher_main.c: 202: recordFlag = 0;
  7024  00B2  01E9               	clrf	_recordFlag
  7025  00B3                     i1l3061:	
  7026                           
  7027                           ;launcher_main.c: 203: }
  7028                           ;launcher_main.c: 204: }
  7029                           ;launcher_main.c: 207: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  7030  00B3  1D8B               	btfss	11,3	;volatile
  7031  00B4  28D3               	goto	i1l158
  7032  00B5  0027               	movlb	7	; select bank7
  7033  00B6  1C93               	btfss	19,1	;volatile
  7034  00B7  28D3               	goto	i1l158
  7035                           
  7036                           ;launcher_main.c: 208: {
  7037                           ;launcher_main.c: 209: IOCAFbits.IOCAF1 = 0;
  7038  00B8  1093               	bcf	19,1	;volatile
  7039                           
  7040                           ;launcher_main.c: 210: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  7041  00B9  0020               	movlb	0	; select bank0
  7042  00BA  0C0C               	rrf	12,w	;volatile
  7043  00BB  3901               	andlw	1
  7044  00BC  00F2               	movwf	??_isr
  7045  00BD  0027               	movlb	7	; select bank7
  7046  00BE  0C11               	rrf	17,w	;volatile
  7047  00BF  3901               	andlw	1
  7048  00C0  0572               	andwf	??_isr,w
  7049  00C1  1903               	btfsc	3,2
  7050  00C2  28C6               	goto	i1l3071
  7051                           
  7052                           ;launcher_main.c: 211: {
  7053                           ;launcher_main.c: 212: strobeFlag = 1;
  7054  00C3  0020               	movlb	0	; select bank0
  7055  00C4  01EA               	clrf	_strobeFlag
  7056  00C5  0AEA               	incf	_strobeFlag,f
  7057  00C6                     i1l3071:	
  7058                           
  7059                           ;launcher_main.c: 213: }
  7060                           ;launcher_main.c: 214: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  7061  00C6  0027               	movlb	7	; select bank7
  7062  00C7  0C12               	rrf	18,w	;volatile
  7063  00C8  3901               	andlw	1
  7064  00C9  00F2               	movwf	??_isr
  7065  00CA  1003               	clrc
  7066  00CB  0020               	movlb	0	; select bank0
  7067  00CC  1C8C               	btfss	12,1	;volatile
  7068  00CD  1403               	setc
  7069  00CE  3000               	movlw	0
  7070  00CF  3D09               	addwfc	9,w
  7071  00D0  0572               	andwf	??_isr,w
  7072  00D1  1D03               	btfss	3,2
  7073                           
  7074                           ;launcher_main.c: 215: {
  7075                           ;launcher_main.c: 216: strobeFlag = 0;
  7076  00D2  01EA               	clrf	_strobeFlag
  7077  00D3                     i1l158:	
  7078  00D3  0876               	movf	??_isr+4,w
  7079  00D4  0020               	movlb	0	; select bank0
  7080  00D5  00FF               	movwf	127
  7081  00D6  107E               	bcf	126,0	;clear compiler interrupt flag
  7082  00D7  0009               	retfie
  7083  00D8                     __end_of_isr:	
  7084                           
  7085                           	psect	text33
  7086  0C99                     __ptext33:	
  7087 ;; *************** function _WriteBuffer *****************
  7088 ;; Defined at:
  7089 ;;		line 220 in file "launcher_functions.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  data            1    wreg     unsigned char 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  data            1    1[COMMON] unsigned char 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;		None               void
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7103 ;;      Params:         0       0       0       0       0       0       0       0
  7104 ;;      Locals:         1       0       0       0       0       0       0       0
  7105 ;;      Temps:          1       0       0       0       0       0       0       0
  7106 ;;      Totals:         2       0       0       0       0       0       0       0
  7107 ;;Total ram usage:        2 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_isr
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function _WriteBuffer
  7118  0C99                     _WriteBuffer:	
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7122                           ;WriteBuffer@data stored from wreg
  7123  0C99  00F1               	movwf	WriteBuffer@data
  7124                           
  7125                           ;launcher_functions.c: 222: buffer[end] = data;
  7126  0C9A  0871               	movf	WriteBuffer@data,w
  7127  0C9B  00F0               	movwf	??_WriteBuffer
  7128  0C9C  0879               	movf	_end,w
  7129  0C9D  3EA0               	addlw	_buffer& (0+255)
  7130  0C9E  0086               	movwf	6
  7131  0C9F  3001               	movlw	1	; select bank3/4
  7132  0CA0  0087               	movwf	7
  7133  0CA1  0870               	movf	??_WriteBuffer,w
  7134  0CA2  0081               	movwf	1
  7135                           
  7136                           ;launcher_functions.c: 224: if (end == 51)
  7137  0CA3  3033               	movlw	51
  7138  0CA4  0679               	xorwf	_end,w
  7139  0CA5  047A               	iorwf	_end+1,w
  7140  0CA6  1D03               	skipz
  7141  0CA7  2CAB               	goto	i1l2893
  7142                           
  7143                           ;launcher_functions.c: 225: end = 0;
  7144  0CA8  01F9               	clrf	_end
  7145  0CA9  01FA               	clrf	_end+1
  7146  0CAA  0008               	return
  7147  0CAB                     i1l2893:	
  7148                           
  7149                           ;launcher_functions.c: 226: else
  7150                           ;launcher_functions.c: 227: end++;
  7151  0CAB  3001               	movlw	1
  7152  0CAC  07F9               	addwf	_end,f
  7153  0CAD  3000               	movlw	0
  7154  0CAE  3DFA               	addwfc	_end+1,f
  7155  0CAF  0008               	return
  7156  0CB0                     __end_of_WriteBuffer:	
  7157  007E                     btemp	set	126	;btemp
  7158  007E                     pic14e$flags	set	126
  7159  007E                     wtemp	set	126
  7160  007E                     wtemp0	set	126
  7161  0080                     wtemp1	set	128
  7162  0082                     wtemp2	set	130
  7163  0084                     wtemp3	set	132
  7164  0086                     wtemp4	set	134
  7165  0088                     wtemp5	set	136
  7166  007F                     wtemp6	set	127
  7167  007E                     ttemp	set	126
  7168  007E                     ttemp0	set	126
  7169  0081                     ttemp1	set	129
  7170  0084                     ttemp2	set	132
  7171  0087                     ttemp3	set	135
  7172  007F                     ttemp4	set	127
  7173  007E                     ltemp	set	126
  7174  007E                     ltemp0	set	126
  7175  0082                     ltemp1	set	130
  7176  0086                     ltemp2	set	134
  7177  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    10
    Data        61
    BSS         194
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     69      78
    BANK1            80     62      78
    BANK2            80      0      80
    BANK3            80      0      73
    BANK4            80      0      72
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1466$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___awdiv
    ___awdiv->___wmul
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RecordMode->_SendGPSSPI
    _SendGPSSPI->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _CheckDisconnect->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8392
                                             61 BANK0      8     4      4
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                         _InitTimer0
                         _InitTimer1
                           _InitUART
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           25    25      0    3869
                                             36 BANK0     25    25      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    2784
                                             15 BANK0     21    21      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            65    65      0    2451
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1011
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1263
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1980
                                             28 BANK0     11    11      0
                    _CheckDisconnect
                            _InitSPI
                         _ReadBuffer
                         _SendGPSSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                            _InitSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CheckDisconnect                                      2     2      0      92
                                              7 BANK0      2     2      0
                      _ReadStatusSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitTimer0
   _InitTimer1
   _InitUART
   _InitWatchdog
   _RecordMode
     _CheckDisconnect
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
     _InitSPI
     _ReadBuffer
     _SendGPSSPI
       _InitSPI
       _WriteOverheadSPI
         _ReadStatusSPI
           _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     18B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      49      12       91.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      48      14       90.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     18B      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Nov 06 19:44:52 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 003C                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l114 0595                               l332 0C7F  
                             l422 0E40                               l360 0CC6                               l338 0BF2  
                             l349 0EF4                               l462 0CFB                               l632 0D07  
                             l448 034F                               l481 049F                               l459 0CEB  
                             l379 0BD2                               l396 0FFC                               l487 0F24  
                             _GIE 005F                               _PS0 04A8                               _PS1 04A9  
                             _PS2 04AA                               _PSA 04AB                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0032                               wreg 0009  
              DecodeGPS@longitude 003F                   DisableGPS@F4922 0156                              l2201 0E76  
                            l2123 0EE1                              l2211 0E7E                              l2213 0E8A  
                            l2151 0E1B                              l2223 0EA5                              l2241 0DAE  
                            l2161 0D01                              l2243 0DBA                              l2331 0691  
                            l2147 0E16                              l2307 0FBD                              l2227 0EAD  
                            l2219 0E9C                              l2411 017C                              l2253 0DD5  
                            l2149 0DE1                              l2317 0FC7                              l2173 0C61  
                            l2413 018B                              l2271 0D95                              l2351 06DA  
                            l2319 0FEA                              l2407 016B                              l2249 0DCC  
                            l2265 0D7D                              l2361 06F0                              l2345 06A4  
                            l2329 068F                              l2177 0C67                              l2521 0389  
                            l2267 0D89                              l2275 0D9E                              l2195 0E6B  
                            l2515 0361                              l2507 0351                              l2285 0CC2  
                            l2373 0715                              l2365 06F6                              l2349 06C0  
                            l2453 0250                              l2445 0234                              l2535 0C27  
                            l2391 0768                              l2553 0F3E                              l2811 04D9  
                            l2387 0728                              l2379 0724                              l2299 0FAF  
                            l2715 0794                              l2573 0F83                              l2821 0512  
                            l2389 066D                              l2725 07D8                              l2567 0F6A  
                            l2559 0F57                              l2497 032A                              l2489 030E  
                            l2771 042E                              l2747 03C1                              l2499 0330  
                            l2861 0E52                              l2791 0465                              l2783 044A  
                            l2855 0E47                              l2881 0CEC                              l2793 046F  
                            l2865 0E5C                              l2857 0E48                              l2961 05CA  
                            l2945 05AB                              l2929 0581                              l2779 03FB  
                            l2955 05BD                              l2949 05B3                              l2799 0482  
                            l2991 0654                              l2967 05DC                              l2985 064A  
                            l2969 05DD                              l2995 065D                              l2979 0618  
                            _ADIE 048E                              _ADIF 008E                              ?_isr 0070  
          __size_of_ReadStatusSPI 0011                              STR_1 080A                              STR_2 081D  
                            u2020 0142                              u2210 0778                              u2035 0169  
                            u2205 0F81                              u3007 079B                              u2135 035F  
                            u2055 0189                              u2305 046B                              u3017 07DF  
                            u2225 0792                              u2145 0387                              u2323 049D  
                            u2315 0488                              u3027 03CC                              u2235 07D6  
                            u2333 04CD                              u3037 04A9                              u2175 0F3C  
                            u2255 041C                              u2185 0F55                              u2345 04E4  
                            u2265 0434                              u1705 0E9D                              u2370 0E2B  
                            u2195 0F68                              u2355 04F9                              u2283 0411  
                            u1555 0DEB                              u1485 0EBF                              u1495 0ED3  
                            u2295 0453                              u1815 0D80                              u1745 0DB1  
                            u1905 0FD7                              u1665 0E81                              u1585 0D08  
                            u1835 0D8F                              u1595 0D0D                              u1765 0DBB  
                            u1845 0D96                              u1685 0E8B                              u1775 0DC5  
                            u1695 0E95                              u1785 0DCD                              u1875 0F9D  
                            _PEIE 005E                              u2917 056E                              u1975 070B  
                            u2927 058D                              u2937 05A3                              u2947 05D4  
                            _RCIE 048D                              u2957 05FD                              u2967 0634  
                            u2977 0D51                              u2987 0D60                              u2997 0D6E  
                            _OERR 0CE9                              _TMR0 0015                              _main 0530  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              ltemp 007E                              start 00D8  
                            ttemp 007E                              wtemp 007E                 ___bmul@multiplier 0023  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 0800  
                 __end_of_InitCLK 0BD0                   __end_of_InitSPI 0C5E                   __end_of_ReadSPI 0BFC  
              ??_compute_checksum 0022                             ??_isr 0072                     ?_InitWatchdog 0070  
           ReadStatusSPI@dataRead 0026                             ?_main 005D                   __end_of___awdiv 0EB4  
                 ___awdiv@divisor 0026                             _LATC2 0872                             _IOCAF 0393  
                           _IOCBF 0396                   __end_of___lwdiv 0DDC                             i1l158 00D3  
                 __end_of___lwmod 0DA5                   ___awdiv@counter 002B                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
               RecordMode@address 0043                   __end_of_dpowers 080A               DecodeGPS@northSouth 0039  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 076D            uart_write_message@data 0034  
          uart_write_message@size 0028                        _ReadBuffer 0CB0                   __initialization 00DA  
                      _InitTimer0 0BE4                        _InitTimer1 0BFC                 ?_WriteOverheadSPI 0027  
                    __end_of_main 0667                __size_of_DecodeGPS 025E                  __end_of_InitGPIO 0D49  
                __end_of_InitUART 0C1A                    ??_InitWatchdog 0020                     _ReadStatusSPI 0C29  
              ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0035                            ??_main 0061  
              __size_of_GoToSleep 0012                        _SendGPSSPI 0F14                   ReadSPI@dataByte 0021  
                  __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 07E7     WriteOverheadSPI@address_bytes 0031  
              __size_of_Hibernate 001C                        _RecordMode 0395                            _ADRESH 009C  
                ___awdiv@dividend 0028                   _CheckDisconnect 0C1A                  __end_of_WriteSPI 0C83  
                          i1l3003 0010                            i1l3013 0026                            i1l3021 0037  
                          i1l3031 0048                            i1l3017 0034                            i1l3019 0036  
                          i1l3061 00B3                            i1l3045 0088                            i1l3037 0070  
                          i1l3071 00C6                            i1l3047 008A                            i1l3057 00A3  
                          i1l2893 0CAB                            u266_25 0067                            _TMR0IE 005D  
                          _TMR0IF 005A                            _TMR0CS 04AD                            _TMR1IE 0488  
                          _TMR1IF 0088                            _SPBRGH 019C                            _TMR1ON 00C0  
                          _SPBRGL 019B                            _SSPBUF 0211                         ??_InitADC 0020  
                       ??_InitCLK 0020                         ??_InitSPI 0020                         ??_ReadSPI 0020  
                     SendGPSSPI@x 003A                            ___bmul 0C5E                    ?_ReadStatusSPI 0070  
                          ___wmul 0CFE                         ??___awdiv 002A                         ??___lwdiv 0024  
                       ??___lwmod 002C                            _buffer 01A0                  ___awdiv@quotient 002D  
     __size_of_uart_write_message 0076                __size_of_UpdateGPS 0042               main@periodicCounter 0064  
               __end_of_DecodeGPS 0395                         ??_sprintf 0034                    _gpsInvalidFlag 006B  
         __end_of__initialization 0133                 __end_of_GoToSleep 0C4C               ___bmul@multiplicand 0020  
                     ?_ReadBuffer 0070                 __end_of_Hibernate 0CFE                       ?_InitTimer0 0070  
                     ?_InitTimer1 0070                    __pcstackCOMMON 0070                      __pidataBANK0 0BB2  
                    __pidataBANK1 0BDA                      __pidataBANK2 0CC8                      __pidataBANK3 0C83  
                    WriteSPI@temp 0022                       ?_SendGPSSPI 0070           __end_of_CheckDisconnect 0C29  
                     ?_RecordMode 0070              __end_of_InitWatchdog 0BC8                        __pbssBANK0 0065  
                      __pbssBANK1 00E8                        __pbssBANK2 0120                        __pbssBANK3 01A0  
                      __pbssBANK4 0220                         ?_InitGPIO 0070                         ?_InitUART 0070  
                 SetupGPS@message 00A0                   ??_ReadStatusSPI 0025                 __end_of_UpdateGPS 0E60  
                      __pmaintext 0530                         ?_SetupGPS 0070                           ?___bmul 0020  
                         ?___wmul 0020                     ??_WriteBuffer 0070                        __pintentry 0004  
                  _validLongitude 00E5         UpdateGPS@GPSupdateMessage 0045                         ?_WriteSPI 0070  
              __size_of_uart_xmit 000A         __size_of_compute_checksum 0042               __size_of_ReadBuffer 0018  
             __size_of_InitTimer0 000C               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                      ??_InitUART 0020                           _InitADC 07E7                           _InitCLK 0BC8  
                         _InitSPI 0C4C                        _gpsMessage 0124           __size_of_ToggleSleepGPS 002D  
                         _ReadSPI 0BF0                       SetupGPS@MID 00D8               __size_of_SendGPSSPI 0076  
                      ??_SetupGPS 0041               __size_of_RecordMode 019B                   __size_of___bmul 0012  
                         ___awdiv 0E60                   __size_of___wmul 001E                           ___lwdiv 0DA5  
                         ___lwmod 0D76                           _isr$541 0077                        ??_WriteSPI 0020  
                         __ptext1 0E1E                           __ptext2 0137                           __ptext3 0CFE  
                         __ptext4 0C5E                           __ptext5 0E60                           __ptext6 0D49  
                         __ptext7 076D                           __ptext8 0F8A                           __ptext9 0BD0  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0CB0  
                    __size_of_isr 00D4                  ?_CheckDisconnect 0070                         _IOCAFbits 0393  
                       _IOCBFbits 0396                         _IOCANbits 0392         __size_of_WriteOverheadSPI 0060  
                       _IOCBNbits 0395                         _IOCAPbits 0391                         _IOCBPbits 0394  
                      _recordFlag 0069                           _sprintf 0667                           clrloop0 0BBC  
            end_of_initialization 0133                           init_ram 0BB5                           initloop 0BB6  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0BDA                         _RCSTAbits 019D  
                WriteSPI@databyte 0024                      __pstringtext 0800                         _PORTAbits 000C  
                       _PORTBbits 000D                         _PORTCbits 000E                    Hibernate@count 0021  
                __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E           WriteOverheadSPI@address 0027  
               SendGPSSPI@address 0036                   DecodeGPS@status 003B              uart_xmit@mydata_byte 0020  
           _preRecordingAddresses 0220                         _DecodeGPS 0137                         _TXSTAbits 019E  
                    ??_ReadBuffer 0020                        _strobeFlag 006A                      ??_InitTimer0 0020  
                    ??_InitTimer1 0020                         _GoToSleep 0C3A                    __end_of___bmul 0C70  
                     _WriteBuffer 0C99                    __end_of___wmul 0D1C        __end_of_uart_write_message 1000  
                       _Hibernate 0CE2                      _InitWatchdog 0BC1                      ??_SendGPSSPI 0035  
                   SetupGPS@F4925 016A                     SetupGPS@F4927 00DE               start_initialization 00DA  
                _compute_checksum 0DDC         WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 003C  
                     __end_of_isr 00D8             CheckDisconnect@status 0028                __end_of_ReadBuffer 0CC8  
               compute_checksum@x 0026                __end_of_InitTimer0 0BF0                __end_of_InitTimer1 0C0B  
                      ?_DecodeGPS 0070                    _ToggleSleepGPS 0D49                 __size_of_InitGPIO 002D  
               __size_of_InitUART 000F                __end_of_SendGPSSPI 0F8A                         SetupGPS@x 00DC  
            compute_checksum@data 0025                        ?_GoToSleep 0070                          ??___bmul 0021  
            compute_checksum@size 0020                          ??___wmul 0024                __end_of_RecordMode 0530  
                     __pdataBANK0 006B                       __pdataBANK1 00DE                       __pdataBANK2 0156  
                     __pdataBANK3 01D3                 __size_of_SetupGPS 007A                         _UpdateGPS 0E1E  
                      ?_Hibernate 0070          compute_checksum@checksum 0024                 __size_of_WriteSPI 0013  
                     __pbssCOMMON 0079                         ___latbits 0001                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                  _WriteOverheadSPI 0EB4               __end_of__stringdata 0824  
             uart_write_message@x 0031                     _validEastWest 006C            __end_of_ToggleSleepGPS 0D76  
                 _messageDoneFlag 0068                       sprintf@_val 003C                       sprintf@flag 0038  
         UpdateGPS@timeoutCounter 005B                       sprintf@prec 0039                          ?_InitADC 0070  
                        ?_InitCLK 0070                          ?_InitSPI 0070                          ?_ReadSPI 0070  
                   _validLatitude 00E2                  ___lwdiv@dividend 0022             __end_of_ReadStatusSPI 0C3A  
                        ?___awdiv 0026                          ?___lwdiv 0020                          ?___lwmod 0028  
                      ?_UpdateGPS 0070                    UpdateGPS@F4933 01D3                  __CFG_WDTE$SWDTEN 0000  
                ___lwdiv@quotient 0025                          ?_sprintf 002E        uart_write_message@checksum 0033  
                 ?_ToggleSleepGPS 0070                   _validNorthSouth 006D                       ??_DecodeGPS 002F  
                  ___wmul@product 0024                          _LATBbits 010D                          _LATCbits 010E  
                       clear_ram0 0BBB                          _PIE1bits 0091                    DecodeGPS@F4935 0163  
                  DecodeGPS@F4937 00E8                    DecodeGPS@F4939 00EB                          _PIR1bits 0011  
                     ??_GoToSleep 0020                         _uart_xmit 0BD0                       ??_Hibernate 0020  
                 _gpsTimeoutState 0066                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 080A                        _ADCON2bits 009F                 ___wmul@multiplier 0020  
                 RecordMode@count 0041                          _InitGPIO 0D1C                          _InitUART 0C0B  
        __size_of_CheckDisconnect 000F                  __size_of_InitADC 0019                  __size_of_InitCLK 0008  
                __size_of_InitSPI 0012                  __size_of_ReadSPI 000C          __end_of_compute_checksum 0E1E  
           SetupGPS@startSequence 00D2                          _SetupGPS 076D                        ?_uart_xmit 0070  
                    ?_WriteBuffer 0070                  __size_of___awdiv 0054                       ??_UpdateGPS 0044  
                __size_of___lwdiv 0037                  __size_of___lwmod 002F                          _WriteSPI 0C70  
         _uart_write_message$1397 002D           _uart_write_message$1398 002F                        _ANSELAbits 018C  
                      _ANSELBbits 018D               ReadBuffer@read_data 0021                   ___lwdiv@divisor 0020  
                 _hasValidGPSFlag 0067                   ___lwdiv@counter 0027                          __ptext10 0DDC  
                        __ptext11 0667                          __ptext20 0C29                          __ptext12 0D76  
                        __ptext21 0C70                          __ptext13 0DA5                        _T1GCONbits 0019  
                        __ptext30 0CE2                          __ptext22 0BF0                          __ptext14 0395  
                        __ptext31 0C3A                          __ptext23 0BC1                          __ptext15 0F14  
                        __ptext24 0C0B                          __ptext16 0EB4                          __ptext33 0C99  
                        __ptext25 0BFC                          __ptext17 0C4C                          __ptext26 0BE4  
                        __ptext18 0CB0                          __ptext27 0D1C                          __ptext19 0C1A  
                        __ptext28 0BC8                          __ptext29 07E7                _uart_write_message 0F8A  
                __size_of_sprintf 0106                          _gpsIndex 007D                     __size_of_main 0137  
             ?_uart_write_message 0028                        DecodeGPS@x 0042          __end_of_WriteOverheadSPI 0F14  
              _eeprom_timeoutFlag 0065                    GoToSleep@count 0021                          main@argc 005D  
                        main@argv 005F              ??_uart_write_message 002A                        _INTCONbits 000B  
                     pic14e$flags 007E                          intlevel1 0000                         sprintf@ap 003A  
                       sprintf@sp 003B                  ___lwmod@dividend 002A                 __CFG_CLKOUTEN$OFF 0000  
                      _OSCCONbits 0099                 ??_CheckDisconnect 0027                       ??_uart_xmit 0020  
                        sprintf@c 0040                          sprintf@f 002E                   ___lwmod@divisor 0028  
                 ___lwmod@counter 002D                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                   _recordEndAdress 0120                 DecodeGPS@eastWest 003A  
