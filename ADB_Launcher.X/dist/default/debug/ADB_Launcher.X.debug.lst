

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Nov 06 19:14:10 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  011F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  0210                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  028C                     	;# 
   180  028D                     	;# 
   181  028E                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  030C                     	;# 
   191  030D                     	;# 
   192  030E                     	;# 
   193  038C                     	;# 
   194  038D                     	;# 
   195  038E                     	;# 
   196  0390                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  0397                     	;# 
   204  0398                     	;# 
   205  0399                     	;# 
   206  039D                     	;# 
   207  039E                     	;# 
   208  039F                     	;# 
   209  0511                     	;# 
   210  0513                     	;# 
   211  051A                     	;# 
   212  0811                     	;# 
   213  0812                     	;# 
   214  0813                     	;# 
   215  0814                     	;# 
   216  0815                     	;# 
   217  0816                     	;# 
   218  0817                     	;# 
   219  0818                     	;# 
   220  0819                     	;# 
   221  081A                     	;# 
   222  081B                     	;# 
   223  081C                     	;# 
   224  081D                     	;# 
   225  081E                     	;# 
   226  081F                     	;# 
   227  0820                     	;# 
   228  0821                     	;# 
   229  0821                     	;# 
   230  0822                     	;# 
   231  0823                     	;# 
   232  0823                     	;# 
   233  0824                     	;# 
   234  0825                     	;# 
   235  0825                     	;# 
   236  0826                     	;# 
   237  0827                     	;# 
   238  0827                     	;# 
   239  0828                     	;# 
   240  0829                     	;# 
   241  082A                     	;# 
   242  082B                     	;# 
   243  082C                     	;# 
   244  082D                     	;# 
   245  082E                     	;# 
   246  082F                     	;# 
   247  0831                     	;# 
   248  0832                     	;# 
   249  0833                     	;# 
   250  0834                     	;# 
   251  0835                     	;# 
   252  0836                     	;# 
   253  0837                     	;# 
   254  0838                     	;# 
   255  0839                     	;# 
   256  083A                     	;# 
   257  083B                     	;# 
   258  083C                     	;# 
   259  083D                     	;# 
   260  083E                     	;# 
   261  083F                     	;# 
   262  0840                     	;# 
   263  0841                     	;# 
   264  0841                     	;# 
   265  0842                     	;# 
   266  0843                     	;# 
   267  0843                     	;# 
   268  0844                     	;# 
   269  0845                     	;# 
   270  0845                     	;# 
   271  0846                     	;# 
   272  0847                     	;# 
   273  0847                     	;# 
   274  0848                     	;# 
   275  0849                     	;# 
   276  084A                     	;# 
   277  084B                     	;# 
   278  084C                     	;# 
   279  084D                     	;# 
   280  084E                     	;# 
   281  084F                     	;# 
   282  0FE4                     	;# 
   283  0FE5                     	;# 
   284  0FE6                     	;# 
   285  0FE7                     	;# 
   286  0FE8                     	;# 
   287  0FE9                     	;# 
   288  0FEA                     	;# 
   289  0FEB                     	;# 
   290  0FED                     	;# 
   291  0FEE                     	;# 
   292  0FEF                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  0090                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0094                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0113                     	;# 
   346  0114                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011D                     	;# 
   353  011D                     	;# 
   354  011E                     	;# 
   355  011F                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0194                     	;# 
   365  0195                     	;# 
   366  0196                     	;# 
   367  0199                     	;# 
   368  0199                     	;# 
   369  0199                     	;# 
   370  019A                     	;# 
   371  019A                     	;# 
   372  019A                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019C                     	;# 
   381  019D                     	;# 
   382  019D                     	;# 
   383  019D                     	;# 
   384  019E                     	;# 
   385  019E                     	;# 
   386  019E                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  019F                     	;# 
   391  019F                     	;# 
   392  020C                     	;# 
   393  020D                     	;# 
   394  020E                     	;# 
   395  0210                     	;# 
   396  0211                     	;# 
   397  0211                     	;# 
   398  0212                     	;# 
   399  0212                     	;# 
   400  0213                     	;# 
   401  0213                     	;# 
   402  0214                     	;# 
   403  0214                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0216                     	;# 
   408  0216                     	;# 
   409  0217                     	;# 
   410  0217                     	;# 
   411  028C                     	;# 
   412  028D                     	;# 
   413  028E                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0298                     	;# 
   419  0298                     	;# 
   420  0299                     	;# 
   421  029A                     	;# 
   422  030C                     	;# 
   423  030D                     	;# 
   424  030E                     	;# 
   425  038C                     	;# 
   426  038D                     	;# 
   427  038E                     	;# 
   428  0390                     	;# 
   429  0391                     	;# 
   430  0392                     	;# 
   431  0393                     	;# 
   432  0394                     	;# 
   433  0395                     	;# 
   434  0396                     	;# 
   435  0397                     	;# 
   436  0398                     	;# 
   437  0399                     	;# 
   438  039D                     	;# 
   439  039E                     	;# 
   440  039F                     	;# 
   441  0511                     	;# 
   442  0513                     	;# 
   443  051A                     	;# 
   444  0811                     	;# 
   445  0812                     	;# 
   446  0813                     	;# 
   447  0814                     	;# 
   448  0815                     	;# 
   449  0816                     	;# 
   450  0817                     	;# 
   451  0818                     	;# 
   452  0819                     	;# 
   453  081A                     	;# 
   454  081B                     	;# 
   455  081C                     	;# 
   456  081D                     	;# 
   457  081E                     	;# 
   458  081F                     	;# 
   459  0820                     	;# 
   460  0821                     	;# 
   461  0821                     	;# 
   462  0822                     	;# 
   463  0823                     	;# 
   464  0823                     	;# 
   465  0824                     	;# 
   466  0825                     	;# 
   467  0825                     	;# 
   468  0826                     	;# 
   469  0827                     	;# 
   470  0827                     	;# 
   471  0828                     	;# 
   472  0829                     	;# 
   473  082A                     	;# 
   474  082B                     	;# 
   475  082C                     	;# 
   476  082D                     	;# 
   477  082E                     	;# 
   478  082F                     	;# 
   479  0831                     	;# 
   480  0832                     	;# 
   481  0833                     	;# 
   482  0834                     	;# 
   483  0835                     	;# 
   484  0836                     	;# 
   485  0837                     	;# 
   486  0838                     	;# 
   487  0839                     	;# 
   488  083A                     	;# 
   489  083B                     	;# 
   490  083C                     	;# 
   491  083D                     	;# 
   492  083E                     	;# 
   493  083F                     	;# 
   494  0840                     	;# 
   495  0841                     	;# 
   496  0841                     	;# 
   497  0842                     	;# 
   498  0843                     	;# 
   499  0843                     	;# 
   500  0844                     	;# 
   501  0845                     	;# 
   502  0845                     	;# 
   503  0846                     	;# 
   504  0847                     	;# 
   505  0847                     	;# 
   506  0848                     	;# 
   507  0849                     	;# 
   508  084A                     	;# 
   509  084B                     	;# 
   510  084C                     	;# 
   511  084D                     	;# 
   512  084E                     	;# 
   513  084F                     	;# 
   514  0FE4                     	;# 
   515  0FE5                     	;# 
   516  0FE6                     	;# 
   517  0FE7                     	;# 
   518  0FE8                     	;# 
   519  0FE9                     	;# 
   520  0FEA                     	;# 
   521  0FEB                     	;# 
   522  0FED                     	;# 
   523  0FEE                     	;# 
   524  0FEF                     	;# 
   525  0000                     	;# 
   526  0001                     	;# 
   527  0002                     	;# 
   528  0003                     	;# 
   529  0004                     	;# 
   530  0005                     	;# 
   531  0006                     	;# 
   532  0007                     	;# 
   533  0008                     	;# 
   534  0009                     	;# 
   535  000A                     	;# 
   536  000B                     	;# 
   537  000C                     	;# 
   538  000D                     	;# 
   539  000E                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0014                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0016                     	;# 
   547  0017                     	;# 
   548  0018                     	;# 
   549  0019                     	;# 
   550  001A                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  008C                     	;# 
   554  008D                     	;# 
   555  008E                     	;# 
   556  0090                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0094                     	;# 
   560  0095                     	;# 
   561  0096                     	;# 
   562  0097                     	;# 
   563  0098                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  009F                     	;# 
   572  010C                     	;# 
   573  010D                     	;# 
   574  010E                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0113                     	;# 
   578  0114                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011D                     	;# 
   585  011D                     	;# 
   586  011E                     	;# 
   587  011F                     	;# 
   588  018C                     	;# 
   589  018D                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  0199                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019A                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019D                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  020C                     	;# 
   625  020D                     	;# 
   626  020E                     	;# 
   627  0210                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  028C                     	;# 
   644  028D                     	;# 
   645  028E                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0298                     	;# 
   651  0298                     	;# 
   652  0299                     	;# 
   653  029A                     	;# 
   654  030C                     	;# 
   655  030D                     	;# 
   656  030E                     	;# 
   657  038C                     	;# 
   658  038D                     	;# 
   659  038E                     	;# 
   660  0390                     	;# 
   661  0391                     	;# 
   662  0392                     	;# 
   663  0393                     	;# 
   664  0394                     	;# 
   665  0395                     	;# 
   666  0396                     	;# 
   667  0397                     	;# 
   668  0398                     	;# 
   669  0399                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0511                     	;# 
   674  0513                     	;# 
   675  051A                     	;# 
   676  0811                     	;# 
   677  0812                     	;# 
   678  0813                     	;# 
   679  0814                     	;# 
   680  0815                     	;# 
   681  0816                     	;# 
   682  0817                     	;# 
   683  0818                     	;# 
   684  0819                     	;# 
   685  081A                     	;# 
   686  081B                     	;# 
   687  081C                     	;# 
   688  081D                     	;# 
   689  081E                     	;# 
   690  081F                     	;# 
   691  0820                     	;# 
   692  0821                     	;# 
   693  0821                     	;# 
   694  0822                     	;# 
   695  0823                     	;# 
   696  0823                     	;# 
   697  0824                     	;# 
   698  0825                     	;# 
   699  0825                     	;# 
   700  0826                     	;# 
   701  0827                     	;# 
   702  0827                     	;# 
   703  0828                     	;# 
   704  0829                     	;# 
   705  082A                     	;# 
   706  082B                     	;# 
   707  082C                     	;# 
   708  082D                     	;# 
   709  082E                     	;# 
   710  082F                     	;# 
   711  0831                     	;# 
   712  0832                     	;# 
   713  0833                     	;# 
   714  0834                     	;# 
   715  0835                     	;# 
   716  0836                     	;# 
   717  0837                     	;# 
   718  0838                     	;# 
   719  0839                     	;# 
   720  083A                     	;# 
   721  083B                     	;# 
   722  083C                     	;# 
   723  083D                     	;# 
   724  083E                     	;# 
   725  083F                     	;# 
   726  0840                     	;# 
   727  0841                     	;# 
   728  0841                     	;# 
   729  0842                     	;# 
   730  0843                     	;# 
   731  0843                     	;# 
   732  0844                     	;# 
   733  0845                     	;# 
   734  0845                     	;# 
   735  0846                     	;# 
   736  0847                     	;# 
   737  0847                     	;# 
   738  0848                     	;# 
   739  0849                     	;# 
   740  084A                     	;# 
   741  084B                     	;# 
   742  084C                     	;# 
   743  084D                     	;# 
   744  084E                     	;# 
   745  084F                     	;# 
   746  0FE4                     	;# 
   747  0FE5                     	;# 
   748  0FE6                     	;# 
   749  0FE7                     	;# 
   750  0FE8                     	;# 
   751  0FE9                     	;# 
   752  0FEA                     	;# 
   753  0FEB                     	;# 
   754  0FED                     	;# 
   755  0FEE                     	;# 
   756  0FEF                     	;# 
   757                           
   758                           	psect	idataBANK0
   759  0B96                     __pidataBANK0:	
   760                           
   761                           ;initializer for _gpsInvalidFlag
   762  0B96  3401               	retlw	1
   763                           
   764                           ;initializer for _validEastWest
   765  0B97  3445               	retlw	69
   766                           
   767                           ;initializer for _validNorthSouth
   768  0B98  344E               	retlw	78
   769                           
   770                           	psect	idataBANK1
   771  0BBE                     __pidataBANK1:	
   772                           
   773                           ;initializer for SetupGPS@F4927
   774  0BBE  3431               	retlw	49
   775  0BBF  3430               	retlw	48
   776  0BC0  3433               	retlw	51
   777  0BC1  3400               	retlw	0
   778                           
   779                           ;initializer for _validLatitude
   780  0BC2  3428               	retlw	40
   781  0BC3  3419               	retlw	25
   782  0BC4  3414               	retlw	20
   783                           
   784                           ;initializer for _validLongitude
   785  0BC5  3456               	retlw	86
   786  0BC6  3444               	retlw	68
   787  0BC7  3414               	retlw	20
   788                           
   789                           	psect	idataBANK2
   790  0CC5                     __pidataBANK2:	
   791                           
   792                           ;initializer for DisableGPS@F4922
   793  0CC5  3424               	retlw	36
   794  0CC6  3450               	retlw	80
   795  0CC7  3453               	retlw	83
   796  0CC8  3452               	retlw	82
   797  0CC9  3446               	retlw	70
   798  0CCA  3431               	retlw	49
   799  0CCB  3431               	retlw	49
   800  0CCC  3437               	retlw	55
   801  0CCD  342C               	retlw	44
   802  0CCE  3431               	retlw	49
   803  0CCF  3436               	retlw	54
   804  0CD0  342A               	retlw	42
   805  0CD1  3400               	retlw	0
   806                           
   807                           ;initializer for DecodeGPS@F4935
   808  0CD2  3424               	retlw	36
   809  0CD3  3447               	retlw	71
   810  0CD4  3450               	retlw	80
   811  0CD5  3447               	retlw	71
   812  0CD6  344C               	retlw	76
   813  0CD7  344C               	retlw	76
   814  0CD8  3400               	retlw	0
   815                           
   816                           ;initializer for SetupGPS@F4925
   817  0CD9  3424               	retlw	36
   818  0CDA  3450               	retlw	80
   819  0CDB  3453               	retlw	83
   820  0CDC  3452               	retlw	82
   821  0CDD  3446               	retlw	70
   822  0CDE  3400               	retlw	0
   823                           
   824                           	psect	idataBANK3
   825  0C67                     __pidataBANK3:	
   826                           
   827                           ;initializer for UpdateGPS@F4933
   828  0C67  3424               	retlw	36
   829  0C68  3450               	retlw	80
   830  0C69  3453               	retlw	83
   831  0C6A  3452               	retlw	82
   832  0C6B  3446               	retlw	70
   833  0C6C  3431               	retlw	49
   834  0C6D  3430               	retlw	48
   835  0C6E  3433               	retlw	51
   836  0C6F  342C               	retlw	44
   837  0C70  3430               	retlw	48
   838  0C71  3431               	retlw	49
   839  0C72  342C               	retlw	44
   840  0C73  3430               	retlw	48
   841  0C74  3430               	retlw	48
   842  0C75  342C               	retlw	44
   843  0C76  3430               	retlw	48
   844  0C77  3431               	retlw	49
   845  0C78  342C               	retlw	44
   846  0C79  3430               	retlw	48
   847  0C7A  3430               	retlw	48
   848  0C7B  342A               	retlw	42
   849  0C7C  3400               	retlw	0
   850                           
   851                           	psect	stringtext
   852  0800                     __pstringtext:	
   853  0800                     _dpowers:	
   854  0800  3401               	retlw	1
   855  0801  3400               	retlw	0
   856  0802  340A               	retlw	10
   857  0803  3400               	retlw	0
   858  0804  3464               	retlw	100
   859  0805  3400               	retlw	0
   860  0806  34E8               	retlw	232
   861  0807  3403               	retlw	3
   862  0808  3410               	retlw	16
   863  0809  3427               	retlw	39
   864  080A                     __end_of_dpowers:	
   865  000B                     _INTCONbits	set	11
   866  0011                     _PIR1bits	set	17
   867  000C                     _PORTAbits	set	12
   868  000D                     _PORTBbits	set	13
   869  000E                     _PORTCbits	set	14
   870  0018                     _T1CONbits	set	24
   871  0019                     _T1GCONbits	set	25
   872  0015                     _TMR0	set	21
   873  0017                     _TMR1H	set	23
   874  0016                     _TMR1L	set	22
   875  008E                     _ADIF	set	142
   876  005F                     _GIE	set	95
   877  005E                     _PEIE	set	94
   878  005D                     _TMR0IE	set	93
   879  005A                     _TMR0IF	set	90
   880  0088                     _TMR1IF	set	136
   881  00C0                     _TMR1ON	set	192
   882  009D                     _ADCON0bits	set	157
   883  009E                     _ADCON1bits	set	158
   884  009F                     _ADCON2bits	set	159
   885  009C                     _ADRESH	set	156
   886  0099                     _OSCCONbits	set	153
   887  0091                     _PIE1bits	set	145
   888  008C                     _TRISAbits	set	140
   889  008D                     _TRISBbits	set	141
   890  008E                     _TRISCbits	set	142
   891  0097                     _WDTCONbits	set	151
   892  048E                     _ADIE	set	1166
   893  04A8                     _PS0	set	1192
   894  04A9                     _PS1	set	1193
   895  04AA                     _PS2	set	1194
   896  04AB                     _PSA	set	1195
   897  048D                     _RCIE	set	1165
   898  04AD                     _TMR0CS	set	1197
   899  0488                     _TMR1IE	set	1160
   900  010D                     _LATBbits	set	269
   901  010E                     _LATCbits	set	270
   902  0872                     _LATC2	set	2162
   903  018C                     _ANSELAbits	set	396
   904  018D                     _ANSELBbits	set	397
   905  0199                     _RCREG	set	409
   906  019D                     _RCSTAbits	set	413
   907  019C                     _SPBRGH	set	412
   908  019B                     _SPBRGL	set	411
   909  019A                     _TXREG	set	410
   910  019E                     _TXSTAbits	set	414
   911  0CE9                     _OERR	set	3305
   912  0211                     _SSPBUF	set	529
   913  0215                     _SSPCON1bits	set	533
   914  0214                     _SSPSTATbits	set	532
   915  0393                     _IOCAF	set	915
   916  0393                     _IOCAFbits	set	915
   917  0392                     _IOCANbits	set	914
   918  0391                     _IOCAPbits	set	913
   919  0396                     _IOCBF	set	918
   920  0396                     _IOCBFbits	set	918
   921  0395                     _IOCBNbits	set	917
   922  0394                     _IOCBPbits	set	916
   923  080A                     __stringdata:	
   924  080A                     STR_1:	
   925  080A  3425               	retlw	37	;'%'
   926  080B  3473               	retlw	115	;'s'
   927  080C  3425               	retlw	37	;'%'
   928  080D  3473               	retlw	115	;'s'
   929  080E  342C               	retlw	44	;','
   930  080F  3430               	retlw	48	;'0'
   931  0810  3425               	retlw	37	;'%'
   932  0811  3464               	retlw	100	;'d'
   933  0812  342C               	retlw	44	;','
   934  0813  3430               	retlw	48	;'0'
   935  0814  3430               	retlw	48	;'0'
   936  0815  342C               	retlw	44	;','
   937  0816  3430               	retlw	48	;'0'
   938  0817  3430               	retlw	48	;'0'
   939  0818  342C               	retlw	44	;','
   940  0819  3430               	retlw	48	;'0'
   941  081A  3430               	retlw	48	;'0'
   942  081B  342A               	retlw	42	;'*'
   943  081C  3400               	retlw	0
   944  081D                     STR_2:	
   945  081D  3428               	retlw	40	;'('
   946  081E  346E               	retlw	110	;'n'
   947  081F  3475               	retlw	117	;'u'
   948  0820  346C               	retlw	108	;'l'
   949  0821  346C               	retlw	108	;'l'
   950  0822  3429               	retlw	41	;')'
   951  0823  3400               	retlw	0
   952  0824                     __end_of__stringdata:	
   953                           
   954                           ; #config settings
   955  0000                     
   956                           	psect	cinit
   957  00DA                     start_initialization:	
   958  00DA                     __initialization:	
   959                           
   960                           ; Clear objects allocated to COMMON
   961  00DA  01F9               	clrf	__pbssCOMMON& (0+127)
   962  00DB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   963  00DC  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   964  00DD  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   965  00DE  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   966                           
   967                           ; Clear objects allocated to BANK0
   968  00DF  01E5               	clrf	__pbssBANK0& (0+127)
   969  00E0  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   970  00E1  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   971  00E2  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   972  00E3  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   973  00E4  01EA               	clrf	(__pbssBANK0+5)& (0+127)
   974                           
   975                           ; Clear objects allocated to BANK1
   976  00E5  0021               	movlb	1	; select bank1
   977  00E6  01E8               	clrf	__pbssBANK1& (0+127)
   978  00E7  01E9               	clrf	(__pbssBANK1+1)& (0+127)
   979  00E8  01EA               	clrf	(__pbssBANK1+2)& (0+127)
   980  00E9  01EB               	clrf	(__pbssBANK1+3)& (0+127)
   981  00EA  01EC               	clrf	(__pbssBANK1+4)& (0+127)
   982  00EB  01ED               	clrf	(__pbssBANK1+5)& (0+127)
   983                           
   984                           ; Clear objects allocated to BANK2
   985  00EC  3020               	movlw	low __pbssBANK2
   986  00ED  0084               	movwf	4
   987  00EE  3001               	movlw	high __pbssBANK2
   988  00EF  0085               	movwf	5
   989  00F0  3036               	movlw	54
   990  00F1  318B  239F  3180   	fcall	clear_ram0
   991                           
   992                           ; Clear objects allocated to BANK3
   993  00F4  30A0               	movlw	low __pbssBANK3
   994  00F5  0084               	movwf	4
   995  00F6  3001               	movlw	high __pbssBANK3
   996  00F7  0085               	movwf	5
   997  00F8  3033               	movlw	51
   998  00F9  318B  239F  3180   	fcall	clear_ram0
   999                           
  1000                           ; Clear objects allocated to BANK4
  1001  00FC  3020               	movlw	low __pbssBANK4
  1002  00FD  0084               	movwf	4
  1003  00FE  3002               	movlw	high __pbssBANK4
  1004  00FF  0085               	movwf	5
  1005  0100  3048               	movlw	72
  1006  0101  318B  239F  3180   	fcall	clear_ram0
  1007                           
  1008                           ; Initialize objects allocated to BANK0
  1009  0104  3096               	movlw	low __pidataBANK0
  1010  0105  0084               	movwf	4
  1011  0106  308B               	movlw	(high __pidataBANK0)| (0+128)
  1012  0107  0085               	movwf	5
  1013  0108  306B               	movlw	low __pdataBANK0
  1014  0109  0086               	movwf	6
  1015  010A  3000               	movlw	high __pdataBANK0
  1016  010B  0087               	movwf	7
  1017  010C  3003               	movlw	3
  1018  010D  318B  2399  3180   	fcall	init_ram
  1019                           
  1020                           ; Initialize objects allocated to BANK1
  1021  0110  30BE               	movlw	low __pidataBANK1
  1022  0111  0084               	movwf	4
  1023  0112  308B               	movlw	(high __pidataBANK1)| (0+128)
  1024  0113  0085               	movwf	5
  1025  0114  30DE               	movlw	low __pdataBANK1
  1026  0115  0086               	movwf	6
  1027  0116  3000               	movlw	high __pdataBANK1
  1028  0117  0087               	movwf	7
  1029  0118  300A               	movlw	10
  1030  0119  318B  2399  3180   	fcall	init_ram
  1031                           
  1032                           ; Initialize objects allocated to BANK2
  1033  011C  30C5               	movlw	low __pidataBANK2
  1034  011D  0084               	movwf	4
  1035  011E  308C               	movlw	(high __pidataBANK2)| (0+128)
  1036  011F  0085               	movwf	5
  1037  0120  3056               	movlw	low __pdataBANK2
  1038  0121  0086               	movwf	6
  1039  0122  3001               	movlw	high __pdataBANK2
  1040  0123  0087               	movwf	7
  1041  0124  301A               	movlw	26
  1042  0125  318B  2399  3180   	fcall	init_ram
  1043                           
  1044                           ; Initialize objects allocated to BANK3
  1045  0128  3067               	movlw	low __pidataBANK3
  1046  0129  0084               	movwf	4
  1047  012A  308C               	movlw	(high __pidataBANK3)| (0+128)
  1048  012B  0085               	movwf	5
  1049  012C  30D3               	movlw	low __pdataBANK3
  1050  012D  0086               	movwf	6
  1051  012E  3001               	movlw	high __pdataBANK3
  1052  012F  0087               	movwf	7
  1053  0130  3016               	movlw	22
  1054  0131  318B  2399         	fcall	init_ram
  1055  0133                     end_of_initialization:	
  1056                           ;End of C runtime variable initialization code
  1057                           
  1058  0133                     __end_of__initialization:	
  1059  0133  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1060  0134  0020               	movlb	0
  1061  0135  3185  2D30         	ljmp	_main	;jump to C main() function
  1062                           
  1063                           	psect	bssCOMMON
  1064  0079                     __pbssCOMMON:	
  1065  0079                     _end:	
  1066  0079                     	ds	2
  1067  007B                     _start:	
  1068  007B                     	ds	2
  1069  007D                     _gpsIndex:	
  1070  007D                     	ds	1
  1071                           
  1072                           	psect	bssBANK0
  1073  0065                     __pbssBANK0:	
  1074  0065                     _eeprom_timeoutFlag:	
  1075  0065                     	ds	1
  1076  0066                     _gpsTimeoutState:	
  1077  0066                     	ds	1
  1078  0067                     _hasValidGPSFlag:	
  1079  0067                     	ds	1
  1080  0068                     _messageDoneFlag:	
  1081  0068                     	ds	1
  1082  0069                     _recordFlag:	
  1083  0069                     	ds	1
  1084  006A                     _strobeFlag:	
  1085  006A                     	ds	1
  1086                           
  1087                           	psect	dataBANK0
  1088  006B                     __pdataBANK0:	
  1089  006B                     _gpsInvalidFlag:	
  1090  006B                     	ds	1
  1091  006C                     _validEastWest:	
  1092  006C                     	ds	1
  1093  006D                     _validNorthSouth:	
  1094  006D                     	ds	1
  1095                           
  1096                           	psect	bssBANK1
  1097  00E8                     __pbssBANK1:	
  1098  00E8                     DecodeGPS@F4937:	
  1099  00E8                     	ds	3
  1100  00EB                     DecodeGPS@F4939:	
  1101  00EB                     	ds	3
  1102                           
  1103                           	psect	dataBANK1
  1104  00DE                     __pdataBANK1:	
  1105  00DE                     SetupGPS@F4927:	
  1106  00DE                     	ds	4
  1107  00E2                     _validLatitude:	
  1108  00E2                     	ds	3
  1109  00E5                     _validLongitude:	
  1110  00E5                     	ds	3
  1111                           
  1112                           	psect	bssBANK2
  1113  0120                     __pbssBANK2:	
  1114  0120                     _recordEndAdress:	
  1115  0120                     	ds	4
  1116  0124                     _gpsMessage:	
  1117  0124                     	ds	50
  1118                           
  1119                           	psect	dataBANK2
  1120  0156                     __pdataBANK2:	
  1121  0156                     DisableGPS@F4922:	
  1122  0156                     	ds	13
  1123  0163                     DecodeGPS@F4935:	
  1124  0163                     	ds	7
  1125  016A                     SetupGPS@F4925:	
  1126  016A                     	ds	6
  1127                           
  1128                           	psect	bssBANK3
  1129  01A0                     __pbssBANK3:	
  1130  01A0                     _buffer:	
  1131  01A0                     	ds	51
  1132                           
  1133                           	psect	dataBANK3
  1134  01D3                     __pdataBANK3:	
  1135  01D3                     UpdateGPS@F4933:	
  1136  01D3                     	ds	22
  1137                           
  1138                           	psect	bssBANK4
  1139  0220                     __pbssBANK4:	
  1140  0220                     _preRecordingAddresses:	
  1141  0220                     	ds	72
  1142                           
  1143                           	psect	clrtext
  1144  0B9F                     clear_ram0:	
  1145                           ;	Called with FSR0 containing the base address, and
  1146                           ;	WREG with the size to clear
  1147                           
  1148  0B9F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1149  0BA0                     clrloop0:	
  1150  0BA0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1151  0BA1  3101               	addfsr 0,1
  1152  0BA2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1153  0BA3  2BA0               	goto	clrloop0	;have we reached the end yet?
  1154  0BA4  3400               	retlw	0	;all done for this memory range, return
  1155                           
  1156                           	psect	inittext
  1157  0B99                     init_ram:	
  1158  0B99  00FE               	movwf	126
  1159  0B9A                     initloop:	
  1160  0B9A  0012               	moviw fsr0++
  1161  0B9B  001E               	movwi fsr1++
  1162  0B9C  0BFE               	decfsz	126,f
  1163  0B9D  2B9A               	goto	initloop
  1164  0B9E  3400               	retlw	0
  1165                           
  1166                           	psect	cstackBANK1
  1167  00A0                     __pcstackBANK1:	
  1168  00A0                     SetupGPS@message:	
  1169                           
  1170                           ; 50 bytes @ 0x0
  1171  00A0                     	ds	50
  1172  00D2                     SetupGPS@startSequence:	
  1173                           
  1174                           ; 6 bytes @ 0x32
  1175  00D2                     	ds	6
  1176  00D8                     SetupGPS@MID:	
  1177                           
  1178                           ; 4 bytes @ 0x38
  1179  00D8                     	ds	4
  1180  00DC                     SetupGPS@x:	
  1181                           
  1182                           ; 2 bytes @ 0x3C
  1183  00DC                     	ds	2
  1184                           
  1185                           	psect	cstackCOMMON
  1186  0070                     __pcstackCOMMON:	
  1187  0070                     ?_InitCLK:	
  1188  0070                     ?_InitGPIO:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  0070                     ?_InitADC:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  0070                     ?_InitTimer0:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  0070                     ?_InitTimer1:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  0070                     ?_InitWatchdog:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0070                     ?_InitUART:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0070                     ?_ToggleSleepGPS:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0070                     ?_SetupGPS:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0070                     ?_RecordMode:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0070                     ?_UpdateGPS:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0070                     ?_GoToSleep:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0070                     ?_Hibernate:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0070                     ?_WriteBuffer:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0070                     ??_WriteBuffer:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0070                     ?_DecodeGPS:	
  1231                           ; 0 bytes @ 0x0
  1232                           
  1233  0070                     ?_SendGPSSPI:	
  1234                           ; 0 bytes @ 0x0
  1235                           
  1236  0070                     ?_isr:	
  1237                           ; 0 bytes @ 0x0
  1238                           
  1239  0070                     ?_InitSPI:	
  1240                           ; 0 bytes @ 0x0
  1241                           
  1242  0070                     ?_WriteSPI:	
  1243                           ; 0 bytes @ 0x0
  1244                           
  1245  0070                     ?_uart_xmit:	
  1246                           ; 0 bytes @ 0x0
  1247                           
  1248  0070                     ?_CheckDisconnect:	
  1249                           ; 0 bytes @ 0x0
  1250                           
  1251  0070                     ?_ReadSPI:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_ReadStatusSPI:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_ReadBuffer:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x0
  1262  0070                     	ds	1
  1263  0071                     WriteBuffer@data:	
  1264                           
  1265                           ; 1 bytes @ 0x1
  1266  0071                     	ds	1
  1267  0072                     ??_isr:	
  1268                           
  1269                           ; 0 bytes @ 0x2
  1270  0072                     	ds	5
  1271  0077                     _isr$541:	
  1272                           
  1273                           ; 2 bytes @ 0x7
  1274  0077                     	ds	2
  1275                           
  1276                           	psect	cstackBANK0
  1277  0020                     __pcstackBANK0:	
  1278  0020                     ??_InitCLK:	
  1279  0020                     ??_InitGPIO:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0020                     ??_InitADC:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0020                     ??_InitTimer0:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0020                     ??_InitTimer1:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0020                     ??_InitWatchdog:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0020                     ??_InitUART:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0020                     ??_ToggleSleepGPS:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0020                     ??_GoToSleep:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0020                     ??_Hibernate:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0020                     ??_InitSPI:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0020                     ??_WriteSPI:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0020                     ??_ReadSPI:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0020                     ??_ReadBuffer:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0020                     ??_uart_xmit:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0020                     ?_compute_checksum:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0020                     ?___bmul:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0020                     ?___wmul:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0020                     ?___lwdiv:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333  0020                     uart_xmit@mydata_byte:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336  0020                     ___bmul@multiplicand:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0020                     compute_checksum@size:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0020                     ___wmul@multiplier:	
  1343                           ; 2 bytes @ 0x0
  1344                           
  1345  0020                     ___lwdiv@divisor:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x0
  1350  0020                     	ds	1
  1351  0021                     ??___bmul:	
  1352  0021                     ReadSPI@dataByte:	
  1353                           ; 0 bytes @ 0x1
  1354                           
  1355  0021                     ReadBuffer@read_data:	
  1356                           ; 1 bytes @ 0x1
  1357                           
  1358  0021                     GoToSleep@count:	
  1359                           ; 1 bytes @ 0x1
  1360                           
  1361  0021                     Hibernate@count:	
  1362                           ; 1 bytes @ 0x1
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x1
  1366  0021                     	ds	1
  1367  0022                     ??_compute_checksum:	
  1368  0022                     ___bmul@product:	
  1369                           ; 0 bytes @ 0x2
  1370                           
  1371  0022                     WriteSPI@temp:	
  1372                           ; 1 bytes @ 0x2
  1373                           
  1374  0022                     ___wmul@multiplicand:	
  1375                           ; 2 bytes @ 0x2
  1376                           
  1377  0022                     ___lwdiv@dividend:	
  1378                           ; 2 bytes @ 0x2
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0x2
  1382  0022                     	ds	1
  1383  0023                     ___bmul@multiplier:	
  1384                           
  1385                           ; 1 bytes @ 0x3
  1386  0023                     	ds	1
  1387  0024                     ??___wmul:	
  1388  0024                     ??___lwdiv:	
  1389                           ; 0 bytes @ 0x4
  1390                           
  1391  0024                     WriteSPI@databyte:	
  1392                           ; 0 bytes @ 0x4
  1393                           
  1394  0024                     compute_checksum@checksum:	
  1395                           ; 1 bytes @ 0x4
  1396                           
  1397  0024                     ___wmul@product:	
  1398                           ; 1 bytes @ 0x4
  1399                           
  1400                           
  1401                           ; 2 bytes @ 0x4
  1402  0024                     	ds	1
  1403  0025                     ??_ReadStatusSPI:	
  1404  0025                     compute_checksum@data:	
  1405                           ; 0 bytes @ 0x5
  1406                           
  1407  0025                     ___lwdiv@quotient:	
  1408                           ; 1 bytes @ 0x5
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x5
  1412  0025                     	ds	1
  1413  0026                     ?___awdiv:	
  1414  0026                     ReadStatusSPI@dataRead:	
  1415                           ; 2 bytes @ 0x6
  1416                           
  1417  0026                     compute_checksum@x:	
  1418                           ; 1 bytes @ 0x6
  1419                           
  1420  0026                     ___awdiv@divisor:	
  1421                           ; 2 bytes @ 0x6
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x6
  1425  0026                     	ds	1
  1426  0027                     ??_CheckDisconnect:	
  1427  0027                     ?_WriteOverheadSPI:	
  1428                           ; 0 bytes @ 0x7
  1429                           
  1430  0027                     ___lwdiv@counter:	
  1431                           ; 0 bytes @ 0x7
  1432                           
  1433  0027                     WriteOverheadSPI@address:	
  1434                           ; 1 bytes @ 0x7
  1435                           
  1436                           
  1437                           ; 4 bytes @ 0x7
  1438  0027                     	ds	1
  1439  0028                     ?_uart_write_message:	
  1440  0028                     ?___lwmod:	
  1441                           ; 0 bytes @ 0x8
  1442                           
  1443  0028                     CheckDisconnect@status:	
  1444                           ; 2 bytes @ 0x8
  1445                           
  1446  0028                     uart_write_message@size:	
  1447                           ; 1 bytes @ 0x8
  1448                           
  1449  0028                     ___awdiv@dividend:	
  1450                           ; 2 bytes @ 0x8
  1451                           
  1452  0028                     ___lwmod@divisor:	
  1453                           ; 2 bytes @ 0x8
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x8
  1457  0028                     	ds	2
  1458  002A                     ??_uart_write_message:	
  1459  002A                     ??___awdiv:	
  1460                           ; 0 bytes @ 0xA
  1461                           
  1462  002A                     ___lwmod@dividend:	
  1463                           ; 0 bytes @ 0xA
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0xA
  1467  002A                     	ds	1
  1468  002B                     ??_WriteOverheadSPI:	
  1469  002B                     ___awdiv@counter:	
  1470                           ; 0 bytes @ 0xB
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0xB
  1474  002B                     	ds	1
  1475  002C                     ??___lwmod:	
  1476  002C                     ___awdiv@sign:	
  1477                           ; 0 bytes @ 0xC
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0xC
  1481  002C                     	ds	1
  1482  002D                     ___lwmod@counter:	
  1483  002D                     _uart_write_message$1397:	
  1484                           ; 1 bytes @ 0xD
  1485                           
  1486  002D                     ___awdiv@quotient:	
  1487                           ; 2 bytes @ 0xD
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0xD
  1491  002D                     	ds	1
  1492  002E                     ?_sprintf:	
  1493  002E                     sprintf@f:	
  1494                           ; 2 bytes @ 0xE
  1495                           
  1496                           
  1497                           ; 2 bytes @ 0xE
  1498  002E                     	ds	1
  1499  002F                     ??_DecodeGPS:	
  1500  002F                     _uart_write_message$1398:	
  1501                           ; 0 bytes @ 0xF
  1502                           
  1503                           
  1504                           ; 2 bytes @ 0xF
  1505  002F                     	ds	2
  1506  0031                     uart_write_message@x:	
  1507  0031                     WriteOverheadSPI@address_bytes:	
  1508                           ; 2 bytes @ 0x11
  1509                           
  1510                           
  1511                           ; 3 bytes @ 0x11
  1512  0031                     	ds	1
  1513  0032                     DecodeGPS@messageID:	
  1514                           
  1515                           ; 7 bytes @ 0x12
  1516  0032                     	ds	1
  1517  0033                     uart_write_message@checksum:	
  1518                           
  1519                           ; 1 bytes @ 0x13
  1520  0033                     	ds	1
  1521  0034                     ??_sprintf:	
  1522  0034                     WriteOverheadSPI@StatusReg:	
  1523                           ; 0 bytes @ 0x14
  1524                           
  1525  0034                     uart_write_message@data:	
  1526                           ; 1 bytes @ 0x14
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x14
  1530  0034                     	ds	1
  1531  0035                     ??_SendGPSSPI:	
  1532  0035                     uart_write_message@ascii_checksum:	
  1533                           ; 0 bytes @ 0x15
  1534                           
  1535                           
  1536                           ; 2 bytes @ 0x15
  1537  0035                     	ds	1
  1538  0036                     SendGPSSPI@address:	
  1539                           
  1540                           ; 4 bytes @ 0x16
  1541  0036                     	ds	2
  1542  0038                     sprintf@flag:	
  1543                           
  1544                           ; 1 bytes @ 0x18
  1545  0038                     	ds	1
  1546  0039                     DecodeGPS@northSouth:	
  1547  0039                     sprintf@prec:	
  1548                           ; 1 bytes @ 0x19
  1549                           
  1550                           
  1551                           ; 1 bytes @ 0x19
  1552  0039                     	ds	1
  1553  003A                     DecodeGPS@eastWest:	
  1554  003A                     sprintf@ap:	
  1555                           ; 1 bytes @ 0x1A
  1556                           
  1557  003A                     SendGPSSPI@x:	
  1558                           ; 1 bytes @ 0x1A
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0x1A
  1562  003A                     	ds	1
  1563  003B                     DecodeGPS@status:	
  1564  003B                     sprintf@sp:	
  1565                           ; 1 bytes @ 0x1B
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x1B
  1569  003B                     	ds	1
  1570  003C                     ??_RecordMode:	
  1571  003C                     DecodeGPS@latitude:	
  1572                           ; 0 bytes @ 0x1C
  1573                           
  1574  003C                     sprintf@_val:	
  1575                           ; 3 bytes @ 0x1C
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0x1C
  1579  003C                     	ds	3
  1580  003F                     DecodeGPS@longitude:	
  1581                           
  1582                           ; 3 bytes @ 0x1F
  1583  003F                     	ds	1
  1584  0040                     sprintf@c:	
  1585                           
  1586                           ; 1 bytes @ 0x20
  1587  0040                     	ds	1
  1588  0041                     ??_SetupGPS:	
  1589  0041                     RecordMode@count:	
  1590                           ; 0 bytes @ 0x21
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x21
  1594  0041                     	ds	1
  1595  0042                     DecodeGPS@x:	
  1596                           
  1597                           ; 2 bytes @ 0x22
  1598  0042                     	ds	1
  1599  0043                     RecordMode@address:	
  1600                           
  1601                           ; 4 bytes @ 0x23
  1602  0043                     	ds	1
  1603  0044                     ??_UpdateGPS:	
  1604                           
  1605                           ; 0 bytes @ 0x24
  1606  0044                     	ds	1
  1607  0045                     UpdateGPS@GPSupdateMessage:	
  1608                           
  1609                           ; 22 bytes @ 0x25
  1610  0045                     	ds	22
  1611  005B                     UpdateGPS@timeoutCounter:	
  1612                           
  1613                           ; 2 bytes @ 0x3B
  1614  005B                     	ds	2
  1615  005D                     ?_main:	
  1616  005D                     main@argc:	
  1617                           ; 2 bytes @ 0x3D
  1618                           
  1619                           
  1620                           ; 2 bytes @ 0x3D
  1621  005D                     	ds	2
  1622  005F                     main@argv:	
  1623                           
  1624                           ; 2 bytes @ 0x3F
  1625  005F                     	ds	2
  1626  0061                     ??_main:	
  1627                           
  1628                           ; 0 bytes @ 0x41
  1629  0061                     	ds	3
  1630  0064                     main@periodicCounter:	
  1631                           
  1632                           ; 1 bytes @ 0x44
  1633  0064                     	ds	1
  1634                           
  1635                           	psect	maintext
  1636  0530                     __pmaintext:	
  1637 ;;
  1638 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1639 ;;
  1640 ;; *************** function _main *****************
  1641 ;; Defined at:
  1642 ;;		line 20 in file "launcher_main.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  argc            2   61[BANK0 ] int 
  1645 ;;  argv            2   63[BANK0 ] PTR PTR unsigned char 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  periodicCoun    1   68[BANK0 ] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   61[BANK0 ] int 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 17F/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1657 ;;      Params:         0       4       0       0       0       0       0
  1658 ;;      Locals:         0       1       0       0       0       0       0
  1659 ;;      Temps:          0       3       0       0       0       0       0
  1660 ;;      Totals:         0       8       0       0       0       0       0
  1661 ;;Total ram usage:        8 bytes
  1662 ;; Hardware stack levels required when called:    7
  1663 ;; This function calls:
  1664 ;;		_GoToSleep
  1665 ;;		_Hibernate
  1666 ;;		_InitADC
  1667 ;;		_InitCLK
  1668 ;;		_InitGPIO
  1669 ;;		_InitTimer0
  1670 ;;		_InitTimer1
  1671 ;;		_InitUART
  1672 ;;		_InitWatchdog
  1673 ;;		_RecordMode
  1674 ;;		_SetupGPS
  1675 ;;		_ToggleSleepGPS
  1676 ;;		_UpdateGPS
  1677 ;; This function is called by:
  1678 ;;		Startup code after reset
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _main
  1684  0530                     _main:	
  1685                           
  1686                           ;launcher_main.c: 23: InitCLK();
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1690  0530  318B  23AC  3185   	fcall	_InitCLK
  1691                           
  1692                           ;launcher_main.c: 24: InitGPIO();
  1693  0533  318C  24FD  3185   	fcall	_InitGPIO
  1694                           
  1695                           ;launcher_main.c: 25: InitADC();
  1696  0536  3187  27E7  3185   	fcall	_InitADC
  1697                           
  1698                           ;launcher_main.c: 27: InitTimer0();
  1699  0539  318B  23C8  3185   	fcall	_InitTimer0
  1700                           
  1701                           ;launcher_main.c: 28: InitTimer1();
  1702  053C  318B  23E0  3185   	fcall	_InitTimer1
  1703                           
  1704                           ;launcher_main.c: 29: InitWatchdog();
  1705  053F  318B  23A5  3185   	fcall	_InitWatchdog
  1706                           
  1707                           ;launcher_main.c: 30: InitUART();
  1708  0542  318B  23EF  3185   	fcall	_InitUART
  1709                           
  1710                           ;launcher_main.c: 32: unsigned char periodicCounter = 10;
  1711  0545  300A               	movlw	10
  1712  0546  0020               	movlb	0	; select bank0
  1713  0547  00E1               	movwf	??_main
  1714  0548  0861               	movf	??_main,w
  1715  0549  00E4               	movwf	main@periodicCounter
  1716                           
  1717                           ;launcher_main.c: 33: gpsIndex = 0;
  1718  054A  01FD               	clrf	_gpsIndex	;volatile
  1719                           
  1720                           ;launcher_main.c: 35: INTCONbits.GIE = 1;
  1721  054B  178B               	bsf	11,7	;volatile
  1722                           
  1723                           ;launcher_main.c: 37: ToggleSleepGPS();
  1724  054C  318D  252A  3185   	fcall	_ToggleSleepGPS
  1725                           
  1726                           ;launcher_main.c: 38: SetupGPS();
  1727  054F  3187  276D  3185   	fcall	_SetupGPS
  1728                           
  1729                           ;launcher_main.c: 40: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1730  0552  0022               	movlb	2	; select bank2
  1731  0553  080D               	movf	13,w	;volatile
  1732  0554  39FF               	andlw	255
  1733  0555  39DF               	andlw	223
  1734  0556  0020               	movlb	0	; select bank0
  1735  0557  00E1               	movwf	??_main
  1736  0558  080D               	movf	13,w	;volatile
  1737  0559  0661               	xorwf	??_main,w
  1738  055A  3900               	andlw	-256
  1739  055B  0661               	xorwf	??_main,w
  1740  055C  008D               	movwf	13	;volatile
  1741                           
  1742                           ;launcher_main.c: 41: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1743  055D  0022               	movlb	2	; select bank2
  1744  055E  080D               	movf	13,w	;volatile
  1745  055F  39FF               	andlw	255
  1746  0560  3810               	iorlw	16
  1747  0561  0020               	movlb	0	; select bank0
  1748  0562  00E1               	movwf	??_main
  1749  0563  080D               	movf	13,w	;volatile
  1750  0564  0661               	xorwf	??_main,w
  1751  0565  3900               	andlw	-256
  1752  0566  0661               	xorwf	??_main,w
  1753  0567  008D               	movwf	13	;volatile
  1754                           
  1755                           ;launcher_main.c: 42: _delay((unsigned long)((100)*(16000000/4000.0)));
  1756  0568  3003               	movlw	3
  1757  0569  00E3               	movwf	??_main+2
  1758  056A  3008               	movlw	8
  1759  056B  00E2               	movwf	??_main+1
  1760  056C  3078               	movlw	120
  1761  056D  00E1               	movwf	??_main
  1762  056E                     u2897:	
  1763  056E  0BE1               	decfsz	??_main,f
  1764  056F  2D6E               	goto	u2897
  1765  0570  0BE2               	decfsz	??_main+1,f
  1766  0571  2D6E               	goto	u2897
  1767  0572  0BE3               	decfsz	??_main+2,f
  1768  0573  2D6E               	goto	u2897
  1769                           
  1770                           ;launcher_main.c: 43: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1771  0574  0022               	movlb	2	; select bank2
  1772  0575  080D               	movf	13,w	;volatile
  1773  0576  39FF               	andlw	255
  1774  0577  39EF               	andlw	239
  1775  0578  0020               	movlb	0	; select bank0
  1776  0579  00E1               	movwf	??_main
  1777  057A  080D               	movf	13,w	;volatile
  1778  057B  0661               	xorwf	??_main,w
  1779  057C  3900               	andlw	-256
  1780  057D  0661               	xorwf	??_main,w
  1781  057E  008D               	movwf	13	;volatile
  1782                           
  1783                           ;launcher_main.c: 46: LATC2 = (1);
  1784  057F  0022               	movlb	2	; select bank2
  1785  0580  150E               	bsf	14,2	;volatile
  1786  0581                     l2937:	
  1787                           ;launcher_main.c: 48: while(1){
  1788                           
  1789                           
  1790                           ;launcher_main.c: 58: LATC2 = (1);
  1791  0581  0022               	movlb	2	; select bank2
  1792  0582  150E               	bsf	14,2	;volatile
  1793                           
  1794                           ;launcher_main.c: 61: if(PORTAbits.RA1)
  1795  0583  0020               	movlb	0	; select bank0
  1796  0584  1C8C               	btfss	12,1	;volatile
  1797  0585  2D95               	goto	l114
  1798                           
  1799                           ;launcher_main.c: 62: {
  1800                           ;launcher_main.c: 64: PORTBbits.RB0 = 1;
  1801  0586  140D               	bsf	13,0	;volatile
  1802                           
  1803                           ;launcher_main.c: 65: _delay((unsigned long)((100)*(16000000/4000.0)));
  1804  0587  3003               	movlw	3
  1805  0588  00E3               	movwf	??_main+2
  1806  0589  3008               	movlw	8
  1807  058A  00E2               	movwf	??_main+1
  1808  058B  3078               	movlw	120
  1809  058C  00E1               	movwf	??_main
  1810  058D                     u2907:	
  1811  058D  0BE1               	decfsz	??_main,f
  1812  058E  2D8D               	goto	u2907
  1813  058F  0BE2               	decfsz	??_main+1,f
  1814  0590  2D8D               	goto	u2907
  1815  0591  0BE3               	decfsz	??_main+2,f
  1816  0592  2D8D               	goto	u2907
  1817                           
  1818                           ;launcher_main.c: 66: PORTBbits.RB0 = 0;
  1819  0593  0020               	movlb	0	; select bank0
  1820  0594  100D               	bcf	13,0	;volatile
  1821  0595                     l114:	
  1822                           
  1823                           ;launcher_main.c: 67: }
  1824                           ;launcher_main.c: 69: if(recordFlag)
  1825  0595  0869               	movf	_recordFlag,w
  1826  0596  1903               	btfsc	3,2
  1827  0597  2DAB               	goto	l2953
  1828                           
  1829                           ;launcher_main.c: 70: {
  1830                           ;launcher_main.c: 71: RecordMode();
  1831  0598  3183  2395  3185   	fcall	_RecordMode
  1832                           
  1833                           ;launcher_main.c: 72: recordFlag = 0;
  1834  059B  0020               	movlb	0	; select bank0
  1835  059C  01E9               	clrf	_recordFlag
  1836                           
  1837                           ;launcher_main.c: 73: _delay((unsigned long)((500)*(16000000/4000.0)));
  1838  059D  300B               	movlw	11
  1839  059E  00E3               	movwf	??_main+2
  1840  059F  3026               	movlw	38
  1841  05A0  00E2               	movwf	??_main+1
  1842  05A1  3066               	movlw	102
  1843  05A2  00E1               	movwf	??_main
  1844  05A3                     u2917:	
  1845  05A3  0BE1               	decfsz	??_main,f
  1846  05A4  2DA3               	goto	u2917
  1847  05A5  0BE2               	decfsz	??_main+1,f
  1848  05A6  2DA3               	goto	u2917
  1849  05A7  0BE3               	decfsz	??_main+2,f
  1850  05A8  2DA3               	goto	u2917
  1851  05A9  3200               	nop2
  1852  05AA  0020               	movlb	0	; select bank0
  1853  05AB                     l2953:	
  1854                           
  1855                           ;launcher_main.c: 74: }
  1856                           ;launcher_main.c: 77: if(gpsTimeoutState==0)
  1857  05AB  0020               	movlb	0	; select bank0
  1858  05AC  08E6               	movf	_gpsTimeoutState,f
  1859  05AD  1D03               	skipz
  1860  05AE  2DB3               	goto	l2957
  1861                           
  1862                           ;launcher_main.c: 78: UpdateGPS();
  1863  05AF  318E  26B3  3185   	fcall	_UpdateGPS
  1864  05B2  2DDD               	goto	l2977
  1865  05B3                     l2957:	
  1866                           
  1867                           ;launcher_main.c: 79: else if(gpsTimeoutState==1)
  1868  05B3  0020               	movlb	0	; select bank0
  1869  05B4  0866               	movf	_gpsTimeoutState,w
  1870  05B5  3A01               	xorlw	1
  1871  05B6  1D03               	skipz
  1872  05B7  2DBD               	goto	l2963
  1873                           
  1874                           ;launcher_main.c: 80: {
  1875                           ;launcher_main.c: 81: ToggleSleepGPS();
  1876  05B8  318D  252A  3185   	fcall	_ToggleSleepGPS
  1877                           
  1878                           ;launcher_main.c: 82: gpsTimeoutState = 2;
  1879  05BB  3002               	movlw	2
  1880  05BC  2DC5               	goto	L1
  1881  05BD                     l2963:	
  1882                           ;launcher_main.c: 83: }
  1883                           
  1884                           
  1885                           ;launcher_main.c: 84: else if(gpsTimeoutState==2)
  1886  05BD  0866               	movf	_gpsTimeoutState,w
  1887  05BE  3A02               	xorlw	2
  1888  05BF  1D03               	skipz
  1889  05C0  2DCA               	goto	l2969
  1890                           
  1891                           ;launcher_main.c: 85: {
  1892                           ;launcher_main.c: 86: ToggleSleepGPS();
  1893  05C1  318D  252A  3185   	fcall	_ToggleSleepGPS
  1894                           
  1895                           ;launcher_main.c: 87: gpsTimeoutState = 3;
  1896  05C4  3003               	movlw	3
  1897  05C5                     L1:	
  1898  05C5  0020               	movlb	0	; select bank0
  1899  05C6  00E1               	movwf	??_main
  1900  05C7  0861               	movf	??_main,w
  1901  05C8  00E6               	movwf	_gpsTimeoutState
  1902                           
  1903                           ;launcher_main.c: 88: }
  1904  05C9  2DDD               	goto	l2977
  1905  05CA                     l2969:	
  1906                           
  1907                           ;launcher_main.c: 89: else if(gpsTimeoutState==3)
  1908  05CA  0866               	movf	_gpsTimeoutState,w
  1909  05CB  3A03               	xorlw	3
  1910  05CC  1D03               	skipz
  1911  05CD  2DDC               	goto	l2975
  1912                           
  1913                           ;launcher_main.c: 90: {
  1914                           ;launcher_main.c: 91: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1915  05CE  3015               	movlw	21
  1916  05CF  00E3               	movwf	??_main+2
  1917  05D0  304B               	movlw	75
  1918  05D1  00E2               	movwf	??_main+1
  1919  05D2  30D1               	movlw	209
  1920  05D3  00E1               	movwf	??_main
  1921  05D4                     u2927:	
  1922  05D4  0BE1               	decfsz	??_main,f
  1923  05D5  2DD4               	goto	u2927
  1924  05D6  0BE2               	decfsz	??_main+1,f
  1925  05D7  2DD4               	goto	u2927
  1926  05D8  0BE3               	decfsz	??_main+2,f
  1927  05D9  2DD4               	goto	u2927
  1928  05DA  0000               	nop
  1929                           
  1930                           ;launcher_main.c: 92: gpsTimeoutState = 0;
  1931  05DB  0020               	movlb	0	; select bank0
  1932  05DC                     l2975:	
  1933                           ;launcher_main.c: 93: }
  1934                           
  1935                           
  1936                           ;launcher_main.c: 94: else
  1937                           ;launcher_main.c: 95: {
  1938                           ;launcher_main.c: 96: gpsTimeoutState = 0;
  1939  05DC  01E6               	clrf	_gpsTimeoutState
  1940  05DD                     l2977:	
  1941                           
  1942                           ;launcher_main.c: 97: }
  1943                           ;launcher_main.c: 99: if(gpsInvalidFlag)
  1944  05DD  0020               	movlb	0	; select bank0
  1945  05DE  086B               	movf	_gpsInvalidFlag,w
  1946  05DF  1903               	btfsc	3,2
  1947  05E0  2E18               	goto	l2987
  1948                           
  1949                           ;launcher_main.c: 100: {
  1950                           ;launcher_main.c: 101: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1951  05E1  0022               	movlb	2	; select bank2
  1952  05E2  080D               	movf	13,w	;volatile
  1953  05E3  39FF               	andlw	255
  1954  05E4  3820               	iorlw	32
  1955  05E5  0020               	movlb	0	; select bank0
  1956  05E6  00E1               	movwf	??_main
  1957  05E7  080D               	movf	13,w	;volatile
  1958  05E8  0661               	xorwf	??_main,w
  1959  05E9  3900               	andlw	-256
  1960  05EA  0661               	xorwf	??_main,w
  1961  05EB  008D               	movwf	13	;volatile
  1962                           
  1963                           ;launcher_main.c: 102: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1964  05EC  0022               	movlb	2	; select bank2
  1965  05ED  080D               	movf	13,w	;volatile
  1966  05EE  39FF               	andlw	255
  1967  05EF  39EF               	andlw	239
  1968  05F0  0020               	movlb	0	; select bank0
  1969  05F1  00E1               	movwf	??_main
  1970  05F2  080D               	movf	13,w	;volatile
  1971  05F3  0661               	xorwf	??_main,w
  1972  05F4  3900               	andlw	-256
  1973  05F5  0661               	xorwf	??_main,w
  1974  05F6  008D               	movwf	13	;volatile
  1975                           
  1976                           ;launcher_main.c: 103: _delay((unsigned long)((250)*(16000000/4000.0)));
  1977  05F7  3006               	movlw	6
  1978  05F8  00E3               	movwf	??_main+2
  1979  05F9  3013               	movlw	19
  1980  05FA  00E2               	movwf	??_main+1
  1981  05FB  30B1               	movlw	177
  1982  05FC  00E1               	movwf	??_main
  1983  05FD                     u2937:	
  1984  05FD  0BE1               	decfsz	??_main,f
  1985  05FE  2DFD               	goto	u2937
  1986  05FF  0BE2               	decfsz	??_main+1,f
  1987  0600  2DFD               	goto	u2937
  1988  0601  0BE3               	decfsz	??_main+2,f
  1989  0602  2DFD               	goto	u2937
  1990  0603  3200               	nop2
  1991                           
  1992                           ;launcher_main.c: 104: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1993  0604  0022               	movlb	2	; select bank2
  1994  0605  080D               	movf	13,w	;volatile
  1995  0606  39FF               	andlw	255
  1996  0607  39DF               	andlw	223
  1997  0608  0020               	movlb	0	; select bank0
  1998  0609  00E1               	movwf	??_main
  1999  060A  080D               	movf	13,w	;volatile
  2000  060B  0661               	xorwf	??_main,w
  2001  060C  3900               	andlw	-256
  2002  060D  0661               	xorwf	??_main,w
  2003  060E  008D               	movwf	13	;volatile
  2004                           
  2005                           ;launcher_main.c: 105: if(periodicCounter < 14)
  2006  060F  300E               	movlw	14
  2007  0610  0264               	subwf	main@periodicCounter,w
  2008  0611  1803               	skipnc
  2009  0612  2E4A               	goto	l2993
  2010                           
  2011                           ;launcher_main.c: 106: periodicCounter++;
  2012  0613  3001               	movlw	1
  2013  0614  00E1               	movwf	??_main
  2014  0615  0861               	movf	??_main,w
  2015  0616  07E4               	addwf	main@periodicCounter,f
  2016                           
  2017                           ;launcher_main.c: 107: }
  2018  0617  2E4A               	goto	l2993
  2019  0618                     l2987:	
  2020                           
  2021                           ;launcher_main.c: 108: else
  2022                           ;launcher_main.c: 109: {
  2023                           ;launcher_main.c: 110: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  2024  0618  0022               	movlb	2	; select bank2
  2025  0619  080D               	movf	13,w	;volatile
  2026  061A  39FF               	andlw	255
  2027  061B  3810               	iorlw	16
  2028  061C  0020               	movlb	0	; select bank0
  2029  061D  00E1               	movwf	??_main
  2030  061E  080D               	movf	13,w	;volatile
  2031  061F  0661               	xorwf	??_main,w
  2032  0620  3900               	andlw	-256
  2033  0621  0661               	xorwf	??_main,w
  2034  0622  008D               	movwf	13	;volatile
  2035                           
  2036                           ;launcher_main.c: 111: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  2037  0623  0022               	movlb	2	; select bank2
  2038  0624  080D               	movf	13,w	;volatile
  2039  0625  39FF               	andlw	255
  2040  0626  39DF               	andlw	223
  2041  0627  0020               	movlb	0	; select bank0
  2042  0628  00E1               	movwf	??_main
  2043  0629  080D               	movf	13,w	;volatile
  2044  062A  0661               	xorwf	??_main,w
  2045  062B  3900               	andlw	-256
  2046  062C  0661               	xorwf	??_main,w
  2047  062D  008D               	movwf	13	;volatile
  2048                           
  2049                           ;launcher_main.c: 112: _delay((unsigned long)((250)*(16000000/4000.0)));
  2050  062E  3006               	movlw	6
  2051  062F  00E3               	movwf	??_main+2
  2052  0630  3013               	movlw	19
  2053  0631  00E2               	movwf	??_main+1
  2054  0632  30B1               	movlw	177
  2055  0633  00E1               	movwf	??_main
  2056  0634                     u2947:	
  2057  0634  0BE1               	decfsz	??_main,f
  2058  0635  2E34               	goto	u2947
  2059  0636  0BE2               	decfsz	??_main+1,f
  2060  0637  2E34               	goto	u2947
  2061  0638  0BE3               	decfsz	??_main+2,f
  2062  0639  2E34               	goto	u2947
  2063  063A  3200               	nop2
  2064                           
  2065                           ;launcher_main.c: 113: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  2066  063B  0022               	movlb	2	; select bank2
  2067  063C  080D               	movf	13,w	;volatile
  2068  063D  39FF               	andlw	255
  2069  063E  39EF               	andlw	239
  2070  063F  0020               	movlb	0	; select bank0
  2071  0640  00E1               	movwf	??_main
  2072  0641  080D               	movf	13,w	;volatile
  2073  0642  0661               	xorwf	??_main,w
  2074  0643  3900               	andlw	-256
  2075  0644  0661               	xorwf	??_main,w
  2076  0645  008D               	movwf	13	;volatile
  2077                           
  2078                           ;launcher_main.c: 114: periodicCounter = 10;
  2079  0646  300A               	movlw	10
  2080  0647  00E1               	movwf	??_main
  2081  0648  0861               	movf	??_main,w
  2082  0649  00E4               	movwf	main@periodicCounter
  2083  064A                     l2993:	
  2084                           
  2085                           ;launcher_main.c: 115: }
  2086                           ;launcher_main.c: 117: if(!recordFlag)
  2087  064A  08E9               	movf	_recordFlag,f
  2088  064B  1D03               	skipz
  2089  064C  2D81               	goto	l2937
  2090                           
  2091                           ;launcher_main.c: 118: {
  2092                           ;launcher_main.c: 119: if(PORTAbits.RA1)
  2093  064D  1C8C               	btfss	12,1	;volatile
  2094  064E  2E54               	goto	l2999
  2095                           
  2096                           ;launcher_main.c: 120: GoToSleep(10);
  2097  064F  300A               	movlw	10
  2098  0650  318C  241E  3185   	fcall	_GoToSleep
  2099  0653  2D81               	goto	l2937
  2100  0654                     l2999:	
  2101                           
  2102                           ;launcher_main.c: 121: else if(gpsInvalidFlag)
  2103  0654  0020               	movlb	0	; select bank0
  2104  0655  086B               	movf	_gpsInvalidFlag,w
  2105  0656  1903               	btfsc	3,2
  2106  0657  2E5D               	goto	l3003
  2107                           
  2108                           ;launcher_main.c: 122: GoToSleep(periodicCounter);
  2109  0658  0864               	movf	main@periodicCounter,w
  2110  0659  318C  241E  3185   	fcall	_GoToSleep
  2111  065C  2D81               	goto	l2937
  2112  065D                     l3003:	
  2113                           
  2114                           ;launcher_main.c: 123: else
  2115                           ;launcher_main.c: 124: {
  2116                           ;launcher_main.c: 125: ToggleSleepGPS();
  2117  065D  318D  252A  3185   	fcall	_ToggleSleepGPS
  2118                           
  2119                           ;launcher_main.c: 126: Hibernate();
  2120  0660  318C  24AC  3185   	fcall	_Hibernate
  2121                           
  2122                           ;launcher_main.c: 127: ToggleSleepGPS();
  2123  0663  318D  252A  3185   	fcall	_ToggleSleepGPS
  2124  0666  2D81               	goto	l2937
  2125  0667                     __end_of_main:	
  2126                           ;launcher_main.c: 128: }
  2127                           ;launcher_main.c: 129: }
  2128                           ;launcher_main.c: 132: }
  2129                           ;launcher_main.c: 134: return (0);
  2130                           ;	Return value of _main is never used
  2131                           
  2132                           
  2133                           	psect	text1
  2134  0EB3                     __ptext1:	
  2135 ;; *************** function _UpdateGPS *****************
  2136 ;; Defined at:
  2137 ;;		line 380 in file "launcher_functions.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  GPSupdateMes   22   37[BANK0 ] unsigned char [22]
  2142 ;;  timeoutCount    2   59[BANK0 ] unsigned int 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;		None               void
  2145 ;; Registers used:
  2146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2152 ;;      Params:         0       0       0       0       0       0       0
  2153 ;;      Locals:         0      24       0       0       0       0       0
  2154 ;;      Temps:          0       1       0       0       0       0       0
  2155 ;;      Totals:         0      25       0       0       0       0       0
  2156 ;;Total ram usage:       25 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    4
  2159 ;; This function calls:
  2160 ;;		_DecodeGPS
  2161 ;;		_uart_write_message
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _UpdateGPS
  2169  0EB3                     _UpdateGPS:	
  2170                           
  2171                           ;launcher_functions.c: 382: unsigned int timeoutCounter = 0;
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2175  0EB3  0020               	movlb	0	; select bank0
  2176  0EB4  01DB               	clrf	UpdateGPS@timeoutCounter
  2177  0EB5  01DC               	clrf	UpdateGPS@timeoutCounter+1
  2178                           
  2179                           ;launcher_functions.c: 383: unsigned char GPSupdateMessage[22] = "$PSRF103,01,00,01,00*"
      +                          ;
  2180  0EB6  30D3               	movlw	low UpdateGPS@F4933
  2181  0EB7  0086               	movwf	6
  2182  0EB8  3001               	movlw	high UpdateGPS@F4933
  2183  0EB9  0087               	movwf	7
  2184  0EBA  3045               	movlw	low UpdateGPS@GPSupdateMessage
  2185  0EBB  0084               	movwf	4
  2186  0EBC  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2187  0EBD  0085               	movwf	5
  2188  0EBE  3016               	movlw	22
  2189  0EBF  00C4               	movwf	??_UpdateGPS
  2190  0EC0                     u2360:	
  2191  0EC0  0016               	moviw fsr1++
  2192  0EC1  001A               	movwi fsr0++
  2193  0EC2  0BC4               	decfsz	??_UpdateGPS,f
  2194  0EC3  2EC0               	goto	u2360
  2195                           
  2196                           ;launcher_functions.c: 386: RCIE = 1;
  2197  0EC4  0021               	movlb	1	; select bank1
  2198  0EC5  1691               	bsf	17,5	;volatile
  2199                           
  2200                           ;launcher_functions.c: 387: PEIE = 1;
  2201  0EC6  170B               	bsf	11,6	;volatile
  2202                           
  2203                           ;launcher_functions.c: 388: GIE = 1;
  2204  0EC7  178B               	bsf	11,7	;volatile
  2205                           
  2206                           ;launcher_functions.c: 393: gpsIndex = 0;
  2207  0EC8  01FD               	clrf	_gpsIndex	;volatile
  2208                           
  2209                           ;launcher_functions.c: 394: uart_write_message(GPSupdateMessage, 22);
  2210  0EC9  3016               	movlw	22
  2211  0ECA  0020               	movlb	0	; select bank0
  2212  0ECB  00A8               	movwf	uart_write_message@size
  2213  0ECC  3000               	movlw	0
  2214  0ECD  00A9               	movwf	uart_write_message@size+1
  2215  0ECE  3045               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2216  0ECF  318F  278A  318E   	fcall	_uart_write_message
  2217                           
  2218                           ;launcher_functions.c: 395: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  2219  0ED2  0022               	movlb	2	; select bank2
  2220  0ED3  080D               	movf	13,w	;volatile
  2221  0ED4  39FF               	andlw	255
  2222  0ED5  3820               	iorlw	32
  2223  0ED6  0020               	movlb	0	; select bank0
  2224  0ED7  00C4               	movwf	??_UpdateGPS
  2225  0ED8  080D               	movf	13,w	;volatile
  2226  0ED9  0644               	xorwf	??_UpdateGPS,w
  2227  0EDA  3900               	andlw	-256
  2228  0EDB  0644               	xorwf	??_UpdateGPS,w
  2229  0EDC  008D               	movwf	13	;volatile
  2230                           
  2231                           ;launcher_functions.c: 396: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  2232  0EDD  0022               	movlb	2	; select bank2
  2233  0EDE  080D               	movf	13,w	;volatile
  2234  0EDF  39FF               	andlw	255
  2235  0EE0  39EF               	andlw	239
  2236  0EE1  0020               	movlb	0	; select bank0
  2237  0EE2  00C4               	movwf	??_UpdateGPS
  2238  0EE3  080D               	movf	13,w	;volatile
  2239  0EE4  0644               	xorwf	??_UpdateGPS,w
  2240  0EE5  3900               	andlw	-256
  2241  0EE6  0644               	xorwf	??_UpdateGPS,w
  2242  0EE7  008D               	movwf	13	;volatile
  2243  0EE8  2EEF               	goto	L2
  2244  0EE9                     l422:	
  2245                           ;launcher_functions.c: 399: while(!messageDoneFlag && (timeoutCounter <= 61))
  2246                           
  2247                           ;launcher_functions.c: 398: TMR0 = 0x00;;
  2248                           
  2249                           ;launcher_functions.c: 397: TMR0IF = 0;
  2250                           
  2251                           
  2252                           ;launcher_functions.c: 400: {
  2253                           ;launcher_functions.c: 401: if(INTCONbits.TMR0IF)
  2254  0EE9  1D0B               	btfss	11,2	;volatile
  2255  0EEA  2EF1               	goto	l2865
  2256                           
  2257                           ;launcher_functions.c: 402: {
  2258                           ;launcher_functions.c: 403: timeoutCounter++;
  2259  0EEB  3001               	movlw	1
  2260  0EEC  07DB               	addwf	UpdateGPS@timeoutCounter,f
  2261  0EED  3000               	movlw	0
  2262  0EEE  3DDC               	addwfc	UpdateGPS@timeoutCounter+1,f
  2263  0EEF                     L2:	
  2264                           
  2265                           ;launcher_functions.c: 404: TMR0IF = 0;
  2266  0EEF  110B               	bcf	11,2	;volatile
  2267                           
  2268                           ;launcher_functions.c: 405: TMR0 = 0x00;;
  2269  0EF0  0195               	clrf	21	;volatile
  2270  0EF1                     l2865:	
  2271  0EF1  08E8               	movf	_messageDoneFlag,f
  2272  0EF2  1D03               	skipz
  2273  0EF3  2EFB               	goto	l2869
  2274  0EF4  3000               	movlw	0
  2275  0EF5  025C               	subwf	UpdateGPS@timeoutCounter+1,w
  2276  0EF6  303E               	movlw	62
  2277  0EF7  1903               	skipnz
  2278  0EF8  025B               	subwf	UpdateGPS@timeoutCounter,w
  2279  0EF9  1C03               	skipc
  2280  0EFA  2EE9               	goto	l422
  2281  0EFB                     l2869:	
  2282                           
  2283                           ;launcher_functions.c: 406: }
  2284                           ;launcher_functions.c: 407: }
  2285                           ;launcher_functions.c: 408: if(timeoutCounter > 61)
  2286  0EFB  3000               	movlw	0
  2287  0EFC  025C               	subwf	UpdateGPS@timeoutCounter+1,w
  2288  0EFD  303E               	movlw	62
  2289  0EFE  1903               	skipnz
  2290  0EFF  025B               	subwf	UpdateGPS@timeoutCounter,w
  2291  0F00  1C03               	skipc
  2292  0F01  2F05               	goto	l2873
  2293                           
  2294                           ;launcher_functions.c: 409: {
  2295                           ;launcher_functions.c: 410: gpsTimeoutState = 1;
  2296  0F02  01E6               	clrf	_gpsTimeoutState
  2297  0F03  0AE6               	incf	_gpsTimeoutState,f
  2298                           
  2299                           ;launcher_functions.c: 411: return;
  2300  0F04  0008               	return
  2301  0F05                     l2873:	
  2302                           
  2303                           ;launcher_functions.c: 412: }
  2304                           ;launcher_functions.c: 413: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  2305  0F05  0022               	movlb	2	; select bank2
  2306  0F06  080D               	movf	13,w	;volatile
  2307  0F07  39FF               	andlw	255
  2308  0F08  39DF               	andlw	223
  2309  0F09  0020               	movlb	0	; select bank0
  2310  0F0A  00C4               	movwf	??_UpdateGPS
  2311  0F0B  080D               	movf	13,w	;volatile
  2312  0F0C  0644               	xorwf	??_UpdateGPS,w
  2313  0F0D  3900               	andlw	-256
  2314  0F0E  0644               	xorwf	??_UpdateGPS,w
  2315  0F0F  008D               	movwf	13	;volatile
  2316                           
  2317                           ;launcher_functions.c: 414: messageDoneFlag = 0;
  2318  0F10  01E8               	clrf	_messageDoneFlag
  2319                           
  2320                           ;launcher_functions.c: 415: DecodeGPS();
  2321  0F11  3181  2137         	fcall	_DecodeGPS
  2322  0F13  0008               	return
  2323  0F14                     __end_of_UpdateGPS:	
  2324                           
  2325                           	psect	text2
  2326  0137                     __ptext2:	
  2327 ;; *************** function _DecodeGPS *****************
  2328 ;; Defined at:
  2329 ;;		line 421 in file "launcher_functions.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  messageID       7   18[BANK0 ] unsigned char [7]
  2334 ;;  longitude       3   31[BANK0 ] unsigned char [3]
  2335 ;;  latitude        3   28[BANK0 ] unsigned char [3]
  2336 ;;  x               2   34[BANK0 ] int 
  2337 ;;  status          1   27[BANK0 ] unsigned char 
  2338 ;;  eastWest        1   26[BANK0 ] unsigned char 
  2339 ;;  northSouth      1   25[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;		None               void
  2342 ;; Registers used:
  2343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2349 ;;      Params:         0       0       0       0       0       0       0
  2350 ;;      Locals:         0      18       0       0       0       0       0
  2351 ;;      Temps:          0       3       0       0       0       0       0
  2352 ;;      Totals:         0      21       0       0       0       0       0
  2353 ;;Total ram usage:       21 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    3
  2356 ;; This function calls:
  2357 ;;		___awdiv
  2358 ;;		___bmul
  2359 ;;		___wmul
  2360 ;; This function is called by:
  2361 ;;		_UpdateGPS
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _DecodeGPS
  2367  0137                     _DecodeGPS:	
  2368                           
  2369                           ;launcher_functions.c: 424: unsigned char messageID[7] = "$GPGLL";
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2373  0137  3063               	movlw	low DecodeGPS@F4935
  2374  0138  0086               	movwf	6
  2375  0139  3001               	movlw	high DecodeGPS@F4935
  2376  013A  0087               	movwf	7
  2377  013B  3032               	movlw	low DecodeGPS@messageID
  2378  013C  0084               	movwf	4
  2379  013D  3000               	movlw	high DecodeGPS@messageID
  2380  013E  0085               	movwf	5
  2381  013F  3007               	movlw	7
  2382  0140  0020               	movlb	0	; select bank0
  2383  0141  00AF               	movwf	??_DecodeGPS
  2384  0142                     u2010:	
  2385  0142  0016               	moviw fsr1++
  2386  0143  001A               	movwi fsr0++
  2387  0144  0BAF               	decfsz	??_DecodeGPS,f
  2388  0145  2942               	goto	u2010
  2389                           
  2390                           ;launcher_functions.c: 425: unsigned char latitude[3] = {0,0,0};
  2391  0146  0021               	movlb	1	; select bank1
  2392  0147  0868               	movf	DecodeGPS@F4937^(0+128),w
  2393  0148  0020               	movlb	0	; select bank0
  2394  0149  00BC               	movwf	DecodeGPS@latitude
  2395  014A  0021               	movlb	1	; select bank1
  2396  014B  0869               	movf	(DecodeGPS@F4937+1)^(0+128),w
  2397  014C  0020               	movlb	0	; select bank0
  2398  014D  00BD               	movwf	DecodeGPS@latitude+1
  2399  014E  0021               	movlb	1	; select bank1
  2400  014F  086A               	movf	(DecodeGPS@F4937+2)^(0+128),w
  2401  0150  0020               	movlb	0	; select bank0
  2402  0151  00BE               	movwf	DecodeGPS@latitude+2
  2403                           
  2404                           ;launcher_functions.c: 426: unsigned char longitude[3] = {0,0,0};
  2405  0152  0021               	movlb	1	; select bank1
  2406  0153  086B               	movf	DecodeGPS@F4939^(0+128),w
  2407  0154  0020               	movlb	0	; select bank0
  2408  0155  00BF               	movwf	DecodeGPS@longitude
  2409  0156  0021               	movlb	1	; select bank1
  2410  0157  086C               	movf	(DecodeGPS@F4939+1)^(0+128),w
  2411  0158  0020               	movlb	0	; select bank0
  2412  0159  00C0               	movwf	DecodeGPS@longitude+1
  2413  015A  0021               	movlb	1	; select bank1
  2414  015B  086D               	movf	(DecodeGPS@F4939+2)^(0+128),w
  2415  015C  0020               	movlb	0	; select bank0
  2416  015D  00C1               	movwf	DecodeGPS@longitude+2
  2417                           
  2418                           ;launcher_functions.c: 427: unsigned char northSouth;
  2419                           ;launcher_functions.c: 428: unsigned char eastWest;
  2420                           ;launcher_functions.c: 429: unsigned char status;
  2421                           ;launcher_functions.c: 430: int x;
  2422                           ;launcher_functions.c: 432: for(x=0;x<6;x++)
  2423  015E  01C2               	clrf	DecodeGPS@x
  2424  015F  01C3               	clrf	DecodeGPS@x+1
  2425  0160  0843               	movf	DecodeGPS@x+1,w
  2426  0161  3A80               	xorlw	128
  2427  0162  00AF               	movwf	??_DecodeGPS
  2428  0163  3080               	movlw	128
  2429  0164  022F               	subwf	??_DecodeGPS,w
  2430  0165  1D03               	skipz
  2431  0166  2969               	goto	u2025
  2432  0167  3006               	movlw	6
  2433  0168  0242               	subwf	DecodeGPS@x,w
  2434  0169                     u2025:	
  2435  0169  1803               	btfsc	3,0
  2436  016A  298B               	goto	l2417
  2437  016B                     l2411:	
  2438                           
  2439                           ;launcher_functions.c: 433: {
  2440                           ;launcher_functions.c: 434: if(gpsMessage[x] != messageID[x])
  2441  016B  0020               	movlb	0	; select bank0
  2442  016C  0842               	movf	DecodeGPS@x,w
  2443  016D  3E32               	addlw	DecodeGPS@messageID& (0+255)
  2444  016E  0086               	movwf	6
  2445  016F  0187               	clrf	7
  2446  0170  0842               	movf	DecodeGPS@x,w
  2447  0171  3E24               	addlw	_gpsMessage& (0+255)
  2448  0172  0084               	movwf	4
  2449  0173  3001               	movlw	1	; select bank2/3
  2450  0174  0085               	movwf	5
  2451  0175  0800               	movf	0,w
  2452  0176  0601               	xorwf	1,w
  2453  0177  1903               	skipnz
  2454  0178  297C               	goto	l2415
  2455                           
  2456                           ;launcher_functions.c: 435: {
  2457                           ;launcher_functions.c: 436: gpsInvalidFlag = 1;
  2458  0179  01EB               	clrf	_gpsInvalidFlag
  2459  017A  0AEB               	incf	_gpsInvalidFlag,f
  2460                           
  2461                           ;launcher_functions.c: 437: return;
  2462  017B  0008               	return
  2463  017C                     l2415:	
  2464  017C  3001               	movlw	1
  2465  017D  07C2               	addwf	DecodeGPS@x,f
  2466  017E  3000               	movlw	0
  2467  017F  3DC3               	addwfc	DecodeGPS@x+1,f
  2468  0180  0843               	movf	DecodeGPS@x+1,w
  2469  0181  3A80               	xorlw	128
  2470  0182  00AF               	movwf	??_DecodeGPS
  2471  0183  3080               	movlw	128
  2472  0184  022F               	subwf	??_DecodeGPS,w
  2473  0185  1D03               	skipz
  2474  0186  2989               	goto	u2045
  2475  0187  3006               	movlw	6
  2476  0188  0242               	subwf	DecodeGPS@x,w
  2477  0189                     u2045:	
  2478  0189  1C03               	skipc
  2479  018A  296B               	goto	l2411
  2480  018B                     l2417:	
  2481                           
  2482                           ;launcher_functions.c: 438: }
  2483                           ;launcher_functions.c: 439: }
  2484                           ;launcher_functions.c: 442: x = x + 1;
  2485  018B  0020               	movlb	0	; select bank0
  2486  018C  0842               	movf	DecodeGPS@x,w
  2487  018D  3E01               	addlw	1
  2488  018E  00C2               	movwf	DecodeGPS@x
  2489  018F  3000               	movlw	0
  2490  0190  3D43               	addwfc	DecodeGPS@x+1,w
  2491  0191  00C3               	movwf	DecodeGPS@x+1
  2492                           
  2493                           ;launcher_functions.c: 445: if(gpsMessage[x]!= ',')
  2494  0192  0842               	movf	DecodeGPS@x,w
  2495  0193  3E24               	addlw	_gpsMessage& (0+255)
  2496  0194  0086               	movwf	6
  2497  0195  3001               	movlw	1	; select bank2/3
  2498  0196  0087               	movwf	7
  2499  0197  0801               	movf	1,w
  2500  0198  3A2C               	xorlw	44
  2501  0199  1903               	skipnz
  2502  019A  2A34               	goto	l2449
  2503                           
  2504                           ;launcher_functions.c: 446: {
  2505                           ;launcher_functions.c: 448: latitude[0] = (gpsMessage[x++] - 48)*10;
  2506  019B  300A               	movlw	10
  2507  019C  00AF               	movwf	??_DecodeGPS
  2508  019D  082F               	movf	??_DecodeGPS,w
  2509  019E  00A0               	movwf	___bmul@multiplicand
  2510  019F  0842               	movf	DecodeGPS@x,w
  2511  01A0  3E24               	addlw	_gpsMessage& (0+255)
  2512  01A1  0086               	movwf	6
  2513  01A2  3001               	movlw	1	; select bank2/3
  2514  01A3  0087               	movwf	7
  2515  01A4  0801               	movf	1,w
  2516  01A5  3ED0               	addlw	208
  2517  01A6  318C  2442  3181   	fcall	___bmul
  2518  01A9  0020               	movlb	0	; select bank0
  2519  01AA  00B0               	movwf	??_DecodeGPS+1
  2520  01AB  0830               	movf	??_DecodeGPS+1,w
  2521  01AC  00BC               	movwf	DecodeGPS@latitude
  2522  01AD  3001               	movlw	1
  2523  01AE  07C2               	addwf	DecodeGPS@x,f
  2524  01AF  3000               	movlw	0
  2525  01B0  3DC3               	addwfc	DecodeGPS@x+1,f
  2526                           
  2527                           ;launcher_functions.c: 449: latitude[0] += (gpsMessage[x++] - 48);
  2528  01B1  0842               	movf	DecodeGPS@x,w
  2529  01B2  3E24               	addlw	_gpsMessage& (0+255)
  2530  01B3  0086               	movwf	6
  2531  01B4  3001               	movlw	1	; select bank2/3
  2532  01B5  0087               	movwf	7
  2533  01B6  0801               	movf	1,w
  2534  01B7  3ED0               	addlw	208
  2535  01B8  00AF               	movwf	??_DecodeGPS
  2536  01B9  082F               	movf	??_DecodeGPS,w
  2537  01BA  07BC               	addwf	DecodeGPS@latitude,f
  2538  01BB  3001               	movlw	1
  2539  01BC  07C2               	addwf	DecodeGPS@x,f
  2540  01BD  3000               	movlw	0
  2541  01BE  3DC3               	addwfc	DecodeGPS@x+1,f
  2542                           
  2543                           ;launcher_functions.c: 452: latitude[1] = (gpsMessage[x++] - 48)*10;
  2544  01BF  300A               	movlw	10
  2545  01C0  00AF               	movwf	??_DecodeGPS
  2546  01C1  082F               	movf	??_DecodeGPS,w
  2547  01C2  00A0               	movwf	___bmul@multiplicand
  2548  01C3  0842               	movf	DecodeGPS@x,w
  2549  01C4  3E24               	addlw	_gpsMessage& (0+255)
  2550  01C5  0086               	movwf	6
  2551  01C6  3001               	movlw	1	; select bank2/3
  2552  01C7  0087               	movwf	7
  2553  01C8  0801               	movf	1,w
  2554  01C9  3ED0               	addlw	208
  2555  01CA  318C  2442  3181   	fcall	___bmul
  2556  01CD  0020               	movlb	0	; select bank0
  2557  01CE  00B0               	movwf	??_DecodeGPS+1
  2558  01CF  0830               	movf	??_DecodeGPS+1,w
  2559  01D0  00BD               	movwf	DecodeGPS@latitude+1
  2560  01D1  3001               	movlw	1
  2561  01D2  07C2               	addwf	DecodeGPS@x,f
  2562  01D3  3000               	movlw	0
  2563  01D4  3DC3               	addwfc	DecodeGPS@x+1,f
  2564                           
  2565                           ;launcher_functions.c: 453: latitude[1] += (gpsMessage[x++] - 48);
  2566  01D5  0842               	movf	DecodeGPS@x,w
  2567  01D6  3E24               	addlw	_gpsMessage& (0+255)
  2568  01D7  0086               	movwf	6
  2569  01D8  3001               	movlw	1	; select bank2/3
  2570  01D9  0087               	movwf	7
  2571  01DA  0801               	movf	1,w
  2572  01DB  3ED0               	addlw	208
  2573  01DC  00AF               	movwf	??_DecodeGPS
  2574  01DD  082F               	movf	??_DecodeGPS,w
  2575  01DE  07BD               	addwf	DecodeGPS@latitude+1,f
  2576  01DF  3001               	movlw	1
  2577  01E0  07C2               	addwf	DecodeGPS@x,f
  2578  01E1  3000               	movlw	0
  2579  01E2  3DC3               	addwfc	DecodeGPS@x+1,f
  2580                           
  2581                           ;launcher_functions.c: 456: x = x + 1;
  2582  01E3  0842               	movf	DecodeGPS@x,w
  2583  01E4  3E01               	addlw	1
  2584  01E5  00C2               	movwf	DecodeGPS@x
  2585  01E6  3000               	movlw	0
  2586  01E7  3D43               	addwfc	DecodeGPS@x+1,w
  2587  01E8  00C3               	movwf	DecodeGPS@x+1
  2588                           
  2589                           ;launcher_functions.c: 459: latitude[2] = (gpsMessage[x++] - 48)*10;
  2590  01E9  300A               	movlw	10
  2591  01EA  00AF               	movwf	??_DecodeGPS
  2592  01EB  082F               	movf	??_DecodeGPS,w
  2593  01EC  00A0               	movwf	___bmul@multiplicand
  2594  01ED  0842               	movf	DecodeGPS@x,w
  2595  01EE  3E24               	addlw	_gpsMessage& (0+255)
  2596  01EF  0086               	movwf	6
  2597  01F0  3001               	movlw	1	; select bank2/3
  2598  01F1  0087               	movwf	7
  2599  01F2  0801               	movf	1,w
  2600  01F3  3ED0               	addlw	208
  2601  01F4  318C  2442  3181   	fcall	___bmul
  2602  01F7  0020               	movlb	0	; select bank0
  2603  01F8  00B0               	movwf	??_DecodeGPS+1
  2604  01F9  0830               	movf	??_DecodeGPS+1,w
  2605  01FA  00BE               	movwf	DecodeGPS@latitude+2
  2606  01FB  3001               	movlw	1
  2607  01FC  07C2               	addwf	DecodeGPS@x,f
  2608  01FD  3000               	movlw	0
  2609  01FE  3DC3               	addwfc	DecodeGPS@x+1,f
  2610                           
  2611                           ;launcher_functions.c: 460: latitude[2] += (gpsMessage[x++] - 48);
  2612  01FF  0842               	movf	DecodeGPS@x,w
  2613  0200  3E24               	addlw	_gpsMessage& (0+255)
  2614  0201  0086               	movwf	6
  2615  0202  3001               	movlw	1	; select bank2/3
  2616  0203  0087               	movwf	7
  2617  0204  0801               	movf	1,w
  2618  0205  3ED0               	addlw	208
  2619  0206  00AF               	movwf	??_DecodeGPS
  2620  0207  082F               	movf	??_DecodeGPS,w
  2621  0208  07BE               	addwf	DecodeGPS@latitude+2,f
  2622  0209  3001               	movlw	1
  2623  020A  07C2               	addwf	DecodeGPS@x,f
  2624  020B  3000               	movlw	0
  2625  020C  3DC3               	addwfc	DecodeGPS@x+1,f
  2626                           
  2627                           ;launcher_functions.c: 461: latitude[2] = (latitude[2]*60)/100;
  2628  020D  3064               	movlw	100
  2629  020E  00A6               	movwf	___awdiv@divisor
  2630  020F  3000               	movlw	0
  2631  0210  00A7               	movwf	___awdiv@divisor+1
  2632  0211  083E               	movf	DecodeGPS@latitude+2,w
  2633  0212  00AF               	movwf	??_DecodeGPS
  2634  0213  01B0               	clrf	??_DecodeGPS+1
  2635  0214  082F               	movf	??_DecodeGPS,w
  2636  0215  00A0               	movwf	___wmul@multiplier
  2637  0216  0830               	movf	??_DecodeGPS+1,w
  2638  0217  00A1               	movwf	___wmul@multiplier+1
  2639  0218  303C               	movlw	60
  2640  0219  00A2               	movwf	___wmul@multiplicand
  2641  021A  3000               	movlw	0
  2642  021B  00A3               	movwf	___wmul@multiplicand+1
  2643  021C  318C  24DF  3181   	fcall	___wmul
  2644  021F  0020               	movlb	0	; select bank0
  2645  0220  0821               	movf	?___wmul+1,w
  2646  0221  01A9               	clrf	___awdiv@dividend+1
  2647  0222  07A9               	addwf	___awdiv@dividend+1,f
  2648  0223  0820               	movf	?___wmul,w
  2649  0224  01A8               	clrf	___awdiv@dividend
  2650  0225  07A8               	addwf	___awdiv@dividend,f
  2651  0226  318D  25FF  3181   	fcall	___awdiv
  2652  0229  0020               	movlb	0	; select bank0
  2653  022A  0826               	movf	?___awdiv,w
  2654  022B  00B1               	movwf	??_DecodeGPS+2
  2655  022C  0831               	movf	??_DecodeGPS+2,w
  2656  022D  00BE               	movwf	DecodeGPS@latitude+2
  2657                           
  2658                           ;launcher_functions.c: 464: x = x + 2;
  2659  022E  0842               	movf	DecodeGPS@x,w
  2660  022F  3E02               	addlw	2
  2661  0230  00C2               	movwf	DecodeGPS@x
  2662  0231  3000               	movlw	0
  2663  0232  3D43               	addwfc	DecodeGPS@x+1,w
  2664  0233  00C3               	movwf	DecodeGPS@x+1
  2665  0234                     l2449:	
  2666                           
  2667                           ;launcher_functions.c: 465: }
  2668                           ;launcher_functions.c: 468: x = x + 1;
  2669  0234  0842               	movf	DecodeGPS@x,w
  2670  0235  3E01               	addlw	1
  2671  0236  00C2               	movwf	DecodeGPS@x
  2672  0237  3000               	movlw	0
  2673  0238  3D43               	addwfc	DecodeGPS@x+1,w
  2674  0239  00C3               	movwf	DecodeGPS@x+1
  2675                           
  2676                           ;launcher_functions.c: 471: if(gpsMessage[x] != ',')
  2677  023A  0842               	movf	DecodeGPS@x,w
  2678  023B  3E24               	addlw	_gpsMessage& (0+255)
  2679  023C  0086               	movwf	6
  2680  023D  3001               	movlw	1	; select bank2/3
  2681  023E  0087               	movwf	7
  2682  023F  0801               	movf	1,w
  2683  0240  3A2C               	xorlw	44
  2684  0241  1903               	skipnz
  2685  0242  2A50               	goto	l2457
  2686                           
  2687                           ;launcher_functions.c: 472: northSouth = gpsMessage[x++];
  2688  0243  0842               	movf	DecodeGPS@x,w
  2689  0244  3E24               	addlw	_gpsMessage& (0+255)
  2690  0245  0086               	movwf	6
  2691  0246  3001               	movlw	1	; select bank2/3
  2692  0247  0087               	movwf	7
  2693  0248  0801               	movf	1,w
  2694  0249  00AF               	movwf	??_DecodeGPS
  2695  024A  082F               	movf	??_DecodeGPS,w
  2696  024B  00B9               	movwf	DecodeGPS@northSouth
  2697  024C  3001               	movlw	1
  2698  024D  07C2               	addwf	DecodeGPS@x,f
  2699  024E  3000               	movlw	0
  2700  024F  3DC3               	addwfc	DecodeGPS@x+1,f
  2701  0250                     l2457:	
  2702                           
  2703                           ;launcher_functions.c: 475: x = x + 1;
  2704  0250  0842               	movf	DecodeGPS@x,w
  2705  0251  3E01               	addlw	1
  2706  0252  00C2               	movwf	DecodeGPS@x
  2707  0253  3000               	movlw	0
  2708  0254  3D43               	addwfc	DecodeGPS@x+1,w
  2709  0255  00C3               	movwf	DecodeGPS@x+1
  2710                           
  2711                           ;launcher_functions.c: 478: if(gpsMessage[x]!= ',')
  2712  0256  0842               	movf	DecodeGPS@x,w
  2713  0257  3E24               	addlw	_gpsMessage& (0+255)
  2714  0258  0086               	movwf	6
  2715  0259  3001               	movlw	1	; select bank2/3
  2716  025A  0087               	movwf	7
  2717  025B  0801               	movf	1,w
  2718  025C  3A2C               	xorlw	44
  2719  025D  1903               	skipnz
  2720  025E  2B0E               	goto	l2493
  2721                           
  2722                           ;launcher_functions.c: 479: {
  2723                           ;launcher_functions.c: 481: longitude[0] = (gpsMessage[x++] - 48)*100;
  2724  025F  3064               	movlw	100
  2725  0260  00AF               	movwf	??_DecodeGPS
  2726  0261  082F               	movf	??_DecodeGPS,w
  2727  0262  00A0               	movwf	___bmul@multiplicand
  2728  0263  0842               	movf	DecodeGPS@x,w
  2729  0264  3E24               	addlw	_gpsMessage& (0+255)
  2730  0265  0086               	movwf	6
  2731  0266  3001               	movlw	1	; select bank2/3
  2732  0267  0087               	movwf	7
  2733  0268  0801               	movf	1,w
  2734  0269  3ED0               	addlw	208
  2735  026A  318C  2442  3181   	fcall	___bmul
  2736  026D  0020               	movlb	0	; select bank0
  2737  026E  00B0               	movwf	??_DecodeGPS+1
  2738  026F  0830               	movf	??_DecodeGPS+1,w
  2739  0270  00BF               	movwf	DecodeGPS@longitude
  2740  0271  3001               	movlw	1
  2741  0272  07C2               	addwf	DecodeGPS@x,f
  2742  0273  3000               	movlw	0
  2743  0274  3DC3               	addwfc	DecodeGPS@x+1,f
  2744                           
  2745                           ;launcher_functions.c: 482: longitude[0] += (gpsMessage[x++] - 48)*10;
  2746  0275  300A               	movlw	10
  2747  0276  00AF               	movwf	??_DecodeGPS
  2748  0277  082F               	movf	??_DecodeGPS,w
  2749  0278  00A0               	movwf	___bmul@multiplicand
  2750  0279  0842               	movf	DecodeGPS@x,w
  2751  027A  3E24               	addlw	_gpsMessage& (0+255)
  2752  027B  0086               	movwf	6
  2753  027C  3001               	movlw	1	; select bank2/3
  2754  027D  0087               	movwf	7
  2755  027E  0801               	movf	1,w
  2756  027F  3ED0               	addlw	208
  2757  0280  318C  2442  3181   	fcall	___bmul
  2758  0283  0020               	movlb	0	; select bank0
  2759  0284  00B0               	movwf	??_DecodeGPS+1
  2760  0285  0830               	movf	??_DecodeGPS+1,w
  2761  0286  07BF               	addwf	DecodeGPS@longitude,f
  2762  0287  3001               	movlw	1
  2763  0288  07C2               	addwf	DecodeGPS@x,f
  2764  0289  3000               	movlw	0
  2765  028A  3DC3               	addwfc	DecodeGPS@x+1,f
  2766                           
  2767                           ;launcher_functions.c: 483: longitude[0] += (gpsMessage[x++] - 48);
  2768  028B  0842               	movf	DecodeGPS@x,w
  2769  028C  3E24               	addlw	_gpsMessage& (0+255)
  2770  028D  0086               	movwf	6
  2771  028E  3001               	movlw	1	; select bank2/3
  2772  028F  0087               	movwf	7
  2773  0290  0801               	movf	1,w
  2774  0291  3ED0               	addlw	208
  2775  0292  00AF               	movwf	??_DecodeGPS
  2776  0293  082F               	movf	??_DecodeGPS,w
  2777  0294  07BF               	addwf	DecodeGPS@longitude,f
  2778  0295  3001               	movlw	1
  2779  0296  07C2               	addwf	DecodeGPS@x,f
  2780  0297  3000               	movlw	0
  2781  0298  3DC3               	addwfc	DecodeGPS@x+1,f
  2782                           
  2783                           ;launcher_functions.c: 486: longitude[1] = (gpsMessage[x++] - 48)*10;
  2784  0299  300A               	movlw	10
  2785  029A  00AF               	movwf	??_DecodeGPS
  2786  029B  082F               	movf	??_DecodeGPS,w
  2787  029C  00A0               	movwf	___bmul@multiplicand
  2788  029D  0842               	movf	DecodeGPS@x,w
  2789  029E  3E24               	addlw	_gpsMessage& (0+255)
  2790  029F  0086               	movwf	6
  2791  02A0  3001               	movlw	1	; select bank2/3
  2792  02A1  0087               	movwf	7
  2793  02A2  0801               	movf	1,w
  2794  02A3  3ED0               	addlw	208
  2795  02A4  318C  2442  3181   	fcall	___bmul
  2796  02A7  0020               	movlb	0	; select bank0
  2797  02A8  00B0               	movwf	??_DecodeGPS+1
  2798  02A9  0830               	movf	??_DecodeGPS+1,w
  2799  02AA  00C0               	movwf	DecodeGPS@longitude+1
  2800  02AB  3001               	movlw	1
  2801  02AC  07C2               	addwf	DecodeGPS@x,f
  2802  02AD  3000               	movlw	0
  2803  02AE  3DC3               	addwfc	DecodeGPS@x+1,f
  2804                           
  2805                           ;launcher_functions.c: 487: longitude[1] += (gpsMessage[x++] - 48);
  2806  02AF  0842               	movf	DecodeGPS@x,w
  2807  02B0  3E24               	addlw	_gpsMessage& (0+255)
  2808  02B1  0086               	movwf	6
  2809  02B2  3001               	movlw	1	; select bank2/3
  2810  02B3  0087               	movwf	7
  2811  02B4  0801               	movf	1,w
  2812  02B5  3ED0               	addlw	208
  2813  02B6  00AF               	movwf	??_DecodeGPS
  2814  02B7  082F               	movf	??_DecodeGPS,w
  2815  02B8  07C0               	addwf	DecodeGPS@longitude+1,f
  2816  02B9  3001               	movlw	1
  2817  02BA  07C2               	addwf	DecodeGPS@x,f
  2818  02BB  3000               	movlw	0
  2819  02BC  3DC3               	addwfc	DecodeGPS@x+1,f
  2820                           
  2821                           ;launcher_functions.c: 490: x = x + 1;
  2822  02BD  0842               	movf	DecodeGPS@x,w
  2823  02BE  3E01               	addlw	1
  2824  02BF  00C2               	movwf	DecodeGPS@x
  2825  02C0  3000               	movlw	0
  2826  02C1  3D43               	addwfc	DecodeGPS@x+1,w
  2827  02C2  00C3               	movwf	DecodeGPS@x+1
  2828                           
  2829                           ;launcher_functions.c: 493: longitude[2] = (gpsMessage[x++] - 48)*10;
  2830  02C3  300A               	movlw	10
  2831  02C4  00AF               	movwf	??_DecodeGPS
  2832  02C5  082F               	movf	??_DecodeGPS,w
  2833  02C6  00A0               	movwf	___bmul@multiplicand
  2834  02C7  0842               	movf	DecodeGPS@x,w
  2835  02C8  3E24               	addlw	_gpsMessage& (0+255)
  2836  02C9  0086               	movwf	6
  2837  02CA  3001               	movlw	1	; select bank2/3
  2838  02CB  0087               	movwf	7
  2839  02CC  0801               	movf	1,w
  2840  02CD  3ED0               	addlw	208
  2841  02CE  318C  2442  3181   	fcall	___bmul
  2842  02D1  0020               	movlb	0	; select bank0
  2843  02D2  00B0               	movwf	??_DecodeGPS+1
  2844  02D3  0830               	movf	??_DecodeGPS+1,w
  2845  02D4  00C1               	movwf	DecodeGPS@longitude+2
  2846  02D5  3001               	movlw	1
  2847  02D6  07C2               	addwf	DecodeGPS@x,f
  2848  02D7  3000               	movlw	0
  2849  02D8  3DC3               	addwfc	DecodeGPS@x+1,f
  2850                           
  2851                           ;launcher_functions.c: 494: longitude[2] += (gpsMessage[x++] - 48);
  2852  02D9  0842               	movf	DecodeGPS@x,w
  2853  02DA  3E24               	addlw	_gpsMessage& (0+255)
  2854  02DB  0086               	movwf	6
  2855  02DC  3001               	movlw	1	; select bank2/3
  2856  02DD  0087               	movwf	7
  2857  02DE  0801               	movf	1,w
  2858  02DF  3ED0               	addlw	208
  2859  02E0  00AF               	movwf	??_DecodeGPS
  2860  02E1  082F               	movf	??_DecodeGPS,w
  2861  02E2  07C1               	addwf	DecodeGPS@longitude+2,f
  2862  02E3  3001               	movlw	1
  2863  02E4  07C2               	addwf	DecodeGPS@x,f
  2864  02E5  3000               	movlw	0
  2865  02E6  3DC3               	addwfc	DecodeGPS@x+1,f
  2866                           
  2867                           ;launcher_functions.c: 495: longitude[2] = (longitude[2]*60)/100;
  2868  02E7  3064               	movlw	100
  2869  02E8  00A6               	movwf	___awdiv@divisor
  2870  02E9  3000               	movlw	0
  2871  02EA  00A7               	movwf	___awdiv@divisor+1
  2872  02EB  0841               	movf	DecodeGPS@longitude+2,w
  2873  02EC  00AF               	movwf	??_DecodeGPS
  2874  02ED  01B0               	clrf	??_DecodeGPS+1
  2875  02EE  082F               	movf	??_DecodeGPS,w
  2876  02EF  00A0               	movwf	___wmul@multiplier
  2877  02F0  0830               	movf	??_DecodeGPS+1,w
  2878  02F1  00A1               	movwf	___wmul@multiplier+1
  2879  02F2  303C               	movlw	60
  2880  02F3  00A2               	movwf	___wmul@multiplicand
  2881  02F4  3000               	movlw	0
  2882  02F5  00A3               	movwf	___wmul@multiplicand+1
  2883  02F6  318C  24DF  3181   	fcall	___wmul
  2884  02F9  0020               	movlb	0	; select bank0
  2885  02FA  0821               	movf	?___wmul+1,w
  2886  02FB  01A9               	clrf	___awdiv@dividend+1
  2887  02FC  07A9               	addwf	___awdiv@dividend+1,f
  2888  02FD  0820               	movf	?___wmul,w
  2889  02FE  01A8               	clrf	___awdiv@dividend
  2890  02FF  07A8               	addwf	___awdiv@dividend,f
  2891  0300  318D  25FF  3181   	fcall	___awdiv
  2892  0303  0020               	movlb	0	; select bank0
  2893  0304  0826               	movf	?___awdiv,w
  2894  0305  00B1               	movwf	??_DecodeGPS+2
  2895  0306  0831               	movf	??_DecodeGPS+2,w
  2896  0307  00C1               	movwf	DecodeGPS@longitude+2
  2897                           
  2898                           ;launcher_functions.c: 498: x = x + 2;
  2899  0308  0842               	movf	DecodeGPS@x,w
  2900  0309  3E02               	addlw	2
  2901  030A  00C2               	movwf	DecodeGPS@x
  2902  030B  3000               	movlw	0
  2903  030C  3D43               	addwfc	DecodeGPS@x+1,w
  2904  030D  00C3               	movwf	DecodeGPS@x+1
  2905  030E                     l2493:	
  2906                           
  2907                           ;launcher_functions.c: 499: }
  2908                           ;launcher_functions.c: 502: x = x + 1;
  2909  030E  0842               	movf	DecodeGPS@x,w
  2910  030F  3E01               	addlw	1
  2911  0310  00C2               	movwf	DecodeGPS@x
  2912  0311  3000               	movlw	0
  2913  0312  3D43               	addwfc	DecodeGPS@x+1,w
  2914  0313  00C3               	movwf	DecodeGPS@x+1
  2915                           
  2916                           ;launcher_functions.c: 505: if(gpsMessage[x] != ',')
  2917  0314  0842               	movf	DecodeGPS@x,w
  2918  0315  3E24               	addlw	_gpsMessage& (0+255)
  2919  0316  0086               	movwf	6
  2920  0317  3001               	movlw	1	; select bank2/3
  2921  0318  0087               	movwf	7
  2922  0319  0801               	movf	1,w
  2923  031A  3A2C               	xorlw	44
  2924  031B  1903               	skipnz
  2925  031C  2B2A               	goto	l2501
  2926                           
  2927                           ;launcher_functions.c: 506: eastWest = gpsMessage[x++];
  2928  031D  0842               	movf	DecodeGPS@x,w
  2929  031E  3E24               	addlw	_gpsMessage& (0+255)
  2930  031F  0086               	movwf	6
  2931  0320  3001               	movlw	1	; select bank2/3
  2932  0321  0087               	movwf	7
  2933  0322  0801               	movf	1,w
  2934  0323  00AF               	movwf	??_DecodeGPS
  2935  0324  082F               	movf	??_DecodeGPS,w
  2936  0325  00BA               	movwf	DecodeGPS@eastWest
  2937  0326  3001               	movlw	1
  2938  0327  07C2               	addwf	DecodeGPS@x,f
  2939  0328  3000               	movlw	0
  2940  0329  3DC3               	addwfc	DecodeGPS@x+1,f
  2941  032A                     l2501:	
  2942                           
  2943                           ;launcher_functions.c: 509: x = x + 1;
  2944  032A  0842               	movf	DecodeGPS@x,w
  2945  032B  3E01               	addlw	1
  2946  032C  00C2               	movwf	DecodeGPS@x
  2947  032D  3000               	movlw	0
  2948  032E  3D43               	addwfc	DecodeGPS@x+1,w
  2949  032F  00C3               	movwf	DecodeGPS@x+1
  2950  0330                     l2503:	
  2951                           ;launcher_functions.c: 512: while(gpsMessage[x++] != ','){}
  2952                           
  2953  0330  0843               	movf	DecodeGPS@x+1,w
  2954  0331  00B0               	movwf	??_DecodeGPS+1
  2955  0332  0842               	movf	DecodeGPS@x,w
  2956  0333  00AF               	movwf	??_DecodeGPS
  2957  0334  0AC2               	incf	DecodeGPS@x,f
  2958  0335  1903               	skipnz
  2959  0336  0AC3               	incf	DecodeGPS@x+1,f
  2960  0337  082F               	movf	??_DecodeGPS,w
  2961  0338  3E24               	addlw	_gpsMessage& (0+255)
  2962  0339  0086               	movwf	6
  2963  033A  3001               	movlw	1	; select bank2/3
  2964  033B  0087               	movwf	7
  2965  033C  0801               	movf	1,w
  2966  033D  3A2C               	xorlw	44
  2967  033E  1D03               	skipz
  2968  033F  2B30               	goto	l2503
  2969                           
  2970                           ;launcher_functions.c: 515: status = gpsMessage[x];
  2971  0340  0842               	movf	DecodeGPS@x,w
  2972  0341  3E24               	addlw	_gpsMessage& (0+255)
  2973  0342  0086               	movwf	6
  2974  0343  3001               	movlw	1	; select bank2/3
  2975  0344  0087               	movwf	7
  2976  0345  0801               	movf	1,w
  2977  0346  00AF               	movwf	??_DecodeGPS
  2978  0347  082F               	movf	??_DecodeGPS,w
  2979  0348  00BB               	movwf	DecodeGPS@status
  2980                           
  2981                           ;launcher_functions.c: 517: if(status == 'A')
  2982  0349  083B               	movf	DecodeGPS@status,w
  2983  034A  3A41               	xorlw	65
  2984  034B  1D03               	skipz
  2985  034C  2B4F               	goto	l448
  2986                           
  2987                           ;launcher_functions.c: 518: gpsInvalidFlag = 0;
  2988  034D  01EB               	clrf	_gpsInvalidFlag
  2989  034E  2B51               	goto	l2511
  2990  034F                     l448:	
  2991                           
  2992                           ;launcher_functions.c: 519: else
  2993                           ;launcher_functions.c: 520: gpsInvalidFlag = 1;
  2994  034F  01EB               	clrf	_gpsInvalidFlag
  2995  0350  0AEB               	incf	_gpsInvalidFlag,f
  2996  0351                     l2511:	
  2997                           
  2998                           ;launcher_functions.c: 524: if(!gpsInvalidFlag)
  2999  0351  08EB               	movf	_gpsInvalidFlag,f
  3000  0352  1D03               	skipz
  3001  0353  0008               	return
  3002                           
  3003                           ;launcher_functions.c: 525: {
  3004                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  3005  0354  01C2               	clrf	DecodeGPS@x
  3006  0355  01C3               	clrf	DecodeGPS@x+1
  3007  0356  0843               	movf	DecodeGPS@x+1,w
  3008  0357  3A80               	xorlw	128
  3009  0358  00AF               	movwf	??_DecodeGPS
  3010  0359  3080               	movlw	128
  3011  035A  022F               	subwf	??_DecodeGPS,w
  3012  035B  1D03               	skipz
  3013  035C  2B5F               	goto	u2125
  3014  035D  3003               	movlw	3
  3015  035E  0242               	subwf	DecodeGPS@x,w
  3016  035F                     u2125:	
  3017  035F  1803               	btfsc	3,0
  3018  0360  2B89               	goto	l2525
  3019  0361                     l2519:	
  3020                           
  3021                           ;launcher_functions.c: 528: {
  3022                           ;launcher_functions.c: 529: validLatitude[x] = latitude[x];
  3023  0361  0020               	movlb	0	; select bank0
  3024  0362  0842               	movf	DecodeGPS@x,w
  3025  0363  3E3C               	addlw	DecodeGPS@latitude& (0+255)
  3026  0364  0086               	movwf	6
  3027  0365  0187               	clrf	7
  3028  0366  0801               	movf	1,w
  3029  0367  00AF               	movwf	??_DecodeGPS
  3030  0368  0842               	movf	DecodeGPS@x,w
  3031  0369  3EE2               	addlw	_validLatitude& (0+255)
  3032  036A  0086               	movwf	6
  3033  036B  0187               	clrf	7
  3034  036C  082F               	movf	??_DecodeGPS,w
  3035  036D  0081               	movwf	1
  3036                           
  3037                           ;launcher_functions.c: 530: validLongitude[x] = longitude[x];
  3038  036E  0842               	movf	DecodeGPS@x,w
  3039  036F  3E3F               	addlw	DecodeGPS@longitude& (0+255)
  3040  0370  0086               	movwf	6
  3041  0371  0187               	clrf	7
  3042  0372  0801               	movf	1,w
  3043  0373  00AF               	movwf	??_DecodeGPS
  3044  0374  0842               	movf	DecodeGPS@x,w
  3045  0375  3EE5               	addlw	_validLongitude& (0+255)
  3046  0376  0086               	movwf	6
  3047  0377  0187               	clrf	7
  3048  0378  082F               	movf	??_DecodeGPS,w
  3049  0379  0081               	movwf	1
  3050  037A  3001               	movlw	1
  3051  037B  07C2               	addwf	DecodeGPS@x,f
  3052  037C  3000               	movlw	0
  3053  037D  3DC3               	addwfc	DecodeGPS@x+1,f
  3054  037E  0843               	movf	DecodeGPS@x+1,w
  3055  037F  3A80               	xorlw	128
  3056  0380  00AF               	movwf	??_DecodeGPS
  3057  0381  3080               	movlw	128
  3058  0382  022F               	subwf	??_DecodeGPS,w
  3059  0383  1D03               	skipz
  3060  0384  2B87               	goto	u2135
  3061  0385  3003               	movlw	3
  3062  0386  0242               	subwf	DecodeGPS@x,w
  3063  0387                     u2135:	
  3064  0387  1C03               	skipc
  3065  0388  2B61               	goto	l2519
  3066  0389                     l2525:	
  3067                           
  3068                           ;launcher_functions.c: 531: }
  3069                           ;launcher_functions.c: 532: validNorthSouth = northSouth;
  3070  0389  0020               	movlb	0	; select bank0
  3071  038A  0839               	movf	DecodeGPS@northSouth,w
  3072  038B  00AF               	movwf	??_DecodeGPS
  3073  038C  082F               	movf	??_DecodeGPS,w
  3074  038D  00ED               	movwf	_validNorthSouth
  3075                           
  3076                           ;launcher_functions.c: 533: validEastWest = eastWest;
  3077  038E  083A               	movf	DecodeGPS@eastWest,w
  3078  038F  00AF               	movwf	??_DecodeGPS
  3079  0390  082F               	movf	??_DecodeGPS,w
  3080  0391  00EC               	movwf	_validEastWest
  3081                           
  3082                           ;launcher_functions.c: 535: hasValidGPSFlag = 1;
  3083  0392  01E7               	clrf	_hasValidGPSFlag
  3084  0393  0AE7               	incf	_hasValidGPSFlag,f
  3085  0394  0008               	return
  3086  0395                     __end_of_DecodeGPS:	
  3087                           
  3088                           	psect	text3
  3089  0CDF                     __ptext3:	
  3090 ;; *************** function ___wmul *****************
  3091 ;; Defined at:
  3092 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3095 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  product         2    4[BANK0 ] unsigned int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2    0[BANK0 ] unsigned int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3107 ;;      Params:         0       4       0       0       0       0       0
  3108 ;;      Locals:         0       2       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0
  3110 ;;      Totals:         0       6       0       0       0       0       0
  3111 ;;Total ram usage:        6 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_DecodeGPS
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function ___wmul
  3123  0CDF                     ___wmul:	
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3127  0CDF  0020               	movlb	0	; select bank0
  3128  0CE0  01A4               	clrf	___wmul@product
  3129  0CE1  01A5               	clrf	___wmul@product+1
  3130  0CE2                     l2165:	
  3131  0CE2  1C20               	btfss	___wmul@multiplier,0
  3132  0CE3  2CE8               	goto	l632
  3133  0CE4  0822               	movf	___wmul@multiplicand,w
  3134  0CE5  07A4               	addwf	___wmul@product,f
  3135  0CE6  0823               	movf	___wmul@multiplicand+1,w
  3136  0CE7  3DA5               	addwfc	___wmul@product+1,f
  3137  0CE8                     l632:	
  3138  0CE8  3001               	movlw	1
  3139  0CE9                     u1575:	
  3140  0CE9  35A2               	lslf	___wmul@multiplicand,f
  3141  0CEA  0DA3               	rlf	___wmul@multiplicand+1,f
  3142  0CEB  0B89               	decfsz	9,f
  3143  0CEC  2CE9               	goto	u1575
  3144  0CED  3001               	movlw	1
  3145  0CEE                     u1585:	
  3146  0CEE  36A1               	lsrf	___wmul@multiplier+1,f
  3147  0CEF  0CA0               	rrf	___wmul@multiplier,f
  3148  0CF0  0B89               	decfsz	9,f
  3149  0CF1  2CEE               	goto	u1585
  3150  0CF2  0821               	movf	___wmul@multiplier+1,w
  3151  0CF3  0420               	iorwf	___wmul@multiplier,w
  3152  0CF4  1D03               	skipz
  3153  0CF5  2CE2               	goto	l2165
  3154  0CF6  0825               	movf	___wmul@product+1,w
  3155  0CF7  01A1               	clrf	?___wmul+1
  3156  0CF8  07A1               	addwf	?___wmul+1,f
  3157  0CF9  0824               	movf	___wmul@product,w
  3158  0CFA  01A0               	clrf	?___wmul
  3159  0CFB  07A0               	addwf	?___wmul,f
  3160  0CFC  0008               	return
  3161  0CFD                     __end_of___wmul:	
  3162                           
  3163                           	psect	text4
  3164  0C42                     __ptext4:	
  3165 ;; *************** function ___bmul *****************
  3166 ;; Defined at:
  3167 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  multiplier      1    wreg     unsigned char 
  3170 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3173 ;;  product         1    2[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      unsigned char 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3183 ;;      Params:         0       1       0       0       0       0       0
  3184 ;;      Locals:         0       2       0       0       0       0       0
  3185 ;;      Temps:          0       1       0       0       0       0       0
  3186 ;;      Totals:         0       4       0       0       0       0       0
  3187 ;;Total ram usage:        4 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_DecodeGPS
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function ___bmul
  3199  0C42                     ___bmul:	
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3203                           ;___bmul@multiplier stored from wreg
  3204  0C42  0020               	movlb	0	; select bank0
  3205  0C43  00A3               	movwf	___bmul@multiplier
  3206  0C44  01A2               	clrf	___bmul@product
  3207  0C45                     l2177:	
  3208  0C45  1C23               	btfss	___bmul@multiplier,0
  3209  0C46  2C4B               	goto	l2181
  3210  0C47  0820               	movf	___bmul@multiplicand,w
  3211  0C48  00A1               	movwf	??___bmul
  3212  0C49  0821               	movf	??___bmul,w
  3213  0C4A  07A2               	addwf	___bmul@product,f
  3214  0C4B                     l2181:	
  3215  0C4B  1003               	clrc
  3216  0C4C  0DA0               	rlf	___bmul@multiplicand,f
  3217  0C4D  1003               	clrc
  3218  0C4E  0CA3               	rrf	___bmul@multiplier,f
  3219  0C4F  08A3               	movf	___bmul@multiplier,f
  3220  0C50  1D03               	skipz
  3221  0C51  2C45               	goto	l2177
  3222  0C52  0822               	movf	___bmul@product,w
  3223  0C53  0008               	return
  3224  0C54                     __end_of___bmul:	
  3225                           
  3226                           	psect	text5
  3227  0DFF                     __ptext5:	
  3228 ;; *************** function ___awdiv *****************
  3229 ;; Defined at:
  3230 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  divisor         2    6[BANK0 ] int 
  3233 ;;  dividend        2    8[BANK0 ] int 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  quotient        2   13[BANK0 ] int 
  3236 ;;  sign            1   12[BANK0 ] unsigned char 
  3237 ;;  counter         1   11[BANK0 ] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  2    6[BANK0 ] int 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3247 ;;      Params:         0       4       0       0       0       0       0
  3248 ;;      Locals:         0       4       0       0       0       0       0
  3249 ;;      Temps:          0       1       0       0       0       0       0
  3250 ;;      Totals:         0       9       0       0       0       0       0
  3251 ;;Total ram usage:        9 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    2
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_DecodeGPS
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function ___awdiv
  3263  0DFF                     ___awdiv:	
  3264                           
  3265                           ;incstack = 0
  3266                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3267  0DFF  0020               	movlb	0	; select bank0
  3268  0E00  01AC               	clrf	___awdiv@sign
  3269  0E01  1FA7               	btfss	___awdiv@divisor+1,7
  3270  0E02  2E0A               	goto	l2199
  3271  0E03  09A6               	comf	___awdiv@divisor,f
  3272  0E04  09A7               	comf	___awdiv@divisor+1,f
  3273  0E05  0AA6               	incf	___awdiv@divisor,f
  3274  0E06  1903               	skipnz
  3275  0E07  0AA7               	incf	___awdiv@divisor+1,f
  3276  0E08  01AC               	clrf	___awdiv@sign
  3277  0E09  0AAC               	incf	___awdiv@sign,f
  3278  0E0A                     l2199:	
  3279  0E0A  1FA9               	btfss	___awdiv@dividend+1,7
  3280  0E0B  2E15               	goto	l2205
  3281  0E0C  09A8               	comf	___awdiv@dividend,f
  3282  0E0D  09A9               	comf	___awdiv@dividend+1,f
  3283  0E0E  0AA8               	incf	___awdiv@dividend,f
  3284  0E0F  1903               	skipnz
  3285  0E10  0AA9               	incf	___awdiv@dividend+1,f
  3286  0E11  3001               	movlw	1
  3287  0E12  00AA               	movwf	??___awdiv
  3288  0E13  082A               	movf	??___awdiv,w
  3289  0E14  06AC               	xorwf	___awdiv@sign,f
  3290  0E15                     l2205:	
  3291  0E15  01AD               	clrf	___awdiv@quotient
  3292  0E16  01AE               	clrf	___awdiv@quotient+1
  3293  0E17  0827               	movf	___awdiv@divisor+1,w
  3294  0E18  0426               	iorwf	___awdiv@divisor,w
  3295  0E19  1903               	skipnz
  3296  0E1A  2E44               	goto	l2227
  3297  0E1B  01AB               	clrf	___awdiv@counter
  3298  0E1C  0AAB               	incf	___awdiv@counter,f
  3299  0E1D                     l2215:	
  3300  0E1D  1BA7               	btfsc	___awdiv@divisor+1,7
  3301  0E1E  2E29               	goto	l2217
  3302  0E1F  3001               	movlw	1
  3303  0E20                     u1655:	
  3304  0E20  35A6               	lslf	___awdiv@divisor,f
  3305  0E21  0DA7               	rlf	___awdiv@divisor+1,f
  3306  0E22  0B89               	decfsz	9,f
  3307  0E23  2E20               	goto	u1655
  3308  0E24  3001               	movlw	1
  3309  0E25  00AA               	movwf	??___awdiv
  3310  0E26  082A               	movf	??___awdiv,w
  3311  0E27  07AB               	addwf	___awdiv@counter,f
  3312  0E28  2E1D               	goto	l2215
  3313  0E29                     l2217:	
  3314  0E29  3001               	movlw	1
  3315  0E2A                     u1675:	
  3316  0E2A  35AD               	lslf	___awdiv@quotient,f
  3317  0E2B  0DAE               	rlf	___awdiv@quotient+1,f
  3318  0E2C  0B89               	decfsz	9,f
  3319  0E2D  2E2A               	goto	u1675
  3320  0E2E  0827               	movf	___awdiv@divisor+1,w
  3321  0E2F  0229               	subwf	___awdiv@dividend+1,w
  3322  0E30  1D03               	skipz
  3323  0E31  2E34               	goto	u1685
  3324  0E32  0826               	movf	___awdiv@divisor,w
  3325  0E33  0228               	subwf	___awdiv@dividend,w
  3326  0E34                     u1685:	
  3327  0E34  1C03               	skipc
  3328  0E35  2E3B               	goto	l2223
  3329  0E36  0826               	movf	___awdiv@divisor,w
  3330  0E37  02A8               	subwf	___awdiv@dividend,f
  3331  0E38  0827               	movf	___awdiv@divisor+1,w
  3332  0E39  3BA9               	subwfb	___awdiv@dividend+1,f
  3333  0E3A  142D               	bsf	___awdiv@quotient,0
  3334  0E3B                     l2223:	
  3335  0E3B  3001               	movlw	1
  3336  0E3C                     u1695:	
  3337  0E3C  36A7               	lsrf	___awdiv@divisor+1,f
  3338  0E3D  0CA6               	rrf	___awdiv@divisor,f
  3339  0E3E  0B89               	decfsz	9,f
  3340  0E3F  2E3C               	goto	u1695
  3341  0E40  3001               	movlw	1
  3342  0E41  02AB               	subwf	___awdiv@counter,f
  3343  0E42  1D03               	btfss	3,2
  3344  0E43  2E29               	goto	l2217
  3345  0E44                     l2227:	
  3346  0E44  082C               	movf	___awdiv@sign,w
  3347  0E45  1903               	btfsc	3,2
  3348  0E46  2E4C               	goto	l2231
  3349  0E47  09AD               	comf	___awdiv@quotient,f
  3350  0E48  09AE               	comf	___awdiv@quotient+1,f
  3351  0E49  0AAD               	incf	___awdiv@quotient,f
  3352  0E4A  1903               	skipnz
  3353  0E4B  0AAE               	incf	___awdiv@quotient+1,f
  3354  0E4C                     l2231:	
  3355  0E4C  082E               	movf	___awdiv@quotient+1,w
  3356  0E4D  01A7               	clrf	?___awdiv+1
  3357  0E4E  07A7               	addwf	?___awdiv+1,f
  3358  0E4F  082D               	movf	___awdiv@quotient,w
  3359  0E50  01A6               	clrf	?___awdiv
  3360  0E51  07A6               	addwf	?___awdiv,f
  3361  0E52  0008               	return
  3362  0E53                     __end_of___awdiv:	
  3363                           
  3364                           	psect	text6
  3365  0D2A                     __ptext6:	
  3366 ;; *************** function _ToggleSleepGPS *****************
  3367 ;; Defined at:
  3368 ;;		line 335 in file "launcher_functions.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;		None               void
  3375 ;; Registers used:
  3376 ;;		wreg
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3382 ;;      Params:         0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0
  3384 ;;      Temps:          0       3       0       0       0       0       0
  3385 ;;      Totals:         0       3       0       0       0       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    2
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function _ToggleSleepGPS
  3398  0D2A                     _ToggleSleepGPS:	
  3399                           
  3400                           ;launcher_functions.c: 337: PORTAbits.RA6 = 0;
  3401                           
  3402                           ;incstack = 0
  3403                           ; Regs used in _ToggleSleepGPS: [wreg]
  3404  0D2A  0020               	movlb	0	; select bank0
  3405  0D2B  130C               	bcf	12,6	;volatile
  3406                           
  3407                           ;launcher_functions.c: 338: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3408  0D2C  3015               	movlw	21
  3409  0D2D  00A2               	movwf	??_ToggleSleepGPS+2
  3410  0D2E  304B               	movlw	75
  3411  0D2F  00A1               	movwf	??_ToggleSleepGPS+1
  3412  0D30  30D1               	movlw	209
  3413  0D31  00A0               	movwf	??_ToggleSleepGPS
  3414  0D32                     u2957:	
  3415  0D32  0BA0               	decfsz	??_ToggleSleepGPS,f
  3416  0D33  2D32               	goto	u2957
  3417  0D34  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3418  0D35  2D32               	goto	u2957
  3419  0D36  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3420  0D37  2D32               	goto	u2957
  3421  0D38  0000               	nop
  3422                           
  3423                           ;launcher_functions.c: 339: PORTAbits.RA6 = 1;
  3424  0D39  0020               	movlb	0	; select bank0
  3425  0D3A  170C               	bsf	12,6	;volatile
  3426                           
  3427                           ;launcher_functions.c: 340: _delay((unsigned long)((100)*(16000000/4000.0)));
  3428  0D3B  3003               	movlw	3
  3429  0D3C  00A2               	movwf	??_ToggleSleepGPS+2
  3430  0D3D  3008               	movlw	8
  3431  0D3E  00A1               	movwf	??_ToggleSleepGPS+1
  3432  0D3F  3078               	movlw	120
  3433  0D40  00A0               	movwf	??_ToggleSleepGPS
  3434  0D41                     u2967:	
  3435  0D41  0BA0               	decfsz	??_ToggleSleepGPS,f
  3436  0D42  2D41               	goto	u2967
  3437  0D43  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3438  0D44  2D41               	goto	u2967
  3439  0D45  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3440  0D46  2D41               	goto	u2967
  3441                           
  3442                           ;launcher_functions.c: 341: PORTAbits.RA6 = 0;
  3443  0D47  0020               	movlb	0	; select bank0
  3444  0D48  130C               	bcf	12,6	;volatile
  3445                           
  3446                           ;launcher_functions.c: 342: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3447  0D49  3015               	movlw	21
  3448  0D4A  00A2               	movwf	??_ToggleSleepGPS+2
  3449  0D4B  304B               	movlw	75
  3450  0D4C  00A1               	movwf	??_ToggleSleepGPS+1
  3451  0D4D  30D1               	movlw	209
  3452  0D4E  00A0               	movwf	??_ToggleSleepGPS
  3453  0D4F                     u2977:	
  3454  0D4F  0BA0               	decfsz	??_ToggleSleepGPS,f
  3455  0D50  2D4F               	goto	u2977
  3456  0D51  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3457  0D52  2D4F               	goto	u2977
  3458  0D53  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3459  0D54  2D4F               	goto	u2977
  3460  0D55  0000               	nop
  3461  0D56  0008               	return
  3462  0D57                     __end_of_ToggleSleepGPS:	
  3463                           
  3464                           	psect	text7
  3465  076D                     __ptext7:	
  3466 ;; *************** function _SetupGPS *****************
  3467 ;; Defined at:
  3468 ;;		line 353 in file "launcher_functions.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  message        50    0[BANK1 ] unsigned char [50]
  3473 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  3474 ;;  MID             4   56[BANK1 ] unsigned char [4]
  3475 ;;  x               2   60[BANK1 ] int 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;		None               void
  3478 ;; Registers used:
  3479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3485 ;;      Params:         0       0       0       0       0       0       0
  3486 ;;      Locals:         0       0      62       0       0       0       0
  3487 ;;      Temps:          0       3       0       0       0       0       0
  3488 ;;      Totals:         0       3      62       0       0       0       0
  3489 ;;Total ram usage:       65 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    4
  3492 ;; This function calls:
  3493 ;;		_sprintf
  3494 ;;		_uart_write_message
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _SetupGPS
  3502  076D                     _SetupGPS:	
  3503                           
  3504                           ;launcher_functions.c: 355: int x;
  3505                           ;launcher_functions.c: 356: unsigned char startSequence[6] = "$PSRF";
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3509  076D  306A               	movlw	low SetupGPS@F4925
  3510  076E  0086               	movwf	6
  3511  076F  3001               	movlw	high SetupGPS@F4925
  3512  0770  0087               	movwf	7
  3513  0771  30D2               	movlw	low SetupGPS@startSequence
  3514  0772  0084               	movwf	4
  3515  0773  3000               	movlw	high SetupGPS@startSequence
  3516  0774  0085               	movwf	5
  3517  0775  3006               	movlw	6
  3518  0776  0020               	movlb	0	; select bank0
  3519  0777  00C1               	movwf	??_SetupGPS
  3520  0778                     u2200:	
  3521  0778  0016               	moviw fsr1++
  3522  0779  001A               	movwi fsr0++
  3523  077A  0BC1               	decfsz	??_SetupGPS,f
  3524  077B  2F78               	goto	u2200
  3525                           
  3526                           ;launcher_functions.c: 357: unsigned char MID[4] = "103";
  3527  077C  0021               	movlb	1	; select bank1
  3528  077D  0861               	movf	(SetupGPS@F4927+3)^(0+128),w
  3529  077E  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  3530  077F  0860               	movf	(SetupGPS@F4927+2)^(0+128),w
  3531  0780  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  3532  0781  085F               	movf	(SetupGPS@F4927+1)^(0+128),w
  3533  0782  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  3534  0783  085E               	movf	SetupGPS@F4927^(0+128),w
  3535  0784  00D8               	movwf	SetupGPS@MID^(0+128)
  3536                           
  3537                           ;launcher_functions.c: 358: unsigned char message[50];
  3538                           ;launcher_functions.c: 361: for(x = 0; x < 6; x++)
  3539  0785  01DC               	clrf	SetupGPS@x^(0+128)
  3540  0786  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  3541  0787  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3542  0788  3A80               	xorlw	128
  3543  0789  0020               	movlb	0	; select bank0
  3544  078A  00C1               	movwf	??_SetupGPS
  3545  078B  3080               	movlw	128
  3546  078C  0241               	subwf	??_SetupGPS,w
  3547  078D  1D03               	skipz
  3548  078E  2F92               	goto	u2215
  3549  078F  3006               	movlw	6
  3550  0790  0021               	movlb	1	; select bank1
  3551  0791  025C               	subwf	SetupGPS@x^(0+128),w
  3552  0792                     u2215:	
  3553  0792  1803               	btfsc	3,0
  3554  0793  2FD8               	goto	l2729
  3555  0794                     l2719:	
  3556                           
  3557                           ;launcher_functions.c: 362: {
  3558                           ;launcher_functions.c: 363: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3559  0794  3015               	movlw	21
  3560  0795  0020               	movlb	0	; select bank0
  3561  0796  00C3               	movwf	??_SetupGPS+2
  3562  0797  304B               	movlw	75
  3563  0798  00C2               	movwf	??_SetupGPS+1
  3564  0799  30D1               	movlw	209
  3565  079A  00C1               	movwf	??_SetupGPS
  3566  079B                     u2987:	
  3567  079B  0BC1               	decfsz	??_SetupGPS,f
  3568  079C  2F9B               	goto	u2987
  3569  079D  0BC2               	decfsz	??_SetupGPS+1,f
  3570  079E  2F9B               	goto	u2987
  3571  079F  0BC3               	decfsz	??_SetupGPS+2,f
  3572  07A0  2F9B               	goto	u2987
  3573  07A1  0000               	nop
  3574                           
  3575                           ;launcher_functions.c: 364: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3576  07A2  300A               	movlw	low (STR_1| (0+32768))
  3577  07A3  0020               	movlb	0	; select bank0
  3578  07A4  00AE               	movwf	sprintf@f
  3579  07A5  3088               	movlw	high (STR_1| (0+32768))
  3580  07A6  00AF               	movwf	sprintf@f+1
  3581  07A7  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3582  07A8  00C1               	movwf	??_SetupGPS
  3583  07A9  0841               	movf	??_SetupGPS,w
  3584  07AA  00B0               	movwf	?_sprintf+2
  3585  07AB  30D8               	movlw	SetupGPS@MID& (0+255)
  3586  07AC  00C2               	movwf	??_SetupGPS+1
  3587  07AD  0842               	movf	??_SetupGPS+1,w
  3588  07AE  00B1               	movwf	?_sprintf+3
  3589  07AF  0021               	movlb	1	; select bank1
  3590  07B0  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3591  07B1  0020               	movlb	0	; select bank0
  3592  07B2  01B3               	clrf	?_sprintf+5
  3593  07B3  07B3               	addwf	?_sprintf+5,f
  3594  07B4  0021               	movlb	1	; select bank1
  3595  07B5  085C               	movf	SetupGPS@x^(0+128),w
  3596  07B6  0020               	movlb	0	; select bank0
  3597  07B7  01B2               	clrf	?_sprintf+4
  3598  07B8  07B2               	addwf	?_sprintf+4,f
  3599  07B9  30A0               	movlw	SetupGPS@message& (0+255)
  3600  07BA  3186  2667  3187   	fcall	_sprintf
  3601                           
  3602                           ;launcher_functions.c: 365: uart_write_message(message, 22);
  3603  07BD  3016               	movlw	22
  3604  07BE  0020               	movlb	0	; select bank0
  3605  07BF  00A8               	movwf	uart_write_message@size
  3606  07C0  3000               	movlw	0
  3607  07C1  00A9               	movwf	uart_write_message@size+1
  3608  07C2  30A0               	movlw	SetupGPS@message& (0+255)
  3609  07C3  318F  278A  3187   	fcall	_uart_write_message
  3610  07C6  3001               	movlw	1
  3611  07C7  0021               	movlb	1	; select bank1
  3612  07C8  07DC               	addwf	SetupGPS@x^(0+128),f
  3613  07C9  3000               	movlw	0
  3614  07CA  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  3615  07CB  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3616  07CC  3A80               	xorlw	128
  3617  07CD  0020               	movlb	0	; select bank0
  3618  07CE  00C1               	movwf	??_SetupGPS
  3619  07CF  3080               	movlw	128
  3620  07D0  0241               	subwf	??_SetupGPS,w
  3621  07D1  1D03               	skipz
  3622  07D2  2FD6               	goto	u2225
  3623  07D3  3006               	movlw	6
  3624  07D4  0021               	movlb	1	; select bank1
  3625  07D5  025C               	subwf	SetupGPS@x^(0+128),w
  3626  07D6                     u2225:	
  3627  07D6  1C03               	skipc
  3628  07D7  2F94               	goto	l2719
  3629  07D8                     l2729:	
  3630                           
  3631                           ;launcher_functions.c: 366: }
  3632                           ;launcher_functions.c: 368: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3633  07D8  3015               	movlw	21
  3634  07D9  0020               	movlb	0	; select bank0
  3635  07DA  00C3               	movwf	??_SetupGPS+2
  3636  07DB  304B               	movlw	75
  3637  07DC  00C2               	movwf	??_SetupGPS+1
  3638  07DD  30D1               	movlw	209
  3639  07DE  00C1               	movwf	??_SetupGPS
  3640  07DF                     u2997:	
  3641  07DF  0BC1               	decfsz	??_SetupGPS,f
  3642  07E0  2FDF               	goto	u2997
  3643  07E1  0BC2               	decfsz	??_SetupGPS+1,f
  3644  07E2  2FDF               	goto	u2997
  3645  07E3  0BC3               	decfsz	??_SetupGPS+2,f
  3646  07E4  2FDF               	goto	u2997
  3647  07E5  0000               	nop
  3648  07E6  0008               	return
  3649  07E7                     __end_of_SetupGPS:	
  3650                           
  3651                           	psect	text8
  3652  0F8A                     __ptext8:	
  3653 ;; *************** function _uart_write_message *****************
  3654 ;; Defined at:
  3655 ;;		line 308 in file "launcher_functions.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  data            1    wreg     PTR unsigned char 
  3658 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3659 ;;  size            2    8[BANK0 ] int 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3662 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3663 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3664 ;;  x               2   17[BANK0 ] int 
  3665 ;;  checksum        1   19[BANK0 ] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;		None               void
  3668 ;; Registers used:
  3669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3675 ;;      Params:         0       2       0       0       0       0       0
  3676 ;;      Locals:         0      10       0       0       0       0       0
  3677 ;;      Temps:          0       3       0       0       0       0       0
  3678 ;;      Totals:         0      15       0       0       0       0       0
  3679 ;;Total ram usage:       15 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    3
  3682 ;; This function calls:
  3683 ;;		_compute_checksum
  3684 ;;		_uart_xmit
  3685 ;; This function is called by:
  3686 ;;		_SetupGPS
  3687 ;;		_UpdateGPS
  3688 ;;		_DisableGPS
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           
  3693                           ;psect for function _uart_write_message
  3694  0F8A                     _uart_write_message:	
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3698                           ;uart_write_message@data stored from wreg
  3699  0F8A  0020               	movlb	0	; select bank0
  3700  0F8B  00B4               	movwf	uart_write_message@data
  3701                           
  3702                           ;launcher_functions.c: 310: int x;
  3703                           ;launcher_functions.c: 311: unsigned char checksum;
  3704                           ;launcher_functions.c: 312: unsigned char ascii_checksum[2];
  3705                           ;launcher_functions.c: 314: checksum = compute_checksum(data, size);
  3706  0F8C  0829               	movf	uart_write_message@size+1,w
  3707  0F8D  01A1               	clrf	compute_checksum@size+1
  3708  0F8E  07A1               	addwf	compute_checksum@size+1,f
  3709  0F8F  0828               	movf	uart_write_message@size,w
  3710  0F90  01A0               	clrf	compute_checksum@size
  3711  0F91  07A0               	addwf	compute_checksum@size,f
  3712  0F92  0834               	movf	uart_write_message@data,w
  3713  0F93  318D  25BD  318F   	fcall	_compute_checksum
  3714  0F96  0020               	movlb	0	; select bank0
  3715  0F97  00AA               	movwf	??_uart_write_message
  3716  0F98  082A               	movf	??_uart_write_message,w
  3717  0F99  00B3               	movwf	uart_write_message@checksum
  3718                           
  3719                           ;launcher_functions.c: 315: ascii_checksum[0] = checksum >> 4;
  3720  0F9A  0833               	movf	uart_write_message@checksum,w
  3721  0F9B  00AA               	movwf	??_uart_write_message
  3722  0F9C  3004               	movlw	4
  3723  0F9D                     u1865:	
  3724  0F9D  36AA               	lsrf	??_uart_write_message,f
  3725  0F9E  0B89               	decfsz	9,f
  3726  0F9F  2F9D               	goto	u1865
  3727  0FA0  082A               	movf	??_uart_write_message,w
  3728  0FA1  00AB               	movwf	??_uart_write_message+1
  3729  0FA2  082B               	movf	??_uart_write_message+1,w
  3730  0FA3  00B5               	movwf	uart_write_message@ascii_checksum
  3731                           
  3732                           ;launcher_functions.c: 316: ascii_checksum[1] = checksum & 0x0F;
  3733  0FA4  0833               	movf	uart_write_message@checksum,w
  3734  0FA5  390F               	andlw	15
  3735  0FA6  00AA               	movwf	??_uart_write_message
  3736  0FA7  082A               	movf	??_uart_write_message,w
  3737  0FA8  00B6               	movwf	uart_write_message@ascii_checksum+1
  3738                           
  3739                           ;launcher_functions.c: 318: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3740  0FA9  300A               	movlw	10
  3741  0FAA  0235               	subwf	uart_write_message@ascii_checksum,w
  3742  0FAB  1C03               	skipc
  3743  0FAC  2FAF               	goto	l2303
  3744  0FAD  3037               	movlw	55
  3745  0FAE  2FB0               	goto	L3
  3746  0FAF                     l2303:	
  3747  0FAF  3030               	movlw	48
  3748  0FB0                     L3:	
  3749  0FB0  00AD               	movwf	_uart_write_message$1397
  3750  0FB1  3000               	movlw	0
  3751  0FB2  00AE               	movwf	_uart_write_message$1397+1
  3752  0FB3  082D               	movf	_uart_write_message$1397,w
  3753  0FB4  00AA               	movwf	??_uart_write_message
  3754  0FB5  082A               	movf	??_uart_write_message,w
  3755  0FB6  07B5               	addwf	uart_write_message@ascii_checksum,f
  3756                           
  3757                           ;launcher_functions.c: 319: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3758  0FB7  300A               	movlw	10
  3759  0FB8  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3760  0FB9  1C03               	skipc
  3761  0FBA  2FBD               	goto	l2311
  3762  0FBB  3037               	movlw	55
  3763  0FBC  2FBE               	goto	L4
  3764  0FBD                     l2311:	
  3765  0FBD  3030               	movlw	48
  3766  0FBE                     L4:	
  3767  0FBE  00AF               	movwf	_uart_write_message$1398
  3768  0FBF  3000               	movlw	0
  3769  0FC0  00B0               	movwf	_uart_write_message$1398+1
  3770  0FC1  082F               	movf	_uart_write_message$1398,w
  3771  0FC2  00AA               	movwf	??_uart_write_message
  3772  0FC3  082A               	movf	??_uart_write_message,w
  3773  0FC4  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3774                           
  3775                           ;launcher_functions.c: 321: for(x=0; x<size-1; x++)
  3776  0FC5  01B1               	clrf	uart_write_message@x
  3777  0FC6  01B2               	clrf	uart_write_message@x+1
  3778  0FC7                     l2321:	
  3779  0FC7  0828               	movf	uart_write_message@size,w
  3780  0FC8  3EFF               	addlw	255
  3781  0FC9  00AA               	movwf	??_uart_write_message
  3782  0FCA  30FF               	movlw	255
  3783  0FCB  3D29               	addwfc	uart_write_message@size+1,w
  3784  0FCC  00AB               	movwf	??_uart_write_message+1
  3785  0FCD  0832               	movf	uart_write_message@x+1,w
  3786  0FCE  3A80               	xorlw	128
  3787  0FCF  00AC               	movwf	??_uart_write_message+2
  3788  0FD0  082B               	movf	??_uart_write_message+1,w
  3789  0FD1  3A80               	xorlw	128
  3790  0FD2  022C               	subwf	??_uart_write_message+2,w
  3791  0FD3  1D03               	skipz
  3792  0FD4  2FD7               	goto	u1895
  3793  0FD5  082A               	movf	??_uart_write_message,w
  3794  0FD6  0231               	subwf	uart_write_message@x,w
  3795  0FD7                     u1895:	
  3796  0FD7  1803               	btfsc	3,0
  3797  0FD8  2FEA               	goto	l2323
  3798                           
  3799                           ;launcher_functions.c: 322: {
  3800                           ;launcher_functions.c: 323: uart_xmit(data[x]);
  3801  0FD9  0020               	movlb	0	; select bank0
  3802  0FDA  0831               	movf	uart_write_message@x,w
  3803  0FDB  0734               	addwf	uart_write_message@data,w
  3804  0FDC  00AA               	movwf	??_uart_write_message
  3805  0FDD  082A               	movf	??_uart_write_message,w
  3806  0FDE  0086               	movwf	6
  3807  0FDF  0187               	clrf	7
  3808  0FE0  0801               	movf	1,w
  3809  0FE1  318B  23B4  318F   	fcall	_uart_xmit
  3810  0FE4  3001               	movlw	1
  3811  0FE5  0020               	movlb	0	; select bank0
  3812  0FE6  07B1               	addwf	uart_write_message@x,f
  3813  0FE7  3000               	movlw	0
  3814  0FE8  3DB2               	addwfc	uart_write_message@x+1,f
  3815  0FE9  2FC7               	goto	l2321
  3816  0FEA                     l2323:	
  3817                           
  3818                           ;launcher_functions.c: 324: }
  3819                           ;launcher_functions.c: 325: uart_xmit(ascii_checksum[0]);
  3820  0FEA  0020               	movlb	0	; select bank0
  3821  0FEB  0835               	movf	uart_write_message@ascii_checksum,w
  3822  0FEC  318B  23B4  318F   	fcall	_uart_xmit
  3823                           
  3824                           ;launcher_functions.c: 326: uart_xmit(ascii_checksum[1]);
  3825  0FEF  0020               	movlb	0	; select bank0
  3826  0FF0  0836               	movf	uart_write_message@ascii_checksum+1,w
  3827  0FF1  318B  23B4  318F   	fcall	_uart_xmit
  3828                           
  3829                           ;launcher_functions.c: 328: uart_xmit(0x0D);
  3830  0FF4  300D               	movlw	13
  3831  0FF5  318B  23B4  318F   	fcall	_uart_xmit
  3832                           
  3833                           ;launcher_functions.c: 329: uart_xmit(0x0A);
  3834  0FF8  300A               	movlw	10
  3835  0FF9  318B  23B4  318F   	fcall	_uart_xmit
  3836  0FFC                     l396:	
  3837                           ;launcher_functions.c: 330: while(!TXSTAbits.TRMT);
  3838                           
  3839  0FFC  0023               	movlb	3	; select bank3
  3840  0FFD  189E               	btfsc	30,1	;volatile
  3841  0FFE  0008               	return
  3842  0FFF  2FFC               	goto	l396
  3843  1000                     __end_of_uart_write_message:	
  3844                           
  3845                           	psect	text9
  3846  0BB4                     __ptext9:	
  3847 ;; *************** function _uart_xmit *****************
  3848 ;; Defined at:
  3849 ;;		line 300 in file "launcher_functions.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  mydata_byte     1    wreg     unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;		None               void
  3856 ;; Registers used:
  3857 ;;		wreg
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3863 ;;      Params:         0       0       0       0       0       0       0
  3864 ;;      Locals:         0       1       0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0
  3866 ;;      Totals:         0       1       0       0       0       0       0
  3867 ;;Total ram usage:        1 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    2
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_uart_write_message
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _uart_xmit
  3879  0BB4                     _uart_xmit:	
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _uart_xmit: [wreg]
  3883                           ;uart_xmit@mydata_byte stored from wreg
  3884  0BB4  0020               	movlb	0	; select bank0
  3885  0BB5  00A0               	movwf	uart_xmit@mydata_byte
  3886  0BB6                     l379:	
  3887                           ;launcher_functions.c: 303: while(!TXSTAbits.TRMT);
  3888                           
  3889  0BB6  0023               	movlb	3	; select bank3
  3890  0BB7  1C9E               	btfss	30,1	;volatile
  3891  0BB8  2BB6               	goto	l379
  3892                           
  3893                           ;launcher_functions.c: 304: TXREG = mydata_byte;
  3894  0BB9  0020               	movlb	0	; select bank0
  3895  0BBA  0820               	movf	uart_xmit@mydata_byte,w
  3896  0BBB  0023               	movlb	3	; select bank3
  3897  0BBC  009A               	movwf	26	;volatile
  3898  0BBD  0008               	return
  3899  0BBE                     __end_of_uart_xmit:	
  3900                           
  3901                           	psect	text10
  3902  0DBD                     __ptext10:	
  3903 ;; *************** function _compute_checksum *****************
  3904 ;; Defined at:
  3905 ;;		line 288 in file "launcher_functions.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  data            1    wreg     PTR unsigned char 
  3908 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3909 ;;  size            2    0[BANK0 ] int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3912 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3913 ;;  x               2    6[BANK0 ] int 
  3914 ;;  checksum        1    4[BANK0 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      unsigned char 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3924 ;;      Params:         0       2       0       0       0       0       0
  3925 ;;      Locals:         0       4       0       0       0       0       0
  3926 ;;      Temps:          0       2       0       0       0       0       0
  3927 ;;      Totals:         0       8       0       0       0       0       0
  3928 ;;Total ram usage:        8 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    2
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_uart_write_message
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _compute_checksum
  3940  0DBD                     _compute_checksum:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3944                           ;compute_checksum@data stored from wreg
  3945  0DBD  0020               	movlb	0	; select bank0
  3946  0DBE  00A5               	movwf	compute_checksum@data
  3947                           
  3948                           ;launcher_functions.c: 290: unsigned char checksum = 0;
  3949  0DBF  01A4               	clrf	compute_checksum@checksum
  3950                           
  3951                           ;launcher_functions.c: 291: int x;
  3952                           ;launcher_functions.c: 292: for(x=0; x<size; x++)
  3953  0DC0  01A6               	clrf	compute_checksum@x
  3954  0DC1  01A7               	clrf	compute_checksum@x+1
  3955  0DC2                     l2153:	
  3956  0DC2  0827               	movf	compute_checksum@x+1,w
  3957  0DC3  3A80               	xorlw	128
  3958  0DC4  00A2               	movwf	??_compute_checksum
  3959  0DC5  0821               	movf	compute_checksum@size+1,w
  3960  0DC6  3A80               	xorlw	128
  3961  0DC7  0222               	subwf	??_compute_checksum,w
  3962  0DC8  1D03               	skipz
  3963  0DC9  2DCC               	goto	u1545
  3964  0DCA  0820               	movf	compute_checksum@size,w
  3965  0DCB  0226               	subwf	compute_checksum@x,w
  3966  0DCC                     u1545:	
  3967  0DCC  1803               	btfsc	3,0
  3968  0DCD  2DFC               	goto	l2155
  3969                           
  3970                           ;launcher_functions.c: 293: {
  3971                           ;launcher_functions.c: 294: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3972  0DCE  0020               	movlb	0	; select bank0
  3973  0DCF  0826               	movf	compute_checksum@x,w
  3974  0DD0  0725               	addwf	compute_checksum@data,w
  3975  0DD1  00A2               	movwf	??_compute_checksum
  3976  0DD2  0822               	movf	??_compute_checksum,w
  3977  0DD3  0086               	movwf	6
  3978  0DD4  0187               	clrf	7
  3979  0DD5  0801               	movf	1,w
  3980  0DD6  3A24               	xorlw	36
  3981  0DD7  1903               	skipnz
  3982  0DD8  2DF7               	goto	l2151
  3983  0DD9  0826               	movf	compute_checksum@x,w
  3984  0DDA  0725               	addwf	compute_checksum@data,w
  3985  0DDB  00A2               	movwf	??_compute_checksum
  3986  0DDC  0822               	movf	??_compute_checksum,w
  3987  0DDD  0086               	movwf	6
  3988  0DDE  0187               	clrf	7
  3989  0DDF  0801               	movf	1,w
  3990  0DE0  3A2A               	xorlw	42
  3991  0DE1  1903               	skipnz
  3992  0DE2  2DF7               	goto	l2151
  3993  0DE3  0826               	movf	compute_checksum@x,w
  3994  0DE4  0725               	addwf	compute_checksum@data,w
  3995  0DE5  00A2               	movwf	??_compute_checksum
  3996  0DE6  0822               	movf	??_compute_checksum,w
  3997  0DE7  0086               	movwf	6
  3998  0DE8  0187               	clrf	7
  3999  0DE9  0801               	movf	1,w
  4000  0DEA  3A21               	xorlw	33
  4001  0DEB  1903               	skipnz
  4002  0DEC  2DF7               	goto	l2151
  4003                           
  4004                           ;launcher_functions.c: 295: checksum ^= data[x];
  4005  0DED  0826               	movf	compute_checksum@x,w
  4006  0DEE  0725               	addwf	compute_checksum@data,w
  4007  0DEF  00A2               	movwf	??_compute_checksum
  4008  0DF0  0822               	movf	??_compute_checksum,w
  4009  0DF1  0086               	movwf	6
  4010  0DF2  0187               	clrf	7
  4011  0DF3  0801               	movf	1,w
  4012  0DF4  00A3               	movwf	??_compute_checksum+1
  4013  0DF5  0823               	movf	??_compute_checksum+1,w
  4014  0DF6  06A4               	xorwf	compute_checksum@checksum,f
  4015  0DF7                     l2151:	
  4016  0DF7  3001               	movlw	1
  4017  0DF8  07A6               	addwf	compute_checksum@x,f
  4018  0DF9  3000               	movlw	0
  4019  0DFA  3DA7               	addwfc	compute_checksum@x+1,f
  4020  0DFB  2DC2               	goto	l2153
  4021  0DFC                     l2155:	
  4022                           
  4023                           ;launcher_functions.c: 296: }
  4024                           ;launcher_functions.c: 297: return checksum;
  4025  0DFC  0020               	movlb	0	; select bank0
  4026  0DFD  0824               	movf	compute_checksum@checksum,w
  4027  0DFE  0008               	return
  4028  0DFF                     __end_of_compute_checksum:	
  4029                           
  4030                           	psect	text11
  4031  0667                     __ptext11:	
  4032 ;; *************** function _sprintf *****************
  4033 ;; Defined at:
  4034 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  sp              1    wreg     PTR unsigned char 
  4037 ;;		 -> SetupGPS@message(50), 
  4038 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4039 ;;		 -> STR_1(19), 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  4042 ;;		 -> SetupGPS@message(50), 
  4043 ;;  _val            4   28[BANK0 ] struct .
  4044 ;;  c               1   32[BANK0 ] char 
  4045 ;;  ap              1   26[BANK0 ] PTR void [1]
  4046 ;;		 -> ?_sprintf(2), 
  4047 ;;  prec            1   25[BANK0 ] char 
  4048 ;;  flag            1   24[BANK0 ] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  2   14[BANK0 ] int 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4058 ;;      Params:         0       6       0       0       0       0       0
  4059 ;;      Locals:         0       9       0       0       0       0       0
  4060 ;;      Temps:          0       4       0       0       0       0       0
  4061 ;;      Totals:         0      19       0       0       0       0       0
  4062 ;;Total ram usage:       19 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    3
  4065 ;; This function calls:
  4066 ;;		___lwdiv
  4067 ;;		___lwmod
  4068 ;; This function is called by:
  4069 ;;		_SetupGPS
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function _sprintf
  4075  0667                     _sprintf:	
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4079                           ;sprintf@sp stored from wreg
  4080  0667  0020               	movlb	0	; select bank0
  4081  0668  00BB               	movwf	sprintf@sp
  4082                           
  4083                           ;doprnt.c: 494: va_list ap;
  4084                           ;doprnt.c: 499: signed char c;
  4085                           ;doprnt.c: 506: signed char prec;
  4086                           ;doprnt.c: 508: unsigned char flag;
  4087                           ;doprnt.c: 527: union {
  4088                           ;doprnt.c: 528: unsigned int _val;
  4089                           ;doprnt.c: 529: struct {
  4090                           ;doprnt.c: 530: const char * _cp;
  4091                           ;doprnt.c: 531: unsigned _len;
  4092                           ;doprnt.c: 532: } _str;
  4093                           ;doprnt.c: 533: } _val;
  4094                           ;doprnt.c: 542: *ap = __va_start();
  4095  0669  3030               	movlw	(?_sprintf+2)& (0+255)
  4096  066A  00B4               	movwf	??_sprintf
  4097  066B  0834               	movf	??_sprintf,w
  4098  066C  00BA               	movwf	sprintf@ap
  4099  066D                     l2393:	
  4100                           ;doprnt.c: 545: while(c = *f++) {
  4101                           
  4102  066D  082F               	movf	sprintf@f+1,w
  4103  066E  00B5               	movwf	??_sprintf+1
  4104  066F  082E               	movf	sprintf@f,w
  4105  0670  00B4               	movwf	??_sprintf
  4106  0671  0AAE               	incf	sprintf@f,f
  4107  0672  1903               	skipnz
  4108  0673  0AAF               	incf	sprintf@f+1,f
  4109  0674  0834               	movf	??_sprintf,w
  4110  0675  0084               	movwf	4
  4111  0676  0835               	movf	??_sprintf+1,w
  4112  0677  0085               	movwf	5
  4113  0678  0800               	movf	0,w	;code access
  4114  0679  00B6               	movwf	??_sprintf+2
  4115  067A  0836               	movf	??_sprintf+2,w
  4116  067B  00C0               	movwf	sprintf@c
  4117  067C  08C0               	movf	sprintf@c,f
  4118  067D  1903               	btfsc	3,2
  4119  067E  2F68               	goto	l2395
  4120                           
  4121                           ;doprnt.c: 547: if(c != '%')
  4122  067F  0840               	movf	sprintf@c,w
  4123  0680  3A25               	xorlw	37
  4124  0681  1903               	skipnz
  4125  0682  2E8F               	goto	l2333
  4126                           
  4127                           ;doprnt.c: 549: {
  4128                           ;doprnt.c: 550: ((*sp++ = (c)));
  4129  0683  0840               	movf	sprintf@c,w
  4130  0684  00B4               	movwf	??_sprintf
  4131  0685  083B               	movf	sprintf@sp,w
  4132  0686  0086               	movwf	6
  4133  0687  0187               	clrf	7
  4134  0688  0834               	movf	??_sprintf,w
  4135  0689  0081               	movwf	1
  4136  068A  3001               	movlw	1
  4137  068B  00B4               	movwf	??_sprintf
  4138  068C  0834               	movf	??_sprintf,w
  4139  068D  07BB               	addwf	sprintf@sp,f
  4140                           
  4141                           ;doprnt.c: 551: continue;
  4142  068E  2E6D               	goto	l2393
  4143  068F                     l2333:	
  4144                           
  4145                           ;doprnt.c: 552: }
  4146                           ;doprnt.c: 557: flag = 0;
  4147  068F  01B8               	clrf	sprintf@flag
  4148                           
  4149                           ;doprnt.c: 644: switch(c = *f++) {
  4150  0690  2EC0               	goto	l2353
  4151  0691                     l2335:	
  4152                           ;doprnt.c: 737: case 's':
  4153                           
  4154                           ;doprnt.c: 707: case 'i':
  4155                           ;doprnt.c: 708: break;
  4156                           
  4157                           ;doprnt.c: 706: case 'd':
  4158                           
  4159                           ;doprnt.c: 647: goto alldone;
  4160                           
  4161                           ;doprnt.c: 646: case 0:
  4162                           
  4163                           
  4164                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  4165  0691  083A               	movf	sprintf@ap,w
  4166  0692  0086               	movwf	6
  4167  0693  0187               	clrf	7
  4168  0694  0801               	movf	1,w
  4169  0695  00BC               	movwf	sprintf@_val
  4170  0696  3000               	movlw	0
  4171  0697  00BD               	movwf	sprintf@_val+1
  4172  0698  3001               	movlw	1
  4173  0699  00B4               	movwf	??_sprintf
  4174  069A  0834               	movf	??_sprintf,w
  4175  069B  07BA               	addwf	sprintf@ap,f
  4176                           
  4177                           ;doprnt.c: 749: if(!_val._str._cp)
  4178  069C  083D               	movf	sprintf@_val+1,w
  4179  069D  043C               	iorwf	sprintf@_val,w
  4180  069E  1D03               	skipz
  4181  069F  2EA4               	goto	l2349
  4182                           
  4183                           ;doprnt.c: 750: _val._str._cp = "(null)";
  4184  06A0  301D               	movlw	low (STR_2| (0+32768))
  4185  06A1  00BC               	movwf	sprintf@_val
  4186  06A2  3088               	movlw	high (STR_2| (0+32768))
  4187  06A3  00BD               	movwf	sprintf@_val+1
  4188  06A4                     l2349:	
  4189                           ;doprnt.c: 786: while(*_val._str._cp)
  4190                           
  4191  06A4  083C               	movf	sprintf@_val,w
  4192  06A5  0084               	movwf	4
  4193  06A6  083D               	movf	sprintf@_val+1,w
  4194  06A7  0085               	movwf	5
  4195  06A8  0800               	movf	0,w	;code access
  4196  06A9  3800               	iorlw	0
  4197  06AA  1903               	btfsc	3,2
  4198  06AB  2E6D               	goto	l2393
  4199                           
  4200                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  4201  06AC  083C               	movf	sprintf@_val,w
  4202  06AD  0084               	movwf	4
  4203  06AE  083D               	movf	sprintf@_val+1,w
  4204  06AF  0085               	movwf	5
  4205  06B0  0800               	movf	0,w	;code access
  4206  06B1  00B4               	movwf	??_sprintf
  4207  06B2  083B               	movf	sprintf@sp,w
  4208  06B3  0086               	movwf	6
  4209  06B4  0187               	clrf	7
  4210  06B5  0834               	movf	??_sprintf,w
  4211  06B6  0081               	movwf	1
  4212  06B7  3001               	movlw	1
  4213  06B8  07BC               	addwf	sprintf@_val,f
  4214  06B9  3000               	movlw	0
  4215  06BA  3DBD               	addwfc	sprintf@_val+1,f
  4216  06BB  3001               	movlw	1
  4217  06BC  00B4               	movwf	??_sprintf
  4218  06BD  0834               	movf	??_sprintf,w
  4219  06BE  07BB               	addwf	sprintf@sp,f
  4220  06BF  2EA4               	goto	l2349
  4221  06C0                     l2353:	
  4222                           ;doprnt.c: 831: }
  4223                           
  4224                           ;doprnt.c: 822: continue;
  4225                           
  4226                           ;doprnt.c: 811: default:
  4227                           
  4228                           ;doprnt.c: 788: continue;
  4229                           
  4230  06C0  082F               	movf	sprintf@f+1,w
  4231  06C1  00B5               	movwf	??_sprintf+1
  4232  06C2  082E               	movf	sprintf@f,w
  4233  06C3  00B4               	movwf	??_sprintf
  4234  06C4  0AAE               	incf	sprintf@f,f
  4235  06C5  1903               	skipnz
  4236  06C6  0AAF               	incf	sprintf@f+1,f
  4237  06C7  0834               	movf	??_sprintf,w
  4238  06C8  0084               	movwf	4
  4239  06C9  0835               	movf	??_sprintf+1,w
  4240  06CA  0085               	movwf	5
  4241  06CB  0800               	movf	0,w	;code access
  4242  06CC  00C0               	movwf	sprintf@c
  4243                           
  4244                           ; Switch size 1, requested type "space"
  4245                           ; Number of cases is 4, Range of values is 0 to 115
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte           13     7 (average)
  4249                           ; direct_byte          238     6 (fixed)
  4250                           ; jumptable            260     6 (fixed)
  4251                           ;	Chosen strategy is simple_byte
  4252  06CD  3A00               	xorlw	0	; case 0
  4253  06CE  1903               	skipnz
  4254  06CF  2F68               	goto	l2395
  4255  06D0  3A64               	xorlw	100	; case 100
  4256  06D1  1903               	skipnz
  4257  06D2  2EDA               	goto	l2355
  4258  06D3  3A0D               	xorlw	13	; case 105
  4259  06D4  1903               	skipnz
  4260  06D5  2EDA               	goto	l2355
  4261  06D6  3A1A               	xorlw	26	; case 115
  4262  06D7  1903               	skipnz
  4263  06D8  2E91               	goto	l2335
  4264  06D9  2E6D               	goto	l2393
  4265  06DA                     l2355:	
  4266                           
  4267                           ;doprnt.c: 1262: {
  4268                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4269  06DA  083A               	movf	sprintf@ap,w
  4270  06DB  0086               	movwf	6
  4271  06DC  0187               	clrf	7
  4272  06DD  3F40               	moviw [0]fsr1
  4273  06DE  00BC               	movwf	sprintf@_val
  4274  06DF  3F41               	moviw [1]fsr1
  4275  06E0  00BD               	movwf	sprintf@_val+1
  4276  06E1  3002               	movlw	2
  4277  06E2  00B4               	movwf	??_sprintf
  4278  06E3  0834               	movf	??_sprintf,w
  4279  06E4  07BA               	addwf	sprintf@ap,f
  4280                           
  4281                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4282  06E5  1FBD               	btfss	sprintf@_val+1,7
  4283  06E6  2EF0               	goto	l2365
  4284                           
  4285                           ;doprnt.c: 1271: flag |= 0x03;
  4286  06E7  3003               	movlw	3
  4287  06E8  00B4               	movwf	??_sprintf
  4288  06E9  0834               	movf	??_sprintf,w
  4289  06EA  04B8               	iorwf	sprintf@flag,f
  4290                           
  4291                           ;doprnt.c: 1272: _val._val = -_val._val;
  4292  06EB  09BC               	comf	sprintf@_val,f
  4293  06EC  09BD               	comf	sprintf@_val+1,f
  4294  06ED  0ABC               	incf	sprintf@_val,f
  4295  06EE  1903               	skipnz
  4296  06EF  0ABD               	incf	sprintf@_val+1,f
  4297  06F0                     l2365:	
  4298                           
  4299                           ;doprnt.c: 1273: }
  4300                           ;doprnt.c: 1275: }
  4301                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4302  06F0  01C0               	clrf	sprintf@c
  4303  06F1  0AC0               	incf	sprintf@c,f
  4304  06F2  0840               	movf	sprintf@c,w
  4305  06F3  3A05               	xorlw	5
  4306  06F4  1903               	btfsc	3,2
  4307  06F5  2F15               	goto	l2377
  4308  06F6                     l2369:	
  4309                           
  4310                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4311  06F6  0840               	movf	sprintf@c,w
  4312  06F7  00B4               	movwf	??_sprintf
  4313  06F8  01B5               	clrf	??_sprintf+1
  4314  06F9  35B4               	lslf	??_sprintf,f
  4315  06FA  0DB5               	rlf	??_sprintf+1,f
  4316  06FB  3000               	movlw	low (_dpowers| (0+32768))
  4317  06FC  0734               	addwf	??_sprintf,w
  4318  06FD  0084               	movwf	4
  4319  06FE  3088               	movlw	high (_dpowers| (0+32768))
  4320  06FF  3D35               	addwfc	??_sprintf+1,w
  4321  0700  0085               	movwf	5
  4322  0701  3F00               	moviw [0]fsr0
  4323  0702  00B6               	movwf	??_sprintf+2
  4324  0703  3F01               	moviw [1]fsr0
  4325  0704  00B7               	movwf	??_sprintf+3
  4326  0705  0837               	movf	??_sprintf+3,w
  4327  0706  023D               	subwf	sprintf@_val+1,w
  4328  0707  1D03               	skipz
  4329  0708  2F0B               	goto	u1965
  4330  0709  0836               	movf	??_sprintf+2,w
  4331  070A  023C               	subwf	sprintf@_val,w
  4332  070B                     u1965:	
  4333  070B  1C03               	btfss	3,0
  4334  070C  2F15               	goto	l2377
  4335                           
  4336                           ;doprnt.c: 1316: break;
  4337  070D  3001               	movlw	1
  4338  070E  00B4               	movwf	??_sprintf
  4339  070F  0834               	movf	??_sprintf,w
  4340  0710  07C0               	addwf	sprintf@c,f
  4341  0711  0840               	movf	sprintf@c,w
  4342  0712  3A05               	xorlw	5
  4343  0713  1D03               	skipz
  4344  0714  2EF6               	goto	l2369
  4345  0715                     l2377:	
  4346                           
  4347                           ;doprnt.c: 1431: {
  4348                           ;doprnt.c: 1447: if(flag & 0x03)
  4349  0715  0838               	movf	sprintf@flag,w
  4350  0716  3903               	andlw	3
  4351  0717  1903               	btfsc	3,2
  4352  0718  2F24               	goto	l2383
  4353                           
  4354                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4355  0719  302D               	movlw	45
  4356  071A  00B4               	movwf	??_sprintf
  4357  071B  083B               	movf	sprintf@sp,w
  4358  071C  0086               	movwf	6
  4359  071D  0187               	clrf	7
  4360  071E  0834               	movf	??_sprintf,w
  4361  071F  0081               	movwf	1
  4362  0720  3001               	movlw	1
  4363  0721  00B4               	movwf	??_sprintf
  4364  0722  0834               	movf	??_sprintf,w
  4365  0723  07BB               	addwf	sprintf@sp,f
  4366  0724                     l2383:	
  4367                           
  4368                           ;doprnt.c: 1478: }
  4369                           ;doprnt.c: 1481: prec = c;
  4370  0724  0840               	movf	sprintf@c,w
  4371  0725  00B4               	movwf	??_sprintf
  4372  0726  0834               	movf	??_sprintf,w
  4373  0727  00B9               	movwf	sprintf@prec
  4374  0728                     l2391:	
  4375                           ;doprnt.c: 1483: while(prec--) {
  4376                           
  4377  0728  30FF               	movlw	-1
  4378  0729  00B4               	movwf	??_sprintf
  4379  072A  0834               	movf	??_sprintf,w
  4380  072B  07B9               	addwf	sprintf@prec,f
  4381  072C  0839               	movf	sprintf@prec,w
  4382  072D  3AFF               	xorlw	255
  4383  072E  1903               	btfsc	3,2
  4384  072F  2E6D               	goto	l2393
  4385                           
  4386                           ;doprnt.c: 1487: {
  4387                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4388  0730  300A               	movlw	10
  4389  0731  00A8               	movwf	___lwmod@divisor
  4390  0732  3000               	movlw	0
  4391  0733  00A9               	movwf	___lwmod@divisor+1
  4392  0734  0839               	movf	sprintf@prec,w
  4393  0735  00B4               	movwf	??_sprintf
  4394  0736  01B5               	clrf	??_sprintf+1
  4395  0737  35B4               	lslf	??_sprintf,f
  4396  0738  0DB5               	rlf	??_sprintf+1,f
  4397  0739  3000               	movlw	low (_dpowers| (0+32768))
  4398  073A  0734               	addwf	??_sprintf,w
  4399  073B  0084               	movwf	4
  4400  073C  3088               	movlw	high (_dpowers| (0+32768))
  4401  073D  3D35               	addwfc	??_sprintf+1,w
  4402  073E  0085               	movwf	5
  4403  073F  3F00               	moviw [0]fsr0
  4404  0740  00A0               	movwf	___lwdiv@divisor
  4405  0741  3F01               	moviw [1]fsr0
  4406  0742  00A1               	movwf	___lwdiv@divisor+1
  4407  0743  083D               	movf	sprintf@_val+1,w
  4408  0744  01A3               	clrf	___lwdiv@dividend+1
  4409  0745  07A3               	addwf	___lwdiv@dividend+1,f
  4410  0746  083C               	movf	sprintf@_val,w
  4411  0747  01A2               	clrf	___lwdiv@dividend
  4412  0748  07A2               	addwf	___lwdiv@dividend,f
  4413  0749  318D  2586  3186   	fcall	___lwdiv
  4414  074C  0020               	movlb	0	; select bank0
  4415  074D  0821               	movf	?___lwdiv+1,w
  4416  074E  01AB               	clrf	___lwmod@dividend+1
  4417  074F  07AB               	addwf	___lwmod@dividend+1,f
  4418  0750  0820               	movf	?___lwdiv,w
  4419  0751  01AA               	clrf	___lwmod@dividend
  4420  0752  07AA               	addwf	___lwmod@dividend,f
  4421  0753  318D  2557  3186   	fcall	___lwmod
  4422  0756  0020               	movlb	0	; select bank0
  4423  0757  0828               	movf	?___lwmod,w
  4424  0758  3E30               	addlw	48
  4425  0759  00B6               	movwf	??_sprintf+2
  4426  075A  0836               	movf	??_sprintf+2,w
  4427  075B  00C0               	movwf	sprintf@c
  4428                           
  4429                           ;doprnt.c: 1532: }
  4430                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4431  075C  0840               	movf	sprintf@c,w
  4432  075D  00B4               	movwf	??_sprintf
  4433  075E  083B               	movf	sprintf@sp,w
  4434  075F  0086               	movwf	6
  4435  0760  0187               	clrf	7
  4436  0761  0834               	movf	??_sprintf,w
  4437  0762  0081               	movwf	1
  4438  0763  3001               	movlw	1
  4439  0764  00B4               	movwf	??_sprintf
  4440  0765  0834               	movf	??_sprintf,w
  4441  0766  07BB               	addwf	sprintf@sp,f
  4442  0767  2F28               	goto	l2391
  4443  0768                     l2395:	
  4444                           ;doprnt.c: 1534: }
  4445                           ;doprnt.c: 1542: }
  4446                           ;doprnt.c: 1544: alldone:
  4447                           
  4448                           
  4449                           ;doprnt.c: 1547: *sp = 0;
  4450  0768  083B               	movf	sprintf@sp,w
  4451  0769  0086               	movwf	6
  4452  076A  0187               	clrf	7
  4453  076B  0181               	clrf	1
  4454  076C  0008               	return
  4455  076D                     __end_of_sprintf:	
  4456                           ;doprnt.c: 1549: return 0;
  4457                           ;	Return value of _sprintf is never used
  4458                           
  4459                           
  4460                           	psect	text12
  4461  0D57                     __ptext12:	
  4462 ;; *************** function ___lwmod *****************
  4463 ;; Defined at:
  4464 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  divisor         2    8[BANK0 ] unsigned int 
  4467 ;;  dividend        2   10[BANK0 ] unsigned int 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  counter         1   13[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  2    8[BANK0 ] unsigned int 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4479 ;;      Params:         0       4       0       0       0       0       0
  4480 ;;      Locals:         0       1       0       0       0       0       0
  4481 ;;      Temps:          0       1       0       0       0       0       0
  4482 ;;      Totals:         0       6       0       0       0       0       0
  4483 ;;Total ram usage:        6 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    2
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_sprintf
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function ___lwmod
  4495  0D57                     ___lwmod:	
  4496                           
  4497                           ;incstack = 0
  4498                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4499  0D57  0020               	movlb	0	; select bank0
  4500  0D58  0829               	movf	___lwmod@divisor+1,w
  4501  0D59  0428               	iorwf	___lwmod@divisor,w
  4502  0D5A  1903               	skipnz
  4503  0D5B  2D7F               	goto	l2279
  4504  0D5C  01AD               	clrf	___lwmod@counter
  4505  0D5D  0AAD               	incf	___lwmod@counter,f
  4506  0D5E                     l2269:	
  4507  0D5E  1BA9               	btfsc	___lwmod@divisor+1,7
  4508  0D5F  2D6A               	goto	l2271
  4509  0D60  3001               	movlw	1
  4510  0D61                     u1805:	
  4511  0D61  35A8               	lslf	___lwmod@divisor,f
  4512  0D62  0DA9               	rlf	___lwmod@divisor+1,f
  4513  0D63  0B89               	decfsz	9,f
  4514  0D64  2D61               	goto	u1805
  4515  0D65  3001               	movlw	1
  4516  0D66  00AC               	movwf	??___lwmod
  4517  0D67  082C               	movf	??___lwmod,w
  4518  0D68  07AD               	addwf	___lwmod@counter,f
  4519  0D69  2D5E               	goto	l2269
  4520  0D6A                     l2271:	
  4521  0D6A  0829               	movf	___lwmod@divisor+1,w
  4522  0D6B  022B               	subwf	___lwmod@dividend+1,w
  4523  0D6C  1D03               	skipz
  4524  0D6D  2D70               	goto	u1825
  4525  0D6E  0828               	movf	___lwmod@divisor,w
  4526  0D6F  022A               	subwf	___lwmod@dividend,w
  4527  0D70                     u1825:	
  4528  0D70  1C03               	skipc
  4529  0D71  2D76               	goto	l2275
  4530  0D72  0828               	movf	___lwmod@divisor,w
  4531  0D73  02AA               	subwf	___lwmod@dividend,f
  4532  0D74  0829               	movf	___lwmod@divisor+1,w
  4533  0D75  3BAB               	subwfb	___lwmod@dividend+1,f
  4534  0D76                     l2275:	
  4535  0D76  3001               	movlw	1
  4536  0D77                     u1835:	
  4537  0D77  36A9               	lsrf	___lwmod@divisor+1,f
  4538  0D78  0CA8               	rrf	___lwmod@divisor,f
  4539  0D79  0B89               	decfsz	9,f
  4540  0D7A  2D77               	goto	u1835
  4541  0D7B  3001               	movlw	1
  4542  0D7C  02AD               	subwf	___lwmod@counter,f
  4543  0D7D  1D03               	btfss	3,2
  4544  0D7E  2D6A               	goto	l2271
  4545  0D7F                     l2279:	
  4546  0D7F  082B               	movf	___lwmod@dividend+1,w
  4547  0D80  01A9               	clrf	?___lwmod+1
  4548  0D81  07A9               	addwf	?___lwmod+1,f
  4549  0D82  082A               	movf	___lwmod@dividend,w
  4550  0D83  01A8               	clrf	?___lwmod
  4551  0D84  07A8               	addwf	?___lwmod,f
  4552  0D85  0008               	return
  4553  0D86                     __end_of___lwmod:	
  4554                           
  4555                           	psect	text13
  4556  0D86                     __ptext13:	
  4557 ;; *************** function ___lwdiv *****************
  4558 ;; Defined at:
  4559 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  divisor         2    0[BANK0 ] unsigned int 
  4562 ;;  dividend        2    2[BANK0 ] unsigned int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  quotient        2    5[BANK0 ] unsigned int 
  4565 ;;  counter         1    7[BANK0 ] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2    0[BANK0 ] unsigned int 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4575 ;;      Params:         0       4       0       0       0       0       0
  4576 ;;      Locals:         0       3       0       0       0       0       0
  4577 ;;      Temps:          0       1       0       0       0       0       0
  4578 ;;      Totals:         0       8       0       0       0       0       0
  4579 ;;Total ram usage:        8 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    2
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_sprintf
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function ___lwdiv
  4591  0D86                     ___lwdiv:	
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4595  0D86  0020               	movlb	0	; select bank0
  4596  0D87  01A5               	clrf	___lwdiv@quotient
  4597  0D88  01A6               	clrf	___lwdiv@quotient+1
  4598  0D89  0821               	movf	___lwdiv@divisor+1,w
  4599  0D8A  0420               	iorwf	___lwdiv@divisor,w
  4600  0D8B  1903               	skipnz
  4601  0D8C  2DB6               	goto	l2257
  4602  0D8D  01A7               	clrf	___lwdiv@counter
  4603  0D8E  0AA7               	incf	___lwdiv@counter,f
  4604  0D8F                     l2245:	
  4605  0D8F  1BA1               	btfsc	___lwdiv@divisor+1,7
  4606  0D90  2D9B               	goto	l2247
  4607  0D91  3001               	movlw	1
  4608  0D92                     u1735:	
  4609  0D92  35A0               	lslf	___lwdiv@divisor,f
  4610  0D93  0DA1               	rlf	___lwdiv@divisor+1,f
  4611  0D94  0B89               	decfsz	9,f
  4612  0D95  2D92               	goto	u1735
  4613  0D96  3001               	movlw	1
  4614  0D97  00A4               	movwf	??___lwdiv
  4615  0D98  0824               	movf	??___lwdiv,w
  4616  0D99  07A7               	addwf	___lwdiv@counter,f
  4617  0D9A  2D8F               	goto	l2245
  4618  0D9B                     l2247:	
  4619  0D9B  3001               	movlw	1
  4620  0D9C                     u1755:	
  4621  0D9C  35A5               	lslf	___lwdiv@quotient,f
  4622  0D9D  0DA6               	rlf	___lwdiv@quotient+1,f
  4623  0D9E  0B89               	decfsz	9,f
  4624  0D9F  2D9C               	goto	u1755
  4625  0DA0  0821               	movf	___lwdiv@divisor+1,w
  4626  0DA1  0223               	subwf	___lwdiv@dividend+1,w
  4627  0DA2  1D03               	skipz
  4628  0DA3  2DA6               	goto	u1765
  4629  0DA4  0820               	movf	___lwdiv@divisor,w
  4630  0DA5  0222               	subwf	___lwdiv@dividend,w
  4631  0DA6                     u1765:	
  4632  0DA6  1C03               	skipc
  4633  0DA7  2DAD               	goto	l2253
  4634  0DA8  0820               	movf	___lwdiv@divisor,w
  4635  0DA9  02A2               	subwf	___lwdiv@dividend,f
  4636  0DAA  0821               	movf	___lwdiv@divisor+1,w
  4637  0DAB  3BA3               	subwfb	___lwdiv@dividend+1,f
  4638  0DAC  1425               	bsf	___lwdiv@quotient,0
  4639  0DAD                     l2253:	
  4640  0DAD  3001               	movlw	1
  4641  0DAE                     u1775:	
  4642  0DAE  36A1               	lsrf	___lwdiv@divisor+1,f
  4643  0DAF  0CA0               	rrf	___lwdiv@divisor,f
  4644  0DB0  0B89               	decfsz	9,f
  4645  0DB1  2DAE               	goto	u1775
  4646  0DB2  3001               	movlw	1
  4647  0DB3  02A7               	subwf	___lwdiv@counter,f
  4648  0DB4  1D03               	btfss	3,2
  4649  0DB5  2D9B               	goto	l2247
  4650  0DB6                     l2257:	
  4651  0DB6  0826               	movf	___lwdiv@quotient+1,w
  4652  0DB7  01A1               	clrf	?___lwdiv+1
  4653  0DB8  07A1               	addwf	?___lwdiv+1,f
  4654  0DB9  0825               	movf	___lwdiv@quotient,w
  4655  0DBA  01A0               	clrf	?___lwdiv
  4656  0DBB  07A0               	addwf	?___lwdiv,f
  4657  0DBC  0008               	return
  4658  0DBD                     __end_of___lwdiv:	
  4659                           
  4660                           	psect	text14
  4661  0395                     __ptext14:	
  4662 ;; *************** function _RecordMode *****************
  4663 ;; Defined at:
  4664 ;;		line 561 in file "launcher_functions.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  address         4   35[BANK0 ] long 
  4669 ;;  count           2   33[BANK0 ] int 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4679 ;;      Params:         0       0       0       0       0       0       0
  4680 ;;      Locals:         0       6       0       0       0       0       0
  4681 ;;      Temps:          0       5       0       0       0       0       0
  4682 ;;      Totals:         0      11       0       0       0       0       0
  4683 ;;Total ram usage:       11 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    6
  4686 ;; This function calls:
  4687 ;;		_CheckDisconnect
  4688 ;;		_InitSPI
  4689 ;;		_ReadBuffer
  4690 ;;		_SendGPSSPI
  4691 ;;		_WriteOverheadSPI
  4692 ;;		_WriteSPI
  4693 ;; This function is called by:
  4694 ;;		_main
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _RecordMode
  4700  0395                     _RecordMode:	
  4701                           
  4702                           ;launcher_functions.c: 563: PORTAbits.RA4 = 1;
  4703                           
  4704                           ;incstack = 0
  4705                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4706  0395  0020               	movlb	0	; select bank0
  4707  0396  160C               	bsf	12,4	;volatile
  4708                           
  4709                           ;launcher_functions.c: 564: long int address = 0xBB68+11;
  4710  0397  3000               	movlw	0
  4711  0398  00C6               	movwf	RecordMode@address+3
  4712  0399  3000               	movlw	0
  4713  039A  00C5               	movwf	RecordMode@address+2
  4714  039B  30BB               	movlw	187
  4715  039C  00C4               	movwf	RecordMode@address+1
  4716  039D  3073               	movlw	115
  4717  039E  00C3               	movwf	RecordMode@address
  4718                           
  4719                           ;launcher_functions.c: 565: int count = 115;
  4720  039F  3073               	movlw	115
  4721  03A0  00C1               	movwf	RecordMode@count
  4722  03A1  3000               	movlw	0
  4723  03A2  00C2               	movwf	RecordMode@count+1
  4724                           
  4725                           ;launcher_functions.c: 567: InitSPI();
  4726  03A3  318C  2430  3183   	fcall	_InitSPI
  4727                           
  4728                           ;launcher_functions.c: 570: if(CheckDisconnect())
  4729  03A6  318B  23FE  3183   	fcall	_CheckDisconnect
  4730  03A9  3A00               	xorlw	0
  4731  03AA  1903               	skipnz
  4732  03AB  2BC1               	goto	l2751
  4733                           
  4734                           ;launcher_functions.c: 571: {
  4735                           ;launcher_functions.c: 572: LATC2 = (1);
  4736  03AC  0022               	movlb	2	; select bank2
  4737  03AD  150E               	bsf	14,2	;volatile
  4738                           
  4739                           ;launcher_functions.c: 573: (start) = 0;
  4740  03AE  01FB               	clrf	_start
  4741  03AF  01FC               	clrf	_start+1
  4742                           
  4743                           ;launcher_functions.c: 574: (end) = 0;
  4744  03B0  01F9               	clrf	_end
  4745  03B1  01FA               	clrf	_end+1
  4746                           
  4747                           ;launcher_functions.c: 575: SSPCON1bits.SSPEN=0;
  4748  03B2  0024               	movlb	4	; select bank4
  4749  03B3  1295               	bcf	21,5	;volatile
  4750                           
  4751                           ;launcher_functions.c: 578: PORTCbits.PORTC = LATCbits.LATC & 0xD7;
  4752  03B4  0022               	movlb	2	; select bank2
  4753  03B5  080E               	movf	14,w	;volatile
  4754  03B6  39FF               	andlw	255
  4755  03B7  39D7               	andlw	215
  4756  03B8  0020               	movlb	0	; select bank0
  4757  03B9  00BC               	movwf	??_RecordMode
  4758  03BA  080E               	movf	14,w	;volatile
  4759  03BB  063C               	xorwf	??_RecordMode,w
  4760  03BC  3900               	andlw	-256
  4761  03BD  063C               	xorwf	??_RecordMode,w
  4762  03BE  008E               	movwf	14	;volatile
  4763                           
  4764                           ;launcher_functions.c: 579: PORTAbits.RA4 = 0;
  4765  03BF  120C               	bcf	12,4	;volatile
  4766                           
  4767                           ;launcher_functions.c: 580: return;
  4768  03C0  0008               	return
  4769  03C1                     l2751:	
  4770                           
  4771                           ;launcher_functions.c: 581: }
  4772                           ;launcher_functions.c: 583: (start) = 0;
  4773  03C1  01FB               	clrf	_start
  4774  03C2  01FC               	clrf	_start+1
  4775                           
  4776                           ;launcher_functions.c: 584: (end) = 0;
  4777  03C3  01F9               	clrf	_end
  4778  03C4  01FA               	clrf	_end+1
  4779                           
  4780                           ;launcher_functions.c: 586: _delay((unsigned long)((300)*(16000000/4000.0)));
  4781  03C5  3007               	movlw	7
  4782  03C6  0020               	movlb	0	; select bank0
  4783  03C7  00BE               	movwf	??_RecordMode+2
  4784  03C8  3017               	movlw	23
  4785  03C9  00BD               	movwf	??_RecordMode+1
  4786  03CA  306F               	movlw	111
  4787  03CB  00BC               	movwf	??_RecordMode
  4788  03CC                     u3007:	
  4789  03CC  0BBC               	decfsz	??_RecordMode,f
  4790  03CD  2BCC               	goto	u3007
  4791  03CE  0BBD               	decfsz	??_RecordMode+1,f
  4792  03CF  2BCC               	goto	u3007
  4793  03D0  0BBE               	decfsz	??_RecordMode+2,f
  4794  03D1  2BCC               	goto	u3007
  4795  03D2  0000               	nop
  4796                           
  4797                           ;launcher_functions.c: 587: WriteOverheadSPI(address);
  4798  03D3  0020               	movlb	0	; select bank0
  4799  03D4  0846               	movf	RecordMode@address+3,w
  4800  03D5  00AA               	movwf	WriteOverheadSPI@address+3
  4801  03D6  0845               	movf	RecordMode@address+2,w
  4802  03D7  00A9               	movwf	WriteOverheadSPI@address+2
  4803  03D8  0844               	movf	RecordMode@address+1,w
  4804  03D9  00A8               	movwf	WriteOverheadSPI@address+1
  4805  03DA  0843               	movf	RecordMode@address,w
  4806  03DB  00A7               	movwf	WriteOverheadSPI@address
  4807  03DC  318E  2653  3183   	fcall	_WriteOverheadSPI
  4808                           
  4809                           ;launcher_functions.c: 588: TMR1IF = 0;
  4810  03DF  0020               	movlb	0	; select bank0
  4811  03E0  1011               	bcf	17,0	;volatile
  4812                           
  4813                           ;launcher_functions.c: 589: TMR1IE = 1;
  4814  03E1  0021               	movlb	1	; select bank1
  4815  03E2  1411               	bsf	17,0	;volatile
  4816                           
  4817                           ;launcher_functions.c: 590: TMR1ON = 1;
  4818  03E3  0020               	movlb	0	; select bank0
  4819  03E4  1418               	bsf	24,0	;volatile
  4820                           
  4821                           ;launcher_functions.c: 591: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  4822  03E5  0022               	movlb	2	; select bank2
  4823  03E6  080D               	movf	13,w	;volatile
  4824  03E7  39FF               	andlw	255
  4825  03E8  3820               	iorlw	32
  4826  03E9  0020               	movlb	0	; select bank0
  4827  03EA  00BC               	movwf	??_RecordMode
  4828  03EB  080D               	movf	13,w	;volatile
  4829  03EC  063C               	xorwf	??_RecordMode,w
  4830  03ED  3900               	andlw	-256
  4831  03EE  063C               	xorwf	??_RecordMode,w
  4832  03EF  008D               	movwf	13	;volatile
  4833                           
  4834                           ;launcher_functions.c: 592: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  4835  03F0  0022               	movlb	2	; select bank2
  4836  03F1  080D               	movf	13,w	;volatile
  4837  03F2  39FF               	andlw	255
  4838  03F3  39EF               	andlw	239
  4839  03F4  0020               	movlb	0	; select bank0
  4840  03F5  00BC               	movwf	??_RecordMode
  4841  03F6  080D               	movf	13,w	;volatile
  4842  03F7  063C               	xorwf	??_RecordMode,w
  4843  03F8  3900               	andlw	-256
  4844  03F9  063C               	xorwf	??_RecordMode,w
  4845  03FA  008D               	movwf	13	;volatile
  4846  03FB                     l2783:	
  4847                           ;launcher_functions.c: 594: while((recordFlag) && (address < 131072))
  4848                           
  4849  03FB  0020               	movlb	0	; select bank0
  4850  03FC  0869               	movf	_recordFlag,w
  4851  03FD  1903               	btfsc	3,2
  4852  03FE  2C82               	goto	l2803
  4853  03FF  0846               	movf	RecordMode@address+3,w
  4854  0400  3A80               	xorlw	128
  4855  0401  00BC               	movwf	??_RecordMode
  4856  0402  3000               	movlw	0
  4857  0403  3A80               	xorlw	128
  4858  0404  023C               	subwf	??_RecordMode,w
  4859  0405  1D03               	skipz
  4860  0406  2C11               	goto	u2273
  4861  0407  3002               	movlw	2
  4862  0408  0245               	subwf	RecordMode@address+2,w
  4863  0409  1D03               	skipz
  4864  040A  2C11               	goto	u2273
  4865  040B  3000               	movlw	0
  4866  040C  0244               	subwf	RecordMode@address+1,w
  4867  040D  1D03               	skipz
  4868  040E  2C11               	goto	u2273
  4869  040F  3000               	movlw	0
  4870  0410  0243               	subwf	RecordMode@address,w
  4871  0411                     u2273:	
  4872  0411  1803               	btfsc	3,0
  4873  0412  2C82               	goto	l2803
  4874                           
  4875                           ;launcher_functions.c: 595: {
  4876                           ;launcher_functions.c: 596: if(count>=256)
  4877  0413  0842               	movf	RecordMode@count+1,w
  4878  0414  3A80               	xorlw	128
  4879  0415  00BC               	movwf	??_RecordMode
  4880  0416  3081               	movlw	129
  4881  0417  023C               	subwf	??_RecordMode,w
  4882  0418  1D03               	skipz
  4883  0419  2C1C               	goto	u2245
  4884  041A  3000               	movlw	0
  4885  041B  0241               	subwf	RecordMode@count,w
  4886  041C                     u2245:	
  4887  041C  1C03               	skipc
  4888  041D  2C2E               	goto	l2775
  4889                           
  4890                           ;launcher_functions.c: 597: {
  4891                           ;launcher_functions.c: 598: LATC2 = (1);
  4892  041E  0022               	movlb	2	; select bank2
  4893  041F  150E               	bsf	14,2	;volatile
  4894                           
  4895                           ;launcher_functions.c: 599: count = 0;
  4896  0420  0020               	movlb	0	; select bank0
  4897  0421  01C1               	clrf	RecordMode@count
  4898  0422  01C2               	clrf	RecordMode@count+1
  4899                           
  4900                           ;launcher_functions.c: 600: WriteOverheadSPI(address);
  4901  0423  0846               	movf	RecordMode@address+3,w
  4902  0424  00AA               	movwf	WriteOverheadSPI@address+3
  4903  0425  0845               	movf	RecordMode@address+2,w
  4904  0426  00A9               	movwf	WriteOverheadSPI@address+2
  4905  0427  0844               	movf	RecordMode@address+1,w
  4906  0428  00A8               	movwf	WriteOverheadSPI@address+1
  4907  0429  0843               	movf	RecordMode@address,w
  4908  042A  00A7               	movwf	WriteOverheadSPI@address
  4909  042B  318E  2653  3183   	fcall	_WriteOverheadSPI
  4910  042E                     l2775:	
  4911                           
  4912                           ;launcher_functions.c: 601: }
  4913                           ;launcher_functions.c: 602: if(!((((start))==((end)))?(1):(0)))
  4914  042E  087A               	movf	_end+1,w
  4915  042F  067C               	xorwf	_start+1,w
  4916  0430  1D03               	skipz
  4917  0431  2C34               	goto	u2255
  4918  0432  0879               	movf	_end,w
  4919  0433  067B               	xorwf	_start,w
  4920  0434                     u2255:	
  4921  0434  1903               	skipnz
  4922  0435  2BFB               	goto	l2783
  4923                           
  4924                           ;launcher_functions.c: 603: {
  4925                           ;launcher_functions.c: 604: WriteSPI(ReadBuffer());
  4926  0436  318C  2494  3183   	fcall	_ReadBuffer
  4927  0439  318C  2454  3183   	fcall	_WriteSPI
  4928                           
  4929                           ;launcher_functions.c: 605: address++;
  4930  043C  3001               	movlw	1
  4931  043D  0020               	movlb	0	; select bank0
  4932  043E  07C3               	addwf	RecordMode@address,f
  4933  043F  3000               	movlw	0
  4934  0440  3DC4               	addwfc	RecordMode@address+1,f
  4935  0441  3000               	movlw	0
  4936  0442  3DC5               	addwfc	RecordMode@address+2,f
  4937  0443  3000               	movlw	0
  4938  0444  3DC6               	addwfc	RecordMode@address+3,f
  4939                           
  4940                           ;launcher_functions.c: 606: count++;
  4941  0445  3001               	movlw	1
  4942  0446  07C1               	addwf	RecordMode@count,f
  4943  0447  3000               	movlw	0
  4944  0448  3DC2               	addwfc	RecordMode@count+1,f
  4945  0449  2BFB               	goto	l2783
  4946  044A                     l2787:	
  4947                           ;launcher_functions.c: 607: }
  4948                           ;launcher_functions.c: 609: }
  4949                           ;launcher_functions.c: 611: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4950                           
  4951                           
  4952                           ;launcher_functions.c: 612: {
  4953                           ;launcher_functions.c: 613: if(count>=256)
  4954  044A  0842               	movf	RecordMode@count+1,w
  4955  044B  3A80               	xorlw	128
  4956  044C  00BC               	movwf	??_RecordMode
  4957  044D  3081               	movlw	129
  4958  044E  023C               	subwf	??_RecordMode,w
  4959  044F  1D03               	skipz
  4960  0450  2C53               	goto	u2285
  4961  0451  3000               	movlw	0
  4962  0452  0241               	subwf	RecordMode@count,w
  4963  0453                     u2285:	
  4964  0453  1C03               	skipc
  4965  0454  2C65               	goto	l2795
  4966                           
  4967                           ;launcher_functions.c: 614: {
  4968                           ;launcher_functions.c: 615: LATC2 = (1);
  4969  0455  0022               	movlb	2	; select bank2
  4970  0456  150E               	bsf	14,2	;volatile
  4971                           
  4972                           ;launcher_functions.c: 616: count = 0;
  4973  0457  0020               	movlb	0	; select bank0
  4974  0458  01C1               	clrf	RecordMode@count
  4975  0459  01C2               	clrf	RecordMode@count+1
  4976                           
  4977                           ;launcher_functions.c: 617: WriteOverheadSPI(address);
  4978  045A  0846               	movf	RecordMode@address+3,w
  4979  045B  00AA               	movwf	WriteOverheadSPI@address+3
  4980  045C  0845               	movf	RecordMode@address+2,w
  4981  045D  00A9               	movwf	WriteOverheadSPI@address+2
  4982  045E  0844               	movf	RecordMode@address+1,w
  4983  045F  00A8               	movwf	WriteOverheadSPI@address+1
  4984  0460  0843               	movf	RecordMode@address,w
  4985  0461  00A7               	movwf	WriteOverheadSPI@address
  4986  0462  318E  2653  3183   	fcall	_WriteOverheadSPI
  4987  0465                     l2795:	
  4988                           
  4989                           ;launcher_functions.c: 618: }
  4990                           ;launcher_functions.c: 619: if(!((((start))==((end)))?(1):(0)))
  4991  0465  087A               	movf	_end+1,w
  4992  0466  067C               	xorwf	_start+1,w
  4993  0467  1D03               	skipz
  4994  0468  2C6B               	goto	u2295
  4995  0469  0879               	movf	_end,w
  4996  046A  067B               	xorwf	_start,w
  4997  046B                     u2295:	
  4998  046B  1D03               	btfss	3,2
  4999  046C  2C6F               	goto	l2797
  5000  046D  0020               	movlb	0	; select bank0
  5001  046E  2C82               	goto	l2803
  5002  046F                     l2797:	
  5003                           
  5004                           ;launcher_functions.c: 620: {
  5005                           ;launcher_functions.c: 621: WriteSPI(ReadBuffer());
  5006  046F  318C  2494  3183   	fcall	_ReadBuffer
  5007  0472  318C  2454  3183   	fcall	_WriteSPI
  5008                           
  5009                           ;launcher_functions.c: 622: address++;
  5010  0475  3001               	movlw	1
  5011  0476  0020               	movlb	0	; select bank0
  5012  0477  07C3               	addwf	RecordMode@address,f
  5013  0478  3000               	movlw	0
  5014  0479  3DC4               	addwfc	RecordMode@address+1,f
  5015  047A  3000               	movlw	0
  5016  047B  3DC5               	addwfc	RecordMode@address+2,f
  5017  047C  3000               	movlw	0
  5018  047D  3DC6               	addwfc	RecordMode@address+3,f
  5019                           
  5020                           ;launcher_functions.c: 623: count++;
  5021  047E  3001               	movlw	1
  5022  047F  07C1               	addwf	RecordMode@count,f
  5023  0480  3000               	movlw	0
  5024  0481  3DC2               	addwfc	RecordMode@count+1,f
  5025  0482                     l2803:	
  5026  0482  087A               	movf	_end+1,w
  5027  0483  067C               	xorwf	_start+1,w
  5028  0484  1D03               	skipz
  5029  0485  2C88               	goto	u2305
  5030  0486  0879               	movf	_end,w
  5031  0487  067B               	xorwf	_start,w
  5032  0488                     u2305:	
  5033  0488  1903               	skipnz
  5034  0489  2C9F               	goto	l481
  5035  048A  0020               	movlb	0	; select bank0
  5036  048B  0846               	movf	RecordMode@address+3,w
  5037  048C  3A80               	xorlw	128
  5038  048D  00BC               	movwf	??_RecordMode
  5039  048E  3000               	movlw	0
  5040  048F  3A80               	xorlw	128
  5041  0490  023C               	subwf	??_RecordMode,w
  5042  0491  1D03               	skipz
  5043  0492  2C9D               	goto	u2313
  5044  0493  3002               	movlw	2
  5045  0494  0245               	subwf	RecordMode@address+2,w
  5046  0495  1D03               	skipz
  5047  0496  2C9D               	goto	u2313
  5048  0497  3000               	movlw	0
  5049  0498  0244               	subwf	RecordMode@address+1,w
  5050  0499  1D03               	skipz
  5051  049A  2C9D               	goto	u2313
  5052  049B  3000               	movlw	0
  5053  049C  0243               	subwf	RecordMode@address,w
  5054  049D                     u2313:	
  5055  049D  1C03               	skipc
  5056  049E  2C4A               	goto	l2787
  5057  049F                     l481:	
  5058                           
  5059                           ;launcher_functions.c: 624: }
  5060                           ;launcher_functions.c: 625: }
  5061                           ;launcher_functions.c: 626: LATC2 = (1);
  5062  049F  0022               	movlb	2	; select bank2
  5063  04A0  150E               	bsf	14,2	;volatile
  5064                           
  5065                           ;launcher_functions.c: 627: TMR1IE = 0;
  5066  04A1  0021               	movlb	1	; select bank1
  5067  04A2  1011               	bcf	17,0	;volatile
  5068                           
  5069                           ;launcher_functions.c: 628: TMR1ON = 0;
  5070  04A3  0020               	movlb	0	; select bank0
  5071  04A4  1018               	bcf	24,0	;volatile
  5072                           
  5073                           ;launcher_functions.c: 629: _delay((unsigned long)((5)*(16000000/4000.0)));
  5074  04A5  301A               	movlw	26
  5075  04A6  00BD               	movwf	??_RecordMode+1
  5076  04A7  30F8               	movlw	248
  5077  04A8  00BC               	movwf	??_RecordMode
  5078  04A9                     u3017:	
  5079  04A9  0BBC               	decfsz	??_RecordMode,f
  5080  04AA  2CA9               	goto	u3017
  5081  04AB  0BBD               	decfsz	??_RecordMode+1,f
  5082  04AC  2CA9               	goto	u3017
  5083  04AD  0000               	nop
  5084                           
  5085                           ;launcher_functions.c: 632: WriteOverheadSPI(0xBB68);
  5086  04AE  3000               	movlw	0
  5087  04AF  0020               	movlb	0	; select bank0
  5088  04B0  00AA               	movwf	WriteOverheadSPI@address+3
  5089  04B1  3000               	movlw	0
  5090  04B2  00A9               	movwf	WriteOverheadSPI@address+2
  5091  04B3  30BB               	movlw	187
  5092  04B4  00A8               	movwf	WriteOverheadSPI@address+1
  5093  04B5  3068               	movlw	104
  5094  04B6  00A7               	movwf	WriteOverheadSPI@address
  5095  04B7  318E  2653  3183   	fcall	_WriteOverheadSPI
  5096                           
  5097                           ;launcher_functions.c: 633: if(address >= 131072)
  5098  04BA  0020               	movlb	0	; select bank0
  5099  04BB  0846               	movf	RecordMode@address+3,w
  5100  04BC  3A80               	xorlw	128
  5101  04BD  00BC               	movwf	??_RecordMode
  5102  04BE  3000               	movlw	0
  5103  04BF  3A80               	xorlw	128
  5104  04C0  023C               	subwf	??_RecordMode,w
  5105  04C1  1D03               	skipz
  5106  04C2  2CCD               	goto	u2323
  5107  04C3  3002               	movlw	2
  5108  04C4  0245               	subwf	RecordMode@address+2,w
  5109  04C5  1D03               	skipz
  5110  04C6  2CCD               	goto	u2323
  5111  04C7  3000               	movlw	0
  5112  04C8  0244               	subwf	RecordMode@address+1,w
  5113  04C9  1D03               	skipz
  5114  04CA  2CCD               	goto	u2323
  5115  04CB  3000               	movlw	0
  5116  04CC  0243               	subwf	RecordMode@address,w
  5117  04CD                     u2323:	
  5118  04CD  1C03               	skipc
  5119  04CE  2CD9               	goto	l2815
  5120                           
  5121                           ;launcher_functions.c: 634: {
  5122                           ;launcher_functions.c: 635: WriteSPI((131072 - 1)>>16);
  5123  04CF  3001               	movlw	1
  5124  04D0  318C  2454  3183   	fcall	_WriteSPI
  5125                           
  5126                           ;launcher_functions.c: 636: WriteSPI((131072 - 1)>>8);
  5127  04D3  30FF               	movlw	255
  5128  04D4  318C  2454  3183   	fcall	_WriteSPI
  5129                           
  5130                           ;launcher_functions.c: 637: WriteSPI(131072 - 1);
  5131  04D7  30FF               	movlw	255
  5132  04D8  2D05               	goto	L5
  5133  04D9                     l2815:	
  5134                           ;launcher_functions.c: 638: }
  5135                           
  5136                           
  5137                           ;launcher_functions.c: 639: else
  5138                           ;launcher_functions.c: 640: {
  5139                           ;launcher_functions.c: 641: WriteSPI(address>>16);
  5140  04D9  0020               	movlb	0	; select bank0
  5141  04DA  0843               	movf	RecordMode@address,w
  5142  04DB  00BC               	movwf	??_RecordMode
  5143  04DC  0844               	movf	RecordMode@address+1,w
  5144  04DD  00BD               	movwf	??_RecordMode+1
  5145  04DE  0845               	movf	RecordMode@address+2,w
  5146  04DF  00BE               	movwf	??_RecordMode+2
  5147  04E0  0846               	movf	RecordMode@address+3,w
  5148  04E1  00BF               	movwf	??_RecordMode+3
  5149  04E2  3010               	movlw	16
  5150  04E3  00C0               	movwf	??_RecordMode+4
  5151  04E4                     u2335:	
  5152  04E4  37BF               	asrf	??_RecordMode+3,f
  5153  04E5  0CBE               	rrf	??_RecordMode+2,f
  5154  04E6  0CBD               	rrf	??_RecordMode+1,f
  5155  04E7  0CBC               	rrf	??_RecordMode,f
  5156  04E8  0BC0               	decfsz	??_RecordMode+4,f
  5157  04E9  2CE4               	goto	u2335
  5158  04EA  083C               	movf	??_RecordMode,w
  5159  04EB  318C  2454  3183   	fcall	_WriteSPI
  5160                           
  5161                           ;launcher_functions.c: 642: WriteSPI(address>>8);
  5162  04EE  0020               	movlb	0	; select bank0
  5163  04EF  0843               	movf	RecordMode@address,w
  5164  04F0  00BC               	movwf	??_RecordMode
  5165  04F1  0844               	movf	RecordMode@address+1,w
  5166  04F2  00BD               	movwf	??_RecordMode+1
  5167  04F3  0845               	movf	RecordMode@address+2,w
  5168  04F4  00BE               	movwf	??_RecordMode+2
  5169  04F5  0846               	movf	RecordMode@address+3,w
  5170  04F6  00BF               	movwf	??_RecordMode+3
  5171  04F7  3008               	movlw	8
  5172  04F8  00C0               	movwf	??_RecordMode+4
  5173  04F9                     u2345:	
  5174  04F9  37BF               	asrf	??_RecordMode+3,f
  5175  04FA  0CBE               	rrf	??_RecordMode+2,f
  5176  04FB  0CBD               	rrf	??_RecordMode+1,f
  5177  04FC  0CBC               	rrf	??_RecordMode,f
  5178  04FD  0BC0               	decfsz	??_RecordMode+4,f
  5179  04FE  2CF9               	goto	u2345
  5180  04FF  083C               	movf	??_RecordMode,w
  5181  0500  318C  2454  3183   	fcall	_WriteSPI
  5182                           
  5183                           ;launcher_functions.c: 643: WriteSPI(address);
  5184  0503  0020               	movlb	0	; select bank0
  5185  0504  0843               	movf	RecordMode@address,w
  5186  0505                     L5:	
  5187  0505  318C  2454  3183   	fcall	_WriteSPI
  5188                           
  5189                           ;launcher_functions.c: 644: }
  5190                           ;launcher_functions.c: 646: LATC2 = (1);
  5191  0508  0022               	movlb	2	; select bank2
  5192  0509  150E               	bsf	14,2	;volatile
  5193                           
  5194                           ;launcher_functions.c: 647: if(hasValidGPSFlag)
  5195  050A  0020               	movlb	0	; select bank0
  5196  050B  0867               	movf	_hasValidGPSFlag,w
  5197  050C  1903               	btfsc	3,2
  5198  050D  2D12               	goto	l2825
  5199                           
  5200                           ;launcher_functions.c: 648: {
  5201                           ;launcher_functions.c: 649: SendGPSSPI();
  5202  050E  318F  2714         	fcall	_SendGPSSPI
  5203                           
  5204                           ;launcher_functions.c: 650: hasValidGPSFlag = 0;
  5205  0510  0020               	movlb	0	; select bank0
  5206  0511  01E7               	clrf	_hasValidGPSFlag
  5207  0512                     l2825:	
  5208                           
  5209                           ;launcher_functions.c: 651: }
  5210                           ;launcher_functions.c: 652: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  5211  0512  0022               	movlb	2	; select bank2
  5212  0513  080D               	movf	13,w	;volatile
  5213  0514  39FF               	andlw	255
  5214  0515  39DF               	andlw	223
  5215  0516  0020               	movlb	0	; select bank0
  5216  0517  00BC               	movwf	??_RecordMode
  5217  0518  080D               	movf	13,w	;volatile
  5218  0519  063C               	xorwf	??_RecordMode,w
  5219  051A  3900               	andlw	-256
  5220  051B  063C               	xorwf	??_RecordMode,w
  5221  051C  008D               	movwf	13	;volatile
  5222                           
  5223                           ;launcher_functions.c: 653: (start) = 0;
  5224  051D  01FB               	clrf	_start
  5225  051E  01FC               	clrf	_start+1
  5226                           
  5227                           ;launcher_functions.c: 654: (end) = 0;
  5228  051F  01F9               	clrf	_end
  5229  0520  01FA               	clrf	_end+1
  5230                           
  5231                           ;launcher_functions.c: 655: SSPCON1bits.SSPEN=0;
  5232  0521  0024               	movlb	4	; select bank4
  5233  0522  1295               	bcf	21,5	;volatile
  5234                           
  5235                           ;launcher_functions.c: 658: PORTCbits.PORTC = LATCbits.LATC & 0xD7;
  5236  0523  0022               	movlb	2	; select bank2
  5237  0524  080E               	movf	14,w	;volatile
  5238  0525  39FF               	andlw	255
  5239  0526  39D7               	andlw	215
  5240  0527  0020               	movlb	0	; select bank0
  5241  0528  00BC               	movwf	??_RecordMode
  5242  0529  080E               	movf	14,w	;volatile
  5243  052A  063C               	xorwf	??_RecordMode,w
  5244  052B  3900               	andlw	-256
  5245  052C  063C               	xorwf	??_RecordMode,w
  5246  052D  008E               	movwf	14	;volatile
  5247                           
  5248                           ;launcher_functions.c: 659: PORTAbits.RA4 = 0;
  5249  052E  120C               	bcf	12,4	;volatile
  5250  052F  0008               	return
  5251  0530                     __end_of_RecordMode:	
  5252                           
  5253                           	psect	text15
  5254  0F14                     __ptext15:	
  5255 ;; *************** function _SendGPSSPI *****************
  5256 ;; Defined at:
  5257 ;;		line 662 in file "launcher_functions.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  address         4   22[BANK0 ] long 
  5262 ;;  x               2   26[BANK0 ] int 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;		None               void
  5265 ;; Registers used:
  5266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5272 ;;      Params:         0       0       0       0       0       0       0
  5273 ;;      Locals:         0       6       0       0       0       0       0
  5274 ;;      Temps:          0       1       0       0       0       0       0
  5275 ;;      Totals:         0       7       0       0       0       0       0
  5276 ;;Total ram usage:        7 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    5
  5279 ;; This function calls:
  5280 ;;		_InitSPI
  5281 ;;		_WriteOverheadSPI
  5282 ;;		_WriteSPI
  5283 ;; This function is called by:
  5284 ;;		_RecordMode
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _SendGPSSPI
  5290  0F14                     _SendGPSSPI:	
  5291                           
  5292                           ;launcher_functions.c: 664: long int address = 0xBB68 + 3;
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5296  0F14  3000               	movlw	0
  5297  0F15  0020               	movlb	0	; select bank0
  5298  0F16  00B9               	movwf	SendGPSSPI@address+3
  5299  0F17  3000               	movlw	0
  5300  0F18  00B8               	movwf	SendGPSSPI@address+2
  5301  0F19  30BB               	movlw	187
  5302  0F1A  00B7               	movwf	SendGPSSPI@address+1
  5303  0F1B  306B               	movlw	107
  5304  0F1C  00B6               	movwf	SendGPSSPI@address
  5305                           
  5306                           ;launcher_functions.c: 665: int x;
  5307                           ;launcher_functions.c: 666: PORTAbits.RA4 = 1;
  5308  0F1D  160C               	bsf	12,4	;volatile
  5309                           
  5310                           ;launcher_functions.c: 667: if(SSPCON1bits.SSPEN == 0)
  5311  0F1E  0024               	movlb	4	; select bank4
  5312  0F1F  1A95               	btfsc	21,5	;volatile
  5313  0F20  2F24               	goto	l487
  5314                           
  5315                           ;launcher_functions.c: 668: InitSPI();
  5316  0F21  318C  2430  318F   	fcall	_InitSPI
  5317  0F24                     l487:	
  5318                           
  5319                           ;launcher_functions.c: 682: WriteOverheadSPI(address);
  5320  0F24  0020               	movlb	0	; select bank0
  5321  0F25  0839               	movf	SendGPSSPI@address+3,w
  5322  0F26  00AA               	movwf	WriteOverheadSPI@address+3
  5323  0F27  0838               	movf	SendGPSSPI@address+2,w
  5324  0F28  00A9               	movwf	WriteOverheadSPI@address+2
  5325  0F29  0837               	movf	SendGPSSPI@address+1,w
  5326  0F2A  00A8               	movwf	WriteOverheadSPI@address+1
  5327  0F2B  0836               	movf	SendGPSSPI@address,w
  5328  0F2C  00A7               	movwf	WriteOverheadSPI@address
  5329  0F2D  318E  2653  318F   	fcall	_WriteOverheadSPI
  5330                           
  5331                           ;launcher_functions.c: 683: for(x=0;x<3;x++)
  5332  0F30  0020               	movlb	0	; select bank0
  5333  0F31  01BA               	clrf	SendGPSSPI@x
  5334  0F32  01BB               	clrf	SendGPSSPI@x+1
  5335  0F33  083B               	movf	SendGPSSPI@x+1,w
  5336  0F34  3A80               	xorlw	128
  5337  0F35  00B5               	movwf	??_SendGPSSPI
  5338  0F36  3080               	movlw	128
  5339  0F37  0235               	subwf	??_SendGPSSPI,w
  5340  0F38  1D03               	skipz
  5341  0F39  2F3C               	goto	u2165
  5342  0F3A  3003               	movlw	3
  5343  0F3B  023A               	subwf	SendGPSSPI@x,w
  5344  0F3C                     u2165:	
  5345  0F3C  1803               	btfsc	3,0
  5346  0F3D  2F57               	goto	l2563
  5347  0F3E                     l2557:	
  5348                           
  5349                           ;launcher_functions.c: 684: {
  5350                           ;launcher_functions.c: 685: WriteSPI(validLatitude[x]);
  5351  0F3E  0020               	movlb	0	; select bank0
  5352  0F3F  083A               	movf	SendGPSSPI@x,w
  5353  0F40  3EE2               	addlw	_validLatitude& (0+255)
  5354  0F41  0086               	movwf	6
  5355  0F42  0187               	clrf	7
  5356  0F43  0801               	movf	1,w
  5357  0F44  318C  2454  318F   	fcall	_WriteSPI
  5358  0F47  3001               	movlw	1
  5359  0F48  0020               	movlb	0	; select bank0
  5360  0F49  07BA               	addwf	SendGPSSPI@x,f
  5361  0F4A  3000               	movlw	0
  5362  0F4B  3DBB               	addwfc	SendGPSSPI@x+1,f
  5363  0F4C  083B               	movf	SendGPSSPI@x+1,w
  5364  0F4D  3A80               	xorlw	128
  5365  0F4E  00B5               	movwf	??_SendGPSSPI
  5366  0F4F  3080               	movlw	128
  5367  0F50  0235               	subwf	??_SendGPSSPI,w
  5368  0F51  1D03               	skipz
  5369  0F52  2F55               	goto	u2175
  5370  0F53  3003               	movlw	3
  5371  0F54  023A               	subwf	SendGPSSPI@x,w
  5372  0F55                     u2175:	
  5373  0F55  1C03               	skipc
  5374  0F56  2F3E               	goto	l2557
  5375  0F57                     l2563:	
  5376                           
  5377                           ;launcher_functions.c: 686: }
  5378                           ;launcher_functions.c: 687: WriteSPI(validNorthSouth);
  5379  0F57  0020               	movlb	0	; select bank0
  5380  0F58  086D               	movf	_validNorthSouth,w
  5381  0F59  318C  2454  318F   	fcall	_WriteSPI
  5382                           
  5383                           ;launcher_functions.c: 688: for(x=0;x<3;x++)
  5384  0F5C  0020               	movlb	0	; select bank0
  5385  0F5D  01BA               	clrf	SendGPSSPI@x
  5386  0F5E  01BB               	clrf	SendGPSSPI@x+1
  5387  0F5F  083B               	movf	SendGPSSPI@x+1,w
  5388  0F60  3A80               	xorlw	128
  5389  0F61  00B5               	movwf	??_SendGPSSPI
  5390  0F62  3080               	movlw	128
  5391  0F63  0235               	subwf	??_SendGPSSPI,w
  5392  0F64  1D03               	skipz
  5393  0F65  2F68               	goto	u2185
  5394  0F66  3003               	movlw	3
  5395  0F67  023A               	subwf	SendGPSSPI@x,w
  5396  0F68                     u2185:	
  5397  0F68  1803               	btfsc	3,0
  5398  0F69  2F83               	goto	l2577
  5399  0F6A                     l2571:	
  5400                           
  5401                           ;launcher_functions.c: 689: {
  5402                           ;launcher_functions.c: 690: WriteSPI(validLongitude[x]);
  5403  0F6A  0020               	movlb	0	; select bank0
  5404  0F6B  083A               	movf	SendGPSSPI@x,w
  5405  0F6C  3EE5               	addlw	_validLongitude& (0+255)
  5406  0F6D  0086               	movwf	6
  5407  0F6E  0187               	clrf	7
  5408  0F6F  0801               	movf	1,w
  5409  0F70  318C  2454  318F   	fcall	_WriteSPI
  5410  0F73  3001               	movlw	1
  5411  0F74  0020               	movlb	0	; select bank0
  5412  0F75  07BA               	addwf	SendGPSSPI@x,f
  5413  0F76  3000               	movlw	0
  5414  0F77  3DBB               	addwfc	SendGPSSPI@x+1,f
  5415  0F78  083B               	movf	SendGPSSPI@x+1,w
  5416  0F79  3A80               	xorlw	128
  5417  0F7A  00B5               	movwf	??_SendGPSSPI
  5418  0F7B  3080               	movlw	128
  5419  0F7C  0235               	subwf	??_SendGPSSPI,w
  5420  0F7D  1D03               	skipz
  5421  0F7E  2F81               	goto	u2195
  5422  0F7F  3003               	movlw	3
  5423  0F80  023A               	subwf	SendGPSSPI@x,w
  5424  0F81                     u2195:	
  5425  0F81  1C03               	skipc
  5426  0F82  2F6A               	goto	l2571
  5427  0F83                     l2577:	
  5428                           
  5429                           ;launcher_functions.c: 691: }
  5430                           ;launcher_functions.c: 692: WriteSPI(validEastWest);
  5431  0F83  0020               	movlb	0	; select bank0
  5432  0F84  086C               	movf	_validEastWest,w
  5433  0F85  318C  2454         	fcall	_WriteSPI
  5434                           
  5435                           ;launcher_functions.c: 694: LATC2 = (1);
  5436  0F87  0022               	movlb	2	; select bank2
  5437  0F88  150E               	bsf	14,2	;volatile
  5438  0F89  0008               	return
  5439  0F8A                     __end_of_SendGPSSPI:	
  5440                           ;launcher_functions.c: 702: return;
  5441                           
  5442                           
  5443                           	psect	text16
  5444  0E53                     __ptext16:	
  5445 ;; *************** function _WriteOverheadSPI *****************
  5446 ;; Defined at:
  5447 ;;		line 182 in file "launcher_functions.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  address         4    7[BANK0 ] long 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5452 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;		None               void
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0, pclath, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5462 ;;      Params:         0       4       0       0       0       0       0
  5463 ;;      Locals:         0       4       0       0       0       0       0
  5464 ;;      Temps:          0       6       0       0       0       0       0
  5465 ;;      Totals:         0      14       0       0       0       0       0
  5466 ;;Total ram usage:       14 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    4
  5469 ;; This function calls:
  5470 ;;		_ReadStatusSPI
  5471 ;;		_WriteSPI
  5472 ;; This function is called by:
  5473 ;;		_RecordMode
  5474 ;;		_SendGPSSPI
  5475 ;;		_PreRecordMode
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _WriteOverheadSPI
  5481  0E53                     _WriteOverheadSPI:	
  5482                           
  5483                           ;launcher_functions.c: 184: unsigned char address_bytes[3];
  5484                           ;launcher_functions.c: 185: unsigned char StatusReg;
  5485                           ;launcher_functions.c: 187: address_bytes[0]=(unsigned char)(address>>16);
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5489  0E53  0020               	movlb	0	; select bank0
  5490  0E54  0827               	movf	WriteOverheadSPI@address,w
  5491  0E55  00AB               	movwf	??_WriteOverheadSPI
  5492  0E56  0828               	movf	WriteOverheadSPI@address+1,w
  5493  0E57  00AC               	movwf	??_WriteOverheadSPI+1
  5494  0E58  0829               	movf	WriteOverheadSPI@address+2,w
  5495  0E59  00AD               	movwf	??_WriteOverheadSPI+2
  5496  0E5A  082A               	movf	WriteOverheadSPI@address+3,w
  5497  0E5B  00AE               	movwf	??_WriteOverheadSPI+3
  5498  0E5C  3010               	movlw	16
  5499  0E5D  00AF               	movwf	??_WriteOverheadSPI+4
  5500  0E5E                     u1475:	
  5501  0E5E  37AE               	asrf	??_WriteOverheadSPI+3,f
  5502  0E5F  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5503  0E60  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5504  0E61  0CAB               	rrf	??_WriteOverheadSPI,f
  5505  0E62  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5506  0E63  2E5E               	goto	u1475
  5507  0E64  082B               	movf	??_WriteOverheadSPI,w
  5508  0E65  00B0               	movwf	??_WriteOverheadSPI+5
  5509  0E66  0830               	movf	??_WriteOverheadSPI+5,w
  5510  0E67  00B1               	movwf	WriteOverheadSPI@address_bytes
  5511                           
  5512                           ;launcher_functions.c: 188: address_bytes[1]=(unsigned char)(address>>8);
  5513  0E68  0827               	movf	WriteOverheadSPI@address,w
  5514  0E69  00AB               	movwf	??_WriteOverheadSPI
  5515  0E6A  0828               	movf	WriteOverheadSPI@address+1,w
  5516  0E6B  00AC               	movwf	??_WriteOverheadSPI+1
  5517  0E6C  0829               	movf	WriteOverheadSPI@address+2,w
  5518  0E6D  00AD               	movwf	??_WriteOverheadSPI+2
  5519  0E6E  082A               	movf	WriteOverheadSPI@address+3,w
  5520  0E6F  00AE               	movwf	??_WriteOverheadSPI+3
  5521  0E70  3008               	movlw	8
  5522  0E71  00AF               	movwf	??_WriteOverheadSPI+4
  5523  0E72                     u1485:	
  5524  0E72  37AE               	asrf	??_WriteOverheadSPI+3,f
  5525  0E73  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5526  0E74  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5527  0E75  0CAB               	rrf	??_WriteOverheadSPI,f
  5528  0E76  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5529  0E77  2E72               	goto	u1485
  5530  0E78  082B               	movf	??_WriteOverheadSPI,w
  5531  0E79  00B0               	movwf	??_WriteOverheadSPI+5
  5532  0E7A  0830               	movf	??_WriteOverheadSPI+5,w
  5533  0E7B  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5534                           
  5535                           ;launcher_functions.c: 189: address_bytes[2]=(unsigned char)(address);
  5536  0E7C  0827               	movf	WriteOverheadSPI@address,w
  5537  0E7D  00AB               	movwf	??_WriteOverheadSPI
  5538  0E7E  082B               	movf	??_WriteOverheadSPI,w
  5539  0E7F  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5540  0E80                     l2127:	
  5541                           ;launcher_functions.c: 191: do
  5542                           
  5543                           
  5544                           ;launcher_functions.c: 192: {
  5545                           ;launcher_functions.c: 193: StatusReg = (ReadStatusSPI() & 0x01);
  5546  0E80  318C  240D  318E   	fcall	_ReadStatusSPI
  5547  0E83  3901               	andlw	1
  5548  0E84  0020               	movlb	0	; select bank0
  5549  0E85  00AB               	movwf	??_WriteOverheadSPI
  5550  0E86  082B               	movf	??_WriteOverheadSPI,w
  5551  0E87  00B4               	movwf	WriteOverheadSPI@StatusReg
  5552                           
  5553                           ;launcher_functions.c: 194: } while (StatusReg);
  5554  0E88  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5555  0E89  1D03               	skipz
  5556  0E8A  2E80               	goto	l2127
  5557                           
  5558                           ;launcher_functions.c: 197: LATC2 = (0);
  5559  0E8B  0022               	movlb	2	; select bank2
  5560  0E8C  110E               	bcf	14,2	;volatile
  5561                           
  5562                           ;launcher_functions.c: 198: WriteSPI((0x06));
  5563  0E8D  3006               	movlw	6
  5564  0E8E  318C  2454  318E   	fcall	_WriteSPI
  5565                           
  5566                           ;launcher_functions.c: 199: LATC2 = (1);
  5567  0E91  0022               	movlb	2	; select bank2
  5568  0E92  150E               	bsf	14,2	;volatile
  5569  0E93                     l349:	
  5570                           ;launcher_functions.c: 201: do
  5571                           
  5572                           
  5573                           ;launcher_functions.c: 202: {
  5574                           ;launcher_functions.c: 203: StatusReg = (ReadStatusSPI() & 0x02);
  5575  0E93  318C  240D  318E   	fcall	_ReadStatusSPI
  5576  0E96  3902               	andlw	2
  5577  0E97  0020               	movlb	0	; select bank0
  5578  0E98  00AB               	movwf	??_WriteOverheadSPI
  5579  0E99  082B               	movf	??_WriteOverheadSPI,w
  5580  0E9A  00B4               	movwf	WriteOverheadSPI@StatusReg
  5581                           
  5582                           ;launcher_functions.c: 204: } while (!StatusReg);
  5583  0E9B  0834               	movf	WriteOverheadSPI@StatusReg,w
  5584  0E9C  1903               	btfsc	3,2
  5585  0E9D  2E93               	goto	l349
  5586                           
  5587                           ;launcher_functions.c: 209: LATC2=(0);
  5588  0E9E  0022               	movlb	2	; select bank2
  5589  0E9F  110E               	bcf	14,2	;volatile
  5590                           
  5591                           ;launcher_functions.c: 210: WriteSPI((0x02));
  5592  0EA0  3002               	movlw	2
  5593  0EA1  318C  2454  318E   	fcall	_WriteSPI
  5594                           
  5595                           ;launcher_functions.c: 211: WriteSPI(address_bytes[0]);
  5596  0EA4  0020               	movlb	0	; select bank0
  5597  0EA5  0831               	movf	WriteOverheadSPI@address_bytes,w
  5598  0EA6  318C  2454  318E   	fcall	_WriteSPI
  5599                           
  5600                           ;launcher_functions.c: 212: WriteSPI(address_bytes[1]);
  5601  0EA9  0020               	movlb	0	; select bank0
  5602  0EAA  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5603  0EAB  318C  2454  318E   	fcall	_WriteSPI
  5604                           
  5605                           ;launcher_functions.c: 213: WriteSPI(address_bytes[2]);
  5606  0EAE  0020               	movlb	0	; select bank0
  5607  0EAF  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5608  0EB0  318C  2454         	fcall	_WriteSPI
  5609  0EB2  0008               	return
  5610  0EB3                     __end_of_WriteOverheadSPI:	
  5611                           ;launcher_functions.c: 215: return;
  5612                           
  5613                           
  5614                           	psect	text17
  5615  0C30                     __ptext17:	
  5616 ;; *************** function _InitSPI *****************
  5617 ;; Defined at:
  5618 ;;		line 122 in file "launcher_functions.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;		None               void
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5632 ;;      Params:         0       0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0
  5635 ;;      Totals:         0       0       0       0       0       0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    2
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_RecordMode
  5643 ;;		_SendGPSSPI
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           
  5648                           ;psect for function _InitSPI
  5649  0C30                     _InitSPI:	
  5650                           
  5651                           ;launcher_functions.c: 125: TRISCbits.TRISC2 = 0;
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5655  0C30  0021               	movlb	1	; select bank1
  5656  0C31  110E               	bcf	14,2	;volatile
  5657                           
  5658                           ;launcher_functions.c: 126: TRISCbits.TRISC3 = 0;
  5659  0C32  118E               	bcf	14,3	;volatile
  5660                           
  5661                           ;launcher_functions.c: 127: TRISCbits.TRISC4 = 1;
  5662  0C33  160E               	bsf	14,4	;volatile
  5663                           
  5664                           ;launcher_functions.c: 128: TRISCbits.TRISC5 = 0;
  5665  0C34  128E               	bcf	14,5	;volatile
  5666                           
  5667                           ;launcher_functions.c: 130: LATC2 = (1);
  5668  0C35  0022               	movlb	2	; select bank2
  5669  0C36  150E               	bsf	14,2	;volatile
  5670                           
  5671                           ;launcher_functions.c: 133: SSPCON1bits.SSPEN=0x00;
  5672  0C37  0024               	movlb	4	; select bank4
  5673  0C38  1295               	bcf	21,5	;volatile
  5674                           
  5675                           ;launcher_functions.c: 134: SSPCON1bits.SSPM=0x01;
  5676  0C39  0815               	movf	21,w	;volatile
  5677  0C3A  39F0               	andlw	-16
  5678  0C3B  3801               	iorlw	1
  5679  0C3C  0095               	movwf	21	;volatile
  5680                           
  5681                           ;launcher_functions.c: 135: SSPCON1bits.CKP=0;
  5682  0C3D  1215               	bcf	21,4	;volatile
  5683                           
  5684                           ;launcher_functions.c: 136: SSPSTATbits.CKE=1;
  5685  0C3E  1714               	bsf	20,6	;volatile
  5686                           
  5687                           ;launcher_functions.c: 137: SSPSTATbits.SMP=0;
  5688  0C3F  1394               	bcf	20,7	;volatile
  5689                           
  5690                           ;launcher_functions.c: 138: SSPCON1bits.SSPEN=0x01;
  5691  0C40  1695               	bsf	21,5	;volatile
  5692  0C41  0008               	return
  5693  0C42                     __end_of_InitSPI:	
  5694                           
  5695                           	psect	text18
  5696  0C94                     __ptext18:	
  5697 ;; *************** function _ReadBuffer *****************
  5698 ;; Defined at:
  5699 ;;		line 230 in file "launcher_functions.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  read_data       1    1[BANK0 ] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      unsigned char 
  5706 ;; Registers used:
  5707 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5713 ;;      Params:         0       0       0       0       0       0       0
  5714 ;;      Locals:         0       1       0       0       0       0       0
  5715 ;;      Temps:          0       1       0       0       0       0       0
  5716 ;;      Totals:         0       2       0       0       0       0       0
  5717 ;;Total ram usage:        2 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    2
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_RecordMode
  5724 ;;		_PreRecordMode
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           
  5729                           ;psect for function _ReadBuffer
  5730  0C94                     _ReadBuffer:	
  5731                           
  5732                           ;launcher_functions.c: 232: unsigned char read_data;
  5733                           ;launcher_functions.c: 234: read_data = buffer[start];
  5734                           
  5735                           ;incstack = 0
  5736                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5737  0C94  087B               	movf	_start,w
  5738  0C95  3EA0               	addlw	_buffer& (0+255)
  5739  0C96  0086               	movwf	6
  5740  0C97  3001               	movlw	1	; select bank3/4
  5741  0C98  0087               	movwf	7
  5742  0C99  0801               	movf	1,w
  5743  0C9A  0020               	movlb	0	; select bank0
  5744  0C9B  00A0               	movwf	??_ReadBuffer
  5745  0C9C  0820               	movf	??_ReadBuffer,w
  5746  0C9D  00A1               	movwf	ReadBuffer@read_data
  5747                           
  5748                           ;launcher_functions.c: 235: if (start == 51)
  5749  0C9E  3033               	movlw	51
  5750  0C9F  067B               	xorwf	_start,w
  5751  0CA0  047C               	iorwf	_start+1,w
  5752  0CA1  1D03               	skipz
  5753  0CA2  2CA6               	goto	l2289
  5754                           
  5755                           ;launcher_functions.c: 236: start = 0;
  5756  0CA3  01FB               	clrf	_start
  5757  0CA4  01FC               	clrf	_start+1
  5758  0CA5  2CAA               	goto	l360
  5759  0CA6                     l2289:	
  5760                           
  5761                           ;launcher_functions.c: 237: else
  5762                           ;launcher_functions.c: 238: start++;
  5763  0CA6  3001               	movlw	1
  5764  0CA7  07FB               	addwf	_start,f
  5765  0CA8  3000               	movlw	0
  5766  0CA9  3DFC               	addwfc	_start+1,f
  5767  0CAA                     l360:	
  5768                           
  5769                           ;launcher_functions.c: 239: return read_data;
  5770  0CAA  0821               	movf	ReadBuffer@read_data,w
  5771  0CAB  0008               	return
  5772  0CAC                     __end_of_ReadBuffer:	
  5773                           
  5774                           	psect	text19
  5775  0BFE                     __ptext19:	
  5776 ;; *************** function _CheckDisconnect *****************
  5777 ;; Defined at:
  5778 ;;		line 706 in file "launcher_functions.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;		None
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  status          1    8[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      unsigned char 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0, pclath, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5792 ;;      Params:         0       0       0       0       0       0       0
  5793 ;;      Locals:         0       1       0       0       0       0       0
  5794 ;;      Temps:          0       1       0       0       0       0       0
  5795 ;;      Totals:         0       2       0       0       0       0       0
  5796 ;;Total ram usage:        2 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    4
  5799 ;; This function calls:
  5800 ;;		_ReadStatusSPI
  5801 ;; This function is called by:
  5802 ;;		_RecordMode
  5803 ;;		_PreRecordMode
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _CheckDisconnect
  5809  0BFE                     _CheckDisconnect:	
  5810                           
  5811                           ;launcher_functions.c: 708: unsigned char status;
  5812                           ;launcher_functions.c: 709: status = ReadStatusSPI();
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in _CheckDisconnect: [wreg+status,2+status,0+pclath+cstack]
  5816  0BFE  318C  240D  318B   	fcall	_ReadStatusSPI
  5817  0C01  0020               	movlb	0	; select bank0
  5818  0C02  00A7               	movwf	??_CheckDisconnect
  5819  0C03  0827               	movf	??_CheckDisconnect,w
  5820  0C04  00A8               	movwf	CheckDisconnect@status
  5821                           
  5822                           ;launcher_functions.c: 710: if(status==0xff)
  5823  0C05  0828               	movf	CheckDisconnect@status,w
  5824  0C06  3AFF               	xorlw	255
  5825  0C07  1D03               	skipz
  5826  0C08  2C0B               	goto	l2539
  5827                           
  5828                           ;launcher_functions.c: 711: return 1;
  5829  0C09  3001               	movlw	1
  5830  0C0A  0008               	return
  5831  0C0B                     l2539:	
  5832                           
  5833                           ;launcher_functions.c: 712: else
  5834                           ;launcher_functions.c: 713: return 0;
  5835  0C0B  3000               	movlw	0
  5836  0C0C  0008               	return
  5837  0C0D                     __end_of_CheckDisconnect:	
  5838                           
  5839                           	psect	text20
  5840  0C0D                     __ptext20:	
  5841 ;; *************** function _ReadStatusSPI *****************
  5842 ;; Defined at:
  5843 ;;		line 170 in file "launcher_functions.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      unsigned char 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, pclath, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5857 ;;      Params:         0       0       0       0       0       0       0
  5858 ;;      Locals:         0       1       0       0       0       0       0
  5859 ;;      Temps:          0       1       0       0       0       0       0
  5860 ;;      Totals:         0       2       0       0       0       0       0
  5861 ;;Total ram usage:        2 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    3
  5864 ;; This function calls:
  5865 ;;		_ReadSPI
  5866 ;;		_WriteSPI
  5867 ;; This function is called by:
  5868 ;;		_WriteOverheadSPI
  5869 ;;		_CheckDisconnect
  5870 ;;		_ReadOverheadSPI
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           
  5875                           ;psect for function _ReadStatusSPI
  5876  0C0D                     _ReadStatusSPI:	
  5877                           
  5878                           ;launcher_functions.c: 172: unsigned char dataRead;
  5879                           ;launcher_functions.c: 174: LATC2=(0);
  5880                           
  5881                           ;incstack = 0
  5882                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5883  0C0D  0022               	movlb	2	; select bank2
  5884  0C0E  110E               	bcf	14,2	;volatile
  5885                           
  5886                           ;launcher_functions.c: 175: WriteSPI((0x05));
  5887  0C0F  3005               	movlw	5
  5888  0C10  318C  2454  318C   	fcall	_WriteSPI
  5889                           
  5890                           ;launcher_functions.c: 176: dataRead = ReadSPI();
  5891  0C13  318B  23D4         	fcall	_ReadSPI
  5892  0C15  0020               	movlb	0	; select bank0
  5893  0C16  00A5               	movwf	??_ReadStatusSPI
  5894  0C17  0825               	movf	??_ReadStatusSPI,w
  5895  0C18  00A6               	movwf	ReadStatusSPI@dataRead
  5896                           
  5897                           ;launcher_functions.c: 177: LATC2=(1);
  5898  0C19  0022               	movlb	2	; select bank2
  5899  0C1A  150E               	bsf	14,2	;volatile
  5900                           
  5901                           ;launcher_functions.c: 179: return(dataRead);
  5902  0C1B  0020               	movlb	0	; select bank0
  5903  0C1C  0826               	movf	ReadStatusSPI@dataRead,w
  5904  0C1D  0008               	return
  5905  0C1E                     __end_of_ReadStatusSPI:	
  5906                           
  5907                           	psect	text21
  5908  0C54                     __ptext21:	
  5909 ;; *************** function _WriteSPI *****************
  5910 ;; Defined at:
  5911 ;;		line 150 in file "launcher_functions.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  databyte        1    wreg     unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  databyte        1    4[BANK0 ] unsigned char 
  5916 ;;  temp            2    2[BANK0 ] unsigned int 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;		None               void
  5919 ;; Registers used:
  5920 ;;		wreg
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5926 ;;      Params:         0       0       0       0       0       0       0
  5927 ;;      Locals:         0       3       0       0       0       0       0
  5928 ;;      Temps:          0       2       0       0       0       0       0
  5929 ;;      Totals:         0       5       0       0       0       0       0
  5930 ;;Total ram usage:        5 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    2
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_ReadStatusSPI
  5937 ;;		_WriteOverheadSPI
  5938 ;;		_RecordMode
  5939 ;;		_SendGPSSPI
  5940 ;;		_ReadOverheadSPI
  5941 ;;		_PreRecordMode
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _WriteSPI
  5947  0C54                     _WriteSPI:	
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in _WriteSPI: [wreg]
  5951                           ;WriteSPI@databyte stored from wreg
  5952  0C54  0020               	movlb	0	; select bank0
  5953  0C55  00A4               	movwf	WriteSPI@databyte
  5954                           
  5955                           ;launcher_functions.c: 152: unsigned int temp;
  5956                           ;launcher_functions.c: 153: temp = SSPBUF;
  5957  0C56  0024               	movlb	4	; select bank4
  5958  0C57  0811               	movf	17,w	;volatile
  5959  0C58  0020               	movlb	0	; select bank0
  5960  0C59  00A0               	movwf	??_WriteSPI
  5961  0C5A  01A1               	clrf	??_WriteSPI+1
  5962  0C5B  0820               	movf	??_WriteSPI,w
  5963  0C5C  00A2               	movwf	WriteSPI@temp
  5964  0C5D  0821               	movf	??_WriteSPI+1,w
  5965  0C5E  00A3               	movwf	WriteSPI@temp+1
  5966                           
  5967                           ;launcher_functions.c: 154: PIR1bits.SSP1IF=0;
  5968  0C5F  1191               	bcf	17,3	;volatile
  5969                           
  5970                           ;launcher_functions.c: 155: SSPBUF = databyte;
  5971  0C60  0824               	movf	WriteSPI@databyte,w
  5972  0C61  0024               	movlb	4	; select bank4
  5973  0C62  0091               	movwf	17	;volatile
  5974  0C63                     l332:	
  5975                           ;launcher_functions.c: 156: while(!PIR1bits.SSP1IF);
  5976                           
  5977  0C63  0020               	movlb	0	; select bank0
  5978  0C64  1991               	btfsc	17,3	;volatile
  5979  0C65  0008               	return
  5980  0C66  2C63               	goto	l332
  5981  0C67                     __end_of_WriteSPI:	
  5982                           
  5983                           	psect	text22
  5984  0BD4                     __ptext22:	
  5985 ;; *************** function _ReadSPI *****************
  5986 ;; Defined at:
  5987 ;;		line 159 in file "launcher_functions.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      unsigned char 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6001 ;;      Params:         0       0       0       0       0       0       0
  6002 ;;      Locals:         0       1       0       0       0       0       0
  6003 ;;      Temps:          0       1       0       0       0       0       0
  6004 ;;      Totals:         0       2       0       0       0       0       0
  6005 ;;Total ram usage:        2 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    2
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_ReadStatusSPI
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function _ReadSPI
  6017  0BD4                     _ReadSPI:	
  6018                           
  6019                           ;launcher_functions.c: 161: unsigned char dataByte;
  6020                           ;launcher_functions.c: 163: SSPBUF = 0x00;
  6021                           
  6022                           ;incstack = 0
  6023                           ; Regs used in _ReadSPI: [wreg+status,2]
  6024  0BD4  0024               	movlb	4	; select bank4
  6025  0BD5  0191               	clrf	17	;volatile
  6026  0BD6                     l338:	
  6027                           ;launcher_functions.c: 164: while(!SSPSTATbits.BF);
  6028                           
  6029  0BD6  1C14               	btfss	20,0	;volatile
  6030  0BD7  2BD6               	goto	l338
  6031                           
  6032                           ;launcher_functions.c: 165: dataByte = SSPBUF;
  6033  0BD8  0811               	movf	17,w	;volatile
  6034  0BD9  0020               	movlb	0	; select bank0
  6035  0BDA  00A0               	movwf	??_ReadSPI
  6036  0BDB  0820               	movf	??_ReadSPI,w
  6037  0BDC  00A1               	movwf	ReadSPI@dataByte
  6038                           
  6039                           ;launcher_functions.c: 166: PIR1bits.SSP1IF=0;
  6040  0BDD  1191               	bcf	17,3	;volatile
  6041                           
  6042                           ;launcher_functions.c: 167: return (dataByte);
  6043  0BDE  0821               	movf	ReadSPI@dataByte,w
  6044  0BDF  0008               	return
  6045  0BE0                     __end_of_ReadSPI:	
  6046                           
  6047                           	psect	text23
  6048  0BA5                     __ptext23:	
  6049 ;; *************** function _InitWatchdog *****************
  6050 ;; Defined at:
  6051 ;;		line 141 in file "launcher_functions.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;		None               void
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6065 ;;      Params:         0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    2
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function _InitWatchdog
  6081  0BA5                     _InitWatchdog:	
  6082                           
  6083                           ;launcher_functions.c: 144: WDTCONbits.WDTPS = 0x0A;
  6084                           
  6085                           ;incstack = 0
  6086                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  6087  0BA5  0021               	movlb	1	; select bank1
  6088  0BA6  0817               	movf	23,w	;volatile
  6089  0BA7  39C1               	andlw	-63
  6090  0BA8  3814               	iorlw	20
  6091  0BA9  0097               	movwf	23	;volatile
  6092                           
  6093                           ;launcher_functions.c: 145: WDTCONbits.SWDTEN = 0;
  6094  0BAA  1017               	bcf	23,0	;volatile
  6095  0BAB  0008               	return
  6096  0BAC                     __end_of_InitWatchdog:	
  6097                           
  6098                           	psect	text24
  6099  0BEF                     __ptext24:	
  6100 ;; *************** function _InitUART *****************
  6101 ;; Defined at:
  6102 ;;		line 270 in file "launcher_functions.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;		None               void
  6109 ;; Registers used:
  6110 ;;		wreg, status,2
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6116 ;;      Params:         0       0       0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0
  6119 ;;      Totals:         0       0       0       0       0       0       0
  6120 ;;Total ram usage:        0 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    2
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_main
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           
  6131                           ;psect for function _InitUART
  6132  0BEF                     _InitUART:	
  6133                           
  6134                           ;launcher_functions.c: 273: TRISCbits.TRISC6 = 0;
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in _InitUART: [wreg+status,2]
  6138  0BEF  0021               	movlb	1	; select bank1
  6139  0BF0  130E               	bcf	14,6	;volatile
  6140                           
  6141                           ;launcher_functions.c: 274: TRISCbits.TRISC7 = 1;
  6142  0BF1  178E               	bsf	14,7	;volatile
  6143                           
  6144                           ;launcher_functions.c: 275: TXSTAbits.BRGH = 0;
  6145  0BF2  0023               	movlb	3	; select bank3
  6146  0BF3  111E               	bcf	30,2	;volatile
  6147                           
  6148                           ;launcher_functions.c: 277: SPBRGH = 0;
  6149  0BF4  019C               	clrf	28	;volatile
  6150                           
  6151                           ;launcher_functions.c: 278: SPBRGL = 51;
  6152  0BF5  3033               	movlw	51
  6153  0BF6  009B               	movwf	27	;volatile
  6154                           
  6155                           ;launcher_functions.c: 279: TXSTAbits.TX9 = 0;
  6156  0BF7  131E               	bcf	30,6	;volatile
  6157                           
  6158                           ;launcher_functions.c: 280: TXSTAbits.SYNC = 0;
  6159  0BF8  121E               	bcf	30,4	;volatile
  6160                           
  6161                           ;launcher_functions.c: 281: TXSTAbits.TXEN = 1;
  6162  0BF9  169E               	bsf	30,5	;volatile
  6163                           
  6164                           ;launcher_functions.c: 283: RCSTAbits.SPEN = 1;
  6165  0BFA  179D               	bsf	29,7	;volatile
  6166                           
  6167                           ;launcher_functions.c: 284: RCSTAbits.RX9 = 0;
  6168  0BFB  131D               	bcf	29,6	;volatile
  6169                           
  6170                           ;launcher_functions.c: 285: RCSTAbits.CREN = 1;
  6171  0BFC  161D               	bsf	29,4	;volatile
  6172  0BFD  0008               	return
  6173  0BFE                     __end_of_InitUART:	
  6174                           
  6175                           	psect	text25
  6176  0BE0                     __ptext25:	
  6177 ;; *************** function _InitTimer1 *****************
  6178 ;; Defined at:
  6179 ;;		line 110 in file "launcher_functions.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;		None               void
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6193 ;;      Params:         0       0       0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    2
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_main
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function _InitTimer1
  6209  0BE0                     _InitTimer1:	
  6210                           
  6211                           ;launcher_functions.c: 112: T1CONbits.TMR1CS = 0;
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  6215  0BE0  303F               	movlw	-193
  6216  0BE1  0020               	movlb	0	; select bank0
  6217  0BE2  0598               	andwf	24,f	;volatile
  6218                           
  6219                           ;launcher_functions.c: 113: T1CONbits.T1CKPS = 2;
  6220  0BE3  0818               	movf	24,w	;volatile
  6221  0BE4  39CF               	andlw	-49
  6222  0BE5  3820               	iorlw	32
  6223  0BE6  0098               	movwf	24	;volatile
  6224                           
  6225                           ;launcher_functions.c: 114: T1CONbits.nT1SYNC = 1;
  6226  0BE7  1518               	bsf	24,2	;volatile
  6227                           
  6228                           ;launcher_functions.c: 115: T1GCONbits.TMR1GE = 0;
  6229  0BE8  1399               	bcf	25,7	;volatile
  6230                           
  6231                           ;launcher_functions.c: 116: TMR1H = 0xFF;
  6232  0BE9  30FF               	movlw	255
  6233  0BEA  0097               	movwf	23	;volatile
  6234                           
  6235                           ;launcher_functions.c: 117: TMR1L = 0x71;
  6236  0BEB  3071               	movlw	113
  6237  0BEC  0096               	movwf	22	;volatile
  6238                           
  6239                           ;launcher_functions.c: 118: T1CONbits.TMR1ON = 1;
  6240  0BED  1418               	bsf	24,0	;volatile
  6241  0BEE  0008               	return
  6242  0BEF                     __end_of_InitTimer1:	
  6243                           
  6244                           	psect	text26
  6245  0BC8                     __ptext26:	
  6246 ;; *************** function _InitTimer0 *****************
  6247 ;; Defined at:
  6248 ;;		line 96 in file "launcher_functions.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;		None               void
  6255 ;; Registers used:
  6256 ;;		wreg
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6262 ;;      Params:         0       0       0       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0
  6265 ;;      Totals:         0       0       0       0       0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    2
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function _InitTimer0
  6278  0BC8                     _InitTimer0:	
  6279                           
  6280                           ;launcher_functions.c: 100: TMR0IE = 0;
  6281                           
  6282                           ;incstack = 0
  6283                           ; Regs used in _InitTimer0: [wreg]
  6284  0BC8  128B               	bcf	11,5	;volatile
  6285                           
  6286                           ;launcher_functions.c: 101: TMR0IF = 0;
  6287  0BC9  110B               	bcf	11,2	;volatile
  6288                           
  6289                           ;launcher_functions.c: 102: TMR0CS = 0;
  6290  0BCA  0021               	movlb	1	; select bank1
  6291  0BCB  1295               	bcf	21,5	;volatile
  6292                           
  6293                           ;launcher_functions.c: 103: PSA = 0;
  6294  0BCC  1195               	bcf	21,3	;volatile
  6295                           
  6296                           ;launcher_functions.c: 104: PS0 = 1;
  6297  0BCD  1415               	bsf	21,0	;volatile
  6298                           
  6299                           ;launcher_functions.c: 105: PS1 = 1;
  6300  0BCE  1495               	bsf	21,1	;volatile
  6301                           
  6302                           ;launcher_functions.c: 106: PS2 = 1;
  6303  0BCF  1515               	bsf	21,2	;volatile
  6304                           
  6305                           ;launcher_functions.c: 107: TMR0 = 61;;
  6306  0BD0  303D               	movlw	61
  6307  0BD1  0020               	movlb	0	; select bank0
  6308  0BD2  0095               	movwf	21	;volatile
  6309  0BD3  0008               	return
  6310  0BD4                     __end_of_InitTimer0:	
  6311                           
  6312                           	psect	text27
  6313  0CFD                     __ptext27:	
  6314 ;; *************** function _InitGPIO *****************
  6315 ;; Defined at:
  6316 ;;		line 13 in file "launcher_functions.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;		None               void
  6323 ;; Registers used:
  6324 ;;		status,2
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6330 ;;      Params:         0       0       0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    2
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _InitGPIO
  6346  0CFD                     _InitGPIO:	
  6347                           
  6348                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _InitGPIO: [status,2]
  6352  0CFD  0021               	movlb	1	; select bank1
  6353  0CFE  148C               	bsf	12,1	;volatile
  6354                           
  6355                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  6356  0CFF  0023               	movlb	3	; select bank3
  6357  0D00  108C               	bcf	12,1	;volatile
  6358                           
  6359                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  6360  0D01  0027               	movlb	7	; select bank7
  6361  0D02  1491               	bsf	17,1	;volatile
  6362                           
  6363                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  6364  0D03  1492               	bsf	18,1	;volatile
  6365                           
  6366                           ;launcher_functions.c: 22: IOCAF = 0x00;
  6367  0D04  0193               	clrf	19	;volatile
  6368                           
  6369                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  6370  0D05  158B               	bsf	11,3	;volatile
  6371                           
  6372                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  6373  0D06  0021               	movlb	1	; select bank1
  6374  0D07  158D               	bsf	13,3	;volatile
  6375                           
  6376                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  6377  0D08  0023               	movlb	3	; select bank3
  6378  0D09  118D               	bcf	13,3	;volatile
  6379                           
  6380                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  6381  0D0A  0027               	movlb	7	; select bank7
  6382  0D0B  1595               	bsf	21,3	;volatile
  6383                           
  6384                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  6385  0D0C  1594               	bsf	20,3	;volatile
  6386                           
  6387                           ;launcher_functions.c: 30: IOCBF = 0x00;
  6388  0D0D  0196               	clrf	22	;volatile
  6389                           
  6390                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  6391  0D0E  158B               	bsf	11,3	;volatile
  6392                           
  6393                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  6394  0D0F  0021               	movlb	1	; select bank1
  6395  0D10  140C               	bsf	12,0	;volatile
  6396                           
  6397                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  6398  0D11  150C               	bsf	12,2	;volatile
  6399                           
  6400                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  6401  0D12  158C               	bsf	12,3	;volatile
  6402                           
  6403                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  6404  0D13  120C               	bcf	12,4	;volatile
  6405                           
  6406                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  6407  0D14  128C               	bcf	12,5	;volatile
  6408                           
  6409                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  6410  0D15  130C               	bcf	12,6	;volatile
  6411                           
  6412                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  6413  0D16  138C               	bcf	12,7	;volatile
  6414                           
  6415                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  6416  0D17  100D               	bcf	13,0	;volatile
  6417                           
  6418                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  6419  0D18  148D               	bsf	13,1	;volatile
  6420                           
  6421                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  6422  0D19  110D               	bcf	13,2	;volatile
  6423                           
  6424                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  6425  0D1A  120D               	bcf	13,4	;volatile
  6426                           
  6427                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  6428  0D1B  128D               	bcf	13,5	;volatile
  6429                           
  6430                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  6431  0D1C  0020               	movlb	0	; select bank0
  6432  0D1D  100D               	bcf	13,0	;volatile
  6433                           
  6434                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  6435  0D1E  120D               	bcf	13,4	;volatile
  6436                           
  6437                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  6438  0D1F  128D               	bcf	13,5	;volatile
  6439                           
  6440                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6441  0D20  0023               	movlb	3	; select bank3
  6442  0D21  100D               	bcf	13,0	;volatile
  6443                           
  6444                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6445  0D22  108D               	bcf	13,1	;volatile
  6446                           
  6447                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6448  0D23  110D               	bcf	13,2	;volatile
  6449                           
  6450                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6451  0D24  120D               	bcf	13,4	;volatile
  6452                           
  6453                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6454  0D25  128D               	bcf	13,5	;volatile
  6455                           
  6456                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6457  0D26  0021               	movlb	1	; select bank1
  6458  0D27  100E               	bcf	14,0	;volatile
  6459                           
  6460                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6461  0D28  108E               	bcf	14,1	;volatile
  6462  0D29  0008               	return
  6463  0D2A                     __end_of_InitGPIO:	
  6464                           
  6465                           	psect	text28
  6466  0BAC                     __ptext28:	
  6467 ;; *************** function _InitCLK *****************
  6468 ;; Defined at:
  6469 ;;		line 8 in file "launcher_functions.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;		None               void
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         0       0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    2
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_main
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function _InitCLK
  6499  0BAC                     _InitCLK:	
  6500                           
  6501                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6505  0BAC  3078               	movlw	120
  6506  0BAD  0021               	movlb	1	; select bank1
  6507  0BAE  0499               	iorwf	25,f	;volatile
  6508                           
  6509                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6510  0BAF  0819               	movf	25,w	;volatile
  6511  0BB0  39FC               	andlw	-4
  6512  0BB1  3802               	iorlw	2
  6513  0BB2  0099               	movwf	25	;volatile
  6514  0BB3  0008               	return
  6515  0BB4                     __end_of_InitCLK:	
  6516                           
  6517                           	psect	text29
  6518  07E7                     __ptext29:	
  6519 ;; *************** function _InitADC *****************
  6520 ;; Defined at:
  6521 ;;		line 73 in file "launcher_functions.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;		None               void
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6535 ;;      Params:         0       0       0       0       0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0
  6538 ;;      Totals:         0       0       0       0       0       0       0
  6539 ;;Total ram usage:        0 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    2
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_main
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           
  6550                           ;psect for function _InitADC
  6551  07E7                     _InitADC:	
  6552                           
  6553                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6554                           
  6555                           ;incstack = 0
  6556                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6557  07E7  0021               	movlb	1	; select bank1
  6558  07E8  140C               	bsf	12,0	;volatile
  6559                           
  6560                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6561  07E9  0023               	movlb	3	; select bank3
  6562  07EA  140C               	bsf	12,0	;volatile
  6563                           
  6564                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6565  07EB  0021               	movlb	1	; select bank1
  6566  07EC  081E               	movf	30,w	;volatile
  6567  07ED  398F               	andlw	-113
  6568  07EE  3850               	iorlw	80
  6569  07EF  009E               	movwf	30	;volatile
  6570                           
  6571                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6572  07F0  30FC               	movlw	-4
  6573  07F1  059E               	andwf	30,f	;volatile
  6574                           
  6575                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6576  07F2  111E               	bcf	30,2	;volatile
  6577                           
  6578                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6579  07F3  3083               	movlw	-125
  6580  07F4  059D               	andwf	29,f	;volatile
  6581                           
  6582                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6583  07F5  300F               	movlw	15
  6584  07F6  049F               	iorwf	31,f	;volatile
  6585                           
  6586                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6587  07F7  139E               	bcf	30,7	;volatile
  6588                           
  6589                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6590  07F8  179D               	bsf	29,7	;volatile
  6591                           
  6592                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6593  07F9  141D               	bsf	29,0	;volatile
  6594                           
  6595                           ;launcher_functions.c: 90: ADIF = 0;
  6596  07FA  0020               	movlb	0	; select bank0
  6597  07FB  1311               	bcf	17,6	;volatile
  6598                           
  6599                           ;launcher_functions.c: 91: ADIE = 1;
  6600  07FC  0021               	movlb	1	; select bank1
  6601  07FD  1711               	bsf	17,6	;volatile
  6602                           
  6603                           ;launcher_functions.c: 92: PEIE = 1;
  6604  07FE  170B               	bsf	11,6	;volatile
  6605  07FF  0008               	return
  6606  0800                     __end_of_InitADC:	
  6607                           
  6608                           	psect	text30
  6609  0CAC                     __ptext30:	
  6610 ;; *************** function _Hibernate *****************
  6611 ;; Defined at:
  6612 ;;		line 549 in file "launcher_functions.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  count           1    1[BANK0 ] unsigned char 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;		None               void
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6626 ;;      Params:         0       0       0       0       0       0       0
  6627 ;;      Locals:         0       1       0       0       0       0       0
  6628 ;;      Temps:          0       1       0       0       0       0       0
  6629 ;;      Totals:         0       2       0       0       0       0       0
  6630 ;;Total ram usage:        2 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:    2
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_main
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function _Hibernate
  6642  0CAC                     _Hibernate:	
  6643                           
  6644                           ;launcher_functions.c: 551: unsigned char count = 0;
  6645                           
  6646                           ;incstack = 0
  6647                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6648  0CAC  0020               	movlb	0	; select bank0
  6649  0CAD  01A1               	clrf	Hibernate@count
  6650                           
  6651                           ;launcher_functions.c: 552: WDTCONbits.WDTPS = 14;
  6652  0CAE  0021               	movlb	1	; select bank1
  6653  0CAF  0817               	movf	23,w	;volatile
  6654  0CB0  39C1               	andlw	-63
  6655  0CB1  381C               	iorlw	28
  6656  0CB2  0097               	movwf	23	;volatile
  6657                           
  6658                           ;launcher_functions.c: 553: WDTCONbits.SWDTEN = 1;
  6659  0CB3  1417               	bsf	23,0	;volatile
  6660                           
  6661                           ;launcher_functions.c: 554: while(!recordFlag && count++ < 3)
  6662  0CB4  2CBE               	goto	l2891
  6663  0CB5                     l2893:	
  6664  0CB5  3001               	movlw	1
  6665  0CB6  00A0               	movwf	??_Hibernate
  6666  0CB7  0820               	movf	??_Hibernate,w
  6667  0CB8  07A1               	addwf	Hibernate@count,f
  6668  0CB9  3004               	movlw	4
  6669  0CBA  0221               	subwf	Hibernate@count,w
  6670  0CBB  1803               	btfsc	3,0
  6671  0CBC  2CC2               	goto	l462
  6672  0CBD  0063               	sleep	;# 
  6673  0CBE                     l2891:	
  6674  0CBE  0020               	movlb	0	; select bank0
  6675  0CBF  08E9               	movf	_recordFlag,f
  6676  0CC0  1903               	btfsc	3,2
  6677  0CC1  2CB5               	goto	l2893
  6678  0CC2                     l462:	
  6679                           
  6680                           ;launcher_functions.c: 557: }
  6681                           ;launcher_functions.c: 558: WDTCONbits.SWDTEN = 0;
  6682  0CC2  0021               	movlb	1	; select bank1
  6683  0CC3  1017               	bcf	23,0	;volatile
  6684  0CC4  0008               	return
  6685  0CC5                     __end_of_Hibernate:	
  6686                           
  6687                           	psect	text31
  6688  0C1E                     __ptext31:	
  6689 ;; *************** function _GoToSleep *****************
  6690 ;; Defined at:
  6691 ;;		line 541 in file "launcher_functions.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  count           1    wreg     unsigned char 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  count           1    1[BANK0 ] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;		None               void
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6705 ;;      Params:         0       0       0       0       0       0       0
  6706 ;;      Locals:         0       1       0       0       0       0       0
  6707 ;;      Temps:          0       1       0       0       0       0       0
  6708 ;;      Totals:         0       2       0       0       0       0       0
  6709 ;;Total ram usage:        2 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    2
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _GoToSleep
  6721  0C1E                     _GoToSleep:	
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6725                           ;GoToSleep@count stored from wreg
  6726  0C1E  0020               	movlb	0	; select bank0
  6727  0C1F  00A1               	movwf	GoToSleep@count
  6728                           
  6729                           ;launcher_functions.c: 543: WDTCONbits.WDTPS = count;
  6730  0C20  0821               	movf	GoToSleep@count,w
  6731  0C21  00A0               	movwf	??_GoToSleep
  6732  0C22  0DA0               	rlf	??_GoToSleep,f
  6733  0C23  0021               	movlb	1	; select bank1
  6734  0C24  0817               	movf	23,w	;volatile
  6735  0C25  0020               	movlb	0	; select bank0
  6736  0C26  0620               	xorwf	??_GoToSleep,w
  6737  0C27  39C1               	andlw	-63
  6738  0C28  0620               	xorwf	??_GoToSleep,w
  6739  0C29  0021               	movlb	1	; select bank1
  6740  0C2A  0097               	movwf	23	;volatile
  6741                           
  6742                           ;launcher_functions.c: 544: WDTCONbits.SWDTEN = 1;
  6743  0C2B  1417               	bsf	23,0	;volatile
  6744  0C2C  0063               	sleep	;# 
  6745                           
  6746                           ;launcher_functions.c: 546: WDTCONbits.SWDTEN = 0;
  6747  0C2D  0021               	movlb	1	; select bank1
  6748  0C2E  1017               	bcf	23,0	;volatile
  6749  0C2F  0008               	return
  6750  0C30                     __end_of_GoToSleep:	
  6751                           
  6752                           	psect	intentry
  6753  0004                     __pintentry:	
  6754 ;; *************** function _isr *****************
  6755 ;; Defined at:
  6756 ;;		line 137 in file "launcher_main.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;		None               void
  6763 ;; Registers used:
  6764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6770 ;;      Params:         0       0       0       0       0       0       0
  6771 ;;      Locals:         2       0       0       0       0       0       0
  6772 ;;      Temps:          5       0       0       0       0       0       0
  6773 ;;      Totals:         7       0       0       0       0       0       0
  6774 ;;Total ram usage:        7 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    1
  6777 ;; This function calls:
  6778 ;;		_WriteBuffer
  6779 ;; This function is called by:
  6780 ;;		Interrupt level 1
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784  0004                     _isr:	
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6788  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6789  0005  3180               	pagesel	$
  6790  0006  0020               	movlb	0	; select bank0
  6791  0007  087F               	movf	127,w
  6792  0008  00F6               	movwf	??_isr+4
  6793                           
  6794                           ;launcher_main.c: 140: if (PIR1bits.RCIF)
  6795  0009  1E91               	btfss	17,5	;volatile
  6796  000A  2837               	goto	i1l3029
  6797                           
  6798                           ;launcher_main.c: 141: {
  6799                           ;launcher_main.c: 143: if(OERR)
  6800  000B  0023               	movlb	3	; select bank3
  6801  000C  1C9D               	btfss	29,1	;volatile
  6802  000D  2810               	goto	i1l3011
  6803                           
  6804                           ;launcher_main.c: 144: {
  6805                           ;launcher_main.c: 145: RCSTAbits.CREN = 0;
  6806  000E  121D               	bcf	29,4	;volatile
  6807                           
  6808                           ;launcher_main.c: 146: RCSTAbits.CREN = 1;
  6809  000F  161D               	bsf	29,4	;volatile
  6810  0010                     i1l3011:	
  6811                           
  6812                           ;launcher_main.c: 147: }
  6813                           ;launcher_main.c: 148: gpsMessage[gpsIndex++] = RCREG;
  6814  0010  0819               	movf	25,w	;volatile
  6815  0011  00F2               	movwf	??_isr
  6816  0012  087D               	movf	_gpsIndex,w
  6817  0013  3E24               	addlw	_gpsMessage& (0+255)
  6818  0014  0086               	movwf	6
  6819  0015  3001               	movlw	1	; select bank2/3
  6820  0016  0087               	movwf	7
  6821  0017  0872               	movf	??_isr,w
  6822  0018  0081               	movwf	1
  6823  0019  3001               	movlw	1
  6824  001A  00F2               	movwf	??_isr
  6825  001B  0872               	movf	??_isr,w
  6826  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6827                           
  6828                           ;launcher_main.c: 149: if(gpsIndex >= 50)
  6829  001D  3032               	movlw	50
  6830  001E  027D               	subwf	_gpsIndex,w	;volatile
  6831  001F  1C03               	skipc
  6832  0020  2826               	goto	i1l3021
  6833                           
  6834                           ;launcher_main.c: 150: {
  6835                           ;launcher_main.c: 151: messageDoneFlag = 1;
  6836  0021  0020               	movlb	0	; select bank0
  6837  0022  01E8               	clrf	_messageDoneFlag
  6838  0023  0AE8               	incf	_messageDoneFlag,f
  6839                           
  6840                           ;launcher_main.c: 152: gpsIndex = 0;
  6841  0024  01FD               	clrf	_gpsIndex	;volatile
  6842                           
  6843                           ;launcher_main.c: 153: }
  6844  0025  2836               	goto	i1l3027
  6845  0026                     i1l3021:	
  6846                           
  6847                           ;launcher_main.c: 154: else
  6848                           ;launcher_main.c: 155: {
  6849                           ;launcher_main.c: 156: if(gpsMessage[gpsIndex-1] == 0x0A)
  6850  0026  087D               	movf	_gpsIndex,w
  6851  0027  3EFF               	addlw	255
  6852  0028  3E24               	addlw	_gpsMessage& (0+255)
  6853  0029  0086               	movwf	6
  6854  002A  3001               	movlw	1	; select bank2/3
  6855  002B  0087               	movwf	7
  6856  002C  0801               	movf	1,w
  6857  002D  3A0A               	xorlw	10
  6858  002E  1D03               	skipz
  6859  002F  2834               	goto	i1l3025
  6860                           
  6861                           ;launcher_main.c: 157: {
  6862                           ;launcher_main.c: 158: messageDoneFlag = 1;
  6863  0030  0020               	movlb	0	; select bank0
  6864  0031  01E8               	clrf	_messageDoneFlag
  6865  0032  0AE8               	incf	_messageDoneFlag,f
  6866                           
  6867                           ;launcher_main.c: 159: }
  6868  0033  2836               	goto	i1l3027
  6869  0034                     i1l3025:	
  6870                           
  6871                           ;launcher_main.c: 160: else
  6872                           ;launcher_main.c: 161: {
  6873                           ;launcher_main.c: 162: messageDoneFlag = 0;
  6874  0034  0020               	movlb	0	; select bank0
  6875  0035  01E8               	clrf	_messageDoneFlag
  6876  0036                     i1l3027:	
  6877                           
  6878                           ;launcher_main.c: 163: }
  6879                           ;launcher_main.c: 164: }
  6880                           ;launcher_main.c: 165: PIR1bits.RCIF = 0;
  6881  0036  1291               	bcf	17,5	;volatile
  6882  0037                     i1l3029:	
  6883                           
  6884                           ;launcher_main.c: 166: }
  6885                           ;launcher_main.c: 169: if (TMR1IF && TMR1IE)
  6886  0037  1C11               	btfss	17,0	;volatile
  6887  0038  2848               	goto	i1l3039
  6888  0039  0021               	movlb	1	; select bank1
  6889  003A  1C11               	btfss	17,0	;volatile
  6890  003B  2848               	goto	i1l3039
  6891                           
  6892                           ;launcher_main.c: 170: {
  6893                           ;launcher_main.c: 171: TMR1H = 0xFF;
  6894  003C  30FF               	movlw	255
  6895  003D  0020               	movlb	0	; select bank0
  6896  003E  0097               	movwf	23	;volatile
  6897                           
  6898                           ;launcher_main.c: 172: TMR1L = 0x71;
  6899  003F  3071               	movlw	113
  6900  0040  0096               	movwf	22	;volatile
  6901                           
  6902                           ;launcher_main.c: 173: TMR1IF = 0;
  6903  0041  1011               	bcf	17,0	;volatile
  6904                           
  6905                           ;launcher_main.c: 175: if(recordFlag)
  6906  0042  0869               	movf	_recordFlag,w
  6907  0043  1903               	btfsc	3,2
  6908  0044  2848               	goto	i1l3039
  6909                           
  6910                           ;launcher_main.c: 176: {
  6911                           ;launcher_main.c: 177: ADCON0bits.ADGO = 1;
  6912  0045  0021               	movlb	1	; select bank1
  6913  0046  149D               	bsf	29,1	;volatile
  6914  0047  0020               	movlb	0	; select bank0
  6915  0048                     i1l3039:	
  6916                           
  6917                           ;launcher_main.c: 178: }
  6918                           ;launcher_main.c: 179: }
  6919                           ;launcher_main.c: 182: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6920  0048  0021               	movlb	1	; select bank1
  6921  0049  0E11               	swapf	17,w	;volatile
  6922  004A  0C89               	rrf	9,f
  6923  004B  0C89               	rrf	9,f
  6924  004C  3901               	andlw	1
  6925  004D  00F2               	movwf	??_isr
  6926  004E  0020               	movlb	0	; select bank0
  6927  004F  0E11               	swapf	17,w	;volatile
  6928  0050  0C89               	rrf	9,f
  6929  0051  0C89               	rrf	9,f
  6930  0052  3901               	andlw	1
  6931  0053  0572               	andwf	??_isr,w
  6932  0054  1903               	btfsc	3,2
  6933  0055  288A               	goto	i1l3055
  6934                           
  6935                           ;launcher_main.c: 183: {
  6936                           ;launcher_main.c: 184: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6937  0056  3033               	movlw	51
  6938  0057  0679               	xorwf	_end,w
  6939  0058  047A               	iorwf	_end+1,w
  6940  0059  1903               	skipnz
  6941  005A  2870               	goto	i1l3045
  6942  005B  0879               	movf	_end,w
  6943  005C  3E01               	addlw	1
  6944  005D  00F2               	movwf	??_isr
  6945  005E  3000               	movlw	0
  6946  005F  3D7A               	addwfc	_end+1,w
  6947  0060  00F3               	movwf	??_isr+1
  6948  0061  087C               	movf	_start+1,w
  6949  0062  0673               	xorwf	??_isr+1,w
  6950  0063  1D03               	skipz
  6951  0064  2867               	goto	u264_25
  6952  0065  087B               	movf	_start,w
  6953  0066  0672               	xorwf	??_isr,w
  6954  0067                     u264_25:	
  6955  0067  3000               	movlw	0
  6956  0068  1903               	skipnz
  6957  0069  3001               	movlw	1
  6958  006A  00F4               	movwf	??_isr+2
  6959  006B  01F5               	clrf	??_isr+3
  6960  006C  0874               	movf	??_isr+2,w
  6961  006D  00F7               	movwf	_isr$541
  6962  006E  0875               	movf	??_isr+3,w
  6963  006F  287A               	goto	L6
  6964  0070                     i1l3045:	
  6965  0070  087C               	movf	_start+1,w
  6966  0071  047B               	iorwf	_start,w
  6967  0072  3000               	movlw	0
  6968  0073  1903               	skipnz
  6969  0074  3001               	movlw	1
  6970  0075  00F2               	movwf	??_isr
  6971  0076  01F3               	clrf	??_isr+1
  6972  0077  0872               	movf	??_isr,w
  6973  0078  00F7               	movwf	_isr$541
  6974  0079  0873               	movf	??_isr+1,w
  6975  007A                     L6:	
  6976  007A  00F8               	movwf	_isr$541+1
  6977  007B  0878               	movf	_isr$541+1,w
  6978  007C  0477               	iorwf	_isr$541,w
  6979  007D  1D03               	skipz
  6980  007E  2888               	goto	i1l3053
  6981                           
  6982                           ;launcher_main.c: 185: {
  6983                           ;launcher_main.c: 186: if(recordFlag)
  6984  007F  0869               	movf	_recordFlag,w
  6985  0080  1903               	btfsc	3,2
  6986  0081  2888               	goto	i1l3053
  6987                           
  6988                           ;launcher_main.c: 187: WriteBuffer(ADRESH);
  6989  0082  0021               	movlb	1	; select bank1
  6990  0083  081C               	movf	28,w	;volatile
  6991  0084  318C  247D  3180   	fcall	_WriteBuffer
  6992  0087  0020               	movlb	0	; select bank0
  6993  0088                     i1l3053:	
  6994                           
  6995                           ;launcher_main.c: 188: }
  6996                           ;launcher_main.c: 189: PIR1bits.ADIF = 0;
  6997  0088  0020               	movlb	0	; select bank0
  6998  0089  1311               	bcf	17,6	;volatile
  6999  008A                     i1l3055:	
  7000                           
  7001                           ;launcher_main.c: 190: }
  7002                           ;launcher_main.c: 193: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  7003  008A  1D8B               	btfss	11,3	;volatile
  7004  008B  28B3               	goto	i1l3069
  7005  008C  0027               	movlb	7	; select bank7
  7006  008D  1D96               	btfss	22,3	;volatile
  7007  008E  28B3               	goto	i1l3069
  7008                           
  7009                           ;launcher_main.c: 194: {
  7010                           ;launcher_main.c: 195: IOCBFbits.IOCBF3 = 0;
  7011  008F  1196               	bcf	22,3	;volatile
  7012                           
  7013                           ;launcher_main.c: 196: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  7014  0090  0020               	movlb	0	; select bank0
  7015  0091  0C0D               	rrf	13,w	;volatile
  7016  0092  00F2               	movwf	??_isr
  7017  0093  0CF2               	rrf	??_isr,f
  7018  0094  0C72               	rrf	??_isr,w
  7019  0095  3901               	andlw	1
  7020  0096  00F3               	movwf	??_isr+1
  7021  0097  0027               	movlb	7	; select bank7
  7022  0098  0C14               	rrf	20,w	;volatile
  7023  0099  00F4               	movwf	??_isr+2
  7024  009A  0CF4               	rrf	??_isr+2,f
  7025  009B  0C74               	rrf	??_isr+2,w
  7026  009C  3901               	andlw	1
  7027  009D  0573               	andwf	??_isr+1,w
  7028  009E  1903               	btfsc	3,2
  7029  009F  28A3               	goto	i1l3065
  7030                           
  7031                           ;launcher_main.c: 197: {
  7032                           ;launcher_main.c: 198: recordFlag = 1;
  7033  00A0  0020               	movlb	0	; select bank0
  7034  00A1  01E9               	clrf	_recordFlag
  7035  00A2  0AE9               	incf	_recordFlag,f
  7036  00A3                     i1l3065:	
  7037                           
  7038                           ;launcher_main.c: 199: }
  7039                           ;launcher_main.c: 200: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  7040  00A3  0027               	movlb	7	; select bank7
  7041  00A4  0C15               	rrf	21,w	;volatile
  7042  00A5  00F2               	movwf	??_isr
  7043  00A6  0CF2               	rrf	??_isr,f
  7044  00A7  0C72               	rrf	??_isr,w
  7045  00A8  3901               	andlw	1
  7046  00A9  00F3               	movwf	??_isr+1
  7047  00AA  1003               	clrc
  7048  00AB  0020               	movlb	0	; select bank0
  7049  00AC  1D8D               	btfss	13,3	;volatile
  7050  00AD  1403               	setc
  7051  00AE  3000               	movlw	0
  7052  00AF  3D09               	addwfc	9,w
  7053  00B0  0573               	andwf	??_isr+1,w
  7054  00B1  1D03               	btfss	3,2
  7055                           
  7056                           ;launcher_main.c: 201: {
  7057                           ;launcher_main.c: 202: recordFlag = 0;
  7058  00B2  01E9               	clrf	_recordFlag
  7059  00B3                     i1l3069:	
  7060                           
  7061                           ;launcher_main.c: 203: }
  7062                           ;launcher_main.c: 204: }
  7063                           ;launcher_main.c: 207: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  7064  00B3  1D8B               	btfss	11,3	;volatile
  7065  00B4  28D3               	goto	i1l158
  7066  00B5  0027               	movlb	7	; select bank7
  7067  00B6  1C93               	btfss	19,1	;volatile
  7068  00B7  28D3               	goto	i1l158
  7069                           
  7070                           ;launcher_main.c: 208: {
  7071                           ;launcher_main.c: 209: IOCAFbits.IOCAF1 = 0;
  7072  00B8  1093               	bcf	19,1	;volatile
  7073                           
  7074                           ;launcher_main.c: 210: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  7075  00B9  0020               	movlb	0	; select bank0
  7076  00BA  0C0C               	rrf	12,w	;volatile
  7077  00BB  3901               	andlw	1
  7078  00BC  00F2               	movwf	??_isr
  7079  00BD  0027               	movlb	7	; select bank7
  7080  00BE  0C11               	rrf	17,w	;volatile
  7081  00BF  3901               	andlw	1
  7082  00C0  0572               	andwf	??_isr,w
  7083  00C1  1903               	btfsc	3,2
  7084  00C2  28C6               	goto	i1l3079
  7085                           
  7086                           ;launcher_main.c: 211: {
  7087                           ;launcher_main.c: 212: strobeFlag = 1;
  7088  00C3  0020               	movlb	0	; select bank0
  7089  00C4  01EA               	clrf	_strobeFlag
  7090  00C5  0AEA               	incf	_strobeFlag,f
  7091  00C6                     i1l3079:	
  7092                           
  7093                           ;launcher_main.c: 213: }
  7094                           ;launcher_main.c: 214: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  7095  00C6  0027               	movlb	7	; select bank7
  7096  00C7  0C12               	rrf	18,w	;volatile
  7097  00C8  3901               	andlw	1
  7098  00C9  00F2               	movwf	??_isr
  7099  00CA  1003               	clrc
  7100  00CB  0020               	movlb	0	; select bank0
  7101  00CC  1C8C               	btfss	12,1	;volatile
  7102  00CD  1403               	setc
  7103  00CE  3000               	movlw	0
  7104  00CF  3D09               	addwfc	9,w
  7105  00D0  0572               	andwf	??_isr,w
  7106  00D1  1D03               	btfss	3,2
  7107                           
  7108                           ;launcher_main.c: 215: {
  7109                           ;launcher_main.c: 216: strobeFlag = 0;
  7110  00D2  01EA               	clrf	_strobeFlag
  7111  00D3                     i1l158:	
  7112  00D3  0876               	movf	??_isr+4,w
  7113  00D4  0020               	movlb	0	; select bank0
  7114  00D5  00FF               	movwf	127
  7115  00D6  107E               	bcf	126,0	;clear compiler interrupt flag
  7116  00D7  0009               	retfie
  7117  00D8                     __end_of_isr:	
  7118                           
  7119                           	psect	text33
  7120  0C7D                     __ptext33:	
  7121 ;; *************** function _WriteBuffer *****************
  7122 ;; Defined at:
  7123 ;;		line 220 in file "launcher_functions.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  data            1    wreg     unsigned char 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  data            1    1[COMMON] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;		None               void
  7130 ;; Registers used:
  7131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7137 ;;      Params:         0       0       0       0       0       0       0
  7138 ;;      Locals:         1       0       0       0       0       0       0
  7139 ;;      Temps:          1       0       0       0       0       0       0
  7140 ;;      Totals:         2       0       0       0       0       0       0
  7141 ;;Total ram usage:        2 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_isr
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           
  7151                           ;psect for function _WriteBuffer
  7152  0C7D                     _WriteBuffer:	
  7153                           
  7154                           ;incstack = 0
  7155                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7156                           ;WriteBuffer@data stored from wreg
  7157  0C7D  00F1               	movwf	WriteBuffer@data
  7158                           
  7159                           ;launcher_functions.c: 222: buffer[end] = data;
  7160  0C7E  0871               	movf	WriteBuffer@data,w
  7161  0C7F  00F0               	movwf	??_WriteBuffer
  7162  0C80  0879               	movf	_end,w
  7163  0C81  3EA0               	addlw	_buffer& (0+255)
  7164  0C82  0086               	movwf	6
  7165  0C83  3001               	movlw	1	; select bank3/4
  7166  0C84  0087               	movwf	7
  7167  0C85  0870               	movf	??_WriteBuffer,w
  7168  0C86  0081               	movwf	1
  7169                           
  7170                           ;launcher_functions.c: 224: if (end == 51)
  7171  0C87  3033               	movlw	51
  7172  0C88  0679               	xorwf	_end,w
  7173  0C89  047A               	iorwf	_end+1,w
  7174  0C8A  1D03               	skipz
  7175  0C8B  2C8F               	goto	i1l2901
  7176                           
  7177                           ;launcher_functions.c: 225: end = 0;
  7178  0C8C  01F9               	clrf	_end
  7179  0C8D  01FA               	clrf	_end+1
  7180  0C8E  0008               	return
  7181  0C8F                     i1l2901:	
  7182                           
  7183                           ;launcher_functions.c: 226: else
  7184                           ;launcher_functions.c: 227: end++;
  7185  0C8F  3001               	movlw	1
  7186  0C90  07F9               	addwf	_end,f
  7187  0C91  3000               	movlw	0
  7188  0C92  3DFA               	addwfc	_end+1,f
  7189  0C93  0008               	return
  7190  0C94                     __end_of_WriteBuffer:	
  7191  007E                     btemp	set	126	;btemp
  7192  007E                     pic14e$flags	set	126
  7193  007E                     wtemp	set	126
  7194  007E                     wtemp0	set	126
  7195  0080                     wtemp1	set	128
  7196  0082                     wtemp2	set	130
  7197  0084                     wtemp3	set	132
  7198  0086                     wtemp4	set	134
  7199  0088                     wtemp5	set	136
  7200  007F                     wtemp6	set	127
  7201  007E                     ttemp	set	126
  7202  007E                     ttemp0	set	126
  7203  0081                     ttemp1	set	129
  7204  0084                     ttemp2	set	132
  7205  0087                     ttemp3	set	135
  7206  007F                     ttemp4	set	127
  7207  007E                     ltemp	set	126
  7208  007E                     ltemp0	set	126
  7209  0082                     ltemp1	set	130
  7210  0086                     ltemp2	set	134
  7211  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    10
    Data        61
    BSS         194
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     69      78
    BANK1            80     62      78
    BANK2            80      0      80
    BANK3            80      0      73
    BANK4            80      0      72
    BANK5            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1466$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___awdiv
    ___awdiv->___wmul
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RecordMode->_SendGPSSPI
    _SendGPSSPI->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _CheckDisconnect->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8392
                                             61 BANK0      8     4      4
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                         _InitTimer0
                         _InitTimer1
                           _InitUART
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           25    25      0    3869
                                             36 BANK0     25    25      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    2784
                                             15 BANK0     21    21      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            65    65      0    2451
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1011
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1263
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1980
                                             28 BANK0     11    11      0
                    _CheckDisconnect
                            _InitSPI
                         _ReadBuffer
                         _SendGPSSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                            _InitSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CheckDisconnect                                      2     2      0      92
                                              7 BANK0      2     2      0
                      _ReadStatusSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitTimer0
   _InitTimer1
   _InitUART
   _InitWatchdog
   _RecordMode
     _CheckDisconnect
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
     _InitSPI
     _ReadBuffer
     _SendGPSSPI
       _InitSPI
       _WriteOverheadSPI
         _ReadStatusSPI
           _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     18B       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      49      12       91.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      48      14       90.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     18B      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Nov 06 19:14:10 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 003C                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l114 0595                               l332 0C63  
                             l422 0EE9                               l360 0CAA                               l338 0BD6  
                             l349 0E93                               l462 0CC2                               l632 0CE8  
                             l448 034F                               l481 049F                               l379 0BB6  
                             l396 0FFC                               l487 0F24                               _GIE 005F  
                             _PS0 04A8                               _PS1 04A9                               _PS2 04AA  
                             _PSA 04AB                               _end 0079                               _isr 0004  
              DecodeGPS@messageID 0032                               wreg 0009                DecodeGPS@longitude 003F  
                 DisableGPS@F4922 0156                              l3003 065D                              l2205 0E15  
                            l2127 0E80                              l2151 0DF7                              l2311 0FBD  
                            l2303 0FAF                              l2231 0E4C                              l2223 0E3B  
                            l2215 0E1D                              l2153 0DC2                              l2321 0FC7  
                            l2217 0E29                              l2155 0DFC                              l2323 0FEA  
                            l2227 0E44                              l2411 016B                              l2253 0DAD  
                            l2245 0D8F                              l2333 068F                              l2181 0C4B  
                            l2165 0CE2                              l2501 032A                              l2247 0D9B  
                            l2271 0D6A                              l2335 0691                              l2511 0351  
                            l2503 0330                              l2415 017C                              l2257 0DB6  
                            l2353 06C0                              l2177 0C45                              l2417 018B  
                            l2275 0D76                              l2355 06DA                              l2269 0D5E  
                            l2365 06F0                              l2349 06A4                              l2525 0389  
                            l2279 0D7F                              l2391 0728                              l2383 0724  
                            l2199 0E0A                              l2519 0361                              l2289 0CA6  
                            l2377 0715                              l2369 06F6                              l2393 066D  
                            l2457 0250                              l2449 0234                              l2539 0C0B  
                            l2571 0F6A                              l2563 0F57                              l2803 0482  
                            l2395 0768                              l2557 0F3E                              l2493 030E  
                            l2815 04D9                              l2751 03C1                              l2719 0794  
                            l2577 0F83                              l2825 0512                              l2729 07D8  
                            l2775 042E                              l2783 03FB                              l2873 0F05  
                            l2865 0EF1                              l2953 05AB                              l2937 0581  
                            l2891 0CBE                              l2795 0465                              l2787 044A  
                            l2963 05BD                              l2893 0CB5                              l2797 046F  
                            l2869 0EFB                              l2957 05B3                              l2975 05DC  
                            l2993 064A                              l2969 05CA                              l2977 05DD  
                            l2987 0618                              l2999 0654                              _ADIE 048E  
                            _ADIF 008E                              ?_isr 0070            __size_of_ReadStatusSPI 0011  
                            STR_1 080A                              STR_2 081D                              u2010 0142  
                            u2200 0778                              u2025 0169                              u2125 035F  
                            u2045 0189                              u3007 03CC                              u2215 0792  
                            u2135 0387                              u3017 04A9                              u2313 049D  
                            u2305 0488                              u2225 07D6                              u2323 04CD  
                            u2165 0F3C                              u2245 041C                              u2175 0F55  
                            u2335 04E4                              u2255 0434                              u2360 0EC0  
                            u2185 0F68                              u2345 04F9                              u2273 0411  
                            u1545 0DCC                              u1475 0E5E                              u2195 0F81  
                            u1485 0E72                              u2285 0453                              u1805 0D61  
                            u2295 046B                              u1735 0D92                              u1655 0E20  
                            u1575 0CE9                              u1825 0D70                              u1585 0CEE  
                            u1755 0D9C                              u1835 0D77                              u1675 0E2A  
                            u1765 0DA6                              u1685 0E34                              u1775 0DAE  
                            u1695 0E3C                              u1865 0F9D                              u2907 058D  
                            _PEIE 005E                              u1965 070B                              u2917 05A3  
                            u1895 0FD7                              u2927 05D4                              u2937 05FD  
                            u2947 0634                              _RCIE 048D                              u2957 0D32  
                            u2967 0D41                              u2977 0D4F                              u2897 056E  
                            u2987 079B                              u2997 07DF                              _OERR 0CE9  
                            _TMR0 0015                              _main 0530                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E                              start 00D8                              ttemp 007E  
                            wtemp 007E                 ___bmul@multiplier 0023                     __CFG_MCLRE$ON 0000  
               ?_compute_checksum 0020                   __end_of_InitADC 0800                   __end_of_InitCLK 0BB4  
                 __end_of_InitSPI 0C42                   __end_of_ReadSPI 0BE0                ??_compute_checksum 0022  
                           ??_isr 0072                     ?_InitWatchdog 0070             ReadStatusSPI@dataRead 0026  
                           ?_main 005D                   __end_of___awdiv 0E53                   ___awdiv@divisor 0026  
                           _LATC2 0872                             _IOCAF 0393                             _IOCBF 0396  
                 __end_of___lwdiv 0DBD                             i1l158 00D3                   __end_of___lwmod 0D86  
                 ___awdiv@counter 002B                             _RCREG 0199                             _TMR1H 0017  
                           _TMR1L 0016                             _TXREG 019A                 RecordMode@address 0043  
                 __end_of_dpowers 080A               DecodeGPS@northSouth 0039                             _start 007B  
                  __CFG_BOREN$OFF 0000                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                 __end_of_sprintf 076D            uart_write_message@data 0034            uart_write_message@size 0028  
                      _ReadBuffer 0C94                   __initialization 00DA                        _InitTimer0 0BC8  
                      _InitTimer1 0BE0                 ?_WriteOverheadSPI 0027                      __end_of_main 0667  
              __size_of_DecodeGPS 025E                  __end_of_InitGPIO 0D2A                  __end_of_InitUART 0BFE  
                  ??_InitWatchdog 0020                     _ReadStatusSPI 0C0D                ??_WriteOverheadSPI 002B  
uart_write_message@ascii_checksum 0035                            ??_main 0061                __size_of_GoToSleep 0012  
                      _SendGPSSPI 0F14                   ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000  
                __end_of_SetupGPS 07E7     WriteOverheadSPI@address_bytes 0031                __size_of_Hibernate 0019  
                      _RecordMode 0395                            _ADRESH 009C                  ___awdiv@dividend 0028  
                 _CheckDisconnect 0BFE                  __end_of_WriteSPI 0C67                            i1l3011 0010  
                          i1l3021 0026                            i1l3025 0034                            i1l3027 0036  
                          i1l3053 0088                            i1l3045 0070                            i1l3029 0037  
                          i1l3055 008A                            i1l3039 0048                            i1l3065 00A3  
                          i1l3069 00B3                            i1l3079 00C6                            i1l2901 0C8F  
                          u264_25 0067                            _TMR0IE 005D                            _TMR0IF 005A  
                          _TMR0CS 04AD                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _TMR1ON 00C0                            _SPBRGL 019B  
                          _SSPBUF 0211                         ??_InitADC 0020                         ??_InitCLK 0020  
                       ??_InitSPI 0020                         ??_ReadSPI 0020                       SendGPSSPI@x 003A  
                          ___bmul 0C42                    ?_ReadStatusSPI 0070                            ___wmul 0CDF  
                       ??___awdiv 002A                         ??___lwdiv 0024                         ??___lwmod 002C  
                          _buffer 01A0                  ___awdiv@quotient 002D       __size_of_uart_write_message 0076  
              __size_of_UpdateGPS 0061               main@periodicCounter 0064                 __end_of_DecodeGPS 0395  
                       ??_sprintf 0034                    _gpsInvalidFlag 006B           __end_of__initialization 0133  
               __end_of_GoToSleep 0C30               ___bmul@multiplicand 0020                       ?_ReadBuffer 0070  
               __end_of_Hibernate 0CC5                       ?_InitTimer0 0070                       ?_InitTimer1 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 0B96                      __pidataBANK1 0BBE  
                    __pidataBANK2 0CC5                      __pidataBANK3 0C67                      WriteSPI@temp 0022  
                     ?_SendGPSSPI 0070           __end_of_CheckDisconnect 0C0D                       ?_RecordMode 0070  
            __end_of_InitWatchdog 0BAC                        __pbssBANK0 0065                        __pbssBANK1 00E8  
                      __pbssBANK2 0120                        __pbssBANK3 01A0                        __pbssBANK4 0220  
                       ?_InitGPIO 0070                         ?_InitUART 0070                   SetupGPS@message 00A0  
                 ??_ReadStatusSPI 0025                 __end_of_UpdateGPS 0F14                        __pmaintext 0530  
                       ?_SetupGPS 0070                           ?___bmul 0020                           ?___wmul 0020  
                   ??_WriteBuffer 0070                        __pintentry 0004                    _validLongitude 00E5  
       UpdateGPS@GPSupdateMessage 0045                         ?_WriteSPI 0070                __size_of_uart_xmit 000A  
       __size_of_compute_checksum 0042               __size_of_ReadBuffer 0018               __size_of_InitTimer0 000C  
             __size_of_InitTimer1 000F                        ??_InitGPIO 0020                        ??_InitUART 0020  
                         _InitADC 07E7                           _InitCLK 0BAC                           _InitSPI 0C30  
                      _gpsMessage 0124           __size_of_ToggleSleepGPS 002D                           _ReadSPI 0BD4  
                     SetupGPS@MID 00D8               __size_of_SendGPSSPI 0076                        ??_SetupGPS 0041  
             __size_of_RecordMode 019B                   __size_of___bmul 0012                           ___awdiv 0DFF  
                 __size_of___wmul 001E                           ___lwdiv 0D86                           ___lwmod 0D57  
                         _isr$541 0077                        ??_WriteSPI 0020                           __ptext1 0EB3  
                         __ptext2 0137                           __ptext3 0CDF                           __ptext4 0C42  
                         __ptext5 0DFF                           __ptext6 0D2A                           __ptext7 076D  
                         __ptext8 0F8A                           __ptext9 0BB4                         _T1CONbits 0018  
                         _dpowers 0800               __end_of_WriteBuffer 0C94                      __size_of_isr 00D4  
                ?_CheckDisconnect 0070                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 0069  
                         _sprintf 0667                           clrloop0 0BA0              end_of_initialization 0133  
                         init_ram 0B99                           initloop 0B9A                   WriteBuffer@data 0071  
               __end_of_uart_xmit 0BBE                         _RCSTAbits 019D                  WriteSPI@databyte 0024  
                    __pstringtext 0800                         _PORTAbits 000C                         _PORTBbits 000D  
                       _PORTCbits 000E                    Hibernate@count 0021                  __CFG_FOSC$INTOSC 0000  
           __size_of_InitWatchdog 0007                         _TRISAbits 008C                         _TRISBbits 008D  
                       _TRISCbits 008E           WriteOverheadSPI@address 0027                 SendGPSSPI@address 0036  
                 DecodeGPS@status 003B              uart_xmit@mydata_byte 0020             _preRecordingAddresses 0220  
                       _DecodeGPS 0137                         _TXSTAbits 019E                      ??_ReadBuffer 0020  
                      _strobeFlag 006A                      ??_InitTimer0 0020                      ??_InitTimer1 0020  
                       _GoToSleep 0C1E                    __end_of___bmul 0C54                       _WriteBuffer 0C7D  
                  __end_of___wmul 0CFD        __end_of_uart_write_message 1000                         _Hibernate 0CAC  
                    _InitWatchdog 0BA5                      ??_SendGPSSPI 0035                     SetupGPS@F4925 016A  
                   SetupGPS@F4927 00DE               start_initialization 00DA                  _compute_checksum 0DBD  
       WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 003C                       __end_of_isr 00D8  
           CheckDisconnect@status 0028                __end_of_ReadBuffer 0CAC                 compute_checksum@x 0026  
              __end_of_InitTimer0 0BD4                __end_of_InitTimer1 0BEF                        ?_DecodeGPS 0070  
                  _ToggleSleepGPS 0D2A                 __size_of_InitGPIO 002D                 __size_of_InitUART 000F  
              __end_of_SendGPSSPI 0F8A                         SetupGPS@x 00DC              compute_checksum@data 0025  
                      ?_GoToSleep 0070                          ??___bmul 0021              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 0530                       __pdataBANK0 006B  
                     __pdataBANK1 00DE                       __pdataBANK2 0156                       __pdataBANK3 01D3  
               __size_of_SetupGPS 007A                         _UpdateGPS 0EB3                        ?_Hibernate 0070  
        compute_checksum@checksum 0024                 __size_of_WriteSPI 0013                       __pbssCOMMON 0079  
                       ___latbits 0001                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                _WriteOverheadSPI 0E53               __end_of__stringdata 0824               uart_write_message@x 0031  
                   _validEastWest 006C            __end_of_ToggleSleepGPS 0D57                   _messageDoneFlag 0068  
                     sprintf@_val 003C                       sprintf@flag 0038           UpdateGPS@timeoutCounter 005B  
                     sprintf@prec 0039                          ?_InitADC 0070                          ?_InitCLK 0070  
                        ?_InitSPI 0070                          ?_ReadSPI 0070                     _validLatitude 00E2  
                ___lwdiv@dividend 0022             __end_of_ReadStatusSPI 0C1E                          ?___awdiv 0026  
                        ?___lwdiv 0020                          ?___lwmod 0028                        ?_UpdateGPS 0070  
                  UpdateGPS@F4933 01D3                  __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 0025  
                        ?_sprintf 002E        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 006D                       ??_DecodeGPS 002F                    ___wmul@product 0024  
                        _LATBbits 010D                          _LATCbits 010E                         clear_ram0 0B9F  
                        _PIE1bits 0091                    DecodeGPS@F4935 0163                    DecodeGPS@F4937 00E8  
                  DecodeGPS@F4939 00EB                          _PIR1bits 0011                       ??_GoToSleep 0020  
                       _uart_xmit 0BB4                       ??_Hibernate 0020                   _gpsTimeoutState 0066  
                      _ADCON0bits 009D                        _ADCON1bits 009E                       __stringdata 080A  
                      _ADCON2bits 009F                 ___wmul@multiplier 0020                   RecordMode@count 0041  
                        _InitGPIO 0CFD                          _InitUART 0BEF          __size_of_CheckDisconnect 000F  
                __size_of_InitADC 0019                  __size_of_InitCLK 0008                  __size_of_InitSPI 0012  
                __size_of_ReadSPI 000C          __end_of_compute_checksum 0DFF             SetupGPS@startSequence 00D2  
                        _SetupGPS 076D                        ?_uart_xmit 0070                      ?_WriteBuffer 0070  
                __size_of___awdiv 0054                       ??_UpdateGPS 0044                  __size_of___lwdiv 0037  
                __size_of___lwmod 002F                          _WriteSPI 0C54           _uart_write_message$1397 002D  
         _uart_write_message$1398 002F                        _ANSELAbits 018C                        _ANSELBbits 018D  
             ReadBuffer@read_data 0021                   ___lwdiv@divisor 0020                   _hasValidGPSFlag 0067  
                 ___lwdiv@counter 0027                          __ptext10 0DBD                          __ptext11 0667  
                        __ptext20 0C0D                          __ptext12 0D57                          __ptext21 0C54  
                        __ptext13 0D86                        _T1GCONbits 0019                          __ptext30 0CAC  
                        __ptext22 0BD4                          __ptext14 0395                          __ptext31 0C1E  
                        __ptext23 0BA5                          __ptext15 0F14                          __ptext24 0BEF  
                        __ptext16 0E53                          __ptext33 0C7D                          __ptext25 0BE0  
                        __ptext17 0C30                          __ptext26 0BC8                          __ptext18 0C94  
                        __ptext27 0CFD                          __ptext19 0BFE                          __ptext28 0BAC  
                        __ptext29 07E7                _uart_write_message 0F8A                  __size_of_sprintf 0106  
                        _gpsIndex 007D                     __size_of_main 0137               ?_uart_write_message 0028  
                      DecodeGPS@x 0042          __end_of_WriteOverheadSPI 0EB3                _eeprom_timeoutFlag 0065  
                  GoToSleep@count 0021                          main@argc 005D                          main@argv 005F  
            ??_uart_write_message 002A                        _INTCONbits 000B                       pic14e$flags 007E  
                        intlevel1 0000                         sprintf@ap 003A                         sprintf@sp 003B  
                ___lwmod@dividend 002A                 __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099  
               ??_CheckDisconnect 0027                       ??_uart_xmit 0020                          sprintf@c 0040  
                        sprintf@f 002E                   ___lwmod@divisor 0028                   ___lwmod@counter 002D  
                ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215                        _WDTCONbits 0097  
                 _recordEndAdress 0120                 DecodeGPS@eastWest 003A  
