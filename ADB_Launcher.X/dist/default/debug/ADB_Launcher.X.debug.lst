

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Nov 05 11:15:27 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  028C                     	;# 
   179  028D                     	;# 
   180  028E                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  030C                     	;# 
   190  030D                     	;# 
   191  030E                     	;# 
   192  038C                     	;# 
   193  038D                     	;# 
   194  038E                     	;# 
   195  0390                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  0397                     	;# 
   203  0398                     	;# 
   204  0399                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0511                     	;# 
   209  0513                     	;# 
   210  051A                     	;# 
   211  0811                     	;# 
   212  0812                     	;# 
   213  0813                     	;# 
   214  0814                     	;# 
   215  0815                     	;# 
   216  0816                     	;# 
   217  0817                     	;# 
   218  0818                     	;# 
   219  0819                     	;# 
   220  081A                     	;# 
   221  081B                     	;# 
   222  081C                     	;# 
   223  081D                     	;# 
   224  081E                     	;# 
   225  081F                     	;# 
   226  0820                     	;# 
   227  0821                     	;# 
   228  0821                     	;# 
   229  0822                     	;# 
   230  0823                     	;# 
   231  0823                     	;# 
   232  0824                     	;# 
   233  0825                     	;# 
   234  0825                     	;# 
   235  0826                     	;# 
   236  0827                     	;# 
   237  0827                     	;# 
   238  0828                     	;# 
   239  0829                     	;# 
   240  082A                     	;# 
   241  082B                     	;# 
   242  082C                     	;# 
   243  082D                     	;# 
   244  082E                     	;# 
   245  082F                     	;# 
   246  0831                     	;# 
   247  0832                     	;# 
   248  0833                     	;# 
   249  0834                     	;# 
   250  0835                     	;# 
   251  0836                     	;# 
   252  0837                     	;# 
   253  0838                     	;# 
   254  0839                     	;# 
   255  083A                     	;# 
   256  083B                     	;# 
   257  083C                     	;# 
   258  083D                     	;# 
   259  083E                     	;# 
   260  083F                     	;# 
   261  0840                     	;# 
   262  0841                     	;# 
   263  0841                     	;# 
   264  0842                     	;# 
   265  0843                     	;# 
   266  0843                     	;# 
   267  0844                     	;# 
   268  0845                     	;# 
   269  0845                     	;# 
   270  0846                     	;# 
   271  0847                     	;# 
   272  0847                     	;# 
   273  0848                     	;# 
   274  0849                     	;# 
   275  084A                     	;# 
   276  084B                     	;# 
   277  084C                     	;# 
   278  084D                     	;# 
   279  084E                     	;# 
   280  084F                     	;# 
   281  0FE4                     	;# 
   282  0FE5                     	;# 
   283  0FE6                     	;# 
   284  0FE7                     	;# 
   285  0FE8                     	;# 
   286  0FE9                     	;# 
   287  0FEA                     	;# 
   288  0FEB                     	;# 
   289  0FED                     	;# 
   290  0FEE                     	;# 
   291  0FEF                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  0090                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0094                     	;# 
   327  0095                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  0111                     	;# 
   343  0112                     	;# 
   344  0113                     	;# 
   345  0114                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0117                     	;# 
   349  0118                     	;# 
   350  0119                     	;# 
   351  011D                     	;# 
   352  011D                     	;# 
   353  011E                     	;# 
   354  011F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  0199                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019A                     	;# 
   371  019A                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019C                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019D                     	;# 
   381  019D                     	;# 
   382  019D                     	;# 
   383  019E                     	;# 
   384  019E                     	;# 
   385  019E                     	;# 
   386  019F                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  019F                     	;# 
   391  020C                     	;# 
   392  020D                     	;# 
   393  020E                     	;# 
   394  0210                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0216                     	;# 
   407  0216                     	;# 
   408  0217                     	;# 
   409  0217                     	;# 
   410  028C                     	;# 
   411  028D                     	;# 
   412  028E                     	;# 
   413  0291                     	;# 
   414  0291                     	;# 
   415  0292                     	;# 
   416  0293                     	;# 
   417  0298                     	;# 
   418  0298                     	;# 
   419  0299                     	;# 
   420  029A                     	;# 
   421  030C                     	;# 
   422  030D                     	;# 
   423  030E                     	;# 
   424  038C                     	;# 
   425  038D                     	;# 
   426  038E                     	;# 
   427  0390                     	;# 
   428  0391                     	;# 
   429  0392                     	;# 
   430  0393                     	;# 
   431  0394                     	;# 
   432  0395                     	;# 
   433  0396                     	;# 
   434  0397                     	;# 
   435  0398                     	;# 
   436  0399                     	;# 
   437  039D                     	;# 
   438  039E                     	;# 
   439  039F                     	;# 
   440  0511                     	;# 
   441  0513                     	;# 
   442  051A                     	;# 
   443  0811                     	;# 
   444  0812                     	;# 
   445  0813                     	;# 
   446  0814                     	;# 
   447  0815                     	;# 
   448  0816                     	;# 
   449  0817                     	;# 
   450  0818                     	;# 
   451  0819                     	;# 
   452  081A                     	;# 
   453  081B                     	;# 
   454  081C                     	;# 
   455  081D                     	;# 
   456  081E                     	;# 
   457  081F                     	;# 
   458  0820                     	;# 
   459  0821                     	;# 
   460  0821                     	;# 
   461  0822                     	;# 
   462  0823                     	;# 
   463  0823                     	;# 
   464  0824                     	;# 
   465  0825                     	;# 
   466  0825                     	;# 
   467  0826                     	;# 
   468  0827                     	;# 
   469  0827                     	;# 
   470  0828                     	;# 
   471  0829                     	;# 
   472  082A                     	;# 
   473  082B                     	;# 
   474  082C                     	;# 
   475  082D                     	;# 
   476  082E                     	;# 
   477  082F                     	;# 
   478  0831                     	;# 
   479  0832                     	;# 
   480  0833                     	;# 
   481  0834                     	;# 
   482  0835                     	;# 
   483  0836                     	;# 
   484  0837                     	;# 
   485  0838                     	;# 
   486  0839                     	;# 
   487  083A                     	;# 
   488  083B                     	;# 
   489  083C                     	;# 
   490  083D                     	;# 
   491  083E                     	;# 
   492  083F                     	;# 
   493  0840                     	;# 
   494  0841                     	;# 
   495  0841                     	;# 
   496  0842                     	;# 
   497  0843                     	;# 
   498  0843                     	;# 
   499  0844                     	;# 
   500  0845                     	;# 
   501  0845                     	;# 
   502  0846                     	;# 
   503  0847                     	;# 
   504  0847                     	;# 
   505  0848                     	;# 
   506  0849                     	;# 
   507  084A                     	;# 
   508  084B                     	;# 
   509  084C                     	;# 
   510  084D                     	;# 
   511  084E                     	;# 
   512  084F                     	;# 
   513  0FE4                     	;# 
   514  0FE5                     	;# 
   515  0FE6                     	;# 
   516  0FE7                     	;# 
   517  0FE8                     	;# 
   518  0FE9                     	;# 
   519  0FEA                     	;# 
   520  0FEB                     	;# 
   521  0FED                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  0010                     	;# 
   540  0011                     	;# 
   541  0012                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0016                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  008C                     	;# 
   553  008D                     	;# 
   554  008E                     	;# 
   555  0090                     	;# 
   556  0091                     	;# 
   557  0092                     	;# 
   558  0094                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011D                     	;# 
   584  011D                     	;# 
   585  011E                     	;# 
   586  011F                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  020E                     	;# 
   626  0210                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  028C                     	;# 
   643  028D                     	;# 
   644  028E                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  030C                     	;# 
   654  030D                     	;# 
   655  030E                     	;# 
   656  038C                     	;# 
   657  038D                     	;# 
   658  038E                     	;# 
   659  0390                     	;# 
   660  0391                     	;# 
   661  0392                     	;# 
   662  0393                     	;# 
   663  0394                     	;# 
   664  0395                     	;# 
   665  0396                     	;# 
   666  0397                     	;# 
   667  0398                     	;# 
   668  0399                     	;# 
   669  039D                     	;# 
   670  039E                     	;# 
   671  039F                     	;# 
   672  0511                     	;# 
   673  0513                     	;# 
   674  051A                     	;# 
   675  0811                     	;# 
   676  0812                     	;# 
   677  0813                     	;# 
   678  0814                     	;# 
   679  0815                     	;# 
   680  0816                     	;# 
   681  0817                     	;# 
   682  0818                     	;# 
   683  0819                     	;# 
   684  081A                     	;# 
   685  081B                     	;# 
   686  081C                     	;# 
   687  081D                     	;# 
   688  081E                     	;# 
   689  081F                     	;# 
   690  0820                     	;# 
   691  0821                     	;# 
   692  0821                     	;# 
   693  0822                     	;# 
   694  0823                     	;# 
   695  0823                     	;# 
   696  0824                     	;# 
   697  0825                     	;# 
   698  0825                     	;# 
   699  0826                     	;# 
   700  0827                     	;# 
   701  0827                     	;# 
   702  0828                     	;# 
   703  0829                     	;# 
   704  082A                     	;# 
   705  082B                     	;# 
   706  082C                     	;# 
   707  082D                     	;# 
   708  082E                     	;# 
   709  082F                     	;# 
   710  0831                     	;# 
   711  0832                     	;# 
   712  0833                     	;# 
   713  0834                     	;# 
   714  0835                     	;# 
   715  0836                     	;# 
   716  0837                     	;# 
   717  0838                     	;# 
   718  0839                     	;# 
   719  083A                     	;# 
   720  083B                     	;# 
   721  083C                     	;# 
   722  083D                     	;# 
   723  083E                     	;# 
   724  083F                     	;# 
   725  0840                     	;# 
   726  0841                     	;# 
   727  0841                     	;# 
   728  0842                     	;# 
   729  0843                     	;# 
   730  0843                     	;# 
   731  0844                     	;# 
   732  0845                     	;# 
   733  0845                     	;# 
   734  0846                     	;# 
   735  0847                     	;# 
   736  0847                     	;# 
   737  0848                     	;# 
   738  0849                     	;# 
   739  084A                     	;# 
   740  084B                     	;# 
   741  084C                     	;# 
   742  084D                     	;# 
   743  084E                     	;# 
   744  084F                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756                           
   757                           	psect	idataBANK0
   758  0BFE                     __pidataBANK0:	
   759                           
   760                           ;initializer for _validLatitude
   761  0BFE  3428               	retlw	40
   762  0BFF  3419               	retlw	25
   763  0C00  3414               	retlw	20
   764                           
   765                           ;initializer for _gpsInvalidFlag
   766  0C01  3401               	retlw	1
   767                           
   768                           ;initializer for _validEastWest
   769  0C02  3445               	retlw	69
   770                           
   771                           ;initializer for _validNorthSouth
   772  0C03  344E               	retlw	78
   773                           
   774                           	psect	idataBANK1
   775  0C0B                     __pidataBANK1:	
   776                           
   777                           ;initializer for SetupGPS@F4926
   778  0C0B  3431               	retlw	49
   779  0C0C  3430               	retlw	48
   780  0C0D  3433               	retlw	51
   781  0C0E  3400               	retlw	0
   782                           
   783                           ;initializer for _validLongitude
   784  0C0F  3456               	retlw	86
   785  0C10  3444               	retlw	68
   786  0C11  3414               	retlw	20
   787                           
   788                           	psect	idataBANK2
   789  0D26                     __pidataBANK2:	
   790                           
   791                           ;initializer for DisableGPS@F4921
   792  0D26  3424               	retlw	36
   793  0D27  3450               	retlw	80
   794  0D28  3453               	retlw	83
   795  0D29  3452               	retlw	82
   796  0D2A  3446               	retlw	70
   797  0D2B  3431               	retlw	49
   798  0D2C  3431               	retlw	49
   799  0D2D  3437               	retlw	55
   800  0D2E  342C               	retlw	44
   801  0D2F  3431               	retlw	49
   802  0D30  3436               	retlw	54
   803  0D31  342A               	retlw	42
   804  0D32  3400               	retlw	0
   805                           
   806                           ;initializer for DecodeGPS@F4933
   807  0D33  3424               	retlw	36
   808  0D34  3447               	retlw	71
   809  0D35  3450               	retlw	80
   810  0D36  3447               	retlw	71
   811  0D37  344C               	retlw	76
   812  0D38  344C               	retlw	76
   813  0D39  3400               	retlw	0
   814                           
   815                           ;initializer for SetupGPS@F4924
   816  0D3A  3424               	retlw	36
   817  0D3B  3450               	retlw	80
   818  0D3C  3453               	retlw	83
   819  0D3D  3452               	retlw	82
   820  0D3E  3446               	retlw	70
   821  0D3F  3400               	retlw	0
   822                           
   823                           	psect	idataBANK3
   824  0CAF                     __pidataBANK3:	
   825                           
   826                           ;initializer for UpdateGPS@F4931
   827  0CAF  3424               	retlw	36
   828  0CB0  3450               	retlw	80
   829  0CB1  3453               	retlw	83
   830  0CB2  3452               	retlw	82
   831  0CB3  3446               	retlw	70
   832  0CB4  3431               	retlw	49
   833  0CB5  3430               	retlw	48
   834  0CB6  3433               	retlw	51
   835  0CB7  342C               	retlw	44
   836  0CB8  3430               	retlw	48
   837  0CB9  3431               	retlw	49
   838  0CBA  342C               	retlw	44
   839  0CBB  3430               	retlw	48
   840  0CBC  3431               	retlw	49
   841  0CBD  342C               	retlw	44
   842  0CBE  3430               	retlw	48
   843  0CBF  3431               	retlw	49
   844  0CC0  342C               	retlw	44
   845  0CC1  3430               	retlw	48
   846  0CC2  3430               	retlw	48
   847  0CC3  342A               	retlw	42
   848  0CC4  3400               	retlw	0
   849                           
   850                           	psect	stringtext
   851  0800                     __pstringtext:	
   852  0800                     _dpowers:	
   853  0800  3401               	retlw	1
   854  0801  3400               	retlw	0
   855  0802  340A               	retlw	10
   856  0803  3400               	retlw	0
   857  0804  3464               	retlw	100
   858  0805  3400               	retlw	0
   859  0806  34E8               	retlw	232
   860  0807  3403               	retlw	3
   861  0808  3410               	retlw	16
   862  0809  3427               	retlw	39
   863  080A                     __end_of_dpowers:	
   864  000B                     _INTCONbits	set	11
   865  0011                     _PIR1bits	set	17
   866  000C                     _PORTAbits	set	12
   867  000D                     _PORTBbits	set	13
   868  000E                     _PORTCbits	set	14
   869  0018                     _T1CONbits	set	24
   870  0019                     _T1GCONbits	set	25
   871  0017                     _TMR1H	set	23
   872  0016                     _TMR1L	set	22
   873  008E                     _ADIF	set	142
   874  005F                     _GIE	set	95
   875  005E                     _PEIE	set	94
   876  0088                     _TMR1IF	set	136
   877  00C0                     _TMR1ON	set	192
   878  009D                     _ADCON0bits	set	157
   879  009E                     _ADCON1bits	set	158
   880  009F                     _ADCON2bits	set	159
   881  009C                     _ADRESH	set	156
   882  0095                     _OPTION_REGbits	set	149
   883  0099                     _OSCCONbits	set	153
   884  0091                     _PIE1bits	set	145
   885  008C                     _TRISAbits	set	140
   886  008D                     _TRISBbits	set	141
   887  008E                     _TRISCbits	set	142
   888  0097                     _WDTCONbits	set	151
   889  048E                     _ADIE	set	1166
   890  048D                     _RCIE	set	1165
   891  0488                     _TMR1IE	set	1160
   892  010D                     _LATBbits	set	269
   893  0872                     _LATC2	set	2162
   894  018C                     _ANSELAbits	set	396
   895  018D                     _ANSELBbits	set	397
   896  0199                     _RCREG	set	409
   897  019D                     _RCSTAbits	set	413
   898  019C                     _SPBRGH	set	412
   899  019B                     _SPBRGL	set	411
   900  019A                     _TXREG	set	410
   901  019E                     _TXSTAbits	set	414
   902  0CE9                     _OERR	set	3305
   903  0211                     _SSPBUF	set	529
   904  0215                     _SSPCON1bits	set	533
   905  0214                     _SSPSTATbits	set	532
   906  0393                     _IOCAF	set	915
   907  0393                     _IOCAFbits	set	915
   908  0392                     _IOCANbits	set	914
   909  0391                     _IOCAPbits	set	913
   910  0396                     _IOCBF	set	918
   911  0396                     _IOCBFbits	set	918
   912  0395                     _IOCBNbits	set	917
   913  0394                     _IOCBPbits	set	916
   914  080A                     __stringdata:	
   915  080A                     STR_2:	
   916  080A  3425               	retlw	37	;'%'
   917  080B  3473               	retlw	115	;'s'
   918  080C  3431               	retlw	49	;'1'
   919  080D  3430               	retlw	48	;'0'
   920  080E  3434               	retlw	52	;'4'
   921  080F  342C               	retlw	44	;','
   922  0810  3434               	retlw	52	;'4'
   923  0811  3430               	retlw	48	;'0'
   924  0812  342E               	retlw	46	;'.'
   925  0813  3434               	retlw	52	;'4'
   926  0814  3434               	retlw	52	;'4'
   927  0815  3431               	retlw	49	;'1'
   928  0816  3439               	retlw	57	;'9'
   929  0817  3434               	retlw	52	;'4'
   930  0818  3434               	retlw	52	;'4'
   931  0819  342C               	retlw	44	;','
   932  081A  342D               	retlw	45	;'-'
   933  081B  3438               	retlw	56	;'8'
   934  081C  3436               	retlw	54	;'6'
   935  081D  342E               	retlw	46	;'.'
   936  081E  3439               	retlw	57	;'9'
   937  081F  3431               	retlw	49	;'1'
   938  0820  3432               	retlw	50	;'2'
   939  0821  3435               	retlw	53	;'5'
   940  0822  342C               	retlw	44	;','
   941  0823  3430               	retlw	48	;'0'
   942  0824  342C               	retlw	44	;','
   943  0825  3430               	retlw	48	;'0'
   944  0826  342C               	retlw	44	;','
   945  0827  3430               	retlw	48	;'0'
   946  0828  342C               	retlw	44	;','
   947  0829  3430               	retlw	48	;'0'
   948  082A  342C               	retlw	44	;','
   949  082B  3431               	retlw	49	;'1'
   950  082C  3432               	retlw	50	;'2'
   951  082D  342C               	retlw	44	;','
   952  082E  3432               	retlw	50	;'2'
   953  082F  342A               	retlw	42	;'*'
   954  0830  3400               	retlw	0
   955  0831                     STR_1:	
   956  0831  3425               	retlw	37	;'%'
   957  0832  3473               	retlw	115	;'s'
   958  0833  3425               	retlw	37	;'%'
   959  0834  3473               	retlw	115	;'s'
   960  0835  342C               	retlw	44	;','
   961  0836  3430               	retlw	48	;'0'
   962  0837  3425               	retlw	37	;'%'
   963  0838  3464               	retlw	100	;'d'
   964  0839  342C               	retlw	44	;','
   965  083A  3430               	retlw	48	;'0'
   966  083B  3430               	retlw	48	;'0'
   967  083C  342C               	retlw	44	;','
   968  083D  3430               	retlw	48	;'0'
   969  083E  3430               	retlw	48	;'0'
   970  083F  342C               	retlw	44	;','
   971  0840  3430               	retlw	48	;'0'
   972  0841  3430               	retlw	48	;'0'
   973  0842  342A               	retlw	42	;'*'
   974  0843  3400               	retlw	0
   975  0844                     STR_3:	
   976  0844  3428               	retlw	40	;'('
   977  0845  346E               	retlw	110	;'n'
   978  0846  3475               	retlw	117	;'u'
   979  0847  346C               	retlw	108	;'l'
   980  0848  346C               	retlw	108	;'l'
   981  0849  3429               	retlw	41	;')'
   982  084A  3400               	retlw	0
   983  084B                     __end_of__stringdata:	
   984                           
   985                           ; #config settings
   986  0000                     
   987                           	psect	cinit
   988  00E1                     start_initialization:	
   989  00E1                     __initialization:	
   990                           
   991                           ; Clear objects allocated to COMMON
   992  00E1  01F9               	clrf	__pbssCOMMON& (0+127)
   993  00E2  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   994  00E3  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   995  00E4  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   996  00E5  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   997                           
   998                           ; Clear objects allocated to BANK0
   999  00E6  01E9               	clrf	__pbssBANK0& (0+127)
  1000  00E7  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  1001  00E8  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  1002  00E9  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  1003  00EA  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  1004                           
  1005                           ; Clear objects allocated to BANK1
  1006  00EB  30DE               	movlw	low __pbssBANK1
  1007  00EC  0084               	movwf	4
  1008  00ED  3000               	movlw	high __pbssBANK1
  1009  00EE  0085               	movwf	5
  1010  00EF  300A               	movlw	10
  1011  00F0  318B  23F8  3180   	fcall	clear_ram0
  1012                           
  1013                           ; Clear objects allocated to BANK2
  1014  00F3  3020               	movlw	low __pbssBANK2
  1015  00F4  0084               	movwf	4
  1016  00F5  3001               	movlw	high __pbssBANK2
  1017  00F6  0085               	movwf	5
  1018  00F7  3032               	movlw	50
  1019  00F8  318B  23F8  3180   	fcall	clear_ram0
  1020                           
  1021                           ; Clear objects allocated to BANK3
  1022  00FB  30A0               	movlw	low __pbssBANK3
  1023  00FC  0084               	movwf	4
  1024  00FD  3001               	movlw	high __pbssBANK3
  1025  00FE  0085               	movwf	5
  1026  00FF  3033               	movlw	51
  1027  0100  318B  23F8  3180   	fcall	clear_ram0
  1028                           
  1029                           ; Clear objects allocated to BANK4
  1030  0103  3020               	movlw	low __pbssBANK4
  1031  0104  0084               	movwf	4
  1032  0105  3002               	movlw	high __pbssBANK4
  1033  0106  0085               	movwf	5
  1034  0107  3048               	movlw	72
  1035  0108  318B  23F8  3180   	fcall	clear_ram0
  1036                           
  1037                           ; Initialize objects allocated to BANK0
  1038  010B  30FE               	movlw	low __pidataBANK0
  1039  010C  0084               	movwf	4
  1040  010D  308B               	movlw	(high __pidataBANK0)| (0+128)
  1041  010E  0085               	movwf	5
  1042  010F  3063               	movlw	low __pdataBANK0
  1043  0110  0086               	movwf	6
  1044  0111  3000               	movlw	high __pdataBANK0
  1045  0112  0087               	movwf	7
  1046  0113  3006               	movlw	6
  1047  0114  318B  23F2  3180   	fcall	init_ram
  1048                           
  1049                           ; Initialize objects allocated to BANK1
  1050  0117  300B               	movlw	low __pidataBANK1
  1051  0118  0084               	movwf	4
  1052  0119  308C               	movlw	(high __pidataBANK1)| (0+128)
  1053  011A  0085               	movwf	5
  1054  011B  30E8               	movlw	low __pdataBANK1
  1055  011C  0086               	movwf	6
  1056  011D  3000               	movlw	high __pdataBANK1
  1057  011E  0087               	movwf	7
  1058  011F  3007               	movlw	7
  1059  0120  318B  23F2  3180   	fcall	init_ram
  1060                           
  1061                           ; Initialize objects allocated to BANK2
  1062  0123  3026               	movlw	low __pidataBANK2
  1063  0124  0084               	movwf	4
  1064  0125  308D               	movlw	(high __pidataBANK2)| (0+128)
  1065  0126  0085               	movwf	5
  1066  0127  3052               	movlw	low __pdataBANK2
  1067  0128  0086               	movwf	6
  1068  0129  3001               	movlw	high __pdataBANK2
  1069  012A  0087               	movwf	7
  1070  012B  301A               	movlw	26
  1071  012C  318B  23F2  3180   	fcall	init_ram
  1072                           
  1073                           ; Initialize objects allocated to BANK3
  1074  012F  30AF               	movlw	low __pidataBANK3
  1075  0130  0084               	movwf	4
  1076  0131  308C               	movlw	(high __pidataBANK3)| (0+128)
  1077  0132  0085               	movwf	5
  1078  0133  30D3               	movlw	low __pdataBANK3
  1079  0134  0086               	movwf	6
  1080  0135  3001               	movlw	high __pdataBANK3
  1081  0136  0087               	movwf	7
  1082  0137  3016               	movlw	22
  1083  0138  318B  23F2         	fcall	init_ram
  1084  013A                     end_of_initialization:	
  1085                           ;End of C runtime variable initialization code
  1086                           
  1087  013A                     __end_of__initialization:	
  1088  013A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1089  013B  0020               	movlb	0
  1090  013C  3186  2E2B         	ljmp	_main	;jump to C main() function
  1091                           
  1092                           	psect	bssCOMMON
  1093  0079                     __pbssCOMMON:	
  1094  0079                     _end:	
  1095  0079                     	ds	2
  1096  007B                     _start:	
  1097  007B                     	ds	2
  1098  007D                     _gpsIndex:	
  1099  007D                     	ds	1
  1100                           
  1101                           	psect	bssBANK0
  1102  0069                     __pbssBANK0:	
  1103  0069                     _eeprom_timeoutFlag:	
  1104  0069                     	ds	1
  1105  006A                     _hasValidGPSFlag:	
  1106  006A                     	ds	1
  1107  006B                     _messageDoneFlag:	
  1108  006B                     	ds	1
  1109  006C                     _recordFlag:	
  1110  006C                     	ds	1
  1111  006D                     _strobeFlag:	
  1112  006D                     	ds	1
  1113                           
  1114                           	psect	dataBANK0
  1115  0063                     __pdataBANK0:	
  1116  0063                     _validLatitude:	
  1117  0063                     	ds	3
  1118  0066                     _gpsInvalidFlag:	
  1119  0066                     	ds	1
  1120  0067                     _validEastWest:	
  1121  0067                     	ds	1
  1122  0068                     _validNorthSouth:	
  1123  0068                     	ds	1
  1124                           
  1125                           	psect	bssBANK1
  1126  00DE                     __pbssBANK1:	
  1127  00DE                     _recordEndAdress:	
  1128  00DE                     	ds	4
  1129  00E2                     DecodeGPS@F4935:	
  1130  00E2                     	ds	3
  1131  00E5                     DecodeGPS@F4937:	
  1132  00E5                     	ds	3
  1133                           
  1134                           	psect	dataBANK1
  1135  00E8                     __pdataBANK1:	
  1136  00E8                     SetupGPS@F4926:	
  1137  00E8                     	ds	4
  1138  00EC                     _validLongitude:	
  1139  00EC                     	ds	3
  1140                           
  1141                           	psect	bssBANK2
  1142  0120                     __pbssBANK2:	
  1143  0120                     _gpsMessage:	
  1144  0120                     	ds	50
  1145                           
  1146                           	psect	dataBANK2
  1147  0152                     __pdataBANK2:	
  1148  0152                     DisableGPS@F4921:	
  1149  0152                     	ds	13
  1150  015F                     DecodeGPS@F4933:	
  1151  015F                     	ds	7
  1152  0166                     SetupGPS@F4924:	
  1153  0166                     	ds	6
  1154                           
  1155                           	psect	bssBANK3
  1156  01A0                     __pbssBANK3:	
  1157  01A0                     _buffer:	
  1158  01A0                     	ds	51
  1159                           
  1160                           	psect	dataBANK3
  1161  01D3                     __pdataBANK3:	
  1162  01D3                     UpdateGPS@F4931:	
  1163  01D3                     	ds	22
  1164                           
  1165                           	psect	bssBANK4
  1166  0220                     __pbssBANK4:	
  1167  0220                     _preRecordingAddresses:	
  1168  0220                     	ds	72
  1169                           
  1170                           	psect	clrtext
  1171  0BF8                     clear_ram0:	
  1172                           ;	Called with FSR0 containing the base address, and
  1173                           ;	WREG with the size to clear
  1174                           
  1175  0BF8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1176  0BF9                     clrloop0:	
  1177  0BF9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1178  0BFA  3101               	addfsr 0,1
  1179  0BFB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1180  0BFC  2BF9               	goto	clrloop0	;have we reached the end yet?
  1181  0BFD  3400               	retlw	0	;all done for this memory range, return
  1182                           
  1183                           	psect	inittext
  1184  0BF2                     init_ram:	
  1185  0BF2  00FE               	movwf	126
  1186  0BF3                     initloop:	
  1187  0BF3  0012               	moviw fsr0++
  1188  0BF4  001E               	movwi fsr1++
  1189  0BF5  0BFE               	decfsz	126,f
  1190  0BF6  2BF3               	goto	initloop
  1191  0BF7  3400               	retlw	0
  1192                           
  1193                           	psect	cstackBANK1
  1194  00A0                     __pcstackBANK1:	
  1195  00A0                     SetupGPS@message:	
  1196                           
  1197                           ; 50 bytes @ 0x0
  1198  00A0                     	ds	50
  1199  00D2                     SetupGPS@startSequence:	
  1200                           
  1201                           ; 6 bytes @ 0x32
  1202  00D2                     	ds	6
  1203  00D8                     SetupGPS@MID:	
  1204                           
  1205                           ; 4 bytes @ 0x38
  1206  00D8                     	ds	4
  1207  00DC                     SetupGPS@x:	
  1208                           
  1209                           ; 2 bytes @ 0x3C
  1210  00DC                     	ds	2
  1211                           
  1212                           	psect	cstackCOMMON
  1213  0070                     __pcstackCOMMON:	
  1214  0070                     ?_InitCLK:	
  1215  0070                     ?_InitGPIO:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0070                     ?_InitADC:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0070                     ?_InitTimer1:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0070                     ?_InitWatchdog:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0070                     ?_InitUART:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0070                     ?_ToggleSleepGPS:	
  1231                           ; 0 bytes @ 0x0
  1232                           
  1233  0070                     ?_SetupGPS:	
  1234                           ; 0 bytes @ 0x0
  1235                           
  1236  0070                     ?_RecordMode:	
  1237                           ; 0 bytes @ 0x0
  1238                           
  1239  0070                     ?_UpdateGPS:	
  1240                           ; 0 bytes @ 0x0
  1241                           
  1242  0070                     ?_GoToSleep:	
  1243                           ; 0 bytes @ 0x0
  1244                           
  1245  0070                     ?_Hibernate:	
  1246                           ; 0 bytes @ 0x0
  1247                           
  1248  0070                     ?_WriteBuffer:	
  1249                           ; 0 bytes @ 0x0
  1250                           
  1251  0070                     ??_WriteBuffer:	
  1252                           ; 0 bytes @ 0x0
  1253                           
  1254  0070                     ?_DecodeGPS:	
  1255                           ; 0 bytes @ 0x0
  1256                           
  1257  0070                     ?_SendGPSSPI:	
  1258                           ; 0 bytes @ 0x0
  1259                           
  1260  0070                     ?_isr:	
  1261                           ; 0 bytes @ 0x0
  1262                           
  1263  0070                     ?_InitSPI:	
  1264                           ; 0 bytes @ 0x0
  1265                           
  1266  0070                     ?_WriteSPI:	
  1267                           ; 0 bytes @ 0x0
  1268                           
  1269  0070                     ?_uart_xmit:	
  1270                           ; 0 bytes @ 0x0
  1271                           
  1272  0070                     ?_CheckDisconnect:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0070                     ?_ReadSPI:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_ReadStatusSPI:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_ReadBuffer:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x0
  1286  0070                     	ds	1
  1287  0071                     WriteBuffer@data:	
  1288                           
  1289                           ; 1 bytes @ 0x1
  1290  0071                     	ds	1
  1291  0072                     ??_isr:	
  1292                           
  1293                           ; 0 bytes @ 0x2
  1294  0072                     	ds	5
  1295  0077                     _isr$570:	
  1296                           
  1297                           ; 2 bytes @ 0x7
  1298  0077                     	ds	2
  1299                           
  1300                           	psect	cstackBANK0
  1301  0020                     __pcstackBANK0:	
  1302  0020                     ??_InitCLK:	
  1303  0020                     ??_InitGPIO:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0020                     ??_InitADC:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0020                     ??_InitTimer1:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0020                     ??_InitWatchdog:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0020                     ??_InitUART:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0020                     ??_ToggleSleepGPS:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0020                     ??_GoToSleep:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0020                     ??_Hibernate:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0020                     ??_InitSPI:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0020                     ??_WriteSPI:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0020                     ??_ReadSPI:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0020                     ??_ReadBuffer:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0020                     ??_uart_xmit:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0020                     ?_compute_checksum:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0020                     ?___bmul:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0020                     ?___wmul:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0020                     ?___lwdiv:	
  1352                           ; 2 bytes @ 0x0
  1353                           
  1354  0020                     uart_xmit@mydata_byte:	
  1355                           ; 2 bytes @ 0x0
  1356                           
  1357  0020                     ___bmul@multiplicand:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0020                     compute_checksum@size:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0020                     ___wmul@multiplier:	
  1364                           ; 2 bytes @ 0x0
  1365                           
  1366  0020                     ___lwdiv@divisor:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x0
  1371  0020                     	ds	1
  1372  0021                     ??___bmul:	
  1373  0021                     ReadSPI@dataByte:	
  1374                           ; 0 bytes @ 0x1
  1375                           
  1376  0021                     ReadBuffer@read_data:	
  1377                           ; 1 bytes @ 0x1
  1378                           
  1379  0021                     GoToSleep@count:	
  1380                           ; 1 bytes @ 0x1
  1381                           
  1382  0021                     Hibernate@count:	
  1383                           ; 1 bytes @ 0x1
  1384                           
  1385                           
  1386                           ; 1 bytes @ 0x1
  1387  0021                     	ds	1
  1388  0022                     ??_compute_checksum:	
  1389  0022                     ___bmul@product:	
  1390                           ; 0 bytes @ 0x2
  1391                           
  1392  0022                     WriteSPI@temp:	
  1393                           ; 1 bytes @ 0x2
  1394                           
  1395  0022                     ___wmul@multiplicand:	
  1396                           ; 2 bytes @ 0x2
  1397                           
  1398  0022                     ___lwdiv@dividend:	
  1399                           ; 2 bytes @ 0x2
  1400                           
  1401                           
  1402                           ; 2 bytes @ 0x2
  1403  0022                     	ds	1
  1404  0023                     ___bmul@multiplier:	
  1405                           
  1406                           ; 1 bytes @ 0x3
  1407  0023                     	ds	1
  1408  0024                     ??___wmul:	
  1409  0024                     ??___lwdiv:	
  1410                           ; 0 bytes @ 0x4
  1411                           
  1412  0024                     WriteSPI@databyte:	
  1413                           ; 0 bytes @ 0x4
  1414                           
  1415  0024                     compute_checksum@checksum:	
  1416                           ; 1 bytes @ 0x4
  1417                           
  1418  0024                     ___wmul@product:	
  1419                           ; 1 bytes @ 0x4
  1420                           
  1421                           
  1422                           ; 2 bytes @ 0x4
  1423  0024                     	ds	1
  1424  0025                     ??_ReadStatusSPI:	
  1425  0025                     compute_checksum@data:	
  1426                           ; 0 bytes @ 0x5
  1427                           
  1428  0025                     ___lwdiv@quotient:	
  1429                           ; 1 bytes @ 0x5
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x5
  1433  0025                     	ds	1
  1434  0026                     ?___awdiv:	
  1435  0026                     ReadStatusSPI@dataRead:	
  1436                           ; 2 bytes @ 0x6
  1437                           
  1438  0026                     compute_checksum@x:	
  1439                           ; 1 bytes @ 0x6
  1440                           
  1441  0026                     ___awdiv@divisor:	
  1442                           ; 2 bytes @ 0x6
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x6
  1446  0026                     	ds	1
  1447  0027                     ??_CheckDisconnect:	
  1448  0027                     ?_WriteOverheadSPI:	
  1449                           ; 0 bytes @ 0x7
  1450                           
  1451  0027                     ___lwdiv@counter:	
  1452                           ; 0 bytes @ 0x7
  1453                           
  1454  0027                     WriteOverheadSPI@address:	
  1455                           ; 1 bytes @ 0x7
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0x7
  1459  0027                     	ds	1
  1460  0028                     ?_uart_write_message:	
  1461  0028                     ?___lwmod:	
  1462                           ; 0 bytes @ 0x8
  1463                           
  1464  0028                     CheckDisconnect@status:	
  1465                           ; 2 bytes @ 0x8
  1466                           
  1467  0028                     uart_write_message@size:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470  0028                     ___awdiv@dividend:	
  1471                           ; 2 bytes @ 0x8
  1472                           
  1473  0028                     ___lwmod@divisor:	
  1474                           ; 2 bytes @ 0x8
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0x8
  1478  0028                     	ds	2
  1479  002A                     ??_uart_write_message:	
  1480  002A                     ??___awdiv:	
  1481                           ; 0 bytes @ 0xA
  1482                           
  1483  002A                     ___lwmod@dividend:	
  1484                           ; 0 bytes @ 0xA
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0xA
  1488  002A                     	ds	1
  1489  002B                     ??_WriteOverheadSPI:	
  1490  002B                     ___awdiv@counter:	
  1491                           ; 0 bytes @ 0xB
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0xB
  1495  002B                     	ds	1
  1496  002C                     ??___lwmod:	
  1497  002C                     ___awdiv@sign:	
  1498                           ; 0 bytes @ 0xC
  1499                           
  1500                           
  1501                           ; 1 bytes @ 0xC
  1502  002C                     	ds	1
  1503  002D                     ___lwmod@counter:	
  1504  002D                     _uart_write_message$1424:	
  1505                           ; 1 bytes @ 0xD
  1506                           
  1507  002D                     ___awdiv@quotient:	
  1508                           ; 2 bytes @ 0xD
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0xD
  1512  002D                     	ds	1
  1513  002E                     ?_sprintf:	
  1514  002E                     sprintf@f:	
  1515                           ; 2 bytes @ 0xE
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0xE
  1519  002E                     	ds	1
  1520  002F                     ??_DecodeGPS:	
  1521  002F                     _uart_write_message$1425:	
  1522                           ; 0 bytes @ 0xF
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0xF
  1526  002F                     	ds	2
  1527  0031                     uart_write_message@x:	
  1528  0031                     WriteOverheadSPI@address_bytes:	
  1529                           ; 2 bytes @ 0x11
  1530                           
  1531                           
  1532                           ; 3 bytes @ 0x11
  1533  0031                     	ds	1
  1534  0032                     DecodeGPS@messageID:	
  1535                           
  1536                           ; 7 bytes @ 0x12
  1537  0032                     	ds	1
  1538  0033                     uart_write_message@checksum:	
  1539                           
  1540                           ; 1 bytes @ 0x13
  1541  0033                     	ds	1
  1542  0034                     ??_sprintf:	
  1543  0034                     WriteOverheadSPI@StatusReg:	
  1544                           ; 0 bytes @ 0x14
  1545                           
  1546  0034                     uart_write_message@data:	
  1547                           ; 1 bytes @ 0x14
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x14
  1551  0034                     	ds	1
  1552  0035                     ??_SendGPSSPI:	
  1553  0035                     uart_write_message@ascii_checksum:	
  1554                           ; 0 bytes @ 0x15
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0x15
  1558  0035                     	ds	1
  1559  0036                     SendGPSSPI@address:	
  1560                           
  1561                           ; 4 bytes @ 0x16
  1562  0036                     	ds	2
  1563  0038                     sprintf@flag:	
  1564                           
  1565                           ; 1 bytes @ 0x18
  1566  0038                     	ds	1
  1567  0039                     DecodeGPS@northSouth:	
  1568  0039                     sprintf@prec:	
  1569                           ; 1 bytes @ 0x19
  1570                           
  1571                           
  1572                           ; 1 bytes @ 0x19
  1573  0039                     	ds	1
  1574  003A                     DecodeGPS@eastWest:	
  1575  003A                     sprintf@ap:	
  1576                           ; 1 bytes @ 0x1A
  1577                           
  1578  003A                     SendGPSSPI@x:	
  1579                           ; 1 bytes @ 0x1A
  1580                           
  1581                           
  1582                           ; 2 bytes @ 0x1A
  1583  003A                     	ds	1
  1584  003B                     DecodeGPS@status:	
  1585  003B                     sprintf@sp:	
  1586                           ; 1 bytes @ 0x1B
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x1B
  1590  003B                     	ds	1
  1591  003C                     ??_RecordMode:	
  1592  003C                     DecodeGPS@latitude:	
  1593                           ; 0 bytes @ 0x1C
  1594                           
  1595  003C                     sprintf@_val:	
  1596                           ; 3 bytes @ 0x1C
  1597                           
  1598                           
  1599                           ; 4 bytes @ 0x1C
  1600  003C                     	ds	3
  1601  003F                     DecodeGPS@longitude:	
  1602                           
  1603                           ; 3 bytes @ 0x1F
  1604  003F                     	ds	1
  1605  0040                     sprintf@c:	
  1606                           
  1607                           ; 1 bytes @ 0x20
  1608  0040                     	ds	1
  1609  0041                     ??_SetupGPS:	
  1610  0041                     RecordMode@count:	
  1611                           ; 0 bytes @ 0x21
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x21
  1615  0041                     	ds	1
  1616  0042                     DecodeGPS@x:	
  1617                           
  1618                           ; 2 bytes @ 0x22
  1619  0042                     	ds	1
  1620  0043                     RecordMode@address:	
  1621                           
  1622                           ; 4 bytes @ 0x23
  1623  0043                     	ds	1
  1624  0044                     ??_UpdateGPS:	
  1625                           
  1626                           ; 0 bytes @ 0x24
  1627  0044                     	ds	1
  1628  0045                     UpdateGPS@GPSupdateMessage:	
  1629                           
  1630                           ; 22 bytes @ 0x25
  1631  0045                     	ds	22
  1632  005B                     ?_main:	
  1633  005B                     main@argc:	
  1634                           ; 2 bytes @ 0x3B
  1635                           
  1636                           
  1637                           ; 2 bytes @ 0x3B
  1638  005B                     	ds	2
  1639  005D                     main@argv:	
  1640                           
  1641                           ; 2 bytes @ 0x3D
  1642  005D                     	ds	2
  1643  005F                     ??_main:	
  1644                           
  1645                           ; 0 bytes @ 0x3F
  1646  005F                     	ds	3
  1647  0062                     main@periodicCounter:	
  1648                           
  1649                           ; 1 bytes @ 0x42
  1650  0062                     	ds	1
  1651                           
  1652                           	psect	maintext
  1653  062B                     __pmaintext:	
  1654 ;;
  1655 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1656 ;;
  1657 ;; *************** function _main *****************
  1658 ;; Defined at:
  1659 ;;		line 20 in file "launcher_main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  argc            2   59[BANK0 ] int 
  1662 ;;  argv            2   61[BANK0 ] PTR PTR unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  periodicCoun    1   66[BANK0 ] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2   59[BANK0 ] int 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 17F/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1674 ;;      Params:         0       4       0       0       0       0       0
  1675 ;;      Locals:         0       1       0       0       0       0       0
  1676 ;;      Temps:          0       3       0       0       0       0       0
  1677 ;;      Totals:         0       8       0       0       0       0       0
  1678 ;;Total ram usage:        8 bytes
  1679 ;; Hardware stack levels required when called:    7
  1680 ;; This function calls:
  1681 ;;		_GoToSleep
  1682 ;;		_Hibernate
  1683 ;;		_InitADC
  1684 ;;		_InitCLK
  1685 ;;		_InitGPIO
  1686 ;;		_InitTimer1
  1687 ;;		_InitUART
  1688 ;;		_InitWatchdog
  1689 ;;		_RecordMode
  1690 ;;		_SetupGPS
  1691 ;;		_ToggleSleepGPS
  1692 ;;		_UpdateGPS
  1693 ;; This function is called by:
  1694 ;;		Startup code after reset
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _main
  1700  062B                     _main:	
  1701                           
  1702                           ;launcher_main.c: 23: InitCLK();
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1706  062B  3187  27F8  3186   	fcall	_InitCLK
  1707                           
  1708                           ;launcher_main.c: 24: InitGPIO();
  1709  062E  318D  255E  3186   	fcall	_InitGPIO
  1710                           
  1711                           ;launcher_main.c: 25: InitADC();
  1712  0631  318D  250D  3186   	fcall	_InitADC
  1713                           
  1714                           ;launcher_main.c: 28: InitTimer1();
  1715  0634  318C  2428  3186   	fcall	_InitTimer1
  1716                           
  1717                           ;launcher_main.c: 29: InitWatchdog();
  1718  0637  318C  2404  3186   	fcall	_InitWatchdog
  1719                           
  1720                           ;launcher_main.c: 30: InitUART();
  1721  063A  318C  2437  3186   	fcall	_InitUART
  1722                           
  1723                           ;launcher_main.c: 32: unsigned char periodicCounter = 10;
  1724  063D  300A               	movlw	10
  1725  063E  0020               	movlb	0	; select bank0
  1726  063F  00DF               	movwf	??_main
  1727  0640  085F               	movf	??_main,w
  1728  0641  00E2               	movwf	main@periodicCounter
  1729                           
  1730                           ;launcher_main.c: 33: gpsIndex = 0;
  1731  0642  01FD               	clrf	_gpsIndex	;volatile
  1732                           
  1733                           ;launcher_main.c: 35: INTCONbits.GIE = 1;
  1734  0643  178B               	bsf	11,7	;volatile
  1735                           
  1736                           ;launcher_main.c: 37: if(!PORTCbits.RC7)
  1737  0644  1B8E               	btfsc	14,7	;volatile
  1738  0645  2E49               	goto	l2840
  1739                           
  1740                           ;launcher_main.c: 38: ToggleSleepGPS();
  1741  0646  318D  258B  3186   	fcall	_ToggleSleepGPS
  1742  0649                     l2840:	
  1743                           
  1744                           ;launcher_main.c: 39: SetupGPS();
  1745  0649  3187  2724  3186   	fcall	_SetupGPS
  1746                           
  1747                           ;launcher_main.c: 42: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1748  064C  0022               	movlb	2	; select bank2
  1749  064D  080D               	movf	13,w	;volatile
  1750  064E  39FF               	andlw	255
  1751  064F  39DF               	andlw	223
  1752  0650  0020               	movlb	0	; select bank0
  1753  0651  00DF               	movwf	??_main
  1754  0652  080D               	movf	13,w	;volatile
  1755  0653  065F               	xorwf	??_main,w
  1756  0654  3900               	andlw	-256
  1757  0655  065F               	xorwf	??_main,w
  1758  0656  008D               	movwf	13	;volatile
  1759                           
  1760                           ;launcher_main.c: 43: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1761  0657  0022               	movlb	2	; select bank2
  1762  0658  080D               	movf	13,w	;volatile
  1763  0659  39FF               	andlw	255
  1764  065A  3810               	iorlw	16
  1765  065B  0020               	movlb	0	; select bank0
  1766  065C  00DF               	movwf	??_main
  1767  065D  080D               	movf	13,w	;volatile
  1768  065E  065F               	xorwf	??_main,w
  1769  065F  3900               	andlw	-256
  1770  0660  065F               	xorwf	??_main,w
  1771  0661  008D               	movwf	13	;volatile
  1772                           
  1773                           ;launcher_main.c: 44: _delay((unsigned long)((100)*(16000000/4000.0)));
  1774  0662  3003               	movlw	3
  1775  0663  00E1               	movwf	??_main+2
  1776  0664  3008               	movlw	8
  1777  0665  00E0               	movwf	??_main+1
  1778  0666  3078               	movlw	120
  1779  0667  00DF               	movwf	??_main
  1780  0668                     u2817:	
  1781  0668  0BDF               	decfsz	??_main,f
  1782  0669  2E68               	goto	u2817
  1783  066A  0BE0               	decfsz	??_main+1,f
  1784  066B  2E68               	goto	u2817
  1785  066C  0BE1               	decfsz	??_main+2,f
  1786  066D  2E68               	goto	u2817
  1787                           
  1788                           ;launcher_main.c: 45: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1789  066E  0022               	movlb	2	; select bank2
  1790  066F  080D               	movf	13,w	;volatile
  1791  0670  39FF               	andlw	255
  1792  0671  39EF               	andlw	239
  1793  0672  0020               	movlb	0	; select bank0
  1794  0673  00DF               	movwf	??_main
  1795  0674  080D               	movf	13,w	;volatile
  1796  0675  065F               	xorwf	??_main,w
  1797  0676  3900               	andlw	-256
  1798  0677  065F               	xorwf	??_main,w
  1799  0678  008D               	movwf	13	;volatile
  1800                           
  1801                           ;launcher_main.c: 48: LATC2 = (1);
  1802  0679  0022               	movlb	2	; select bank2
  1803  067A  150E               	bsf	14,2	;volatile
  1804  067B                     l2852:	
  1805                           ;launcher_main.c: 50: while(1){
  1806                           
  1807                           
  1808                           ;launcher_main.c: 60: LATC2 = (1);
  1809  067B  0022               	movlb	2	; select bank2
  1810  067C  150E               	bsf	14,2	;volatile
  1811                           
  1812                           ;launcher_main.c: 63: if(PORTAbits.RA1)
  1813  067D  0020               	movlb	0	; select bank0
  1814  067E  1C8C               	btfss	12,1	;volatile
  1815  067F  2E8F               	goto	l113
  1816                           
  1817                           ;launcher_main.c: 64: {
  1818                           ;launcher_main.c: 66: PORTBbits.RB0 = 1;
  1819  0680  140D               	bsf	13,0	;volatile
  1820                           
  1821                           ;launcher_main.c: 67: _delay((unsigned long)((100)*(16000000/4000.0)));
  1822  0681  3003               	movlw	3
  1823  0682  00E1               	movwf	??_main+2
  1824  0683  3008               	movlw	8
  1825  0684  00E0               	movwf	??_main+1
  1826  0685  3078               	movlw	120
  1827  0686  00DF               	movwf	??_main
  1828  0687                     u2827:	
  1829  0687  0BDF               	decfsz	??_main,f
  1830  0688  2E87               	goto	u2827
  1831  0689  0BE0               	decfsz	??_main+1,f
  1832  068A  2E87               	goto	u2827
  1833  068B  0BE1               	decfsz	??_main+2,f
  1834  068C  2E87               	goto	u2827
  1835                           
  1836                           ;launcher_main.c: 68: PORTBbits.RB0 = 0;
  1837  068D  0020               	movlb	0	; select bank0
  1838  068E  100D               	bcf	13,0	;volatile
  1839  068F                     l113:	
  1840                           
  1841                           ;launcher_main.c: 69: }
  1842                           ;launcher_main.c: 71: if(recordFlag)
  1843  068F  086C               	movf	_recordFlag,w
  1844  0690  1903               	btfsc	3,2
  1845  0691  2E97               	goto	l2866
  1846                           
  1847                           ;launcher_main.c: 72: {
  1848                           ;launcher_main.c: 73: RecordMode();
  1849  0692  3183  239C  3186   	fcall	_RecordMode
  1850                           
  1851                           ;launcher_main.c: 74: recordFlag = 0;
  1852  0695  0020               	movlb	0	; select bank0
  1853  0696  01EC               	clrf	_recordFlag
  1854  0697                     l2866:	
  1855                           
  1856                           ;launcher_main.c: 75: }
  1857                           ;launcher_main.c: 78: UpdateGPS();
  1858  0697  3187  27B3  3186   	fcall	_UpdateGPS
  1859                           
  1860                           ;launcher_main.c: 80: if(gpsInvalidFlag)
  1861  069A  0020               	movlb	0	; select bank0
  1862  069B  0866               	movf	_gpsInvalidFlag,w
  1863  069C  1903               	btfsc	3,2
  1864  069D  2ED5               	goto	l2878
  1865                           
  1866                           ;launcher_main.c: 81: {
  1867                           ;launcher_main.c: 82: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1868  069E  0022               	movlb	2	; select bank2
  1869  069F  080D               	movf	13,w	;volatile
  1870  06A0  39FF               	andlw	255
  1871  06A1  3820               	iorlw	32
  1872  06A2  0020               	movlb	0	; select bank0
  1873  06A3  00DF               	movwf	??_main
  1874  06A4  080D               	movf	13,w	;volatile
  1875  06A5  065F               	xorwf	??_main,w
  1876  06A6  3900               	andlw	-256
  1877  06A7  065F               	xorwf	??_main,w
  1878  06A8  008D               	movwf	13	;volatile
  1879                           
  1880                           ;launcher_main.c: 83: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1881  06A9  0022               	movlb	2	; select bank2
  1882  06AA  080D               	movf	13,w	;volatile
  1883  06AB  39FF               	andlw	255
  1884  06AC  39EF               	andlw	239
  1885  06AD  0020               	movlb	0	; select bank0
  1886  06AE  00DF               	movwf	??_main
  1887  06AF  080D               	movf	13,w	;volatile
  1888  06B0  065F               	xorwf	??_main,w
  1889  06B1  3900               	andlw	-256
  1890  06B2  065F               	xorwf	??_main,w
  1891  06B3  008D               	movwf	13	;volatile
  1892                           
  1893                           ;launcher_main.c: 84: _delay((unsigned long)((250)*(16000000/4000.0)));
  1894  06B4  3006               	movlw	6
  1895  06B5  00E1               	movwf	??_main+2
  1896  06B6  3013               	movlw	19
  1897  06B7  00E0               	movwf	??_main+1
  1898  06B8  30B1               	movlw	177
  1899  06B9  00DF               	movwf	??_main
  1900  06BA                     u2837:	
  1901  06BA  0BDF               	decfsz	??_main,f
  1902  06BB  2EBA               	goto	u2837
  1903  06BC  0BE0               	decfsz	??_main+1,f
  1904  06BD  2EBA               	goto	u2837
  1905  06BE  0BE1               	decfsz	??_main+2,f
  1906  06BF  2EBA               	goto	u2837
  1907  06C0  3200               	nop2
  1908                           
  1909                           ;launcher_main.c: 85: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1910  06C1  0022               	movlb	2	; select bank2
  1911  06C2  080D               	movf	13,w	;volatile
  1912  06C3  39FF               	andlw	255
  1913  06C4  39DF               	andlw	223
  1914  06C5  0020               	movlb	0	; select bank0
  1915  06C6  00DF               	movwf	??_main
  1916  06C7  080D               	movf	13,w	;volatile
  1917  06C8  065F               	xorwf	??_main,w
  1918  06C9  3900               	andlw	-256
  1919  06CA  065F               	xorwf	??_main,w
  1920  06CB  008D               	movwf	13	;volatile
  1921                           
  1922                           ;launcher_main.c: 86: if(periodicCounter < 14)
  1923  06CC  300E               	movlw	14
  1924  06CD  0262               	subwf	main@periodicCounter,w
  1925  06CE  1803               	skipnc
  1926  06CF  2F07               	goto	l2884
  1927                           
  1928                           ;launcher_main.c: 87: periodicCounter++;
  1929  06D0  3001               	movlw	1
  1930  06D1  00DF               	movwf	??_main
  1931  06D2  085F               	movf	??_main,w
  1932  06D3  07E2               	addwf	main@periodicCounter,f
  1933                           
  1934                           ;launcher_main.c: 88: }
  1935  06D4  2F07               	goto	l2884
  1936  06D5                     l2878:	
  1937                           
  1938                           ;launcher_main.c: 89: else
  1939                           ;launcher_main.c: 90: {
  1940                           ;launcher_main.c: 91: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1941  06D5  0022               	movlb	2	; select bank2
  1942  06D6  080D               	movf	13,w	;volatile
  1943  06D7  39FF               	andlw	255
  1944  06D8  3810               	iorlw	16
  1945  06D9  0020               	movlb	0	; select bank0
  1946  06DA  00DF               	movwf	??_main
  1947  06DB  080D               	movf	13,w	;volatile
  1948  06DC  065F               	xorwf	??_main,w
  1949  06DD  3900               	andlw	-256
  1950  06DE  065F               	xorwf	??_main,w
  1951  06DF  008D               	movwf	13	;volatile
  1952                           
  1953                           ;launcher_main.c: 92: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1954  06E0  0022               	movlb	2	; select bank2
  1955  06E1  080D               	movf	13,w	;volatile
  1956  06E2  39FF               	andlw	255
  1957  06E3  39DF               	andlw	223
  1958  06E4  0020               	movlb	0	; select bank0
  1959  06E5  00DF               	movwf	??_main
  1960  06E6  080D               	movf	13,w	;volatile
  1961  06E7  065F               	xorwf	??_main,w
  1962  06E8  3900               	andlw	-256
  1963  06E9  065F               	xorwf	??_main,w
  1964  06EA  008D               	movwf	13	;volatile
  1965                           
  1966                           ;launcher_main.c: 93: _delay((unsigned long)((250)*(16000000/4000.0)));
  1967  06EB  3006               	movlw	6
  1968  06EC  00E1               	movwf	??_main+2
  1969  06ED  3013               	movlw	19
  1970  06EE  00E0               	movwf	??_main+1
  1971  06EF  30B1               	movlw	177
  1972  06F0  00DF               	movwf	??_main
  1973  06F1                     u2847:	
  1974  06F1  0BDF               	decfsz	??_main,f
  1975  06F2  2EF1               	goto	u2847
  1976  06F3  0BE0               	decfsz	??_main+1,f
  1977  06F4  2EF1               	goto	u2847
  1978  06F5  0BE1               	decfsz	??_main+2,f
  1979  06F6  2EF1               	goto	u2847
  1980  06F7  3200               	nop2
  1981                           
  1982                           ;launcher_main.c: 94: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1983  06F8  0022               	movlb	2	; select bank2
  1984  06F9  080D               	movf	13,w	;volatile
  1985  06FA  39FF               	andlw	255
  1986  06FB  39EF               	andlw	239
  1987  06FC  0020               	movlb	0	; select bank0
  1988  06FD  00DF               	movwf	??_main
  1989  06FE  080D               	movf	13,w	;volatile
  1990  06FF  065F               	xorwf	??_main,w
  1991  0700  3900               	andlw	-256
  1992  0701  065F               	xorwf	??_main,w
  1993  0702  008D               	movwf	13	;volatile
  1994                           
  1995                           ;launcher_main.c: 95: periodicCounter = 10;
  1996  0703  300A               	movlw	10
  1997  0704  00DF               	movwf	??_main
  1998  0705  085F               	movf	??_main,w
  1999  0706  00E2               	movwf	main@periodicCounter
  2000  0707                     l2884:	
  2001                           
  2002                           ;launcher_main.c: 96: }
  2003                           ;launcher_main.c: 98: if(!recordFlag)
  2004  0707  08EC               	movf	_recordFlag,f
  2005  0708  1D03               	skipz
  2006  0709  2E7B               	goto	l2852
  2007                           
  2008                           ;launcher_main.c: 99: {
  2009                           ;launcher_main.c: 100: if(PORTAbits.RA1)
  2010  070A  1C8C               	btfss	12,1	;volatile
  2011  070B  2F11               	goto	l2890
  2012                           
  2013                           ;launcher_main.c: 101: GoToSleep(10);
  2014  070C  300A               	movlw	10
  2015  070D  318C  2466  3186   	fcall	_GoToSleep
  2016  0710  2E7B               	goto	l2852
  2017  0711                     l2890:	
  2018                           
  2019                           ;launcher_main.c: 102: else if(gpsInvalidFlag)
  2020  0711  0020               	movlb	0	; select bank0
  2021  0712  0866               	movf	_gpsInvalidFlag,w
  2022  0713  1903               	btfsc	3,2
  2023  0714  2F1A               	goto	l2894
  2024                           
  2025                           ;launcher_main.c: 103: GoToSleep(periodicCounter);
  2026  0715  0862               	movf	main@periodicCounter,w
  2027  0716  318C  2466  3186   	fcall	_GoToSleep
  2028  0719  2E7B               	goto	l2852
  2029  071A                     l2894:	
  2030                           
  2031                           ;launcher_main.c: 104: else
  2032                           ;launcher_main.c: 105: {
  2033                           ;launcher_main.c: 106: ToggleSleepGPS();
  2034  071A  318D  258B  3186   	fcall	_ToggleSleepGPS
  2035                           
  2036                           ;launcher_main.c: 107: Hibernate();
  2037  071D  318C  24F4  3186   	fcall	_Hibernate
  2038                           
  2039                           ;launcher_main.c: 108: ToggleSleepGPS();
  2040  0720  318D  258B  3186   	fcall	_ToggleSleepGPS
  2041  0723  2E7B               	goto	l2852
  2042  0724                     __end_of_main:	
  2043                           ;launcher_main.c: 109: }
  2044                           ;launcher_main.c: 110: }
  2045                           ;launcher_main.c: 113: }
  2046                           ;launcher_main.c: 115: return (0);
  2047                           ;	Return value of _main is never used
  2048                           
  2049                           
  2050                           	psect	text1
  2051  07B3                     __ptext1:	
  2052 ;; *************** function _UpdateGPS *****************
  2053 ;; Defined at:
  2054 ;;		line 374 in file "launcher_functions.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  GPSupdateMes   22   37[BANK0 ] unsigned char [22]
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:         0       0       0       0       0       0       0
  2069 ;;      Locals:         0      22       0       0       0       0       0
  2070 ;;      Temps:          0       1       0       0       0       0       0
  2071 ;;      Totals:         0      23       0       0       0       0       0
  2072 ;;Total ram usage:       23 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    4
  2075 ;; This function calls:
  2076 ;;		_DecodeGPS
  2077 ;;		_uart_write_message
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function _UpdateGPS
  2085  07B3                     _UpdateGPS:	
  2086                           
  2087                           ;launcher_functions.c: 377: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,01,00*"
      +                          ;
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2091  07B3  30D3               	movlw	low UpdateGPS@F4931
  2092  07B4  0086               	movwf	6
  2093  07B5  3001               	movlw	high UpdateGPS@F4931
  2094  07B6  0087               	movwf	7
  2095  07B7  3045               	movlw	low UpdateGPS@GPSupdateMessage
  2096  07B8  0084               	movwf	4
  2097  07B9  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2098  07BA  0085               	movwf	5
  2099  07BB  3016               	movlw	22
  2100  07BC  0020               	movlb	0	; select bank0
  2101  07BD  00C4               	movwf	??_UpdateGPS
  2102  07BE                     u2320:	
  2103  07BE  0016               	moviw fsr1++
  2104  07BF  001A               	movwi fsr0++
  2105  07C0  0BC4               	decfsz	??_UpdateGPS,f
  2106  07C1  2FBE               	goto	u2320
  2107                           
  2108                           ;launcher_functions.c: 380: RCIE = 1;
  2109  07C2  0021               	movlb	1	; select bank1
  2110  07C3  1691               	bsf	17,5	;volatile
  2111                           
  2112                           ;launcher_functions.c: 381: PEIE = 1;
  2113  07C4  170B               	bsf	11,6	;volatile
  2114                           
  2115                           ;launcher_functions.c: 382: GIE = 1;
  2116  07C5  178B               	bsf	11,7	;volatile
  2117                           
  2118                           ;launcher_functions.c: 387: gpsIndex = 0;
  2119  07C6  01FD               	clrf	_gpsIndex	;volatile
  2120                           
  2121                           ;launcher_functions.c: 388: uart_write_message(GPSupdateMessage, 22);
  2122  07C7  3016               	movlw	22
  2123  07C8  0020               	movlb	0	; select bank0
  2124  07C9  00A8               	movwf	uart_write_message@size
  2125  07CA  3000               	movlw	0
  2126  07CB  00A9               	movwf	uart_write_message@size+1
  2127  07CC  3045               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2128  07CD  318F  278A  3187   	fcall	_uart_write_message
  2129                           
  2130                           ;launcher_functions.c: 389: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  2131  07D0  0022               	movlb	2	; select bank2
  2132  07D1  080D               	movf	13,w	;volatile
  2133  07D2  39FF               	andlw	255
  2134  07D3  3820               	iorlw	32
  2135  07D4  0020               	movlb	0	; select bank0
  2136  07D5  00C4               	movwf	??_UpdateGPS
  2137  07D6  080D               	movf	13,w	;volatile
  2138  07D7  0644               	xorwf	??_UpdateGPS,w
  2139  07D8  3900               	andlw	-256
  2140  07D9  0644               	xorwf	??_UpdateGPS,w
  2141  07DA  008D               	movwf	13	;volatile
  2142                           
  2143                           ;launcher_functions.c: 390: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  2144  07DB  0022               	movlb	2	; select bank2
  2145  07DC  080D               	movf	13,w	;volatile
  2146  07DD  39FF               	andlw	255
  2147  07DE  39EF               	andlw	239
  2148  07DF  0020               	movlb	0	; select bank0
  2149  07E0  00C4               	movwf	??_UpdateGPS
  2150  07E1  080D               	movf	13,w	;volatile
  2151  07E2  0644               	xorwf	??_UpdateGPS,w
  2152  07E3  3900               	andlw	-256
  2153  07E4  0644               	xorwf	??_UpdateGPS,w
  2154  07E5  008D               	movwf	13	;volatile
  2155  07E6                     l2788:	
  2156                           ;launcher_functions.c: 391: do
  2157                           
  2158                           
  2159                           ;launcher_functions.c: 392: {
  2160                           ;launcher_functions.c: 412: }while(!messageDoneFlag);
  2161  07E6  086B               	movf	_messageDoneFlag,w
  2162  07E7  1903               	btfsc	3,2
  2163  07E8  2FE6               	goto	l2788
  2164                           
  2165                           ;launcher_functions.c: 413: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  2166  07E9  0022               	movlb	2	; select bank2
  2167  07EA  080D               	movf	13,w	;volatile
  2168  07EB  39FF               	andlw	255
  2169  07EC  39DF               	andlw	223
  2170  07ED  0020               	movlb	0	; select bank0
  2171  07EE  00C4               	movwf	??_UpdateGPS
  2172  07EF  080D               	movf	13,w	;volatile
  2173  07F0  0644               	xorwf	??_UpdateGPS,w
  2174  07F1  3900               	andlw	-256
  2175  07F2  0644               	xorwf	??_UpdateGPS,w
  2176  07F3  008D               	movwf	13	;volatile
  2177                           
  2178                           ;launcher_functions.c: 414: messageDoneFlag = 0;
  2179  07F4  01EB               	clrf	_messageDoneFlag
  2180                           
  2181                           ;launcher_functions.c: 415: DecodeGPS();
  2182  07F5  3181  213E         	fcall	_DecodeGPS
  2183  07F7  0008               	return
  2184  07F8                     __end_of_UpdateGPS:	
  2185                           
  2186                           	psect	text2
  2187  013E                     __ptext2:	
  2188 ;; *************** function _DecodeGPS *****************
  2189 ;; Defined at:
  2190 ;;		line 421 in file "launcher_functions.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  messageID       7   18[BANK0 ] unsigned char [7]
  2195 ;;  longitude       3   31[BANK0 ] unsigned char [3]
  2196 ;;  latitude        3   28[BANK0 ] unsigned char [3]
  2197 ;;  x               2   34[BANK0 ] int 
  2198 ;;  status          1   27[BANK0 ] unsigned char 
  2199 ;;  eastWest        1   26[BANK0 ] unsigned char 
  2200 ;;  northSouth      1   25[BANK0 ] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;		None               void
  2203 ;; Registers used:
  2204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2210 ;;      Params:         0       0       0       0       0       0       0
  2211 ;;      Locals:         0      18       0       0       0       0       0
  2212 ;;      Temps:          0       3       0       0       0       0       0
  2213 ;;      Totals:         0      21       0       0       0       0       0
  2214 ;;Total ram usage:       21 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		___awdiv
  2219 ;;		___bmul
  2220 ;;		___wmul
  2221 ;; This function is called by:
  2222 ;;		_UpdateGPS
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _DecodeGPS
  2228  013E                     _DecodeGPS:	
  2229                           
  2230                           ;launcher_functions.c: 424: unsigned char messageID[7] = "$GPGLL";
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2234  013E  305F               	movlw	low DecodeGPS@F4933
  2235  013F  0086               	movwf	6
  2236  0140  3001               	movlw	high DecodeGPS@F4933
  2237  0141  0087               	movwf	7
  2238  0142  3032               	movlw	low DecodeGPS@messageID
  2239  0143  0084               	movwf	4
  2240  0144  3000               	movlw	high DecodeGPS@messageID
  2241  0145  0085               	movwf	5
  2242  0146  3007               	movlw	7
  2243  0147  0020               	movlb	0	; select bank0
  2244  0148  00AF               	movwf	??_DecodeGPS
  2245  0149                     u1970:	
  2246  0149  0016               	moviw fsr1++
  2247  014A  001A               	movwi fsr0++
  2248  014B  0BAF               	decfsz	??_DecodeGPS,f
  2249  014C  2949               	goto	u1970
  2250                           
  2251                           ;launcher_functions.c: 425: unsigned char latitude[3] = {0,0,0};
  2252  014D  0021               	movlb	1	; select bank1
  2253  014E  0862               	movf	DecodeGPS@F4935^(0+128),w
  2254  014F  0020               	movlb	0	; select bank0
  2255  0150  00BC               	movwf	DecodeGPS@latitude
  2256  0151  0021               	movlb	1	; select bank1
  2257  0152  0863               	movf	(DecodeGPS@F4935+1)^(0+128),w
  2258  0153  0020               	movlb	0	; select bank0
  2259  0154  00BD               	movwf	DecodeGPS@latitude+1
  2260  0155  0021               	movlb	1	; select bank1
  2261  0156  0864               	movf	(DecodeGPS@F4935+2)^(0+128),w
  2262  0157  0020               	movlb	0	; select bank0
  2263  0158  00BE               	movwf	DecodeGPS@latitude+2
  2264                           
  2265                           ;launcher_functions.c: 426: unsigned char longitude[3] = {0,0,0};
  2266  0159  0021               	movlb	1	; select bank1
  2267  015A  0865               	movf	DecodeGPS@F4937^(0+128),w
  2268  015B  0020               	movlb	0	; select bank0
  2269  015C  00BF               	movwf	DecodeGPS@longitude
  2270  015D  0021               	movlb	1	; select bank1
  2271  015E  0866               	movf	(DecodeGPS@F4937+1)^(0+128),w
  2272  015F  0020               	movlb	0	; select bank0
  2273  0160  00C0               	movwf	DecodeGPS@longitude+1
  2274  0161  0021               	movlb	1	; select bank1
  2275  0162  0867               	movf	(DecodeGPS@F4937+2)^(0+128),w
  2276  0163  0020               	movlb	0	; select bank0
  2277  0164  00C1               	movwf	DecodeGPS@longitude+2
  2278                           
  2279                           ;launcher_functions.c: 427: unsigned char northSouth;
  2280                           ;launcher_functions.c: 428: unsigned char eastWest;
  2281                           ;launcher_functions.c: 429: unsigned char status;
  2282                           ;launcher_functions.c: 430: int x;
  2283                           ;launcher_functions.c: 432: for(x=0;x<6;x++)
  2284  0165  01C2               	clrf	DecodeGPS@x
  2285  0166  01C3               	clrf	DecodeGPS@x+1
  2286  0167  0843               	movf	DecodeGPS@x+1,w
  2287  0168  3A80               	xorlw	128
  2288  0169  00AF               	movwf	??_DecodeGPS
  2289  016A  3080               	movlw	128
  2290  016B  022F               	subwf	??_DecodeGPS,w
  2291  016C  1D03               	skipz
  2292  016D  2970               	goto	u1985
  2293  016E  3006               	movlw	6
  2294  016F  0242               	subwf	DecodeGPS@x,w
  2295  0170                     u1985:	
  2296  0170  1803               	btfsc	3,0
  2297  0171  2992               	goto	l2352
  2298  0172                     l2346:	
  2299                           
  2300                           ;launcher_functions.c: 433: {
  2301                           ;launcher_functions.c: 434: if(gpsMessage[x] != messageID[x])
  2302  0172  0020               	movlb	0	; select bank0
  2303  0173  0842               	movf	DecodeGPS@x,w
  2304  0174  3E32               	addlw	DecodeGPS@messageID& (0+255)
  2305  0175  0086               	movwf	6
  2306  0176  0187               	clrf	7
  2307  0177  0842               	movf	DecodeGPS@x,w
  2308  0178  3E20               	addlw	_gpsMessage& (0+255)
  2309  0179  0084               	movwf	4
  2310  017A  3001               	movlw	1	; select bank2/3
  2311  017B  0085               	movwf	5
  2312  017C  0800               	movf	0,w
  2313  017D  0601               	xorwf	1,w
  2314  017E  1903               	skipnz
  2315  017F  2983               	goto	l2350
  2316                           
  2317                           ;launcher_functions.c: 435: {
  2318                           ;launcher_functions.c: 436: gpsInvalidFlag = 1;
  2319  0180  01E6               	clrf	_gpsInvalidFlag
  2320  0181  0AE6               	incf	_gpsInvalidFlag,f
  2321                           
  2322                           ;launcher_functions.c: 437: return;
  2323  0182  0008               	return
  2324  0183                     l2350:	
  2325  0183  3001               	movlw	1
  2326  0184  07C2               	addwf	DecodeGPS@x,f
  2327  0185  3000               	movlw	0
  2328  0186  3DC3               	addwfc	DecodeGPS@x+1,f
  2329  0187  0843               	movf	DecodeGPS@x+1,w
  2330  0188  3A80               	xorlw	128
  2331  0189  00AF               	movwf	??_DecodeGPS
  2332  018A  3080               	movlw	128
  2333  018B  022F               	subwf	??_DecodeGPS,w
  2334  018C  1D03               	skipz
  2335  018D  2990               	goto	u2005
  2336  018E  3006               	movlw	6
  2337  018F  0242               	subwf	DecodeGPS@x,w
  2338  0190                     u2005:	
  2339  0190  1C03               	skipc
  2340  0191  2972               	goto	l2346
  2341  0192                     l2352:	
  2342                           
  2343                           ;launcher_functions.c: 438: }
  2344                           ;launcher_functions.c: 439: }
  2345                           ;launcher_functions.c: 442: x = x + 1;
  2346  0192  0020               	movlb	0	; select bank0
  2347  0193  0842               	movf	DecodeGPS@x,w
  2348  0194  3E01               	addlw	1
  2349  0195  00C2               	movwf	DecodeGPS@x
  2350  0196  3000               	movlw	0
  2351  0197  3D43               	addwfc	DecodeGPS@x+1,w
  2352  0198  00C3               	movwf	DecodeGPS@x+1
  2353                           
  2354                           ;launcher_functions.c: 445: if(gpsMessage[x]!= ',')
  2355  0199  0842               	movf	DecodeGPS@x,w
  2356  019A  3E20               	addlw	_gpsMessage& (0+255)
  2357  019B  0086               	movwf	6
  2358  019C  3001               	movlw	1	; select bank2/3
  2359  019D  0087               	movwf	7
  2360  019E  0801               	movf	1,w
  2361  019F  3A2C               	xorlw	44
  2362  01A0  1903               	skipnz
  2363  01A1  2A3B               	goto	l2384
  2364                           
  2365                           ;launcher_functions.c: 446: {
  2366                           ;launcher_functions.c: 448: latitude[0] = (gpsMessage[x++] - 48)*10;
  2367  01A2  300A               	movlw	10
  2368  01A3  00AF               	movwf	??_DecodeGPS
  2369  01A4  082F               	movf	??_DecodeGPS,w
  2370  01A5  00A0               	movwf	___bmul@multiplicand
  2371  01A6  0842               	movf	DecodeGPS@x,w
  2372  01A7  3E20               	addlw	_gpsMessage& (0+255)
  2373  01A8  0086               	movwf	6
  2374  01A9  3001               	movlw	1	; select bank2/3
  2375  01AA  0087               	movwf	7
  2376  01AB  0801               	movf	1,w
  2377  01AC  3ED0               	addlw	208
  2378  01AD  318C  248A  3181   	fcall	___bmul
  2379  01B0  0020               	movlb	0	; select bank0
  2380  01B1  00B0               	movwf	??_DecodeGPS+1
  2381  01B2  0830               	movf	??_DecodeGPS+1,w
  2382  01B3  00BC               	movwf	DecodeGPS@latitude
  2383  01B4  3001               	movlw	1
  2384  01B5  07C2               	addwf	DecodeGPS@x,f
  2385  01B6  3000               	movlw	0
  2386  01B7  3DC3               	addwfc	DecodeGPS@x+1,f
  2387                           
  2388                           ;launcher_functions.c: 449: latitude[0] += (gpsMessage[x++] - 48);
  2389  01B8  0842               	movf	DecodeGPS@x,w
  2390  01B9  3E20               	addlw	_gpsMessage& (0+255)
  2391  01BA  0086               	movwf	6
  2392  01BB  3001               	movlw	1	; select bank2/3
  2393  01BC  0087               	movwf	7
  2394  01BD  0801               	movf	1,w
  2395  01BE  3ED0               	addlw	208
  2396  01BF  00AF               	movwf	??_DecodeGPS
  2397  01C0  082F               	movf	??_DecodeGPS,w
  2398  01C1  07BC               	addwf	DecodeGPS@latitude,f
  2399  01C2  3001               	movlw	1
  2400  01C3  07C2               	addwf	DecodeGPS@x,f
  2401  01C4  3000               	movlw	0
  2402  01C5  3DC3               	addwfc	DecodeGPS@x+1,f
  2403                           
  2404                           ;launcher_functions.c: 452: latitude[1] = (gpsMessage[x++] - 48)*10;
  2405  01C6  300A               	movlw	10
  2406  01C7  00AF               	movwf	??_DecodeGPS
  2407  01C8  082F               	movf	??_DecodeGPS,w
  2408  01C9  00A0               	movwf	___bmul@multiplicand
  2409  01CA  0842               	movf	DecodeGPS@x,w
  2410  01CB  3E20               	addlw	_gpsMessage& (0+255)
  2411  01CC  0086               	movwf	6
  2412  01CD  3001               	movlw	1	; select bank2/3
  2413  01CE  0087               	movwf	7
  2414  01CF  0801               	movf	1,w
  2415  01D0  3ED0               	addlw	208
  2416  01D1  318C  248A  3181   	fcall	___bmul
  2417  01D4  0020               	movlb	0	; select bank0
  2418  01D5  00B0               	movwf	??_DecodeGPS+1
  2419  01D6  0830               	movf	??_DecodeGPS+1,w
  2420  01D7  00BD               	movwf	DecodeGPS@latitude+1
  2421  01D8  3001               	movlw	1
  2422  01D9  07C2               	addwf	DecodeGPS@x,f
  2423  01DA  3000               	movlw	0
  2424  01DB  3DC3               	addwfc	DecodeGPS@x+1,f
  2425                           
  2426                           ;launcher_functions.c: 453: latitude[1] += (gpsMessage[x++] - 48);
  2427  01DC  0842               	movf	DecodeGPS@x,w
  2428  01DD  3E20               	addlw	_gpsMessage& (0+255)
  2429  01DE  0086               	movwf	6
  2430  01DF  3001               	movlw	1	; select bank2/3
  2431  01E0  0087               	movwf	7
  2432  01E1  0801               	movf	1,w
  2433  01E2  3ED0               	addlw	208
  2434  01E3  00AF               	movwf	??_DecodeGPS
  2435  01E4  082F               	movf	??_DecodeGPS,w
  2436  01E5  07BD               	addwf	DecodeGPS@latitude+1,f
  2437  01E6  3001               	movlw	1
  2438  01E7  07C2               	addwf	DecodeGPS@x,f
  2439  01E8  3000               	movlw	0
  2440  01E9  3DC3               	addwfc	DecodeGPS@x+1,f
  2441                           
  2442                           ;launcher_functions.c: 456: x = x + 1;
  2443  01EA  0842               	movf	DecodeGPS@x,w
  2444  01EB  3E01               	addlw	1
  2445  01EC  00C2               	movwf	DecodeGPS@x
  2446  01ED  3000               	movlw	0
  2447  01EE  3D43               	addwfc	DecodeGPS@x+1,w
  2448  01EF  00C3               	movwf	DecodeGPS@x+1
  2449                           
  2450                           ;launcher_functions.c: 459: latitude[2] = (gpsMessage[x++] - 48)*10;
  2451  01F0  300A               	movlw	10
  2452  01F1  00AF               	movwf	??_DecodeGPS
  2453  01F2  082F               	movf	??_DecodeGPS,w
  2454  01F3  00A0               	movwf	___bmul@multiplicand
  2455  01F4  0842               	movf	DecodeGPS@x,w
  2456  01F5  3E20               	addlw	_gpsMessage& (0+255)
  2457  01F6  0086               	movwf	6
  2458  01F7  3001               	movlw	1	; select bank2/3
  2459  01F8  0087               	movwf	7
  2460  01F9  0801               	movf	1,w
  2461  01FA  3ED0               	addlw	208
  2462  01FB  318C  248A  3181   	fcall	___bmul
  2463  01FE  0020               	movlb	0	; select bank0
  2464  01FF  00B0               	movwf	??_DecodeGPS+1
  2465  0200  0830               	movf	??_DecodeGPS+1,w
  2466  0201  00BE               	movwf	DecodeGPS@latitude+2
  2467  0202  3001               	movlw	1
  2468  0203  07C2               	addwf	DecodeGPS@x,f
  2469  0204  3000               	movlw	0
  2470  0205  3DC3               	addwfc	DecodeGPS@x+1,f
  2471                           
  2472                           ;launcher_functions.c: 460: latitude[2] += (gpsMessage[x++] - 48);
  2473  0206  0842               	movf	DecodeGPS@x,w
  2474  0207  3E20               	addlw	_gpsMessage& (0+255)
  2475  0208  0086               	movwf	6
  2476  0209  3001               	movlw	1	; select bank2/3
  2477  020A  0087               	movwf	7
  2478  020B  0801               	movf	1,w
  2479  020C  3ED0               	addlw	208
  2480  020D  00AF               	movwf	??_DecodeGPS
  2481  020E  082F               	movf	??_DecodeGPS,w
  2482  020F  07BE               	addwf	DecodeGPS@latitude+2,f
  2483  0210  3001               	movlw	1
  2484  0211  07C2               	addwf	DecodeGPS@x,f
  2485  0212  3000               	movlw	0
  2486  0213  3DC3               	addwfc	DecodeGPS@x+1,f
  2487                           
  2488                           ;launcher_functions.c: 461: latitude[2] = (latitude[2]*60)/100;
  2489  0214  3064               	movlw	100
  2490  0215  00A6               	movwf	___awdiv@divisor
  2491  0216  3000               	movlw	0
  2492  0217  00A7               	movwf	___awdiv@divisor+1
  2493  0218  083E               	movf	DecodeGPS@latitude+2,w
  2494  0219  00AF               	movwf	??_DecodeGPS
  2495  021A  01B0               	clrf	??_DecodeGPS+1
  2496  021B  082F               	movf	??_DecodeGPS,w
  2497  021C  00A0               	movwf	___wmul@multiplier
  2498  021D  0830               	movf	??_DecodeGPS+1,w
  2499  021E  00A1               	movwf	___wmul@multiplier+1
  2500  021F  303C               	movlw	60
  2501  0220  00A2               	movwf	___wmul@multiplicand
  2502  0221  3000               	movlw	0
  2503  0222  00A3               	movwf	___wmul@multiplicand+1
  2504  0223  318D  2540  3181   	fcall	___wmul
  2505  0226  0020               	movlb	0	; select bank0
  2506  0227  0821               	movf	?___wmul+1,w
  2507  0228  01A9               	clrf	___awdiv@dividend+1
  2508  0229  07A9               	addwf	___awdiv@dividend+1,f
  2509  022A  0820               	movf	?___wmul,w
  2510  022B  01A8               	clrf	___awdiv@dividend
  2511  022C  07A8               	addwf	___awdiv@dividend,f
  2512  022D  318E  2660  3181   	fcall	___awdiv
  2513  0230  0020               	movlb	0	; select bank0
  2514  0231  0826               	movf	?___awdiv,w
  2515  0232  00B1               	movwf	??_DecodeGPS+2
  2516  0233  0831               	movf	??_DecodeGPS+2,w
  2517  0234  00BE               	movwf	DecodeGPS@latitude+2
  2518                           
  2519                           ;launcher_functions.c: 464: x = x + 2;
  2520  0235  0842               	movf	DecodeGPS@x,w
  2521  0236  3E02               	addlw	2
  2522  0237  00C2               	movwf	DecodeGPS@x
  2523  0238  3000               	movlw	0
  2524  0239  3D43               	addwfc	DecodeGPS@x+1,w
  2525  023A  00C3               	movwf	DecodeGPS@x+1
  2526  023B                     l2384:	
  2527                           
  2528                           ;launcher_functions.c: 465: }
  2529                           ;launcher_functions.c: 468: x = x + 1;
  2530  023B  0842               	movf	DecodeGPS@x,w
  2531  023C  3E01               	addlw	1
  2532  023D  00C2               	movwf	DecodeGPS@x
  2533  023E  3000               	movlw	0
  2534  023F  3D43               	addwfc	DecodeGPS@x+1,w
  2535  0240  00C3               	movwf	DecodeGPS@x+1
  2536                           
  2537                           ;launcher_functions.c: 471: if(gpsMessage[x] != ',')
  2538  0241  0842               	movf	DecodeGPS@x,w
  2539  0242  3E20               	addlw	_gpsMessage& (0+255)
  2540  0243  0086               	movwf	6
  2541  0244  3001               	movlw	1	; select bank2/3
  2542  0245  0087               	movwf	7
  2543  0246  0801               	movf	1,w
  2544  0247  3A2C               	xorlw	44
  2545  0248  1903               	skipnz
  2546  0249  2A57               	goto	l2392
  2547                           
  2548                           ;launcher_functions.c: 472: northSouth = gpsMessage[x++];
  2549  024A  0842               	movf	DecodeGPS@x,w
  2550  024B  3E20               	addlw	_gpsMessage& (0+255)
  2551  024C  0086               	movwf	6
  2552  024D  3001               	movlw	1	; select bank2/3
  2553  024E  0087               	movwf	7
  2554  024F  0801               	movf	1,w
  2555  0250  00AF               	movwf	??_DecodeGPS
  2556  0251  082F               	movf	??_DecodeGPS,w
  2557  0252  00B9               	movwf	DecodeGPS@northSouth
  2558  0253  3001               	movlw	1
  2559  0254  07C2               	addwf	DecodeGPS@x,f
  2560  0255  3000               	movlw	0
  2561  0256  3DC3               	addwfc	DecodeGPS@x+1,f
  2562  0257                     l2392:	
  2563                           
  2564                           ;launcher_functions.c: 475: x = x + 1;
  2565  0257  0842               	movf	DecodeGPS@x,w
  2566  0258  3E01               	addlw	1
  2567  0259  00C2               	movwf	DecodeGPS@x
  2568  025A  3000               	movlw	0
  2569  025B  3D43               	addwfc	DecodeGPS@x+1,w
  2570  025C  00C3               	movwf	DecodeGPS@x+1
  2571                           
  2572                           ;launcher_functions.c: 478: if(gpsMessage[x]!= ',')
  2573  025D  0842               	movf	DecodeGPS@x,w
  2574  025E  3E20               	addlw	_gpsMessage& (0+255)
  2575  025F  0086               	movwf	6
  2576  0260  3001               	movlw	1	; select bank2/3
  2577  0261  0087               	movwf	7
  2578  0262  0801               	movf	1,w
  2579  0263  3A2C               	xorlw	44
  2580  0264  1903               	skipnz
  2581  0265  2B15               	goto	l2428
  2582                           
  2583                           ;launcher_functions.c: 479: {
  2584                           ;launcher_functions.c: 481: longitude[0] = (gpsMessage[x++] - 48)*100;
  2585  0266  3064               	movlw	100
  2586  0267  00AF               	movwf	??_DecodeGPS
  2587  0268  082F               	movf	??_DecodeGPS,w
  2588  0269  00A0               	movwf	___bmul@multiplicand
  2589  026A  0842               	movf	DecodeGPS@x,w
  2590  026B  3E20               	addlw	_gpsMessage& (0+255)
  2591  026C  0086               	movwf	6
  2592  026D  3001               	movlw	1	; select bank2/3
  2593  026E  0087               	movwf	7
  2594  026F  0801               	movf	1,w
  2595  0270  3ED0               	addlw	208
  2596  0271  318C  248A  3181   	fcall	___bmul
  2597  0274  0020               	movlb	0	; select bank0
  2598  0275  00B0               	movwf	??_DecodeGPS+1
  2599  0276  0830               	movf	??_DecodeGPS+1,w
  2600  0277  00BF               	movwf	DecodeGPS@longitude
  2601  0278  3001               	movlw	1
  2602  0279  07C2               	addwf	DecodeGPS@x,f
  2603  027A  3000               	movlw	0
  2604  027B  3DC3               	addwfc	DecodeGPS@x+1,f
  2605                           
  2606                           ;launcher_functions.c: 482: longitude[0] += (gpsMessage[x++] - 48)*10;
  2607  027C  300A               	movlw	10
  2608  027D  00AF               	movwf	??_DecodeGPS
  2609  027E  082F               	movf	??_DecodeGPS,w
  2610  027F  00A0               	movwf	___bmul@multiplicand
  2611  0280  0842               	movf	DecodeGPS@x,w
  2612  0281  3E20               	addlw	_gpsMessage& (0+255)
  2613  0282  0086               	movwf	6
  2614  0283  3001               	movlw	1	; select bank2/3
  2615  0284  0087               	movwf	7
  2616  0285  0801               	movf	1,w
  2617  0286  3ED0               	addlw	208
  2618  0287  318C  248A  3181   	fcall	___bmul
  2619  028A  0020               	movlb	0	; select bank0
  2620  028B  00B0               	movwf	??_DecodeGPS+1
  2621  028C  0830               	movf	??_DecodeGPS+1,w
  2622  028D  07BF               	addwf	DecodeGPS@longitude,f
  2623  028E  3001               	movlw	1
  2624  028F  07C2               	addwf	DecodeGPS@x,f
  2625  0290  3000               	movlw	0
  2626  0291  3DC3               	addwfc	DecodeGPS@x+1,f
  2627                           
  2628                           ;launcher_functions.c: 483: longitude[0] += (gpsMessage[x++] - 48);
  2629  0292  0842               	movf	DecodeGPS@x,w
  2630  0293  3E20               	addlw	_gpsMessage& (0+255)
  2631  0294  0086               	movwf	6
  2632  0295  3001               	movlw	1	; select bank2/3
  2633  0296  0087               	movwf	7
  2634  0297  0801               	movf	1,w
  2635  0298  3ED0               	addlw	208
  2636  0299  00AF               	movwf	??_DecodeGPS
  2637  029A  082F               	movf	??_DecodeGPS,w
  2638  029B  07BF               	addwf	DecodeGPS@longitude,f
  2639  029C  3001               	movlw	1
  2640  029D  07C2               	addwf	DecodeGPS@x,f
  2641  029E  3000               	movlw	0
  2642  029F  3DC3               	addwfc	DecodeGPS@x+1,f
  2643                           
  2644                           ;launcher_functions.c: 486: longitude[1] = (gpsMessage[x++] - 48)*10;
  2645  02A0  300A               	movlw	10
  2646  02A1  00AF               	movwf	??_DecodeGPS
  2647  02A2  082F               	movf	??_DecodeGPS,w
  2648  02A3  00A0               	movwf	___bmul@multiplicand
  2649  02A4  0842               	movf	DecodeGPS@x,w
  2650  02A5  3E20               	addlw	_gpsMessage& (0+255)
  2651  02A6  0086               	movwf	6
  2652  02A7  3001               	movlw	1	; select bank2/3
  2653  02A8  0087               	movwf	7
  2654  02A9  0801               	movf	1,w
  2655  02AA  3ED0               	addlw	208
  2656  02AB  318C  248A  3181   	fcall	___bmul
  2657  02AE  0020               	movlb	0	; select bank0
  2658  02AF  00B0               	movwf	??_DecodeGPS+1
  2659  02B0  0830               	movf	??_DecodeGPS+1,w
  2660  02B1  00C0               	movwf	DecodeGPS@longitude+1
  2661  02B2  3001               	movlw	1
  2662  02B3  07C2               	addwf	DecodeGPS@x,f
  2663  02B4  3000               	movlw	0
  2664  02B5  3DC3               	addwfc	DecodeGPS@x+1,f
  2665                           
  2666                           ;launcher_functions.c: 487: longitude[1] += (gpsMessage[x++] - 48);
  2667  02B6  0842               	movf	DecodeGPS@x,w
  2668  02B7  3E20               	addlw	_gpsMessage& (0+255)
  2669  02B8  0086               	movwf	6
  2670  02B9  3001               	movlw	1	; select bank2/3
  2671  02BA  0087               	movwf	7
  2672  02BB  0801               	movf	1,w
  2673  02BC  3ED0               	addlw	208
  2674  02BD  00AF               	movwf	??_DecodeGPS
  2675  02BE  082F               	movf	??_DecodeGPS,w
  2676  02BF  07C0               	addwf	DecodeGPS@longitude+1,f
  2677  02C0  3001               	movlw	1
  2678  02C1  07C2               	addwf	DecodeGPS@x,f
  2679  02C2  3000               	movlw	0
  2680  02C3  3DC3               	addwfc	DecodeGPS@x+1,f
  2681                           
  2682                           ;launcher_functions.c: 490: x = x + 1;
  2683  02C4  0842               	movf	DecodeGPS@x,w
  2684  02C5  3E01               	addlw	1
  2685  02C6  00C2               	movwf	DecodeGPS@x
  2686  02C7  3000               	movlw	0
  2687  02C8  3D43               	addwfc	DecodeGPS@x+1,w
  2688  02C9  00C3               	movwf	DecodeGPS@x+1
  2689                           
  2690                           ;launcher_functions.c: 493: longitude[2] = (gpsMessage[x++] - 48)*10;
  2691  02CA  300A               	movlw	10
  2692  02CB  00AF               	movwf	??_DecodeGPS
  2693  02CC  082F               	movf	??_DecodeGPS,w
  2694  02CD  00A0               	movwf	___bmul@multiplicand
  2695  02CE  0842               	movf	DecodeGPS@x,w
  2696  02CF  3E20               	addlw	_gpsMessage& (0+255)
  2697  02D0  0086               	movwf	6
  2698  02D1  3001               	movlw	1	; select bank2/3
  2699  02D2  0087               	movwf	7
  2700  02D3  0801               	movf	1,w
  2701  02D4  3ED0               	addlw	208
  2702  02D5  318C  248A  3181   	fcall	___bmul
  2703  02D8  0020               	movlb	0	; select bank0
  2704  02D9  00B0               	movwf	??_DecodeGPS+1
  2705  02DA  0830               	movf	??_DecodeGPS+1,w
  2706  02DB  00C1               	movwf	DecodeGPS@longitude+2
  2707  02DC  3001               	movlw	1
  2708  02DD  07C2               	addwf	DecodeGPS@x,f
  2709  02DE  3000               	movlw	0
  2710  02DF  3DC3               	addwfc	DecodeGPS@x+1,f
  2711                           
  2712                           ;launcher_functions.c: 494: longitude[2] += (gpsMessage[x++] - 48);
  2713  02E0  0842               	movf	DecodeGPS@x,w
  2714  02E1  3E20               	addlw	_gpsMessage& (0+255)
  2715  02E2  0086               	movwf	6
  2716  02E3  3001               	movlw	1	; select bank2/3
  2717  02E4  0087               	movwf	7
  2718  02E5  0801               	movf	1,w
  2719  02E6  3ED0               	addlw	208
  2720  02E7  00AF               	movwf	??_DecodeGPS
  2721  02E8  082F               	movf	??_DecodeGPS,w
  2722  02E9  07C1               	addwf	DecodeGPS@longitude+2,f
  2723  02EA  3001               	movlw	1
  2724  02EB  07C2               	addwf	DecodeGPS@x,f
  2725  02EC  3000               	movlw	0
  2726  02ED  3DC3               	addwfc	DecodeGPS@x+1,f
  2727                           
  2728                           ;launcher_functions.c: 495: longitude[2] = (longitude[2]*60)/100;
  2729  02EE  3064               	movlw	100
  2730  02EF  00A6               	movwf	___awdiv@divisor
  2731  02F0  3000               	movlw	0
  2732  02F1  00A7               	movwf	___awdiv@divisor+1
  2733  02F2  0841               	movf	DecodeGPS@longitude+2,w
  2734  02F3  00AF               	movwf	??_DecodeGPS
  2735  02F4  01B0               	clrf	??_DecodeGPS+1
  2736  02F5  082F               	movf	??_DecodeGPS,w
  2737  02F6  00A0               	movwf	___wmul@multiplier
  2738  02F7  0830               	movf	??_DecodeGPS+1,w
  2739  02F8  00A1               	movwf	___wmul@multiplier+1
  2740  02F9  303C               	movlw	60
  2741  02FA  00A2               	movwf	___wmul@multiplicand
  2742  02FB  3000               	movlw	0
  2743  02FC  00A3               	movwf	___wmul@multiplicand+1
  2744  02FD  318D  2540  3181   	fcall	___wmul
  2745  0300  0020               	movlb	0	; select bank0
  2746  0301  0821               	movf	?___wmul+1,w
  2747  0302  01A9               	clrf	___awdiv@dividend+1
  2748  0303  07A9               	addwf	___awdiv@dividend+1,f
  2749  0304  0820               	movf	?___wmul,w
  2750  0305  01A8               	clrf	___awdiv@dividend
  2751  0306  07A8               	addwf	___awdiv@dividend,f
  2752  0307  318E  2660  3181   	fcall	___awdiv
  2753  030A  0020               	movlb	0	; select bank0
  2754  030B  0826               	movf	?___awdiv,w
  2755  030C  00B1               	movwf	??_DecodeGPS+2
  2756  030D  0831               	movf	??_DecodeGPS+2,w
  2757  030E  00C1               	movwf	DecodeGPS@longitude+2
  2758                           
  2759                           ;launcher_functions.c: 498: x = x + 2;
  2760  030F  0842               	movf	DecodeGPS@x,w
  2761  0310  3E02               	addlw	2
  2762  0311  00C2               	movwf	DecodeGPS@x
  2763  0312  3000               	movlw	0
  2764  0313  3D43               	addwfc	DecodeGPS@x+1,w
  2765  0314  00C3               	movwf	DecodeGPS@x+1
  2766  0315                     l2428:	
  2767                           
  2768                           ;launcher_functions.c: 499: }
  2769                           ;launcher_functions.c: 502: x = x + 1;
  2770  0315  0842               	movf	DecodeGPS@x,w
  2771  0316  3E01               	addlw	1
  2772  0317  00C2               	movwf	DecodeGPS@x
  2773  0318  3000               	movlw	0
  2774  0319  3D43               	addwfc	DecodeGPS@x+1,w
  2775  031A  00C3               	movwf	DecodeGPS@x+1
  2776                           
  2777                           ;launcher_functions.c: 505: if(gpsMessage[x] != ',')
  2778  031B  0842               	movf	DecodeGPS@x,w
  2779  031C  3E20               	addlw	_gpsMessage& (0+255)
  2780  031D  0086               	movwf	6
  2781  031E  3001               	movlw	1	; select bank2/3
  2782  031F  0087               	movwf	7
  2783  0320  0801               	movf	1,w
  2784  0321  3A2C               	xorlw	44
  2785  0322  1903               	skipnz
  2786  0323  2B31               	goto	l2436
  2787                           
  2788                           ;launcher_functions.c: 506: eastWest = gpsMessage[x++];
  2789  0324  0842               	movf	DecodeGPS@x,w
  2790  0325  3E20               	addlw	_gpsMessage& (0+255)
  2791  0326  0086               	movwf	6
  2792  0327  3001               	movlw	1	; select bank2/3
  2793  0328  0087               	movwf	7
  2794  0329  0801               	movf	1,w
  2795  032A  00AF               	movwf	??_DecodeGPS
  2796  032B  082F               	movf	??_DecodeGPS,w
  2797  032C  00BA               	movwf	DecodeGPS@eastWest
  2798  032D  3001               	movlw	1
  2799  032E  07C2               	addwf	DecodeGPS@x,f
  2800  032F  3000               	movlw	0
  2801  0330  3DC3               	addwfc	DecodeGPS@x+1,f
  2802  0331                     l2436:	
  2803                           
  2804                           ;launcher_functions.c: 509: x = x + 1;
  2805  0331  0842               	movf	DecodeGPS@x,w
  2806  0332  3E01               	addlw	1
  2807  0333  00C2               	movwf	DecodeGPS@x
  2808  0334  3000               	movlw	0
  2809  0335  3D43               	addwfc	DecodeGPS@x+1,w
  2810  0336  00C3               	movwf	DecodeGPS@x+1
  2811  0337                     l2438:	
  2812                           ;launcher_functions.c: 512: while(gpsMessage[x++] != ','){}
  2813                           
  2814  0337  0843               	movf	DecodeGPS@x+1,w
  2815  0338  00B0               	movwf	??_DecodeGPS+1
  2816  0339  0842               	movf	DecodeGPS@x,w
  2817  033A  00AF               	movwf	??_DecodeGPS
  2818  033B  0AC2               	incf	DecodeGPS@x,f
  2819  033C  1903               	skipnz
  2820  033D  0AC3               	incf	DecodeGPS@x+1,f
  2821  033E  082F               	movf	??_DecodeGPS,w
  2822  033F  3E20               	addlw	_gpsMessage& (0+255)
  2823  0340  0086               	movwf	6
  2824  0341  3001               	movlw	1	; select bank2/3
  2825  0342  0087               	movwf	7
  2826  0343  0801               	movf	1,w
  2827  0344  3A2C               	xorlw	44
  2828  0345  1D03               	skipz
  2829  0346  2B37               	goto	l2438
  2830                           
  2831                           ;launcher_functions.c: 515: status = gpsMessage[x];
  2832  0347  0842               	movf	DecodeGPS@x,w
  2833  0348  3E20               	addlw	_gpsMessage& (0+255)
  2834  0349  0086               	movwf	6
  2835  034A  3001               	movlw	1	; select bank2/3
  2836  034B  0087               	movwf	7
  2837  034C  0801               	movf	1,w
  2838  034D  00AF               	movwf	??_DecodeGPS
  2839  034E  082F               	movf	??_DecodeGPS,w
  2840  034F  00BB               	movwf	DecodeGPS@status
  2841                           
  2842                           ;launcher_functions.c: 517: if(status == 'A')
  2843  0350  083B               	movf	DecodeGPS@status,w
  2844  0351  3A41               	xorlw	65
  2845  0352  1D03               	skipz
  2846  0353  2B56               	goto	l417
  2847                           
  2848                           ;launcher_functions.c: 518: gpsInvalidFlag = 0;
  2849  0354  01E6               	clrf	_gpsInvalidFlag
  2850  0355  2B58               	goto	l2446
  2851  0356                     l417:	
  2852                           
  2853                           ;launcher_functions.c: 519: else
  2854                           ;launcher_functions.c: 520: gpsInvalidFlag = 1;
  2855  0356  01E6               	clrf	_gpsInvalidFlag
  2856  0357  0AE6               	incf	_gpsInvalidFlag,f
  2857  0358                     l2446:	
  2858                           
  2859                           ;launcher_functions.c: 524: if(!gpsInvalidFlag)
  2860  0358  08E6               	movf	_gpsInvalidFlag,f
  2861  0359  1D03               	skipz
  2862  035A  0008               	return
  2863                           
  2864                           ;launcher_functions.c: 525: {
  2865                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  2866  035B  01C2               	clrf	DecodeGPS@x
  2867  035C  01C3               	clrf	DecodeGPS@x+1
  2868  035D  0843               	movf	DecodeGPS@x+1,w
  2869  035E  3A80               	xorlw	128
  2870  035F  00AF               	movwf	??_DecodeGPS
  2871  0360  3080               	movlw	128
  2872  0361  022F               	subwf	??_DecodeGPS,w
  2873  0362  1D03               	skipz
  2874  0363  2B66               	goto	u2085
  2875  0364  3003               	movlw	3
  2876  0365  0242               	subwf	DecodeGPS@x,w
  2877  0366                     u2085:	
  2878  0366  1803               	btfsc	3,0
  2879  0367  2B90               	goto	l2460
  2880  0368                     l2454:	
  2881                           
  2882                           ;launcher_functions.c: 528: {
  2883                           ;launcher_functions.c: 529: validLatitude[x] = latitude[x];
  2884  0368  0020               	movlb	0	; select bank0
  2885  0369  0842               	movf	DecodeGPS@x,w
  2886  036A  3E3C               	addlw	DecodeGPS@latitude& (0+255)
  2887  036B  0086               	movwf	6
  2888  036C  0187               	clrf	7
  2889  036D  0801               	movf	1,w
  2890  036E  00AF               	movwf	??_DecodeGPS
  2891  036F  0842               	movf	DecodeGPS@x,w
  2892  0370  3E63               	addlw	_validLatitude& (0+255)
  2893  0371  0086               	movwf	6
  2894  0372  0187               	clrf	7
  2895  0373  082F               	movf	??_DecodeGPS,w
  2896  0374  0081               	movwf	1
  2897                           
  2898                           ;launcher_functions.c: 530: validLongitude[x] = longitude[x];
  2899  0375  0842               	movf	DecodeGPS@x,w
  2900  0376  3E3F               	addlw	DecodeGPS@longitude& (0+255)
  2901  0377  0086               	movwf	6
  2902  0378  0187               	clrf	7
  2903  0379  0801               	movf	1,w
  2904  037A  00AF               	movwf	??_DecodeGPS
  2905  037B  0842               	movf	DecodeGPS@x,w
  2906  037C  3EEC               	addlw	_validLongitude& (0+255)
  2907  037D  0086               	movwf	6
  2908  037E  0187               	clrf	7
  2909  037F  082F               	movf	??_DecodeGPS,w
  2910  0380  0081               	movwf	1
  2911  0381  3001               	movlw	1
  2912  0382  07C2               	addwf	DecodeGPS@x,f
  2913  0383  3000               	movlw	0
  2914  0384  3DC3               	addwfc	DecodeGPS@x+1,f
  2915  0385  0843               	movf	DecodeGPS@x+1,w
  2916  0386  3A80               	xorlw	128
  2917  0387  00AF               	movwf	??_DecodeGPS
  2918  0388  3080               	movlw	128
  2919  0389  022F               	subwf	??_DecodeGPS,w
  2920  038A  1D03               	skipz
  2921  038B  2B8E               	goto	u2095
  2922  038C  3003               	movlw	3
  2923  038D  0242               	subwf	DecodeGPS@x,w
  2924  038E                     u2095:	
  2925  038E  1C03               	skipc
  2926  038F  2B68               	goto	l2454
  2927  0390                     l2460:	
  2928                           
  2929                           ;launcher_functions.c: 531: }
  2930                           ;launcher_functions.c: 532: validNorthSouth = northSouth;
  2931  0390  0020               	movlb	0	; select bank0
  2932  0391  0839               	movf	DecodeGPS@northSouth,w
  2933  0392  00AF               	movwf	??_DecodeGPS
  2934  0393  082F               	movf	??_DecodeGPS,w
  2935  0394  00E8               	movwf	_validNorthSouth
  2936                           
  2937                           ;launcher_functions.c: 533: validEastWest = eastWest;
  2938  0395  083A               	movf	DecodeGPS@eastWest,w
  2939  0396  00AF               	movwf	??_DecodeGPS
  2940  0397  082F               	movf	??_DecodeGPS,w
  2941  0398  00E7               	movwf	_validEastWest
  2942                           
  2943                           ;launcher_functions.c: 535: hasValidGPSFlag = 1;
  2944  0399  01EA               	clrf	_hasValidGPSFlag
  2945  039A  0AEA               	incf	_hasValidGPSFlag,f
  2946  039B  0008               	return
  2947  039C                     __end_of_DecodeGPS:	
  2948                           
  2949                           	psect	text3
  2950  0D40                     __ptext3:	
  2951 ;; *************** function ___wmul *****************
  2952 ;; Defined at:
  2953 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2956 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  product         2    4[BANK0 ] unsigned int 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  2    0[BANK0 ] unsigned int 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2968 ;;      Params:         0       4       0       0       0       0       0
  2969 ;;      Locals:         0       2       0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0
  2971 ;;      Totals:         0       6       0       0       0       0       0
  2972 ;;Total ram usage:        6 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    2
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_DecodeGPS
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function ___wmul
  2984  0D40                     ___wmul:	
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2988  0D40  0020               	movlb	0	; select bank0
  2989  0D41  01A4               	clrf	___wmul@product
  2990  0D42  01A5               	clrf	___wmul@product+1
  2991  0D43                     l2100:	
  2992  0D43  1C20               	btfss	___wmul@multiplier,0
  2993  0D44  2D49               	goto	l601
  2994  0D45  0822               	movf	___wmul@multiplicand,w
  2995  0D46  07A4               	addwf	___wmul@product,f
  2996  0D47  0823               	movf	___wmul@multiplicand+1,w
  2997  0D48  3DA5               	addwfc	___wmul@product+1,f
  2998  0D49                     l601:	
  2999  0D49  3001               	movlw	1
  3000  0D4A                     u1535:	
  3001  0D4A  35A2               	lslf	___wmul@multiplicand,f
  3002  0D4B  0DA3               	rlf	___wmul@multiplicand+1,f
  3003  0D4C  0B89               	decfsz	9,f
  3004  0D4D  2D4A               	goto	u1535
  3005  0D4E  3001               	movlw	1
  3006  0D4F                     u1545:	
  3007  0D4F  36A1               	lsrf	___wmul@multiplier+1,f
  3008  0D50  0CA0               	rrf	___wmul@multiplier,f
  3009  0D51  0B89               	decfsz	9,f
  3010  0D52  2D4F               	goto	u1545
  3011  0D53  0821               	movf	___wmul@multiplier+1,w
  3012  0D54  0420               	iorwf	___wmul@multiplier,w
  3013  0D55  1D03               	skipz
  3014  0D56  2D43               	goto	l2100
  3015  0D57  0825               	movf	___wmul@product+1,w
  3016  0D58  01A1               	clrf	?___wmul+1
  3017  0D59  07A1               	addwf	?___wmul+1,f
  3018  0D5A  0824               	movf	___wmul@product,w
  3019  0D5B  01A0               	clrf	?___wmul
  3020  0D5C  07A0               	addwf	?___wmul,f
  3021  0D5D  0008               	return
  3022  0D5E                     __end_of___wmul:	
  3023                           
  3024                           	psect	text4
  3025  0C8A                     __ptext4:	
  3026 ;; *************** function ___bmul *****************
  3027 ;; Defined at:
  3028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  multiplier      1    wreg     unsigned char 
  3031 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3034 ;;  product         1    2[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      unsigned char 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3044 ;;      Params:         0       1       0       0       0       0       0
  3045 ;;      Locals:         0       2       0       0       0       0       0
  3046 ;;      Temps:          0       1       0       0       0       0       0
  3047 ;;      Totals:         0       4       0       0       0       0       0
  3048 ;;Total ram usage:        4 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    2
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_DecodeGPS
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function ___bmul
  3060  0C8A                     ___bmul:	
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3064                           ;___bmul@multiplier stored from wreg
  3065  0C8A  0020               	movlb	0	; select bank0
  3066  0C8B  00A3               	movwf	___bmul@multiplier
  3067  0C8C  01A2               	clrf	___bmul@product
  3068  0C8D                     l2112:	
  3069  0C8D  1C23               	btfss	___bmul@multiplier,0
  3070  0C8E  2C93               	goto	l2116
  3071  0C8F  0820               	movf	___bmul@multiplicand,w
  3072  0C90  00A1               	movwf	??___bmul
  3073  0C91  0821               	movf	??___bmul,w
  3074  0C92  07A2               	addwf	___bmul@product,f
  3075  0C93                     l2116:	
  3076  0C93  1003               	clrc
  3077  0C94  0DA0               	rlf	___bmul@multiplicand,f
  3078  0C95  1003               	clrc
  3079  0C96  0CA3               	rrf	___bmul@multiplier,f
  3080  0C97  08A3               	movf	___bmul@multiplier,f
  3081  0C98  1D03               	skipz
  3082  0C99  2C8D               	goto	l2112
  3083  0C9A  0822               	movf	___bmul@product,w
  3084  0C9B  0008               	return
  3085  0C9C                     __end_of___bmul:	
  3086                           
  3087                           	psect	text5
  3088  0E60                     __ptext5:	
  3089 ;; *************** function ___awdiv *****************
  3090 ;; Defined at:
  3091 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  divisor         2    6[BANK0 ] int 
  3094 ;;  dividend        2    8[BANK0 ] int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  quotient        2   13[BANK0 ] int 
  3097 ;;  sign            1   12[BANK0 ] unsigned char 
  3098 ;;  counter         1   11[BANK0 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  2    6[BANK0 ] int 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3108 ;;      Params:         0       4       0       0       0       0       0
  3109 ;;      Locals:         0       4       0       0       0       0       0
  3110 ;;      Temps:          0       1       0       0       0       0       0
  3111 ;;      Totals:         0       9       0       0       0       0       0
  3112 ;;Total ram usage:        9 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    2
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_DecodeGPS
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function ___awdiv
  3124  0E60                     ___awdiv:	
  3125                           
  3126                           ;incstack = 0
  3127                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3128  0E60  0020               	movlb	0	; select bank0
  3129  0E61  01AC               	clrf	___awdiv@sign
  3130  0E62  1FA7               	btfss	___awdiv@divisor+1,7
  3131  0E63  2E6B               	goto	l2134
  3132  0E64  09A6               	comf	___awdiv@divisor,f
  3133  0E65  09A7               	comf	___awdiv@divisor+1,f
  3134  0E66  0AA6               	incf	___awdiv@divisor,f
  3135  0E67  1903               	skipnz
  3136  0E68  0AA7               	incf	___awdiv@divisor+1,f
  3137  0E69  01AC               	clrf	___awdiv@sign
  3138  0E6A  0AAC               	incf	___awdiv@sign,f
  3139  0E6B                     l2134:	
  3140  0E6B  1FA9               	btfss	___awdiv@dividend+1,7
  3141  0E6C  2E76               	goto	l2140
  3142  0E6D  09A8               	comf	___awdiv@dividend,f
  3143  0E6E  09A9               	comf	___awdiv@dividend+1,f
  3144  0E6F  0AA8               	incf	___awdiv@dividend,f
  3145  0E70  1903               	skipnz
  3146  0E71  0AA9               	incf	___awdiv@dividend+1,f
  3147  0E72  3001               	movlw	1
  3148  0E73  00AA               	movwf	??___awdiv
  3149  0E74  082A               	movf	??___awdiv,w
  3150  0E75  06AC               	xorwf	___awdiv@sign,f
  3151  0E76                     l2140:	
  3152  0E76  01AD               	clrf	___awdiv@quotient
  3153  0E77  01AE               	clrf	___awdiv@quotient+1
  3154  0E78  0827               	movf	___awdiv@divisor+1,w
  3155  0E79  0426               	iorwf	___awdiv@divisor,w
  3156  0E7A  1903               	skipnz
  3157  0E7B  2EA5               	goto	l2162
  3158  0E7C  01AB               	clrf	___awdiv@counter
  3159  0E7D  0AAB               	incf	___awdiv@counter,f
  3160  0E7E                     l2150:	
  3161  0E7E  1BA7               	btfsc	___awdiv@divisor+1,7
  3162  0E7F  2E8A               	goto	l2152
  3163  0E80  3001               	movlw	1
  3164  0E81                     u1615:	
  3165  0E81  35A6               	lslf	___awdiv@divisor,f
  3166  0E82  0DA7               	rlf	___awdiv@divisor+1,f
  3167  0E83  0B89               	decfsz	9,f
  3168  0E84  2E81               	goto	u1615
  3169  0E85  3001               	movlw	1
  3170  0E86  00AA               	movwf	??___awdiv
  3171  0E87  082A               	movf	??___awdiv,w
  3172  0E88  07AB               	addwf	___awdiv@counter,f
  3173  0E89  2E7E               	goto	l2150
  3174  0E8A                     l2152:	
  3175  0E8A  3001               	movlw	1
  3176  0E8B                     u1635:	
  3177  0E8B  35AD               	lslf	___awdiv@quotient,f
  3178  0E8C  0DAE               	rlf	___awdiv@quotient+1,f
  3179  0E8D  0B89               	decfsz	9,f
  3180  0E8E  2E8B               	goto	u1635
  3181  0E8F  0827               	movf	___awdiv@divisor+1,w
  3182  0E90  0229               	subwf	___awdiv@dividend+1,w
  3183  0E91  1D03               	skipz
  3184  0E92  2E95               	goto	u1645
  3185  0E93  0826               	movf	___awdiv@divisor,w
  3186  0E94  0228               	subwf	___awdiv@dividend,w
  3187  0E95                     u1645:	
  3188  0E95  1C03               	skipc
  3189  0E96  2E9C               	goto	l2158
  3190  0E97  0826               	movf	___awdiv@divisor,w
  3191  0E98  02A8               	subwf	___awdiv@dividend,f
  3192  0E99  0827               	movf	___awdiv@divisor+1,w
  3193  0E9A  3BA9               	subwfb	___awdiv@dividend+1,f
  3194  0E9B  142D               	bsf	___awdiv@quotient,0
  3195  0E9C                     l2158:	
  3196  0E9C  3001               	movlw	1
  3197  0E9D                     u1655:	
  3198  0E9D  36A7               	lsrf	___awdiv@divisor+1,f
  3199  0E9E  0CA6               	rrf	___awdiv@divisor,f
  3200  0E9F  0B89               	decfsz	9,f
  3201  0EA0  2E9D               	goto	u1655
  3202  0EA1  3001               	movlw	1
  3203  0EA2  02AB               	subwf	___awdiv@counter,f
  3204  0EA3  1D03               	btfss	3,2
  3205  0EA4  2E8A               	goto	l2152
  3206  0EA5                     l2162:	
  3207  0EA5  082C               	movf	___awdiv@sign,w
  3208  0EA6  1903               	btfsc	3,2
  3209  0EA7  2EAD               	goto	l2166
  3210  0EA8  09AD               	comf	___awdiv@quotient,f
  3211  0EA9  09AE               	comf	___awdiv@quotient+1,f
  3212  0EAA  0AAD               	incf	___awdiv@quotient,f
  3213  0EAB  1903               	skipnz
  3214  0EAC  0AAE               	incf	___awdiv@quotient+1,f
  3215  0EAD                     l2166:	
  3216  0EAD  082E               	movf	___awdiv@quotient+1,w
  3217  0EAE  01A7               	clrf	?___awdiv+1
  3218  0EAF  07A7               	addwf	?___awdiv+1,f
  3219  0EB0  082D               	movf	___awdiv@quotient,w
  3220  0EB1  01A6               	clrf	?___awdiv
  3221  0EB2  07A6               	addwf	?___awdiv,f
  3222  0EB3  0008               	return
  3223  0EB4                     __end_of___awdiv:	
  3224                           
  3225                           	psect	text6
  3226  0D8B                     __ptext6:	
  3227 ;; *************** function _ToggleSleepGPS *****************
  3228 ;; Defined at:
  3229 ;;		line 329 in file "launcher_functions.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3243 ;;      Params:         0       0       0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0
  3245 ;;      Temps:          0       3       0       0       0       0       0
  3246 ;;      Totals:         0       3       0       0       0       0       0
  3247 ;;Total ram usage:        3 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _ToggleSleepGPS
  3259  0D8B                     _ToggleSleepGPS:	
  3260                           
  3261                           ;launcher_functions.c: 331: PORTAbits.RA6 = 0;
  3262                           
  3263                           ;incstack = 0
  3264                           ; Regs used in _ToggleSleepGPS: [wreg]
  3265  0D8B  0020               	movlb	0	; select bank0
  3266  0D8C  130C               	bcf	12,6	;volatile
  3267                           
  3268                           ;launcher_functions.c: 332: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3269  0D8D  3015               	movlw	21
  3270  0D8E  00A2               	movwf	??_ToggleSleepGPS+2
  3271  0D8F  304B               	movlw	75
  3272  0D90  00A1               	movwf	??_ToggleSleepGPS+1
  3273  0D91  30D1               	movlw	209
  3274  0D92  00A0               	movwf	??_ToggleSleepGPS
  3275  0D93                     u2857:	
  3276  0D93  0BA0               	decfsz	??_ToggleSleepGPS,f
  3277  0D94  2D93               	goto	u2857
  3278  0D95  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3279  0D96  2D93               	goto	u2857
  3280  0D97  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3281  0D98  2D93               	goto	u2857
  3282  0D99  0000               	nop
  3283                           
  3284                           ;launcher_functions.c: 333: PORTAbits.RA6 = 1;
  3285  0D9A  0020               	movlb	0	; select bank0
  3286  0D9B  170C               	bsf	12,6	;volatile
  3287                           
  3288                           ;launcher_functions.c: 334: _delay((unsigned long)((100)*(16000000/4000.0)));
  3289  0D9C  3003               	movlw	3
  3290  0D9D  00A2               	movwf	??_ToggleSleepGPS+2
  3291  0D9E  3008               	movlw	8
  3292  0D9F  00A1               	movwf	??_ToggleSleepGPS+1
  3293  0DA0  3078               	movlw	120
  3294  0DA1  00A0               	movwf	??_ToggleSleepGPS
  3295  0DA2                     u2867:	
  3296  0DA2  0BA0               	decfsz	??_ToggleSleepGPS,f
  3297  0DA3  2DA2               	goto	u2867
  3298  0DA4  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3299  0DA5  2DA2               	goto	u2867
  3300  0DA6  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3301  0DA7  2DA2               	goto	u2867
  3302                           
  3303                           ;launcher_functions.c: 335: PORTAbits.RA6 = 0;
  3304  0DA8  0020               	movlb	0	; select bank0
  3305  0DA9  130C               	bcf	12,6	;volatile
  3306                           
  3307                           ;launcher_functions.c: 336: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3308  0DAA  3015               	movlw	21
  3309  0DAB  00A2               	movwf	??_ToggleSleepGPS+2
  3310  0DAC  304B               	movlw	75
  3311  0DAD  00A1               	movwf	??_ToggleSleepGPS+1
  3312  0DAE  30D1               	movlw	209
  3313  0DAF  00A0               	movwf	??_ToggleSleepGPS
  3314  0DB0                     u2877:	
  3315  0DB0  0BA0               	decfsz	??_ToggleSleepGPS,f
  3316  0DB1  2DB0               	goto	u2877
  3317  0DB2  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3318  0DB3  2DB0               	goto	u2877
  3319  0DB4  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3320  0DB5  2DB0               	goto	u2877
  3321  0DB6  0000               	nop
  3322  0DB7  0008               	return
  3323  0DB8                     __end_of_ToggleSleepGPS:	
  3324                           
  3325                           	psect	text7
  3326  0724                     __ptext7:	
  3327 ;; *************** function _SetupGPS *****************
  3328 ;; Defined at:
  3329 ;;		line 347 in file "launcher_functions.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  message        50    0[BANK1 ] unsigned char [50]
  3334 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  3335 ;;  MID             4   56[BANK1 ] unsigned char [4]
  3336 ;;  x               2   60[BANK1 ] int 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3346 ;;      Params:         0       0       0       0       0       0       0
  3347 ;;      Locals:         0       0      62       0       0       0       0
  3348 ;;      Temps:          0       3       0       0       0       0       0
  3349 ;;      Totals:         0       3      62       0       0       0       0
  3350 ;;Total ram usage:       65 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    4
  3353 ;; This function calls:
  3354 ;;		_sprintf
  3355 ;;		_uart_write_message
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _SetupGPS
  3363  0724                     _SetupGPS:	
  3364                           
  3365                           ;launcher_functions.c: 349: int x;
  3366                           ;launcher_functions.c: 350: unsigned char startSequence[6] = "$PSRF";
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3370  0724  3066               	movlw	low SetupGPS@F4924
  3371  0725  0086               	movwf	6
  3372  0726  3001               	movlw	high SetupGPS@F4924
  3373  0727  0087               	movwf	7
  3374  0728  30D2               	movlw	low SetupGPS@startSequence
  3375  0729  0084               	movwf	4
  3376  072A  3000               	movlw	high SetupGPS@startSequence
  3377  072B  0085               	movwf	5
  3378  072C  3006               	movlw	6
  3379  072D  0020               	movlb	0	; select bank0
  3380  072E  00C1               	movwf	??_SetupGPS
  3381  072F                     u2160:	
  3382  072F  0016               	moviw fsr1++
  3383  0730  001A               	movwi fsr0++
  3384  0731  0BC1               	decfsz	??_SetupGPS,f
  3385  0732  2F2F               	goto	u2160
  3386                           
  3387                           ;launcher_functions.c: 351: unsigned char MID[4] = "103";
  3388  0733  0021               	movlb	1	; select bank1
  3389  0734  086B               	movf	(SetupGPS@F4926+3)^(0+128),w
  3390  0735  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  3391  0736  086A               	movf	(SetupGPS@F4926+2)^(0+128),w
  3392  0737  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  3393  0738  0869               	movf	(SetupGPS@F4926+1)^(0+128),w
  3394  0739  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  3395  073A  0868               	movf	SetupGPS@F4926^(0+128),w
  3396  073B  00D8               	movwf	SetupGPS@MID^(0+128)
  3397                           
  3398                           ;launcher_functions.c: 352: unsigned char message[50];
  3399                           ;launcher_functions.c: 355: for(x = 0; x < 6; x++)
  3400  073C  01DC               	clrf	SetupGPS@x^(0+128)
  3401  073D  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  3402  073E  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3403  073F  3A80               	xorlw	128
  3404  0740  0020               	movlb	0	; select bank0
  3405  0741  00C1               	movwf	??_SetupGPS
  3406  0742  3080               	movlw	128
  3407  0743  0241               	subwf	??_SetupGPS,w
  3408  0744  1D03               	skipz
  3409  0745  2F49               	goto	u2175
  3410  0746  3006               	movlw	6
  3411  0747  0021               	movlb	1	; select bank1
  3412  0748  025C               	subwf	SetupGPS@x^(0+128),w
  3413  0749                     u2175:	
  3414  0749  1803               	btfsc	3,0
  3415  074A  2F8F               	goto	l2660
  3416  074B                     l2650:	
  3417                           
  3418                           ;launcher_functions.c: 356: {
  3419                           ;launcher_functions.c: 357: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3420  074B  3015               	movlw	21
  3421  074C  0020               	movlb	0	; select bank0
  3422  074D  00C3               	movwf	??_SetupGPS+2
  3423  074E  304B               	movlw	75
  3424  074F  00C2               	movwf	??_SetupGPS+1
  3425  0750  30D1               	movlw	209
  3426  0751  00C1               	movwf	??_SetupGPS
  3427  0752                     u2887:	
  3428  0752  0BC1               	decfsz	??_SetupGPS,f
  3429  0753  2F52               	goto	u2887
  3430  0754  0BC2               	decfsz	??_SetupGPS+1,f
  3431  0755  2F52               	goto	u2887
  3432  0756  0BC3               	decfsz	??_SetupGPS+2,f
  3433  0757  2F52               	goto	u2887
  3434  0758  0000               	nop
  3435                           
  3436                           ;launcher_functions.c: 358: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3437  0759  3031               	movlw	low (STR_1| (0+32768))
  3438  075A  0020               	movlb	0	; select bank0
  3439  075B  00AE               	movwf	sprintf@f
  3440  075C  3088               	movlw	high (STR_1| (0+32768))
  3441  075D  00AF               	movwf	sprintf@f+1
  3442  075E  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3443  075F  00C1               	movwf	??_SetupGPS
  3444  0760  0841               	movf	??_SetupGPS,w
  3445  0761  00B0               	movwf	?_sprintf+2
  3446  0762  30D8               	movlw	SetupGPS@MID& (0+255)
  3447  0763  00C2               	movwf	??_SetupGPS+1
  3448  0764  0842               	movf	??_SetupGPS+1,w
  3449  0765  00B1               	movwf	?_sprintf+3
  3450  0766  0021               	movlb	1	; select bank1
  3451  0767  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3452  0768  0020               	movlb	0	; select bank0
  3453  0769  01B3               	clrf	?_sprintf+5
  3454  076A  07B3               	addwf	?_sprintf+5,f
  3455  076B  0021               	movlb	1	; select bank1
  3456  076C  085C               	movf	SetupGPS@x^(0+128),w
  3457  076D  0020               	movlb	0	; select bank0
  3458  076E  01B2               	clrf	?_sprintf+4
  3459  076F  07B2               	addwf	?_sprintf+4,f
  3460  0770  30A0               	movlw	SetupGPS@message& (0+255)
  3461  0771  3185  2525  3187   	fcall	_sprintf
  3462                           
  3463                           ;launcher_functions.c: 359: uart_write_message(message, 22);
  3464  0774  3016               	movlw	22
  3465  0775  0020               	movlb	0	; select bank0
  3466  0776  00A8               	movwf	uart_write_message@size
  3467  0777  3000               	movlw	0
  3468  0778  00A9               	movwf	uart_write_message@size+1
  3469  0779  30A0               	movlw	SetupGPS@message& (0+255)
  3470  077A  318F  278A  3187   	fcall	_uart_write_message
  3471  077D  3001               	movlw	1
  3472  077E  0021               	movlb	1	; select bank1
  3473  077F  07DC               	addwf	SetupGPS@x^(0+128),f
  3474  0780  3000               	movlw	0
  3475  0781  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  3476  0782  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3477  0783  3A80               	xorlw	128
  3478  0784  0020               	movlb	0	; select bank0
  3479  0785  00C1               	movwf	??_SetupGPS
  3480  0786  3080               	movlw	128
  3481  0787  0241               	subwf	??_SetupGPS,w
  3482  0788  1D03               	skipz
  3483  0789  2F8D               	goto	u2185
  3484  078A  3006               	movlw	6
  3485  078B  0021               	movlb	1	; select bank1
  3486  078C  025C               	subwf	SetupGPS@x^(0+128),w
  3487  078D                     u2185:	
  3488  078D  1C03               	skipc
  3489  078E  2F4B               	goto	l2650
  3490  078F                     l2660:	
  3491                           
  3492                           ;launcher_functions.c: 360: }
  3493                           ;launcher_functions.c: 362: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3494  078F  3015               	movlw	21
  3495  0790  0020               	movlb	0	; select bank0
  3496  0791  00C3               	movwf	??_SetupGPS+2
  3497  0792  304B               	movlw	75
  3498  0793  00C2               	movwf	??_SetupGPS+1
  3499  0794  30D1               	movlw	209
  3500  0795  00C1               	movwf	??_SetupGPS
  3501  0796                     u2897:	
  3502  0796  0BC1               	decfsz	??_SetupGPS,f
  3503  0797  2F96               	goto	u2897
  3504  0798  0BC2               	decfsz	??_SetupGPS+1,f
  3505  0799  2F96               	goto	u2897
  3506  079A  0BC3               	decfsz	??_SetupGPS+2,f
  3507  079B  2F96               	goto	u2897
  3508  079C  0000               	nop
  3509                           
  3510                           ;launcher_functions.c: 368: sprintf(message, "%s104,40.441944,-86.9125,0,0,0,0,12,2*", s
      +                          tartSequence);
  3511  079D  300A               	movlw	low (STR_2| (0+32768))
  3512  079E  0020               	movlb	0	; select bank0
  3513  079F  00AE               	movwf	sprintf@f
  3514  07A0  3088               	movlw	high (STR_2| (0+32768))
  3515  07A1  00AF               	movwf	sprintf@f+1
  3516  07A2  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3517  07A3  00C1               	movwf	??_SetupGPS
  3518  07A4  0841               	movf	??_SetupGPS,w
  3519  07A5  00B0               	movwf	?_sprintf+2
  3520  07A6  30A0               	movlw	SetupGPS@message& (0+255)
  3521  07A7  3185  2525  3187   	fcall	_sprintf
  3522                           
  3523                           ;launcher_functions.c: 369: uart_write_message(message, 42);
  3524  07AA  302A               	movlw	42
  3525  07AB  0020               	movlb	0	; select bank0
  3526  07AC  00A8               	movwf	uart_write_message@size
  3527  07AD  3000               	movlw	0
  3528  07AE  00A9               	movwf	uart_write_message@size+1
  3529  07AF  30A0               	movlw	SetupGPS@message& (0+255)
  3530  07B0  318F  278A         	fcall	_uart_write_message
  3531  07B2  0008               	return
  3532  07B3                     __end_of_SetupGPS:	
  3533                           
  3534                           	psect	text8
  3535  0F8A                     __ptext8:	
  3536 ;; *************** function _uart_write_message *****************
  3537 ;; Defined at:
  3538 ;;		line 302 in file "launcher_functions.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  data            1    wreg     PTR unsigned char 
  3541 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3542 ;;  size            2    8[BANK0 ] int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3545 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3546 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3547 ;;  x               2   17[BANK0 ] int 
  3548 ;;  checksum        1   19[BANK0 ] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       2       0       0       0       0       0
  3559 ;;      Locals:         0      10       0       0       0       0       0
  3560 ;;      Temps:          0       3       0       0       0       0       0
  3561 ;;      Totals:         0      15       0       0       0       0       0
  3562 ;;Total ram usage:       15 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		_compute_checksum
  3567 ;;		_uart_xmit
  3568 ;; This function is called by:
  3569 ;;		_SetupGPS
  3570 ;;		_UpdateGPS
  3571 ;;		_DisableGPS
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _uart_write_message
  3577  0F8A                     _uart_write_message:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3581                           ;uart_write_message@data stored from wreg
  3582  0F8A  0020               	movlb	0	; select bank0
  3583  0F8B  00B4               	movwf	uart_write_message@data
  3584                           
  3585                           ;launcher_functions.c: 304: int x;
  3586                           ;launcher_functions.c: 305: unsigned char checksum;
  3587                           ;launcher_functions.c: 306: unsigned char ascii_checksum[2];
  3588                           ;launcher_functions.c: 308: checksum = compute_checksum(data, size);
  3589  0F8C  0829               	movf	uart_write_message@size+1,w
  3590  0F8D  01A1               	clrf	compute_checksum@size+1
  3591  0F8E  07A1               	addwf	compute_checksum@size+1,f
  3592  0F8F  0828               	movf	uart_write_message@size,w
  3593  0F90  01A0               	clrf	compute_checksum@size
  3594  0F91  07A0               	addwf	compute_checksum@size,f
  3595  0F92  0834               	movf	uart_write_message@data,w
  3596  0F93  318E  261E  318F   	fcall	_compute_checksum
  3597  0F96  0020               	movlb	0	; select bank0
  3598  0F97  00AA               	movwf	??_uart_write_message
  3599  0F98  082A               	movf	??_uart_write_message,w
  3600  0F99  00B3               	movwf	uart_write_message@checksum
  3601                           
  3602                           ;launcher_functions.c: 309: ascii_checksum[0] = checksum >> 4;
  3603  0F9A  0833               	movf	uart_write_message@checksum,w
  3604  0F9B  00AA               	movwf	??_uart_write_message
  3605  0F9C  3004               	movlw	4
  3606  0F9D                     u1825:	
  3607  0F9D  36AA               	lsrf	??_uart_write_message,f
  3608  0F9E  0B89               	decfsz	9,f
  3609  0F9F  2F9D               	goto	u1825
  3610  0FA0  082A               	movf	??_uart_write_message,w
  3611  0FA1  00AB               	movwf	??_uart_write_message+1
  3612  0FA2  082B               	movf	??_uart_write_message+1,w
  3613  0FA3  00B5               	movwf	uart_write_message@ascii_checksum
  3614                           
  3615                           ;launcher_functions.c: 310: ascii_checksum[1] = checksum & 0x0F;
  3616  0FA4  0833               	movf	uart_write_message@checksum,w
  3617  0FA5  390F               	andlw	15
  3618  0FA6  00AA               	movwf	??_uart_write_message
  3619  0FA7  082A               	movf	??_uart_write_message,w
  3620  0FA8  00B6               	movwf	uart_write_message@ascii_checksum+1
  3621                           
  3622                           ;launcher_functions.c: 312: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3623  0FA9  300A               	movlw	10
  3624  0FAA  0235               	subwf	uart_write_message@ascii_checksum,w
  3625  0FAB  1C03               	skipc
  3626  0FAC  2FAF               	goto	l2238
  3627  0FAD  3037               	movlw	55
  3628  0FAE  2FB0               	goto	L1
  3629  0FAF                     l2238:	
  3630  0FAF  3030               	movlw	48
  3631  0FB0                     L1:	
  3632  0FB0  00AD               	movwf	_uart_write_message$1424
  3633  0FB1  3000               	movlw	0
  3634  0FB2  00AE               	movwf	_uart_write_message$1424+1
  3635  0FB3  082D               	movf	_uart_write_message$1424,w
  3636  0FB4  00AA               	movwf	??_uart_write_message
  3637  0FB5  082A               	movf	??_uart_write_message,w
  3638  0FB6  07B5               	addwf	uart_write_message@ascii_checksum,f
  3639                           
  3640                           ;launcher_functions.c: 313: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3641  0FB7  300A               	movlw	10
  3642  0FB8  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3643  0FB9  1C03               	skipc
  3644  0FBA  2FBD               	goto	l2246
  3645  0FBB  3037               	movlw	55
  3646  0FBC  2FBE               	goto	L2
  3647  0FBD                     l2246:	
  3648  0FBD  3030               	movlw	48
  3649  0FBE                     L2:	
  3650  0FBE  00AF               	movwf	_uart_write_message$1425
  3651  0FBF  3000               	movlw	0
  3652  0FC0  00B0               	movwf	_uart_write_message$1425+1
  3653  0FC1  082F               	movf	_uart_write_message$1425,w
  3654  0FC2  00AA               	movwf	??_uart_write_message
  3655  0FC3  082A               	movf	??_uart_write_message,w
  3656  0FC4  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3657                           
  3658                           ;launcher_functions.c: 315: for(x=0; x<size-1; x++)
  3659  0FC5  01B1               	clrf	uart_write_message@x
  3660  0FC6  01B2               	clrf	uart_write_message@x+1
  3661  0FC7                     l2256:	
  3662  0FC7  0828               	movf	uart_write_message@size,w
  3663  0FC8  3EFF               	addlw	255
  3664  0FC9  00AA               	movwf	??_uart_write_message
  3665  0FCA  30FF               	movlw	255
  3666  0FCB  3D29               	addwfc	uart_write_message@size+1,w
  3667  0FCC  00AB               	movwf	??_uart_write_message+1
  3668  0FCD  0832               	movf	uart_write_message@x+1,w
  3669  0FCE  3A80               	xorlw	128
  3670  0FCF  00AC               	movwf	??_uart_write_message+2
  3671  0FD0  082B               	movf	??_uart_write_message+1,w
  3672  0FD1  3A80               	xorlw	128
  3673  0FD2  022C               	subwf	??_uart_write_message+2,w
  3674  0FD3  1D03               	skipz
  3675  0FD4  2FD7               	goto	u1855
  3676  0FD5  082A               	movf	??_uart_write_message,w
  3677  0FD6  0231               	subwf	uart_write_message@x,w
  3678  0FD7                     u1855:	
  3679  0FD7  1803               	btfsc	3,0
  3680  0FD8  2FEA               	goto	l2258
  3681                           
  3682                           ;launcher_functions.c: 316: {
  3683                           ;launcher_functions.c: 317: uart_xmit(data[x]);
  3684  0FD9  0020               	movlb	0	; select bank0
  3685  0FDA  0831               	movf	uart_write_message@x,w
  3686  0FDB  0734               	addwf	uart_write_message@data,w
  3687  0FDC  00AA               	movwf	??_uart_write_message
  3688  0FDD  082A               	movf	??_uart_write_message,w
  3689  0FDE  0086               	movwf	6
  3690  0FDF  0187               	clrf	7
  3691  0FE0  0801               	movf	1,w
  3692  0FE1  318C  2412  318F   	fcall	_uart_xmit
  3693  0FE4  3001               	movlw	1
  3694  0FE5  0020               	movlb	0	; select bank0
  3695  0FE6  07B1               	addwf	uart_write_message@x,f
  3696  0FE7  3000               	movlw	0
  3697  0FE8  3DB2               	addwfc	uart_write_message@x+1,f
  3698  0FE9  2FC7               	goto	l2256
  3699  0FEA                     l2258:	
  3700                           
  3701                           ;launcher_functions.c: 318: }
  3702                           ;launcher_functions.c: 319: uart_xmit(ascii_checksum[0]);
  3703  0FEA  0020               	movlb	0	; select bank0
  3704  0FEB  0835               	movf	uart_write_message@ascii_checksum,w
  3705  0FEC  318C  2412  318F   	fcall	_uart_xmit
  3706                           
  3707                           ;launcher_functions.c: 320: uart_xmit(ascii_checksum[1]);
  3708  0FEF  0020               	movlb	0	; select bank0
  3709  0FF0  0836               	movf	uart_write_message@ascii_checksum+1,w
  3710  0FF1  318C  2412  318F   	fcall	_uart_xmit
  3711                           
  3712                           ;launcher_functions.c: 322: uart_xmit(0x0D);
  3713  0FF4  300D               	movlw	13
  3714  0FF5  318C  2412  318F   	fcall	_uart_xmit
  3715                           
  3716                           ;launcher_functions.c: 323: uart_xmit(0x0A);
  3717  0FF8  300A               	movlw	10
  3718  0FF9  318C  2412  318F   	fcall	_uart_xmit
  3719  0FFC                     l370:	
  3720                           ;launcher_functions.c: 324: while(!TXSTAbits.TRMT);
  3721                           
  3722  0FFC  0023               	movlb	3	; select bank3
  3723  0FFD  189E               	btfsc	30,1	;volatile
  3724  0FFE  0008               	return
  3725  0FFF  2FFC               	goto	l370
  3726  1000                     __end_of_uart_write_message:	
  3727                           
  3728                           	psect	text9
  3729  0C12                     __ptext9:	
  3730 ;; *************** function _uart_xmit *****************
  3731 ;; Defined at:
  3732 ;;		line 294 in file "launcher_functions.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  mydata_byte     1    wreg     unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;		None               void
  3739 ;; Registers used:
  3740 ;;		wreg
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3746 ;;      Params:         0       0       0       0       0       0       0
  3747 ;;      Locals:         0       1       0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0
  3749 ;;      Totals:         0       1       0       0       0       0       0
  3750 ;;Total ram usage:        1 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    2
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_uart_write_message
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function _uart_xmit
  3762  0C12                     _uart_xmit:	
  3763                           
  3764                           ;incstack = 0
  3765                           ; Regs used in _uart_xmit: [wreg]
  3766                           ;uart_xmit@mydata_byte stored from wreg
  3767  0C12  0020               	movlb	0	; select bank0
  3768  0C13  00A0               	movwf	uart_xmit@mydata_byte
  3769  0C14                     l353:	
  3770                           ;launcher_functions.c: 297: while(!TXSTAbits.TRMT);
  3771                           
  3772  0C14  0023               	movlb	3	; select bank3
  3773  0C15  1C9E               	btfss	30,1	;volatile
  3774  0C16  2C14               	goto	l353
  3775                           
  3776                           ;launcher_functions.c: 298: TXREG = mydata_byte;
  3777  0C17  0020               	movlb	0	; select bank0
  3778  0C18  0820               	movf	uart_xmit@mydata_byte,w
  3779  0C19  0023               	movlb	3	; select bank3
  3780  0C1A  009A               	movwf	26	;volatile
  3781  0C1B  0008               	return
  3782  0C1C                     __end_of_uart_xmit:	
  3783                           
  3784                           	psect	text10
  3785  0E1E                     __ptext10:	
  3786 ;; *************** function _compute_checksum *****************
  3787 ;; Defined at:
  3788 ;;		line 282 in file "launcher_functions.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  data            1    wreg     PTR unsigned char 
  3791 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3792 ;;  size            2    0[BANK0 ] int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3795 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3796 ;;  x               2    6[BANK0 ] int 
  3797 ;;  checksum        1    4[BANK0 ] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      unsigned char 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         0       2       0       0       0       0       0
  3808 ;;      Locals:         0       4       0       0       0       0       0
  3809 ;;      Temps:          0       2       0       0       0       0       0
  3810 ;;      Totals:         0       8       0       0       0       0       0
  3811 ;;Total ram usage:        8 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    2
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_uart_write_message
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _compute_checksum
  3823  0E1E                     _compute_checksum:	
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3827                           ;compute_checksum@data stored from wreg
  3828  0E1E  0020               	movlb	0	; select bank0
  3829  0E1F  00A5               	movwf	compute_checksum@data
  3830                           
  3831                           ;launcher_functions.c: 284: unsigned char checksum = 0;
  3832  0E20  01A4               	clrf	compute_checksum@checksum
  3833                           
  3834                           ;launcher_functions.c: 285: int x;
  3835                           ;launcher_functions.c: 286: for(x=0; x<size; x++)
  3836  0E21  01A6               	clrf	compute_checksum@x
  3837  0E22  01A7               	clrf	compute_checksum@x+1
  3838  0E23                     l2088:	
  3839  0E23  0827               	movf	compute_checksum@x+1,w
  3840  0E24  3A80               	xorlw	128
  3841  0E25  00A2               	movwf	??_compute_checksum
  3842  0E26  0821               	movf	compute_checksum@size+1,w
  3843  0E27  3A80               	xorlw	128
  3844  0E28  0222               	subwf	??_compute_checksum,w
  3845  0E29  1D03               	skipz
  3846  0E2A  2E2D               	goto	u1505
  3847  0E2B  0820               	movf	compute_checksum@size,w
  3848  0E2C  0226               	subwf	compute_checksum@x,w
  3849  0E2D                     u1505:	
  3850  0E2D  1803               	btfsc	3,0
  3851  0E2E  2E5D               	goto	l2090
  3852                           
  3853                           ;launcher_functions.c: 287: {
  3854                           ;launcher_functions.c: 288: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3855  0E2F  0020               	movlb	0	; select bank0
  3856  0E30  0826               	movf	compute_checksum@x,w
  3857  0E31  0725               	addwf	compute_checksum@data,w
  3858  0E32  00A2               	movwf	??_compute_checksum
  3859  0E33  0822               	movf	??_compute_checksum,w
  3860  0E34  0086               	movwf	6
  3861  0E35  0187               	clrf	7
  3862  0E36  0801               	movf	1,w
  3863  0E37  3A24               	xorlw	36
  3864  0E38  1903               	skipnz
  3865  0E39  2E58               	goto	l2086
  3866  0E3A  0826               	movf	compute_checksum@x,w
  3867  0E3B  0725               	addwf	compute_checksum@data,w
  3868  0E3C  00A2               	movwf	??_compute_checksum
  3869  0E3D  0822               	movf	??_compute_checksum,w
  3870  0E3E  0086               	movwf	6
  3871  0E3F  0187               	clrf	7
  3872  0E40  0801               	movf	1,w
  3873  0E41  3A2A               	xorlw	42
  3874  0E42  1903               	skipnz
  3875  0E43  2E58               	goto	l2086
  3876  0E44  0826               	movf	compute_checksum@x,w
  3877  0E45  0725               	addwf	compute_checksum@data,w
  3878  0E46  00A2               	movwf	??_compute_checksum
  3879  0E47  0822               	movf	??_compute_checksum,w
  3880  0E48  0086               	movwf	6
  3881  0E49  0187               	clrf	7
  3882  0E4A  0801               	movf	1,w
  3883  0E4B  3A21               	xorlw	33
  3884  0E4C  1903               	skipnz
  3885  0E4D  2E58               	goto	l2086
  3886                           
  3887                           ;launcher_functions.c: 289: checksum ^= data[x];
  3888  0E4E  0826               	movf	compute_checksum@x,w
  3889  0E4F  0725               	addwf	compute_checksum@data,w
  3890  0E50  00A2               	movwf	??_compute_checksum
  3891  0E51  0822               	movf	??_compute_checksum,w
  3892  0E52  0086               	movwf	6
  3893  0E53  0187               	clrf	7
  3894  0E54  0801               	movf	1,w
  3895  0E55  00A3               	movwf	??_compute_checksum+1
  3896  0E56  0823               	movf	??_compute_checksum+1,w
  3897  0E57  06A4               	xorwf	compute_checksum@checksum,f
  3898  0E58                     l2086:	
  3899  0E58  3001               	movlw	1
  3900  0E59  07A6               	addwf	compute_checksum@x,f
  3901  0E5A  3000               	movlw	0
  3902  0E5B  3DA7               	addwfc	compute_checksum@x+1,f
  3903  0E5C  2E23               	goto	l2088
  3904  0E5D                     l2090:	
  3905                           
  3906                           ;launcher_functions.c: 290: }
  3907                           ;launcher_functions.c: 291: return checksum;
  3908  0E5D  0020               	movlb	0	; select bank0
  3909  0E5E  0824               	movf	compute_checksum@checksum,w
  3910  0E5F  0008               	return
  3911  0E60                     __end_of_compute_checksum:	
  3912                           
  3913                           	psect	text11
  3914  0525                     __ptext11:	
  3915 ;; *************** function _sprintf *****************
  3916 ;; Defined at:
  3917 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  sp              1    wreg     PTR unsigned char 
  3920 ;;		 -> SetupGPS@message(50), 
  3921 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3922 ;;		 -> STR_2(39), STR_1(19), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  3925 ;;		 -> SetupGPS@message(50), 
  3926 ;;  _val            4   28[BANK0 ] struct .
  3927 ;;  c               1   32[BANK0 ] char 
  3928 ;;  ap              1   26[BANK0 ] PTR void [1]
  3929 ;;		 -> ?_sprintf(2), 
  3930 ;;  prec            1   25[BANK0 ] char 
  3931 ;;  flag            1   24[BANK0 ] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  2   14[BANK0 ] int 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3941 ;;      Params:         0       6       0       0       0       0       0
  3942 ;;      Locals:         0       9       0       0       0       0       0
  3943 ;;      Temps:          0       4       0       0       0       0       0
  3944 ;;      Totals:         0      19       0       0       0       0       0
  3945 ;;Total ram usage:       19 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    3
  3948 ;; This function calls:
  3949 ;;		___lwdiv
  3950 ;;		___lwmod
  3951 ;; This function is called by:
  3952 ;;		_SetupGPS
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _sprintf
  3958  0525                     _sprintf:	
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3962                           ;sprintf@sp stored from wreg
  3963  0525  0020               	movlb	0	; select bank0
  3964  0526  00BB               	movwf	sprintf@sp
  3965                           
  3966                           ;doprnt.c: 494: va_list ap;
  3967                           ;doprnt.c: 499: signed char c;
  3968                           ;doprnt.c: 506: signed char prec;
  3969                           ;doprnt.c: 508: unsigned char flag;
  3970                           ;doprnt.c: 527: union {
  3971                           ;doprnt.c: 528: unsigned int _val;
  3972                           ;doprnt.c: 529: struct {
  3973                           ;doprnt.c: 530: const char * _cp;
  3974                           ;doprnt.c: 531: unsigned _len;
  3975                           ;doprnt.c: 532: } _str;
  3976                           ;doprnt.c: 533: } _val;
  3977                           ;doprnt.c: 542: *ap = __va_start();
  3978  0527  3030               	movlw	(?_sprintf+2)& (0+255)
  3979  0528  00B4               	movwf	??_sprintf
  3980  0529  0834               	movf	??_sprintf,w
  3981  052A  00BA               	movwf	sprintf@ap
  3982  052B                     l2328:	
  3983                           ;doprnt.c: 545: while(c = *f++) {
  3984                           
  3985  052B  082F               	movf	sprintf@f+1,w
  3986  052C  00B5               	movwf	??_sprintf+1
  3987  052D  082E               	movf	sprintf@f,w
  3988  052E  00B4               	movwf	??_sprintf
  3989  052F  0AAE               	incf	sprintf@f,f
  3990  0530  1903               	skipnz
  3991  0531  0AAF               	incf	sprintf@f+1,f
  3992  0532  0834               	movf	??_sprintf,w
  3993  0533  0084               	movwf	4
  3994  0534  0835               	movf	??_sprintf+1,w
  3995  0535  0085               	movwf	5
  3996  0536  0800               	movf	0,w	;code access
  3997  0537  00B6               	movwf	??_sprintf+2
  3998  0538  0836               	movf	??_sprintf+2,w
  3999  0539  00C0               	movwf	sprintf@c
  4000  053A  08C0               	movf	sprintf@c,f
  4001  053B  1903               	btfsc	3,2
  4002  053C  2E26               	goto	l2330
  4003                           
  4004                           ;doprnt.c: 547: if(c != '%')
  4005  053D  0840               	movf	sprintf@c,w
  4006  053E  3A25               	xorlw	37
  4007  053F  1903               	skipnz
  4008  0540  2D4D               	goto	l2268
  4009                           
  4010                           ;doprnt.c: 549: {
  4011                           ;doprnt.c: 550: ((*sp++ = (c)));
  4012  0541  0840               	movf	sprintf@c,w
  4013  0542  00B4               	movwf	??_sprintf
  4014  0543  083B               	movf	sprintf@sp,w
  4015  0544  0086               	movwf	6
  4016  0545  0187               	clrf	7
  4017  0546  0834               	movf	??_sprintf,w
  4018  0547  0081               	movwf	1
  4019  0548  3001               	movlw	1
  4020  0549  00B4               	movwf	??_sprintf
  4021  054A  0834               	movf	??_sprintf,w
  4022  054B  07BB               	addwf	sprintf@sp,f
  4023                           
  4024                           ;doprnt.c: 551: continue;
  4025  054C  2D2B               	goto	l2328
  4026  054D                     l2268:	
  4027                           
  4028                           ;doprnt.c: 552: }
  4029                           ;doprnt.c: 557: flag = 0;
  4030  054D  01B8               	clrf	sprintf@flag
  4031                           
  4032                           ;doprnt.c: 644: switch(c = *f++) {
  4033  054E  2D7E               	goto	l2288
  4034  054F                     l2270:	
  4035                           ;doprnt.c: 737: case 's':
  4036                           
  4037                           ;doprnt.c: 707: case 'i':
  4038                           ;doprnt.c: 708: break;
  4039                           
  4040                           ;doprnt.c: 706: case 'd':
  4041                           
  4042                           ;doprnt.c: 647: goto alldone;
  4043                           
  4044                           ;doprnt.c: 646: case 0:
  4045                           
  4046                           
  4047                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  4048  054F  083A               	movf	sprintf@ap,w
  4049  0550  0086               	movwf	6
  4050  0551  0187               	clrf	7
  4051  0552  0801               	movf	1,w
  4052  0553  00BC               	movwf	sprintf@_val
  4053  0554  3000               	movlw	0
  4054  0555  00BD               	movwf	sprintf@_val+1
  4055  0556  3001               	movlw	1
  4056  0557  00B4               	movwf	??_sprintf
  4057  0558  0834               	movf	??_sprintf,w
  4058  0559  07BA               	addwf	sprintf@ap,f
  4059                           
  4060                           ;doprnt.c: 749: if(!_val._str._cp)
  4061  055A  083D               	movf	sprintf@_val+1,w
  4062  055B  043C               	iorwf	sprintf@_val,w
  4063  055C  1D03               	skipz
  4064  055D  2D62               	goto	l2284
  4065                           
  4066                           ;doprnt.c: 750: _val._str._cp = "(null)";
  4067  055E  3044               	movlw	low (STR_3| (0+32768))
  4068  055F  00BC               	movwf	sprintf@_val
  4069  0560  3088               	movlw	high (STR_3| (0+32768))
  4070  0561  00BD               	movwf	sprintf@_val+1
  4071  0562                     l2284:	
  4072                           ;doprnt.c: 786: while(*_val._str._cp)
  4073                           
  4074  0562  083C               	movf	sprintf@_val,w
  4075  0563  0084               	movwf	4
  4076  0564  083D               	movf	sprintf@_val+1,w
  4077  0565  0085               	movwf	5
  4078  0566  0800               	movf	0,w	;code access
  4079  0567  3800               	iorlw	0
  4080  0568  1903               	btfsc	3,2
  4081  0569  2D2B               	goto	l2328
  4082                           
  4083                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  4084  056A  083C               	movf	sprintf@_val,w
  4085  056B  0084               	movwf	4
  4086  056C  083D               	movf	sprintf@_val+1,w
  4087  056D  0085               	movwf	5
  4088  056E  0800               	movf	0,w	;code access
  4089  056F  00B4               	movwf	??_sprintf
  4090  0570  083B               	movf	sprintf@sp,w
  4091  0571  0086               	movwf	6
  4092  0572  0187               	clrf	7
  4093  0573  0834               	movf	??_sprintf,w
  4094  0574  0081               	movwf	1
  4095  0575  3001               	movlw	1
  4096  0576  07BC               	addwf	sprintf@_val,f
  4097  0577  3000               	movlw	0
  4098  0578  3DBD               	addwfc	sprintf@_val+1,f
  4099  0579  3001               	movlw	1
  4100  057A  00B4               	movwf	??_sprintf
  4101  057B  0834               	movf	??_sprintf,w
  4102  057C  07BB               	addwf	sprintf@sp,f
  4103  057D  2D62               	goto	l2284
  4104  057E                     l2288:	
  4105                           ;doprnt.c: 831: }
  4106                           
  4107                           ;doprnt.c: 822: continue;
  4108                           
  4109                           ;doprnt.c: 811: default:
  4110                           
  4111                           ;doprnt.c: 788: continue;
  4112                           
  4113  057E  082F               	movf	sprintf@f+1,w
  4114  057F  00B5               	movwf	??_sprintf+1
  4115  0580  082E               	movf	sprintf@f,w
  4116  0581  00B4               	movwf	??_sprintf
  4117  0582  0AAE               	incf	sprintf@f,f
  4118  0583  1903               	skipnz
  4119  0584  0AAF               	incf	sprintf@f+1,f
  4120  0585  0834               	movf	??_sprintf,w
  4121  0586  0084               	movwf	4
  4122  0587  0835               	movf	??_sprintf+1,w
  4123  0588  0085               	movwf	5
  4124  0589  0800               	movf	0,w	;code access
  4125  058A  00C0               	movwf	sprintf@c
  4126                           
  4127                           ; Switch size 1, requested type "space"
  4128                           ; Number of cases is 4, Range of values is 0 to 115
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte           13     7 (average)
  4132                           ; direct_byte          238     6 (fixed)
  4133                           ; jumptable            260     6 (fixed)
  4134                           ;	Chosen strategy is simple_byte
  4135  058B  3A00               	xorlw	0	; case 0
  4136  058C  1903               	skipnz
  4137  058D  2E26               	goto	l2330
  4138  058E  3A64               	xorlw	100	; case 100
  4139  058F  1903               	skipnz
  4140  0590  2D98               	goto	l2290
  4141  0591  3A0D               	xorlw	13	; case 105
  4142  0592  1903               	skipnz
  4143  0593  2D98               	goto	l2290
  4144  0594  3A1A               	xorlw	26	; case 115
  4145  0595  1903               	skipnz
  4146  0596  2D4F               	goto	l2270
  4147  0597  2D2B               	goto	l2328
  4148  0598                     l2290:	
  4149                           
  4150                           ;doprnt.c: 1262: {
  4151                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4152  0598  083A               	movf	sprintf@ap,w
  4153  0599  0086               	movwf	6
  4154  059A  0187               	clrf	7
  4155  059B  3F40               	moviw [0]fsr1
  4156  059C  00BC               	movwf	sprintf@_val
  4157  059D  3F41               	moviw [1]fsr1
  4158  059E  00BD               	movwf	sprintf@_val+1
  4159  059F  3002               	movlw	2
  4160  05A0  00B4               	movwf	??_sprintf
  4161  05A1  0834               	movf	??_sprintf,w
  4162  05A2  07BA               	addwf	sprintf@ap,f
  4163                           
  4164                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4165  05A3  1FBD               	btfss	sprintf@_val+1,7
  4166  05A4  2DAE               	goto	l2300
  4167                           
  4168                           ;doprnt.c: 1271: flag |= 0x03;
  4169  05A5  3003               	movlw	3
  4170  05A6  00B4               	movwf	??_sprintf
  4171  05A7  0834               	movf	??_sprintf,w
  4172  05A8  04B8               	iorwf	sprintf@flag,f
  4173                           
  4174                           ;doprnt.c: 1272: _val._val = -_val._val;
  4175  05A9  09BC               	comf	sprintf@_val,f
  4176  05AA  09BD               	comf	sprintf@_val+1,f
  4177  05AB  0ABC               	incf	sprintf@_val,f
  4178  05AC  1903               	skipnz
  4179  05AD  0ABD               	incf	sprintf@_val+1,f
  4180  05AE                     l2300:	
  4181                           
  4182                           ;doprnt.c: 1273: }
  4183                           ;doprnt.c: 1275: }
  4184                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4185  05AE  01C0               	clrf	sprintf@c
  4186  05AF  0AC0               	incf	sprintf@c,f
  4187  05B0  0840               	movf	sprintf@c,w
  4188  05B1  3A05               	xorlw	5
  4189  05B2  1903               	btfsc	3,2
  4190  05B3  2DD3               	goto	l2312
  4191  05B4                     l2304:	
  4192                           
  4193                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4194  05B4  0840               	movf	sprintf@c,w
  4195  05B5  00B4               	movwf	??_sprintf
  4196  05B6  01B5               	clrf	??_sprintf+1
  4197  05B7  35B4               	lslf	??_sprintf,f
  4198  05B8  0DB5               	rlf	??_sprintf+1,f
  4199  05B9  3000               	movlw	low (_dpowers| (0+32768))
  4200  05BA  0734               	addwf	??_sprintf,w
  4201  05BB  0084               	movwf	4
  4202  05BC  3088               	movlw	high (_dpowers| (0+32768))
  4203  05BD  3D35               	addwfc	??_sprintf+1,w
  4204  05BE  0085               	movwf	5
  4205  05BF  3F00               	moviw [0]fsr0
  4206  05C0  00B6               	movwf	??_sprintf+2
  4207  05C1  3F01               	moviw [1]fsr0
  4208  05C2  00B7               	movwf	??_sprintf+3
  4209  05C3  0837               	movf	??_sprintf+3,w
  4210  05C4  023D               	subwf	sprintf@_val+1,w
  4211  05C5  1D03               	skipz
  4212  05C6  2DC9               	goto	u1925
  4213  05C7  0836               	movf	??_sprintf+2,w
  4214  05C8  023C               	subwf	sprintf@_val,w
  4215  05C9                     u1925:	
  4216  05C9  1C03               	btfss	3,0
  4217  05CA  2DD3               	goto	l2312
  4218                           
  4219                           ;doprnt.c: 1316: break;
  4220  05CB  3001               	movlw	1
  4221  05CC  00B4               	movwf	??_sprintf
  4222  05CD  0834               	movf	??_sprintf,w
  4223  05CE  07C0               	addwf	sprintf@c,f
  4224  05CF  0840               	movf	sprintf@c,w
  4225  05D0  3A05               	xorlw	5
  4226  05D1  1D03               	skipz
  4227  05D2  2DB4               	goto	l2304
  4228  05D3                     l2312:	
  4229                           
  4230                           ;doprnt.c: 1431: {
  4231                           ;doprnt.c: 1447: if(flag & 0x03)
  4232  05D3  0838               	movf	sprintf@flag,w
  4233  05D4  3903               	andlw	3
  4234  05D5  1903               	btfsc	3,2
  4235  05D6  2DE2               	goto	l2318
  4236                           
  4237                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4238  05D7  302D               	movlw	45
  4239  05D8  00B4               	movwf	??_sprintf
  4240  05D9  083B               	movf	sprintf@sp,w
  4241  05DA  0086               	movwf	6
  4242  05DB  0187               	clrf	7
  4243  05DC  0834               	movf	??_sprintf,w
  4244  05DD  0081               	movwf	1
  4245  05DE  3001               	movlw	1
  4246  05DF  00B4               	movwf	??_sprintf
  4247  05E0  0834               	movf	??_sprintf,w
  4248  05E1  07BB               	addwf	sprintf@sp,f
  4249  05E2                     l2318:	
  4250                           
  4251                           ;doprnt.c: 1478: }
  4252                           ;doprnt.c: 1481: prec = c;
  4253  05E2  0840               	movf	sprintf@c,w
  4254  05E3  00B4               	movwf	??_sprintf
  4255  05E4  0834               	movf	??_sprintf,w
  4256  05E5  00B9               	movwf	sprintf@prec
  4257  05E6                     l2326:	
  4258                           ;doprnt.c: 1483: while(prec--) {
  4259                           
  4260  05E6  30FF               	movlw	-1
  4261  05E7  00B4               	movwf	??_sprintf
  4262  05E8  0834               	movf	??_sprintf,w
  4263  05E9  07B9               	addwf	sprintf@prec,f
  4264  05EA  0839               	movf	sprintf@prec,w
  4265  05EB  3AFF               	xorlw	255
  4266  05EC  1903               	btfsc	3,2
  4267  05ED  2D2B               	goto	l2328
  4268                           
  4269                           ;doprnt.c: 1487: {
  4270                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4271  05EE  300A               	movlw	10
  4272  05EF  00A8               	movwf	___lwmod@divisor
  4273  05F0  3000               	movlw	0
  4274  05F1  00A9               	movwf	___lwmod@divisor+1
  4275  05F2  0839               	movf	sprintf@prec,w
  4276  05F3  00B4               	movwf	??_sprintf
  4277  05F4  01B5               	clrf	??_sprintf+1
  4278  05F5  35B4               	lslf	??_sprintf,f
  4279  05F6  0DB5               	rlf	??_sprintf+1,f
  4280  05F7  3000               	movlw	low (_dpowers| (0+32768))
  4281  05F8  0734               	addwf	??_sprintf,w
  4282  05F9  0084               	movwf	4
  4283  05FA  3088               	movlw	high (_dpowers| (0+32768))
  4284  05FB  3D35               	addwfc	??_sprintf+1,w
  4285  05FC  0085               	movwf	5
  4286  05FD  3F00               	moviw [0]fsr0
  4287  05FE  00A0               	movwf	___lwdiv@divisor
  4288  05FF  3F01               	moviw [1]fsr0
  4289  0600  00A1               	movwf	___lwdiv@divisor+1
  4290  0601  083D               	movf	sprintf@_val+1,w
  4291  0602  01A3               	clrf	___lwdiv@dividend+1
  4292  0603  07A3               	addwf	___lwdiv@dividend+1,f
  4293  0604  083C               	movf	sprintf@_val,w
  4294  0605  01A2               	clrf	___lwdiv@dividend
  4295  0606  07A2               	addwf	___lwdiv@dividend,f
  4296  0607  318D  25E7  3185   	fcall	___lwdiv
  4297  060A  0020               	movlb	0	; select bank0
  4298  060B  0821               	movf	?___lwdiv+1,w
  4299  060C  01AB               	clrf	___lwmod@dividend+1
  4300  060D  07AB               	addwf	___lwmod@dividend+1,f
  4301  060E  0820               	movf	?___lwdiv,w
  4302  060F  01AA               	clrf	___lwmod@dividend
  4303  0610  07AA               	addwf	___lwmod@dividend,f
  4304  0611  318D  25B8  3185   	fcall	___lwmod
  4305  0614  0020               	movlb	0	; select bank0
  4306  0615  0828               	movf	?___lwmod,w
  4307  0616  3E30               	addlw	48
  4308  0617  00B6               	movwf	??_sprintf+2
  4309  0618  0836               	movf	??_sprintf+2,w
  4310  0619  00C0               	movwf	sprintf@c
  4311                           
  4312                           ;doprnt.c: 1532: }
  4313                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4314  061A  0840               	movf	sprintf@c,w
  4315  061B  00B4               	movwf	??_sprintf
  4316  061C  083B               	movf	sprintf@sp,w
  4317  061D  0086               	movwf	6
  4318  061E  0187               	clrf	7
  4319  061F  0834               	movf	??_sprintf,w
  4320  0620  0081               	movwf	1
  4321  0621  3001               	movlw	1
  4322  0622  00B4               	movwf	??_sprintf
  4323  0623  0834               	movf	??_sprintf,w
  4324  0624  07BB               	addwf	sprintf@sp,f
  4325  0625  2DE6               	goto	l2326
  4326  0626                     l2330:	
  4327                           ;doprnt.c: 1534: }
  4328                           ;doprnt.c: 1542: }
  4329                           ;doprnt.c: 1544: alldone:
  4330                           
  4331                           
  4332                           ;doprnt.c: 1547: *sp = 0;
  4333  0626  083B               	movf	sprintf@sp,w
  4334  0627  0086               	movwf	6
  4335  0628  0187               	clrf	7
  4336  0629  0181               	clrf	1
  4337  062A  0008               	return
  4338  062B                     __end_of_sprintf:	
  4339                           ;doprnt.c: 1549: return 0;
  4340                           ;	Return value of _sprintf is never used
  4341                           
  4342                           
  4343                           	psect	text12
  4344  0DB8                     __ptext12:	
  4345 ;; *************** function ___lwmod *****************
  4346 ;; Defined at:
  4347 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  divisor         2    8[BANK0 ] unsigned int 
  4350 ;;  dividend        2   10[BANK0 ] unsigned int 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  counter         1   13[BANK0 ] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2    8[BANK0 ] unsigned int 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4362 ;;      Params:         0       4       0       0       0       0       0
  4363 ;;      Locals:         0       1       0       0       0       0       0
  4364 ;;      Temps:          0       1       0       0       0       0       0
  4365 ;;      Totals:         0       6       0       0       0       0       0
  4366 ;;Total ram usage:        6 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    2
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_sprintf
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function ___lwmod
  4378  0DB8                     ___lwmod:	
  4379                           
  4380                           ;incstack = 0
  4381                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4382  0DB8  0020               	movlb	0	; select bank0
  4383  0DB9  0829               	movf	___lwmod@divisor+1,w
  4384  0DBA  0428               	iorwf	___lwmod@divisor,w
  4385  0DBB  1903               	skipnz
  4386  0DBC  2DE0               	goto	l2214
  4387  0DBD  01AD               	clrf	___lwmod@counter
  4388  0DBE  0AAD               	incf	___lwmod@counter,f
  4389  0DBF                     l2204:	
  4390  0DBF  1BA9               	btfsc	___lwmod@divisor+1,7
  4391  0DC0  2DCB               	goto	l2206
  4392  0DC1  3001               	movlw	1
  4393  0DC2                     u1765:	
  4394  0DC2  35A8               	lslf	___lwmod@divisor,f
  4395  0DC3  0DA9               	rlf	___lwmod@divisor+1,f
  4396  0DC4  0B89               	decfsz	9,f
  4397  0DC5  2DC2               	goto	u1765
  4398  0DC6  3001               	movlw	1
  4399  0DC7  00AC               	movwf	??___lwmod
  4400  0DC8  082C               	movf	??___lwmod,w
  4401  0DC9  07AD               	addwf	___lwmod@counter,f
  4402  0DCA  2DBF               	goto	l2204
  4403  0DCB                     l2206:	
  4404  0DCB  0829               	movf	___lwmod@divisor+1,w
  4405  0DCC  022B               	subwf	___lwmod@dividend+1,w
  4406  0DCD  1D03               	skipz
  4407  0DCE  2DD1               	goto	u1785
  4408  0DCF  0828               	movf	___lwmod@divisor,w
  4409  0DD0  022A               	subwf	___lwmod@dividend,w
  4410  0DD1                     u1785:	
  4411  0DD1  1C03               	skipc
  4412  0DD2  2DD7               	goto	l2210
  4413  0DD3  0828               	movf	___lwmod@divisor,w
  4414  0DD4  02AA               	subwf	___lwmod@dividend,f
  4415  0DD5  0829               	movf	___lwmod@divisor+1,w
  4416  0DD6  3BAB               	subwfb	___lwmod@dividend+1,f
  4417  0DD7                     l2210:	
  4418  0DD7  3001               	movlw	1
  4419  0DD8                     u1795:	
  4420  0DD8  36A9               	lsrf	___lwmod@divisor+1,f
  4421  0DD9  0CA8               	rrf	___lwmod@divisor,f
  4422  0DDA  0B89               	decfsz	9,f
  4423  0DDB  2DD8               	goto	u1795
  4424  0DDC  3001               	movlw	1
  4425  0DDD  02AD               	subwf	___lwmod@counter,f
  4426  0DDE  1D03               	btfss	3,2
  4427  0DDF  2DCB               	goto	l2206
  4428  0DE0                     l2214:	
  4429  0DE0  082B               	movf	___lwmod@dividend+1,w
  4430  0DE1  01A9               	clrf	?___lwmod+1
  4431  0DE2  07A9               	addwf	?___lwmod+1,f
  4432  0DE3  082A               	movf	___lwmod@dividend,w
  4433  0DE4  01A8               	clrf	?___lwmod
  4434  0DE5  07A8               	addwf	?___lwmod,f
  4435  0DE6  0008               	return
  4436  0DE7                     __end_of___lwmod:	
  4437                           
  4438                           	psect	text13
  4439  0DE7                     __ptext13:	
  4440 ;; *************** function ___lwdiv *****************
  4441 ;; Defined at:
  4442 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  divisor         2    0[BANK0 ] unsigned int 
  4445 ;;  dividend        2    2[BANK0 ] unsigned int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  quotient        2    5[BANK0 ] unsigned int 
  4448 ;;  counter         1    7[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    0[BANK0 ] unsigned int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4458 ;;      Params:         0       4       0       0       0       0       0
  4459 ;;      Locals:         0       3       0       0       0       0       0
  4460 ;;      Temps:          0       1       0       0       0       0       0
  4461 ;;      Totals:         0       8       0       0       0       0       0
  4462 ;;Total ram usage:        8 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    2
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_sprintf
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function ___lwdiv
  4474  0DE7                     ___lwdiv:	
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4478  0DE7  0020               	movlb	0	; select bank0
  4479  0DE8  01A5               	clrf	___lwdiv@quotient
  4480  0DE9  01A6               	clrf	___lwdiv@quotient+1
  4481  0DEA  0821               	movf	___lwdiv@divisor+1,w
  4482  0DEB  0420               	iorwf	___lwdiv@divisor,w
  4483  0DEC  1903               	skipnz
  4484  0DED  2E17               	goto	l2192
  4485  0DEE  01A7               	clrf	___lwdiv@counter
  4486  0DEF  0AA7               	incf	___lwdiv@counter,f
  4487  0DF0                     l2180:	
  4488  0DF0  1BA1               	btfsc	___lwdiv@divisor+1,7
  4489  0DF1  2DFC               	goto	l2182
  4490  0DF2  3001               	movlw	1
  4491  0DF3                     u1695:	
  4492  0DF3  35A0               	lslf	___lwdiv@divisor,f
  4493  0DF4  0DA1               	rlf	___lwdiv@divisor+1,f
  4494  0DF5  0B89               	decfsz	9,f
  4495  0DF6  2DF3               	goto	u1695
  4496  0DF7  3001               	movlw	1
  4497  0DF8  00A4               	movwf	??___lwdiv
  4498  0DF9  0824               	movf	??___lwdiv,w
  4499  0DFA  07A7               	addwf	___lwdiv@counter,f
  4500  0DFB  2DF0               	goto	l2180
  4501  0DFC                     l2182:	
  4502  0DFC  3001               	movlw	1
  4503  0DFD                     u1715:	
  4504  0DFD  35A5               	lslf	___lwdiv@quotient,f
  4505  0DFE  0DA6               	rlf	___lwdiv@quotient+1,f
  4506  0DFF  0B89               	decfsz	9,f
  4507  0E00  2DFD               	goto	u1715
  4508  0E01  0821               	movf	___lwdiv@divisor+1,w
  4509  0E02  0223               	subwf	___lwdiv@dividend+1,w
  4510  0E03  1D03               	skipz
  4511  0E04  2E07               	goto	u1725
  4512  0E05  0820               	movf	___lwdiv@divisor,w
  4513  0E06  0222               	subwf	___lwdiv@dividend,w
  4514  0E07                     u1725:	
  4515  0E07  1C03               	skipc
  4516  0E08  2E0E               	goto	l2188
  4517  0E09  0820               	movf	___lwdiv@divisor,w
  4518  0E0A  02A2               	subwf	___lwdiv@dividend,f
  4519  0E0B  0821               	movf	___lwdiv@divisor+1,w
  4520  0E0C  3BA3               	subwfb	___lwdiv@dividend+1,f
  4521  0E0D  1425               	bsf	___lwdiv@quotient,0
  4522  0E0E                     l2188:	
  4523  0E0E  3001               	movlw	1
  4524  0E0F                     u1735:	
  4525  0E0F  36A1               	lsrf	___lwdiv@divisor+1,f
  4526  0E10  0CA0               	rrf	___lwdiv@divisor,f
  4527  0E11  0B89               	decfsz	9,f
  4528  0E12  2E0F               	goto	u1735
  4529  0E13  3001               	movlw	1
  4530  0E14  02A7               	subwf	___lwdiv@counter,f
  4531  0E15  1D03               	btfss	3,2
  4532  0E16  2DFC               	goto	l2182
  4533  0E17                     l2192:	
  4534  0E17  0826               	movf	___lwdiv@quotient+1,w
  4535  0E18  01A1               	clrf	?___lwdiv+1
  4536  0E19  07A1               	addwf	?___lwdiv+1,f
  4537  0E1A  0825               	movf	___lwdiv@quotient,w
  4538  0E1B  01A0               	clrf	?___lwdiv
  4539  0E1C  07A0               	addwf	?___lwdiv,f
  4540  0E1D  0008               	return
  4541  0E1E                     __end_of___lwdiv:	
  4542                           
  4543                           	psect	text14
  4544  039C                     __ptext14:	
  4545 ;; *************** function _RecordMode *****************
  4546 ;; Defined at:
  4547 ;;		line 561 in file "launcher_functions.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  address         4   35[BANK0 ] long 
  4552 ;;  count           2   33[BANK0 ] int 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4562 ;;      Params:         0       0       0       0       0       0       0
  4563 ;;      Locals:         0       6       0       0       0       0       0
  4564 ;;      Temps:          0       5       0       0       0       0       0
  4565 ;;      Totals:         0      11       0       0       0       0       0
  4566 ;;Total ram usage:       11 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    6
  4569 ;; This function calls:
  4570 ;;		_CheckDisconnect
  4571 ;;		_InitSPI
  4572 ;;		_ReadBuffer
  4573 ;;		_SendGPSSPI
  4574 ;;		_WriteOverheadSPI
  4575 ;;		_WriteSPI
  4576 ;; This function is called by:
  4577 ;;		_main
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           
  4582                           ;psect for function _RecordMode
  4583  039C                     _RecordMode:	
  4584                           
  4585                           ;launcher_functions.c: 563: PORTAbits.RA4 = 1;
  4586                           
  4587                           ;incstack = 0
  4588                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4589  039C  0020               	movlb	0	; select bank0
  4590  039D  160C               	bsf	12,4	;volatile
  4591                           
  4592                           ;launcher_functions.c: 564: long int address = 0xBB68+11;
  4593  039E  3000               	movlw	0
  4594  039F  00C6               	movwf	RecordMode@address+3
  4595  03A0  3000               	movlw	0
  4596  03A1  00C5               	movwf	RecordMode@address+2
  4597  03A2  30BB               	movlw	187
  4598  03A3  00C4               	movwf	RecordMode@address+1
  4599  03A4  3073               	movlw	115
  4600  03A5  00C3               	movwf	RecordMode@address
  4601                           
  4602                           ;launcher_functions.c: 565: int count = 115;
  4603  03A6  3073               	movlw	115
  4604  03A7  00C1               	movwf	RecordMode@count
  4605  03A8  3000               	movlw	0
  4606  03A9  00C2               	movwf	RecordMode@count+1
  4607                           
  4608                           ;launcher_functions.c: 567: InitSPI();
  4609  03AA  318C  2478  3183   	fcall	_InitSPI
  4610                           
  4611                           ;launcher_functions.c: 570: if(CheckDisconnect())
  4612  03AD  318C  2446  3183   	fcall	_CheckDisconnect
  4613  03B0  3A00               	xorlw	0
  4614  03B1  1903               	skipnz
  4615  03B2  2BBF               	goto	l2686
  4616                           
  4617                           ;launcher_functions.c: 571: {
  4618                           ;launcher_functions.c: 572: LATC2 = (1);
  4619  03B3  0022               	movlb	2	; select bank2
  4620  03B4  150E               	bsf	14,2	;volatile
  4621                           
  4622                           ;launcher_functions.c: 573: (start) = 0;
  4623  03B5  01FB               	clrf	_start
  4624  03B6  01FC               	clrf	_start+1
  4625                           
  4626                           ;launcher_functions.c: 574: (end) = 0;
  4627  03B7  01F9               	clrf	_end
  4628  03B8  01FA               	clrf	_end+1
  4629                           
  4630                           ;launcher_functions.c: 575: SSPCON1bits.SSPEN=0;
  4631  03B9  0024               	movlb	4	; select bank4
  4632  03BA  1295               	bcf	21,5	;volatile
  4633                           
  4634                           ;launcher_functions.c: 576: PORTCbits.RC5 = 0;
  4635  03BB  0020               	movlb	0	; select bank0
  4636  03BC  128E               	bcf	14,5	;volatile
  4637                           
  4638                           ;launcher_functions.c: 577: PORTAbits.RA4 = 0;
  4639  03BD  120C               	bcf	12,4	;volatile
  4640                           
  4641                           ;launcher_functions.c: 578: return;
  4642  03BE  0008               	return
  4643  03BF                     l2686:	
  4644                           
  4645                           ;launcher_functions.c: 579: }
  4646                           ;launcher_functions.c: 581: (start) = 0;
  4647  03BF  01FB               	clrf	_start
  4648  03C0  01FC               	clrf	_start+1
  4649                           
  4650                           ;launcher_functions.c: 582: (end) = 0;
  4651  03C1  01F9               	clrf	_end
  4652  03C2  01FA               	clrf	_end+1
  4653                           
  4654                           ;launcher_functions.c: 584: _delay((unsigned long)((300)*(16000000/4000.0)));
  4655  03C3  3007               	movlw	7
  4656  03C4  0020               	movlb	0	; select bank0
  4657  03C5  00BE               	movwf	??_RecordMode+2
  4658  03C6  3017               	movlw	23
  4659  03C7  00BD               	movwf	??_RecordMode+1
  4660  03C8  306F               	movlw	111
  4661  03C9  00BC               	movwf	??_RecordMode
  4662  03CA                     u2907:	
  4663  03CA  0BBC               	decfsz	??_RecordMode,f
  4664  03CB  2BCA               	goto	u2907
  4665  03CC  0BBD               	decfsz	??_RecordMode+1,f
  4666  03CD  2BCA               	goto	u2907
  4667  03CE  0BBE               	decfsz	??_RecordMode+2,f
  4668  03CF  2BCA               	goto	u2907
  4669  03D0  0000               	nop
  4670                           
  4671                           ;launcher_functions.c: 585: WriteOverheadSPI(address);
  4672  03D1  0020               	movlb	0	; select bank0
  4673  03D2  0846               	movf	RecordMode@address+3,w
  4674  03D3  00AA               	movwf	WriteOverheadSPI@address+3
  4675  03D4  0845               	movf	RecordMode@address+2,w
  4676  03D5  00A9               	movwf	WriteOverheadSPI@address+2
  4677  03D6  0844               	movf	RecordMode@address+1,w
  4678  03D7  00A8               	movwf	WriteOverheadSPI@address+1
  4679  03D8  0843               	movf	RecordMode@address,w
  4680  03D9  00A7               	movwf	WriteOverheadSPI@address
  4681  03DA  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4682                           
  4683                           ;launcher_functions.c: 586: TMR1IF = 0;
  4684  03DD  0020               	movlb	0	; select bank0
  4685  03DE  1011               	bcf	17,0	;volatile
  4686                           
  4687                           ;launcher_functions.c: 587: TMR1IE = 1;
  4688  03DF  0021               	movlb	1	; select bank1
  4689  03E0  1411               	bsf	17,0	;volatile
  4690                           
  4691                           ;launcher_functions.c: 588: TMR1ON = 1;
  4692  03E1  0020               	movlb	0	; select bank0
  4693  03E2  1418               	bsf	24,0	;volatile
  4694                           
  4695                           ;launcher_functions.c: 589: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  4696  03E3  0022               	movlb	2	; select bank2
  4697  03E4  080D               	movf	13,w	;volatile
  4698  03E5  39FF               	andlw	255
  4699  03E6  3820               	iorlw	32
  4700  03E7  0020               	movlb	0	; select bank0
  4701  03E8  00BC               	movwf	??_RecordMode
  4702  03E9  080D               	movf	13,w	;volatile
  4703  03EA  063C               	xorwf	??_RecordMode,w
  4704  03EB  3900               	andlw	-256
  4705  03EC  063C               	xorwf	??_RecordMode,w
  4706  03ED  008D               	movwf	13	;volatile
  4707                           
  4708                           ;launcher_functions.c: 590: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  4709  03EE  0022               	movlb	2	; select bank2
  4710  03EF  080D               	movf	13,w	;volatile
  4711  03F0  39FF               	andlw	255
  4712  03F1  39EF               	andlw	239
  4713  03F2  0020               	movlb	0	; select bank0
  4714  03F3  00BC               	movwf	??_RecordMode
  4715  03F4  080D               	movf	13,w	;volatile
  4716  03F5  063C               	xorwf	??_RecordMode,w
  4717  03F6  3900               	andlw	-256
  4718  03F7  063C               	xorwf	??_RecordMode,w
  4719  03F8  008D               	movwf	13	;volatile
  4720  03F9                     l2718:	
  4721                           ;launcher_functions.c: 592: while((recordFlag) && (address < 131072))
  4722                           
  4723  03F9  0020               	movlb	0	; select bank0
  4724  03FA  086C               	movf	_recordFlag,w
  4725  03FB  1903               	btfsc	3,2
  4726  03FC  2C80               	goto	l2738
  4727  03FD  0846               	movf	RecordMode@address+3,w
  4728  03FE  3A80               	xorlw	128
  4729  03FF  00BC               	movwf	??_RecordMode
  4730  0400  3000               	movlw	0
  4731  0401  3A80               	xorlw	128
  4732  0402  023C               	subwf	??_RecordMode,w
  4733  0403  1D03               	skipz
  4734  0404  2C0F               	goto	u2233
  4735  0405  3002               	movlw	2
  4736  0406  0245               	subwf	RecordMode@address+2,w
  4737  0407  1D03               	skipz
  4738  0408  2C0F               	goto	u2233
  4739  0409  3000               	movlw	0
  4740  040A  0244               	subwf	RecordMode@address+1,w
  4741  040B  1D03               	skipz
  4742  040C  2C0F               	goto	u2233
  4743  040D  3000               	movlw	0
  4744  040E  0243               	subwf	RecordMode@address,w
  4745  040F                     u2233:	
  4746  040F  1803               	btfsc	3,0
  4747  0410  2C80               	goto	l2738
  4748                           
  4749                           ;launcher_functions.c: 593: {
  4750                           ;launcher_functions.c: 594: if(count>=256)
  4751  0411  0842               	movf	RecordMode@count+1,w
  4752  0412  3A80               	xorlw	128
  4753  0413  00BC               	movwf	??_RecordMode
  4754  0414  3081               	movlw	129
  4755  0415  023C               	subwf	??_RecordMode,w
  4756  0416  1D03               	skipz
  4757  0417  2C1A               	goto	u2205
  4758  0418  3000               	movlw	0
  4759  0419  0241               	subwf	RecordMode@count,w
  4760  041A                     u2205:	
  4761  041A  1C03               	skipc
  4762  041B  2C2C               	goto	l2710
  4763                           
  4764                           ;launcher_functions.c: 595: {
  4765                           ;launcher_functions.c: 596: LATC2 = (1);
  4766  041C  0022               	movlb	2	; select bank2
  4767  041D  150E               	bsf	14,2	;volatile
  4768                           
  4769                           ;launcher_functions.c: 597: count = 0;
  4770  041E  0020               	movlb	0	; select bank0
  4771  041F  01C1               	clrf	RecordMode@count
  4772  0420  01C2               	clrf	RecordMode@count+1
  4773                           
  4774                           ;launcher_functions.c: 598: WriteOverheadSPI(address);
  4775  0421  0846               	movf	RecordMode@address+3,w
  4776  0422  00AA               	movwf	WriteOverheadSPI@address+3
  4777  0423  0845               	movf	RecordMode@address+2,w
  4778  0424  00A9               	movwf	WriteOverheadSPI@address+2
  4779  0425  0844               	movf	RecordMode@address+1,w
  4780  0426  00A8               	movwf	WriteOverheadSPI@address+1
  4781  0427  0843               	movf	RecordMode@address,w
  4782  0428  00A7               	movwf	WriteOverheadSPI@address
  4783  0429  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4784  042C                     l2710:	
  4785                           
  4786                           ;launcher_functions.c: 599: }
  4787                           ;launcher_functions.c: 600: if(!((((start))==((end)))?(1):(0)))
  4788  042C  087A               	movf	_end+1,w
  4789  042D  067C               	xorwf	_start+1,w
  4790  042E  1D03               	skipz
  4791  042F  2C32               	goto	u2215
  4792  0430  0879               	movf	_end,w
  4793  0431  067B               	xorwf	_start,w
  4794  0432                     u2215:	
  4795  0432  1903               	skipnz
  4796  0433  2BF9               	goto	l2718
  4797                           
  4798                           ;launcher_functions.c: 601: {
  4799                           ;launcher_functions.c: 602: WriteSPI(ReadBuffer());
  4800  0434  318C  24DC  3183   	fcall	_ReadBuffer
  4801  0437  318C  249C  3183   	fcall	_WriteSPI
  4802                           
  4803                           ;launcher_functions.c: 603: address++;
  4804  043A  3001               	movlw	1
  4805  043B  0020               	movlb	0	; select bank0
  4806  043C  07C3               	addwf	RecordMode@address,f
  4807  043D  3000               	movlw	0
  4808  043E  3DC4               	addwfc	RecordMode@address+1,f
  4809  043F  3000               	movlw	0
  4810  0440  3DC5               	addwfc	RecordMode@address+2,f
  4811  0441  3000               	movlw	0
  4812  0442  3DC6               	addwfc	RecordMode@address+3,f
  4813                           
  4814                           ;launcher_functions.c: 604: count++;
  4815  0443  3001               	movlw	1
  4816  0444  07C1               	addwf	RecordMode@count,f
  4817  0445  3000               	movlw	0
  4818  0446  3DC2               	addwfc	RecordMode@count+1,f
  4819  0447  2BF9               	goto	l2718
  4820  0448                     l2722:	
  4821                           ;launcher_functions.c: 605: }
  4822                           ;launcher_functions.c: 607: }
  4823                           ;launcher_functions.c: 609: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4824                           
  4825                           
  4826                           ;launcher_functions.c: 610: {
  4827                           ;launcher_functions.c: 611: if(count>=256)
  4828  0448  0842               	movf	RecordMode@count+1,w
  4829  0449  3A80               	xorlw	128
  4830  044A  00BC               	movwf	??_RecordMode
  4831  044B  3081               	movlw	129
  4832  044C  023C               	subwf	??_RecordMode,w
  4833  044D  1D03               	skipz
  4834  044E  2C51               	goto	u2245
  4835  044F  3000               	movlw	0
  4836  0450  0241               	subwf	RecordMode@count,w
  4837  0451                     u2245:	
  4838  0451  1C03               	skipc
  4839  0452  2C63               	goto	l2730
  4840                           
  4841                           ;launcher_functions.c: 612: {
  4842                           ;launcher_functions.c: 613: LATC2 = (1);
  4843  0453  0022               	movlb	2	; select bank2
  4844  0454  150E               	bsf	14,2	;volatile
  4845                           
  4846                           ;launcher_functions.c: 614: count = 0;
  4847  0455  0020               	movlb	0	; select bank0
  4848  0456  01C1               	clrf	RecordMode@count
  4849  0457  01C2               	clrf	RecordMode@count+1
  4850                           
  4851                           ;launcher_functions.c: 615: WriteOverheadSPI(address);
  4852  0458  0846               	movf	RecordMode@address+3,w
  4853  0459  00AA               	movwf	WriteOverheadSPI@address+3
  4854  045A  0845               	movf	RecordMode@address+2,w
  4855  045B  00A9               	movwf	WriteOverheadSPI@address+2
  4856  045C  0844               	movf	RecordMode@address+1,w
  4857  045D  00A8               	movwf	WriteOverheadSPI@address+1
  4858  045E  0843               	movf	RecordMode@address,w
  4859  045F  00A7               	movwf	WriteOverheadSPI@address
  4860  0460  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4861  0463                     l2730:	
  4862                           
  4863                           ;launcher_functions.c: 616: }
  4864                           ;launcher_functions.c: 617: if(!((((start))==((end)))?(1):(0)))
  4865  0463  087A               	movf	_end+1,w
  4866  0464  067C               	xorwf	_start+1,w
  4867  0465  1D03               	skipz
  4868  0466  2C69               	goto	u2255
  4869  0467  0879               	movf	_end,w
  4870  0468  067B               	xorwf	_start,w
  4871  0469                     u2255:	
  4872  0469  1D03               	btfss	3,2
  4873  046A  2C6D               	goto	l2732
  4874  046B  0020               	movlb	0	; select bank0
  4875  046C  2C80               	goto	l2738
  4876  046D                     l2732:	
  4877                           
  4878                           ;launcher_functions.c: 618: {
  4879                           ;launcher_functions.c: 619: WriteSPI(ReadBuffer());
  4880  046D  318C  24DC  3183   	fcall	_ReadBuffer
  4881  0470  318C  249C  3183   	fcall	_WriteSPI
  4882                           
  4883                           ;launcher_functions.c: 620: address++;
  4884  0473  3001               	movlw	1
  4885  0474  0020               	movlb	0	; select bank0
  4886  0475  07C3               	addwf	RecordMode@address,f
  4887  0476  3000               	movlw	0
  4888  0477  3DC4               	addwfc	RecordMode@address+1,f
  4889  0478  3000               	movlw	0
  4890  0479  3DC5               	addwfc	RecordMode@address+2,f
  4891  047A  3000               	movlw	0
  4892  047B  3DC6               	addwfc	RecordMode@address+3,f
  4893                           
  4894                           ;launcher_functions.c: 621: count++;
  4895  047C  3001               	movlw	1
  4896  047D  07C1               	addwf	RecordMode@count,f
  4897  047E  3000               	movlw	0
  4898  047F  3DC2               	addwfc	RecordMode@count+1,f
  4899  0480                     l2738:	
  4900  0480  087A               	movf	_end+1,w
  4901  0481  067C               	xorwf	_start+1,w
  4902  0482  1D03               	skipz
  4903  0483  2C86               	goto	u2265
  4904  0484  0879               	movf	_end,w
  4905  0485  067B               	xorwf	_start,w
  4906  0486                     u2265:	
  4907  0486  1903               	skipnz
  4908  0487  2C9D               	goto	l450
  4909  0488  0020               	movlb	0	; select bank0
  4910  0489  0846               	movf	RecordMode@address+3,w
  4911  048A  3A80               	xorlw	128
  4912  048B  00BC               	movwf	??_RecordMode
  4913  048C  3000               	movlw	0
  4914  048D  3A80               	xorlw	128
  4915  048E  023C               	subwf	??_RecordMode,w
  4916  048F  1D03               	skipz
  4917  0490  2C9B               	goto	u2273
  4918  0491  3002               	movlw	2
  4919  0492  0245               	subwf	RecordMode@address+2,w
  4920  0493  1D03               	skipz
  4921  0494  2C9B               	goto	u2273
  4922  0495  3000               	movlw	0
  4923  0496  0244               	subwf	RecordMode@address+1,w
  4924  0497  1D03               	skipz
  4925  0498  2C9B               	goto	u2273
  4926  0499  3000               	movlw	0
  4927  049A  0243               	subwf	RecordMode@address,w
  4928  049B                     u2273:	
  4929  049B  1C03               	skipc
  4930  049C  2C48               	goto	l2722
  4931  049D                     l450:	
  4932                           
  4933                           ;launcher_functions.c: 622: }
  4934                           ;launcher_functions.c: 623: }
  4935                           ;launcher_functions.c: 624: LATC2 = (1);
  4936  049D  0022               	movlb	2	; select bank2
  4937  049E  150E               	bsf	14,2	;volatile
  4938                           
  4939                           ;launcher_functions.c: 625: TMR1IE = 0;
  4940  049F  0021               	movlb	1	; select bank1
  4941  04A0  1011               	bcf	17,0	;volatile
  4942                           
  4943                           ;launcher_functions.c: 626: TMR1ON = 0;
  4944  04A1  0020               	movlb	0	; select bank0
  4945  04A2  1018               	bcf	24,0	;volatile
  4946                           
  4947                           ;launcher_functions.c: 627: _delay((unsigned long)((5)*(16000000/4000.0)));
  4948  04A3  301A               	movlw	26
  4949  04A4  00BD               	movwf	??_RecordMode+1
  4950  04A5  30F8               	movlw	248
  4951  04A6  00BC               	movwf	??_RecordMode
  4952  04A7                     u2917:	
  4953  04A7  0BBC               	decfsz	??_RecordMode,f
  4954  04A8  2CA7               	goto	u2917
  4955  04A9  0BBD               	decfsz	??_RecordMode+1,f
  4956  04AA  2CA7               	goto	u2917
  4957  04AB  0000               	nop
  4958                           
  4959                           ;launcher_functions.c: 630: WriteOverheadSPI(0xBB68);
  4960  04AC  3000               	movlw	0
  4961  04AD  0020               	movlb	0	; select bank0
  4962  04AE  00AA               	movwf	WriteOverheadSPI@address+3
  4963  04AF  3000               	movlw	0
  4964  04B0  00A9               	movwf	WriteOverheadSPI@address+2
  4965  04B1  30BB               	movlw	187
  4966  04B2  00A8               	movwf	WriteOverheadSPI@address+1
  4967  04B3  3068               	movlw	104
  4968  04B4  00A7               	movwf	WriteOverheadSPI@address
  4969  04B5  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4970                           
  4971                           ;launcher_functions.c: 631: if(address >= 131072)
  4972  04B8  0020               	movlb	0	; select bank0
  4973  04B9  0846               	movf	RecordMode@address+3,w
  4974  04BA  3A80               	xorlw	128
  4975  04BB  00BC               	movwf	??_RecordMode
  4976  04BC  3000               	movlw	0
  4977  04BD  3A80               	xorlw	128
  4978  04BE  023C               	subwf	??_RecordMode,w
  4979  04BF  1D03               	skipz
  4980  04C0  2CCB               	goto	u2283
  4981  04C1  3002               	movlw	2
  4982  04C2  0245               	subwf	RecordMode@address+2,w
  4983  04C3  1D03               	skipz
  4984  04C4  2CCB               	goto	u2283
  4985  04C5  3000               	movlw	0
  4986  04C6  0244               	subwf	RecordMode@address+1,w
  4987  04C7  1D03               	skipz
  4988  04C8  2CCB               	goto	u2283
  4989  04C9  3000               	movlw	0
  4990  04CA  0243               	subwf	RecordMode@address,w
  4991  04CB                     u2283:	
  4992  04CB  1C03               	skipc
  4993  04CC  2CD7               	goto	l2750
  4994                           
  4995                           ;launcher_functions.c: 632: {
  4996                           ;launcher_functions.c: 633: WriteSPI((131072 - 1)>>16);
  4997  04CD  3001               	movlw	1
  4998  04CE  318C  249C  3183   	fcall	_WriteSPI
  4999                           
  5000                           ;launcher_functions.c: 634: WriteSPI((131072 - 1)>>8);
  5001  04D1  30FF               	movlw	255
  5002  04D2  318C  249C  3183   	fcall	_WriteSPI
  5003                           
  5004                           ;launcher_functions.c: 635: WriteSPI(131072 - 1);
  5005  04D5  30FF               	movlw	255
  5006  04D6  2D03               	goto	L3
  5007  04D7                     l2750:	
  5008                           ;launcher_functions.c: 636: }
  5009                           
  5010                           
  5011                           ;launcher_functions.c: 637: else
  5012                           ;launcher_functions.c: 638: {
  5013                           ;launcher_functions.c: 639: WriteSPI(address>>16);
  5014  04D7  0020               	movlb	0	; select bank0
  5015  04D8  0843               	movf	RecordMode@address,w
  5016  04D9  00BC               	movwf	??_RecordMode
  5017  04DA  0844               	movf	RecordMode@address+1,w
  5018  04DB  00BD               	movwf	??_RecordMode+1
  5019  04DC  0845               	movf	RecordMode@address+2,w
  5020  04DD  00BE               	movwf	??_RecordMode+2
  5021  04DE  0846               	movf	RecordMode@address+3,w
  5022  04DF  00BF               	movwf	??_RecordMode+3
  5023  04E0  3010               	movlw	16
  5024  04E1  00C0               	movwf	??_RecordMode+4
  5025  04E2                     u2295:	
  5026  04E2  37BF               	asrf	??_RecordMode+3,f
  5027  04E3  0CBE               	rrf	??_RecordMode+2,f
  5028  04E4  0CBD               	rrf	??_RecordMode+1,f
  5029  04E5  0CBC               	rrf	??_RecordMode,f
  5030  04E6  0BC0               	decfsz	??_RecordMode+4,f
  5031  04E7  2CE2               	goto	u2295
  5032  04E8  083C               	movf	??_RecordMode,w
  5033  04E9  318C  249C  3183   	fcall	_WriteSPI
  5034                           
  5035                           ;launcher_functions.c: 640: WriteSPI(address>>8);
  5036  04EC  0020               	movlb	0	; select bank0
  5037  04ED  0843               	movf	RecordMode@address,w
  5038  04EE  00BC               	movwf	??_RecordMode
  5039  04EF  0844               	movf	RecordMode@address+1,w
  5040  04F0  00BD               	movwf	??_RecordMode+1
  5041  04F1  0845               	movf	RecordMode@address+2,w
  5042  04F2  00BE               	movwf	??_RecordMode+2
  5043  04F3  0846               	movf	RecordMode@address+3,w
  5044  04F4  00BF               	movwf	??_RecordMode+3
  5045  04F5  3008               	movlw	8
  5046  04F6  00C0               	movwf	??_RecordMode+4
  5047  04F7                     u2305:	
  5048  04F7  37BF               	asrf	??_RecordMode+3,f
  5049  04F8  0CBE               	rrf	??_RecordMode+2,f
  5050  04F9  0CBD               	rrf	??_RecordMode+1,f
  5051  04FA  0CBC               	rrf	??_RecordMode,f
  5052  04FB  0BC0               	decfsz	??_RecordMode+4,f
  5053  04FC  2CF7               	goto	u2305
  5054  04FD  083C               	movf	??_RecordMode,w
  5055  04FE  318C  249C  3183   	fcall	_WriteSPI
  5056                           
  5057                           ;launcher_functions.c: 641: WriteSPI(address);
  5058  0501  0020               	movlb	0	; select bank0
  5059  0502  0843               	movf	RecordMode@address,w
  5060  0503                     L3:	
  5061  0503  318C  249C  3183   	fcall	_WriteSPI
  5062                           
  5063                           ;launcher_functions.c: 642: }
  5064                           ;launcher_functions.c: 644: LATC2 = (1);
  5065  0506  0022               	movlb	2	; select bank2
  5066  0507  150E               	bsf	14,2	;volatile
  5067                           
  5068                           ;launcher_functions.c: 645: if(hasValidGPSFlag)
  5069  0508  0020               	movlb	0	; select bank0
  5070  0509  086A               	movf	_hasValidGPSFlag,w
  5071  050A  1903               	btfsc	3,2
  5072  050B  2D10               	goto	l2760
  5073                           
  5074                           ;launcher_functions.c: 646: {
  5075                           ;launcher_functions.c: 647: SendGPSSPI();
  5076  050C  318F  2714         	fcall	_SendGPSSPI
  5077                           
  5078                           ;launcher_functions.c: 648: hasValidGPSFlag = 0;
  5079  050E  0020               	movlb	0	; select bank0
  5080  050F  01EA               	clrf	_hasValidGPSFlag
  5081  0510                     l2760:	
  5082                           
  5083                           ;launcher_functions.c: 649: }
  5084                           ;launcher_functions.c: 650: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  5085  0510  0022               	movlb	2	; select bank2
  5086  0511  080D               	movf	13,w	;volatile
  5087  0512  39FF               	andlw	255
  5088  0513  39DF               	andlw	223
  5089  0514  0020               	movlb	0	; select bank0
  5090  0515  00BC               	movwf	??_RecordMode
  5091  0516  080D               	movf	13,w	;volatile
  5092  0517  063C               	xorwf	??_RecordMode,w
  5093  0518  3900               	andlw	-256
  5094  0519  063C               	xorwf	??_RecordMode,w
  5095  051A  008D               	movwf	13	;volatile
  5096                           
  5097                           ;launcher_functions.c: 651: (start) = 0;
  5098  051B  01FB               	clrf	_start
  5099  051C  01FC               	clrf	_start+1
  5100                           
  5101                           ;launcher_functions.c: 652: (end) = 0;
  5102  051D  01F9               	clrf	_end
  5103  051E  01FA               	clrf	_end+1
  5104                           
  5105                           ;launcher_functions.c: 653: SSPCON1bits.SSPEN=0;
  5106  051F  0024               	movlb	4	; select bank4
  5107  0520  1295               	bcf	21,5	;volatile
  5108                           
  5109                           ;launcher_functions.c: 654: PORTCbits.RC5 = 0;
  5110  0521  0020               	movlb	0	; select bank0
  5111  0522  128E               	bcf	14,5	;volatile
  5112                           
  5113                           ;launcher_functions.c: 655: PORTAbits.RA4 = 0;
  5114  0523  120C               	bcf	12,4	;volatile
  5115  0524  0008               	return
  5116  0525                     __end_of_RecordMode:	
  5117                           
  5118                           	psect	text15
  5119  0F14                     __ptext15:	
  5120 ;; *************** function _SendGPSSPI *****************
  5121 ;; Defined at:
  5122 ;;		line 658 in file "launcher_functions.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  address         4   22[BANK0 ] long 
  5127 ;;  x               2   26[BANK0 ] int 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;		None               void
  5130 ;; Registers used:
  5131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5137 ;;      Params:         0       0       0       0       0       0       0
  5138 ;;      Locals:         0       6       0       0       0       0       0
  5139 ;;      Temps:          0       1       0       0       0       0       0
  5140 ;;      Totals:         0       7       0       0       0       0       0
  5141 ;;Total ram usage:        7 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    5
  5144 ;; This function calls:
  5145 ;;		_InitSPI
  5146 ;;		_WriteOverheadSPI
  5147 ;;		_WriteSPI
  5148 ;; This function is called by:
  5149 ;;		_RecordMode
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _SendGPSSPI
  5155  0F14                     _SendGPSSPI:	
  5156                           
  5157                           ;launcher_functions.c: 660: long int address = 0xBB68 + 3;
  5158                           
  5159                           ;incstack = 0
  5160                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5161  0F14  3000               	movlw	0
  5162  0F15  0020               	movlb	0	; select bank0
  5163  0F16  00B9               	movwf	SendGPSSPI@address+3
  5164  0F17  3000               	movlw	0
  5165  0F18  00B8               	movwf	SendGPSSPI@address+2
  5166  0F19  30BB               	movlw	187
  5167  0F1A  00B7               	movwf	SendGPSSPI@address+1
  5168  0F1B  306B               	movlw	107
  5169  0F1C  00B6               	movwf	SendGPSSPI@address
  5170                           
  5171                           ;launcher_functions.c: 661: int x;
  5172                           ;launcher_functions.c: 662: PORTAbits.RA4 = 1;
  5173  0F1D  160C               	bsf	12,4	;volatile
  5174                           
  5175                           ;launcher_functions.c: 663: if(SSPCON1bits.SSPEN == 0)
  5176  0F1E  0024               	movlb	4	; select bank4
  5177  0F1F  1A95               	btfsc	21,5	;volatile
  5178  0F20  2F24               	goto	l456
  5179                           
  5180                           ;launcher_functions.c: 664: InitSPI();
  5181  0F21  318C  2478  318F   	fcall	_InitSPI
  5182  0F24                     l456:	
  5183                           
  5184                           ;launcher_functions.c: 678: WriteOverheadSPI(address);
  5185  0F24  0020               	movlb	0	; select bank0
  5186  0F25  0839               	movf	SendGPSSPI@address+3,w
  5187  0F26  00AA               	movwf	WriteOverheadSPI@address+3
  5188  0F27  0838               	movf	SendGPSSPI@address+2,w
  5189  0F28  00A9               	movwf	WriteOverheadSPI@address+2
  5190  0F29  0837               	movf	SendGPSSPI@address+1,w
  5191  0F2A  00A8               	movwf	WriteOverheadSPI@address+1
  5192  0F2B  0836               	movf	SendGPSSPI@address,w
  5193  0F2C  00A7               	movwf	WriteOverheadSPI@address
  5194  0F2D  318E  26B4  318F   	fcall	_WriteOverheadSPI
  5195                           
  5196                           ;launcher_functions.c: 679: for(x=0;x<3;x++)
  5197  0F30  0020               	movlb	0	; select bank0
  5198  0F31  01BA               	clrf	SendGPSSPI@x
  5199  0F32  01BB               	clrf	SendGPSSPI@x+1
  5200  0F33  083B               	movf	SendGPSSPI@x+1,w
  5201  0F34  3A80               	xorlw	128
  5202  0F35  00B5               	movwf	??_SendGPSSPI
  5203  0F36  3080               	movlw	128
  5204  0F37  0235               	subwf	??_SendGPSSPI,w
  5205  0F38  1D03               	skipz
  5206  0F39  2F3C               	goto	u2125
  5207  0F3A  3003               	movlw	3
  5208  0F3B  023A               	subwf	SendGPSSPI@x,w
  5209  0F3C                     u2125:	
  5210  0F3C  1803               	btfsc	3,0
  5211  0F3D  2F57               	goto	l2498
  5212  0F3E                     l2492:	
  5213                           
  5214                           ;launcher_functions.c: 680: {
  5215                           ;launcher_functions.c: 681: WriteSPI(validLatitude[x]);
  5216  0F3E  0020               	movlb	0	; select bank0
  5217  0F3F  083A               	movf	SendGPSSPI@x,w
  5218  0F40  3E63               	addlw	_validLatitude& (0+255)
  5219  0F41  0086               	movwf	6
  5220  0F42  0187               	clrf	7
  5221  0F43  0801               	movf	1,w
  5222  0F44  318C  249C  318F   	fcall	_WriteSPI
  5223  0F47  3001               	movlw	1
  5224  0F48  0020               	movlb	0	; select bank0
  5225  0F49  07BA               	addwf	SendGPSSPI@x,f
  5226  0F4A  3000               	movlw	0
  5227  0F4B  3DBB               	addwfc	SendGPSSPI@x+1,f
  5228  0F4C  083B               	movf	SendGPSSPI@x+1,w
  5229  0F4D  3A80               	xorlw	128
  5230  0F4E  00B5               	movwf	??_SendGPSSPI
  5231  0F4F  3080               	movlw	128
  5232  0F50  0235               	subwf	??_SendGPSSPI,w
  5233  0F51  1D03               	skipz
  5234  0F52  2F55               	goto	u2135
  5235  0F53  3003               	movlw	3
  5236  0F54  023A               	subwf	SendGPSSPI@x,w
  5237  0F55                     u2135:	
  5238  0F55  1C03               	skipc
  5239  0F56  2F3E               	goto	l2492
  5240  0F57                     l2498:	
  5241                           
  5242                           ;launcher_functions.c: 682: }
  5243                           ;launcher_functions.c: 683: WriteSPI(validNorthSouth);
  5244  0F57  0020               	movlb	0	; select bank0
  5245  0F58  0868               	movf	_validNorthSouth,w
  5246  0F59  318C  249C  318F   	fcall	_WriteSPI
  5247                           
  5248                           ;launcher_functions.c: 684: for(x=0;x<3;x++)
  5249  0F5C  0020               	movlb	0	; select bank0
  5250  0F5D  01BA               	clrf	SendGPSSPI@x
  5251  0F5E  01BB               	clrf	SendGPSSPI@x+1
  5252  0F5F  083B               	movf	SendGPSSPI@x+1,w
  5253  0F60  3A80               	xorlw	128
  5254  0F61  00B5               	movwf	??_SendGPSSPI
  5255  0F62  3080               	movlw	128
  5256  0F63  0235               	subwf	??_SendGPSSPI,w
  5257  0F64  1D03               	skipz
  5258  0F65  2F68               	goto	u2145
  5259  0F66  3003               	movlw	3
  5260  0F67  023A               	subwf	SendGPSSPI@x,w
  5261  0F68                     u2145:	
  5262  0F68  1803               	btfsc	3,0
  5263  0F69  2F83               	goto	l2512
  5264  0F6A                     l2506:	
  5265                           
  5266                           ;launcher_functions.c: 685: {
  5267                           ;launcher_functions.c: 686: WriteSPI(validLongitude[x]);
  5268  0F6A  0020               	movlb	0	; select bank0
  5269  0F6B  083A               	movf	SendGPSSPI@x,w
  5270  0F6C  3EEC               	addlw	_validLongitude& (0+255)
  5271  0F6D  0086               	movwf	6
  5272  0F6E  0187               	clrf	7
  5273  0F6F  0801               	movf	1,w
  5274  0F70  318C  249C  318F   	fcall	_WriteSPI
  5275  0F73  3001               	movlw	1
  5276  0F74  0020               	movlb	0	; select bank0
  5277  0F75  07BA               	addwf	SendGPSSPI@x,f
  5278  0F76  3000               	movlw	0
  5279  0F77  3DBB               	addwfc	SendGPSSPI@x+1,f
  5280  0F78  083B               	movf	SendGPSSPI@x+1,w
  5281  0F79  3A80               	xorlw	128
  5282  0F7A  00B5               	movwf	??_SendGPSSPI
  5283  0F7B  3080               	movlw	128
  5284  0F7C  0235               	subwf	??_SendGPSSPI,w
  5285  0F7D  1D03               	skipz
  5286  0F7E  2F81               	goto	u2155
  5287  0F7F  3003               	movlw	3
  5288  0F80  023A               	subwf	SendGPSSPI@x,w
  5289  0F81                     u2155:	
  5290  0F81  1C03               	skipc
  5291  0F82  2F6A               	goto	l2506
  5292  0F83                     l2512:	
  5293                           
  5294                           ;launcher_functions.c: 687: }
  5295                           ;launcher_functions.c: 688: WriteSPI(validEastWest);
  5296  0F83  0020               	movlb	0	; select bank0
  5297  0F84  0867               	movf	_validEastWest,w
  5298  0F85  318C  249C         	fcall	_WriteSPI
  5299                           
  5300                           ;launcher_functions.c: 690: LATC2 = (1);
  5301  0F87  0022               	movlb	2	; select bank2
  5302  0F88  150E               	bsf	14,2	;volatile
  5303  0F89  0008               	return
  5304  0F8A                     __end_of_SendGPSSPI:	
  5305                           ;launcher_functions.c: 698: return;
  5306                           
  5307                           
  5308                           	psect	text16
  5309  0EB4                     __ptext16:	
  5310 ;; *************** function _WriteOverheadSPI *****************
  5311 ;; Defined at:
  5312 ;;		line 176 in file "launcher_functions.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  address         4    7[BANK0 ] long 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5317 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;		None               void
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, pclath, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5327 ;;      Params:         0       4       0       0       0       0       0
  5328 ;;      Locals:         0       4       0       0       0       0       0
  5329 ;;      Temps:          0       6       0       0       0       0       0
  5330 ;;      Totals:         0      14       0       0       0       0       0
  5331 ;;Total ram usage:       14 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    4
  5334 ;; This function calls:
  5335 ;;		_ReadStatusSPI
  5336 ;;		_WriteSPI
  5337 ;; This function is called by:
  5338 ;;		_RecordMode
  5339 ;;		_SendGPSSPI
  5340 ;;		_PreRecordMode
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function _WriteOverheadSPI
  5346  0EB4                     _WriteOverheadSPI:	
  5347                           
  5348                           ;launcher_functions.c: 178: unsigned char address_bytes[3];
  5349                           ;launcher_functions.c: 179: unsigned char StatusReg;
  5350                           ;launcher_functions.c: 181: address_bytes[0]=(unsigned char)(address>>16);
  5351                           
  5352                           ;incstack = 0
  5353                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5354  0EB4  0020               	movlb	0	; select bank0
  5355  0EB5  0827               	movf	WriteOverheadSPI@address,w
  5356  0EB6  00AB               	movwf	??_WriteOverheadSPI
  5357  0EB7  0828               	movf	WriteOverheadSPI@address+1,w
  5358  0EB8  00AC               	movwf	??_WriteOverheadSPI+1
  5359  0EB9  0829               	movf	WriteOverheadSPI@address+2,w
  5360  0EBA  00AD               	movwf	??_WriteOverheadSPI+2
  5361  0EBB  082A               	movf	WriteOverheadSPI@address+3,w
  5362  0EBC  00AE               	movwf	??_WriteOverheadSPI+3
  5363  0EBD  3010               	movlw	16
  5364  0EBE  00AF               	movwf	??_WriteOverheadSPI+4
  5365  0EBF                     u1435:	
  5366  0EBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  5367  0EC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5368  0EC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5369  0EC2  0CAB               	rrf	??_WriteOverheadSPI,f
  5370  0EC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5371  0EC4  2EBF               	goto	u1435
  5372  0EC5  082B               	movf	??_WriteOverheadSPI,w
  5373  0EC6  00B0               	movwf	??_WriteOverheadSPI+5
  5374  0EC7  0830               	movf	??_WriteOverheadSPI+5,w
  5375  0EC8  00B1               	movwf	WriteOverheadSPI@address_bytes
  5376                           
  5377                           ;launcher_functions.c: 182: address_bytes[1]=(unsigned char)(address>>8);
  5378  0EC9  0827               	movf	WriteOverheadSPI@address,w
  5379  0ECA  00AB               	movwf	??_WriteOverheadSPI
  5380  0ECB  0828               	movf	WriteOverheadSPI@address+1,w
  5381  0ECC  00AC               	movwf	??_WriteOverheadSPI+1
  5382  0ECD  0829               	movf	WriteOverheadSPI@address+2,w
  5383  0ECE  00AD               	movwf	??_WriteOverheadSPI+2
  5384  0ECF  082A               	movf	WriteOverheadSPI@address+3,w
  5385  0ED0  00AE               	movwf	??_WriteOverheadSPI+3
  5386  0ED1  3008               	movlw	8
  5387  0ED2  00AF               	movwf	??_WriteOverheadSPI+4
  5388  0ED3                     u1445:	
  5389  0ED3  37AE               	asrf	??_WriteOverheadSPI+3,f
  5390  0ED4  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5391  0ED5  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5392  0ED6  0CAB               	rrf	??_WriteOverheadSPI,f
  5393  0ED7  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5394  0ED8  2ED3               	goto	u1445
  5395  0ED9  082B               	movf	??_WriteOverheadSPI,w
  5396  0EDA  00B0               	movwf	??_WriteOverheadSPI+5
  5397  0EDB  0830               	movf	??_WriteOverheadSPI+5,w
  5398  0EDC  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5399                           
  5400                           ;launcher_functions.c: 183: address_bytes[2]=(unsigned char)(address);
  5401  0EDD  0827               	movf	WriteOverheadSPI@address,w
  5402  0EDE  00AB               	movwf	??_WriteOverheadSPI
  5403  0EDF  082B               	movf	??_WriteOverheadSPI,w
  5404  0EE0  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5405  0EE1                     l2062:	
  5406                           ;launcher_functions.c: 185: do
  5407                           
  5408                           
  5409                           ;launcher_functions.c: 186: {
  5410                           ;launcher_functions.c: 187: StatusReg = (ReadStatusSPI() & 0x01);
  5411  0EE1  318C  2455  318E   	fcall	_ReadStatusSPI
  5412  0EE4  3901               	andlw	1
  5413  0EE5  0020               	movlb	0	; select bank0
  5414  0EE6  00AB               	movwf	??_WriteOverheadSPI
  5415  0EE7  082B               	movf	??_WriteOverheadSPI,w
  5416  0EE8  00B4               	movwf	WriteOverheadSPI@StatusReg
  5417                           
  5418                           ;launcher_functions.c: 188: } while (StatusReg);
  5419  0EE9  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5420  0EEA  1D03               	skipz
  5421  0EEB  2EE1               	goto	l2062
  5422                           
  5423                           ;launcher_functions.c: 191: LATC2 = (0);
  5424  0EEC  0022               	movlb	2	; select bank2
  5425  0EED  110E               	bcf	14,2	;volatile
  5426                           
  5427                           ;launcher_functions.c: 192: WriteSPI((0x06));
  5428  0EEE  3006               	movlw	6
  5429  0EEF  318C  249C  318E   	fcall	_WriteSPI
  5430                           
  5431                           ;launcher_functions.c: 193: LATC2 = (1);
  5432  0EF2  0022               	movlb	2	; select bank2
  5433  0EF3  150E               	bsf	14,2	;volatile
  5434  0EF4                     l323:	
  5435                           ;launcher_functions.c: 195: do
  5436                           
  5437                           
  5438                           ;launcher_functions.c: 196: {
  5439                           ;launcher_functions.c: 197: StatusReg = (ReadStatusSPI() & 0x02);
  5440  0EF4  318C  2455  318E   	fcall	_ReadStatusSPI
  5441  0EF7  3902               	andlw	2
  5442  0EF8  0020               	movlb	0	; select bank0
  5443  0EF9  00AB               	movwf	??_WriteOverheadSPI
  5444  0EFA  082B               	movf	??_WriteOverheadSPI,w
  5445  0EFB  00B4               	movwf	WriteOverheadSPI@StatusReg
  5446                           
  5447                           ;launcher_functions.c: 198: } while (!StatusReg);
  5448  0EFC  0834               	movf	WriteOverheadSPI@StatusReg,w
  5449  0EFD  1903               	btfsc	3,2
  5450  0EFE  2EF4               	goto	l323
  5451                           
  5452                           ;launcher_functions.c: 203: LATC2=(0);
  5453  0EFF  0022               	movlb	2	; select bank2
  5454  0F00  110E               	bcf	14,2	;volatile
  5455                           
  5456                           ;launcher_functions.c: 204: WriteSPI((0x02));
  5457  0F01  3002               	movlw	2
  5458  0F02  318C  249C  318E   	fcall	_WriteSPI
  5459                           
  5460                           ;launcher_functions.c: 205: WriteSPI(address_bytes[0]);
  5461  0F05  0020               	movlb	0	; select bank0
  5462  0F06  0831               	movf	WriteOverheadSPI@address_bytes,w
  5463  0F07  318C  249C  318E   	fcall	_WriteSPI
  5464                           
  5465                           ;launcher_functions.c: 206: WriteSPI(address_bytes[1]);
  5466  0F0A  0020               	movlb	0	; select bank0
  5467  0F0B  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5468  0F0C  318C  249C  318E   	fcall	_WriteSPI
  5469                           
  5470                           ;launcher_functions.c: 207: WriteSPI(address_bytes[2]);
  5471  0F0F  0020               	movlb	0	; select bank0
  5472  0F10  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5473  0F11  318C  249C         	fcall	_WriteSPI
  5474  0F13  0008               	return
  5475  0F14                     __end_of_WriteOverheadSPI:	
  5476                           ;launcher_functions.c: 209: return;
  5477                           
  5478                           
  5479                           	psect	text17
  5480  0C78                     __ptext17:	
  5481 ;; *************** function _InitSPI *****************
  5482 ;; Defined at:
  5483 ;;		line 116 in file "launcher_functions.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;		None
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;		None               void
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5497 ;;      Params:         0       0       0       0       0       0       0
  5498 ;;      Locals:         0       0       0       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0       0       0
  5500 ;;      Totals:         0       0       0       0       0       0       0
  5501 ;;Total ram usage:        0 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    2
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_RecordMode
  5508 ;;		_SendGPSSPI
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _InitSPI
  5514  0C78                     _InitSPI:	
  5515                           
  5516                           ;launcher_functions.c: 119: TRISCbits.TRISC2 = 0;
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5520  0C78  0021               	movlb	1	; select bank1
  5521  0C79  110E               	bcf	14,2	;volatile
  5522                           
  5523                           ;launcher_functions.c: 120: TRISCbits.TRISC3 = 0;
  5524  0C7A  118E               	bcf	14,3	;volatile
  5525                           
  5526                           ;launcher_functions.c: 121: TRISCbits.TRISC4 = 1;
  5527  0C7B  160E               	bsf	14,4	;volatile
  5528                           
  5529                           ;launcher_functions.c: 122: TRISCbits.TRISC5 = 0;
  5530  0C7C  128E               	bcf	14,5	;volatile
  5531                           
  5532                           ;launcher_functions.c: 124: LATC2 = (1);
  5533  0C7D  0022               	movlb	2	; select bank2
  5534  0C7E  150E               	bsf	14,2	;volatile
  5535                           
  5536                           ;launcher_functions.c: 127: SSPCON1bits.SSPEN=0x00;
  5537  0C7F  0024               	movlb	4	; select bank4
  5538  0C80  1295               	bcf	21,5	;volatile
  5539                           
  5540                           ;launcher_functions.c: 128: SSPCON1bits.SSPM=0x01;
  5541  0C81  0815               	movf	21,w	;volatile
  5542  0C82  39F0               	andlw	-16
  5543  0C83  3801               	iorlw	1
  5544  0C84  0095               	movwf	21	;volatile
  5545                           
  5546                           ;launcher_functions.c: 129: SSPCON1bits.CKP=0;
  5547  0C85  1215               	bcf	21,4	;volatile
  5548                           
  5549                           ;launcher_functions.c: 130: SSPSTATbits.CKE=1;
  5550  0C86  1714               	bsf	20,6	;volatile
  5551                           
  5552                           ;launcher_functions.c: 131: SSPSTATbits.SMP=0;
  5553  0C87  1394               	bcf	20,7	;volatile
  5554                           
  5555                           ;launcher_functions.c: 132: SSPCON1bits.SSPEN=0x01;
  5556  0C88  1695               	bsf	21,5	;volatile
  5557  0C89  0008               	return
  5558  0C8A                     __end_of_InitSPI:	
  5559                           
  5560                           	psect	text18
  5561  0CDC                     __ptext18:	
  5562 ;; *************** function _ReadBuffer *****************
  5563 ;; Defined at:
  5564 ;;		line 224 in file "launcher_functions.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  read_data       1    1[BANK0 ] unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      unsigned char 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5578 ;;      Params:         0       0       0       0       0       0       0
  5579 ;;      Locals:         0       1       0       0       0       0       0
  5580 ;;      Temps:          0       1       0       0       0       0       0
  5581 ;;      Totals:         0       2       0       0       0       0       0
  5582 ;;Total ram usage:        2 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    2
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_RecordMode
  5589 ;;		_PreRecordMode
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           
  5594                           ;psect for function _ReadBuffer
  5595  0CDC                     _ReadBuffer:	
  5596                           
  5597                           ;launcher_functions.c: 226: unsigned char read_data;
  5598                           ;launcher_functions.c: 228: read_data = buffer[start];
  5599                           
  5600                           ;incstack = 0
  5601                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5602  0CDC  087B               	movf	_start,w
  5603  0CDD  3EA0               	addlw	_buffer& (0+255)
  5604  0CDE  0086               	movwf	6
  5605  0CDF  3001               	movlw	1	; select bank3/4
  5606  0CE0  0087               	movwf	7
  5607  0CE1  0801               	movf	1,w
  5608  0CE2  0020               	movlb	0	; select bank0
  5609  0CE3  00A0               	movwf	??_ReadBuffer
  5610  0CE4  0820               	movf	??_ReadBuffer,w
  5611  0CE5  00A1               	movwf	ReadBuffer@read_data
  5612                           
  5613                           ;launcher_functions.c: 229: if (start == 51)
  5614  0CE6  3033               	movlw	51
  5615  0CE7  067B               	xorwf	_start,w
  5616  0CE8  047C               	iorwf	_start+1,w
  5617  0CE9  1D03               	skipz
  5618  0CEA  2CEE               	goto	l2224
  5619                           
  5620                           ;launcher_functions.c: 230: start = 0;
  5621  0CEB  01FB               	clrf	_start
  5622  0CEC  01FC               	clrf	_start+1
  5623  0CED  2CF2               	goto	l334
  5624  0CEE                     l2224:	
  5625                           
  5626                           ;launcher_functions.c: 231: else
  5627                           ;launcher_functions.c: 232: start++;
  5628  0CEE  3001               	movlw	1
  5629  0CEF  07FB               	addwf	_start,f
  5630  0CF0  3000               	movlw	0
  5631  0CF1  3DFC               	addwfc	_start+1,f
  5632  0CF2                     l334:	
  5633                           
  5634                           ;launcher_functions.c: 233: return read_data;
  5635  0CF2  0821               	movf	ReadBuffer@read_data,w
  5636  0CF3  0008               	return
  5637  0CF4                     __end_of_ReadBuffer:	
  5638                           
  5639                           	psect	text19
  5640  0C46                     __ptext19:	
  5641 ;; *************** function _CheckDisconnect *****************
  5642 ;; Defined at:
  5643 ;;		line 702 in file "launcher_functions.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  status          1    8[BANK0 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      unsigned char 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, pclath, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5657 ;;      Params:         0       0       0       0       0       0       0
  5658 ;;      Locals:         0       1       0       0       0       0       0
  5659 ;;      Temps:          0       1       0       0       0       0       0
  5660 ;;      Totals:         0       2       0       0       0       0       0
  5661 ;;Total ram usage:        2 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    4
  5664 ;; This function calls:
  5665 ;;		_ReadStatusSPI
  5666 ;; This function is called by:
  5667 ;;		_RecordMode
  5668 ;;		_PreRecordMode
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           
  5673                           ;psect for function _CheckDisconnect
  5674  0C46                     _CheckDisconnect:	
  5675                           
  5676                           ;launcher_functions.c: 704: unsigned char status;
  5677                           ;launcher_functions.c: 705: status = ReadStatusSPI();
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _CheckDisconnect: [wreg+status,2+status,0+pclath+cstack]
  5681  0C46  318C  2455  318C   	fcall	_ReadStatusSPI
  5682  0C49  0020               	movlb	0	; select bank0
  5683  0C4A  00A7               	movwf	??_CheckDisconnect
  5684  0C4B  0827               	movf	??_CheckDisconnect,w
  5685  0C4C  00A8               	movwf	CheckDisconnect@status
  5686                           
  5687                           ;launcher_functions.c: 706: if(status==0xff)
  5688  0C4D  0828               	movf	CheckDisconnect@status,w
  5689  0C4E  3AFF               	xorlw	255
  5690  0C4F  1D03               	skipz
  5691  0C50  2C53               	goto	l2474
  5692                           
  5693                           ;launcher_functions.c: 707: return 1;
  5694  0C51  3001               	movlw	1
  5695  0C52  0008               	return
  5696  0C53                     l2474:	
  5697                           
  5698                           ;launcher_functions.c: 708: else
  5699                           ;launcher_functions.c: 709: return 0;
  5700  0C53  3000               	movlw	0
  5701  0C54  0008               	return
  5702  0C55                     __end_of_CheckDisconnect:	
  5703                           
  5704                           	psect	text20
  5705  0C55                     __ptext20:	
  5706 ;; *************** function _ReadStatusSPI *****************
  5707 ;; Defined at:
  5708 ;;		line 164 in file "launcher_functions.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      unsigned char 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, pclath, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5722 ;;      Params:         0       0       0       0       0       0       0
  5723 ;;      Locals:         0       1       0       0       0       0       0
  5724 ;;      Temps:          0       1       0       0       0       0       0
  5725 ;;      Totals:         0       2       0       0       0       0       0
  5726 ;;Total ram usage:        2 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    3
  5729 ;; This function calls:
  5730 ;;		_ReadSPI
  5731 ;;		_WriteSPI
  5732 ;; This function is called by:
  5733 ;;		_WriteOverheadSPI
  5734 ;;		_CheckDisconnect
  5735 ;;		_ReadOverheadSPI
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function _ReadStatusSPI
  5741  0C55                     _ReadStatusSPI:	
  5742                           
  5743                           ;launcher_functions.c: 166: unsigned char dataRead;
  5744                           ;launcher_functions.c: 168: LATC2=(0);
  5745                           
  5746                           ;incstack = 0
  5747                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5748  0C55  0022               	movlb	2	; select bank2
  5749  0C56  110E               	bcf	14,2	;volatile
  5750                           
  5751                           ;launcher_functions.c: 169: WriteSPI((0x05));
  5752  0C57  3005               	movlw	5
  5753  0C58  318C  249C  318C   	fcall	_WriteSPI
  5754                           
  5755                           ;launcher_functions.c: 170: dataRead = ReadSPI();
  5756  0C5B  318C  241C         	fcall	_ReadSPI
  5757  0C5D  0020               	movlb	0	; select bank0
  5758  0C5E  00A5               	movwf	??_ReadStatusSPI
  5759  0C5F  0825               	movf	??_ReadStatusSPI,w
  5760  0C60  00A6               	movwf	ReadStatusSPI@dataRead
  5761                           
  5762                           ;launcher_functions.c: 171: LATC2=(1);
  5763  0C61  0022               	movlb	2	; select bank2
  5764  0C62  150E               	bsf	14,2	;volatile
  5765                           
  5766                           ;launcher_functions.c: 173: return(dataRead);
  5767  0C63  0020               	movlb	0	; select bank0
  5768  0C64  0826               	movf	ReadStatusSPI@dataRead,w
  5769  0C65  0008               	return
  5770  0C66                     __end_of_ReadStatusSPI:	
  5771                           
  5772                           	psect	text21
  5773  0C9C                     __ptext21:	
  5774 ;; *************** function _WriteSPI *****************
  5775 ;; Defined at:
  5776 ;;		line 144 in file "launcher_functions.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  databyte        1    wreg     unsigned char 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  databyte        1    4[BANK0 ] unsigned char 
  5781 ;;  temp            2    2[BANK0 ] unsigned int 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;		None               void
  5784 ;; Registers used:
  5785 ;;		wreg
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5791 ;;      Params:         0       0       0       0       0       0       0
  5792 ;;      Locals:         0       3       0       0       0       0       0
  5793 ;;      Temps:          0       2       0       0       0       0       0
  5794 ;;      Totals:         0       5       0       0       0       0       0
  5795 ;;Total ram usage:        5 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    2
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_ReadStatusSPI
  5802 ;;		_WriteOverheadSPI
  5803 ;;		_RecordMode
  5804 ;;		_SendGPSSPI
  5805 ;;		_ReadOverheadSPI
  5806 ;;		_PreRecordMode
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function _WriteSPI
  5812  0C9C                     _WriteSPI:	
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in _WriteSPI: [wreg]
  5816                           ;WriteSPI@databyte stored from wreg
  5817  0C9C  0020               	movlb	0	; select bank0
  5818  0C9D  00A4               	movwf	WriteSPI@databyte
  5819                           
  5820                           ;launcher_functions.c: 146: unsigned int temp;
  5821                           ;launcher_functions.c: 147: temp = SSPBUF;
  5822  0C9E  0024               	movlb	4	; select bank4
  5823  0C9F  0811               	movf	17,w	;volatile
  5824  0CA0  0020               	movlb	0	; select bank0
  5825  0CA1  00A0               	movwf	??_WriteSPI
  5826  0CA2  01A1               	clrf	??_WriteSPI+1
  5827  0CA3  0820               	movf	??_WriteSPI,w
  5828  0CA4  00A2               	movwf	WriteSPI@temp
  5829  0CA5  0821               	movf	??_WriteSPI+1,w
  5830  0CA6  00A3               	movwf	WriteSPI@temp+1
  5831                           
  5832                           ;launcher_functions.c: 148: PIR1bits.SSP1IF=0;
  5833  0CA7  1191               	bcf	17,3	;volatile
  5834                           
  5835                           ;launcher_functions.c: 149: SSPBUF = databyte;
  5836  0CA8  0824               	movf	WriteSPI@databyte,w
  5837  0CA9  0024               	movlb	4	; select bank4
  5838  0CAA  0091               	movwf	17	;volatile
  5839  0CAB                     l306:	
  5840                           ;launcher_functions.c: 150: while(!PIR1bits.SSP1IF);
  5841                           
  5842  0CAB  0020               	movlb	0	; select bank0
  5843  0CAC  1991               	btfsc	17,3	;volatile
  5844  0CAD  0008               	return
  5845  0CAE  2CAB               	goto	l306
  5846  0CAF                     __end_of_WriteSPI:	
  5847                           
  5848                           	psect	text22
  5849  0C1C                     __ptext22:	
  5850 ;; *************** function _ReadSPI *****************
  5851 ;; Defined at:
  5852 ;;		line 153 in file "launcher_functions.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      unsigned char 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5866 ;;      Params:         0       0       0       0       0       0       0
  5867 ;;      Locals:         0       1       0       0       0       0       0
  5868 ;;      Temps:          0       1       0       0       0       0       0
  5869 ;;      Totals:         0       2       0       0       0       0       0
  5870 ;;Total ram usage:        2 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    2
  5873 ;; This function calls:
  5874 ;;		Nothing
  5875 ;; This function is called by:
  5876 ;;		_ReadStatusSPI
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _ReadSPI
  5882  0C1C                     _ReadSPI:	
  5883                           
  5884                           ;launcher_functions.c: 155: unsigned char dataByte;
  5885                           ;launcher_functions.c: 157: SSPBUF = 0x00;
  5886                           
  5887                           ;incstack = 0
  5888                           ; Regs used in _ReadSPI: [wreg+status,2]
  5889  0C1C  0024               	movlb	4	; select bank4
  5890  0C1D  0191               	clrf	17	;volatile
  5891  0C1E                     l312:	
  5892                           ;launcher_functions.c: 158: while(!SSPSTATbits.BF);
  5893                           
  5894  0C1E  1C14               	btfss	20,0	;volatile
  5895  0C1F  2C1E               	goto	l312
  5896                           
  5897                           ;launcher_functions.c: 159: dataByte = SSPBUF;
  5898  0C20  0811               	movf	17,w	;volatile
  5899  0C21  0020               	movlb	0	; select bank0
  5900  0C22  00A0               	movwf	??_ReadSPI
  5901  0C23  0820               	movf	??_ReadSPI,w
  5902  0C24  00A1               	movwf	ReadSPI@dataByte
  5903                           
  5904                           ;launcher_functions.c: 160: PIR1bits.SSP1IF=0;
  5905  0C25  1191               	bcf	17,3	;volatile
  5906                           
  5907                           ;launcher_functions.c: 161: return (dataByte);
  5908  0C26  0821               	movf	ReadSPI@dataByte,w
  5909  0C27  0008               	return
  5910  0C28                     __end_of_ReadSPI:	
  5911                           
  5912                           	psect	text23
  5913  0C04                     __ptext23:	
  5914 ;; *************** function _InitWatchdog *****************
  5915 ;; Defined at:
  5916 ;;		line 135 in file "launcher_functions.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;		None
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;		None               void
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5930 ;;      Params:         0       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0
  5933 ;;      Totals:         0       0       0       0       0       0       0
  5934 ;;Total ram usage:        0 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    2
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           
  5945                           ;psect for function _InitWatchdog
  5946  0C04                     _InitWatchdog:	
  5947                           
  5948                           ;launcher_functions.c: 138: WDTCONbits.WDTPS = 0x0A;
  5949                           
  5950                           ;incstack = 0
  5951                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5952  0C04  0021               	movlb	1	; select bank1
  5953  0C05  0817               	movf	23,w	;volatile
  5954  0C06  39C1               	andlw	-63
  5955  0C07  3814               	iorlw	20
  5956  0C08  0097               	movwf	23	;volatile
  5957                           
  5958                           ;launcher_functions.c: 139: WDTCONbits.SWDTEN = 0;
  5959  0C09  1017               	bcf	23,0	;volatile
  5960  0C0A  0008               	return
  5961  0C0B                     __end_of_InitWatchdog:	
  5962                           
  5963                           	psect	text24
  5964  0C37                     __ptext24:	
  5965 ;; *************** function _InitUART *****************
  5966 ;; Defined at:
  5967 ;;		line 264 in file "launcher_functions.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, status,2
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5981 ;;      Params:         0       0       0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    2
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_main
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function _InitUART
  5997  0C37                     _InitUART:	
  5998                           
  5999                           ;launcher_functions.c: 267: TRISCbits.TRISC6 = 0;
  6000                           
  6001                           ;incstack = 0
  6002                           ; Regs used in _InitUART: [wreg+status,2]
  6003  0C37  0021               	movlb	1	; select bank1
  6004  0C38  130E               	bcf	14,6	;volatile
  6005                           
  6006                           ;launcher_functions.c: 268: TRISCbits.TRISC7 = 1;
  6007  0C39  178E               	bsf	14,7	;volatile
  6008                           
  6009                           ;launcher_functions.c: 269: TXSTAbits.BRGH = 0;
  6010  0C3A  0023               	movlb	3	; select bank3
  6011  0C3B  111E               	bcf	30,2	;volatile
  6012                           
  6013                           ;launcher_functions.c: 271: SPBRGH = 0;
  6014  0C3C  019C               	clrf	28	;volatile
  6015                           
  6016                           ;launcher_functions.c: 272: SPBRGL = 51;
  6017  0C3D  3033               	movlw	51
  6018  0C3E  009B               	movwf	27	;volatile
  6019                           
  6020                           ;launcher_functions.c: 273: TXSTAbits.TX9 = 0;
  6021  0C3F  131E               	bcf	30,6	;volatile
  6022                           
  6023                           ;launcher_functions.c: 274: TXSTAbits.SYNC = 0;
  6024  0C40  121E               	bcf	30,4	;volatile
  6025                           
  6026                           ;launcher_functions.c: 275: TXSTAbits.TXEN = 1;
  6027  0C41  169E               	bsf	30,5	;volatile
  6028                           
  6029                           ;launcher_functions.c: 277: RCSTAbits.SPEN = 1;
  6030  0C42  179D               	bsf	29,7	;volatile
  6031                           
  6032                           ;launcher_functions.c: 278: RCSTAbits.RX9 = 0;
  6033  0C43  131D               	bcf	29,6	;volatile
  6034                           
  6035                           ;launcher_functions.c: 279: RCSTAbits.CREN = 1;
  6036  0C44  161D               	bsf	29,4	;volatile
  6037  0C45  0008               	return
  6038  0C46                     __end_of_InitUART:	
  6039                           
  6040                           	psect	text25
  6041  0C28                     __ptext25:	
  6042 ;; *************** function _InitTimer1 *****************
  6043 ;; Defined at:
  6044 ;;		line 104 in file "launcher_functions.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;		None               void
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6058 ;;      Params:         0       0       0       0       0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0
  6061 ;;      Totals:         0       0       0       0       0       0       0
  6062 ;;Total ram usage:        0 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    2
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_main
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _InitTimer1
  6074  0C28                     _InitTimer1:	
  6075                           
  6076                           ;launcher_functions.c: 106: T1CONbits.TMR1CS = 0;
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  6080  0C28  303F               	movlw	-193
  6081  0C29  0020               	movlb	0	; select bank0
  6082  0C2A  0598               	andwf	24,f	;volatile
  6083                           
  6084                           ;launcher_functions.c: 107: T1CONbits.T1CKPS = 2;
  6085  0C2B  0818               	movf	24,w	;volatile
  6086  0C2C  39CF               	andlw	-49
  6087  0C2D  3820               	iorlw	32
  6088  0C2E  0098               	movwf	24	;volatile
  6089                           
  6090                           ;launcher_functions.c: 108: T1CONbits.nT1SYNC = 1;
  6091  0C2F  1518               	bsf	24,2	;volatile
  6092                           
  6093                           ;launcher_functions.c: 109: T1GCONbits.TMR1GE = 0;
  6094  0C30  1399               	bcf	25,7	;volatile
  6095                           
  6096                           ;launcher_functions.c: 110: TMR1H = 0xFF;
  6097  0C31  30FF               	movlw	255
  6098  0C32  0097               	movwf	23	;volatile
  6099                           
  6100                           ;launcher_functions.c: 111: TMR1L = 0x71;
  6101  0C33  3071               	movlw	113
  6102  0C34  0096               	movwf	22	;volatile
  6103                           
  6104                           ;launcher_functions.c: 112: T1CONbits.TMR1ON = 1;
  6105  0C35  1418               	bsf	24,0	;volatile
  6106  0C36  0008               	return
  6107  0C37                     __end_of_InitTimer1:	
  6108                           
  6109                           	psect	text26
  6110  0D5E                     __ptext26:	
  6111 ;; *************** function _InitGPIO *****************
  6112 ;; Defined at:
  6113 ;;		line 13 in file "launcher_functions.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;		None               void
  6120 ;; Registers used:
  6121 ;;		status,2
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6127 ;;      Params:         0       0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    2
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_main
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function _InitGPIO
  6143  0D5E                     _InitGPIO:	
  6144                           
  6145                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  6146                           
  6147                           ;incstack = 0
  6148                           ; Regs used in _InitGPIO: [status,2]
  6149  0D5E  0021               	movlb	1	; select bank1
  6150  0D5F  148C               	bsf	12,1	;volatile
  6151                           
  6152                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  6153  0D60  0023               	movlb	3	; select bank3
  6154  0D61  108C               	bcf	12,1	;volatile
  6155                           
  6156                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  6157  0D62  0027               	movlb	7	; select bank7
  6158  0D63  1491               	bsf	17,1	;volatile
  6159                           
  6160                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  6161  0D64  1492               	bsf	18,1	;volatile
  6162                           
  6163                           ;launcher_functions.c: 22: IOCAF = 0x00;
  6164  0D65  0193               	clrf	19	;volatile
  6165                           
  6166                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  6167  0D66  158B               	bsf	11,3	;volatile
  6168                           
  6169                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  6170  0D67  0021               	movlb	1	; select bank1
  6171  0D68  158D               	bsf	13,3	;volatile
  6172                           
  6173                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  6174  0D69  0023               	movlb	3	; select bank3
  6175  0D6A  118D               	bcf	13,3	;volatile
  6176                           
  6177                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  6178  0D6B  0027               	movlb	7	; select bank7
  6179  0D6C  1595               	bsf	21,3	;volatile
  6180                           
  6181                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  6182  0D6D  1594               	bsf	20,3	;volatile
  6183                           
  6184                           ;launcher_functions.c: 30: IOCBF = 0x00;
  6185  0D6E  0196               	clrf	22	;volatile
  6186                           
  6187                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  6188  0D6F  158B               	bsf	11,3	;volatile
  6189                           
  6190                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  6191  0D70  0021               	movlb	1	; select bank1
  6192  0D71  140C               	bsf	12,0	;volatile
  6193                           
  6194                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  6195  0D72  150C               	bsf	12,2	;volatile
  6196                           
  6197                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  6198  0D73  158C               	bsf	12,3	;volatile
  6199                           
  6200                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  6201  0D74  120C               	bcf	12,4	;volatile
  6202                           
  6203                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  6204  0D75  128C               	bcf	12,5	;volatile
  6205                           
  6206                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  6207  0D76  130C               	bcf	12,6	;volatile
  6208                           
  6209                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  6210  0D77  138C               	bcf	12,7	;volatile
  6211                           
  6212                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  6213  0D78  100D               	bcf	13,0	;volatile
  6214                           
  6215                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  6216  0D79  148D               	bsf	13,1	;volatile
  6217                           
  6218                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  6219  0D7A  110D               	bcf	13,2	;volatile
  6220                           
  6221                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  6222  0D7B  120D               	bcf	13,4	;volatile
  6223                           
  6224                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  6225  0D7C  128D               	bcf	13,5	;volatile
  6226                           
  6227                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  6228  0D7D  0020               	movlb	0	; select bank0
  6229  0D7E  100D               	bcf	13,0	;volatile
  6230                           
  6231                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  6232  0D7F  120D               	bcf	13,4	;volatile
  6233                           
  6234                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  6235  0D80  128D               	bcf	13,5	;volatile
  6236                           
  6237                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6238  0D81  0023               	movlb	3	; select bank3
  6239  0D82  100D               	bcf	13,0	;volatile
  6240                           
  6241                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6242  0D83  108D               	bcf	13,1	;volatile
  6243                           
  6244                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6245  0D84  110D               	bcf	13,2	;volatile
  6246                           
  6247                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6248  0D85  120D               	bcf	13,4	;volatile
  6249                           
  6250                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6251  0D86  128D               	bcf	13,5	;volatile
  6252                           
  6253                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6254  0D87  0021               	movlb	1	; select bank1
  6255  0D88  100E               	bcf	14,0	;volatile
  6256                           
  6257                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6258  0D89  108E               	bcf	14,1	;volatile
  6259  0D8A  0008               	return
  6260  0D8B                     __end_of_InitGPIO:	
  6261                           
  6262                           	psect	text27
  6263  07F8                     __ptext27:	
  6264 ;; *************** function _InitCLK *****************
  6265 ;; Defined at:
  6266 ;;		line 8 in file "launcher_functions.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;		None               void
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6280 ;;      Params:         0       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    2
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           
  6295                           ;psect for function _InitCLK
  6296  07F8                     _InitCLK:	
  6297                           
  6298                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6299                           
  6300                           ;incstack = 0
  6301                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6302  07F8  3078               	movlw	120
  6303  07F9  0021               	movlb	1	; select bank1
  6304  07FA  0499               	iorwf	25,f	;volatile
  6305                           
  6306                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6307  07FB  0819               	movf	25,w	;volatile
  6308  07FC  39FC               	andlw	-4
  6309  07FD  3802               	iorlw	2
  6310  07FE  0099               	movwf	25	;volatile
  6311  07FF  0008               	return
  6312  0800                     __end_of_InitCLK:	
  6313                           
  6314                           	psect	text28
  6315  0D0D                     __ptext28:	
  6316 ;; *************** function _InitADC *****************
  6317 ;; Defined at:
  6318 ;;		line 73 in file "launcher_functions.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;		None
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;		None               void
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6332 ;;      Params:         0       0       0       0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0
  6335 ;;      Totals:         0       0       0       0       0       0       0
  6336 ;;Total ram usage:        0 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    2
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           
  6347                           ;psect for function _InitADC
  6348  0D0D                     _InitADC:	
  6349                           
  6350                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6351                           
  6352                           ;incstack = 0
  6353                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6354  0D0D  0021               	movlb	1	; select bank1
  6355  0D0E  140C               	bsf	12,0	;volatile
  6356                           
  6357                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6358  0D0F  0023               	movlb	3	; select bank3
  6359  0D10  140C               	bsf	12,0	;volatile
  6360                           
  6361                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6362  0D11  0021               	movlb	1	; select bank1
  6363  0D12  081E               	movf	30,w	;volatile
  6364  0D13  398F               	andlw	-113
  6365  0D14  3850               	iorlw	80
  6366  0D15  009E               	movwf	30	;volatile
  6367                           
  6368                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6369  0D16  30FC               	movlw	-4
  6370  0D17  059E               	andwf	30,f	;volatile
  6371                           
  6372                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6373  0D18  111E               	bcf	30,2	;volatile
  6374                           
  6375                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6376  0D19  3083               	movlw	-125
  6377  0D1A  059D               	andwf	29,f	;volatile
  6378                           
  6379                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6380  0D1B  300F               	movlw	15
  6381  0D1C  049F               	iorwf	31,f	;volatile
  6382                           
  6383                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6384  0D1D  139E               	bcf	30,7	;volatile
  6385                           
  6386                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6387  0D1E  179D               	bsf	29,7	;volatile
  6388                           
  6389                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6390  0D1F  141D               	bsf	29,0	;volatile
  6391                           
  6392                           ;launcher_functions.c: 90: ADIF = 0;
  6393  0D20  0020               	movlb	0	; select bank0
  6394  0D21  1311               	bcf	17,6	;volatile
  6395                           
  6396                           ;launcher_functions.c: 91: ADIE = 1;
  6397  0D22  0021               	movlb	1	; select bank1
  6398  0D23  1711               	bsf	17,6	;volatile
  6399                           
  6400                           ;launcher_functions.c: 92: PEIE = 1;
  6401  0D24  170B               	bsf	11,6	;volatile
  6402  0D25  0008               	return
  6403  0D26                     __end_of_InitADC:	
  6404                           
  6405                           	psect	text29
  6406  0CF4                     __ptext29:	
  6407 ;; *************** function _Hibernate *****************
  6408 ;; Defined at:
  6409 ;;		line 549 in file "launcher_functions.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  count           1    1[BANK0 ] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;		None               void
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6423 ;;      Params:         0       0       0       0       0       0       0
  6424 ;;      Locals:         0       1       0       0       0       0       0
  6425 ;;      Temps:          0       1       0       0       0       0       0
  6426 ;;      Totals:         0       2       0       0       0       0       0
  6427 ;;Total ram usage:        2 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    2
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_main
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _Hibernate
  6439  0CF4                     _Hibernate:	
  6440                           
  6441                           ;launcher_functions.c: 551: unsigned char count = 0;
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6445  0CF4  0020               	movlb	0	; select bank0
  6446  0CF5  01A1               	clrf	Hibernate@count
  6447                           
  6448                           ;launcher_functions.c: 552: WDTCONbits.WDTPS = 14;
  6449  0CF6  0021               	movlb	1	; select bank1
  6450  0CF7  0817               	movf	23,w	;volatile
  6451  0CF8  39C1               	andlw	-63
  6452  0CF9  381C               	iorlw	28
  6453  0CFA  0097               	movwf	23	;volatile
  6454                           
  6455                           ;launcher_functions.c: 553: WDTCONbits.SWDTEN = 1;
  6456  0CFB  1417               	bsf	23,0	;volatile
  6457                           
  6458                           ;launcher_functions.c: 554: while(!recordFlag && count++ < 3)
  6459  0CFC  2D06               	goto	l2808
  6460  0CFD                     l2810:	
  6461  0CFD  3001               	movlw	1
  6462  0CFE  00A0               	movwf	??_Hibernate
  6463  0CFF  0820               	movf	??_Hibernate,w
  6464  0D00  07A1               	addwf	Hibernate@count,f
  6465  0D01  3004               	movlw	4
  6466  0D02  0221               	subwf	Hibernate@count,w
  6467  0D03  1803               	btfsc	3,0
  6468  0D04  2D0A               	goto	l431
  6469  0D05  0063               	sleep	;# 
  6470  0D06                     l2808:	
  6471  0D06  0020               	movlb	0	; select bank0
  6472  0D07  08EC               	movf	_recordFlag,f
  6473  0D08  1903               	btfsc	3,2
  6474  0D09  2CFD               	goto	l2810
  6475  0D0A                     l431:	
  6476                           
  6477                           ;launcher_functions.c: 557: }
  6478                           ;launcher_functions.c: 558: WDTCONbits.SWDTEN = 0;
  6479  0D0A  0021               	movlb	1	; select bank1
  6480  0D0B  1017               	bcf	23,0	;volatile
  6481  0D0C  0008               	return
  6482  0D0D                     __end_of_Hibernate:	
  6483                           
  6484                           	psect	text30
  6485  0C66                     __ptext30:	
  6486 ;; *************** function _GoToSleep *****************
  6487 ;; Defined at:
  6488 ;;		line 541 in file "launcher_functions.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  count           1    wreg     unsigned char 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  count           1    1[BANK0 ] unsigned char 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;		None               void
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6502 ;;      Params:         0       0       0       0       0       0       0
  6503 ;;      Locals:         0       1       0       0       0       0       0
  6504 ;;      Temps:          0       1       0       0       0       0       0
  6505 ;;      Totals:         0       2       0       0       0       0       0
  6506 ;;Total ram usage:        2 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    2
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function _GoToSleep
  6518  0C66                     _GoToSleep:	
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6522                           ;GoToSleep@count stored from wreg
  6523  0C66  0020               	movlb	0	; select bank0
  6524  0C67  00A1               	movwf	GoToSleep@count
  6525                           
  6526                           ;launcher_functions.c: 543: WDTCONbits.WDTPS = count;
  6527  0C68  0821               	movf	GoToSleep@count,w
  6528  0C69  00A0               	movwf	??_GoToSleep
  6529  0C6A  0DA0               	rlf	??_GoToSleep,f
  6530  0C6B  0021               	movlb	1	; select bank1
  6531  0C6C  0817               	movf	23,w	;volatile
  6532  0C6D  0020               	movlb	0	; select bank0
  6533  0C6E  0620               	xorwf	??_GoToSleep,w
  6534  0C6F  39C1               	andlw	-63
  6535  0C70  0620               	xorwf	??_GoToSleep,w
  6536  0C71  0021               	movlb	1	; select bank1
  6537  0C72  0097               	movwf	23	;volatile
  6538                           
  6539                           ;launcher_functions.c: 544: WDTCONbits.SWDTEN = 1;
  6540  0C73  1417               	bsf	23,0	;volatile
  6541  0C74  0063               	sleep	;# 
  6542                           
  6543                           ;launcher_functions.c: 546: WDTCONbits.SWDTEN = 0;
  6544  0C75  0021               	movlb	1	; select bank1
  6545  0C76  1017               	bcf	23,0	;volatile
  6546  0C77  0008               	return
  6547  0C78                     __end_of_GoToSleep:	
  6548                           
  6549                           	psect	intentry
  6550  0004                     __pintentry:	
  6551 ;; *************** function _isr *****************
  6552 ;; Defined at:
  6553 ;;		line 118 in file "launcher_main.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;		None               void
  6560 ;; Registers used:
  6561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6567 ;;      Params:         0       0       0       0       0       0       0
  6568 ;;      Locals:         2       0       0       0       0       0       0
  6569 ;;      Temps:          5       0       0       0       0       0       0
  6570 ;;      Totals:         7       0       0       0       0       0       0
  6571 ;;Total ram usage:        7 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    1
  6574 ;; This function calls:
  6575 ;;		_WriteBuffer
  6576 ;; This function is called by:
  6577 ;;		Interrupt level 1
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581  0004                     _isr:	
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6585  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6586  0005  3180               	pagesel	$
  6587  0006  0020               	movlb	0	; select bank0
  6588  0007  087F               	movf	127,w
  6589  0008  00F6               	movwf	??_isr+4
  6590                           
  6591                           ;launcher_main.c: 121: if (PIR1bits.RCIF)
  6592  0009  1E91               	btfss	17,5	;volatile
  6593  000A  2837               	goto	i1l2920
  6594                           
  6595                           ;launcher_main.c: 122: {
  6596                           ;launcher_main.c: 124: if(OERR)
  6597  000B  0023               	movlb	3	; select bank3
  6598  000C  1C9D               	btfss	29,1	;volatile
  6599  000D  2810               	goto	i1l2902
  6600                           
  6601                           ;launcher_main.c: 125: {
  6602                           ;launcher_main.c: 126: RCSTAbits.CREN = 0;
  6603  000E  121D               	bcf	29,4	;volatile
  6604                           
  6605                           ;launcher_main.c: 127: RCSTAbits.CREN = 1;
  6606  000F  161D               	bsf	29,4	;volatile
  6607  0010                     i1l2902:	
  6608                           
  6609                           ;launcher_main.c: 128: }
  6610                           ;launcher_main.c: 129: gpsMessage[gpsIndex++] = RCREG;
  6611  0010  0819               	movf	25,w	;volatile
  6612  0011  00F2               	movwf	??_isr
  6613  0012  087D               	movf	_gpsIndex,w
  6614  0013  3E20               	addlw	_gpsMessage& (0+255)
  6615  0014  0086               	movwf	6
  6616  0015  3001               	movlw	1	; select bank2/3
  6617  0016  0087               	movwf	7
  6618  0017  0872               	movf	??_isr,w
  6619  0018  0081               	movwf	1
  6620  0019  3001               	movlw	1
  6621  001A  00F2               	movwf	??_isr
  6622  001B  0872               	movf	??_isr,w
  6623  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6624                           
  6625                           ;launcher_main.c: 130: if(gpsIndex >= 50)
  6626  001D  3032               	movlw	50
  6627  001E  027D               	subwf	_gpsIndex,w	;volatile
  6628  001F  1C03               	skipc
  6629  0020  2826               	goto	i1l2912
  6630                           
  6631                           ;launcher_main.c: 131: {
  6632                           ;launcher_main.c: 132: messageDoneFlag = 1;
  6633  0021  0020               	movlb	0	; select bank0
  6634  0022  01EB               	clrf	_messageDoneFlag
  6635  0023  0AEB               	incf	_messageDoneFlag,f
  6636                           
  6637                           ;launcher_main.c: 133: gpsIndex = 0;
  6638  0024  01FD               	clrf	_gpsIndex	;volatile
  6639                           
  6640                           ;launcher_main.c: 134: }
  6641  0025  2836               	goto	i1l2918
  6642  0026                     i1l2912:	
  6643                           
  6644                           ;launcher_main.c: 135: else
  6645                           ;launcher_main.c: 136: {
  6646                           ;launcher_main.c: 137: if(gpsMessage[gpsIndex-1] == 0x0A)
  6647  0026  087D               	movf	_gpsIndex,w
  6648  0027  3EFF               	addlw	255
  6649  0028  3E20               	addlw	_gpsMessage& (0+255)
  6650  0029  0086               	movwf	6
  6651  002A  3001               	movlw	1	; select bank2/3
  6652  002B  0087               	movwf	7
  6653  002C  0801               	movf	1,w
  6654  002D  3A0A               	xorlw	10
  6655  002E  1D03               	skipz
  6656  002F  2834               	goto	i1l2916
  6657                           
  6658                           ;launcher_main.c: 138: {
  6659                           ;launcher_main.c: 139: messageDoneFlag = 1;
  6660  0030  0020               	movlb	0	; select bank0
  6661  0031  01EB               	clrf	_messageDoneFlag
  6662  0032  0AEB               	incf	_messageDoneFlag,f
  6663                           
  6664                           ;launcher_main.c: 140: }
  6665  0033  2836               	goto	i1l2918
  6666  0034                     i1l2916:	
  6667                           
  6668                           ;launcher_main.c: 141: else
  6669                           ;launcher_main.c: 142: {
  6670                           ;launcher_main.c: 143: messageDoneFlag = 0;
  6671  0034  0020               	movlb	0	; select bank0
  6672  0035  01EB               	clrf	_messageDoneFlag
  6673  0036                     i1l2918:	
  6674                           
  6675                           ;launcher_main.c: 144: }
  6676                           ;launcher_main.c: 145: }
  6677                           ;launcher_main.c: 146: PIR1bits.RCIF = 0;
  6678  0036  1291               	bcf	17,5	;volatile
  6679  0037                     i1l2920:	
  6680                           
  6681                           ;launcher_main.c: 147: }
  6682                           ;launcher_main.c: 150: if (TMR1IF && TMR1IE)
  6683  0037  1C11               	btfss	17,0	;volatile
  6684  0038  2848               	goto	i1l2930
  6685  0039  0021               	movlb	1	; select bank1
  6686  003A  1C11               	btfss	17,0	;volatile
  6687  003B  2848               	goto	i1l2930
  6688                           
  6689                           ;launcher_main.c: 151: {
  6690                           ;launcher_main.c: 152: TMR1H = 0xFF;
  6691  003C  30FF               	movlw	255
  6692  003D  0020               	movlb	0	; select bank0
  6693  003E  0097               	movwf	23	;volatile
  6694                           
  6695                           ;launcher_main.c: 153: TMR1L = 0x71;
  6696  003F  3071               	movlw	113
  6697  0040  0096               	movwf	22	;volatile
  6698                           
  6699                           ;launcher_main.c: 154: TMR1IF = 0;
  6700  0041  1011               	bcf	17,0	;volatile
  6701                           
  6702                           ;launcher_main.c: 156: if(recordFlag)
  6703  0042  086C               	movf	_recordFlag,w
  6704  0043  1903               	btfsc	3,2
  6705  0044  2848               	goto	i1l2930
  6706                           
  6707                           ;launcher_main.c: 157: {
  6708                           ;launcher_main.c: 158: ADCON0bits.ADGO = 1;
  6709  0045  0021               	movlb	1	; select bank1
  6710  0046  149D               	bsf	29,1	;volatile
  6711  0047  0020               	movlb	0	; select bank0
  6712  0048                     i1l2930:	
  6713                           
  6714                           ;launcher_main.c: 159: }
  6715                           ;launcher_main.c: 160: }
  6716                           ;launcher_main.c: 163: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6717  0048  0021               	movlb	1	; select bank1
  6718  0049  0E11               	swapf	17,w	;volatile
  6719  004A  0C89               	rrf	9,f
  6720  004B  0C89               	rrf	9,f
  6721  004C  3901               	andlw	1
  6722  004D  00F2               	movwf	??_isr
  6723  004E  0020               	movlb	0	; select bank0
  6724  004F  0E11               	swapf	17,w	;volatile
  6725  0050  0C89               	rrf	9,f
  6726  0051  0C89               	rrf	9,f
  6727  0052  3901               	andlw	1
  6728  0053  0572               	andwf	??_isr,w
  6729  0054  1903               	btfsc	3,2
  6730  0055  288A               	goto	i1l2946
  6731                           
  6732                           ;launcher_main.c: 164: {
  6733                           ;launcher_main.c: 165: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6734  0056  3033               	movlw	51
  6735  0057  0679               	xorwf	_end,w
  6736  0058  047A               	iorwf	_end+1,w
  6737  0059  1903               	skipnz
  6738  005A  2870               	goto	i1l2936
  6739  005B  0879               	movf	_end,w
  6740  005C  3E01               	addlw	1
  6741  005D  00F2               	movwf	??_isr
  6742  005E  3000               	movlw	0
  6743  005F  3D7A               	addwfc	_end+1,w
  6744  0060  00F3               	movwf	??_isr+1
  6745  0061  087C               	movf	_start+1,w
  6746  0062  0673               	xorwf	??_isr+1,w
  6747  0063  1D03               	skipz
  6748  0064  2867               	goto	u254_25
  6749  0065  087B               	movf	_start,w
  6750  0066  0672               	xorwf	??_isr,w
  6751  0067                     u254_25:	
  6752  0067  3000               	movlw	0
  6753  0068  1903               	skipnz
  6754  0069  3001               	movlw	1
  6755  006A  00F4               	movwf	??_isr+2
  6756  006B  01F5               	clrf	??_isr+3
  6757  006C  0874               	movf	??_isr+2,w
  6758  006D  00F7               	movwf	_isr$570
  6759  006E  0875               	movf	??_isr+3,w
  6760  006F  287A               	goto	L4
  6761  0070                     i1l2936:	
  6762  0070  087C               	movf	_start+1,w
  6763  0071  047B               	iorwf	_start,w
  6764  0072  3000               	movlw	0
  6765  0073  1903               	skipnz
  6766  0074  3001               	movlw	1
  6767  0075  00F2               	movwf	??_isr
  6768  0076  01F3               	clrf	??_isr+1
  6769  0077  0872               	movf	??_isr,w
  6770  0078  00F7               	movwf	_isr$570
  6771  0079  0873               	movf	??_isr+1,w
  6772  007A                     L4:	
  6773  007A  00F8               	movwf	_isr$570+1
  6774  007B  0878               	movf	_isr$570+1,w
  6775  007C  0477               	iorwf	_isr$570,w
  6776  007D  1D03               	skipz
  6777  007E  2888               	goto	i1l2944
  6778                           
  6779                           ;launcher_main.c: 166: {
  6780                           ;launcher_main.c: 167: if(recordFlag)
  6781  007F  086C               	movf	_recordFlag,w
  6782  0080  1903               	btfsc	3,2
  6783  0081  2888               	goto	i1l2944
  6784                           
  6785                           ;launcher_main.c: 168: WriteBuffer(ADRESH);
  6786  0082  0021               	movlb	1	; select bank1
  6787  0083  081C               	movf	28,w	;volatile
  6788  0084  318C  24C5  3180   	fcall	_WriteBuffer
  6789  0087  0020               	movlb	0	; select bank0
  6790  0088                     i1l2944:	
  6791                           
  6792                           ;launcher_main.c: 169: }
  6793                           ;launcher_main.c: 170: PIR1bits.ADIF = 0;
  6794  0088  0020               	movlb	0	; select bank0
  6795  0089  1311               	bcf	17,6	;volatile
  6796  008A                     i1l2946:	
  6797                           
  6798                           ;launcher_main.c: 171: }
  6799                           ;launcher_main.c: 174: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6800  008A  1D8B               	btfss	11,3	;volatile
  6801  008B  28B3               	goto	i1l2960
  6802  008C  0027               	movlb	7	; select bank7
  6803  008D  1D96               	btfss	22,3	;volatile
  6804  008E  28B3               	goto	i1l2960
  6805                           
  6806                           ;launcher_main.c: 175: {
  6807                           ;launcher_main.c: 176: IOCBFbits.IOCBF3 = 0;
  6808  008F  1196               	bcf	22,3	;volatile
  6809                           
  6810                           ;launcher_main.c: 177: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6811  0090  0020               	movlb	0	; select bank0
  6812  0091  0C0D               	rrf	13,w	;volatile
  6813  0092  00F2               	movwf	??_isr
  6814  0093  0CF2               	rrf	??_isr,f
  6815  0094  0C72               	rrf	??_isr,w
  6816  0095  3901               	andlw	1
  6817  0096  00F3               	movwf	??_isr+1
  6818  0097  0027               	movlb	7	; select bank7
  6819  0098  0C14               	rrf	20,w	;volatile
  6820  0099  00F4               	movwf	??_isr+2
  6821  009A  0CF4               	rrf	??_isr+2,f
  6822  009B  0C74               	rrf	??_isr+2,w
  6823  009C  3901               	andlw	1
  6824  009D  0573               	andwf	??_isr+1,w
  6825  009E  1903               	btfsc	3,2
  6826  009F  28A3               	goto	i1l2956
  6827                           
  6828                           ;launcher_main.c: 178: {
  6829                           ;launcher_main.c: 179: recordFlag = 1;
  6830  00A0  0020               	movlb	0	; select bank0
  6831  00A1  01EC               	clrf	_recordFlag
  6832  00A2  0AEC               	incf	_recordFlag,f
  6833  00A3                     i1l2956:	
  6834                           
  6835                           ;launcher_main.c: 180: }
  6836                           ;launcher_main.c: 181: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6837  00A3  0027               	movlb	7	; select bank7
  6838  00A4  0C15               	rrf	21,w	;volatile
  6839  00A5  00F2               	movwf	??_isr
  6840  00A6  0CF2               	rrf	??_isr,f
  6841  00A7  0C72               	rrf	??_isr,w
  6842  00A8  3901               	andlw	1
  6843  00A9  00F3               	movwf	??_isr+1
  6844  00AA  1003               	clrc
  6845  00AB  0020               	movlb	0	; select bank0
  6846  00AC  1D8D               	btfss	13,3	;volatile
  6847  00AD  1403               	setc
  6848  00AE  3000               	movlw	0
  6849  00AF  3D09               	addwfc	9,w
  6850  00B0  0573               	andwf	??_isr+1,w
  6851  00B1  1D03               	btfss	3,2
  6852                           
  6853                           ;launcher_main.c: 182: {
  6854                           ;launcher_main.c: 183: recordFlag = 0;
  6855  00B2  01EC               	clrf	_recordFlag
  6856  00B3                     i1l2960:	
  6857                           
  6858                           ;launcher_main.c: 184: }
  6859                           ;launcher_main.c: 185: }
  6860                           ;launcher_main.c: 188: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6861  00B3  1D8B               	btfss	11,3	;volatile
  6862  00B4  28D3               	goto	i1l2974
  6863  00B5  0027               	movlb	7	; select bank7
  6864  00B6  1C93               	btfss	19,1	;volatile
  6865  00B7  28D3               	goto	i1l2974
  6866                           
  6867                           ;launcher_main.c: 189: {
  6868                           ;launcher_main.c: 190: IOCAFbits.IOCAF1 = 0;
  6869  00B8  1093               	bcf	19,1	;volatile
  6870                           
  6871                           ;launcher_main.c: 191: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6872  00B9  0020               	movlb	0	; select bank0
  6873  00BA  0C0C               	rrf	12,w	;volatile
  6874  00BB  3901               	andlw	1
  6875  00BC  00F2               	movwf	??_isr
  6876  00BD  0027               	movlb	7	; select bank7
  6877  00BE  0C11               	rrf	17,w	;volatile
  6878  00BF  3901               	andlw	1
  6879  00C0  0572               	andwf	??_isr,w
  6880  00C1  1903               	btfsc	3,2
  6881  00C2  28C6               	goto	i1l2970
  6882                           
  6883                           ;launcher_main.c: 192: {
  6884                           ;launcher_main.c: 193: strobeFlag = 1;
  6885  00C3  0020               	movlb	0	; select bank0
  6886  00C4  01ED               	clrf	_strobeFlag
  6887  00C5  0AED               	incf	_strobeFlag,f
  6888  00C6                     i1l2970:	
  6889                           
  6890                           ;launcher_main.c: 194: }
  6891                           ;launcher_main.c: 195: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6892  00C6  0027               	movlb	7	; select bank7
  6893  00C7  0C12               	rrf	18,w	;volatile
  6894  00C8  3901               	andlw	1
  6895  00C9  00F2               	movwf	??_isr
  6896  00CA  1003               	clrc
  6897  00CB  0020               	movlb	0	; select bank0
  6898  00CC  1C8C               	btfss	12,1	;volatile
  6899  00CD  1403               	setc
  6900  00CE  3000               	movlw	0
  6901  00CF  3D09               	addwfc	9,w
  6902  00D0  0572               	andwf	??_isr,w
  6903  00D1  1D03               	btfss	3,2
  6904                           
  6905                           ;launcher_main.c: 196: {
  6906                           ;launcher_main.c: 197: strobeFlag = 0;
  6907  00D2  01ED               	clrf	_strobeFlag
  6908  00D3                     i1l2974:	
  6909                           
  6910                           ;launcher_main.c: 198: }
  6911                           ;launcher_main.c: 199: }
  6912                           ;launcher_main.c: 201: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  6913  00D3  1A8B               	btfsc	11,5	;volatile
  6914  00D4  1D0B               	btfss	11,2	;volatile
  6915  00D5  28DA               	goto	i1l150
  6916                           
  6917                           ;launcher_main.c: 202: {
  6918                           ;launcher_main.c: 203: eeprom_timeoutFlag = 1;
  6919  00D6  0020               	movlb	0	; select bank0
  6920  00D7  01E9               	clrf	_eeprom_timeoutFlag
  6921  00D8  0AE9               	incf	_eeprom_timeoutFlag,f
  6922                           
  6923                           ;launcher_main.c: 204: INTCONbits.TMR0IF = 0;
  6924  00D9  110B               	bcf	11,2	;volatile
  6925  00DA                     i1l150:	
  6926  00DA  0876               	movf	??_isr+4,w
  6927  00DB  0020               	movlb	0	; select bank0
  6928  00DC  00FF               	movwf	127
  6929  00DD  107E               	bcf	126,0	;clear compiler interrupt flag
  6930  00DE  0009               	retfie
  6931  00DF                     __end_of_isr:	
  6932                           
  6933                           	psect	text32
  6934  0CC5                     __ptext32:	
  6935 ;; *************** function _WriteBuffer *****************
  6936 ;; Defined at:
  6937 ;;		line 214 in file "launcher_functions.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  data            1    wreg     unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  data            1    1[COMMON] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;		None               void
  6944 ;; Registers used:
  6945 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6951 ;;      Params:         0       0       0       0       0       0       0
  6952 ;;      Locals:         1       0       0       0       0       0       0
  6953 ;;      Temps:          1       0       0       0       0       0       0
  6954 ;;      Totals:         2       0       0       0       0       0       0
  6955 ;;Total ram usage:        2 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_isr
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _WriteBuffer
  6966  0CC5                     _WriteBuffer:	
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6970                           ;WriteBuffer@data stored from wreg
  6971  0CC5  00F1               	movwf	WriteBuffer@data
  6972                           
  6973                           ;launcher_functions.c: 216: buffer[end] = data;
  6974  0CC6  0871               	movf	WriteBuffer@data,w
  6975  0CC7  00F0               	movwf	??_WriteBuffer
  6976  0CC8  0879               	movf	_end,w
  6977  0CC9  3EA0               	addlw	_buffer& (0+255)
  6978  0CCA  0086               	movwf	6
  6979  0CCB  3001               	movlw	1	; select bank3/4
  6980  0CCC  0087               	movwf	7
  6981  0CCD  0870               	movf	??_WriteBuffer,w
  6982  0CCE  0081               	movwf	1
  6983                           
  6984                           ;launcher_functions.c: 218: if (end == 51)
  6985  0CCF  3033               	movlw	51
  6986  0CD0  0679               	xorwf	_end,w
  6987  0CD1  047A               	iorwf	_end+1,w
  6988  0CD2  1D03               	skipz
  6989  0CD3  2CD7               	goto	i1l2818
  6990                           
  6991                           ;launcher_functions.c: 219: end = 0;
  6992  0CD4  01F9               	clrf	_end
  6993  0CD5  01FA               	clrf	_end+1
  6994  0CD6  0008               	return
  6995  0CD7                     i1l2818:	
  6996                           
  6997                           ;launcher_functions.c: 220: else
  6998                           ;launcher_functions.c: 221: end++;
  6999  0CD7  3001               	movlw	1
  7000  0CD8  07F9               	addwf	_end,f
  7001  0CD9  3000               	movlw	0
  7002  0CDA  3DFA               	addwfc	_end+1,f
  7003  0CDB  0008               	return
  7004  0CDC                     __end_of_WriteBuffer:	
  7005  007E                     btemp	set	126	;btemp
  7006  007E                     pic14e$flags	set	126
  7007  007E                     wtemp	set	126
  7008  007E                     wtemp0	set	126
  7009  0080                     wtemp1	set	128
  7010  0082                     wtemp2	set	130
  7011  0084                     wtemp3	set	132
  7012  0086                     wtemp4	set	134
  7013  0088                     wtemp5	set	136
  7014  007F                     wtemp6	set	127
  7015  007E                     ttemp	set	126
  7016  007E                     ttemp0	set	126
  7017  0081                     ttemp1	set	129
  7018  0084                     ttemp2	set	132
  7019  0087                     ttemp3	set	135
  7020  007F                     ttemp4	set	127
  7021  007E                     ltemp	set	126
  7022  007E                     ltemp0	set	126
  7023  0082                     ltemp1	set	130
  7024  0086                     ltemp2	set	134
  7025  0080                     ltemp3	set	128


Data Sizes:
    Strings     65
    Constant    10
    Data        61
    BSS         193
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     67      78
    BANK1            80     62      79
    BANK2            80      0      76
    BANK3            80      0      73
    BANK4            80      0      72
    BANK5            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_2(CODE[39]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1491$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___awdiv
    ___awdiv->___wmul
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RecordMode->_SendGPSSPI
    _SendGPSSPI->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _CheckDisconnect->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8694
                                             59 BANK0      8     4      4
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                         _InitTimer1
                           _InitUART
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    3917
                                             36 BANK0     23    23      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    2784
                                             15 BANK0     21    21      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            65    65      0    2705
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1357
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1980
                                             28 BANK0     11    11      0
                    _CheckDisconnect
                            _InitSPI
                         _ReadBuffer
                         _SendGPSSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                            _InitSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CheckDisconnect                                      2     2      0      92
                                              7 BANK0      2     2      0
                      _ReadStatusSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitTimer1
   _InitUART
   _InitWatchdog
   _RecordMode
     _CheckDisconnect
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
     _InitSPI
     _ReadBuffer
     _SendGPSSPI
       _InitSPI
       _WriteOverheadSPI
         _ReadStatusSPI
           _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     188       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4C      10       95.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      49      12       91.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      48      14       90.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     188      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Nov 05 11:15:27 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 003C                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l113 068F                               l312 0C1E  
                             l306 0CAB                               l323 0EF4                               l334 0CF2  
                             l431 0D0A                               l353 0C14                               l601 0D49  
                             l417 0356                               l450 049D                               l370 0FFC  
                             l456 0F24                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0032                               wreg 0009  
              DecodeGPS@longitude 003F                   DisableGPS@F4921 0152                              l2100 0D43  
                            l2112 0C8D                              l2210 0DD7                              l2204 0DBF  
                            l2300 05AE                              l2140 0E76                              l2116 0C93  
                            l2062 0EE1                              l2206 0DCB                              l2214 0DE0  
                            l2150 0E7E                              l2134 0E6B                              l2224 0CEE  
                            l2312 05D3                              l2304 05B4                              l2152 0E8A  
                            l2330 0626                              l2090 0E5D                              l2162 0EA5  
                            l2180 0DF0                              l2182 0DFC                              l2326 05E6  
                            l2318 05E2                              l2270 054F                              l2086 0E58  
                            l2246 0FBD                              l2238 0FAF                              l2166 0EAD  
                            l2158 0E9C                              l2350 0183                              l2512 0F83  
                            l2192 0E17                              l2328 052B                              l2088 0E23  
                            l2256 0FC7                              l2352 0192                              l2506 0F6A  
                            l2290 0598                              l2258 0FEA                              l2346 0172  
                            l2188 0E0E                              l2284 0562                              l2268 054D  
                            l2460 0390                              l2436 0331                              l2428 0315  
                            l2710 042C                              l2454 0368                              l2446 0358  
                            l2438 0337                              l2288 057E                              l2392 0257  
                            l2384 023B                              l2810 0CFD                              l2474 0C53  
                            l2730 0463                              l2722 0448                              l2650 074B  
                            l2492 0F3E                              l2732 046D                              l2660 078F  
                            l2750 04D7                              l2718 03F9                              l2808 0D06  
                            l2760 0510                              l2840 0649                              l2498 0F57  
                            l2738 0480                              l2852 067B                              l2686 03BF  
                            l2890 0711                              l2866 0697                              l2788 07E6  
                            l2884 0707                              l2894 071A                              l2878 06D5  
                            _ADIE 048E                              _ADIF 008E                              ?_isr 0070  
          __size_of_ReadStatusSPI 0011                              STR_1 0831                              STR_2 080A  
                            STR_3 0844                              u2005 0190                              u2125 0F3C  
                            u2205 041A                              u2135 0F55                              u2215 0432  
                            u2160 072F                              u2320 07BE                              u2145 0F68  
                            u2305 04F7                              u2233 040F                              u1505 0E2D  
                            u1435 0EBF                              u2155 0F81                              u1445 0ED3  
                            u2245 0451                              u2085 0366                              u2255 0469  
                            u2175 0749                              u1615 0E81                              u1535 0D4A  
                            u2095 038E                              u2273 049B                              u2265 0486  
                            u2185 078D                              u1545 0D4F                              u2283 04CB  
                            u1715 0DFD                              u1635 0E8B                              u1725 0E07  
                            u1645 0E95                              u2295 04E2                              u1735 0E0F  
                            u1655 0E9D                              u1825 0F9D                              u1765 0DC2  
                            u1925 05C9                              u1695 0DF3                              u1855 0FD7  
                            u1785 0DD1                              u2817 0668                              u1970 0149  
                            u2907 03CA                              u1795 0DD8                              u2827 0687  
                            _PEIE 005E                              u2917 04A7                              u2837 06BA  
                            u2847 06F1                              u2857 0D93                              u1985 0170  
                            u2867 0DA2                              _RCIE 048D                              u2877 0DB0  
                            u2887 0752                              u2897 0796                              _OERR 0CE9  
                            _main 062B                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              ltemp 007E  
                            start 00DF                              ttemp 007E                              wtemp 007E  
               ___bmul@multiplier 0023                     __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020  
                 __end_of_InitADC 0D26                   __end_of_InitCLK 0800                   __end_of_InitSPI 0C8A  
                 __end_of_ReadSPI 0C28                ??_compute_checksum 0022                             ??_isr 0072  
                   ?_InitWatchdog 0070             ReadStatusSPI@dataRead 0026                             ?_main 005B  
                 __end_of___awdiv 0EB4                   ___awdiv@divisor 0026                             _LATC2 0872  
                           _IOCAF 0393                             _IOCBF 0396                   __end_of___lwdiv 0E1E  
                           i1l150 00DA                   __end_of___lwmod 0DE7                   ___awdiv@counter 002B  
                           _RCREG 0199                             _TMR1H 0017                             _TMR1L 0016  
                           _TXREG 019A                 RecordMode@address 0043                   __end_of_dpowers 080A  
             DecodeGPS@northSouth 0039                             _start 007B                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                   __end_of_sprintf 062B  
          uart_write_message@data 0034            uart_write_message@size 0028                        _ReadBuffer 0CDC  
                 __initialization 00E1                        _InitTimer1 0C28                 ?_WriteOverheadSPI 0027  
                    __end_of_main 0724                __size_of_DecodeGPS 025E                  __end_of_InitGPIO 0D8B  
                __end_of_InitUART 0C46                    ??_InitWatchdog 0020                     _ReadStatusSPI 0C55  
              ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0035                            ??_main 005F  
              __size_of_GoToSleep 0012                        _SendGPSSPI 0F14                   ReadSPI@dataByte 0021  
                  __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 07B3     WriteOverheadSPI@address_bytes 0031  
              __size_of_Hibernate 0019                        _RecordMode 039C                            _ADRESH 009C  
                ___awdiv@dividend 0028                   _CheckDisconnect 0C46                  __end_of_WriteSPI 0CAF  
                          i1l2902 0010                            i1l2912 0026                            i1l2920 0037  
                          i1l2818 0CD7                            i1l2930 0048                            i1l2916 0034  
                          i1l2918 0036                            i1l2960 00B3                            i1l2944 0088  
                          i1l2936 0070                            i1l2970 00C6                            i1l2946 008A  
                          i1l2956 00A3                            i1l2974 00D3                            u254_25 0067  
                          _TMR1IE 0488                            _TMR1IF 0088                            _SPBRGH 019C  
                          _TMR1ON 00C0                            _SPBRGL 019B                            _SSPBUF 0211  
                       ??_InitADC 0020                         ??_InitCLK 0020                         ??_InitSPI 0020  
                       ??_ReadSPI 0020                       SendGPSSPI@x 003A                            ___bmul 0C8A  
                  ?_ReadStatusSPI 0070                            ___wmul 0D40                         ??___awdiv 002A  
                       ??___lwdiv 0024                         ??___lwmod 002C                            _buffer 01A0  
                ___awdiv@quotient 002D       __size_of_uart_write_message 0076                __size_of_UpdateGPS 0045  
             main@periodicCounter 0062                 __end_of_DecodeGPS 039C                         ??_sprintf 0034  
                  _gpsInvalidFlag 0066           __end_of__initialization 013A                 __end_of_GoToSleep 0C78  
             ___bmul@multiplicand 0020                       ?_ReadBuffer 0070                 __end_of_Hibernate 0D0D  
                     ?_InitTimer1 0070                    __pcstackCOMMON 0070                      __pidataBANK0 0BFE  
                    __pidataBANK1 0C0B                      __pidataBANK2 0D26                      __pidataBANK3 0CAF  
                    WriteSPI@temp 0022                       ?_SendGPSSPI 0070           __end_of_CheckDisconnect 0C55  
                  _OPTION_REGbits 0095                       ?_RecordMode 0070              __end_of_InitWatchdog 0C0B  
                      __pbssBANK0 0069                        __pbssBANK1 00DE                        __pbssBANK2 0120  
                      __pbssBANK3 01A0                        __pbssBANK4 0220                         ?_InitGPIO 0070  
                       ?_InitUART 0070                   SetupGPS@message 00A0                   ??_ReadStatusSPI 0025  
               __end_of_UpdateGPS 07F8                        __pmaintext 062B                         ?_SetupGPS 0070  
                         ?___bmul 0020                           ?___wmul 0020                     ??_WriteBuffer 0070  
                      __pintentry 0004                    _validLongitude 00EC         UpdateGPS@GPSupdateMessage 0045  
                       ?_WriteSPI 0070                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                      ??_InitUART 0020                           _InitADC 0D0D                           _InitCLK 07F8  
                         _InitSPI 0C78                        _gpsMessage 0120           __size_of_ToggleSleepGPS 002D  
                         _ReadSPI 0C1C                       SetupGPS@MID 00D8               __size_of_SendGPSSPI 0076  
                      ??_SetupGPS 0041               __size_of_RecordMode 0189                   __size_of___bmul 0012  
                         ___awdiv 0E60                   __size_of___wmul 001E                           ___lwdiv 0DE7  
                         ___lwmod 0DB8                           _isr$570 0077                        ??_WriteSPI 0020  
                         __ptext1 07B3                           __ptext2 013E                           __ptext3 0D40  
                         __ptext4 0C8A                           __ptext5 0E60                           __ptext6 0D8B  
                         __ptext7 0724                           __ptext8 0F8A                           __ptext9 0C12  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0CDC  
                    __size_of_isr 00DB                  ?_CheckDisconnect 0070                         _IOCAFbits 0393  
                       _IOCBFbits 0396                         _IOCANbits 0392         __size_of_WriteOverheadSPI 0060  
                       _IOCBNbits 0395                         _IOCAPbits 0391                         _IOCBPbits 0394  
                      _recordFlag 006C                           _sprintf 0525                           clrloop0 0BF9  
            end_of_initialization 013A                           init_ram 0BF2                           initloop 0BF3  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0C1C                         _RCSTAbits 019D  
                WriteSPI@databyte 0024                      __pstringtext 0800                         _PORTAbits 000C  
                       _PORTBbits 000D                         _PORTCbits 000E                    Hibernate@count 0021  
                __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E           WriteOverheadSPI@address 0027  
               SendGPSSPI@address 0036                   DecodeGPS@status 003B              uart_xmit@mydata_byte 0020  
           _preRecordingAddresses 0220                         _DecodeGPS 013E                         _TXSTAbits 019E  
                    ??_ReadBuffer 0020                        _strobeFlag 006D                      ??_InitTimer1 0020  
                       _GoToSleep 0C66                    __end_of___bmul 0C9C                       _WriteBuffer 0CC5  
                  __end_of___wmul 0D5E        __end_of_uart_write_message 1000                         _Hibernate 0CF4  
                    _InitWatchdog 0C04                      ??_SendGPSSPI 0035                     SetupGPS@F4924 0166  
                   SetupGPS@F4926 00E8               start_initialization 00E1                  _compute_checksum 0E1E  
       WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 003C                       __end_of_isr 00DF  
           CheckDisconnect@status 0028                __end_of_ReadBuffer 0CF4                 compute_checksum@x 0026  
              __end_of_InitTimer1 0C37                        ?_DecodeGPS 0070                    _ToggleSleepGPS 0D8B  
               __size_of_InitGPIO 002D                 __size_of_InitUART 000F                __end_of_SendGPSSPI 0F8A  
                       SetupGPS@x 00DC              compute_checksum@data 0025                        ?_GoToSleep 0070  
                        ??___bmul 0021              compute_checksum@size 0020                          ??___wmul 0024  
              __end_of_RecordMode 0525                       __pdataBANK0 0063                       __pdataBANK1 00E8  
                     __pdataBANK2 0152                       __pdataBANK3 01D3                 __size_of_SetupGPS 008F  
                       _UpdateGPS 07B3                        ?_Hibernate 0070          compute_checksum@checksum 0024  
               __size_of_WriteSPI 0013                       __pbssCOMMON 0079                         ___latbits 0001  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                  _WriteOverheadSPI 0EB4  
             __end_of__stringdata 084B               uart_write_message@x 0031                     _validEastWest 0067  
          __end_of_ToggleSleepGPS 0DB8                   _messageDoneFlag 006B                       sprintf@_val 003C  
                     sprintf@flag 0038                       sprintf@prec 0039                          ?_InitADC 0070  
                        ?_InitCLK 0070                          ?_InitSPI 0070                          ?_ReadSPI 0070  
                   _validLatitude 0063                  ___lwdiv@dividend 0022             __end_of_ReadStatusSPI 0C66  
                        ?___awdiv 0026                          ?___lwdiv 0020                          ?___lwmod 0028  
                      ?_UpdateGPS 0070                    UpdateGPS@F4931 01D3                  __CFG_WDTE$SWDTEN 0000  
                ___lwdiv@quotient 0025                          ?_sprintf 002E        uart_write_message@checksum 0033  
                 ?_ToggleSleepGPS 0070                   _validNorthSouth 0068                       ??_DecodeGPS 002F  
                  ___wmul@product 0024                          _LATBbits 010D                         clear_ram0 0BF8  
                        _PIE1bits 0091                    DecodeGPS@F4933 015F                    DecodeGPS@F4935 00E2  
                  DecodeGPS@F4937 00E5                          _PIR1bits 0011                       ??_GoToSleep 0020  
                       _uart_xmit 0C12                       ??_Hibernate 0020                        _ADCON0bits 009D  
                      _ADCON1bits 009E                       __stringdata 080A                        _ADCON2bits 009F  
               ___wmul@multiplier 0020                   RecordMode@count 0041                          _InitGPIO 0D5E  
                        _InitUART 0C37          __size_of_CheckDisconnect 000F                  __size_of_InitADC 0019  
                __size_of_InitCLK 0008                  __size_of_InitSPI 0012                  __size_of_ReadSPI 000C  
        __end_of_compute_checksum 0E60             SetupGPS@startSequence 00D2                          _SetupGPS 0724  
                      ?_uart_xmit 0070                      ?_WriteBuffer 0070                  __size_of___awdiv 0054  
                     ??_UpdateGPS 0044                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
                        _WriteSPI 0C9C           _uart_write_message$1424 002D           _uart_write_message$1425 002F  
                      _ANSELAbits 018C                        _ANSELBbits 018D               ReadBuffer@read_data 0021  
                 ___lwdiv@divisor 0020                   _hasValidGPSFlag 006A                   ___lwdiv@counter 0027  
                        __ptext10 0E1E                          __ptext11 0525                          __ptext20 0C55  
                        __ptext12 0DB8                          __ptext21 0C9C                          __ptext13 0DE7  
                      _T1GCONbits 0019                          __ptext30 0C66                          __ptext22 0C1C  
                        __ptext14 039C                          __ptext23 0C04                          __ptext15 0F14  
                        __ptext32 0CC5                          __ptext24 0C37                          __ptext16 0EB4  
                        __ptext25 0C28                          __ptext17 0C78                          __ptext26 0D5E  
                        __ptext18 0CDC                          __ptext27 07F8                          __ptext19 0C46  
                        __ptext28 0D0D                          __ptext29 0CF4                _uart_write_message 0F8A  
                __size_of_sprintf 0106                          _gpsIndex 007D                     __size_of_main 00F9  
             ?_uart_write_message 0028                        DecodeGPS@x 0042          __end_of_WriteOverheadSPI 0F14  
              _eeprom_timeoutFlag 0069                    GoToSleep@count 0021                          main@argc 005B  
                        main@argv 005D              ??_uart_write_message 002A                        _INTCONbits 000B  
                     pic14e$flags 007E                          intlevel1 0000                         sprintf@ap 003A  
                       sprintf@sp 003B                  ___lwmod@dividend 002A                 __CFG_CLKOUTEN$OFF 0000  
                      _OSCCONbits 0099                 ??_CheckDisconnect 0027                       ??_uart_xmit 0020  
                        sprintf@c 0040                          sprintf@f 002E                   ___lwmod@divisor 0028  
                 ___lwmod@counter 002D                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                   _recordEndAdress 00DE                 DecodeGPS@eastWest 003A  
