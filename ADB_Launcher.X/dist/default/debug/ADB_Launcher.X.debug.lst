

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Nov 06 16:40:33 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  028C                     	;# 
   179  028D                     	;# 
   180  028E                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  030C                     	;# 
   190  030D                     	;# 
   191  030E                     	;# 
   192  038C                     	;# 
   193  038D                     	;# 
   194  038E                     	;# 
   195  0390                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  0397                     	;# 
   203  0398                     	;# 
   204  0399                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0511                     	;# 
   209  0513                     	;# 
   210  051A                     	;# 
   211  0811                     	;# 
   212  0812                     	;# 
   213  0813                     	;# 
   214  0814                     	;# 
   215  0815                     	;# 
   216  0816                     	;# 
   217  0817                     	;# 
   218  0818                     	;# 
   219  0819                     	;# 
   220  081A                     	;# 
   221  081B                     	;# 
   222  081C                     	;# 
   223  081D                     	;# 
   224  081E                     	;# 
   225  081F                     	;# 
   226  0820                     	;# 
   227  0821                     	;# 
   228  0821                     	;# 
   229  0822                     	;# 
   230  0823                     	;# 
   231  0823                     	;# 
   232  0824                     	;# 
   233  0825                     	;# 
   234  0825                     	;# 
   235  0826                     	;# 
   236  0827                     	;# 
   237  0827                     	;# 
   238  0828                     	;# 
   239  0829                     	;# 
   240  082A                     	;# 
   241  082B                     	;# 
   242  082C                     	;# 
   243  082D                     	;# 
   244  082E                     	;# 
   245  082F                     	;# 
   246  0831                     	;# 
   247  0832                     	;# 
   248  0833                     	;# 
   249  0834                     	;# 
   250  0835                     	;# 
   251  0836                     	;# 
   252  0837                     	;# 
   253  0838                     	;# 
   254  0839                     	;# 
   255  083A                     	;# 
   256  083B                     	;# 
   257  083C                     	;# 
   258  083D                     	;# 
   259  083E                     	;# 
   260  083F                     	;# 
   261  0840                     	;# 
   262  0841                     	;# 
   263  0841                     	;# 
   264  0842                     	;# 
   265  0843                     	;# 
   266  0843                     	;# 
   267  0844                     	;# 
   268  0845                     	;# 
   269  0845                     	;# 
   270  0846                     	;# 
   271  0847                     	;# 
   272  0847                     	;# 
   273  0848                     	;# 
   274  0849                     	;# 
   275  084A                     	;# 
   276  084B                     	;# 
   277  084C                     	;# 
   278  084D                     	;# 
   279  084E                     	;# 
   280  084F                     	;# 
   281  0FE4                     	;# 
   282  0FE5                     	;# 
   283  0FE6                     	;# 
   284  0FE7                     	;# 
   285  0FE8                     	;# 
   286  0FE9                     	;# 
   287  0FEA                     	;# 
   288  0FEB                     	;# 
   289  0FED                     	;# 
   290  0FEE                     	;# 
   291  0FEF                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  0090                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0094                     	;# 
   327  0095                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  0111                     	;# 
   343  0112                     	;# 
   344  0113                     	;# 
   345  0114                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0117                     	;# 
   349  0118                     	;# 
   350  0119                     	;# 
   351  011D                     	;# 
   352  011D                     	;# 
   353  011E                     	;# 
   354  011F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  0199                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019A                     	;# 
   371  019A                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019C                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019D                     	;# 
   381  019D                     	;# 
   382  019D                     	;# 
   383  019E                     	;# 
   384  019E                     	;# 
   385  019E                     	;# 
   386  019F                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  019F                     	;# 
   391  020C                     	;# 
   392  020D                     	;# 
   393  020E                     	;# 
   394  0210                     	;# 
   395  0211                     	;# 
   396  0211                     	;# 
   397  0212                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0213                     	;# 
   401  0214                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0215                     	;# 
   406  0216                     	;# 
   407  0216                     	;# 
   408  0217                     	;# 
   409  0217                     	;# 
   410  028C                     	;# 
   411  028D                     	;# 
   412  028E                     	;# 
   413  0291                     	;# 
   414  0291                     	;# 
   415  0292                     	;# 
   416  0293                     	;# 
   417  0298                     	;# 
   418  0298                     	;# 
   419  0299                     	;# 
   420  029A                     	;# 
   421  030C                     	;# 
   422  030D                     	;# 
   423  030E                     	;# 
   424  038C                     	;# 
   425  038D                     	;# 
   426  038E                     	;# 
   427  0390                     	;# 
   428  0391                     	;# 
   429  0392                     	;# 
   430  0393                     	;# 
   431  0394                     	;# 
   432  0395                     	;# 
   433  0396                     	;# 
   434  0397                     	;# 
   435  0398                     	;# 
   436  0399                     	;# 
   437  039D                     	;# 
   438  039E                     	;# 
   439  039F                     	;# 
   440  0511                     	;# 
   441  0513                     	;# 
   442  051A                     	;# 
   443  0811                     	;# 
   444  0812                     	;# 
   445  0813                     	;# 
   446  0814                     	;# 
   447  0815                     	;# 
   448  0816                     	;# 
   449  0817                     	;# 
   450  0818                     	;# 
   451  0819                     	;# 
   452  081A                     	;# 
   453  081B                     	;# 
   454  081C                     	;# 
   455  081D                     	;# 
   456  081E                     	;# 
   457  081F                     	;# 
   458  0820                     	;# 
   459  0821                     	;# 
   460  0821                     	;# 
   461  0822                     	;# 
   462  0823                     	;# 
   463  0823                     	;# 
   464  0824                     	;# 
   465  0825                     	;# 
   466  0825                     	;# 
   467  0826                     	;# 
   468  0827                     	;# 
   469  0827                     	;# 
   470  0828                     	;# 
   471  0829                     	;# 
   472  082A                     	;# 
   473  082B                     	;# 
   474  082C                     	;# 
   475  082D                     	;# 
   476  082E                     	;# 
   477  082F                     	;# 
   478  0831                     	;# 
   479  0832                     	;# 
   480  0833                     	;# 
   481  0834                     	;# 
   482  0835                     	;# 
   483  0836                     	;# 
   484  0837                     	;# 
   485  0838                     	;# 
   486  0839                     	;# 
   487  083A                     	;# 
   488  083B                     	;# 
   489  083C                     	;# 
   490  083D                     	;# 
   491  083E                     	;# 
   492  083F                     	;# 
   493  0840                     	;# 
   494  0841                     	;# 
   495  0841                     	;# 
   496  0842                     	;# 
   497  0843                     	;# 
   498  0843                     	;# 
   499  0844                     	;# 
   500  0845                     	;# 
   501  0845                     	;# 
   502  0846                     	;# 
   503  0847                     	;# 
   504  0847                     	;# 
   505  0848                     	;# 
   506  0849                     	;# 
   507  084A                     	;# 
   508  084B                     	;# 
   509  084C                     	;# 
   510  084D                     	;# 
   511  084E                     	;# 
   512  084F                     	;# 
   513  0FE4                     	;# 
   514  0FE5                     	;# 
   515  0FE6                     	;# 
   516  0FE7                     	;# 
   517  0FE8                     	;# 
   518  0FE9                     	;# 
   519  0FEA                     	;# 
   520  0FEB                     	;# 
   521  0FED                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  0010                     	;# 
   540  0011                     	;# 
   541  0012                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0016                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  008C                     	;# 
   553  008D                     	;# 
   554  008E                     	;# 
   555  0090                     	;# 
   556  0091                     	;# 
   557  0092                     	;# 
   558  0094                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0111                     	;# 
   575  0112                     	;# 
   576  0113                     	;# 
   577  0114                     	;# 
   578  0115                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  0118                     	;# 
   582  0119                     	;# 
   583  011D                     	;# 
   584  011D                     	;# 
   585  011E                     	;# 
   586  011F                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019A                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  020E                     	;# 
   626  0210                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  028C                     	;# 
   643  028D                     	;# 
   644  028E                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  030C                     	;# 
   654  030D                     	;# 
   655  030E                     	;# 
   656  038C                     	;# 
   657  038D                     	;# 
   658  038E                     	;# 
   659  0390                     	;# 
   660  0391                     	;# 
   661  0392                     	;# 
   662  0393                     	;# 
   663  0394                     	;# 
   664  0395                     	;# 
   665  0396                     	;# 
   666  0397                     	;# 
   667  0398                     	;# 
   668  0399                     	;# 
   669  039D                     	;# 
   670  039E                     	;# 
   671  039F                     	;# 
   672  0511                     	;# 
   673  0513                     	;# 
   674  051A                     	;# 
   675  0811                     	;# 
   676  0812                     	;# 
   677  0813                     	;# 
   678  0814                     	;# 
   679  0815                     	;# 
   680  0816                     	;# 
   681  0817                     	;# 
   682  0818                     	;# 
   683  0819                     	;# 
   684  081A                     	;# 
   685  081B                     	;# 
   686  081C                     	;# 
   687  081D                     	;# 
   688  081E                     	;# 
   689  081F                     	;# 
   690  0820                     	;# 
   691  0821                     	;# 
   692  0821                     	;# 
   693  0822                     	;# 
   694  0823                     	;# 
   695  0823                     	;# 
   696  0824                     	;# 
   697  0825                     	;# 
   698  0825                     	;# 
   699  0826                     	;# 
   700  0827                     	;# 
   701  0827                     	;# 
   702  0828                     	;# 
   703  0829                     	;# 
   704  082A                     	;# 
   705  082B                     	;# 
   706  082C                     	;# 
   707  082D                     	;# 
   708  082E                     	;# 
   709  082F                     	;# 
   710  0831                     	;# 
   711  0832                     	;# 
   712  0833                     	;# 
   713  0834                     	;# 
   714  0835                     	;# 
   715  0836                     	;# 
   716  0837                     	;# 
   717  0838                     	;# 
   718  0839                     	;# 
   719  083A                     	;# 
   720  083B                     	;# 
   721  083C                     	;# 
   722  083D                     	;# 
   723  083E                     	;# 
   724  083F                     	;# 
   725  0840                     	;# 
   726  0841                     	;# 
   727  0841                     	;# 
   728  0842                     	;# 
   729  0843                     	;# 
   730  0843                     	;# 
   731  0844                     	;# 
   732  0845                     	;# 
   733  0845                     	;# 
   734  0846                     	;# 
   735  0847                     	;# 
   736  0847                     	;# 
   737  0848                     	;# 
   738  0849                     	;# 
   739  084A                     	;# 
   740  084B                     	;# 
   741  084C                     	;# 
   742  084D                     	;# 
   743  084E                     	;# 
   744  084F                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756                           
   757                           	psect	idataBANK0
   758  0C02                     __pidataBANK0:	
   759                           
   760                           ;initializer for _validLatitude
   761  0C02  3428               	retlw	40
   762  0C03  3419               	retlw	25
   763  0C04  3414               	retlw	20
   764                           
   765                           ;initializer for _gpsInvalidFlag
   766  0C05  3401               	retlw	1
   767                           
   768                           ;initializer for _validEastWest
   769  0C06  3445               	retlw	69
   770                           
   771                           ;initializer for _validNorthSouth
   772  0C07  344E               	retlw	78
   773                           
   774                           	psect	idataBANK1
   775  0C0F                     __pidataBANK1:	
   776                           
   777                           ;initializer for SetupGPS@F4926
   778  0C0F  3431               	retlw	49
   779  0C10  3430               	retlw	48
   780  0C11  3433               	retlw	51
   781  0C12  3400               	retlw	0
   782                           
   783                           ;initializer for _validLongitude
   784  0C13  3456               	retlw	86
   785  0C14  3444               	retlw	68
   786  0C15  3414               	retlw	20
   787                           
   788                           	psect	idataBANK2
   789  0D26                     __pidataBANK2:	
   790                           
   791                           ;initializer for DisableGPS@F4921
   792  0D26  3424               	retlw	36
   793  0D27  3450               	retlw	80
   794  0D28  3453               	retlw	83
   795  0D29  3452               	retlw	82
   796  0D2A  3446               	retlw	70
   797  0D2B  3431               	retlw	49
   798  0D2C  3431               	retlw	49
   799  0D2D  3437               	retlw	55
   800  0D2E  342C               	retlw	44
   801  0D2F  3431               	retlw	49
   802  0D30  3436               	retlw	54
   803  0D31  342A               	retlw	42
   804  0D32  3400               	retlw	0
   805                           
   806                           ;initializer for DecodeGPS@F4933
   807  0D33  3424               	retlw	36
   808  0D34  3447               	retlw	71
   809  0D35  3450               	retlw	80
   810  0D36  3447               	retlw	71
   811  0D37  344C               	retlw	76
   812  0D38  344C               	retlw	76
   813  0D39  3400               	retlw	0
   814                           
   815                           ;initializer for SetupGPS@F4924
   816  0D3A  3424               	retlw	36
   817  0D3B  3450               	retlw	80
   818  0D3C  3453               	retlw	83
   819  0D3D  3452               	retlw	82
   820  0D3E  3446               	retlw	70
   821  0D3F  3400               	retlw	0
   822                           
   823                           	psect	idataBANK3
   824  0CAF                     __pidataBANK3:	
   825                           
   826                           ;initializer for UpdateGPS@F4931
   827  0CAF  3424               	retlw	36
   828  0CB0  3450               	retlw	80
   829  0CB1  3453               	retlw	83
   830  0CB2  3452               	retlw	82
   831  0CB3  3446               	retlw	70
   832  0CB4  3431               	retlw	49
   833  0CB5  3430               	retlw	48
   834  0CB6  3433               	retlw	51
   835  0CB7  342C               	retlw	44
   836  0CB8  3430               	retlw	48
   837  0CB9  3431               	retlw	49
   838  0CBA  342C               	retlw	44
   839  0CBB  3430               	retlw	48
   840  0CBC  3430               	retlw	48
   841  0CBD  342C               	retlw	44
   842  0CBE  3430               	retlw	48
   843  0CBF  3431               	retlw	49
   844  0CC0  342C               	retlw	44
   845  0CC1  3430               	retlw	48
   846  0CC2  3430               	retlw	48
   847  0CC3  342A               	retlw	42
   848  0CC4  3400               	retlw	0
   849                           
   850                           	psect	stringtext
   851  0800                     __pstringtext:	
   852  0800                     _dpowers:	
   853  0800  3401               	retlw	1
   854  0801  3400               	retlw	0
   855  0802  340A               	retlw	10
   856  0803  3400               	retlw	0
   857  0804  3464               	retlw	100
   858  0805  3400               	retlw	0
   859  0806  34E8               	retlw	232
   860  0807  3403               	retlw	3
   861  0808  3410               	retlw	16
   862  0809  3427               	retlw	39
   863  080A                     __end_of_dpowers:	
   864  000B                     _INTCONbits	set	11
   865  0011                     _PIR1bits	set	17
   866  000C                     _PORTAbits	set	12
   867  000D                     _PORTBbits	set	13
   868  000E                     _PORTCbits	set	14
   869  0018                     _T1CONbits	set	24
   870  0019                     _T1GCONbits	set	25
   871  0017                     _TMR1H	set	23
   872  0016                     _TMR1L	set	22
   873  008E                     _ADIF	set	142
   874  005F                     _GIE	set	95
   875  005E                     _PEIE	set	94
   876  0088                     _TMR1IF	set	136
   877  00C0                     _TMR1ON	set	192
   878  009D                     _ADCON0bits	set	157
   879  009E                     _ADCON1bits	set	158
   880  009F                     _ADCON2bits	set	159
   881  009C                     _ADRESH	set	156
   882  0095                     _OPTION_REGbits	set	149
   883  0099                     _OSCCONbits	set	153
   884  0091                     _PIE1bits	set	145
   885  008C                     _TRISAbits	set	140
   886  008D                     _TRISBbits	set	141
   887  008E                     _TRISCbits	set	142
   888  0097                     _WDTCONbits	set	151
   889  048E                     _ADIE	set	1166
   890  048D                     _RCIE	set	1165
   891  0488                     _TMR1IE	set	1160
   892  010D                     _LATBbits	set	269
   893  010E                     _LATCbits	set	270
   894  0872                     _LATC2	set	2162
   895  018C                     _ANSELAbits	set	396
   896  018D                     _ANSELBbits	set	397
   897  0199                     _RCREG	set	409
   898  019D                     _RCSTAbits	set	413
   899  019C                     _SPBRGH	set	412
   900  019B                     _SPBRGL	set	411
   901  019A                     _TXREG	set	410
   902  019E                     _TXSTAbits	set	414
   903  0CE9                     _OERR	set	3305
   904  0211                     _SSPBUF	set	529
   905  0215                     _SSPCON1bits	set	533
   906  0214                     _SSPSTATbits	set	532
   907  0393                     _IOCAF	set	915
   908  0393                     _IOCAFbits	set	915
   909  0392                     _IOCANbits	set	914
   910  0391                     _IOCAPbits	set	913
   911  0396                     _IOCBF	set	918
   912  0396                     _IOCBFbits	set	918
   913  0395                     _IOCBNbits	set	917
   914  0394                     _IOCBPbits	set	916
   915  080A                     __stringdata:	
   916  080A                     STR_1:	
   917  080A  3425               	retlw	37	;'%'
   918  080B  3473               	retlw	115	;'s'
   919  080C  3425               	retlw	37	;'%'
   920  080D  3473               	retlw	115	;'s'
   921  080E  342C               	retlw	44	;','
   922  080F  3430               	retlw	48	;'0'
   923  0810  3425               	retlw	37	;'%'
   924  0811  3464               	retlw	100	;'d'
   925  0812  342C               	retlw	44	;','
   926  0813  3430               	retlw	48	;'0'
   927  0814  3430               	retlw	48	;'0'
   928  0815  342C               	retlw	44	;','
   929  0816  3430               	retlw	48	;'0'
   930  0817  3430               	retlw	48	;'0'
   931  0818  342C               	retlw	44	;','
   932  0819  3430               	retlw	48	;'0'
   933  081A  3430               	retlw	48	;'0'
   934  081B  342A               	retlw	42	;'*'
   935  081C  3400               	retlw	0
   936  081D                     STR_2:	
   937  081D  3428               	retlw	40	;'('
   938  081E  346E               	retlw	110	;'n'
   939  081F  3475               	retlw	117	;'u'
   940  0820  346C               	retlw	108	;'l'
   941  0821  346C               	retlw	108	;'l'
   942  0822  3429               	retlw	41	;')'
   943  0823  3400               	retlw	0
   944  0824                     __end_of__stringdata:	
   945                           
   946                           ; #config settings
   947  0000                     
   948                           	psect	cinit
   949  00E1                     start_initialization:	
   950  00E1                     __initialization:	
   951                           
   952                           ; Clear objects allocated to COMMON
   953  00E1  01F9               	clrf	__pbssCOMMON& (0+127)
   954  00E2  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   955  00E3  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   956  00E4  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   957  00E5  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   958                           
   959                           ; Clear objects allocated to BANK0
   960  00E6  01E9               	clrf	__pbssBANK0& (0+127)
   961  00E7  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   962  00E8  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   963  00E9  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   964  00EA  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   965                           
   966                           ; Clear objects allocated to BANK1
   967  00EB  30DE               	movlw	low __pbssBANK1
   968  00EC  0084               	movwf	4
   969  00ED  3000               	movlw	high __pbssBANK1
   970  00EE  0085               	movwf	5
   971  00EF  300A               	movlw	10
   972  00F0  318B  23FC  3180   	fcall	clear_ram0
   973                           
   974                           ; Clear objects allocated to BANK2
   975  00F3  3020               	movlw	low __pbssBANK2
   976  00F4  0084               	movwf	4
   977  00F5  3001               	movlw	high __pbssBANK2
   978  00F6  0085               	movwf	5
   979  00F7  3032               	movlw	50
   980  00F8  318B  23FC  3180   	fcall	clear_ram0
   981                           
   982                           ; Clear objects allocated to BANK3
   983  00FB  30A0               	movlw	low __pbssBANK3
   984  00FC  0084               	movwf	4
   985  00FD  3001               	movlw	high __pbssBANK3
   986  00FE  0085               	movwf	5
   987  00FF  3033               	movlw	51
   988  0100  318B  23FC  3180   	fcall	clear_ram0
   989                           
   990                           ; Clear objects allocated to BANK4
   991  0103  3020               	movlw	low __pbssBANK4
   992  0104  0084               	movwf	4
   993  0105  3002               	movlw	high __pbssBANK4
   994  0106  0085               	movwf	5
   995  0107  3048               	movlw	72
   996  0108  318B  23FC  3180   	fcall	clear_ram0
   997                           
   998                           ; Initialize objects allocated to BANK0
   999  010B  3002               	movlw	low __pidataBANK0
  1000  010C  0084               	movwf	4
  1001  010D  308C               	movlw	(high __pidataBANK0)| (0+128)
  1002  010E  0085               	movwf	5
  1003  010F  3063               	movlw	low __pdataBANK0
  1004  0110  0086               	movwf	6
  1005  0111  3000               	movlw	high __pdataBANK0
  1006  0112  0087               	movwf	7
  1007  0113  3006               	movlw	6
  1008  0114  318B  23F6  3180   	fcall	init_ram
  1009                           
  1010                           ; Initialize objects allocated to BANK1
  1011  0117  300F               	movlw	low __pidataBANK1
  1012  0118  0084               	movwf	4
  1013  0119  308C               	movlw	(high __pidataBANK1)| (0+128)
  1014  011A  0085               	movwf	5
  1015  011B  30E8               	movlw	low __pdataBANK1
  1016  011C  0086               	movwf	6
  1017  011D  3000               	movlw	high __pdataBANK1
  1018  011E  0087               	movwf	7
  1019  011F  3007               	movlw	7
  1020  0120  318B  23F6  3180   	fcall	init_ram
  1021                           
  1022                           ; Initialize objects allocated to BANK2
  1023  0123  3026               	movlw	low __pidataBANK2
  1024  0124  0084               	movwf	4
  1025  0125  308D               	movlw	(high __pidataBANK2)| (0+128)
  1026  0126  0085               	movwf	5
  1027  0127  3052               	movlw	low __pdataBANK2
  1028  0128  0086               	movwf	6
  1029  0129  3001               	movlw	high __pdataBANK2
  1030  012A  0087               	movwf	7
  1031  012B  301A               	movlw	26
  1032  012C  318B  23F6  3180   	fcall	init_ram
  1033                           
  1034                           ; Initialize objects allocated to BANK3
  1035  012F  30AF               	movlw	low __pidataBANK3
  1036  0130  0084               	movwf	4
  1037  0131  308C               	movlw	(high __pidataBANK3)| (0+128)
  1038  0132  0085               	movwf	5
  1039  0133  30D3               	movlw	low __pdataBANK3
  1040  0134  0086               	movwf	6
  1041  0135  3001               	movlw	high __pdataBANK3
  1042  0136  0087               	movwf	7
  1043  0137  3016               	movlw	22
  1044  0138  318B  23F6         	fcall	init_ram
  1045  013A                     end_of_initialization:	
  1046                           ;End of C runtime variable initialization code
  1047                           
  1048  013A                     __end_of__initialization:	
  1049  013A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1050  013B  0020               	movlb	0
  1051  013C  3186  2E3D         	ljmp	_main	;jump to C main() function
  1052                           
  1053                           	psect	bssCOMMON
  1054  0079                     __pbssCOMMON:	
  1055  0079                     _end:	
  1056  0079                     	ds	2
  1057  007B                     _start:	
  1058  007B                     	ds	2
  1059  007D                     _gpsIndex:	
  1060  007D                     	ds	1
  1061                           
  1062                           	psect	bssBANK0
  1063  0069                     __pbssBANK0:	
  1064  0069                     _eeprom_timeoutFlag:	
  1065  0069                     	ds	1
  1066  006A                     _hasValidGPSFlag:	
  1067  006A                     	ds	1
  1068  006B                     _messageDoneFlag:	
  1069  006B                     	ds	1
  1070  006C                     _recordFlag:	
  1071  006C                     	ds	1
  1072  006D                     _strobeFlag:	
  1073  006D                     	ds	1
  1074                           
  1075                           	psect	dataBANK0
  1076  0063                     __pdataBANK0:	
  1077  0063                     _validLatitude:	
  1078  0063                     	ds	3
  1079  0066                     _gpsInvalidFlag:	
  1080  0066                     	ds	1
  1081  0067                     _validEastWest:	
  1082  0067                     	ds	1
  1083  0068                     _validNorthSouth:	
  1084  0068                     	ds	1
  1085                           
  1086                           	psect	bssBANK1
  1087  00DE                     __pbssBANK1:	
  1088  00DE                     _recordEndAdress:	
  1089  00DE                     	ds	4
  1090  00E2                     DecodeGPS@F4935:	
  1091  00E2                     	ds	3
  1092  00E5                     DecodeGPS@F4937:	
  1093  00E5                     	ds	3
  1094                           
  1095                           	psect	dataBANK1
  1096  00E8                     __pdataBANK1:	
  1097  00E8                     SetupGPS@F4926:	
  1098  00E8                     	ds	4
  1099  00EC                     _validLongitude:	
  1100  00EC                     	ds	3
  1101                           
  1102                           	psect	bssBANK2
  1103  0120                     __pbssBANK2:	
  1104  0120                     _gpsMessage:	
  1105  0120                     	ds	50
  1106                           
  1107                           	psect	dataBANK2
  1108  0152                     __pdataBANK2:	
  1109  0152                     DisableGPS@F4921:	
  1110  0152                     	ds	13
  1111  015F                     DecodeGPS@F4933:	
  1112  015F                     	ds	7
  1113  0166                     SetupGPS@F4924:	
  1114  0166                     	ds	6
  1115                           
  1116                           	psect	bssBANK3
  1117  01A0                     __pbssBANK3:	
  1118  01A0                     _buffer:	
  1119  01A0                     	ds	51
  1120                           
  1121                           	psect	dataBANK3
  1122  01D3                     __pdataBANK3:	
  1123  01D3                     UpdateGPS@F4931:	
  1124  01D3                     	ds	22
  1125                           
  1126                           	psect	bssBANK4
  1127  0220                     __pbssBANK4:	
  1128  0220                     _preRecordingAddresses:	
  1129  0220                     	ds	72
  1130                           
  1131                           	psect	clrtext
  1132  0BFC                     clear_ram0:	
  1133                           ;	Called with FSR0 containing the base address, and
  1134                           ;	WREG with the size to clear
  1135                           
  1136  0BFC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1137  0BFD                     clrloop0:	
  1138  0BFD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1139  0BFE  3101               	addfsr 0,1
  1140  0BFF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1141  0C00  2BFD               	goto	clrloop0	;have we reached the end yet?
  1142  0C01  3400               	retlw	0	;all done for this memory range, return
  1143                           
  1144                           	psect	inittext
  1145  0BF6                     init_ram:	
  1146  0BF6  00FE               	movwf	126
  1147  0BF7                     initloop:	
  1148  0BF7  0012               	moviw fsr0++
  1149  0BF8  001E               	movwi fsr1++
  1150  0BF9  0BFE               	decfsz	126,f
  1151  0BFA  2BF7               	goto	initloop
  1152  0BFB  3400               	retlw	0
  1153                           
  1154                           	psect	cstackBANK1
  1155  00A0                     __pcstackBANK1:	
  1156  00A0                     SetupGPS@message:	
  1157                           
  1158                           ; 50 bytes @ 0x0
  1159  00A0                     	ds	50
  1160  00D2                     SetupGPS@startSequence:	
  1161                           
  1162                           ; 6 bytes @ 0x32
  1163  00D2                     	ds	6
  1164  00D8                     SetupGPS@MID:	
  1165                           
  1166                           ; 4 bytes @ 0x38
  1167  00D8                     	ds	4
  1168  00DC                     SetupGPS@x:	
  1169                           
  1170                           ; 2 bytes @ 0x3C
  1171  00DC                     	ds	2
  1172                           
  1173                           	psect	cstackCOMMON
  1174  0070                     __pcstackCOMMON:	
  1175  0070                     ?_InitCLK:	
  1176  0070                     ?_InitGPIO:	
  1177                           ; 0 bytes @ 0x0
  1178                           
  1179  0070                     ?_InitADC:	
  1180                           ; 0 bytes @ 0x0
  1181                           
  1182  0070                     ?_InitTimer1:	
  1183                           ; 0 bytes @ 0x0
  1184                           
  1185  0070                     ?_InitWatchdog:	
  1186                           ; 0 bytes @ 0x0
  1187                           
  1188  0070                     ?_InitUART:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  0070                     ?_ToggleSleepGPS:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  0070                     ?_SetupGPS:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  0070                     ?_RecordMode:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  0070                     ?_UpdateGPS:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0070                     ?_GoToSleep:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0070                     ?_Hibernate:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0070                     ?_WriteBuffer:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0070                     ??_WriteBuffer:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0070                     ?_DecodeGPS:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0070                     ?_SendGPSSPI:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0070                     ?_isr:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0070                     ?_InitSPI:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0070                     ?_WriteSPI:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0070                     ?_uart_xmit:	
  1231                           ; 0 bytes @ 0x0
  1232                           
  1233  0070                     ?_CheckDisconnect:	
  1234                           ; 0 bytes @ 0x0
  1235                           
  1236  0070                     ?_ReadSPI:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_ReadStatusSPI:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_ReadBuffer:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x0
  1247  0070                     	ds	1
  1248  0071                     WriteBuffer@data:	
  1249                           
  1250                           ; 1 bytes @ 0x1
  1251  0071                     	ds	1
  1252  0072                     ??_isr:	
  1253                           
  1254                           ; 0 bytes @ 0x2
  1255  0072                     	ds	5
  1256  0077                     _isr$536:	
  1257                           
  1258                           ; 2 bytes @ 0x7
  1259  0077                     	ds	2
  1260                           
  1261                           	psect	cstackBANK0
  1262  0020                     __pcstackBANK0:	
  1263  0020                     ??_InitCLK:	
  1264  0020                     ??_InitGPIO:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0020                     ??_InitADC:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0020                     ??_InitTimer1:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0020                     ??_InitWatchdog:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0020                     ??_InitUART:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0020                     ??_ToggleSleepGPS:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0020                     ??_GoToSleep:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0020                     ??_Hibernate:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0020                     ??_InitSPI:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0020                     ??_WriteSPI:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0020                     ??_ReadSPI:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0020                     ??_ReadBuffer:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0020                     ??_uart_xmit:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0020                     ?_compute_checksum:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0020                     ?___bmul:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0020                     ?___wmul:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0020                     ?___lwdiv:	
  1313                           ; 2 bytes @ 0x0
  1314                           
  1315  0020                     uart_xmit@mydata_byte:	
  1316                           ; 2 bytes @ 0x0
  1317                           
  1318  0020                     ___bmul@multiplicand:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0020                     compute_checksum@size:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0020                     ___wmul@multiplier:	
  1325                           ; 2 bytes @ 0x0
  1326                           
  1327  0020                     ___lwdiv@divisor:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330                           
  1331                           ; 2 bytes @ 0x0
  1332  0020                     	ds	1
  1333  0021                     ??___bmul:	
  1334  0021                     ReadSPI@dataByte:	
  1335                           ; 0 bytes @ 0x1
  1336                           
  1337  0021                     ReadBuffer@read_data:	
  1338                           ; 1 bytes @ 0x1
  1339                           
  1340  0021                     GoToSleep@count:	
  1341                           ; 1 bytes @ 0x1
  1342                           
  1343  0021                     Hibernate@count:	
  1344                           ; 1 bytes @ 0x1
  1345                           
  1346                           
  1347                           ; 1 bytes @ 0x1
  1348  0021                     	ds	1
  1349  0022                     ??_compute_checksum:	
  1350  0022                     ___bmul@product:	
  1351                           ; 0 bytes @ 0x2
  1352                           
  1353  0022                     WriteSPI@temp:	
  1354                           ; 1 bytes @ 0x2
  1355                           
  1356  0022                     ___wmul@multiplicand:	
  1357                           ; 2 bytes @ 0x2
  1358                           
  1359  0022                     ___lwdiv@dividend:	
  1360                           ; 2 bytes @ 0x2
  1361                           
  1362                           
  1363                           ; 2 bytes @ 0x2
  1364  0022                     	ds	1
  1365  0023                     ___bmul@multiplier:	
  1366                           
  1367                           ; 1 bytes @ 0x3
  1368  0023                     	ds	1
  1369  0024                     ??___wmul:	
  1370  0024                     ??___lwdiv:	
  1371                           ; 0 bytes @ 0x4
  1372                           
  1373  0024                     WriteSPI@databyte:	
  1374                           ; 0 bytes @ 0x4
  1375                           
  1376  0024                     compute_checksum@checksum:	
  1377                           ; 1 bytes @ 0x4
  1378                           
  1379  0024                     ___wmul@product:	
  1380                           ; 1 bytes @ 0x4
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x4
  1384  0024                     	ds	1
  1385  0025                     ??_ReadStatusSPI:	
  1386  0025                     compute_checksum@data:	
  1387                           ; 0 bytes @ 0x5
  1388                           
  1389  0025                     ___lwdiv@quotient:	
  1390                           ; 1 bytes @ 0x5
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x5
  1394  0025                     	ds	1
  1395  0026                     ?___awdiv:	
  1396  0026                     ReadStatusSPI@dataRead:	
  1397                           ; 2 bytes @ 0x6
  1398                           
  1399  0026                     compute_checksum@x:	
  1400                           ; 1 bytes @ 0x6
  1401                           
  1402  0026                     ___awdiv@divisor:	
  1403                           ; 2 bytes @ 0x6
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0x6
  1407  0026                     	ds	1
  1408  0027                     ??_CheckDisconnect:	
  1409  0027                     ?_WriteOverheadSPI:	
  1410                           ; 0 bytes @ 0x7
  1411                           
  1412  0027                     ___lwdiv@counter:	
  1413                           ; 0 bytes @ 0x7
  1414                           
  1415  0027                     WriteOverheadSPI@address:	
  1416                           ; 1 bytes @ 0x7
  1417                           
  1418                           
  1419                           ; 4 bytes @ 0x7
  1420  0027                     	ds	1
  1421  0028                     ?_uart_write_message:	
  1422  0028                     ?___lwmod:	
  1423                           ; 0 bytes @ 0x8
  1424                           
  1425  0028                     CheckDisconnect@status:	
  1426                           ; 2 bytes @ 0x8
  1427                           
  1428  0028                     uart_write_message@size:	
  1429                           ; 1 bytes @ 0x8
  1430                           
  1431  0028                     ___awdiv@dividend:	
  1432                           ; 2 bytes @ 0x8
  1433                           
  1434  0028                     ___lwmod@divisor:	
  1435                           ; 2 bytes @ 0x8
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x8
  1439  0028                     	ds	2
  1440  002A                     ??_uart_write_message:	
  1441  002A                     ??___awdiv:	
  1442                           ; 0 bytes @ 0xA
  1443                           
  1444  002A                     ___lwmod@dividend:	
  1445                           ; 0 bytes @ 0xA
  1446                           
  1447                           
  1448                           ; 2 bytes @ 0xA
  1449  002A                     	ds	1
  1450  002B                     ??_WriteOverheadSPI:	
  1451  002B                     ___awdiv@counter:	
  1452                           ; 0 bytes @ 0xB
  1453                           
  1454                           
  1455                           ; 1 bytes @ 0xB
  1456  002B                     	ds	1
  1457  002C                     ??___lwmod:	
  1458  002C                     ___awdiv@sign:	
  1459                           ; 0 bytes @ 0xC
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0xC
  1463  002C                     	ds	1
  1464  002D                     ___lwmod@counter:	
  1465  002D                     _uart_write_message$1427:	
  1466                           ; 1 bytes @ 0xD
  1467                           
  1468  002D                     ___awdiv@quotient:	
  1469                           ; 2 bytes @ 0xD
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0xD
  1473  002D                     	ds	1
  1474  002E                     ?_sprintf:	
  1475  002E                     sprintf@f:	
  1476                           ; 2 bytes @ 0xE
  1477                           
  1478                           
  1479                           ; 2 bytes @ 0xE
  1480  002E                     	ds	1
  1481  002F                     ??_DecodeGPS:	
  1482  002F                     _uart_write_message$1428:	
  1483                           ; 0 bytes @ 0xF
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0xF
  1487  002F                     	ds	2
  1488  0031                     uart_write_message@x:	
  1489  0031                     WriteOverheadSPI@address_bytes:	
  1490                           ; 2 bytes @ 0x11
  1491                           
  1492                           
  1493                           ; 3 bytes @ 0x11
  1494  0031                     	ds	1
  1495  0032                     DecodeGPS@messageID:	
  1496                           
  1497                           ; 7 bytes @ 0x12
  1498  0032                     	ds	1
  1499  0033                     uart_write_message@checksum:	
  1500                           
  1501                           ; 1 bytes @ 0x13
  1502  0033                     	ds	1
  1503  0034                     ??_sprintf:	
  1504  0034                     WriteOverheadSPI@StatusReg:	
  1505                           ; 0 bytes @ 0x14
  1506                           
  1507  0034                     uart_write_message@data:	
  1508                           ; 1 bytes @ 0x14
  1509                           
  1510                           
  1511                           ; 1 bytes @ 0x14
  1512  0034                     	ds	1
  1513  0035                     ??_SendGPSSPI:	
  1514  0035                     uart_write_message@ascii_checksum:	
  1515                           ; 0 bytes @ 0x15
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0x15
  1519  0035                     	ds	1
  1520  0036                     SendGPSSPI@address:	
  1521                           
  1522                           ; 4 bytes @ 0x16
  1523  0036                     	ds	2
  1524  0038                     sprintf@flag:	
  1525                           
  1526                           ; 1 bytes @ 0x18
  1527  0038                     	ds	1
  1528  0039                     DecodeGPS@northSouth:	
  1529  0039                     sprintf@prec:	
  1530                           ; 1 bytes @ 0x19
  1531                           
  1532                           
  1533                           ; 1 bytes @ 0x19
  1534  0039                     	ds	1
  1535  003A                     DecodeGPS@eastWest:	
  1536  003A                     sprintf@ap:	
  1537                           ; 1 bytes @ 0x1A
  1538                           
  1539  003A                     SendGPSSPI@x:	
  1540                           ; 1 bytes @ 0x1A
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x1A
  1544  003A                     	ds	1
  1545  003B                     DecodeGPS@status:	
  1546  003B                     sprintf@sp:	
  1547                           ; 1 bytes @ 0x1B
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x1B
  1551  003B                     	ds	1
  1552  003C                     ??_RecordMode:	
  1553  003C                     DecodeGPS@latitude:	
  1554                           ; 0 bytes @ 0x1C
  1555                           
  1556  003C                     sprintf@_val:	
  1557                           ; 3 bytes @ 0x1C
  1558                           
  1559                           
  1560                           ; 4 bytes @ 0x1C
  1561  003C                     	ds	3
  1562  003F                     DecodeGPS@longitude:	
  1563                           
  1564                           ; 3 bytes @ 0x1F
  1565  003F                     	ds	1
  1566  0040                     sprintf@c:	
  1567                           
  1568                           ; 1 bytes @ 0x20
  1569  0040                     	ds	1
  1570  0041                     ??_SetupGPS:	
  1571  0041                     RecordMode@count:	
  1572                           ; 0 bytes @ 0x21
  1573                           
  1574                           
  1575                           ; 2 bytes @ 0x21
  1576  0041                     	ds	1
  1577  0042                     DecodeGPS@x:	
  1578                           
  1579                           ; 2 bytes @ 0x22
  1580  0042                     	ds	1
  1581  0043                     RecordMode@address:	
  1582                           
  1583                           ; 4 bytes @ 0x23
  1584  0043                     	ds	1
  1585  0044                     ??_UpdateGPS:	
  1586                           
  1587                           ; 0 bytes @ 0x24
  1588  0044                     	ds	1
  1589  0045                     UpdateGPS@GPSupdateMessage:	
  1590                           
  1591                           ; 22 bytes @ 0x25
  1592  0045                     	ds	22
  1593  005B                     ?_main:	
  1594  005B                     main@argc:	
  1595                           ; 2 bytes @ 0x3B
  1596                           
  1597                           
  1598                           ; 2 bytes @ 0x3B
  1599  005B                     	ds	2
  1600  005D                     main@argv:	
  1601                           
  1602                           ; 2 bytes @ 0x3D
  1603  005D                     	ds	2
  1604  005F                     ??_main:	
  1605                           
  1606                           ; 0 bytes @ 0x3F
  1607  005F                     	ds	3
  1608  0062                     main@periodicCounter:	
  1609                           
  1610                           ; 1 bytes @ 0x42
  1611  0062                     	ds	1
  1612                           
  1613                           	psect	maintext
  1614  063D                     __pmaintext:	
  1615 ;;
  1616 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1617 ;;
  1618 ;; *************** function _main *****************
  1619 ;; Defined at:
  1620 ;;		line 20 in file "launcher_main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  argc            2   59[BANK0 ] int 
  1623 ;;  argv            2   61[BANK0 ] PTR PTR unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  periodicCoun    1   66[BANK0 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2   59[BANK0 ] int 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 17F/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         0       4       0       0       0       0       0
  1636 ;;      Locals:         0       1       0       0       0       0       0
  1637 ;;      Temps:          0       3       0       0       0       0       0
  1638 ;;      Totals:         0       8       0       0       0       0       0
  1639 ;;Total ram usage:        8 bytes
  1640 ;; Hardware stack levels required when called:    7
  1641 ;; This function calls:
  1642 ;;		_GoToSleep
  1643 ;;		_Hibernate
  1644 ;;		_InitADC
  1645 ;;		_InitCLK
  1646 ;;		_InitGPIO
  1647 ;;		_InitTimer1
  1648 ;;		_InitUART
  1649 ;;		_InitWatchdog
  1650 ;;		_RecordMode
  1651 ;;		_SetupGPS
  1652 ;;		_ToggleSleepGPS
  1653 ;;		_UpdateGPS
  1654 ;; This function is called by:
  1655 ;;		Startup code after reset
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _main
  1661  063D                     _main:	
  1662                           
  1663                           ;launcher_main.c: 23: InitCLK();
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1667  063D  318C  2416  3186   	fcall	_InitCLK
  1668                           
  1669                           ;launcher_main.c: 24: InitGPIO();
  1670  0640  318D  255E  3186   	fcall	_InitGPIO
  1671                           
  1672                           ;launcher_main.c: 25: InitADC();
  1673  0643  318D  250D  3186   	fcall	_InitADC
  1674                           
  1675                           ;launcher_main.c: 28: InitTimer1();
  1676  0646  318C  2428  3186   	fcall	_InitTimer1
  1677                           
  1678                           ;launcher_main.c: 29: InitWatchdog();
  1679  0649  318C  2408  3186   	fcall	_InitWatchdog
  1680                           
  1681                           ;launcher_main.c: 30: InitUART();
  1682  064C  318C  2437  3186   	fcall	_InitUART
  1683                           
  1684                           ;launcher_main.c: 32: unsigned char periodicCounter = 10;
  1685  064F  300A               	movlw	10
  1686  0650  0020               	movlb	0	; select bank0
  1687  0651  00DF               	movwf	??_main
  1688  0652  085F               	movf	??_main,w
  1689  0653  00E2               	movwf	main@periodicCounter
  1690                           
  1691                           ;launcher_main.c: 33: gpsIndex = 0;
  1692  0654  01FD               	clrf	_gpsIndex	;volatile
  1693                           
  1694                           ;launcher_main.c: 35: INTCONbits.GIE = 1;
  1695  0655  178B               	bsf	11,7	;volatile
  1696                           
  1697                           ;launcher_main.c: 38: ToggleSleepGPS();
  1698  0656  318D  258B  3186   	fcall	_ToggleSleepGPS
  1699                           
  1700                           ;launcher_main.c: 39: SetupGPS();
  1701  0659  3187  2734  3186   	fcall	_SetupGPS
  1702                           
  1703                           ;launcher_main.c: 42: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1704  065C  0022               	movlb	2	; select bank2
  1705  065D  080D               	movf	13,w	;volatile
  1706  065E  39FF               	andlw	255
  1707  065F  39DF               	andlw	223
  1708  0660  0020               	movlb	0	; select bank0
  1709  0661  00DF               	movwf	??_main
  1710  0662  080D               	movf	13,w	;volatile
  1711  0663  065F               	xorwf	??_main,w
  1712  0664  3900               	andlw	-256
  1713  0665  065F               	xorwf	??_main,w
  1714  0666  008D               	movwf	13	;volatile
  1715                           
  1716                           ;launcher_main.c: 43: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1717  0667  0022               	movlb	2	; select bank2
  1718  0668  080D               	movf	13,w	;volatile
  1719  0669  39FF               	andlw	255
  1720  066A  3810               	iorlw	16
  1721  066B  0020               	movlb	0	; select bank0
  1722  066C  00DF               	movwf	??_main
  1723  066D  080D               	movf	13,w	;volatile
  1724  066E  065F               	xorwf	??_main,w
  1725  066F  3900               	andlw	-256
  1726  0670  065F               	xorwf	??_main,w
  1727  0671  008D               	movwf	13	;volatile
  1728                           
  1729                           ;launcher_main.c: 44: _delay((unsigned long)((100)*(16000000/4000.0)));
  1730  0672  3003               	movlw	3
  1731  0673  00E1               	movwf	??_main+2
  1732  0674  3008               	movlw	8
  1733  0675  00E0               	movwf	??_main+1
  1734  0676  3078               	movlw	120
  1735  0677  00DF               	movwf	??_main
  1736  0678                     u2797:	
  1737  0678  0BDF               	decfsz	??_main,f
  1738  0679  2E78               	goto	u2797
  1739  067A  0BE0               	decfsz	??_main+1,f
  1740  067B  2E78               	goto	u2797
  1741  067C  0BE1               	decfsz	??_main+2,f
  1742  067D  2E78               	goto	u2797
  1743                           
  1744                           ;launcher_main.c: 45: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1745  067E  0022               	movlb	2	; select bank2
  1746  067F  080D               	movf	13,w	;volatile
  1747  0680  39FF               	andlw	255
  1748  0681  39EF               	andlw	239
  1749  0682  0020               	movlb	0	; select bank0
  1750  0683  00DF               	movwf	??_main
  1751  0684  080D               	movf	13,w	;volatile
  1752  0685  065F               	xorwf	??_main,w
  1753  0686  3900               	andlw	-256
  1754  0687  065F               	xorwf	??_main,w
  1755  0688  008D               	movwf	13	;volatile
  1756                           
  1757                           ;launcher_main.c: 48: LATC2 = (1);
  1758  0689  0022               	movlb	2	; select bank2
  1759  068A  150E               	bsf	14,2	;volatile
  1760  068B                     l2839:	
  1761                           ;launcher_main.c: 50: while(1){
  1762                           
  1763                           
  1764                           ;launcher_main.c: 60: LATC2 = (1);
  1765  068B  0022               	movlb	2	; select bank2
  1766  068C  150E               	bsf	14,2	;volatile
  1767                           
  1768                           ;launcher_main.c: 63: if(PORTAbits.RA1)
  1769  068D  0020               	movlb	0	; select bank0
  1770  068E  1C8C               	btfss	12,1	;volatile
  1771  068F  2E9F               	goto	l110
  1772                           
  1773                           ;launcher_main.c: 64: {
  1774                           ;launcher_main.c: 66: PORTBbits.RB0 = 1;
  1775  0690  140D               	bsf	13,0	;volatile
  1776                           
  1777                           ;launcher_main.c: 67: _delay((unsigned long)((100)*(16000000/4000.0)));
  1778  0691  3003               	movlw	3
  1779  0692  00E1               	movwf	??_main+2
  1780  0693  3008               	movlw	8
  1781  0694  00E0               	movwf	??_main+1
  1782  0695  3078               	movlw	120
  1783  0696  00DF               	movwf	??_main
  1784  0697                     u2807:	
  1785  0697  0BDF               	decfsz	??_main,f
  1786  0698  2E97               	goto	u2807
  1787  0699  0BE0               	decfsz	??_main+1,f
  1788  069A  2E97               	goto	u2807
  1789  069B  0BE1               	decfsz	??_main+2,f
  1790  069C  2E97               	goto	u2807
  1791                           
  1792                           ;launcher_main.c: 68: PORTBbits.RB0 = 0;
  1793  069D  0020               	movlb	0	; select bank0
  1794  069E  100D               	bcf	13,0	;volatile
  1795  069F                     l110:	
  1796                           
  1797                           ;launcher_main.c: 69: }
  1798                           ;launcher_main.c: 71: if(recordFlag)
  1799  069F  086C               	movf	_recordFlag,w
  1800  06A0  1903               	btfsc	3,2
  1801  06A1  2EA7               	goto	l2853
  1802                           
  1803                           ;launcher_main.c: 72: {
  1804                           ;launcher_main.c: 73: RecordMode();
  1805  06A2  3183  239C  3186   	fcall	_RecordMode
  1806                           
  1807                           ;launcher_main.c: 74: recordFlag = 0;
  1808  06A5  0020               	movlb	0	; select bank0
  1809  06A6  01EC               	clrf	_recordFlag
  1810  06A7                     l2853:	
  1811                           
  1812                           ;launcher_main.c: 75: }
  1813                           ;launcher_main.c: 78: UpdateGPS();
  1814  06A7  3187  27AE  3186   	fcall	_UpdateGPS
  1815                           
  1816                           ;launcher_main.c: 80: if(gpsInvalidFlag)
  1817  06AA  0020               	movlb	0	; select bank0
  1818  06AB  0866               	movf	_gpsInvalidFlag,w
  1819  06AC  1903               	btfsc	3,2
  1820  06AD  2EE5               	goto	l2865
  1821                           
  1822                           ;launcher_main.c: 81: {
  1823                           ;launcher_main.c: 82: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1824  06AE  0022               	movlb	2	; select bank2
  1825  06AF  080D               	movf	13,w	;volatile
  1826  06B0  39FF               	andlw	255
  1827  06B1  3820               	iorlw	32
  1828  06B2  0020               	movlb	0	; select bank0
  1829  06B3  00DF               	movwf	??_main
  1830  06B4  080D               	movf	13,w	;volatile
  1831  06B5  065F               	xorwf	??_main,w
  1832  06B6  3900               	andlw	-256
  1833  06B7  065F               	xorwf	??_main,w
  1834  06B8  008D               	movwf	13	;volatile
  1835                           
  1836                           ;launcher_main.c: 83: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1837  06B9  0022               	movlb	2	; select bank2
  1838  06BA  080D               	movf	13,w	;volatile
  1839  06BB  39FF               	andlw	255
  1840  06BC  39EF               	andlw	239
  1841  06BD  0020               	movlb	0	; select bank0
  1842  06BE  00DF               	movwf	??_main
  1843  06BF  080D               	movf	13,w	;volatile
  1844  06C0  065F               	xorwf	??_main,w
  1845  06C1  3900               	andlw	-256
  1846  06C2  065F               	xorwf	??_main,w
  1847  06C3  008D               	movwf	13	;volatile
  1848                           
  1849                           ;launcher_main.c: 84: _delay((unsigned long)((250)*(16000000/4000.0)));
  1850  06C4  3006               	movlw	6
  1851  06C5  00E1               	movwf	??_main+2
  1852  06C6  3013               	movlw	19
  1853  06C7  00E0               	movwf	??_main+1
  1854  06C8  30B1               	movlw	177
  1855  06C9  00DF               	movwf	??_main
  1856  06CA                     u2817:	
  1857  06CA  0BDF               	decfsz	??_main,f
  1858  06CB  2ECA               	goto	u2817
  1859  06CC  0BE0               	decfsz	??_main+1,f
  1860  06CD  2ECA               	goto	u2817
  1861  06CE  0BE1               	decfsz	??_main+2,f
  1862  06CF  2ECA               	goto	u2817
  1863  06D0  3200               	nop2
  1864                           
  1865                           ;launcher_main.c: 85: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1866  06D1  0022               	movlb	2	; select bank2
  1867  06D2  080D               	movf	13,w	;volatile
  1868  06D3  39FF               	andlw	255
  1869  06D4  39DF               	andlw	223
  1870  06D5  0020               	movlb	0	; select bank0
  1871  06D6  00DF               	movwf	??_main
  1872  06D7  080D               	movf	13,w	;volatile
  1873  06D8  065F               	xorwf	??_main,w
  1874  06D9  3900               	andlw	-256
  1875  06DA  065F               	xorwf	??_main,w
  1876  06DB  008D               	movwf	13	;volatile
  1877                           
  1878                           ;launcher_main.c: 86: if(periodicCounter < 14)
  1879  06DC  300E               	movlw	14
  1880  06DD  0262               	subwf	main@periodicCounter,w
  1881  06DE  1803               	skipnc
  1882  06DF  2F17               	goto	l2871
  1883                           
  1884                           ;launcher_main.c: 87: periodicCounter++;
  1885  06E0  3001               	movlw	1
  1886  06E1  00DF               	movwf	??_main
  1887  06E2  085F               	movf	??_main,w
  1888  06E3  07E2               	addwf	main@periodicCounter,f
  1889                           
  1890                           ;launcher_main.c: 88: }
  1891  06E4  2F17               	goto	l2871
  1892  06E5                     l2865:	
  1893                           
  1894                           ;launcher_main.c: 89: else
  1895                           ;launcher_main.c: 90: {
  1896                           ;launcher_main.c: 91: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1897  06E5  0022               	movlb	2	; select bank2
  1898  06E6  080D               	movf	13,w	;volatile
  1899  06E7  39FF               	andlw	255
  1900  06E8  3810               	iorlw	16
  1901  06E9  0020               	movlb	0	; select bank0
  1902  06EA  00DF               	movwf	??_main
  1903  06EB  080D               	movf	13,w	;volatile
  1904  06EC  065F               	xorwf	??_main,w
  1905  06ED  3900               	andlw	-256
  1906  06EE  065F               	xorwf	??_main,w
  1907  06EF  008D               	movwf	13	;volatile
  1908                           
  1909                           ;launcher_main.c: 92: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1910  06F0  0022               	movlb	2	; select bank2
  1911  06F1  080D               	movf	13,w	;volatile
  1912  06F2  39FF               	andlw	255
  1913  06F3  39DF               	andlw	223
  1914  06F4  0020               	movlb	0	; select bank0
  1915  06F5  00DF               	movwf	??_main
  1916  06F6  080D               	movf	13,w	;volatile
  1917  06F7  065F               	xorwf	??_main,w
  1918  06F8  3900               	andlw	-256
  1919  06F9  065F               	xorwf	??_main,w
  1920  06FA  008D               	movwf	13	;volatile
  1921                           
  1922                           ;launcher_main.c: 93: _delay((unsigned long)((250)*(16000000/4000.0)));
  1923  06FB  3006               	movlw	6
  1924  06FC  00E1               	movwf	??_main+2
  1925  06FD  3013               	movlw	19
  1926  06FE  00E0               	movwf	??_main+1
  1927  06FF  30B1               	movlw	177
  1928  0700  00DF               	movwf	??_main
  1929  0701                     u2827:	
  1930  0701  0BDF               	decfsz	??_main,f
  1931  0702  2F01               	goto	u2827
  1932  0703  0BE0               	decfsz	??_main+1,f
  1933  0704  2F01               	goto	u2827
  1934  0705  0BE1               	decfsz	??_main+2,f
  1935  0706  2F01               	goto	u2827
  1936  0707  3200               	nop2
  1937                           
  1938                           ;launcher_main.c: 94: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1939  0708  0022               	movlb	2	; select bank2
  1940  0709  080D               	movf	13,w	;volatile
  1941  070A  39FF               	andlw	255
  1942  070B  39EF               	andlw	239
  1943  070C  0020               	movlb	0	; select bank0
  1944  070D  00DF               	movwf	??_main
  1945  070E  080D               	movf	13,w	;volatile
  1946  070F  065F               	xorwf	??_main,w
  1947  0710  3900               	andlw	-256
  1948  0711  065F               	xorwf	??_main,w
  1949  0712  008D               	movwf	13	;volatile
  1950                           
  1951                           ;launcher_main.c: 95: periodicCounter = 10;
  1952  0713  300A               	movlw	10
  1953  0714  00DF               	movwf	??_main
  1954  0715  085F               	movf	??_main,w
  1955  0716  00E2               	movwf	main@periodicCounter
  1956  0717                     l2871:	
  1957                           
  1958                           ;launcher_main.c: 96: }
  1959                           ;launcher_main.c: 98: if(!recordFlag)
  1960  0717  08EC               	movf	_recordFlag,f
  1961  0718  1D03               	skipz
  1962  0719  2E8B               	goto	l2839
  1963                           
  1964                           ;launcher_main.c: 99: {
  1965                           ;launcher_main.c: 100: if(PORTAbits.RA1)
  1966  071A  1C8C               	btfss	12,1	;volatile
  1967  071B  2F21               	goto	l2877
  1968                           
  1969                           ;launcher_main.c: 101: GoToSleep(10);
  1970  071C  300A               	movlw	10
  1971  071D  318C  2466  3186   	fcall	_GoToSleep
  1972  0720  2E8B               	goto	l2839
  1973  0721                     l2877:	
  1974                           
  1975                           ;launcher_main.c: 102: else if(gpsInvalidFlag)
  1976  0721  0020               	movlb	0	; select bank0
  1977  0722  0866               	movf	_gpsInvalidFlag,w
  1978  0723  1903               	btfsc	3,2
  1979  0724  2F2A               	goto	l2881
  1980                           
  1981                           ;launcher_main.c: 103: GoToSleep(periodicCounter);
  1982  0725  0862               	movf	main@periodicCounter,w
  1983  0726  318C  2466  3186   	fcall	_GoToSleep
  1984  0729  2E8B               	goto	l2839
  1985  072A                     l2881:	
  1986                           
  1987                           ;launcher_main.c: 104: else
  1988                           ;launcher_main.c: 105: {
  1989                           ;launcher_main.c: 106: ToggleSleepGPS();
  1990  072A  318D  258B  3186   	fcall	_ToggleSleepGPS
  1991                           
  1992                           ;launcher_main.c: 107: Hibernate();
  1993  072D  318C  24F4  3186   	fcall	_Hibernate
  1994                           
  1995                           ;launcher_main.c: 108: ToggleSleepGPS();
  1996  0730  318D  258B  3186   	fcall	_ToggleSleepGPS
  1997  0733  2E8B               	goto	l2839
  1998  0734                     __end_of_main:	
  1999                           ;launcher_main.c: 109: }
  2000                           ;launcher_main.c: 110: }
  2001                           ;launcher_main.c: 113: }
  2002                           ;launcher_main.c: 115: return (0);
  2003                           ;	Return value of _main is never used
  2004                           
  2005                           
  2006                           	psect	text1
  2007  07AE                     __ptext1:	
  2008 ;; *************** function _UpdateGPS *****************
  2009 ;; Defined at:
  2010 ;;		line 374 in file "launcher_functions.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  GPSupdateMes   22   37[BANK0 ] unsigned char [22]
  2015 ;; Return value:  Size  Location     Type
  2016 ;;		None               void
  2017 ;; Registers used:
  2018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2024 ;;      Params:         0       0       0       0       0       0       0
  2025 ;;      Locals:         0      22       0       0       0       0       0
  2026 ;;      Temps:          0       1       0       0       0       0       0
  2027 ;;      Totals:         0      23       0       0       0       0       0
  2028 ;;Total ram usage:       23 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    4
  2031 ;; This function calls:
  2032 ;;		_DecodeGPS
  2033 ;;		_uart_write_message
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _UpdateGPS
  2041  07AE                     _UpdateGPS:	
  2042                           
  2043                           ;launcher_functions.c: 377: unsigned char GPSupdateMessage[22] = "$PSRF103,01,00,01,00*"
      +                          ;
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2047  07AE  30D3               	movlw	low UpdateGPS@F4931
  2048  07AF  0086               	movwf	6
  2049  07B0  3001               	movlw	high UpdateGPS@F4931
  2050  07B1  0087               	movwf	7
  2051  07B2  3045               	movlw	low UpdateGPS@GPSupdateMessage
  2052  07B3  0084               	movwf	4
  2053  07B4  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2054  07B5  0085               	movwf	5
  2055  07B6  3016               	movlw	22
  2056  07B7  0020               	movlb	0	; select bank0
  2057  07B8  00C4               	movwf	??_UpdateGPS
  2058  07B9                     u2310:	
  2059  07B9  0016               	moviw fsr1++
  2060  07BA  001A               	movwi fsr0++
  2061  07BB  0BC4               	decfsz	??_UpdateGPS,f
  2062  07BC  2FB9               	goto	u2310
  2063                           
  2064                           ;launcher_functions.c: 380: RCIE = 1;
  2065  07BD  0021               	movlb	1	; select bank1
  2066  07BE  1691               	bsf	17,5	;volatile
  2067                           
  2068                           ;launcher_functions.c: 381: PEIE = 1;
  2069  07BF  170B               	bsf	11,6	;volatile
  2070                           
  2071                           ;launcher_functions.c: 382: GIE = 1;
  2072  07C0  178B               	bsf	11,7	;volatile
  2073                           
  2074                           ;launcher_functions.c: 387: gpsIndex = 0;
  2075  07C1  01FD               	clrf	_gpsIndex	;volatile
  2076                           
  2077                           ;launcher_functions.c: 388: uart_write_message(GPSupdateMessage, 22);
  2078  07C2  3016               	movlw	22
  2079  07C3  0020               	movlb	0	; select bank0
  2080  07C4  00A8               	movwf	uart_write_message@size
  2081  07C5  3000               	movlw	0
  2082  07C6  00A9               	movwf	uart_write_message@size+1
  2083  07C7  3045               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2084  07C8  318F  278A  3187   	fcall	_uart_write_message
  2085                           
  2086                           ;launcher_functions.c: 389: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  2087  07CB  0022               	movlb	2	; select bank2
  2088  07CC  080D               	movf	13,w	;volatile
  2089  07CD  39FF               	andlw	255
  2090  07CE  3820               	iorlw	32
  2091  07CF  0020               	movlb	0	; select bank0
  2092  07D0  00C4               	movwf	??_UpdateGPS
  2093  07D1  080D               	movf	13,w	;volatile
  2094  07D2  0644               	xorwf	??_UpdateGPS,w
  2095  07D3  3900               	andlw	-256
  2096  07D4  0644               	xorwf	??_UpdateGPS,w
  2097  07D5  008D               	movwf	13	;volatile
  2098                           
  2099                           ;launcher_functions.c: 390: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  2100  07D6  0022               	movlb	2	; select bank2
  2101  07D7  080D               	movf	13,w	;volatile
  2102  07D8  39FF               	andlw	255
  2103  07D9  39EF               	andlw	239
  2104  07DA  0020               	movlb	0	; select bank0
  2105  07DB  00C4               	movwf	??_UpdateGPS
  2106  07DC  080D               	movf	13,w	;volatile
  2107  07DD  0644               	xorwf	??_UpdateGPS,w
  2108  07DE  3900               	andlw	-256
  2109  07DF  0644               	xorwf	??_UpdateGPS,w
  2110  07E0  008D               	movwf	13	;volatile
  2111  07E1                     l2777:	
  2112                           ;launcher_functions.c: 391: do
  2113                           
  2114                           
  2115                           ;launcher_functions.c: 392: {
  2116                           ;launcher_functions.c: 412: }while(!messageDoneFlag);
  2117  07E1  086B               	movf	_messageDoneFlag,w
  2118  07E2  1903               	btfsc	3,2
  2119  07E3  2FE1               	goto	l2777
  2120                           
  2121                           ;launcher_functions.c: 413: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  2122  07E4  0022               	movlb	2	; select bank2
  2123  07E5  080D               	movf	13,w	;volatile
  2124  07E6  39FF               	andlw	255
  2125  07E7  39DF               	andlw	223
  2126  07E8  0020               	movlb	0	; select bank0
  2127  07E9  00C4               	movwf	??_UpdateGPS
  2128  07EA  080D               	movf	13,w	;volatile
  2129  07EB  0644               	xorwf	??_UpdateGPS,w
  2130  07EC  3900               	andlw	-256
  2131  07ED  0644               	xorwf	??_UpdateGPS,w
  2132  07EE  008D               	movwf	13	;volatile
  2133                           
  2134                           ;launcher_functions.c: 414: messageDoneFlag = 0;
  2135  07EF  01EB               	clrf	_messageDoneFlag
  2136                           
  2137                           ;launcher_functions.c: 415: DecodeGPS();
  2138  07F0  3181  213E         	fcall	_DecodeGPS
  2139  07F2  0008               	return
  2140  07F3                     __end_of_UpdateGPS:	
  2141                           
  2142                           	psect	text2
  2143  013E                     __ptext2:	
  2144 ;; *************** function _DecodeGPS *****************
  2145 ;; Defined at:
  2146 ;;		line 421 in file "launcher_functions.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  messageID       7   18[BANK0 ] unsigned char [7]
  2151 ;;  longitude       3   31[BANK0 ] unsigned char [3]
  2152 ;;  latitude        3   28[BANK0 ] unsigned char [3]
  2153 ;;  x               2   34[BANK0 ] int 
  2154 ;;  status          1   27[BANK0 ] unsigned char 
  2155 ;;  eastWest        1   26[BANK0 ] unsigned char 
  2156 ;;  northSouth      1   25[BANK0 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;		None               void
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2166 ;;      Params:         0       0       0       0       0       0       0
  2167 ;;      Locals:         0      18       0       0       0       0       0
  2168 ;;      Temps:          0       3       0       0       0       0       0
  2169 ;;      Totals:         0      21       0       0       0       0       0
  2170 ;;Total ram usage:       21 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		___awdiv
  2175 ;;		___bmul
  2176 ;;		___wmul
  2177 ;; This function is called by:
  2178 ;;		_UpdateGPS
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _DecodeGPS
  2184  013E                     _DecodeGPS:	
  2185                           
  2186                           ;launcher_functions.c: 424: unsigned char messageID[7] = "$GPGLL";
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2190  013E  305F               	movlw	low DecodeGPS@F4933
  2191  013F  0086               	movwf	6
  2192  0140  3001               	movlw	high DecodeGPS@F4933
  2193  0141  0087               	movwf	7
  2194  0142  3032               	movlw	low DecodeGPS@messageID
  2195  0143  0084               	movwf	4
  2196  0144  3000               	movlw	high DecodeGPS@messageID
  2197  0145  0085               	movwf	5
  2198  0146  3007               	movlw	7
  2199  0147  0020               	movlb	0	; select bank0
  2200  0148  00AF               	movwf	??_DecodeGPS
  2201  0149                     u1960:	
  2202  0149  0016               	moviw fsr1++
  2203  014A  001A               	movwi fsr0++
  2204  014B  0BAF               	decfsz	??_DecodeGPS,f
  2205  014C  2949               	goto	u1960
  2206                           
  2207                           ;launcher_functions.c: 425: unsigned char latitude[3] = {0,0,0};
  2208  014D  0021               	movlb	1	; select bank1
  2209  014E  0862               	movf	DecodeGPS@F4935^(0+128),w
  2210  014F  0020               	movlb	0	; select bank0
  2211  0150  00BC               	movwf	DecodeGPS@latitude
  2212  0151  0021               	movlb	1	; select bank1
  2213  0152  0863               	movf	(DecodeGPS@F4935+1)^(0+128),w
  2214  0153  0020               	movlb	0	; select bank0
  2215  0154  00BD               	movwf	DecodeGPS@latitude+1
  2216  0155  0021               	movlb	1	; select bank1
  2217  0156  0864               	movf	(DecodeGPS@F4935+2)^(0+128),w
  2218  0157  0020               	movlb	0	; select bank0
  2219  0158  00BE               	movwf	DecodeGPS@latitude+2
  2220                           
  2221                           ;launcher_functions.c: 426: unsigned char longitude[3] = {0,0,0};
  2222  0159  0021               	movlb	1	; select bank1
  2223  015A  0865               	movf	DecodeGPS@F4937^(0+128),w
  2224  015B  0020               	movlb	0	; select bank0
  2225  015C  00BF               	movwf	DecodeGPS@longitude
  2226  015D  0021               	movlb	1	; select bank1
  2227  015E  0866               	movf	(DecodeGPS@F4937+1)^(0+128),w
  2228  015F  0020               	movlb	0	; select bank0
  2229  0160  00C0               	movwf	DecodeGPS@longitude+1
  2230  0161  0021               	movlb	1	; select bank1
  2231  0162  0867               	movf	(DecodeGPS@F4937+2)^(0+128),w
  2232  0163  0020               	movlb	0	; select bank0
  2233  0164  00C1               	movwf	DecodeGPS@longitude+2
  2234                           
  2235                           ;launcher_functions.c: 427: unsigned char northSouth;
  2236                           ;launcher_functions.c: 428: unsigned char eastWest;
  2237                           ;launcher_functions.c: 429: unsigned char status;
  2238                           ;launcher_functions.c: 430: int x;
  2239                           ;launcher_functions.c: 432: for(x=0;x<6;x++)
  2240  0165  01C2               	clrf	DecodeGPS@x
  2241  0166  01C3               	clrf	DecodeGPS@x+1
  2242  0167  0843               	movf	DecodeGPS@x+1,w
  2243  0168  3A80               	xorlw	128
  2244  0169  00AF               	movwf	??_DecodeGPS
  2245  016A  3080               	movlw	128
  2246  016B  022F               	subwf	??_DecodeGPS,w
  2247  016C  1D03               	skipz
  2248  016D  2970               	goto	u1975
  2249  016E  3006               	movlw	6
  2250  016F  0242               	subwf	DecodeGPS@x,w
  2251  0170                     u1975:	
  2252  0170  1803               	btfsc	3,0
  2253  0171  2992               	goto	l2345
  2254  0172                     l2339:	
  2255                           
  2256                           ;launcher_functions.c: 433: {
  2257                           ;launcher_functions.c: 434: if(gpsMessage[x] != messageID[x])
  2258  0172  0020               	movlb	0	; select bank0
  2259  0173  0842               	movf	DecodeGPS@x,w
  2260  0174  3E32               	addlw	DecodeGPS@messageID& (0+255)
  2261  0175  0086               	movwf	6
  2262  0176  0187               	clrf	7
  2263  0177  0842               	movf	DecodeGPS@x,w
  2264  0178  3E20               	addlw	_gpsMessage& (0+255)
  2265  0179  0084               	movwf	4
  2266  017A  3001               	movlw	1	; select bank2/3
  2267  017B  0085               	movwf	5
  2268  017C  0800               	movf	0,w
  2269  017D  0601               	xorwf	1,w
  2270  017E  1903               	skipnz
  2271  017F  2983               	goto	l2343
  2272                           
  2273                           ;launcher_functions.c: 435: {
  2274                           ;launcher_functions.c: 436: gpsInvalidFlag = 1;
  2275  0180  01E6               	clrf	_gpsInvalidFlag
  2276  0181  0AE6               	incf	_gpsInvalidFlag,f
  2277                           
  2278                           ;launcher_functions.c: 437: return;
  2279  0182  0008               	return
  2280  0183                     l2343:	
  2281  0183  3001               	movlw	1
  2282  0184  07C2               	addwf	DecodeGPS@x,f
  2283  0185  3000               	movlw	0
  2284  0186  3DC3               	addwfc	DecodeGPS@x+1,f
  2285  0187  0843               	movf	DecodeGPS@x+1,w
  2286  0188  3A80               	xorlw	128
  2287  0189  00AF               	movwf	??_DecodeGPS
  2288  018A  3080               	movlw	128
  2289  018B  022F               	subwf	??_DecodeGPS,w
  2290  018C  1D03               	skipz
  2291  018D  2990               	goto	u1995
  2292  018E  3006               	movlw	6
  2293  018F  0242               	subwf	DecodeGPS@x,w
  2294  0190                     u1995:	
  2295  0190  1C03               	skipc
  2296  0191  2972               	goto	l2339
  2297  0192                     l2345:	
  2298                           
  2299                           ;launcher_functions.c: 438: }
  2300                           ;launcher_functions.c: 439: }
  2301                           ;launcher_functions.c: 442: x = x + 1;
  2302  0192  0020               	movlb	0	; select bank0
  2303  0193  0842               	movf	DecodeGPS@x,w
  2304  0194  3E01               	addlw	1
  2305  0195  00C2               	movwf	DecodeGPS@x
  2306  0196  3000               	movlw	0
  2307  0197  3D43               	addwfc	DecodeGPS@x+1,w
  2308  0198  00C3               	movwf	DecodeGPS@x+1
  2309                           
  2310                           ;launcher_functions.c: 445: if(gpsMessage[x]!= ',')
  2311  0199  0842               	movf	DecodeGPS@x,w
  2312  019A  3E20               	addlw	_gpsMessage& (0+255)
  2313  019B  0086               	movwf	6
  2314  019C  3001               	movlw	1	; select bank2/3
  2315  019D  0087               	movwf	7
  2316  019E  0801               	movf	1,w
  2317  019F  3A2C               	xorlw	44
  2318  01A0  1903               	skipnz
  2319  01A1  2A3B               	goto	l2377
  2320                           
  2321                           ;launcher_functions.c: 446: {
  2322                           ;launcher_functions.c: 448: latitude[0] = (gpsMessage[x++] - 48)*10;
  2323  01A2  300A               	movlw	10
  2324  01A3  00AF               	movwf	??_DecodeGPS
  2325  01A4  082F               	movf	??_DecodeGPS,w
  2326  01A5  00A0               	movwf	___bmul@multiplicand
  2327  01A6  0842               	movf	DecodeGPS@x,w
  2328  01A7  3E20               	addlw	_gpsMessage& (0+255)
  2329  01A8  0086               	movwf	6
  2330  01A9  3001               	movlw	1	; select bank2/3
  2331  01AA  0087               	movwf	7
  2332  01AB  0801               	movf	1,w
  2333  01AC  3ED0               	addlw	208
  2334  01AD  318C  248A  3181   	fcall	___bmul
  2335  01B0  0020               	movlb	0	; select bank0
  2336  01B1  00B0               	movwf	??_DecodeGPS+1
  2337  01B2  0830               	movf	??_DecodeGPS+1,w
  2338  01B3  00BC               	movwf	DecodeGPS@latitude
  2339  01B4  3001               	movlw	1
  2340  01B5  07C2               	addwf	DecodeGPS@x,f
  2341  01B6  3000               	movlw	0
  2342  01B7  3DC3               	addwfc	DecodeGPS@x+1,f
  2343                           
  2344                           ;launcher_functions.c: 449: latitude[0] += (gpsMessage[x++] - 48);
  2345  01B8  0842               	movf	DecodeGPS@x,w
  2346  01B9  3E20               	addlw	_gpsMessage& (0+255)
  2347  01BA  0086               	movwf	6
  2348  01BB  3001               	movlw	1	; select bank2/3
  2349  01BC  0087               	movwf	7
  2350  01BD  0801               	movf	1,w
  2351  01BE  3ED0               	addlw	208
  2352  01BF  00AF               	movwf	??_DecodeGPS
  2353  01C0  082F               	movf	??_DecodeGPS,w
  2354  01C1  07BC               	addwf	DecodeGPS@latitude,f
  2355  01C2  3001               	movlw	1
  2356  01C3  07C2               	addwf	DecodeGPS@x,f
  2357  01C4  3000               	movlw	0
  2358  01C5  3DC3               	addwfc	DecodeGPS@x+1,f
  2359                           
  2360                           ;launcher_functions.c: 452: latitude[1] = (gpsMessage[x++] - 48)*10;
  2361  01C6  300A               	movlw	10
  2362  01C7  00AF               	movwf	??_DecodeGPS
  2363  01C8  082F               	movf	??_DecodeGPS,w
  2364  01C9  00A0               	movwf	___bmul@multiplicand
  2365  01CA  0842               	movf	DecodeGPS@x,w
  2366  01CB  3E20               	addlw	_gpsMessage& (0+255)
  2367  01CC  0086               	movwf	6
  2368  01CD  3001               	movlw	1	; select bank2/3
  2369  01CE  0087               	movwf	7
  2370  01CF  0801               	movf	1,w
  2371  01D0  3ED0               	addlw	208
  2372  01D1  318C  248A  3181   	fcall	___bmul
  2373  01D4  0020               	movlb	0	; select bank0
  2374  01D5  00B0               	movwf	??_DecodeGPS+1
  2375  01D6  0830               	movf	??_DecodeGPS+1,w
  2376  01D7  00BD               	movwf	DecodeGPS@latitude+1
  2377  01D8  3001               	movlw	1
  2378  01D9  07C2               	addwf	DecodeGPS@x,f
  2379  01DA  3000               	movlw	0
  2380  01DB  3DC3               	addwfc	DecodeGPS@x+1,f
  2381                           
  2382                           ;launcher_functions.c: 453: latitude[1] += (gpsMessage[x++] - 48);
  2383  01DC  0842               	movf	DecodeGPS@x,w
  2384  01DD  3E20               	addlw	_gpsMessage& (0+255)
  2385  01DE  0086               	movwf	6
  2386  01DF  3001               	movlw	1	; select bank2/3
  2387  01E0  0087               	movwf	7
  2388  01E1  0801               	movf	1,w
  2389  01E2  3ED0               	addlw	208
  2390  01E3  00AF               	movwf	??_DecodeGPS
  2391  01E4  082F               	movf	??_DecodeGPS,w
  2392  01E5  07BD               	addwf	DecodeGPS@latitude+1,f
  2393  01E6  3001               	movlw	1
  2394  01E7  07C2               	addwf	DecodeGPS@x,f
  2395  01E8  3000               	movlw	0
  2396  01E9  3DC3               	addwfc	DecodeGPS@x+1,f
  2397                           
  2398                           ;launcher_functions.c: 456: x = x + 1;
  2399  01EA  0842               	movf	DecodeGPS@x,w
  2400  01EB  3E01               	addlw	1
  2401  01EC  00C2               	movwf	DecodeGPS@x
  2402  01ED  3000               	movlw	0
  2403  01EE  3D43               	addwfc	DecodeGPS@x+1,w
  2404  01EF  00C3               	movwf	DecodeGPS@x+1
  2405                           
  2406                           ;launcher_functions.c: 459: latitude[2] = (gpsMessage[x++] - 48)*10;
  2407  01F0  300A               	movlw	10
  2408  01F1  00AF               	movwf	??_DecodeGPS
  2409  01F2  082F               	movf	??_DecodeGPS,w
  2410  01F3  00A0               	movwf	___bmul@multiplicand
  2411  01F4  0842               	movf	DecodeGPS@x,w
  2412  01F5  3E20               	addlw	_gpsMessage& (0+255)
  2413  01F6  0086               	movwf	6
  2414  01F7  3001               	movlw	1	; select bank2/3
  2415  01F8  0087               	movwf	7
  2416  01F9  0801               	movf	1,w
  2417  01FA  3ED0               	addlw	208
  2418  01FB  318C  248A  3181   	fcall	___bmul
  2419  01FE  0020               	movlb	0	; select bank0
  2420  01FF  00B0               	movwf	??_DecodeGPS+1
  2421  0200  0830               	movf	??_DecodeGPS+1,w
  2422  0201  00BE               	movwf	DecodeGPS@latitude+2
  2423  0202  3001               	movlw	1
  2424  0203  07C2               	addwf	DecodeGPS@x,f
  2425  0204  3000               	movlw	0
  2426  0205  3DC3               	addwfc	DecodeGPS@x+1,f
  2427                           
  2428                           ;launcher_functions.c: 460: latitude[2] += (gpsMessage[x++] - 48);
  2429  0206  0842               	movf	DecodeGPS@x,w
  2430  0207  3E20               	addlw	_gpsMessage& (0+255)
  2431  0208  0086               	movwf	6
  2432  0209  3001               	movlw	1	; select bank2/3
  2433  020A  0087               	movwf	7
  2434  020B  0801               	movf	1,w
  2435  020C  3ED0               	addlw	208
  2436  020D  00AF               	movwf	??_DecodeGPS
  2437  020E  082F               	movf	??_DecodeGPS,w
  2438  020F  07BE               	addwf	DecodeGPS@latitude+2,f
  2439  0210  3001               	movlw	1
  2440  0211  07C2               	addwf	DecodeGPS@x,f
  2441  0212  3000               	movlw	0
  2442  0213  3DC3               	addwfc	DecodeGPS@x+1,f
  2443                           
  2444                           ;launcher_functions.c: 461: latitude[2] = (latitude[2]*60)/100;
  2445  0214  3064               	movlw	100
  2446  0215  00A6               	movwf	___awdiv@divisor
  2447  0216  3000               	movlw	0
  2448  0217  00A7               	movwf	___awdiv@divisor+1
  2449  0218  083E               	movf	DecodeGPS@latitude+2,w
  2450  0219  00AF               	movwf	??_DecodeGPS
  2451  021A  01B0               	clrf	??_DecodeGPS+1
  2452  021B  082F               	movf	??_DecodeGPS,w
  2453  021C  00A0               	movwf	___wmul@multiplier
  2454  021D  0830               	movf	??_DecodeGPS+1,w
  2455  021E  00A1               	movwf	___wmul@multiplier+1
  2456  021F  303C               	movlw	60
  2457  0220  00A2               	movwf	___wmul@multiplicand
  2458  0221  3000               	movlw	0
  2459  0222  00A3               	movwf	___wmul@multiplicand+1
  2460  0223  318D  2540  3181   	fcall	___wmul
  2461  0226  0020               	movlb	0	; select bank0
  2462  0227  0821               	movf	?___wmul+1,w
  2463  0228  01A9               	clrf	___awdiv@dividend+1
  2464  0229  07A9               	addwf	___awdiv@dividend+1,f
  2465  022A  0820               	movf	?___wmul,w
  2466  022B  01A8               	clrf	___awdiv@dividend
  2467  022C  07A8               	addwf	___awdiv@dividend,f
  2468  022D  318E  2660  3181   	fcall	___awdiv
  2469  0230  0020               	movlb	0	; select bank0
  2470  0231  0826               	movf	?___awdiv,w
  2471  0232  00B1               	movwf	??_DecodeGPS+2
  2472  0233  0831               	movf	??_DecodeGPS+2,w
  2473  0234  00BE               	movwf	DecodeGPS@latitude+2
  2474                           
  2475                           ;launcher_functions.c: 464: x = x + 2;
  2476  0235  0842               	movf	DecodeGPS@x,w
  2477  0236  3E02               	addlw	2
  2478  0237  00C2               	movwf	DecodeGPS@x
  2479  0238  3000               	movlw	0
  2480  0239  3D43               	addwfc	DecodeGPS@x+1,w
  2481  023A  00C3               	movwf	DecodeGPS@x+1
  2482  023B                     l2377:	
  2483                           
  2484                           ;launcher_functions.c: 465: }
  2485                           ;launcher_functions.c: 468: x = x + 1;
  2486  023B  0842               	movf	DecodeGPS@x,w
  2487  023C  3E01               	addlw	1
  2488  023D  00C2               	movwf	DecodeGPS@x
  2489  023E  3000               	movlw	0
  2490  023F  3D43               	addwfc	DecodeGPS@x+1,w
  2491  0240  00C3               	movwf	DecodeGPS@x+1
  2492                           
  2493                           ;launcher_functions.c: 471: if(gpsMessage[x] != ',')
  2494  0241  0842               	movf	DecodeGPS@x,w
  2495  0242  3E20               	addlw	_gpsMessage& (0+255)
  2496  0243  0086               	movwf	6
  2497  0244  3001               	movlw	1	; select bank2/3
  2498  0245  0087               	movwf	7
  2499  0246  0801               	movf	1,w
  2500  0247  3A2C               	xorlw	44
  2501  0248  1903               	skipnz
  2502  0249  2A57               	goto	l2385
  2503                           
  2504                           ;launcher_functions.c: 472: northSouth = gpsMessage[x++];
  2505  024A  0842               	movf	DecodeGPS@x,w
  2506  024B  3E20               	addlw	_gpsMessage& (0+255)
  2507  024C  0086               	movwf	6
  2508  024D  3001               	movlw	1	; select bank2/3
  2509  024E  0087               	movwf	7
  2510  024F  0801               	movf	1,w
  2511  0250  00AF               	movwf	??_DecodeGPS
  2512  0251  082F               	movf	??_DecodeGPS,w
  2513  0252  00B9               	movwf	DecodeGPS@northSouth
  2514  0253  3001               	movlw	1
  2515  0254  07C2               	addwf	DecodeGPS@x,f
  2516  0255  3000               	movlw	0
  2517  0256  3DC3               	addwfc	DecodeGPS@x+1,f
  2518  0257                     l2385:	
  2519                           
  2520                           ;launcher_functions.c: 475: x = x + 1;
  2521  0257  0842               	movf	DecodeGPS@x,w
  2522  0258  3E01               	addlw	1
  2523  0259  00C2               	movwf	DecodeGPS@x
  2524  025A  3000               	movlw	0
  2525  025B  3D43               	addwfc	DecodeGPS@x+1,w
  2526  025C  00C3               	movwf	DecodeGPS@x+1
  2527                           
  2528                           ;launcher_functions.c: 478: if(gpsMessage[x]!= ',')
  2529  025D  0842               	movf	DecodeGPS@x,w
  2530  025E  3E20               	addlw	_gpsMessage& (0+255)
  2531  025F  0086               	movwf	6
  2532  0260  3001               	movlw	1	; select bank2/3
  2533  0261  0087               	movwf	7
  2534  0262  0801               	movf	1,w
  2535  0263  3A2C               	xorlw	44
  2536  0264  1903               	skipnz
  2537  0265  2B15               	goto	l2421
  2538                           
  2539                           ;launcher_functions.c: 479: {
  2540                           ;launcher_functions.c: 481: longitude[0] = (gpsMessage[x++] - 48)*100;
  2541  0266  3064               	movlw	100
  2542  0267  00AF               	movwf	??_DecodeGPS
  2543  0268  082F               	movf	??_DecodeGPS,w
  2544  0269  00A0               	movwf	___bmul@multiplicand
  2545  026A  0842               	movf	DecodeGPS@x,w
  2546  026B  3E20               	addlw	_gpsMessage& (0+255)
  2547  026C  0086               	movwf	6
  2548  026D  3001               	movlw	1	; select bank2/3
  2549  026E  0087               	movwf	7
  2550  026F  0801               	movf	1,w
  2551  0270  3ED0               	addlw	208
  2552  0271  318C  248A  3181   	fcall	___bmul
  2553  0274  0020               	movlb	0	; select bank0
  2554  0275  00B0               	movwf	??_DecodeGPS+1
  2555  0276  0830               	movf	??_DecodeGPS+1,w
  2556  0277  00BF               	movwf	DecodeGPS@longitude
  2557  0278  3001               	movlw	1
  2558  0279  07C2               	addwf	DecodeGPS@x,f
  2559  027A  3000               	movlw	0
  2560  027B  3DC3               	addwfc	DecodeGPS@x+1,f
  2561                           
  2562                           ;launcher_functions.c: 482: longitude[0] += (gpsMessage[x++] - 48)*10;
  2563  027C  300A               	movlw	10
  2564  027D  00AF               	movwf	??_DecodeGPS
  2565  027E  082F               	movf	??_DecodeGPS,w
  2566  027F  00A0               	movwf	___bmul@multiplicand
  2567  0280  0842               	movf	DecodeGPS@x,w
  2568  0281  3E20               	addlw	_gpsMessage& (0+255)
  2569  0282  0086               	movwf	6
  2570  0283  3001               	movlw	1	; select bank2/3
  2571  0284  0087               	movwf	7
  2572  0285  0801               	movf	1,w
  2573  0286  3ED0               	addlw	208
  2574  0287  318C  248A  3181   	fcall	___bmul
  2575  028A  0020               	movlb	0	; select bank0
  2576  028B  00B0               	movwf	??_DecodeGPS+1
  2577  028C  0830               	movf	??_DecodeGPS+1,w
  2578  028D  07BF               	addwf	DecodeGPS@longitude,f
  2579  028E  3001               	movlw	1
  2580  028F  07C2               	addwf	DecodeGPS@x,f
  2581  0290  3000               	movlw	0
  2582  0291  3DC3               	addwfc	DecodeGPS@x+1,f
  2583                           
  2584                           ;launcher_functions.c: 483: longitude[0] += (gpsMessage[x++] - 48);
  2585  0292  0842               	movf	DecodeGPS@x,w
  2586  0293  3E20               	addlw	_gpsMessage& (0+255)
  2587  0294  0086               	movwf	6
  2588  0295  3001               	movlw	1	; select bank2/3
  2589  0296  0087               	movwf	7
  2590  0297  0801               	movf	1,w
  2591  0298  3ED0               	addlw	208
  2592  0299  00AF               	movwf	??_DecodeGPS
  2593  029A  082F               	movf	??_DecodeGPS,w
  2594  029B  07BF               	addwf	DecodeGPS@longitude,f
  2595  029C  3001               	movlw	1
  2596  029D  07C2               	addwf	DecodeGPS@x,f
  2597  029E  3000               	movlw	0
  2598  029F  3DC3               	addwfc	DecodeGPS@x+1,f
  2599                           
  2600                           ;launcher_functions.c: 486: longitude[1] = (gpsMessage[x++] - 48)*10;
  2601  02A0  300A               	movlw	10
  2602  02A1  00AF               	movwf	??_DecodeGPS
  2603  02A2  082F               	movf	??_DecodeGPS,w
  2604  02A3  00A0               	movwf	___bmul@multiplicand
  2605  02A4  0842               	movf	DecodeGPS@x,w
  2606  02A5  3E20               	addlw	_gpsMessage& (0+255)
  2607  02A6  0086               	movwf	6
  2608  02A7  3001               	movlw	1	; select bank2/3
  2609  02A8  0087               	movwf	7
  2610  02A9  0801               	movf	1,w
  2611  02AA  3ED0               	addlw	208
  2612  02AB  318C  248A  3181   	fcall	___bmul
  2613  02AE  0020               	movlb	0	; select bank0
  2614  02AF  00B0               	movwf	??_DecodeGPS+1
  2615  02B0  0830               	movf	??_DecodeGPS+1,w
  2616  02B1  00C0               	movwf	DecodeGPS@longitude+1
  2617  02B2  3001               	movlw	1
  2618  02B3  07C2               	addwf	DecodeGPS@x,f
  2619  02B4  3000               	movlw	0
  2620  02B5  3DC3               	addwfc	DecodeGPS@x+1,f
  2621                           
  2622                           ;launcher_functions.c: 487: longitude[1] += (gpsMessage[x++] - 48);
  2623  02B6  0842               	movf	DecodeGPS@x,w
  2624  02B7  3E20               	addlw	_gpsMessage& (0+255)
  2625  02B8  0086               	movwf	6
  2626  02B9  3001               	movlw	1	; select bank2/3
  2627  02BA  0087               	movwf	7
  2628  02BB  0801               	movf	1,w
  2629  02BC  3ED0               	addlw	208
  2630  02BD  00AF               	movwf	??_DecodeGPS
  2631  02BE  082F               	movf	??_DecodeGPS,w
  2632  02BF  07C0               	addwf	DecodeGPS@longitude+1,f
  2633  02C0  3001               	movlw	1
  2634  02C1  07C2               	addwf	DecodeGPS@x,f
  2635  02C2  3000               	movlw	0
  2636  02C3  3DC3               	addwfc	DecodeGPS@x+1,f
  2637                           
  2638                           ;launcher_functions.c: 490: x = x + 1;
  2639  02C4  0842               	movf	DecodeGPS@x,w
  2640  02C5  3E01               	addlw	1
  2641  02C6  00C2               	movwf	DecodeGPS@x
  2642  02C7  3000               	movlw	0
  2643  02C8  3D43               	addwfc	DecodeGPS@x+1,w
  2644  02C9  00C3               	movwf	DecodeGPS@x+1
  2645                           
  2646                           ;launcher_functions.c: 493: longitude[2] = (gpsMessage[x++] - 48)*10;
  2647  02CA  300A               	movlw	10
  2648  02CB  00AF               	movwf	??_DecodeGPS
  2649  02CC  082F               	movf	??_DecodeGPS,w
  2650  02CD  00A0               	movwf	___bmul@multiplicand
  2651  02CE  0842               	movf	DecodeGPS@x,w
  2652  02CF  3E20               	addlw	_gpsMessage& (0+255)
  2653  02D0  0086               	movwf	6
  2654  02D1  3001               	movlw	1	; select bank2/3
  2655  02D2  0087               	movwf	7
  2656  02D3  0801               	movf	1,w
  2657  02D4  3ED0               	addlw	208
  2658  02D5  318C  248A  3181   	fcall	___bmul
  2659  02D8  0020               	movlb	0	; select bank0
  2660  02D9  00B0               	movwf	??_DecodeGPS+1
  2661  02DA  0830               	movf	??_DecodeGPS+1,w
  2662  02DB  00C1               	movwf	DecodeGPS@longitude+2
  2663  02DC  3001               	movlw	1
  2664  02DD  07C2               	addwf	DecodeGPS@x,f
  2665  02DE  3000               	movlw	0
  2666  02DF  3DC3               	addwfc	DecodeGPS@x+1,f
  2667                           
  2668                           ;launcher_functions.c: 494: longitude[2] += (gpsMessage[x++] - 48);
  2669  02E0  0842               	movf	DecodeGPS@x,w
  2670  02E1  3E20               	addlw	_gpsMessage& (0+255)
  2671  02E2  0086               	movwf	6
  2672  02E3  3001               	movlw	1	; select bank2/3
  2673  02E4  0087               	movwf	7
  2674  02E5  0801               	movf	1,w
  2675  02E6  3ED0               	addlw	208
  2676  02E7  00AF               	movwf	??_DecodeGPS
  2677  02E8  082F               	movf	??_DecodeGPS,w
  2678  02E9  07C1               	addwf	DecodeGPS@longitude+2,f
  2679  02EA  3001               	movlw	1
  2680  02EB  07C2               	addwf	DecodeGPS@x,f
  2681  02EC  3000               	movlw	0
  2682  02ED  3DC3               	addwfc	DecodeGPS@x+1,f
  2683                           
  2684                           ;launcher_functions.c: 495: longitude[2] = (longitude[2]*60)/100;
  2685  02EE  3064               	movlw	100
  2686  02EF  00A6               	movwf	___awdiv@divisor
  2687  02F0  3000               	movlw	0
  2688  02F1  00A7               	movwf	___awdiv@divisor+1
  2689  02F2  0841               	movf	DecodeGPS@longitude+2,w
  2690  02F3  00AF               	movwf	??_DecodeGPS
  2691  02F4  01B0               	clrf	??_DecodeGPS+1
  2692  02F5  082F               	movf	??_DecodeGPS,w
  2693  02F6  00A0               	movwf	___wmul@multiplier
  2694  02F7  0830               	movf	??_DecodeGPS+1,w
  2695  02F8  00A1               	movwf	___wmul@multiplier+1
  2696  02F9  303C               	movlw	60
  2697  02FA  00A2               	movwf	___wmul@multiplicand
  2698  02FB  3000               	movlw	0
  2699  02FC  00A3               	movwf	___wmul@multiplicand+1
  2700  02FD  318D  2540  3181   	fcall	___wmul
  2701  0300  0020               	movlb	0	; select bank0
  2702  0301  0821               	movf	?___wmul+1,w
  2703  0302  01A9               	clrf	___awdiv@dividend+1
  2704  0303  07A9               	addwf	___awdiv@dividend+1,f
  2705  0304  0820               	movf	?___wmul,w
  2706  0305  01A8               	clrf	___awdiv@dividend
  2707  0306  07A8               	addwf	___awdiv@dividend,f
  2708  0307  318E  2660  3181   	fcall	___awdiv
  2709  030A  0020               	movlb	0	; select bank0
  2710  030B  0826               	movf	?___awdiv,w
  2711  030C  00B1               	movwf	??_DecodeGPS+2
  2712  030D  0831               	movf	??_DecodeGPS+2,w
  2713  030E  00C1               	movwf	DecodeGPS@longitude+2
  2714                           
  2715                           ;launcher_functions.c: 498: x = x + 2;
  2716  030F  0842               	movf	DecodeGPS@x,w
  2717  0310  3E02               	addlw	2
  2718  0311  00C2               	movwf	DecodeGPS@x
  2719  0312  3000               	movlw	0
  2720  0313  3D43               	addwfc	DecodeGPS@x+1,w
  2721  0314  00C3               	movwf	DecodeGPS@x+1
  2722  0315                     l2421:	
  2723                           
  2724                           ;launcher_functions.c: 499: }
  2725                           ;launcher_functions.c: 502: x = x + 1;
  2726  0315  0842               	movf	DecodeGPS@x,w
  2727  0316  3E01               	addlw	1
  2728  0317  00C2               	movwf	DecodeGPS@x
  2729  0318  3000               	movlw	0
  2730  0319  3D43               	addwfc	DecodeGPS@x+1,w
  2731  031A  00C3               	movwf	DecodeGPS@x+1
  2732                           
  2733                           ;launcher_functions.c: 505: if(gpsMessage[x] != ',')
  2734  031B  0842               	movf	DecodeGPS@x,w
  2735  031C  3E20               	addlw	_gpsMessage& (0+255)
  2736  031D  0086               	movwf	6
  2737  031E  3001               	movlw	1	; select bank2/3
  2738  031F  0087               	movwf	7
  2739  0320  0801               	movf	1,w
  2740  0321  3A2C               	xorlw	44
  2741  0322  1903               	skipnz
  2742  0323  2B31               	goto	l2429
  2743                           
  2744                           ;launcher_functions.c: 506: eastWest = gpsMessage[x++];
  2745  0324  0842               	movf	DecodeGPS@x,w
  2746  0325  3E20               	addlw	_gpsMessage& (0+255)
  2747  0326  0086               	movwf	6
  2748  0327  3001               	movlw	1	; select bank2/3
  2749  0328  0087               	movwf	7
  2750  0329  0801               	movf	1,w
  2751  032A  00AF               	movwf	??_DecodeGPS
  2752  032B  082F               	movf	??_DecodeGPS,w
  2753  032C  00BA               	movwf	DecodeGPS@eastWest
  2754  032D  3001               	movlw	1
  2755  032E  07C2               	addwf	DecodeGPS@x,f
  2756  032F  3000               	movlw	0
  2757  0330  3DC3               	addwfc	DecodeGPS@x+1,f
  2758  0331                     l2429:	
  2759                           
  2760                           ;launcher_functions.c: 509: x = x + 1;
  2761  0331  0842               	movf	DecodeGPS@x,w
  2762  0332  3E01               	addlw	1
  2763  0333  00C2               	movwf	DecodeGPS@x
  2764  0334  3000               	movlw	0
  2765  0335  3D43               	addwfc	DecodeGPS@x+1,w
  2766  0336  00C3               	movwf	DecodeGPS@x+1
  2767  0337                     l2431:	
  2768                           ;launcher_functions.c: 512: while(gpsMessage[x++] != ','){}
  2769                           
  2770  0337  0843               	movf	DecodeGPS@x+1,w
  2771  0338  00B0               	movwf	??_DecodeGPS+1
  2772  0339  0842               	movf	DecodeGPS@x,w
  2773  033A  00AF               	movwf	??_DecodeGPS
  2774  033B  0AC2               	incf	DecodeGPS@x,f
  2775  033C  1903               	skipnz
  2776  033D  0AC3               	incf	DecodeGPS@x+1,f
  2777  033E  082F               	movf	??_DecodeGPS,w
  2778  033F  3E20               	addlw	_gpsMessage& (0+255)
  2779  0340  0086               	movwf	6
  2780  0341  3001               	movlw	1	; select bank2/3
  2781  0342  0087               	movwf	7
  2782  0343  0801               	movf	1,w
  2783  0344  3A2C               	xorlw	44
  2784  0345  1D03               	skipz
  2785  0346  2B37               	goto	l2431
  2786                           
  2787                           ;launcher_functions.c: 515: status = gpsMessage[x];
  2788  0347  0842               	movf	DecodeGPS@x,w
  2789  0348  3E20               	addlw	_gpsMessage& (0+255)
  2790  0349  0086               	movwf	6
  2791  034A  3001               	movlw	1	; select bank2/3
  2792  034B  0087               	movwf	7
  2793  034C  0801               	movf	1,w
  2794  034D  00AF               	movwf	??_DecodeGPS
  2795  034E  082F               	movf	??_DecodeGPS,w
  2796  034F  00BB               	movwf	DecodeGPS@status
  2797                           
  2798                           ;launcher_functions.c: 517: if(status == 'A')
  2799  0350  083B               	movf	DecodeGPS@status,w
  2800  0351  3A41               	xorlw	65
  2801  0352  1D03               	skipz
  2802  0353  2B56               	goto	l416
  2803                           
  2804                           ;launcher_functions.c: 518: gpsInvalidFlag = 0;
  2805  0354  01E6               	clrf	_gpsInvalidFlag
  2806  0355  2B58               	goto	l2439
  2807  0356                     l416:	
  2808                           
  2809                           ;launcher_functions.c: 519: else
  2810                           ;launcher_functions.c: 520: gpsInvalidFlag = 1;
  2811  0356  01E6               	clrf	_gpsInvalidFlag
  2812  0357  0AE6               	incf	_gpsInvalidFlag,f
  2813  0358                     l2439:	
  2814                           
  2815                           ;launcher_functions.c: 524: if(!gpsInvalidFlag)
  2816  0358  08E6               	movf	_gpsInvalidFlag,f
  2817  0359  1D03               	skipz
  2818  035A  0008               	return
  2819                           
  2820                           ;launcher_functions.c: 525: {
  2821                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  2822  035B  01C2               	clrf	DecodeGPS@x
  2823  035C  01C3               	clrf	DecodeGPS@x+1
  2824  035D  0843               	movf	DecodeGPS@x+1,w
  2825  035E  3A80               	xorlw	128
  2826  035F  00AF               	movwf	??_DecodeGPS
  2827  0360  3080               	movlw	128
  2828  0361  022F               	subwf	??_DecodeGPS,w
  2829  0362  1D03               	skipz
  2830  0363  2B66               	goto	u2075
  2831  0364  3003               	movlw	3
  2832  0365  0242               	subwf	DecodeGPS@x,w
  2833  0366                     u2075:	
  2834  0366  1803               	btfsc	3,0
  2835  0367  2B90               	goto	l2453
  2836  0368                     l2447:	
  2837                           
  2838                           ;launcher_functions.c: 528: {
  2839                           ;launcher_functions.c: 529: validLatitude[x] = latitude[x];
  2840  0368  0020               	movlb	0	; select bank0
  2841  0369  0842               	movf	DecodeGPS@x,w
  2842  036A  3E3C               	addlw	DecodeGPS@latitude& (0+255)
  2843  036B  0086               	movwf	6
  2844  036C  0187               	clrf	7
  2845  036D  0801               	movf	1,w
  2846  036E  00AF               	movwf	??_DecodeGPS
  2847  036F  0842               	movf	DecodeGPS@x,w
  2848  0370  3E63               	addlw	_validLatitude& (0+255)
  2849  0371  0086               	movwf	6
  2850  0372  0187               	clrf	7
  2851  0373  082F               	movf	??_DecodeGPS,w
  2852  0374  0081               	movwf	1
  2853                           
  2854                           ;launcher_functions.c: 530: validLongitude[x] = longitude[x];
  2855  0375  0842               	movf	DecodeGPS@x,w
  2856  0376  3E3F               	addlw	DecodeGPS@longitude& (0+255)
  2857  0377  0086               	movwf	6
  2858  0378  0187               	clrf	7
  2859  0379  0801               	movf	1,w
  2860  037A  00AF               	movwf	??_DecodeGPS
  2861  037B  0842               	movf	DecodeGPS@x,w
  2862  037C  3EEC               	addlw	_validLongitude& (0+255)
  2863  037D  0086               	movwf	6
  2864  037E  0187               	clrf	7
  2865  037F  082F               	movf	??_DecodeGPS,w
  2866  0380  0081               	movwf	1
  2867  0381  3001               	movlw	1
  2868  0382  07C2               	addwf	DecodeGPS@x,f
  2869  0383  3000               	movlw	0
  2870  0384  3DC3               	addwfc	DecodeGPS@x+1,f
  2871  0385  0843               	movf	DecodeGPS@x+1,w
  2872  0386  3A80               	xorlw	128
  2873  0387  00AF               	movwf	??_DecodeGPS
  2874  0388  3080               	movlw	128
  2875  0389  022F               	subwf	??_DecodeGPS,w
  2876  038A  1D03               	skipz
  2877  038B  2B8E               	goto	u2085
  2878  038C  3003               	movlw	3
  2879  038D  0242               	subwf	DecodeGPS@x,w
  2880  038E                     u2085:	
  2881  038E  1C03               	skipc
  2882  038F  2B68               	goto	l2447
  2883  0390                     l2453:	
  2884                           
  2885                           ;launcher_functions.c: 531: }
  2886                           ;launcher_functions.c: 532: validNorthSouth = northSouth;
  2887  0390  0020               	movlb	0	; select bank0
  2888  0391  0839               	movf	DecodeGPS@northSouth,w
  2889  0392  00AF               	movwf	??_DecodeGPS
  2890  0393  082F               	movf	??_DecodeGPS,w
  2891  0394  00E8               	movwf	_validNorthSouth
  2892                           
  2893                           ;launcher_functions.c: 533: validEastWest = eastWest;
  2894  0395  083A               	movf	DecodeGPS@eastWest,w
  2895  0396  00AF               	movwf	??_DecodeGPS
  2896  0397  082F               	movf	??_DecodeGPS,w
  2897  0398  00E7               	movwf	_validEastWest
  2898                           
  2899                           ;launcher_functions.c: 535: hasValidGPSFlag = 1;
  2900  0399  01EA               	clrf	_hasValidGPSFlag
  2901  039A  0AEA               	incf	_hasValidGPSFlag,f
  2902  039B  0008               	return
  2903  039C                     __end_of_DecodeGPS:	
  2904                           
  2905                           	psect	text3
  2906  0D40                     __ptext3:	
  2907 ;; *************** function ___wmul *****************
  2908 ;; Defined at:
  2909 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2912 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  product         2    4[BANK0 ] unsigned int 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2    0[BANK0 ] unsigned int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2924 ;;      Params:         0       4       0       0       0       0       0
  2925 ;;      Locals:         0       2       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0
  2927 ;;      Totals:         0       6       0       0       0       0       0
  2928 ;;Total ram usage:        6 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    2
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_DecodeGPS
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function ___wmul
  2940  0D40                     ___wmul:	
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2944  0D40  0020               	movlb	0	; select bank0
  2945  0D41  01A4               	clrf	___wmul@product
  2946  0D42  01A5               	clrf	___wmul@product+1
  2947  0D43                     l2093:	
  2948  0D43  1C20               	btfss	___wmul@multiplier,0
  2949  0D44  2D49               	goto	l600
  2950  0D45  0822               	movf	___wmul@multiplicand,w
  2951  0D46  07A4               	addwf	___wmul@product,f
  2952  0D47  0823               	movf	___wmul@multiplicand+1,w
  2953  0D48  3DA5               	addwfc	___wmul@product+1,f
  2954  0D49                     l600:	
  2955  0D49  3001               	movlw	1
  2956  0D4A                     u1525:	
  2957  0D4A  35A2               	lslf	___wmul@multiplicand,f
  2958  0D4B  0DA3               	rlf	___wmul@multiplicand+1,f
  2959  0D4C  0B89               	decfsz	9,f
  2960  0D4D  2D4A               	goto	u1525
  2961  0D4E  3001               	movlw	1
  2962  0D4F                     u1535:	
  2963  0D4F  36A1               	lsrf	___wmul@multiplier+1,f
  2964  0D50  0CA0               	rrf	___wmul@multiplier,f
  2965  0D51  0B89               	decfsz	9,f
  2966  0D52  2D4F               	goto	u1535
  2967  0D53  0821               	movf	___wmul@multiplier+1,w
  2968  0D54  0420               	iorwf	___wmul@multiplier,w
  2969  0D55  1D03               	skipz
  2970  0D56  2D43               	goto	l2093
  2971  0D57  0825               	movf	___wmul@product+1,w
  2972  0D58  01A1               	clrf	?___wmul+1
  2973  0D59  07A1               	addwf	?___wmul+1,f
  2974  0D5A  0824               	movf	___wmul@product,w
  2975  0D5B  01A0               	clrf	?___wmul
  2976  0D5C  07A0               	addwf	?___wmul,f
  2977  0D5D  0008               	return
  2978  0D5E                     __end_of___wmul:	
  2979                           
  2980                           	psect	text4
  2981  0C8A                     __ptext4:	
  2982 ;; *************** function ___bmul *****************
  2983 ;; Defined at:
  2984 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  multiplier      1    wreg     unsigned char 
  2987 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2990 ;;  product         1    2[BANK0 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      unsigned char 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3000 ;;      Params:         0       1       0       0       0       0       0
  3001 ;;      Locals:         0       2       0       0       0       0       0
  3002 ;;      Temps:          0       1       0       0       0       0       0
  3003 ;;      Totals:         0       4       0       0       0       0       0
  3004 ;;Total ram usage:        4 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    2
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_DecodeGPS
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function ___bmul
  3016  0C8A                     ___bmul:	
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3020                           ;___bmul@multiplier stored from wreg
  3021  0C8A  0020               	movlb	0	; select bank0
  3022  0C8B  00A3               	movwf	___bmul@multiplier
  3023  0C8C  01A2               	clrf	___bmul@product
  3024  0C8D                     l2105:	
  3025  0C8D  1C23               	btfss	___bmul@multiplier,0
  3026  0C8E  2C93               	goto	l2109
  3027  0C8F  0820               	movf	___bmul@multiplicand,w
  3028  0C90  00A1               	movwf	??___bmul
  3029  0C91  0821               	movf	??___bmul,w
  3030  0C92  07A2               	addwf	___bmul@product,f
  3031  0C93                     l2109:	
  3032  0C93  1003               	clrc
  3033  0C94  0DA0               	rlf	___bmul@multiplicand,f
  3034  0C95  1003               	clrc
  3035  0C96  0CA3               	rrf	___bmul@multiplier,f
  3036  0C97  08A3               	movf	___bmul@multiplier,f
  3037  0C98  1D03               	skipz
  3038  0C99  2C8D               	goto	l2105
  3039  0C9A  0822               	movf	___bmul@product,w
  3040  0C9B  0008               	return
  3041  0C9C                     __end_of___bmul:	
  3042                           
  3043                           	psect	text5
  3044  0E60                     __ptext5:	
  3045 ;; *************** function ___awdiv *****************
  3046 ;; Defined at:
  3047 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  divisor         2    6[BANK0 ] int 
  3050 ;;  dividend        2    8[BANK0 ] int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  quotient        2   13[BANK0 ] int 
  3053 ;;  sign            1   12[BANK0 ] unsigned char 
  3054 ;;  counter         1   11[BANK0 ] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2    6[BANK0 ] int 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3064 ;;      Params:         0       4       0       0       0       0       0
  3065 ;;      Locals:         0       4       0       0       0       0       0
  3066 ;;      Temps:          0       1       0       0       0       0       0
  3067 ;;      Totals:         0       9       0       0       0       0       0
  3068 ;;Total ram usage:        9 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    2
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_DecodeGPS
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function ___awdiv
  3080  0E60                     ___awdiv:	
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3084  0E60  0020               	movlb	0	; select bank0
  3085  0E61  01AC               	clrf	___awdiv@sign
  3086  0E62  1FA7               	btfss	___awdiv@divisor+1,7
  3087  0E63  2E6B               	goto	l2127
  3088  0E64  09A6               	comf	___awdiv@divisor,f
  3089  0E65  09A7               	comf	___awdiv@divisor+1,f
  3090  0E66  0AA6               	incf	___awdiv@divisor,f
  3091  0E67  1903               	skipnz
  3092  0E68  0AA7               	incf	___awdiv@divisor+1,f
  3093  0E69  01AC               	clrf	___awdiv@sign
  3094  0E6A  0AAC               	incf	___awdiv@sign,f
  3095  0E6B                     l2127:	
  3096  0E6B  1FA9               	btfss	___awdiv@dividend+1,7
  3097  0E6C  2E76               	goto	l2133
  3098  0E6D  09A8               	comf	___awdiv@dividend,f
  3099  0E6E  09A9               	comf	___awdiv@dividend+1,f
  3100  0E6F  0AA8               	incf	___awdiv@dividend,f
  3101  0E70  1903               	skipnz
  3102  0E71  0AA9               	incf	___awdiv@dividend+1,f
  3103  0E72  3001               	movlw	1
  3104  0E73  00AA               	movwf	??___awdiv
  3105  0E74  082A               	movf	??___awdiv,w
  3106  0E75  06AC               	xorwf	___awdiv@sign,f
  3107  0E76                     l2133:	
  3108  0E76  01AD               	clrf	___awdiv@quotient
  3109  0E77  01AE               	clrf	___awdiv@quotient+1
  3110  0E78  0827               	movf	___awdiv@divisor+1,w
  3111  0E79  0426               	iorwf	___awdiv@divisor,w
  3112  0E7A  1903               	skipnz
  3113  0E7B  2EA5               	goto	l2155
  3114  0E7C  01AB               	clrf	___awdiv@counter
  3115  0E7D  0AAB               	incf	___awdiv@counter,f
  3116  0E7E                     l2143:	
  3117  0E7E  1BA7               	btfsc	___awdiv@divisor+1,7
  3118  0E7F  2E8A               	goto	l2145
  3119  0E80  3001               	movlw	1
  3120  0E81                     u1605:	
  3121  0E81  35A6               	lslf	___awdiv@divisor,f
  3122  0E82  0DA7               	rlf	___awdiv@divisor+1,f
  3123  0E83  0B89               	decfsz	9,f
  3124  0E84  2E81               	goto	u1605
  3125  0E85  3001               	movlw	1
  3126  0E86  00AA               	movwf	??___awdiv
  3127  0E87  082A               	movf	??___awdiv,w
  3128  0E88  07AB               	addwf	___awdiv@counter,f
  3129  0E89  2E7E               	goto	l2143
  3130  0E8A                     l2145:	
  3131  0E8A  3001               	movlw	1
  3132  0E8B                     u1625:	
  3133  0E8B  35AD               	lslf	___awdiv@quotient,f
  3134  0E8C  0DAE               	rlf	___awdiv@quotient+1,f
  3135  0E8D  0B89               	decfsz	9,f
  3136  0E8E  2E8B               	goto	u1625
  3137  0E8F  0827               	movf	___awdiv@divisor+1,w
  3138  0E90  0229               	subwf	___awdiv@dividend+1,w
  3139  0E91  1D03               	skipz
  3140  0E92  2E95               	goto	u1635
  3141  0E93  0826               	movf	___awdiv@divisor,w
  3142  0E94  0228               	subwf	___awdiv@dividend,w
  3143  0E95                     u1635:	
  3144  0E95  1C03               	skipc
  3145  0E96  2E9C               	goto	l2151
  3146  0E97  0826               	movf	___awdiv@divisor,w
  3147  0E98  02A8               	subwf	___awdiv@dividend,f
  3148  0E99  0827               	movf	___awdiv@divisor+1,w
  3149  0E9A  3BA9               	subwfb	___awdiv@dividend+1,f
  3150  0E9B  142D               	bsf	___awdiv@quotient,0
  3151  0E9C                     l2151:	
  3152  0E9C  3001               	movlw	1
  3153  0E9D                     u1645:	
  3154  0E9D  36A7               	lsrf	___awdiv@divisor+1,f
  3155  0E9E  0CA6               	rrf	___awdiv@divisor,f
  3156  0E9F  0B89               	decfsz	9,f
  3157  0EA0  2E9D               	goto	u1645
  3158  0EA1  3001               	movlw	1
  3159  0EA2  02AB               	subwf	___awdiv@counter,f
  3160  0EA3  1D03               	btfss	3,2
  3161  0EA4  2E8A               	goto	l2145
  3162  0EA5                     l2155:	
  3163  0EA5  082C               	movf	___awdiv@sign,w
  3164  0EA6  1903               	btfsc	3,2
  3165  0EA7  2EAD               	goto	l2159
  3166  0EA8  09AD               	comf	___awdiv@quotient,f
  3167  0EA9  09AE               	comf	___awdiv@quotient+1,f
  3168  0EAA  0AAD               	incf	___awdiv@quotient,f
  3169  0EAB  1903               	skipnz
  3170  0EAC  0AAE               	incf	___awdiv@quotient+1,f
  3171  0EAD                     l2159:	
  3172  0EAD  082E               	movf	___awdiv@quotient+1,w
  3173  0EAE  01A7               	clrf	?___awdiv+1
  3174  0EAF  07A7               	addwf	?___awdiv+1,f
  3175  0EB0  082D               	movf	___awdiv@quotient,w
  3176  0EB1  01A6               	clrf	?___awdiv
  3177  0EB2  07A6               	addwf	?___awdiv,f
  3178  0EB3  0008               	return
  3179  0EB4                     __end_of___awdiv:	
  3180                           
  3181                           	psect	text6
  3182  0D8B                     __ptext6:	
  3183 ;; *************** function _ToggleSleepGPS *****************
  3184 ;; Defined at:
  3185 ;;		line 329 in file "launcher_functions.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		wreg
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3199 ;;      Params:         0       0       0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0
  3201 ;;      Temps:          0       3       0       0       0       0       0
  3202 ;;      Totals:         0       3       0       0       0       0       0
  3203 ;;Total ram usage:        3 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    2
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _ToggleSleepGPS
  3215  0D8B                     _ToggleSleepGPS:	
  3216                           
  3217                           ;launcher_functions.c: 331: PORTAbits.RA6 = 0;
  3218                           
  3219                           ;incstack = 0
  3220                           ; Regs used in _ToggleSleepGPS: [wreg]
  3221  0D8B  0020               	movlb	0	; select bank0
  3222  0D8C  130C               	bcf	12,6	;volatile
  3223                           
  3224                           ;launcher_functions.c: 332: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3225  0D8D  3015               	movlw	21
  3226  0D8E  00A2               	movwf	??_ToggleSleepGPS+2
  3227  0D8F  304B               	movlw	75
  3228  0D90  00A1               	movwf	??_ToggleSleepGPS+1
  3229  0D91  30D1               	movlw	209
  3230  0D92  00A0               	movwf	??_ToggleSleepGPS
  3231  0D93                     u2837:	
  3232  0D93  0BA0               	decfsz	??_ToggleSleepGPS,f
  3233  0D94  2D93               	goto	u2837
  3234  0D95  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3235  0D96  2D93               	goto	u2837
  3236  0D97  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3237  0D98  2D93               	goto	u2837
  3238  0D99  0000               	nop
  3239                           
  3240                           ;launcher_functions.c: 333: PORTAbits.RA6 = 1;
  3241  0D9A  0020               	movlb	0	; select bank0
  3242  0D9B  170C               	bsf	12,6	;volatile
  3243                           
  3244                           ;launcher_functions.c: 334: _delay((unsigned long)((100)*(16000000/4000.0)));
  3245  0D9C  3003               	movlw	3
  3246  0D9D  00A2               	movwf	??_ToggleSleepGPS+2
  3247  0D9E  3008               	movlw	8
  3248  0D9F  00A1               	movwf	??_ToggleSleepGPS+1
  3249  0DA0  3078               	movlw	120
  3250  0DA1  00A0               	movwf	??_ToggleSleepGPS
  3251  0DA2                     u2847:	
  3252  0DA2  0BA0               	decfsz	??_ToggleSleepGPS,f
  3253  0DA3  2DA2               	goto	u2847
  3254  0DA4  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3255  0DA5  2DA2               	goto	u2847
  3256  0DA6  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3257  0DA7  2DA2               	goto	u2847
  3258                           
  3259                           ;launcher_functions.c: 335: PORTAbits.RA6 = 0;
  3260  0DA8  0020               	movlb	0	; select bank0
  3261  0DA9  130C               	bcf	12,6	;volatile
  3262                           
  3263                           ;launcher_functions.c: 336: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3264  0DAA  3015               	movlw	21
  3265  0DAB  00A2               	movwf	??_ToggleSleepGPS+2
  3266  0DAC  304B               	movlw	75
  3267  0DAD  00A1               	movwf	??_ToggleSleepGPS+1
  3268  0DAE  30D1               	movlw	209
  3269  0DAF  00A0               	movwf	??_ToggleSleepGPS
  3270  0DB0                     u2857:	
  3271  0DB0  0BA0               	decfsz	??_ToggleSleepGPS,f
  3272  0DB1  2DB0               	goto	u2857
  3273  0DB2  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  3274  0DB3  2DB0               	goto	u2857
  3275  0DB4  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  3276  0DB5  2DB0               	goto	u2857
  3277  0DB6  0000               	nop
  3278  0DB7  0008               	return
  3279  0DB8                     __end_of_ToggleSleepGPS:	
  3280                           
  3281                           	psect	text7
  3282  0734                     __ptext7:	
  3283 ;; *************** function _SetupGPS *****************
  3284 ;; Defined at:
  3285 ;;		line 347 in file "launcher_functions.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  message        50    0[BANK1 ] unsigned char [50]
  3290 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  3291 ;;  MID             4   56[BANK1 ] unsigned char [4]
  3292 ;;  x               2   60[BANK1 ] int 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;		None               void
  3295 ;; Registers used:
  3296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3302 ;;      Params:         0       0       0       0       0       0       0
  3303 ;;      Locals:         0       0      62       0       0       0       0
  3304 ;;      Temps:          0       3       0       0       0       0       0
  3305 ;;      Totals:         0       3      62       0       0       0       0
  3306 ;;Total ram usage:       65 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    4
  3309 ;; This function calls:
  3310 ;;		_sprintf
  3311 ;;		_uart_write_message
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _SetupGPS
  3319  0734                     _SetupGPS:	
  3320                           
  3321                           ;launcher_functions.c: 349: int x;
  3322                           ;launcher_functions.c: 350: unsigned char startSequence[6] = "$PSRF";
  3323                           
  3324                           ;incstack = 0
  3325                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3326  0734  3066               	movlw	low SetupGPS@F4924
  3327  0735  0086               	movwf	6
  3328  0736  3001               	movlw	high SetupGPS@F4924
  3329  0737  0087               	movwf	7
  3330  0738  30D2               	movlw	low SetupGPS@startSequence
  3331  0739  0084               	movwf	4
  3332  073A  3000               	movlw	high SetupGPS@startSequence
  3333  073B  0085               	movwf	5
  3334  073C  3006               	movlw	6
  3335  073D  0020               	movlb	0	; select bank0
  3336  073E  00C1               	movwf	??_SetupGPS
  3337  073F                     u2150:	
  3338  073F  0016               	moviw fsr1++
  3339  0740  001A               	movwi fsr0++
  3340  0741  0BC1               	decfsz	??_SetupGPS,f
  3341  0742  2F3F               	goto	u2150
  3342                           
  3343                           ;launcher_functions.c: 351: unsigned char MID[4] = "103";
  3344  0743  0021               	movlb	1	; select bank1
  3345  0744  086B               	movf	(SetupGPS@F4926+3)^(0+128),w
  3346  0745  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  3347  0746  086A               	movf	(SetupGPS@F4926+2)^(0+128),w
  3348  0747  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  3349  0748  0869               	movf	(SetupGPS@F4926+1)^(0+128),w
  3350  0749  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  3351  074A  0868               	movf	SetupGPS@F4926^(0+128),w
  3352  074B  00D8               	movwf	SetupGPS@MID^(0+128)
  3353                           
  3354                           ;launcher_functions.c: 352: unsigned char message[50];
  3355                           ;launcher_functions.c: 355: for(x = 0; x < 6; x++)
  3356  074C  01DC               	clrf	SetupGPS@x^(0+128)
  3357  074D  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  3358  074E  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3359  074F  3A80               	xorlw	128
  3360  0750  0020               	movlb	0	; select bank0
  3361  0751  00C1               	movwf	??_SetupGPS
  3362  0752  3080               	movlw	128
  3363  0753  0241               	subwf	??_SetupGPS,w
  3364  0754  1D03               	skipz
  3365  0755  2F59               	goto	u2165
  3366  0756  3006               	movlw	6
  3367  0757  0021               	movlb	1	; select bank1
  3368  0758  025C               	subwf	SetupGPS@x^(0+128),w
  3369  0759                     u2165:	
  3370  0759  1803               	btfsc	3,0
  3371  075A  2F9F               	goto	l2653
  3372  075B                     l2643:	
  3373                           
  3374                           ;launcher_functions.c: 356: {
  3375                           ;launcher_functions.c: 357: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3376  075B  3015               	movlw	21
  3377  075C  0020               	movlb	0	; select bank0
  3378  075D  00C3               	movwf	??_SetupGPS+2
  3379  075E  304B               	movlw	75
  3380  075F  00C2               	movwf	??_SetupGPS+1
  3381  0760  30D1               	movlw	209
  3382  0761  00C1               	movwf	??_SetupGPS
  3383  0762                     u2867:	
  3384  0762  0BC1               	decfsz	??_SetupGPS,f
  3385  0763  2F62               	goto	u2867
  3386  0764  0BC2               	decfsz	??_SetupGPS+1,f
  3387  0765  2F62               	goto	u2867
  3388  0766  0BC3               	decfsz	??_SetupGPS+2,f
  3389  0767  2F62               	goto	u2867
  3390  0768  0000               	nop
  3391                           
  3392                           ;launcher_functions.c: 358: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3393  0769  300A               	movlw	low (STR_1| (0+32768))
  3394  076A  0020               	movlb	0	; select bank0
  3395  076B  00AE               	movwf	sprintf@f
  3396  076C  3088               	movlw	high (STR_1| (0+32768))
  3397  076D  00AF               	movwf	sprintf@f+1
  3398  076E  30D2               	movlw	SetupGPS@startSequence& (0+255)
  3399  076F  00C1               	movwf	??_SetupGPS
  3400  0770  0841               	movf	??_SetupGPS,w
  3401  0771  00B0               	movwf	?_sprintf+2
  3402  0772  30D8               	movlw	SetupGPS@MID& (0+255)
  3403  0773  00C2               	movwf	??_SetupGPS+1
  3404  0774  0842               	movf	??_SetupGPS+1,w
  3405  0775  00B1               	movwf	?_sprintf+3
  3406  0776  0021               	movlb	1	; select bank1
  3407  0777  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3408  0778  0020               	movlb	0	; select bank0
  3409  0779  01B3               	clrf	?_sprintf+5
  3410  077A  07B3               	addwf	?_sprintf+5,f
  3411  077B  0021               	movlb	1	; select bank1
  3412  077C  085C               	movf	SetupGPS@x^(0+128),w
  3413  077D  0020               	movlb	0	; select bank0
  3414  077E  01B2               	clrf	?_sprintf+4
  3415  077F  07B2               	addwf	?_sprintf+4,f
  3416  0780  30A0               	movlw	SetupGPS@message& (0+255)
  3417  0781  3185  2537  3187   	fcall	_sprintf
  3418                           
  3419                           ;launcher_functions.c: 359: uart_write_message(message, 22);
  3420  0784  3016               	movlw	22
  3421  0785  0020               	movlb	0	; select bank0
  3422  0786  00A8               	movwf	uart_write_message@size
  3423  0787  3000               	movlw	0
  3424  0788  00A9               	movwf	uart_write_message@size+1
  3425  0789  30A0               	movlw	SetupGPS@message& (0+255)
  3426  078A  318F  278A  3187   	fcall	_uart_write_message
  3427  078D  3001               	movlw	1
  3428  078E  0021               	movlb	1	; select bank1
  3429  078F  07DC               	addwf	SetupGPS@x^(0+128),f
  3430  0790  3000               	movlw	0
  3431  0791  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  3432  0792  085D               	movf	(SetupGPS@x+1)^(0+128),w
  3433  0793  3A80               	xorlw	128
  3434  0794  0020               	movlb	0	; select bank0
  3435  0795  00C1               	movwf	??_SetupGPS
  3436  0796  3080               	movlw	128
  3437  0797  0241               	subwf	??_SetupGPS,w
  3438  0798  1D03               	skipz
  3439  0799  2F9D               	goto	u2175
  3440  079A  3006               	movlw	6
  3441  079B  0021               	movlb	1	; select bank1
  3442  079C  025C               	subwf	SetupGPS@x^(0+128),w
  3443  079D                     u2175:	
  3444  079D  1C03               	skipc
  3445  079E  2F5B               	goto	l2643
  3446  079F                     l2653:	
  3447                           
  3448                           ;launcher_functions.c: 360: }
  3449                           ;launcher_functions.c: 362: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3450  079F  3015               	movlw	21
  3451  07A0  0020               	movlb	0	; select bank0
  3452  07A1  00C3               	movwf	??_SetupGPS+2
  3453  07A2  304B               	movlw	75
  3454  07A3  00C2               	movwf	??_SetupGPS+1
  3455  07A4  30D1               	movlw	209
  3456  07A5  00C1               	movwf	??_SetupGPS
  3457  07A6                     u2877:	
  3458  07A6  0BC1               	decfsz	??_SetupGPS,f
  3459  07A7  2FA6               	goto	u2877
  3460  07A8  0BC2               	decfsz	??_SetupGPS+1,f
  3461  07A9  2FA6               	goto	u2877
  3462  07AA  0BC3               	decfsz	??_SetupGPS+2,f
  3463  07AB  2FA6               	goto	u2877
  3464  07AC  0000               	nop
  3465  07AD  0008               	return
  3466  07AE                     __end_of_SetupGPS:	
  3467                           
  3468                           	psect	text8
  3469  0F8A                     __ptext8:	
  3470 ;; *************** function _uart_write_message *****************
  3471 ;; Defined at:
  3472 ;;		line 302 in file "launcher_functions.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  data            1    wreg     PTR unsigned char 
  3475 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3476 ;;  size            2    8[BANK0 ] int 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3479 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3480 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3481 ;;  x               2   17[BANK0 ] int 
  3482 ;;  checksum        1   19[BANK0 ] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;		None               void
  3485 ;; Registers used:
  3486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3492 ;;      Params:         0       2       0       0       0       0       0
  3493 ;;      Locals:         0      10       0       0       0       0       0
  3494 ;;      Temps:          0       3       0       0       0       0       0
  3495 ;;      Totals:         0      15       0       0       0       0       0
  3496 ;;Total ram usage:       15 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    3
  3499 ;; This function calls:
  3500 ;;		_compute_checksum
  3501 ;;		_uart_xmit
  3502 ;; This function is called by:
  3503 ;;		_SetupGPS
  3504 ;;		_UpdateGPS
  3505 ;;		_DisableGPS
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _uart_write_message
  3511  0F8A                     _uart_write_message:	
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3515                           ;uart_write_message@data stored from wreg
  3516  0F8A  0020               	movlb	0	; select bank0
  3517  0F8B  00B4               	movwf	uart_write_message@data
  3518                           
  3519                           ;launcher_functions.c: 304: int x;
  3520                           ;launcher_functions.c: 305: unsigned char checksum;
  3521                           ;launcher_functions.c: 306: unsigned char ascii_checksum[2];
  3522                           ;launcher_functions.c: 308: checksum = compute_checksum(data, size);
  3523  0F8C  0829               	movf	uart_write_message@size+1,w
  3524  0F8D  01A1               	clrf	compute_checksum@size+1
  3525  0F8E  07A1               	addwf	compute_checksum@size+1,f
  3526  0F8F  0828               	movf	uart_write_message@size,w
  3527  0F90  01A0               	clrf	compute_checksum@size
  3528  0F91  07A0               	addwf	compute_checksum@size,f
  3529  0F92  0834               	movf	uart_write_message@data,w
  3530  0F93  318E  261E  318F   	fcall	_compute_checksum
  3531  0F96  0020               	movlb	0	; select bank0
  3532  0F97  00AA               	movwf	??_uart_write_message
  3533  0F98  082A               	movf	??_uart_write_message,w
  3534  0F99  00B3               	movwf	uart_write_message@checksum
  3535                           
  3536                           ;launcher_functions.c: 309: ascii_checksum[0] = checksum >> 4;
  3537  0F9A  0833               	movf	uart_write_message@checksum,w
  3538  0F9B  00AA               	movwf	??_uart_write_message
  3539  0F9C  3004               	movlw	4
  3540  0F9D                     u1815:	
  3541  0F9D  36AA               	lsrf	??_uart_write_message,f
  3542  0F9E  0B89               	decfsz	9,f
  3543  0F9F  2F9D               	goto	u1815
  3544  0FA0  082A               	movf	??_uart_write_message,w
  3545  0FA1  00AB               	movwf	??_uart_write_message+1
  3546  0FA2  082B               	movf	??_uart_write_message+1,w
  3547  0FA3  00B5               	movwf	uart_write_message@ascii_checksum
  3548                           
  3549                           ;launcher_functions.c: 310: ascii_checksum[1] = checksum & 0x0F;
  3550  0FA4  0833               	movf	uart_write_message@checksum,w
  3551  0FA5  390F               	andlw	15
  3552  0FA6  00AA               	movwf	??_uart_write_message
  3553  0FA7  082A               	movf	??_uart_write_message,w
  3554  0FA8  00B6               	movwf	uart_write_message@ascii_checksum+1
  3555                           
  3556                           ;launcher_functions.c: 312: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3557  0FA9  300A               	movlw	10
  3558  0FAA  0235               	subwf	uart_write_message@ascii_checksum,w
  3559  0FAB  1C03               	skipc
  3560  0FAC  2FAF               	goto	l2231
  3561  0FAD  3037               	movlw	55
  3562  0FAE  2FB0               	goto	L1
  3563  0FAF                     l2231:	
  3564  0FAF  3030               	movlw	48
  3565  0FB0                     L1:	
  3566  0FB0  00AD               	movwf	_uart_write_message$1427
  3567  0FB1  3000               	movlw	0
  3568  0FB2  00AE               	movwf	_uart_write_message$1427+1
  3569  0FB3  082D               	movf	_uart_write_message$1427,w
  3570  0FB4  00AA               	movwf	??_uart_write_message
  3571  0FB5  082A               	movf	??_uart_write_message,w
  3572  0FB6  07B5               	addwf	uart_write_message@ascii_checksum,f
  3573                           
  3574                           ;launcher_functions.c: 313: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3575  0FB7  300A               	movlw	10
  3576  0FB8  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3577  0FB9  1C03               	skipc
  3578  0FBA  2FBD               	goto	l2239
  3579  0FBB  3037               	movlw	55
  3580  0FBC  2FBE               	goto	L2
  3581  0FBD                     l2239:	
  3582  0FBD  3030               	movlw	48
  3583  0FBE                     L2:	
  3584  0FBE  00AF               	movwf	_uart_write_message$1428
  3585  0FBF  3000               	movlw	0
  3586  0FC0  00B0               	movwf	_uart_write_message$1428+1
  3587  0FC1  082F               	movf	_uart_write_message$1428,w
  3588  0FC2  00AA               	movwf	??_uart_write_message
  3589  0FC3  082A               	movf	??_uart_write_message,w
  3590  0FC4  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3591                           
  3592                           ;launcher_functions.c: 315: for(x=0; x<size-1; x++)
  3593  0FC5  01B1               	clrf	uart_write_message@x
  3594  0FC6  01B2               	clrf	uart_write_message@x+1
  3595  0FC7                     l2249:	
  3596  0FC7  0828               	movf	uart_write_message@size,w
  3597  0FC8  3EFF               	addlw	255
  3598  0FC9  00AA               	movwf	??_uart_write_message
  3599  0FCA  30FF               	movlw	255
  3600  0FCB  3D29               	addwfc	uart_write_message@size+1,w
  3601  0FCC  00AB               	movwf	??_uart_write_message+1
  3602  0FCD  0832               	movf	uart_write_message@x+1,w
  3603  0FCE  3A80               	xorlw	128
  3604  0FCF  00AC               	movwf	??_uart_write_message+2
  3605  0FD0  082B               	movf	??_uart_write_message+1,w
  3606  0FD1  3A80               	xorlw	128
  3607  0FD2  022C               	subwf	??_uart_write_message+2,w
  3608  0FD3  1D03               	skipz
  3609  0FD4  2FD7               	goto	u1845
  3610  0FD5  082A               	movf	??_uart_write_message,w
  3611  0FD6  0231               	subwf	uart_write_message@x,w
  3612  0FD7                     u1845:	
  3613  0FD7  1803               	btfsc	3,0
  3614  0FD8  2FEA               	goto	l2251
  3615                           
  3616                           ;launcher_functions.c: 316: {
  3617                           ;launcher_functions.c: 317: uart_xmit(data[x]);
  3618  0FD9  0020               	movlb	0	; select bank0
  3619  0FDA  0831               	movf	uart_write_message@x,w
  3620  0FDB  0734               	addwf	uart_write_message@data,w
  3621  0FDC  00AA               	movwf	??_uart_write_message
  3622  0FDD  082A               	movf	??_uart_write_message,w
  3623  0FDE  0086               	movwf	6
  3624  0FDF  0187               	clrf	7
  3625  0FE0  0801               	movf	1,w
  3626  0FE1  318C  241E  318F   	fcall	_uart_xmit
  3627  0FE4  3001               	movlw	1
  3628  0FE5  0020               	movlb	0	; select bank0
  3629  0FE6  07B1               	addwf	uart_write_message@x,f
  3630  0FE7  3000               	movlw	0
  3631  0FE8  3DB2               	addwfc	uart_write_message@x+1,f
  3632  0FE9  2FC7               	goto	l2249
  3633  0FEA                     l2251:	
  3634                           
  3635                           ;launcher_functions.c: 318: }
  3636                           ;launcher_functions.c: 319: uart_xmit(ascii_checksum[0]);
  3637  0FEA  0020               	movlb	0	; select bank0
  3638  0FEB  0835               	movf	uart_write_message@ascii_checksum,w
  3639  0FEC  318C  241E  318F   	fcall	_uart_xmit
  3640                           
  3641                           ;launcher_functions.c: 320: uart_xmit(ascii_checksum[1]);
  3642  0FEF  0020               	movlb	0	; select bank0
  3643  0FF0  0836               	movf	uart_write_message@ascii_checksum+1,w
  3644  0FF1  318C  241E  318F   	fcall	_uart_xmit
  3645                           
  3646                           ;launcher_functions.c: 322: uart_xmit(0x0D);
  3647  0FF4  300D               	movlw	13
  3648  0FF5  318C  241E  318F   	fcall	_uart_xmit
  3649                           
  3650                           ;launcher_functions.c: 323: uart_xmit(0x0A);
  3651  0FF8  300A               	movlw	10
  3652  0FF9  318C  241E  318F   	fcall	_uart_xmit
  3653  0FFC                     l369:	
  3654                           ;launcher_functions.c: 324: while(!TXSTAbits.TRMT);
  3655                           
  3656  0FFC  0023               	movlb	3	; select bank3
  3657  0FFD  189E               	btfsc	30,1	;volatile
  3658  0FFE  0008               	return
  3659  0FFF  2FFC               	goto	l369
  3660  1000                     __end_of_uart_write_message:	
  3661                           
  3662                           	psect	text9
  3663  0C1E                     __ptext9:	
  3664 ;; *************** function _uart_xmit *****************
  3665 ;; Defined at:
  3666 ;;		line 294 in file "launcher_functions.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  mydata_byte     1    wreg     unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;		None               void
  3673 ;; Registers used:
  3674 ;;		wreg
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3680 ;;      Params:         0       0       0       0       0       0       0
  3681 ;;      Locals:         0       1       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0
  3683 ;;      Totals:         0       1       0       0       0       0       0
  3684 ;;Total ram usage:        1 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    2
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_uart_write_message
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function _uart_xmit
  3696  0C1E                     _uart_xmit:	
  3697                           
  3698                           ;incstack = 0
  3699                           ; Regs used in _uart_xmit: [wreg]
  3700                           ;uart_xmit@mydata_byte stored from wreg
  3701  0C1E  0020               	movlb	0	; select bank0
  3702  0C1F  00A0               	movwf	uart_xmit@mydata_byte
  3703  0C20                     l352:	
  3704                           ;launcher_functions.c: 297: while(!TXSTAbits.TRMT);
  3705                           
  3706  0C20  0023               	movlb	3	; select bank3
  3707  0C21  1C9E               	btfss	30,1	;volatile
  3708  0C22  2C20               	goto	l352
  3709                           
  3710                           ;launcher_functions.c: 298: TXREG = mydata_byte;
  3711  0C23  0020               	movlb	0	; select bank0
  3712  0C24  0820               	movf	uart_xmit@mydata_byte,w
  3713  0C25  0023               	movlb	3	; select bank3
  3714  0C26  009A               	movwf	26	;volatile
  3715  0C27  0008               	return
  3716  0C28                     __end_of_uart_xmit:	
  3717                           
  3718                           	psect	text10
  3719  0E1E                     __ptext10:	
  3720 ;; *************** function _compute_checksum *****************
  3721 ;; Defined at:
  3722 ;;		line 282 in file "launcher_functions.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  data            1    wreg     PTR unsigned char 
  3725 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3726 ;;  size            2    0[BANK0 ] int 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3729 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  3730 ;;  x               2    6[BANK0 ] int 
  3731 ;;  checksum        1    4[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3741 ;;      Params:         0       2       0       0       0       0       0
  3742 ;;      Locals:         0       4       0       0       0       0       0
  3743 ;;      Temps:          0       2       0       0       0       0       0
  3744 ;;      Totals:         0       8       0       0       0       0       0
  3745 ;;Total ram usage:        8 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    2
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_uart_write_message
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           
  3756                           ;psect for function _compute_checksum
  3757  0E1E                     _compute_checksum:	
  3758                           
  3759                           ;incstack = 0
  3760                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3761                           ;compute_checksum@data stored from wreg
  3762  0E1E  0020               	movlb	0	; select bank0
  3763  0E1F  00A5               	movwf	compute_checksum@data
  3764                           
  3765                           ;launcher_functions.c: 284: unsigned char checksum = 0;
  3766  0E20  01A4               	clrf	compute_checksum@checksum
  3767                           
  3768                           ;launcher_functions.c: 285: int x;
  3769                           ;launcher_functions.c: 286: for(x=0; x<size; x++)
  3770  0E21  01A6               	clrf	compute_checksum@x
  3771  0E22  01A7               	clrf	compute_checksum@x+1
  3772  0E23                     l2081:	
  3773  0E23  0827               	movf	compute_checksum@x+1,w
  3774  0E24  3A80               	xorlw	128
  3775  0E25  00A2               	movwf	??_compute_checksum
  3776  0E26  0821               	movf	compute_checksum@size+1,w
  3777  0E27  3A80               	xorlw	128
  3778  0E28  0222               	subwf	??_compute_checksum,w
  3779  0E29  1D03               	skipz
  3780  0E2A  2E2D               	goto	u1495
  3781  0E2B  0820               	movf	compute_checksum@size,w
  3782  0E2C  0226               	subwf	compute_checksum@x,w
  3783  0E2D                     u1495:	
  3784  0E2D  1803               	btfsc	3,0
  3785  0E2E  2E5D               	goto	l2083
  3786                           
  3787                           ;launcher_functions.c: 287: {
  3788                           ;launcher_functions.c: 288: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3789  0E2F  0020               	movlb	0	; select bank0
  3790  0E30  0826               	movf	compute_checksum@x,w
  3791  0E31  0725               	addwf	compute_checksum@data,w
  3792  0E32  00A2               	movwf	??_compute_checksum
  3793  0E33  0822               	movf	??_compute_checksum,w
  3794  0E34  0086               	movwf	6
  3795  0E35  0187               	clrf	7
  3796  0E36  0801               	movf	1,w
  3797  0E37  3A24               	xorlw	36
  3798  0E38  1903               	skipnz
  3799  0E39  2E58               	goto	l2079
  3800  0E3A  0826               	movf	compute_checksum@x,w
  3801  0E3B  0725               	addwf	compute_checksum@data,w
  3802  0E3C  00A2               	movwf	??_compute_checksum
  3803  0E3D  0822               	movf	??_compute_checksum,w
  3804  0E3E  0086               	movwf	6
  3805  0E3F  0187               	clrf	7
  3806  0E40  0801               	movf	1,w
  3807  0E41  3A2A               	xorlw	42
  3808  0E42  1903               	skipnz
  3809  0E43  2E58               	goto	l2079
  3810  0E44  0826               	movf	compute_checksum@x,w
  3811  0E45  0725               	addwf	compute_checksum@data,w
  3812  0E46  00A2               	movwf	??_compute_checksum
  3813  0E47  0822               	movf	??_compute_checksum,w
  3814  0E48  0086               	movwf	6
  3815  0E49  0187               	clrf	7
  3816  0E4A  0801               	movf	1,w
  3817  0E4B  3A21               	xorlw	33
  3818  0E4C  1903               	skipnz
  3819  0E4D  2E58               	goto	l2079
  3820                           
  3821                           ;launcher_functions.c: 289: checksum ^= data[x];
  3822  0E4E  0826               	movf	compute_checksum@x,w
  3823  0E4F  0725               	addwf	compute_checksum@data,w
  3824  0E50  00A2               	movwf	??_compute_checksum
  3825  0E51  0822               	movf	??_compute_checksum,w
  3826  0E52  0086               	movwf	6
  3827  0E53  0187               	clrf	7
  3828  0E54  0801               	movf	1,w
  3829  0E55  00A3               	movwf	??_compute_checksum+1
  3830  0E56  0823               	movf	??_compute_checksum+1,w
  3831  0E57  06A4               	xorwf	compute_checksum@checksum,f
  3832  0E58                     l2079:	
  3833  0E58  3001               	movlw	1
  3834  0E59  07A6               	addwf	compute_checksum@x,f
  3835  0E5A  3000               	movlw	0
  3836  0E5B  3DA7               	addwfc	compute_checksum@x+1,f
  3837  0E5C  2E23               	goto	l2081
  3838  0E5D                     l2083:	
  3839                           
  3840                           ;launcher_functions.c: 290: }
  3841                           ;launcher_functions.c: 291: return checksum;
  3842  0E5D  0020               	movlb	0	; select bank0
  3843  0E5E  0824               	movf	compute_checksum@checksum,w
  3844  0E5F  0008               	return
  3845  0E60                     __end_of_compute_checksum:	
  3846                           
  3847                           	psect	text11
  3848  0537                     __ptext11:	
  3849 ;; *************** function _sprintf *****************
  3850 ;; Defined at:
  3851 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  sp              1    wreg     PTR unsigned char 
  3854 ;;		 -> SetupGPS@message(50), 
  3855 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3856 ;;		 -> STR_1(19), 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  3859 ;;		 -> SetupGPS@message(50), 
  3860 ;;  _val            4   28[BANK0 ] struct .
  3861 ;;  c               1   32[BANK0 ] char 
  3862 ;;  ap              1   26[BANK0 ] PTR void [1]
  3863 ;;		 -> ?_sprintf(2), 
  3864 ;;  prec            1   25[BANK0 ] char 
  3865 ;;  flag            1   24[BANK0 ] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2   14[BANK0 ] int 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3875 ;;      Params:         0       6       0       0       0       0       0
  3876 ;;      Locals:         0       9       0       0       0       0       0
  3877 ;;      Temps:          0       4       0       0       0       0       0
  3878 ;;      Totals:         0      19       0       0       0       0       0
  3879 ;;Total ram usage:       19 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    3
  3882 ;; This function calls:
  3883 ;;		___lwdiv
  3884 ;;		___lwmod
  3885 ;; This function is called by:
  3886 ;;		_SetupGPS
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _sprintf
  3892  0537                     _sprintf:	
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3896                           ;sprintf@sp stored from wreg
  3897  0537  0020               	movlb	0	; select bank0
  3898  0538  00BB               	movwf	sprintf@sp
  3899                           
  3900                           ;doprnt.c: 494: va_list ap;
  3901                           ;doprnt.c: 499: signed char c;
  3902                           ;doprnt.c: 506: signed char prec;
  3903                           ;doprnt.c: 508: unsigned char flag;
  3904                           ;doprnt.c: 527: union {
  3905                           ;doprnt.c: 528: unsigned int _val;
  3906                           ;doprnt.c: 529: struct {
  3907                           ;doprnt.c: 530: const char * _cp;
  3908                           ;doprnt.c: 531: unsigned _len;
  3909                           ;doprnt.c: 532: } _str;
  3910                           ;doprnt.c: 533: } _val;
  3911                           ;doprnt.c: 542: *ap = __va_start();
  3912  0539  3030               	movlw	(?_sprintf+2)& (0+255)
  3913  053A  00B4               	movwf	??_sprintf
  3914  053B  0834               	movf	??_sprintf,w
  3915  053C  00BA               	movwf	sprintf@ap
  3916  053D                     l2321:	
  3917                           ;doprnt.c: 545: while(c = *f++) {
  3918                           
  3919  053D  082F               	movf	sprintf@f+1,w
  3920  053E  00B5               	movwf	??_sprintf+1
  3921  053F  082E               	movf	sprintf@f,w
  3922  0540  00B4               	movwf	??_sprintf
  3923  0541  0AAE               	incf	sprintf@f,f
  3924  0542  1903               	skipnz
  3925  0543  0AAF               	incf	sprintf@f+1,f
  3926  0544  0834               	movf	??_sprintf,w
  3927  0545  0084               	movwf	4
  3928  0546  0835               	movf	??_sprintf+1,w
  3929  0547  0085               	movwf	5
  3930  0548  0800               	movf	0,w	;code access
  3931  0549  00B6               	movwf	??_sprintf+2
  3932  054A  0836               	movf	??_sprintf+2,w
  3933  054B  00C0               	movwf	sprintf@c
  3934  054C  08C0               	movf	sprintf@c,f
  3935  054D  1903               	btfsc	3,2
  3936  054E  2E38               	goto	l2323
  3937                           
  3938                           ;doprnt.c: 547: if(c != '%')
  3939  054F  0840               	movf	sprintf@c,w
  3940  0550  3A25               	xorlw	37
  3941  0551  1903               	skipnz
  3942  0552  2D5F               	goto	l2261
  3943                           
  3944                           ;doprnt.c: 549: {
  3945                           ;doprnt.c: 550: ((*sp++ = (c)));
  3946  0553  0840               	movf	sprintf@c,w
  3947  0554  00B4               	movwf	??_sprintf
  3948  0555  083B               	movf	sprintf@sp,w
  3949  0556  0086               	movwf	6
  3950  0557  0187               	clrf	7
  3951  0558  0834               	movf	??_sprintf,w
  3952  0559  0081               	movwf	1
  3953  055A  3001               	movlw	1
  3954  055B  00B4               	movwf	??_sprintf
  3955  055C  0834               	movf	??_sprintf,w
  3956  055D  07BB               	addwf	sprintf@sp,f
  3957                           
  3958                           ;doprnt.c: 551: continue;
  3959  055E  2D3D               	goto	l2321
  3960  055F                     l2261:	
  3961                           
  3962                           ;doprnt.c: 552: }
  3963                           ;doprnt.c: 557: flag = 0;
  3964  055F  01B8               	clrf	sprintf@flag
  3965                           
  3966                           ;doprnt.c: 644: switch(c = *f++) {
  3967  0560  2D90               	goto	l2281
  3968  0561                     l2263:	
  3969                           ;doprnt.c: 737: case 's':
  3970                           
  3971                           ;doprnt.c: 707: case 'i':
  3972                           ;doprnt.c: 708: break;
  3973                           
  3974                           ;doprnt.c: 706: case 'd':
  3975                           
  3976                           ;doprnt.c: 647: goto alldone;
  3977                           
  3978                           ;doprnt.c: 646: case 0:
  3979                           
  3980                           
  3981                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3982  0561  083A               	movf	sprintf@ap,w
  3983  0562  0086               	movwf	6
  3984  0563  0187               	clrf	7
  3985  0564  0801               	movf	1,w
  3986  0565  00BC               	movwf	sprintf@_val
  3987  0566  3000               	movlw	0
  3988  0567  00BD               	movwf	sprintf@_val+1
  3989  0568  3001               	movlw	1
  3990  0569  00B4               	movwf	??_sprintf
  3991  056A  0834               	movf	??_sprintf,w
  3992  056B  07BA               	addwf	sprintf@ap,f
  3993                           
  3994                           ;doprnt.c: 749: if(!_val._str._cp)
  3995  056C  083D               	movf	sprintf@_val+1,w
  3996  056D  043C               	iorwf	sprintf@_val,w
  3997  056E  1D03               	skipz
  3998  056F  2D74               	goto	l2277
  3999                           
  4000                           ;doprnt.c: 750: _val._str._cp = "(null)";
  4001  0570  301D               	movlw	low (STR_2| (0+32768))
  4002  0571  00BC               	movwf	sprintf@_val
  4003  0572  3088               	movlw	high (STR_2| (0+32768))
  4004  0573  00BD               	movwf	sprintf@_val+1
  4005  0574                     l2277:	
  4006                           ;doprnt.c: 786: while(*_val._str._cp)
  4007                           
  4008  0574  083C               	movf	sprintf@_val,w
  4009  0575  0084               	movwf	4
  4010  0576  083D               	movf	sprintf@_val+1,w
  4011  0577  0085               	movwf	5
  4012  0578  0800               	movf	0,w	;code access
  4013  0579  3800               	iorlw	0
  4014  057A  1903               	btfsc	3,2
  4015  057B  2D3D               	goto	l2321
  4016                           
  4017                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  4018  057C  083C               	movf	sprintf@_val,w
  4019  057D  0084               	movwf	4
  4020  057E  083D               	movf	sprintf@_val+1,w
  4021  057F  0085               	movwf	5
  4022  0580  0800               	movf	0,w	;code access
  4023  0581  00B4               	movwf	??_sprintf
  4024  0582  083B               	movf	sprintf@sp,w
  4025  0583  0086               	movwf	6
  4026  0584  0187               	clrf	7
  4027  0585  0834               	movf	??_sprintf,w
  4028  0586  0081               	movwf	1
  4029  0587  3001               	movlw	1
  4030  0588  07BC               	addwf	sprintf@_val,f
  4031  0589  3000               	movlw	0
  4032  058A  3DBD               	addwfc	sprintf@_val+1,f
  4033  058B  3001               	movlw	1
  4034  058C  00B4               	movwf	??_sprintf
  4035  058D  0834               	movf	??_sprintf,w
  4036  058E  07BB               	addwf	sprintf@sp,f
  4037  058F  2D74               	goto	l2277
  4038  0590                     l2281:	
  4039                           ;doprnt.c: 831: }
  4040                           
  4041                           ;doprnt.c: 822: continue;
  4042                           
  4043                           ;doprnt.c: 811: default:
  4044                           
  4045                           ;doprnt.c: 788: continue;
  4046                           
  4047  0590  082F               	movf	sprintf@f+1,w
  4048  0591  00B5               	movwf	??_sprintf+1
  4049  0592  082E               	movf	sprintf@f,w
  4050  0593  00B4               	movwf	??_sprintf
  4051  0594  0AAE               	incf	sprintf@f,f
  4052  0595  1903               	skipnz
  4053  0596  0AAF               	incf	sprintf@f+1,f
  4054  0597  0834               	movf	??_sprintf,w
  4055  0598  0084               	movwf	4
  4056  0599  0835               	movf	??_sprintf+1,w
  4057  059A  0085               	movwf	5
  4058  059B  0800               	movf	0,w	;code access
  4059  059C  00C0               	movwf	sprintf@c
  4060                           
  4061                           ; Switch size 1, requested type "space"
  4062                           ; Number of cases is 4, Range of values is 0 to 115
  4063                           ; switch strategies available:
  4064                           ; Name         Instructions Cycles
  4065                           ; simple_byte           13     7 (average)
  4066                           ; direct_byte          238     6 (fixed)
  4067                           ; jumptable            260     6 (fixed)
  4068                           ;	Chosen strategy is simple_byte
  4069  059D  3A00               	xorlw	0	; case 0
  4070  059E  1903               	skipnz
  4071  059F  2E38               	goto	l2323
  4072  05A0  3A64               	xorlw	100	; case 100
  4073  05A1  1903               	skipnz
  4074  05A2  2DAA               	goto	l2283
  4075  05A3  3A0D               	xorlw	13	; case 105
  4076  05A4  1903               	skipnz
  4077  05A5  2DAA               	goto	l2283
  4078  05A6  3A1A               	xorlw	26	; case 115
  4079  05A7  1903               	skipnz
  4080  05A8  2D61               	goto	l2263
  4081  05A9  2D3D               	goto	l2321
  4082  05AA                     l2283:	
  4083                           
  4084                           ;doprnt.c: 1262: {
  4085                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4086  05AA  083A               	movf	sprintf@ap,w
  4087  05AB  0086               	movwf	6
  4088  05AC  0187               	clrf	7
  4089  05AD  3F40               	moviw [0]fsr1
  4090  05AE  00BC               	movwf	sprintf@_val
  4091  05AF  3F41               	moviw [1]fsr1
  4092  05B0  00BD               	movwf	sprintf@_val+1
  4093  05B1  3002               	movlw	2
  4094  05B2  00B4               	movwf	??_sprintf
  4095  05B3  0834               	movf	??_sprintf,w
  4096  05B4  07BA               	addwf	sprintf@ap,f
  4097                           
  4098                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4099  05B5  1FBD               	btfss	sprintf@_val+1,7
  4100  05B6  2DC0               	goto	l2293
  4101                           
  4102                           ;doprnt.c: 1271: flag |= 0x03;
  4103  05B7  3003               	movlw	3
  4104  05B8  00B4               	movwf	??_sprintf
  4105  05B9  0834               	movf	??_sprintf,w
  4106  05BA  04B8               	iorwf	sprintf@flag,f
  4107                           
  4108                           ;doprnt.c: 1272: _val._val = -_val._val;
  4109  05BB  09BC               	comf	sprintf@_val,f
  4110  05BC  09BD               	comf	sprintf@_val+1,f
  4111  05BD  0ABC               	incf	sprintf@_val,f
  4112  05BE  1903               	skipnz
  4113  05BF  0ABD               	incf	sprintf@_val+1,f
  4114  05C0                     l2293:	
  4115                           
  4116                           ;doprnt.c: 1273: }
  4117                           ;doprnt.c: 1275: }
  4118                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4119  05C0  01C0               	clrf	sprintf@c
  4120  05C1  0AC0               	incf	sprintf@c,f
  4121  05C2  0840               	movf	sprintf@c,w
  4122  05C3  3A05               	xorlw	5
  4123  05C4  1903               	btfsc	3,2
  4124  05C5  2DE5               	goto	l2305
  4125  05C6                     l2297:	
  4126                           
  4127                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4128  05C6  0840               	movf	sprintf@c,w
  4129  05C7  00B4               	movwf	??_sprintf
  4130  05C8  01B5               	clrf	??_sprintf+1
  4131  05C9  35B4               	lslf	??_sprintf,f
  4132  05CA  0DB5               	rlf	??_sprintf+1,f
  4133  05CB  3000               	movlw	low (_dpowers| (0+32768))
  4134  05CC  0734               	addwf	??_sprintf,w
  4135  05CD  0084               	movwf	4
  4136  05CE  3088               	movlw	high (_dpowers| (0+32768))
  4137  05CF  3D35               	addwfc	??_sprintf+1,w
  4138  05D0  0085               	movwf	5
  4139  05D1  3F00               	moviw [0]fsr0
  4140  05D2  00B6               	movwf	??_sprintf+2
  4141  05D3  3F01               	moviw [1]fsr0
  4142  05D4  00B7               	movwf	??_sprintf+3
  4143  05D5  0837               	movf	??_sprintf+3,w
  4144  05D6  023D               	subwf	sprintf@_val+1,w
  4145  05D7  1D03               	skipz
  4146  05D8  2DDB               	goto	u1915
  4147  05D9  0836               	movf	??_sprintf+2,w
  4148  05DA  023C               	subwf	sprintf@_val,w
  4149  05DB                     u1915:	
  4150  05DB  1C03               	btfss	3,0
  4151  05DC  2DE5               	goto	l2305
  4152                           
  4153                           ;doprnt.c: 1316: break;
  4154  05DD  3001               	movlw	1
  4155  05DE  00B4               	movwf	??_sprintf
  4156  05DF  0834               	movf	??_sprintf,w
  4157  05E0  07C0               	addwf	sprintf@c,f
  4158  05E1  0840               	movf	sprintf@c,w
  4159  05E2  3A05               	xorlw	5
  4160  05E3  1D03               	skipz
  4161  05E4  2DC6               	goto	l2297
  4162  05E5                     l2305:	
  4163                           
  4164                           ;doprnt.c: 1431: {
  4165                           ;doprnt.c: 1447: if(flag & 0x03)
  4166  05E5  0838               	movf	sprintf@flag,w
  4167  05E6  3903               	andlw	3
  4168  05E7  1903               	btfsc	3,2
  4169  05E8  2DF4               	goto	l2311
  4170                           
  4171                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4172  05E9  302D               	movlw	45
  4173  05EA  00B4               	movwf	??_sprintf
  4174  05EB  083B               	movf	sprintf@sp,w
  4175  05EC  0086               	movwf	6
  4176  05ED  0187               	clrf	7
  4177  05EE  0834               	movf	??_sprintf,w
  4178  05EF  0081               	movwf	1
  4179  05F0  3001               	movlw	1
  4180  05F1  00B4               	movwf	??_sprintf
  4181  05F2  0834               	movf	??_sprintf,w
  4182  05F3  07BB               	addwf	sprintf@sp,f
  4183  05F4                     l2311:	
  4184                           
  4185                           ;doprnt.c: 1478: }
  4186                           ;doprnt.c: 1481: prec = c;
  4187  05F4  0840               	movf	sprintf@c,w
  4188  05F5  00B4               	movwf	??_sprintf
  4189  05F6  0834               	movf	??_sprintf,w
  4190  05F7  00B9               	movwf	sprintf@prec
  4191  05F8                     l2319:	
  4192                           ;doprnt.c: 1483: while(prec--) {
  4193                           
  4194  05F8  30FF               	movlw	-1
  4195  05F9  00B4               	movwf	??_sprintf
  4196  05FA  0834               	movf	??_sprintf,w
  4197  05FB  07B9               	addwf	sprintf@prec,f
  4198  05FC  0839               	movf	sprintf@prec,w
  4199  05FD  3AFF               	xorlw	255
  4200  05FE  1903               	btfsc	3,2
  4201  05FF  2D3D               	goto	l2321
  4202                           
  4203                           ;doprnt.c: 1487: {
  4204                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4205  0600  300A               	movlw	10
  4206  0601  00A8               	movwf	___lwmod@divisor
  4207  0602  3000               	movlw	0
  4208  0603  00A9               	movwf	___lwmod@divisor+1
  4209  0604  0839               	movf	sprintf@prec,w
  4210  0605  00B4               	movwf	??_sprintf
  4211  0606  01B5               	clrf	??_sprintf+1
  4212  0607  35B4               	lslf	??_sprintf,f
  4213  0608  0DB5               	rlf	??_sprintf+1,f
  4214  0609  3000               	movlw	low (_dpowers| (0+32768))
  4215  060A  0734               	addwf	??_sprintf,w
  4216  060B  0084               	movwf	4
  4217  060C  3088               	movlw	high (_dpowers| (0+32768))
  4218  060D  3D35               	addwfc	??_sprintf+1,w
  4219  060E  0085               	movwf	5
  4220  060F  3F00               	moviw [0]fsr0
  4221  0610  00A0               	movwf	___lwdiv@divisor
  4222  0611  3F01               	moviw [1]fsr0
  4223  0612  00A1               	movwf	___lwdiv@divisor+1
  4224  0613  083D               	movf	sprintf@_val+1,w
  4225  0614  01A3               	clrf	___lwdiv@dividend+1
  4226  0615  07A3               	addwf	___lwdiv@dividend+1,f
  4227  0616  083C               	movf	sprintf@_val,w
  4228  0617  01A2               	clrf	___lwdiv@dividend
  4229  0618  07A2               	addwf	___lwdiv@dividend,f
  4230  0619  318D  25E7  3185   	fcall	___lwdiv
  4231  061C  0020               	movlb	0	; select bank0
  4232  061D  0821               	movf	?___lwdiv+1,w
  4233  061E  01AB               	clrf	___lwmod@dividend+1
  4234  061F  07AB               	addwf	___lwmod@dividend+1,f
  4235  0620  0820               	movf	?___lwdiv,w
  4236  0621  01AA               	clrf	___lwmod@dividend
  4237  0622  07AA               	addwf	___lwmod@dividend,f
  4238  0623  318D  25B8  3185   	fcall	___lwmod
  4239  0626  0020               	movlb	0	; select bank0
  4240  0627  0828               	movf	?___lwmod,w
  4241  0628  3E30               	addlw	48
  4242  0629  00B6               	movwf	??_sprintf+2
  4243  062A  0836               	movf	??_sprintf+2,w
  4244  062B  00C0               	movwf	sprintf@c
  4245                           
  4246                           ;doprnt.c: 1532: }
  4247                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4248  062C  0840               	movf	sprintf@c,w
  4249  062D  00B4               	movwf	??_sprintf
  4250  062E  083B               	movf	sprintf@sp,w
  4251  062F  0086               	movwf	6
  4252  0630  0187               	clrf	7
  4253  0631  0834               	movf	??_sprintf,w
  4254  0632  0081               	movwf	1
  4255  0633  3001               	movlw	1
  4256  0634  00B4               	movwf	??_sprintf
  4257  0635  0834               	movf	??_sprintf,w
  4258  0636  07BB               	addwf	sprintf@sp,f
  4259  0637  2DF8               	goto	l2319
  4260  0638                     l2323:	
  4261                           ;doprnt.c: 1534: }
  4262                           ;doprnt.c: 1542: }
  4263                           ;doprnt.c: 1544: alldone:
  4264                           
  4265                           
  4266                           ;doprnt.c: 1547: *sp = 0;
  4267  0638  083B               	movf	sprintf@sp,w
  4268  0639  0086               	movwf	6
  4269  063A  0187               	clrf	7
  4270  063B  0181               	clrf	1
  4271  063C  0008               	return
  4272  063D                     __end_of_sprintf:	
  4273                           ;doprnt.c: 1549: return 0;
  4274                           ;	Return value of _sprintf is never used
  4275                           
  4276                           
  4277                           	psect	text12
  4278  0DB8                     __ptext12:	
  4279 ;; *************** function ___lwmod *****************
  4280 ;; Defined at:
  4281 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  divisor         2    8[BANK0 ] unsigned int 
  4284 ;;  dividend        2   10[BANK0 ] unsigned int 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  counter         1   13[BANK0 ] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    8[BANK0 ] unsigned int 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4296 ;;      Params:         0       4       0       0       0       0       0
  4297 ;;      Locals:         0       1       0       0       0       0       0
  4298 ;;      Temps:          0       1       0       0       0       0       0
  4299 ;;      Totals:         0       6       0       0       0       0       0
  4300 ;;Total ram usage:        6 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    2
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_sprintf
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           
  4311                           ;psect for function ___lwmod
  4312  0DB8                     ___lwmod:	
  4313                           
  4314                           ;incstack = 0
  4315                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4316  0DB8  0020               	movlb	0	; select bank0
  4317  0DB9  0829               	movf	___lwmod@divisor+1,w
  4318  0DBA  0428               	iorwf	___lwmod@divisor,w
  4319  0DBB  1903               	skipnz
  4320  0DBC  2DE0               	goto	l2207
  4321  0DBD  01AD               	clrf	___lwmod@counter
  4322  0DBE  0AAD               	incf	___lwmod@counter,f
  4323  0DBF                     l2197:	
  4324  0DBF  1BA9               	btfsc	___lwmod@divisor+1,7
  4325  0DC0  2DCB               	goto	l2199
  4326  0DC1  3001               	movlw	1
  4327  0DC2                     u1755:	
  4328  0DC2  35A8               	lslf	___lwmod@divisor,f
  4329  0DC3  0DA9               	rlf	___lwmod@divisor+1,f
  4330  0DC4  0B89               	decfsz	9,f
  4331  0DC5  2DC2               	goto	u1755
  4332  0DC6  3001               	movlw	1
  4333  0DC7  00AC               	movwf	??___lwmod
  4334  0DC8  082C               	movf	??___lwmod,w
  4335  0DC9  07AD               	addwf	___lwmod@counter,f
  4336  0DCA  2DBF               	goto	l2197
  4337  0DCB                     l2199:	
  4338  0DCB  0829               	movf	___lwmod@divisor+1,w
  4339  0DCC  022B               	subwf	___lwmod@dividend+1,w
  4340  0DCD  1D03               	skipz
  4341  0DCE  2DD1               	goto	u1775
  4342  0DCF  0828               	movf	___lwmod@divisor,w
  4343  0DD0  022A               	subwf	___lwmod@dividend,w
  4344  0DD1                     u1775:	
  4345  0DD1  1C03               	skipc
  4346  0DD2  2DD7               	goto	l2203
  4347  0DD3  0828               	movf	___lwmod@divisor,w
  4348  0DD4  02AA               	subwf	___lwmod@dividend,f
  4349  0DD5  0829               	movf	___lwmod@divisor+1,w
  4350  0DD6  3BAB               	subwfb	___lwmod@dividend+1,f
  4351  0DD7                     l2203:	
  4352  0DD7  3001               	movlw	1
  4353  0DD8                     u1785:	
  4354  0DD8  36A9               	lsrf	___lwmod@divisor+1,f
  4355  0DD9  0CA8               	rrf	___lwmod@divisor,f
  4356  0DDA  0B89               	decfsz	9,f
  4357  0DDB  2DD8               	goto	u1785
  4358  0DDC  3001               	movlw	1
  4359  0DDD  02AD               	subwf	___lwmod@counter,f
  4360  0DDE  1D03               	btfss	3,2
  4361  0DDF  2DCB               	goto	l2199
  4362  0DE0                     l2207:	
  4363  0DE0  082B               	movf	___lwmod@dividend+1,w
  4364  0DE1  01A9               	clrf	?___lwmod+1
  4365  0DE2  07A9               	addwf	?___lwmod+1,f
  4366  0DE3  082A               	movf	___lwmod@dividend,w
  4367  0DE4  01A8               	clrf	?___lwmod
  4368  0DE5  07A8               	addwf	?___lwmod,f
  4369  0DE6  0008               	return
  4370  0DE7                     __end_of___lwmod:	
  4371                           
  4372                           	psect	text13
  4373  0DE7                     __ptext13:	
  4374 ;; *************** function ___lwdiv *****************
  4375 ;; Defined at:
  4376 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  divisor         2    0[BANK0 ] unsigned int 
  4379 ;;  dividend        2    2[BANK0 ] unsigned int 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  quotient        2    5[BANK0 ] unsigned int 
  4382 ;;  counter         1    7[BANK0 ] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  2    0[BANK0 ] unsigned int 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4392 ;;      Params:         0       4       0       0       0       0       0
  4393 ;;      Locals:         0       3       0       0       0       0       0
  4394 ;;      Temps:          0       1       0       0       0       0       0
  4395 ;;      Totals:         0       8       0       0       0       0       0
  4396 ;;Total ram usage:        8 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    2
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_sprintf
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function ___lwdiv
  4408  0DE7                     ___lwdiv:	
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4412  0DE7  0020               	movlb	0	; select bank0
  4413  0DE8  01A5               	clrf	___lwdiv@quotient
  4414  0DE9  01A6               	clrf	___lwdiv@quotient+1
  4415  0DEA  0821               	movf	___lwdiv@divisor+1,w
  4416  0DEB  0420               	iorwf	___lwdiv@divisor,w
  4417  0DEC  1903               	skipnz
  4418  0DED  2E17               	goto	l2185
  4419  0DEE  01A7               	clrf	___lwdiv@counter
  4420  0DEF  0AA7               	incf	___lwdiv@counter,f
  4421  0DF0                     l2173:	
  4422  0DF0  1BA1               	btfsc	___lwdiv@divisor+1,7
  4423  0DF1  2DFC               	goto	l2175
  4424  0DF2  3001               	movlw	1
  4425  0DF3                     u1685:	
  4426  0DF3  35A0               	lslf	___lwdiv@divisor,f
  4427  0DF4  0DA1               	rlf	___lwdiv@divisor+1,f
  4428  0DF5  0B89               	decfsz	9,f
  4429  0DF6  2DF3               	goto	u1685
  4430  0DF7  3001               	movlw	1
  4431  0DF8  00A4               	movwf	??___lwdiv
  4432  0DF9  0824               	movf	??___lwdiv,w
  4433  0DFA  07A7               	addwf	___lwdiv@counter,f
  4434  0DFB  2DF0               	goto	l2173
  4435  0DFC                     l2175:	
  4436  0DFC  3001               	movlw	1
  4437  0DFD                     u1705:	
  4438  0DFD  35A5               	lslf	___lwdiv@quotient,f
  4439  0DFE  0DA6               	rlf	___lwdiv@quotient+1,f
  4440  0DFF  0B89               	decfsz	9,f
  4441  0E00  2DFD               	goto	u1705
  4442  0E01  0821               	movf	___lwdiv@divisor+1,w
  4443  0E02  0223               	subwf	___lwdiv@dividend+1,w
  4444  0E03  1D03               	skipz
  4445  0E04  2E07               	goto	u1715
  4446  0E05  0820               	movf	___lwdiv@divisor,w
  4447  0E06  0222               	subwf	___lwdiv@dividend,w
  4448  0E07                     u1715:	
  4449  0E07  1C03               	skipc
  4450  0E08  2E0E               	goto	l2181
  4451  0E09  0820               	movf	___lwdiv@divisor,w
  4452  0E0A  02A2               	subwf	___lwdiv@dividend,f
  4453  0E0B  0821               	movf	___lwdiv@divisor+1,w
  4454  0E0C  3BA3               	subwfb	___lwdiv@dividend+1,f
  4455  0E0D  1425               	bsf	___lwdiv@quotient,0
  4456  0E0E                     l2181:	
  4457  0E0E  3001               	movlw	1
  4458  0E0F                     u1725:	
  4459  0E0F  36A1               	lsrf	___lwdiv@divisor+1,f
  4460  0E10  0CA0               	rrf	___lwdiv@divisor,f
  4461  0E11  0B89               	decfsz	9,f
  4462  0E12  2E0F               	goto	u1725
  4463  0E13  3001               	movlw	1
  4464  0E14  02A7               	subwf	___lwdiv@counter,f
  4465  0E15  1D03               	btfss	3,2
  4466  0E16  2DFC               	goto	l2175
  4467  0E17                     l2185:	
  4468  0E17  0826               	movf	___lwdiv@quotient+1,w
  4469  0E18  01A1               	clrf	?___lwdiv+1
  4470  0E19  07A1               	addwf	?___lwdiv+1,f
  4471  0E1A  0825               	movf	___lwdiv@quotient,w
  4472  0E1B  01A0               	clrf	?___lwdiv
  4473  0E1C  07A0               	addwf	?___lwdiv,f
  4474  0E1D  0008               	return
  4475  0E1E                     __end_of___lwdiv:	
  4476                           
  4477                           	psect	text14
  4478  039C                     __ptext14:	
  4479 ;; *************** function _RecordMode *****************
  4480 ;; Defined at:
  4481 ;;		line 561 in file "launcher_functions.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  address         4   35[BANK0 ] long 
  4486 ;;  count           2   33[BANK0 ] int 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4496 ;;      Params:         0       0       0       0       0       0       0
  4497 ;;      Locals:         0       6       0       0       0       0       0
  4498 ;;      Temps:          0       5       0       0       0       0       0
  4499 ;;      Totals:         0      11       0       0       0       0       0
  4500 ;;Total ram usage:       11 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    6
  4503 ;; This function calls:
  4504 ;;		_CheckDisconnect
  4505 ;;		_InitSPI
  4506 ;;		_ReadBuffer
  4507 ;;		_SendGPSSPI
  4508 ;;		_WriteOverheadSPI
  4509 ;;		_WriteSPI
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _RecordMode
  4517  039C                     _RecordMode:	
  4518                           
  4519                           ;launcher_functions.c: 563: PORTAbits.RA4 = 1;
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4523  039C  0020               	movlb	0	; select bank0
  4524  039D  160C               	bsf	12,4	;volatile
  4525                           
  4526                           ;launcher_functions.c: 564: long int address = 0xBB68+11;
  4527  039E  3000               	movlw	0
  4528  039F  00C6               	movwf	RecordMode@address+3
  4529  03A0  3000               	movlw	0
  4530  03A1  00C5               	movwf	RecordMode@address+2
  4531  03A2  30BB               	movlw	187
  4532  03A3  00C4               	movwf	RecordMode@address+1
  4533  03A4  3073               	movlw	115
  4534  03A5  00C3               	movwf	RecordMode@address
  4535                           
  4536                           ;launcher_functions.c: 565: int count = 115;
  4537  03A6  3073               	movlw	115
  4538  03A7  00C1               	movwf	RecordMode@count
  4539  03A8  3000               	movlw	0
  4540  03A9  00C2               	movwf	RecordMode@count+1
  4541                           
  4542                           ;launcher_functions.c: 567: InitSPI();
  4543  03AA  318C  2478  3183   	fcall	_InitSPI
  4544                           
  4545                           ;launcher_functions.c: 570: if(CheckDisconnect())
  4546  03AD  318C  2446  3183   	fcall	_CheckDisconnect
  4547  03B0  3A00               	xorlw	0
  4548  03B1  1903               	skipnz
  4549  03B2  2BC8               	goto	l2675
  4550                           
  4551                           ;launcher_functions.c: 571: {
  4552                           ;launcher_functions.c: 572: LATC2 = (1);
  4553  03B3  0022               	movlb	2	; select bank2
  4554  03B4  150E               	bsf	14,2	;volatile
  4555                           
  4556                           ;launcher_functions.c: 573: (start) = 0;
  4557  03B5  01FB               	clrf	_start
  4558  03B6  01FC               	clrf	_start+1
  4559                           
  4560                           ;launcher_functions.c: 574: (end) = 0;
  4561  03B7  01F9               	clrf	_end
  4562  03B8  01FA               	clrf	_end+1
  4563                           
  4564                           ;launcher_functions.c: 575: SSPCON1bits.SSPEN=0;
  4565  03B9  0024               	movlb	4	; select bank4
  4566  03BA  1295               	bcf	21,5	;volatile
  4567                           
  4568                           ;launcher_functions.c: 578: PORTCbits.PORTC = LATCbits.LATC & 0xD7;
  4569  03BB  0022               	movlb	2	; select bank2
  4570  03BC  080E               	movf	14,w	;volatile
  4571  03BD  39FF               	andlw	255
  4572  03BE  39D7               	andlw	215
  4573  03BF  0020               	movlb	0	; select bank0
  4574  03C0  00BC               	movwf	??_RecordMode
  4575  03C1  080E               	movf	14,w	;volatile
  4576  03C2  063C               	xorwf	??_RecordMode,w
  4577  03C3  3900               	andlw	-256
  4578  03C4  063C               	xorwf	??_RecordMode,w
  4579  03C5  008E               	movwf	14	;volatile
  4580                           
  4581                           ;launcher_functions.c: 579: PORTAbits.RA4 = 0;
  4582  03C6  120C               	bcf	12,4	;volatile
  4583                           
  4584                           ;launcher_functions.c: 580: return;
  4585  03C7  0008               	return
  4586  03C8                     l2675:	
  4587                           
  4588                           ;launcher_functions.c: 581: }
  4589                           ;launcher_functions.c: 583: (start) = 0;
  4590  03C8  01FB               	clrf	_start
  4591  03C9  01FC               	clrf	_start+1
  4592                           
  4593                           ;launcher_functions.c: 584: (end) = 0;
  4594  03CA  01F9               	clrf	_end
  4595  03CB  01FA               	clrf	_end+1
  4596                           
  4597                           ;launcher_functions.c: 586: _delay((unsigned long)((300)*(16000000/4000.0)));
  4598  03CC  3007               	movlw	7
  4599  03CD  0020               	movlb	0	; select bank0
  4600  03CE  00BE               	movwf	??_RecordMode+2
  4601  03CF  3017               	movlw	23
  4602  03D0  00BD               	movwf	??_RecordMode+1
  4603  03D1  306F               	movlw	111
  4604  03D2  00BC               	movwf	??_RecordMode
  4605  03D3                     u2887:	
  4606  03D3  0BBC               	decfsz	??_RecordMode,f
  4607  03D4  2BD3               	goto	u2887
  4608  03D5  0BBD               	decfsz	??_RecordMode+1,f
  4609  03D6  2BD3               	goto	u2887
  4610  03D7  0BBE               	decfsz	??_RecordMode+2,f
  4611  03D8  2BD3               	goto	u2887
  4612  03D9  0000               	nop
  4613                           
  4614                           ;launcher_functions.c: 587: WriteOverheadSPI(address);
  4615  03DA  0020               	movlb	0	; select bank0
  4616  03DB  0846               	movf	RecordMode@address+3,w
  4617  03DC  00AA               	movwf	WriteOverheadSPI@address+3
  4618  03DD  0845               	movf	RecordMode@address+2,w
  4619  03DE  00A9               	movwf	WriteOverheadSPI@address+2
  4620  03DF  0844               	movf	RecordMode@address+1,w
  4621  03E0  00A8               	movwf	WriteOverheadSPI@address+1
  4622  03E1  0843               	movf	RecordMode@address,w
  4623  03E2  00A7               	movwf	WriteOverheadSPI@address
  4624  03E3  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4625                           
  4626                           ;launcher_functions.c: 588: TMR1IF = 0;
  4627  03E6  0020               	movlb	0	; select bank0
  4628  03E7  1011               	bcf	17,0	;volatile
  4629                           
  4630                           ;launcher_functions.c: 589: TMR1IE = 1;
  4631  03E8  0021               	movlb	1	; select bank1
  4632  03E9  1411               	bsf	17,0	;volatile
  4633                           
  4634                           ;launcher_functions.c: 590: TMR1ON = 1;
  4635  03EA  0020               	movlb	0	; select bank0
  4636  03EB  1418               	bsf	24,0	;volatile
  4637                           
  4638                           ;launcher_functions.c: 591: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  4639  03EC  0022               	movlb	2	; select bank2
  4640  03ED  080D               	movf	13,w	;volatile
  4641  03EE  39FF               	andlw	255
  4642  03EF  3820               	iorlw	32
  4643  03F0  0020               	movlb	0	; select bank0
  4644  03F1  00BC               	movwf	??_RecordMode
  4645  03F2  080D               	movf	13,w	;volatile
  4646  03F3  063C               	xorwf	??_RecordMode,w
  4647  03F4  3900               	andlw	-256
  4648  03F5  063C               	xorwf	??_RecordMode,w
  4649  03F6  008D               	movwf	13	;volatile
  4650                           
  4651                           ;launcher_functions.c: 592: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  4652  03F7  0022               	movlb	2	; select bank2
  4653  03F8  080D               	movf	13,w	;volatile
  4654  03F9  39FF               	andlw	255
  4655  03FA  39EF               	andlw	239
  4656  03FB  0020               	movlb	0	; select bank0
  4657  03FC  00BC               	movwf	??_RecordMode
  4658  03FD  080D               	movf	13,w	;volatile
  4659  03FE  063C               	xorwf	??_RecordMode,w
  4660  03FF  3900               	andlw	-256
  4661  0400  063C               	xorwf	??_RecordMode,w
  4662  0401  008D               	movwf	13	;volatile
  4663  0402                     l2707:	
  4664                           ;launcher_functions.c: 594: while((recordFlag) && (address < 131072))
  4665                           
  4666  0402  0020               	movlb	0	; select bank0
  4667  0403  086C               	movf	_recordFlag,w
  4668  0404  1903               	btfsc	3,2
  4669  0405  2C89               	goto	l2727
  4670  0406  0846               	movf	RecordMode@address+3,w
  4671  0407  3A80               	xorlw	128
  4672  0408  00BC               	movwf	??_RecordMode
  4673  0409  3000               	movlw	0
  4674  040A  3A80               	xorlw	128
  4675  040B  023C               	subwf	??_RecordMode,w
  4676  040C  1D03               	skipz
  4677  040D  2C18               	goto	u2223
  4678  040E  3002               	movlw	2
  4679  040F  0245               	subwf	RecordMode@address+2,w
  4680  0410  1D03               	skipz
  4681  0411  2C18               	goto	u2223
  4682  0412  3000               	movlw	0
  4683  0413  0244               	subwf	RecordMode@address+1,w
  4684  0414  1D03               	skipz
  4685  0415  2C18               	goto	u2223
  4686  0416  3000               	movlw	0
  4687  0417  0243               	subwf	RecordMode@address,w
  4688  0418                     u2223:	
  4689  0418  1803               	btfsc	3,0
  4690  0419  2C89               	goto	l2727
  4691                           
  4692                           ;launcher_functions.c: 595: {
  4693                           ;launcher_functions.c: 596: if(count>=256)
  4694  041A  0842               	movf	RecordMode@count+1,w
  4695  041B  3A80               	xorlw	128
  4696  041C  00BC               	movwf	??_RecordMode
  4697  041D  3081               	movlw	129
  4698  041E  023C               	subwf	??_RecordMode,w
  4699  041F  1D03               	skipz
  4700  0420  2C23               	goto	u2195
  4701  0421  3000               	movlw	0
  4702  0422  0241               	subwf	RecordMode@count,w
  4703  0423                     u2195:	
  4704  0423  1C03               	skipc
  4705  0424  2C35               	goto	l2699
  4706                           
  4707                           ;launcher_functions.c: 597: {
  4708                           ;launcher_functions.c: 598: LATC2 = (1);
  4709  0425  0022               	movlb	2	; select bank2
  4710  0426  150E               	bsf	14,2	;volatile
  4711                           
  4712                           ;launcher_functions.c: 599: count = 0;
  4713  0427  0020               	movlb	0	; select bank0
  4714  0428  01C1               	clrf	RecordMode@count
  4715  0429  01C2               	clrf	RecordMode@count+1
  4716                           
  4717                           ;launcher_functions.c: 600: WriteOverheadSPI(address);
  4718  042A  0846               	movf	RecordMode@address+3,w
  4719  042B  00AA               	movwf	WriteOverheadSPI@address+3
  4720  042C  0845               	movf	RecordMode@address+2,w
  4721  042D  00A9               	movwf	WriteOverheadSPI@address+2
  4722  042E  0844               	movf	RecordMode@address+1,w
  4723  042F  00A8               	movwf	WriteOverheadSPI@address+1
  4724  0430  0843               	movf	RecordMode@address,w
  4725  0431  00A7               	movwf	WriteOverheadSPI@address
  4726  0432  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4727  0435                     l2699:	
  4728                           
  4729                           ;launcher_functions.c: 601: }
  4730                           ;launcher_functions.c: 602: if(!((((start))==((end)))?(1):(0)))
  4731  0435  087A               	movf	_end+1,w
  4732  0436  067C               	xorwf	_start+1,w
  4733  0437  1D03               	skipz
  4734  0438  2C3B               	goto	u2205
  4735  0439  0879               	movf	_end,w
  4736  043A  067B               	xorwf	_start,w
  4737  043B                     u2205:	
  4738  043B  1903               	skipnz
  4739  043C  2C02               	goto	l2707
  4740                           
  4741                           ;launcher_functions.c: 603: {
  4742                           ;launcher_functions.c: 604: WriteSPI(ReadBuffer());
  4743  043D  318C  24DC  3183   	fcall	_ReadBuffer
  4744  0440  318C  249C  3183   	fcall	_WriteSPI
  4745                           
  4746                           ;launcher_functions.c: 605: address++;
  4747  0443  3001               	movlw	1
  4748  0444  0020               	movlb	0	; select bank0
  4749  0445  07C3               	addwf	RecordMode@address,f
  4750  0446  3000               	movlw	0
  4751  0447  3DC4               	addwfc	RecordMode@address+1,f
  4752  0448  3000               	movlw	0
  4753  0449  3DC5               	addwfc	RecordMode@address+2,f
  4754  044A  3000               	movlw	0
  4755  044B  3DC6               	addwfc	RecordMode@address+3,f
  4756                           
  4757                           ;launcher_functions.c: 606: count++;
  4758  044C  3001               	movlw	1
  4759  044D  07C1               	addwf	RecordMode@count,f
  4760  044E  3000               	movlw	0
  4761  044F  3DC2               	addwfc	RecordMode@count+1,f
  4762  0450  2C02               	goto	l2707
  4763  0451                     l2711:	
  4764                           ;launcher_functions.c: 607: }
  4765                           ;launcher_functions.c: 609: }
  4766                           ;launcher_functions.c: 611: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4767                           
  4768                           
  4769                           ;launcher_functions.c: 612: {
  4770                           ;launcher_functions.c: 613: if(count>=256)
  4771  0451  0842               	movf	RecordMode@count+1,w
  4772  0452  3A80               	xorlw	128
  4773  0453  00BC               	movwf	??_RecordMode
  4774  0454  3081               	movlw	129
  4775  0455  023C               	subwf	??_RecordMode,w
  4776  0456  1D03               	skipz
  4777  0457  2C5A               	goto	u2235
  4778  0458  3000               	movlw	0
  4779  0459  0241               	subwf	RecordMode@count,w
  4780  045A                     u2235:	
  4781  045A  1C03               	skipc
  4782  045B  2C6C               	goto	l2719
  4783                           
  4784                           ;launcher_functions.c: 614: {
  4785                           ;launcher_functions.c: 615: LATC2 = (1);
  4786  045C  0022               	movlb	2	; select bank2
  4787  045D  150E               	bsf	14,2	;volatile
  4788                           
  4789                           ;launcher_functions.c: 616: count = 0;
  4790  045E  0020               	movlb	0	; select bank0
  4791  045F  01C1               	clrf	RecordMode@count
  4792  0460  01C2               	clrf	RecordMode@count+1
  4793                           
  4794                           ;launcher_functions.c: 617: WriteOverheadSPI(address);
  4795  0461  0846               	movf	RecordMode@address+3,w
  4796  0462  00AA               	movwf	WriteOverheadSPI@address+3
  4797  0463  0845               	movf	RecordMode@address+2,w
  4798  0464  00A9               	movwf	WriteOverheadSPI@address+2
  4799  0465  0844               	movf	RecordMode@address+1,w
  4800  0466  00A8               	movwf	WriteOverheadSPI@address+1
  4801  0467  0843               	movf	RecordMode@address,w
  4802  0468  00A7               	movwf	WriteOverheadSPI@address
  4803  0469  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4804  046C                     l2719:	
  4805                           
  4806                           ;launcher_functions.c: 618: }
  4807                           ;launcher_functions.c: 619: if(!((((start))==((end)))?(1):(0)))
  4808  046C  087A               	movf	_end+1,w
  4809  046D  067C               	xorwf	_start+1,w
  4810  046E  1D03               	skipz
  4811  046F  2C72               	goto	u2245
  4812  0470  0879               	movf	_end,w
  4813  0471  067B               	xorwf	_start,w
  4814  0472                     u2245:	
  4815  0472  1D03               	btfss	3,2
  4816  0473  2C76               	goto	l2721
  4817  0474  0020               	movlb	0	; select bank0
  4818  0475  2C89               	goto	l2727
  4819  0476                     l2721:	
  4820                           
  4821                           ;launcher_functions.c: 620: {
  4822                           ;launcher_functions.c: 621: WriteSPI(ReadBuffer());
  4823  0476  318C  24DC  3183   	fcall	_ReadBuffer
  4824  0479  318C  249C  3183   	fcall	_WriteSPI
  4825                           
  4826                           ;launcher_functions.c: 622: address++;
  4827  047C  3001               	movlw	1
  4828  047D  0020               	movlb	0	; select bank0
  4829  047E  07C3               	addwf	RecordMode@address,f
  4830  047F  3000               	movlw	0
  4831  0480  3DC4               	addwfc	RecordMode@address+1,f
  4832  0481  3000               	movlw	0
  4833  0482  3DC5               	addwfc	RecordMode@address+2,f
  4834  0483  3000               	movlw	0
  4835  0484  3DC6               	addwfc	RecordMode@address+3,f
  4836                           
  4837                           ;launcher_functions.c: 623: count++;
  4838  0485  3001               	movlw	1
  4839  0486  07C1               	addwf	RecordMode@count,f
  4840  0487  3000               	movlw	0
  4841  0488  3DC2               	addwfc	RecordMode@count+1,f
  4842  0489                     l2727:	
  4843  0489  087A               	movf	_end+1,w
  4844  048A  067C               	xorwf	_start+1,w
  4845  048B  1D03               	skipz
  4846  048C  2C8F               	goto	u2255
  4847  048D  0879               	movf	_end,w
  4848  048E  067B               	xorwf	_start,w
  4849  048F                     u2255:	
  4850  048F  1903               	skipnz
  4851  0490  2CA6               	goto	l449
  4852  0491  0020               	movlb	0	; select bank0
  4853  0492  0846               	movf	RecordMode@address+3,w
  4854  0493  3A80               	xorlw	128
  4855  0494  00BC               	movwf	??_RecordMode
  4856  0495  3000               	movlw	0
  4857  0496  3A80               	xorlw	128
  4858  0497  023C               	subwf	??_RecordMode,w
  4859  0498  1D03               	skipz
  4860  0499  2CA4               	goto	u2263
  4861  049A  3002               	movlw	2
  4862  049B  0245               	subwf	RecordMode@address+2,w
  4863  049C  1D03               	skipz
  4864  049D  2CA4               	goto	u2263
  4865  049E  3000               	movlw	0
  4866  049F  0244               	subwf	RecordMode@address+1,w
  4867  04A0  1D03               	skipz
  4868  04A1  2CA4               	goto	u2263
  4869  04A2  3000               	movlw	0
  4870  04A3  0243               	subwf	RecordMode@address,w
  4871  04A4                     u2263:	
  4872  04A4  1C03               	skipc
  4873  04A5  2C51               	goto	l2711
  4874  04A6                     l449:	
  4875                           
  4876                           ;launcher_functions.c: 624: }
  4877                           ;launcher_functions.c: 625: }
  4878                           ;launcher_functions.c: 626: LATC2 = (1);
  4879  04A6  0022               	movlb	2	; select bank2
  4880  04A7  150E               	bsf	14,2	;volatile
  4881                           
  4882                           ;launcher_functions.c: 627: TMR1IE = 0;
  4883  04A8  0021               	movlb	1	; select bank1
  4884  04A9  1011               	bcf	17,0	;volatile
  4885                           
  4886                           ;launcher_functions.c: 628: TMR1ON = 0;
  4887  04AA  0020               	movlb	0	; select bank0
  4888  04AB  1018               	bcf	24,0	;volatile
  4889                           
  4890                           ;launcher_functions.c: 629: _delay((unsigned long)((5)*(16000000/4000.0)));
  4891  04AC  301A               	movlw	26
  4892  04AD  00BD               	movwf	??_RecordMode+1
  4893  04AE  30F8               	movlw	248
  4894  04AF  00BC               	movwf	??_RecordMode
  4895  04B0                     u2897:	
  4896  04B0  0BBC               	decfsz	??_RecordMode,f
  4897  04B1  2CB0               	goto	u2897
  4898  04B2  0BBD               	decfsz	??_RecordMode+1,f
  4899  04B3  2CB0               	goto	u2897
  4900  04B4  0000               	nop
  4901                           
  4902                           ;launcher_functions.c: 632: WriteOverheadSPI(0xBB68);
  4903  04B5  3000               	movlw	0
  4904  04B6  0020               	movlb	0	; select bank0
  4905  04B7  00AA               	movwf	WriteOverheadSPI@address+3
  4906  04B8  3000               	movlw	0
  4907  04B9  00A9               	movwf	WriteOverheadSPI@address+2
  4908  04BA  30BB               	movlw	187
  4909  04BB  00A8               	movwf	WriteOverheadSPI@address+1
  4910  04BC  3068               	movlw	104
  4911  04BD  00A7               	movwf	WriteOverheadSPI@address
  4912  04BE  318E  26B4  3183   	fcall	_WriteOverheadSPI
  4913                           
  4914                           ;launcher_functions.c: 633: if(address >= 131072)
  4915  04C1  0020               	movlb	0	; select bank0
  4916  04C2  0846               	movf	RecordMode@address+3,w
  4917  04C3  3A80               	xorlw	128
  4918  04C4  00BC               	movwf	??_RecordMode
  4919  04C5  3000               	movlw	0
  4920  04C6  3A80               	xorlw	128
  4921  04C7  023C               	subwf	??_RecordMode,w
  4922  04C8  1D03               	skipz
  4923  04C9  2CD4               	goto	u2273
  4924  04CA  3002               	movlw	2
  4925  04CB  0245               	subwf	RecordMode@address+2,w
  4926  04CC  1D03               	skipz
  4927  04CD  2CD4               	goto	u2273
  4928  04CE  3000               	movlw	0
  4929  04CF  0244               	subwf	RecordMode@address+1,w
  4930  04D0  1D03               	skipz
  4931  04D1  2CD4               	goto	u2273
  4932  04D2  3000               	movlw	0
  4933  04D3  0243               	subwf	RecordMode@address,w
  4934  04D4                     u2273:	
  4935  04D4  1C03               	skipc
  4936  04D5  2CE0               	goto	l2739
  4937                           
  4938                           ;launcher_functions.c: 634: {
  4939                           ;launcher_functions.c: 635: WriteSPI((131072 - 1)>>16);
  4940  04D6  3001               	movlw	1
  4941  04D7  318C  249C  3183   	fcall	_WriteSPI
  4942                           
  4943                           ;launcher_functions.c: 636: WriteSPI((131072 - 1)>>8);
  4944  04DA  30FF               	movlw	255
  4945  04DB  318C  249C  3183   	fcall	_WriteSPI
  4946                           
  4947                           ;launcher_functions.c: 637: WriteSPI(131072 - 1);
  4948  04DE  30FF               	movlw	255
  4949  04DF  2D0C               	goto	L3
  4950  04E0                     l2739:	
  4951                           ;launcher_functions.c: 638: }
  4952                           
  4953                           
  4954                           ;launcher_functions.c: 639: else
  4955                           ;launcher_functions.c: 640: {
  4956                           ;launcher_functions.c: 641: WriteSPI(address>>16);
  4957  04E0  0020               	movlb	0	; select bank0
  4958  04E1  0843               	movf	RecordMode@address,w
  4959  04E2  00BC               	movwf	??_RecordMode
  4960  04E3  0844               	movf	RecordMode@address+1,w
  4961  04E4  00BD               	movwf	??_RecordMode+1
  4962  04E5  0845               	movf	RecordMode@address+2,w
  4963  04E6  00BE               	movwf	??_RecordMode+2
  4964  04E7  0846               	movf	RecordMode@address+3,w
  4965  04E8  00BF               	movwf	??_RecordMode+3
  4966  04E9  3010               	movlw	16
  4967  04EA  00C0               	movwf	??_RecordMode+4
  4968  04EB                     u2285:	
  4969  04EB  37BF               	asrf	??_RecordMode+3,f
  4970  04EC  0CBE               	rrf	??_RecordMode+2,f
  4971  04ED  0CBD               	rrf	??_RecordMode+1,f
  4972  04EE  0CBC               	rrf	??_RecordMode,f
  4973  04EF  0BC0               	decfsz	??_RecordMode+4,f
  4974  04F0  2CEB               	goto	u2285
  4975  04F1  083C               	movf	??_RecordMode,w
  4976  04F2  318C  249C  3183   	fcall	_WriteSPI
  4977                           
  4978                           ;launcher_functions.c: 642: WriteSPI(address>>8);
  4979  04F5  0020               	movlb	0	; select bank0
  4980  04F6  0843               	movf	RecordMode@address,w
  4981  04F7  00BC               	movwf	??_RecordMode
  4982  04F8  0844               	movf	RecordMode@address+1,w
  4983  04F9  00BD               	movwf	??_RecordMode+1
  4984  04FA  0845               	movf	RecordMode@address+2,w
  4985  04FB  00BE               	movwf	??_RecordMode+2
  4986  04FC  0846               	movf	RecordMode@address+3,w
  4987  04FD  00BF               	movwf	??_RecordMode+3
  4988  04FE  3008               	movlw	8
  4989  04FF  00C0               	movwf	??_RecordMode+4
  4990  0500                     u2295:	
  4991  0500  37BF               	asrf	??_RecordMode+3,f
  4992  0501  0CBE               	rrf	??_RecordMode+2,f
  4993  0502  0CBD               	rrf	??_RecordMode+1,f
  4994  0503  0CBC               	rrf	??_RecordMode,f
  4995  0504  0BC0               	decfsz	??_RecordMode+4,f
  4996  0505  2D00               	goto	u2295
  4997  0506  083C               	movf	??_RecordMode,w
  4998  0507  318C  249C  3183   	fcall	_WriteSPI
  4999                           
  5000                           ;launcher_functions.c: 643: WriteSPI(address);
  5001  050A  0020               	movlb	0	; select bank0
  5002  050B  0843               	movf	RecordMode@address,w
  5003  050C                     L3:	
  5004  050C  318C  249C  3183   	fcall	_WriteSPI
  5005                           
  5006                           ;launcher_functions.c: 644: }
  5007                           ;launcher_functions.c: 646: LATC2 = (1);
  5008  050F  0022               	movlb	2	; select bank2
  5009  0510  150E               	bsf	14,2	;volatile
  5010                           
  5011                           ;launcher_functions.c: 647: if(hasValidGPSFlag)
  5012  0511  0020               	movlb	0	; select bank0
  5013  0512  086A               	movf	_hasValidGPSFlag,w
  5014  0513  1903               	btfsc	3,2
  5015  0514  2D19               	goto	l2749
  5016                           
  5017                           ;launcher_functions.c: 648: {
  5018                           ;launcher_functions.c: 649: SendGPSSPI();
  5019  0515  318F  2714         	fcall	_SendGPSSPI
  5020                           
  5021                           ;launcher_functions.c: 650: hasValidGPSFlag = 0;
  5022  0517  0020               	movlb	0	; select bank0
  5023  0518  01EA               	clrf	_hasValidGPSFlag
  5024  0519                     l2749:	
  5025                           
  5026                           ;launcher_functions.c: 651: }
  5027                           ;launcher_functions.c: 652: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  5028  0519  0022               	movlb	2	; select bank2
  5029  051A  080D               	movf	13,w	;volatile
  5030  051B  39FF               	andlw	255
  5031  051C  39DF               	andlw	223
  5032  051D  0020               	movlb	0	; select bank0
  5033  051E  00BC               	movwf	??_RecordMode
  5034  051F  080D               	movf	13,w	;volatile
  5035  0520  063C               	xorwf	??_RecordMode,w
  5036  0521  3900               	andlw	-256
  5037  0522  063C               	xorwf	??_RecordMode,w
  5038  0523  008D               	movwf	13	;volatile
  5039                           
  5040                           ;launcher_functions.c: 653: (start) = 0;
  5041  0524  01FB               	clrf	_start
  5042  0525  01FC               	clrf	_start+1
  5043                           
  5044                           ;launcher_functions.c: 654: (end) = 0;
  5045  0526  01F9               	clrf	_end
  5046  0527  01FA               	clrf	_end+1
  5047                           
  5048                           ;launcher_functions.c: 655: SSPCON1bits.SSPEN=0;
  5049  0528  0024               	movlb	4	; select bank4
  5050  0529  1295               	bcf	21,5	;volatile
  5051                           
  5052                           ;launcher_functions.c: 658: PORTCbits.PORTC = LATCbits.LATC & 0xD7;
  5053  052A  0022               	movlb	2	; select bank2
  5054  052B  080E               	movf	14,w	;volatile
  5055  052C  39FF               	andlw	255
  5056  052D  39D7               	andlw	215
  5057  052E  0020               	movlb	0	; select bank0
  5058  052F  00BC               	movwf	??_RecordMode
  5059  0530  080E               	movf	14,w	;volatile
  5060  0531  063C               	xorwf	??_RecordMode,w
  5061  0532  3900               	andlw	-256
  5062  0533  063C               	xorwf	??_RecordMode,w
  5063  0534  008E               	movwf	14	;volatile
  5064                           
  5065                           ;launcher_functions.c: 659: PORTAbits.RA4 = 0;
  5066  0535  120C               	bcf	12,4	;volatile
  5067  0536  0008               	return
  5068  0537                     __end_of_RecordMode:	
  5069                           
  5070                           	psect	text15
  5071  0F14                     __ptext15:	
  5072 ;; *************** function _SendGPSSPI *****************
  5073 ;; Defined at:
  5074 ;;		line 662 in file "launcher_functions.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  address         4   22[BANK0 ] long 
  5079 ;;  x               2   26[BANK0 ] int 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;		None               void
  5082 ;; Registers used:
  5083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5089 ;;      Params:         0       0       0       0       0       0       0
  5090 ;;      Locals:         0       6       0       0       0       0       0
  5091 ;;      Temps:          0       1       0       0       0       0       0
  5092 ;;      Totals:         0       7       0       0       0       0       0
  5093 ;;Total ram usage:        7 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    5
  5096 ;; This function calls:
  5097 ;;		_InitSPI
  5098 ;;		_WriteOverheadSPI
  5099 ;;		_WriteSPI
  5100 ;; This function is called by:
  5101 ;;		_RecordMode
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _SendGPSSPI
  5107  0F14                     _SendGPSSPI:	
  5108                           
  5109                           ;launcher_functions.c: 664: long int address = 0xBB68 + 3;
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5113  0F14  3000               	movlw	0
  5114  0F15  0020               	movlb	0	; select bank0
  5115  0F16  00B9               	movwf	SendGPSSPI@address+3
  5116  0F17  3000               	movlw	0
  5117  0F18  00B8               	movwf	SendGPSSPI@address+2
  5118  0F19  30BB               	movlw	187
  5119  0F1A  00B7               	movwf	SendGPSSPI@address+1
  5120  0F1B  306B               	movlw	107
  5121  0F1C  00B6               	movwf	SendGPSSPI@address
  5122                           
  5123                           ;launcher_functions.c: 665: int x;
  5124                           ;launcher_functions.c: 666: PORTAbits.RA4 = 1;
  5125  0F1D  160C               	bsf	12,4	;volatile
  5126                           
  5127                           ;launcher_functions.c: 667: if(SSPCON1bits.SSPEN == 0)
  5128  0F1E  0024               	movlb	4	; select bank4
  5129  0F1F  1A95               	btfsc	21,5	;volatile
  5130  0F20  2F24               	goto	l455
  5131                           
  5132                           ;launcher_functions.c: 668: InitSPI();
  5133  0F21  318C  2478  318F   	fcall	_InitSPI
  5134  0F24                     l455:	
  5135                           
  5136                           ;launcher_functions.c: 682: WriteOverheadSPI(address);
  5137  0F24  0020               	movlb	0	; select bank0
  5138  0F25  0839               	movf	SendGPSSPI@address+3,w
  5139  0F26  00AA               	movwf	WriteOverheadSPI@address+3
  5140  0F27  0838               	movf	SendGPSSPI@address+2,w
  5141  0F28  00A9               	movwf	WriteOverheadSPI@address+2
  5142  0F29  0837               	movf	SendGPSSPI@address+1,w
  5143  0F2A  00A8               	movwf	WriteOverheadSPI@address+1
  5144  0F2B  0836               	movf	SendGPSSPI@address,w
  5145  0F2C  00A7               	movwf	WriteOverheadSPI@address
  5146  0F2D  318E  26B4  318F   	fcall	_WriteOverheadSPI
  5147                           
  5148                           ;launcher_functions.c: 683: for(x=0;x<3;x++)
  5149  0F30  0020               	movlb	0	; select bank0
  5150  0F31  01BA               	clrf	SendGPSSPI@x
  5151  0F32  01BB               	clrf	SendGPSSPI@x+1
  5152  0F33  083B               	movf	SendGPSSPI@x+1,w
  5153  0F34  3A80               	xorlw	128
  5154  0F35  00B5               	movwf	??_SendGPSSPI
  5155  0F36  3080               	movlw	128
  5156  0F37  0235               	subwf	??_SendGPSSPI,w
  5157  0F38  1D03               	skipz
  5158  0F39  2F3C               	goto	u2115
  5159  0F3A  3003               	movlw	3
  5160  0F3B  023A               	subwf	SendGPSSPI@x,w
  5161  0F3C                     u2115:	
  5162  0F3C  1803               	btfsc	3,0
  5163  0F3D  2F57               	goto	l2491
  5164  0F3E                     l2485:	
  5165                           
  5166                           ;launcher_functions.c: 684: {
  5167                           ;launcher_functions.c: 685: WriteSPI(validLatitude[x]);
  5168  0F3E  0020               	movlb	0	; select bank0
  5169  0F3F  083A               	movf	SendGPSSPI@x,w
  5170  0F40  3E63               	addlw	_validLatitude& (0+255)
  5171  0F41  0086               	movwf	6
  5172  0F42  0187               	clrf	7
  5173  0F43  0801               	movf	1,w
  5174  0F44  318C  249C  318F   	fcall	_WriteSPI
  5175  0F47  3001               	movlw	1
  5176  0F48  0020               	movlb	0	; select bank0
  5177  0F49  07BA               	addwf	SendGPSSPI@x,f
  5178  0F4A  3000               	movlw	0
  5179  0F4B  3DBB               	addwfc	SendGPSSPI@x+1,f
  5180  0F4C  083B               	movf	SendGPSSPI@x+1,w
  5181  0F4D  3A80               	xorlw	128
  5182  0F4E  00B5               	movwf	??_SendGPSSPI
  5183  0F4F  3080               	movlw	128
  5184  0F50  0235               	subwf	??_SendGPSSPI,w
  5185  0F51  1D03               	skipz
  5186  0F52  2F55               	goto	u2125
  5187  0F53  3003               	movlw	3
  5188  0F54  023A               	subwf	SendGPSSPI@x,w
  5189  0F55                     u2125:	
  5190  0F55  1C03               	skipc
  5191  0F56  2F3E               	goto	l2485
  5192  0F57                     l2491:	
  5193                           
  5194                           ;launcher_functions.c: 686: }
  5195                           ;launcher_functions.c: 687: WriteSPI(validNorthSouth);
  5196  0F57  0020               	movlb	0	; select bank0
  5197  0F58  0868               	movf	_validNorthSouth,w
  5198  0F59  318C  249C  318F   	fcall	_WriteSPI
  5199                           
  5200                           ;launcher_functions.c: 688: for(x=0;x<3;x++)
  5201  0F5C  0020               	movlb	0	; select bank0
  5202  0F5D  01BA               	clrf	SendGPSSPI@x
  5203  0F5E  01BB               	clrf	SendGPSSPI@x+1
  5204  0F5F  083B               	movf	SendGPSSPI@x+1,w
  5205  0F60  3A80               	xorlw	128
  5206  0F61  00B5               	movwf	??_SendGPSSPI
  5207  0F62  3080               	movlw	128
  5208  0F63  0235               	subwf	??_SendGPSSPI,w
  5209  0F64  1D03               	skipz
  5210  0F65  2F68               	goto	u2135
  5211  0F66  3003               	movlw	3
  5212  0F67  023A               	subwf	SendGPSSPI@x,w
  5213  0F68                     u2135:	
  5214  0F68  1803               	btfsc	3,0
  5215  0F69  2F83               	goto	l2505
  5216  0F6A                     l2499:	
  5217                           
  5218                           ;launcher_functions.c: 689: {
  5219                           ;launcher_functions.c: 690: WriteSPI(validLongitude[x]);
  5220  0F6A  0020               	movlb	0	; select bank0
  5221  0F6B  083A               	movf	SendGPSSPI@x,w
  5222  0F6C  3EEC               	addlw	_validLongitude& (0+255)
  5223  0F6D  0086               	movwf	6
  5224  0F6E  0187               	clrf	7
  5225  0F6F  0801               	movf	1,w
  5226  0F70  318C  249C  318F   	fcall	_WriteSPI
  5227  0F73  3001               	movlw	1
  5228  0F74  0020               	movlb	0	; select bank0
  5229  0F75  07BA               	addwf	SendGPSSPI@x,f
  5230  0F76  3000               	movlw	0
  5231  0F77  3DBB               	addwfc	SendGPSSPI@x+1,f
  5232  0F78  083B               	movf	SendGPSSPI@x+1,w
  5233  0F79  3A80               	xorlw	128
  5234  0F7A  00B5               	movwf	??_SendGPSSPI
  5235  0F7B  3080               	movlw	128
  5236  0F7C  0235               	subwf	??_SendGPSSPI,w
  5237  0F7D  1D03               	skipz
  5238  0F7E  2F81               	goto	u2145
  5239  0F7F  3003               	movlw	3
  5240  0F80  023A               	subwf	SendGPSSPI@x,w
  5241  0F81                     u2145:	
  5242  0F81  1C03               	skipc
  5243  0F82  2F6A               	goto	l2499
  5244  0F83                     l2505:	
  5245                           
  5246                           ;launcher_functions.c: 691: }
  5247                           ;launcher_functions.c: 692: WriteSPI(validEastWest);
  5248  0F83  0020               	movlb	0	; select bank0
  5249  0F84  0867               	movf	_validEastWest,w
  5250  0F85  318C  249C         	fcall	_WriteSPI
  5251                           
  5252                           ;launcher_functions.c: 694: LATC2 = (1);
  5253  0F87  0022               	movlb	2	; select bank2
  5254  0F88  150E               	bsf	14,2	;volatile
  5255  0F89  0008               	return
  5256  0F8A                     __end_of_SendGPSSPI:	
  5257                           ;launcher_functions.c: 702: return;
  5258                           
  5259                           
  5260                           	psect	text16
  5261  0EB4                     __ptext16:	
  5262 ;; *************** function _WriteOverheadSPI *****************
  5263 ;; Defined at:
  5264 ;;		line 176 in file "launcher_functions.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  address         4    7[BANK0 ] long 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5269 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;		None               void
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5279 ;;      Params:         0       4       0       0       0       0       0
  5280 ;;      Locals:         0       4       0       0       0       0       0
  5281 ;;      Temps:          0       6       0       0       0       0       0
  5282 ;;      Totals:         0      14       0       0       0       0       0
  5283 ;;Total ram usage:       14 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    4
  5286 ;; This function calls:
  5287 ;;		_ReadStatusSPI
  5288 ;;		_WriteSPI
  5289 ;; This function is called by:
  5290 ;;		_RecordMode
  5291 ;;		_SendGPSSPI
  5292 ;;		_PreRecordMode
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _WriteOverheadSPI
  5298  0EB4                     _WriteOverheadSPI:	
  5299                           
  5300                           ;launcher_functions.c: 178: unsigned char address_bytes[3];
  5301                           ;launcher_functions.c: 179: unsigned char StatusReg;
  5302                           ;launcher_functions.c: 181: address_bytes[0]=(unsigned char)(address>>16);
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5306  0EB4  0020               	movlb	0	; select bank0
  5307  0EB5  0827               	movf	WriteOverheadSPI@address,w
  5308  0EB6  00AB               	movwf	??_WriteOverheadSPI
  5309  0EB7  0828               	movf	WriteOverheadSPI@address+1,w
  5310  0EB8  00AC               	movwf	??_WriteOverheadSPI+1
  5311  0EB9  0829               	movf	WriteOverheadSPI@address+2,w
  5312  0EBA  00AD               	movwf	??_WriteOverheadSPI+2
  5313  0EBB  082A               	movf	WriteOverheadSPI@address+3,w
  5314  0EBC  00AE               	movwf	??_WriteOverheadSPI+3
  5315  0EBD  3010               	movlw	16
  5316  0EBE  00AF               	movwf	??_WriteOverheadSPI+4
  5317  0EBF                     u1425:	
  5318  0EBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  5319  0EC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5320  0EC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5321  0EC2  0CAB               	rrf	??_WriteOverheadSPI,f
  5322  0EC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5323  0EC4  2EBF               	goto	u1425
  5324  0EC5  082B               	movf	??_WriteOverheadSPI,w
  5325  0EC6  00B0               	movwf	??_WriteOverheadSPI+5
  5326  0EC7  0830               	movf	??_WriteOverheadSPI+5,w
  5327  0EC8  00B1               	movwf	WriteOverheadSPI@address_bytes
  5328                           
  5329                           ;launcher_functions.c: 182: address_bytes[1]=(unsigned char)(address>>8);
  5330  0EC9  0827               	movf	WriteOverheadSPI@address,w
  5331  0ECA  00AB               	movwf	??_WriteOverheadSPI
  5332  0ECB  0828               	movf	WriteOverheadSPI@address+1,w
  5333  0ECC  00AC               	movwf	??_WriteOverheadSPI+1
  5334  0ECD  0829               	movf	WriteOverheadSPI@address+2,w
  5335  0ECE  00AD               	movwf	??_WriteOverheadSPI+2
  5336  0ECF  082A               	movf	WriteOverheadSPI@address+3,w
  5337  0ED0  00AE               	movwf	??_WriteOverheadSPI+3
  5338  0ED1  3008               	movlw	8
  5339  0ED2  00AF               	movwf	??_WriteOverheadSPI+4
  5340  0ED3                     u1435:	
  5341  0ED3  37AE               	asrf	??_WriteOverheadSPI+3,f
  5342  0ED4  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5343  0ED5  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5344  0ED6  0CAB               	rrf	??_WriteOverheadSPI,f
  5345  0ED7  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5346  0ED8  2ED3               	goto	u1435
  5347  0ED9  082B               	movf	??_WriteOverheadSPI,w
  5348  0EDA  00B0               	movwf	??_WriteOverheadSPI+5
  5349  0EDB  0830               	movf	??_WriteOverheadSPI+5,w
  5350  0EDC  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5351                           
  5352                           ;launcher_functions.c: 183: address_bytes[2]=(unsigned char)(address);
  5353  0EDD  0827               	movf	WriteOverheadSPI@address,w
  5354  0EDE  00AB               	movwf	??_WriteOverheadSPI
  5355  0EDF  082B               	movf	??_WriteOverheadSPI,w
  5356  0EE0  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5357  0EE1                     l2055:	
  5358                           ;launcher_functions.c: 185: do
  5359                           
  5360                           
  5361                           ;launcher_functions.c: 186: {
  5362                           ;launcher_functions.c: 187: StatusReg = (ReadStatusSPI() & 0x01);
  5363  0EE1  318C  2455  318E   	fcall	_ReadStatusSPI
  5364  0EE4  3901               	andlw	1
  5365  0EE5  0020               	movlb	0	; select bank0
  5366  0EE6  00AB               	movwf	??_WriteOverheadSPI
  5367  0EE7  082B               	movf	??_WriteOverheadSPI,w
  5368  0EE8  00B4               	movwf	WriteOverheadSPI@StatusReg
  5369                           
  5370                           ;launcher_functions.c: 188: } while (StatusReg);
  5371  0EE9  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5372  0EEA  1D03               	skipz
  5373  0EEB  2EE1               	goto	l2055
  5374                           
  5375                           ;launcher_functions.c: 191: LATC2 = (0);
  5376  0EEC  0022               	movlb	2	; select bank2
  5377  0EED  110E               	bcf	14,2	;volatile
  5378                           
  5379                           ;launcher_functions.c: 192: WriteSPI((0x06));
  5380  0EEE  3006               	movlw	6
  5381  0EEF  318C  249C  318E   	fcall	_WriteSPI
  5382                           
  5383                           ;launcher_functions.c: 193: LATC2 = (1);
  5384  0EF2  0022               	movlb	2	; select bank2
  5385  0EF3  150E               	bsf	14,2	;volatile
  5386  0EF4                     l322:	
  5387                           ;launcher_functions.c: 195: do
  5388                           
  5389                           
  5390                           ;launcher_functions.c: 196: {
  5391                           ;launcher_functions.c: 197: StatusReg = (ReadStatusSPI() & 0x02);
  5392  0EF4  318C  2455  318E   	fcall	_ReadStatusSPI
  5393  0EF7  3902               	andlw	2
  5394  0EF8  0020               	movlb	0	; select bank0
  5395  0EF9  00AB               	movwf	??_WriteOverheadSPI
  5396  0EFA  082B               	movf	??_WriteOverheadSPI,w
  5397  0EFB  00B4               	movwf	WriteOverheadSPI@StatusReg
  5398                           
  5399                           ;launcher_functions.c: 198: } while (!StatusReg);
  5400  0EFC  0834               	movf	WriteOverheadSPI@StatusReg,w
  5401  0EFD  1903               	btfsc	3,2
  5402  0EFE  2EF4               	goto	l322
  5403                           
  5404                           ;launcher_functions.c: 203: LATC2=(0);
  5405  0EFF  0022               	movlb	2	; select bank2
  5406  0F00  110E               	bcf	14,2	;volatile
  5407                           
  5408                           ;launcher_functions.c: 204: WriteSPI((0x02));
  5409  0F01  3002               	movlw	2
  5410  0F02  318C  249C  318E   	fcall	_WriteSPI
  5411                           
  5412                           ;launcher_functions.c: 205: WriteSPI(address_bytes[0]);
  5413  0F05  0020               	movlb	0	; select bank0
  5414  0F06  0831               	movf	WriteOverheadSPI@address_bytes,w
  5415  0F07  318C  249C  318E   	fcall	_WriteSPI
  5416                           
  5417                           ;launcher_functions.c: 206: WriteSPI(address_bytes[1]);
  5418  0F0A  0020               	movlb	0	; select bank0
  5419  0F0B  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5420  0F0C  318C  249C  318E   	fcall	_WriteSPI
  5421                           
  5422                           ;launcher_functions.c: 207: WriteSPI(address_bytes[2]);
  5423  0F0F  0020               	movlb	0	; select bank0
  5424  0F10  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5425  0F11  318C  249C         	fcall	_WriteSPI
  5426  0F13  0008               	return
  5427  0F14                     __end_of_WriteOverheadSPI:	
  5428                           ;launcher_functions.c: 209: return;
  5429                           
  5430                           
  5431                           	psect	text17
  5432  0C78                     __ptext17:	
  5433 ;; *************** function _InitSPI *****************
  5434 ;; Defined at:
  5435 ;;		line 116 in file "launcher_functions.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;		None               void
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5449 ;;      Params:         0       0       0       0       0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0
  5452 ;;      Totals:         0       0       0       0       0       0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    2
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_RecordMode
  5460 ;;		_SendGPSSPI
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           
  5465                           ;psect for function _InitSPI
  5466  0C78                     _InitSPI:	
  5467                           
  5468                           ;launcher_functions.c: 119: TRISCbits.TRISC2 = 0;
  5469                           
  5470                           ;incstack = 0
  5471                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5472  0C78  0021               	movlb	1	; select bank1
  5473  0C79  110E               	bcf	14,2	;volatile
  5474                           
  5475                           ;launcher_functions.c: 120: TRISCbits.TRISC3 = 0;
  5476  0C7A  118E               	bcf	14,3	;volatile
  5477                           
  5478                           ;launcher_functions.c: 121: TRISCbits.TRISC4 = 1;
  5479  0C7B  160E               	bsf	14,4	;volatile
  5480                           
  5481                           ;launcher_functions.c: 122: TRISCbits.TRISC5 = 0;
  5482  0C7C  128E               	bcf	14,5	;volatile
  5483                           
  5484                           ;launcher_functions.c: 124: LATC2 = (1);
  5485  0C7D  0022               	movlb	2	; select bank2
  5486  0C7E  150E               	bsf	14,2	;volatile
  5487                           
  5488                           ;launcher_functions.c: 127: SSPCON1bits.SSPEN=0x00;
  5489  0C7F  0024               	movlb	4	; select bank4
  5490  0C80  1295               	bcf	21,5	;volatile
  5491                           
  5492                           ;launcher_functions.c: 128: SSPCON1bits.SSPM=0x01;
  5493  0C81  0815               	movf	21,w	;volatile
  5494  0C82  39F0               	andlw	-16
  5495  0C83  3801               	iorlw	1
  5496  0C84  0095               	movwf	21	;volatile
  5497                           
  5498                           ;launcher_functions.c: 129: SSPCON1bits.CKP=0;
  5499  0C85  1215               	bcf	21,4	;volatile
  5500                           
  5501                           ;launcher_functions.c: 130: SSPSTATbits.CKE=1;
  5502  0C86  1714               	bsf	20,6	;volatile
  5503                           
  5504                           ;launcher_functions.c: 131: SSPSTATbits.SMP=0;
  5505  0C87  1394               	bcf	20,7	;volatile
  5506                           
  5507                           ;launcher_functions.c: 132: SSPCON1bits.SSPEN=0x01;
  5508  0C88  1695               	bsf	21,5	;volatile
  5509  0C89  0008               	return
  5510  0C8A                     __end_of_InitSPI:	
  5511                           
  5512                           	psect	text18
  5513  0CDC                     __ptext18:	
  5514 ;; *************** function _ReadBuffer *****************
  5515 ;; Defined at:
  5516 ;;		line 224 in file "launcher_functions.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  read_data       1    1[BANK0 ] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      unsigned char 
  5523 ;; Registers used:
  5524 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         0       0       0       0       0       0       0
  5531 ;;      Locals:         0       1       0       0       0       0       0
  5532 ;;      Temps:          0       1       0       0       0       0       0
  5533 ;;      Totals:         0       2       0       0       0       0       0
  5534 ;;Total ram usage:        2 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    2
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_RecordMode
  5541 ;;		_PreRecordMode
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           
  5546                           ;psect for function _ReadBuffer
  5547  0CDC                     _ReadBuffer:	
  5548                           
  5549                           ;launcher_functions.c: 226: unsigned char read_data;
  5550                           ;launcher_functions.c: 228: read_data = buffer[start];
  5551                           
  5552                           ;incstack = 0
  5553                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5554  0CDC  087B               	movf	_start,w
  5555  0CDD  3EA0               	addlw	_buffer& (0+255)
  5556  0CDE  0086               	movwf	6
  5557  0CDF  3001               	movlw	1	; select bank3/4
  5558  0CE0  0087               	movwf	7
  5559  0CE1  0801               	movf	1,w
  5560  0CE2  0020               	movlb	0	; select bank0
  5561  0CE3  00A0               	movwf	??_ReadBuffer
  5562  0CE4  0820               	movf	??_ReadBuffer,w
  5563  0CE5  00A1               	movwf	ReadBuffer@read_data
  5564                           
  5565                           ;launcher_functions.c: 229: if (start == 51)
  5566  0CE6  3033               	movlw	51
  5567  0CE7  067B               	xorwf	_start,w
  5568  0CE8  047C               	iorwf	_start+1,w
  5569  0CE9  1D03               	skipz
  5570  0CEA  2CEE               	goto	l2217
  5571                           
  5572                           ;launcher_functions.c: 230: start = 0;
  5573  0CEB  01FB               	clrf	_start
  5574  0CEC  01FC               	clrf	_start+1
  5575  0CED  2CF2               	goto	l333
  5576  0CEE                     l2217:	
  5577                           
  5578                           ;launcher_functions.c: 231: else
  5579                           ;launcher_functions.c: 232: start++;
  5580  0CEE  3001               	movlw	1
  5581  0CEF  07FB               	addwf	_start,f
  5582  0CF0  3000               	movlw	0
  5583  0CF1  3DFC               	addwfc	_start+1,f
  5584  0CF2                     l333:	
  5585                           
  5586                           ;launcher_functions.c: 233: return read_data;
  5587  0CF2  0821               	movf	ReadBuffer@read_data,w
  5588  0CF3  0008               	return
  5589  0CF4                     __end_of_ReadBuffer:	
  5590                           
  5591                           	psect	text19
  5592  0C46                     __ptext19:	
  5593 ;; *************** function _CheckDisconnect *****************
  5594 ;; Defined at:
  5595 ;;		line 706 in file "launcher_functions.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  status          1    8[BANK0 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      unsigned char 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5609 ;;      Params:         0       0       0       0       0       0       0
  5610 ;;      Locals:         0       1       0       0       0       0       0
  5611 ;;      Temps:          0       1       0       0       0       0       0
  5612 ;;      Totals:         0       2       0       0       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    4
  5616 ;; This function calls:
  5617 ;;		_ReadStatusSPI
  5618 ;; This function is called by:
  5619 ;;		_RecordMode
  5620 ;;		_PreRecordMode
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function _CheckDisconnect
  5626  0C46                     _CheckDisconnect:	
  5627                           
  5628                           ;launcher_functions.c: 708: unsigned char status;
  5629                           ;launcher_functions.c: 709: status = ReadStatusSPI();
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _CheckDisconnect: [wreg+status,2+status,0+pclath+cstack]
  5633  0C46  318C  2455  318C   	fcall	_ReadStatusSPI
  5634  0C49  0020               	movlb	0	; select bank0
  5635  0C4A  00A7               	movwf	??_CheckDisconnect
  5636  0C4B  0827               	movf	??_CheckDisconnect,w
  5637  0C4C  00A8               	movwf	CheckDisconnect@status
  5638                           
  5639                           ;launcher_functions.c: 710: if(status==0xff)
  5640  0C4D  0828               	movf	CheckDisconnect@status,w
  5641  0C4E  3AFF               	xorlw	255
  5642  0C4F  1D03               	skipz
  5643  0C50  2C53               	goto	l2467
  5644                           
  5645                           ;launcher_functions.c: 711: return 1;
  5646  0C51  3001               	movlw	1
  5647  0C52  0008               	return
  5648  0C53                     l2467:	
  5649                           
  5650                           ;launcher_functions.c: 712: else
  5651                           ;launcher_functions.c: 713: return 0;
  5652  0C53  3000               	movlw	0
  5653  0C54  0008               	return
  5654  0C55                     __end_of_CheckDisconnect:	
  5655                           
  5656                           	psect	text20
  5657  0C55                     __ptext20:	
  5658 ;; *************** function _ReadStatusSPI *****************
  5659 ;; Defined at:
  5660 ;;		line 164 in file "launcher_functions.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      unsigned char 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0, pclath, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5674 ;;      Params:         0       0       0       0       0       0       0
  5675 ;;      Locals:         0       1       0       0       0       0       0
  5676 ;;      Temps:          0       1       0       0       0       0       0
  5677 ;;      Totals:         0       2       0       0       0       0       0
  5678 ;;Total ram usage:        2 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    3
  5681 ;; This function calls:
  5682 ;;		_ReadSPI
  5683 ;;		_WriteSPI
  5684 ;; This function is called by:
  5685 ;;		_WriteOverheadSPI
  5686 ;;		_CheckDisconnect
  5687 ;;		_ReadOverheadSPI
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _ReadStatusSPI
  5693  0C55                     _ReadStatusSPI:	
  5694                           
  5695                           ;launcher_functions.c: 166: unsigned char dataRead;
  5696                           ;launcher_functions.c: 168: LATC2=(0);
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5700  0C55  0022               	movlb	2	; select bank2
  5701  0C56  110E               	bcf	14,2	;volatile
  5702                           
  5703                           ;launcher_functions.c: 169: WriteSPI((0x05));
  5704  0C57  3005               	movlw	5
  5705  0C58  318C  249C  318C   	fcall	_WriteSPI
  5706                           
  5707                           ;launcher_functions.c: 170: dataRead = ReadSPI();
  5708  0C5B  3187  27F3         	fcall	_ReadSPI
  5709  0C5D  0020               	movlb	0	; select bank0
  5710  0C5E  00A5               	movwf	??_ReadStatusSPI
  5711  0C5F  0825               	movf	??_ReadStatusSPI,w
  5712  0C60  00A6               	movwf	ReadStatusSPI@dataRead
  5713                           
  5714                           ;launcher_functions.c: 171: LATC2=(1);
  5715  0C61  0022               	movlb	2	; select bank2
  5716  0C62  150E               	bsf	14,2	;volatile
  5717                           
  5718                           ;launcher_functions.c: 173: return(dataRead);
  5719  0C63  0020               	movlb	0	; select bank0
  5720  0C64  0826               	movf	ReadStatusSPI@dataRead,w
  5721  0C65  0008               	return
  5722  0C66                     __end_of_ReadStatusSPI:	
  5723                           
  5724                           	psect	text21
  5725  0C9C                     __ptext21:	
  5726 ;; *************** function _WriteSPI *****************
  5727 ;; Defined at:
  5728 ;;		line 144 in file "launcher_functions.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  databyte        1    wreg     unsigned char 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  databyte        1    4[BANK0 ] unsigned char 
  5733 ;;  temp            2    2[BANK0 ] unsigned int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;		None               void
  5736 ;; Registers used:
  5737 ;;		wreg
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5743 ;;      Params:         0       0       0       0       0       0       0
  5744 ;;      Locals:         0       3       0       0       0       0       0
  5745 ;;      Temps:          0       2       0       0       0       0       0
  5746 ;;      Totals:         0       5       0       0       0       0       0
  5747 ;;Total ram usage:        5 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    2
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_ReadStatusSPI
  5754 ;;		_WriteOverheadSPI
  5755 ;;		_RecordMode
  5756 ;;		_SendGPSSPI
  5757 ;;		_ReadOverheadSPI
  5758 ;;		_PreRecordMode
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function _WriteSPI
  5764  0C9C                     _WriteSPI:	
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in _WriteSPI: [wreg]
  5768                           ;WriteSPI@databyte stored from wreg
  5769  0C9C  0020               	movlb	0	; select bank0
  5770  0C9D  00A4               	movwf	WriteSPI@databyte
  5771                           
  5772                           ;launcher_functions.c: 146: unsigned int temp;
  5773                           ;launcher_functions.c: 147: temp = SSPBUF;
  5774  0C9E  0024               	movlb	4	; select bank4
  5775  0C9F  0811               	movf	17,w	;volatile
  5776  0CA0  0020               	movlb	0	; select bank0
  5777  0CA1  00A0               	movwf	??_WriteSPI
  5778  0CA2  01A1               	clrf	??_WriteSPI+1
  5779  0CA3  0820               	movf	??_WriteSPI,w
  5780  0CA4  00A2               	movwf	WriteSPI@temp
  5781  0CA5  0821               	movf	??_WriteSPI+1,w
  5782  0CA6  00A3               	movwf	WriteSPI@temp+1
  5783                           
  5784                           ;launcher_functions.c: 148: PIR1bits.SSP1IF=0;
  5785  0CA7  1191               	bcf	17,3	;volatile
  5786                           
  5787                           ;launcher_functions.c: 149: SSPBUF = databyte;
  5788  0CA8  0824               	movf	WriteSPI@databyte,w
  5789  0CA9  0024               	movlb	4	; select bank4
  5790  0CAA  0091               	movwf	17	;volatile
  5791  0CAB                     l305:	
  5792                           ;launcher_functions.c: 150: while(!PIR1bits.SSP1IF);
  5793                           
  5794  0CAB  0020               	movlb	0	; select bank0
  5795  0CAC  1991               	btfsc	17,3	;volatile
  5796  0CAD  0008               	return
  5797  0CAE  2CAB               	goto	l305
  5798  0CAF                     __end_of_WriteSPI:	
  5799                           
  5800                           	psect	text22
  5801  07F3                     __ptext22:	
  5802 ;; *************** function _ReadSPI *****************
  5803 ;; Defined at:
  5804 ;;		line 153 in file "launcher_functions.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      unsigned char 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5818 ;;      Params:         0       0       0       0       0       0       0
  5819 ;;      Locals:         0       1       0       0       0       0       0
  5820 ;;      Temps:          0       1       0       0       0       0       0
  5821 ;;      Totals:         0       2       0       0       0       0       0
  5822 ;;Total ram usage:        2 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    2
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_ReadStatusSPI
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _ReadSPI
  5834  07F3                     _ReadSPI:	
  5835                           
  5836                           ;launcher_functions.c: 155: unsigned char dataByte;
  5837                           ;launcher_functions.c: 157: SSPBUF = 0x00;
  5838                           
  5839                           ;incstack = 0
  5840                           ; Regs used in _ReadSPI: [wreg+status,2]
  5841  07F3  0024               	movlb	4	; select bank4
  5842  07F4  0191               	clrf	17	;volatile
  5843  07F5                     l311:	
  5844                           ;launcher_functions.c: 158: while(!SSPSTATbits.BF);
  5845                           
  5846  07F5  1C14               	btfss	20,0	;volatile
  5847  07F6  2FF5               	goto	l311
  5848                           
  5849                           ;launcher_functions.c: 159: dataByte = SSPBUF;
  5850  07F7  0811               	movf	17,w	;volatile
  5851  07F8  0020               	movlb	0	; select bank0
  5852  07F9  00A0               	movwf	??_ReadSPI
  5853  07FA  0820               	movf	??_ReadSPI,w
  5854  07FB  00A1               	movwf	ReadSPI@dataByte
  5855                           
  5856                           ;launcher_functions.c: 160: PIR1bits.SSP1IF=0;
  5857  07FC  1191               	bcf	17,3	;volatile
  5858                           
  5859                           ;launcher_functions.c: 161: return (dataByte);
  5860  07FD  0821               	movf	ReadSPI@dataByte,w
  5861  07FE  0008               	return
  5862  07FF                     __end_of_ReadSPI:	
  5863                           
  5864                           	psect	text23
  5865  0C08                     __ptext23:	
  5866 ;; *************** function _InitWatchdog *****************
  5867 ;; Defined at:
  5868 ;;		line 135 in file "launcher_functions.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;		None               void
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5882 ;;      Params:         0       0       0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0
  5885 ;;      Totals:         0       0       0       0       0       0       0
  5886 ;;Total ram usage:        0 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    2
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function _InitWatchdog
  5898  0C08                     _InitWatchdog:	
  5899                           
  5900                           ;launcher_functions.c: 138: WDTCONbits.WDTPS = 0x0A;
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5904  0C08  0021               	movlb	1	; select bank1
  5905  0C09  0817               	movf	23,w	;volatile
  5906  0C0A  39C1               	andlw	-63
  5907  0C0B  3814               	iorlw	20
  5908  0C0C  0097               	movwf	23	;volatile
  5909                           
  5910                           ;launcher_functions.c: 139: WDTCONbits.SWDTEN = 0;
  5911  0C0D  1017               	bcf	23,0	;volatile
  5912  0C0E  0008               	return
  5913  0C0F                     __end_of_InitWatchdog:	
  5914                           
  5915                           	psect	text24
  5916  0C37                     __ptext24:	
  5917 ;; *************** function _InitUART *****************
  5918 ;; Defined at:
  5919 ;;		line 264 in file "launcher_functions.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;		None               void
  5926 ;; Registers used:
  5927 ;;		wreg, status,2
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5933 ;;      Params:         0       0       0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0
  5936 ;;      Totals:         0       0       0       0       0       0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    2
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_main
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           
  5948                           ;psect for function _InitUART
  5949  0C37                     _InitUART:	
  5950                           
  5951                           ;launcher_functions.c: 267: TRISCbits.TRISC6 = 0;
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in _InitUART: [wreg+status,2]
  5955  0C37  0021               	movlb	1	; select bank1
  5956  0C38  130E               	bcf	14,6	;volatile
  5957                           
  5958                           ;launcher_functions.c: 268: TRISCbits.TRISC7 = 1;
  5959  0C39  178E               	bsf	14,7	;volatile
  5960                           
  5961                           ;launcher_functions.c: 269: TXSTAbits.BRGH = 0;
  5962  0C3A  0023               	movlb	3	; select bank3
  5963  0C3B  111E               	bcf	30,2	;volatile
  5964                           
  5965                           ;launcher_functions.c: 271: SPBRGH = 0;
  5966  0C3C  019C               	clrf	28	;volatile
  5967                           
  5968                           ;launcher_functions.c: 272: SPBRGL = 51;
  5969  0C3D  3033               	movlw	51
  5970  0C3E  009B               	movwf	27	;volatile
  5971                           
  5972                           ;launcher_functions.c: 273: TXSTAbits.TX9 = 0;
  5973  0C3F  131E               	bcf	30,6	;volatile
  5974                           
  5975                           ;launcher_functions.c: 274: TXSTAbits.SYNC = 0;
  5976  0C40  121E               	bcf	30,4	;volatile
  5977                           
  5978                           ;launcher_functions.c: 275: TXSTAbits.TXEN = 1;
  5979  0C41  169E               	bsf	30,5	;volatile
  5980                           
  5981                           ;launcher_functions.c: 277: RCSTAbits.SPEN = 1;
  5982  0C42  179D               	bsf	29,7	;volatile
  5983                           
  5984                           ;launcher_functions.c: 278: RCSTAbits.RX9 = 0;
  5985  0C43  131D               	bcf	29,6	;volatile
  5986                           
  5987                           ;launcher_functions.c: 279: RCSTAbits.CREN = 1;
  5988  0C44  161D               	bsf	29,4	;volatile
  5989  0C45  0008               	return
  5990  0C46                     __end_of_InitUART:	
  5991                           
  5992                           	psect	text25
  5993  0C28                     __ptext25:	
  5994 ;; *************** function _InitTimer1 *****************
  5995 ;; Defined at:
  5996 ;;		line 104 in file "launcher_functions.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;		None               void
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6010 ;;      Params:         0       0       0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    2
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_main
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function _InitTimer1
  6026  0C28                     _InitTimer1:	
  6027                           
  6028                           ;launcher_functions.c: 106: T1CONbits.TMR1CS = 0;
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  6032  0C28  303F               	movlw	-193
  6033  0C29  0020               	movlb	0	; select bank0
  6034  0C2A  0598               	andwf	24,f	;volatile
  6035                           
  6036                           ;launcher_functions.c: 107: T1CONbits.T1CKPS = 2;
  6037  0C2B  0818               	movf	24,w	;volatile
  6038  0C2C  39CF               	andlw	-49
  6039  0C2D  3820               	iorlw	32
  6040  0C2E  0098               	movwf	24	;volatile
  6041                           
  6042                           ;launcher_functions.c: 108: T1CONbits.nT1SYNC = 1;
  6043  0C2F  1518               	bsf	24,2	;volatile
  6044                           
  6045                           ;launcher_functions.c: 109: T1GCONbits.TMR1GE = 0;
  6046  0C30  1399               	bcf	25,7	;volatile
  6047                           
  6048                           ;launcher_functions.c: 110: TMR1H = 0xFF;
  6049  0C31  30FF               	movlw	255
  6050  0C32  0097               	movwf	23	;volatile
  6051                           
  6052                           ;launcher_functions.c: 111: TMR1L = 0x71;
  6053  0C33  3071               	movlw	113
  6054  0C34  0096               	movwf	22	;volatile
  6055                           
  6056                           ;launcher_functions.c: 112: T1CONbits.TMR1ON = 1;
  6057  0C35  1418               	bsf	24,0	;volatile
  6058  0C36  0008               	return
  6059  0C37                     __end_of_InitTimer1:	
  6060                           
  6061                           	psect	text26
  6062  0D5E                     __ptext26:	
  6063 ;; *************** function _InitGPIO *****************
  6064 ;; Defined at:
  6065 ;;		line 13 in file "launcher_functions.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;		None               void
  6072 ;; Registers used:
  6073 ;;		status,2
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6079 ;;      Params:         0       0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    2
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_main
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function _InitGPIO
  6095  0D5E                     _InitGPIO:	
  6096                           
  6097                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _InitGPIO: [status,2]
  6101  0D5E  0021               	movlb	1	; select bank1
  6102  0D5F  148C               	bsf	12,1	;volatile
  6103                           
  6104                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  6105  0D60  0023               	movlb	3	; select bank3
  6106  0D61  108C               	bcf	12,1	;volatile
  6107                           
  6108                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  6109  0D62  0027               	movlb	7	; select bank7
  6110  0D63  1491               	bsf	17,1	;volatile
  6111                           
  6112                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  6113  0D64  1492               	bsf	18,1	;volatile
  6114                           
  6115                           ;launcher_functions.c: 22: IOCAF = 0x00;
  6116  0D65  0193               	clrf	19	;volatile
  6117                           
  6118                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  6119  0D66  158B               	bsf	11,3	;volatile
  6120                           
  6121                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  6122  0D67  0021               	movlb	1	; select bank1
  6123  0D68  158D               	bsf	13,3	;volatile
  6124                           
  6125                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  6126  0D69  0023               	movlb	3	; select bank3
  6127  0D6A  118D               	bcf	13,3	;volatile
  6128                           
  6129                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  6130  0D6B  0027               	movlb	7	; select bank7
  6131  0D6C  1595               	bsf	21,3	;volatile
  6132                           
  6133                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  6134  0D6D  1594               	bsf	20,3	;volatile
  6135                           
  6136                           ;launcher_functions.c: 30: IOCBF = 0x00;
  6137  0D6E  0196               	clrf	22	;volatile
  6138                           
  6139                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  6140  0D6F  158B               	bsf	11,3	;volatile
  6141                           
  6142                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  6143  0D70  0021               	movlb	1	; select bank1
  6144  0D71  140C               	bsf	12,0	;volatile
  6145                           
  6146                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  6147  0D72  150C               	bsf	12,2	;volatile
  6148                           
  6149                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  6150  0D73  158C               	bsf	12,3	;volatile
  6151                           
  6152                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  6153  0D74  120C               	bcf	12,4	;volatile
  6154                           
  6155                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  6156  0D75  128C               	bcf	12,5	;volatile
  6157                           
  6158                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  6159  0D76  130C               	bcf	12,6	;volatile
  6160                           
  6161                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  6162  0D77  138C               	bcf	12,7	;volatile
  6163                           
  6164                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  6165  0D78  100D               	bcf	13,0	;volatile
  6166                           
  6167                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  6168  0D79  148D               	bsf	13,1	;volatile
  6169                           
  6170                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  6171  0D7A  110D               	bcf	13,2	;volatile
  6172                           
  6173                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  6174  0D7B  120D               	bcf	13,4	;volatile
  6175                           
  6176                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  6177  0D7C  128D               	bcf	13,5	;volatile
  6178                           
  6179                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  6180  0D7D  0020               	movlb	0	; select bank0
  6181  0D7E  100D               	bcf	13,0	;volatile
  6182                           
  6183                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  6184  0D7F  120D               	bcf	13,4	;volatile
  6185                           
  6186                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  6187  0D80  128D               	bcf	13,5	;volatile
  6188                           
  6189                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6190  0D81  0023               	movlb	3	; select bank3
  6191  0D82  100D               	bcf	13,0	;volatile
  6192                           
  6193                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6194  0D83  108D               	bcf	13,1	;volatile
  6195                           
  6196                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6197  0D84  110D               	bcf	13,2	;volatile
  6198                           
  6199                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6200  0D85  120D               	bcf	13,4	;volatile
  6201                           
  6202                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6203  0D86  128D               	bcf	13,5	;volatile
  6204                           
  6205                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6206  0D87  0021               	movlb	1	; select bank1
  6207  0D88  100E               	bcf	14,0	;volatile
  6208                           
  6209                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6210  0D89  108E               	bcf	14,1	;volatile
  6211  0D8A  0008               	return
  6212  0D8B                     __end_of_InitGPIO:	
  6213                           
  6214                           	psect	text27
  6215  0C16                     __ptext27:	
  6216 ;; *************** function _InitCLK *****************
  6217 ;; Defined at:
  6218 ;;		line 8 in file "launcher_functions.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;		None               void
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6232 ;;      Params:         0       0       0       0       0       0       0
  6233 ;;      Locals:         0       0       0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0
  6235 ;;      Totals:         0       0       0       0       0       0       0
  6236 ;;Total ram usage:        0 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    2
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_main
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           
  6247                           ;psect for function _InitCLK
  6248  0C16                     _InitCLK:	
  6249                           
  6250                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6251                           
  6252                           ;incstack = 0
  6253                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6254  0C16  3078               	movlw	120
  6255  0C17  0021               	movlb	1	; select bank1
  6256  0C18  0499               	iorwf	25,f	;volatile
  6257                           
  6258                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6259  0C19  0819               	movf	25,w	;volatile
  6260  0C1A  39FC               	andlw	-4
  6261  0C1B  3802               	iorlw	2
  6262  0C1C  0099               	movwf	25	;volatile
  6263  0C1D  0008               	return
  6264  0C1E                     __end_of_InitCLK:	
  6265                           
  6266                           	psect	text28
  6267  0D0D                     __ptext28:	
  6268 ;; *************** function _InitADC *****************
  6269 ;; Defined at:
  6270 ;;		line 73 in file "launcher_functions.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;		None               void
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6284 ;;      Params:         0       0       0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    2
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _InitADC
  6300  0D0D                     _InitADC:	
  6301                           
  6302                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6306  0D0D  0021               	movlb	1	; select bank1
  6307  0D0E  140C               	bsf	12,0	;volatile
  6308                           
  6309                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6310  0D0F  0023               	movlb	3	; select bank3
  6311  0D10  140C               	bsf	12,0	;volatile
  6312                           
  6313                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6314  0D11  0021               	movlb	1	; select bank1
  6315  0D12  081E               	movf	30,w	;volatile
  6316  0D13  398F               	andlw	-113
  6317  0D14  3850               	iorlw	80
  6318  0D15  009E               	movwf	30	;volatile
  6319                           
  6320                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6321  0D16  30FC               	movlw	-4
  6322  0D17  059E               	andwf	30,f	;volatile
  6323                           
  6324                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6325  0D18  111E               	bcf	30,2	;volatile
  6326                           
  6327                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6328  0D19  3083               	movlw	-125
  6329  0D1A  059D               	andwf	29,f	;volatile
  6330                           
  6331                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6332  0D1B  300F               	movlw	15
  6333  0D1C  049F               	iorwf	31,f	;volatile
  6334                           
  6335                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6336  0D1D  139E               	bcf	30,7	;volatile
  6337                           
  6338                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6339  0D1E  179D               	bsf	29,7	;volatile
  6340                           
  6341                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6342  0D1F  141D               	bsf	29,0	;volatile
  6343                           
  6344                           ;launcher_functions.c: 90: ADIF = 0;
  6345  0D20  0020               	movlb	0	; select bank0
  6346  0D21  1311               	bcf	17,6	;volatile
  6347                           
  6348                           ;launcher_functions.c: 91: ADIE = 1;
  6349  0D22  0021               	movlb	1	; select bank1
  6350  0D23  1711               	bsf	17,6	;volatile
  6351                           
  6352                           ;launcher_functions.c: 92: PEIE = 1;
  6353  0D24  170B               	bsf	11,6	;volatile
  6354  0D25  0008               	return
  6355  0D26                     __end_of_InitADC:	
  6356                           
  6357                           	psect	text29
  6358  0CF4                     __ptext29:	
  6359 ;; *************** function _Hibernate *****************
  6360 ;; Defined at:
  6361 ;;		line 549 in file "launcher_functions.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  count           1    1[BANK0 ] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;		None               void
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6375 ;;      Params:         0       0       0       0       0       0       0
  6376 ;;      Locals:         0       1       0       0       0       0       0
  6377 ;;      Temps:          0       1       0       0       0       0       0
  6378 ;;      Totals:         0       2       0       0       0       0       0
  6379 ;;Total ram usage:        2 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    2
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           
  6390                           ;psect for function _Hibernate
  6391  0CF4                     _Hibernate:	
  6392                           
  6393                           ;launcher_functions.c: 551: unsigned char count = 0;
  6394                           
  6395                           ;incstack = 0
  6396                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6397  0CF4  0020               	movlb	0	; select bank0
  6398  0CF5  01A1               	clrf	Hibernate@count
  6399                           
  6400                           ;launcher_functions.c: 552: WDTCONbits.WDTPS = 14;
  6401  0CF6  0021               	movlb	1	; select bank1
  6402  0CF7  0817               	movf	23,w	;volatile
  6403  0CF8  39C1               	andlw	-63
  6404  0CF9  381C               	iorlw	28
  6405  0CFA  0097               	movwf	23	;volatile
  6406                           
  6407                           ;launcher_functions.c: 553: WDTCONbits.SWDTEN = 1;
  6408  0CFB  1417               	bsf	23,0	;volatile
  6409                           
  6410                           ;launcher_functions.c: 554: while(!recordFlag && count++ < 3)
  6411  0CFC  2D06               	goto	l2797
  6412  0CFD                     l2799:	
  6413  0CFD  3001               	movlw	1
  6414  0CFE  00A0               	movwf	??_Hibernate
  6415  0CFF  0820               	movf	??_Hibernate,w
  6416  0D00  07A1               	addwf	Hibernate@count,f
  6417  0D01  3004               	movlw	4
  6418  0D02  0221               	subwf	Hibernate@count,w
  6419  0D03  1803               	btfsc	3,0
  6420  0D04  2D0A               	goto	l430
  6421  0D05  0063               	sleep	;# 
  6422  0D06                     l2797:	
  6423  0D06  0020               	movlb	0	; select bank0
  6424  0D07  08EC               	movf	_recordFlag,f
  6425  0D08  1903               	btfsc	3,2
  6426  0D09  2CFD               	goto	l2799
  6427  0D0A                     l430:	
  6428                           
  6429                           ;launcher_functions.c: 557: }
  6430                           ;launcher_functions.c: 558: WDTCONbits.SWDTEN = 0;
  6431  0D0A  0021               	movlb	1	; select bank1
  6432  0D0B  1017               	bcf	23,0	;volatile
  6433  0D0C  0008               	return
  6434  0D0D                     __end_of_Hibernate:	
  6435                           
  6436                           	psect	text30
  6437  0C66                     __ptext30:	
  6438 ;; *************** function _GoToSleep *****************
  6439 ;; Defined at:
  6440 ;;		line 541 in file "launcher_functions.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  count           1    wreg     unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  count           1    1[BANK0 ] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6454 ;;      Params:         0       0       0       0       0       0       0
  6455 ;;      Locals:         0       1       0       0       0       0       0
  6456 ;;      Temps:          0       1       0       0       0       0       0
  6457 ;;      Totals:         0       2       0       0       0       0       0
  6458 ;;Total ram usage:        2 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    2
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_main
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           
  6469                           ;psect for function _GoToSleep
  6470  0C66                     _GoToSleep:	
  6471                           
  6472                           ;incstack = 0
  6473                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6474                           ;GoToSleep@count stored from wreg
  6475  0C66  0020               	movlb	0	; select bank0
  6476  0C67  00A1               	movwf	GoToSleep@count
  6477                           
  6478                           ;launcher_functions.c: 543: WDTCONbits.WDTPS = count;
  6479  0C68  0821               	movf	GoToSleep@count,w
  6480  0C69  00A0               	movwf	??_GoToSleep
  6481  0C6A  0DA0               	rlf	??_GoToSleep,f
  6482  0C6B  0021               	movlb	1	; select bank1
  6483  0C6C  0817               	movf	23,w	;volatile
  6484  0C6D  0020               	movlb	0	; select bank0
  6485  0C6E  0620               	xorwf	??_GoToSleep,w
  6486  0C6F  39C1               	andlw	-63
  6487  0C70  0620               	xorwf	??_GoToSleep,w
  6488  0C71  0021               	movlb	1	; select bank1
  6489  0C72  0097               	movwf	23	;volatile
  6490                           
  6491                           ;launcher_functions.c: 544: WDTCONbits.SWDTEN = 1;
  6492  0C73  1417               	bsf	23,0	;volatile
  6493  0C74  0063               	sleep	;# 
  6494                           
  6495                           ;launcher_functions.c: 546: WDTCONbits.SWDTEN = 0;
  6496  0C75  0021               	movlb	1	; select bank1
  6497  0C76  1017               	bcf	23,0	;volatile
  6498  0C77  0008               	return
  6499  0C78                     __end_of_GoToSleep:	
  6500                           
  6501                           	psect	intentry
  6502  0004                     __pintentry:	
  6503 ;; *************** function _isr *****************
  6504 ;; Defined at:
  6505 ;;		line 118 in file "launcher_main.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;		None               void
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6519 ;;      Params:         0       0       0       0       0       0       0
  6520 ;;      Locals:         2       0       0       0       0       0       0
  6521 ;;      Temps:          5       0       0       0       0       0       0
  6522 ;;      Totals:         7       0       0       0       0       0       0
  6523 ;;Total ram usage:        7 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    1
  6526 ;; This function calls:
  6527 ;;		_WriteBuffer
  6528 ;; This function is called by:
  6529 ;;		Interrupt level 1
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533  0004                     _isr:	
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6537  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6538  0005  3180               	pagesel	$
  6539  0006  0020               	movlb	0	; select bank0
  6540  0007  087F               	movf	127,w
  6541  0008  00F6               	movwf	??_isr+4
  6542                           
  6543                           ;launcher_main.c: 121: if (PIR1bits.RCIF)
  6544  0009  1E91               	btfss	17,5	;volatile
  6545  000A  2837               	goto	i1l2907
  6546                           
  6547                           ;launcher_main.c: 122: {
  6548                           ;launcher_main.c: 124: if(OERR)
  6549  000B  0023               	movlb	3	; select bank3
  6550  000C  1C9D               	btfss	29,1	;volatile
  6551  000D  2810               	goto	i1l2889
  6552                           
  6553                           ;launcher_main.c: 125: {
  6554                           ;launcher_main.c: 126: RCSTAbits.CREN = 0;
  6555  000E  121D               	bcf	29,4	;volatile
  6556                           
  6557                           ;launcher_main.c: 127: RCSTAbits.CREN = 1;
  6558  000F  161D               	bsf	29,4	;volatile
  6559  0010                     i1l2889:	
  6560                           
  6561                           ;launcher_main.c: 128: }
  6562                           ;launcher_main.c: 129: gpsMessage[gpsIndex++] = RCREG;
  6563  0010  0819               	movf	25,w	;volatile
  6564  0011  00F2               	movwf	??_isr
  6565  0012  087D               	movf	_gpsIndex,w
  6566  0013  3E20               	addlw	_gpsMessage& (0+255)
  6567  0014  0086               	movwf	6
  6568  0015  3001               	movlw	1	; select bank2/3
  6569  0016  0087               	movwf	7
  6570  0017  0872               	movf	??_isr,w
  6571  0018  0081               	movwf	1
  6572  0019  3001               	movlw	1
  6573  001A  00F2               	movwf	??_isr
  6574  001B  0872               	movf	??_isr,w
  6575  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6576                           
  6577                           ;launcher_main.c: 130: if(gpsIndex >= 50)
  6578  001D  3032               	movlw	50
  6579  001E  027D               	subwf	_gpsIndex,w	;volatile
  6580  001F  1C03               	skipc
  6581  0020  2826               	goto	i1l2899
  6582                           
  6583                           ;launcher_main.c: 131: {
  6584                           ;launcher_main.c: 132: messageDoneFlag = 1;
  6585  0021  0020               	movlb	0	; select bank0
  6586  0022  01EB               	clrf	_messageDoneFlag
  6587  0023  0AEB               	incf	_messageDoneFlag,f
  6588                           
  6589                           ;launcher_main.c: 133: gpsIndex = 0;
  6590  0024  01FD               	clrf	_gpsIndex	;volatile
  6591                           
  6592                           ;launcher_main.c: 134: }
  6593  0025  2836               	goto	i1l2905
  6594  0026                     i1l2899:	
  6595                           
  6596                           ;launcher_main.c: 135: else
  6597                           ;launcher_main.c: 136: {
  6598                           ;launcher_main.c: 137: if(gpsMessage[gpsIndex-1] == 0x0A)
  6599  0026  087D               	movf	_gpsIndex,w
  6600  0027  3EFF               	addlw	255
  6601  0028  3E20               	addlw	_gpsMessage& (0+255)
  6602  0029  0086               	movwf	6
  6603  002A  3001               	movlw	1	; select bank2/3
  6604  002B  0087               	movwf	7
  6605  002C  0801               	movf	1,w
  6606  002D  3A0A               	xorlw	10
  6607  002E  1D03               	skipz
  6608  002F  2834               	goto	i1l2903
  6609                           
  6610                           ;launcher_main.c: 138: {
  6611                           ;launcher_main.c: 139: messageDoneFlag = 1;
  6612  0030  0020               	movlb	0	; select bank0
  6613  0031  01EB               	clrf	_messageDoneFlag
  6614  0032  0AEB               	incf	_messageDoneFlag,f
  6615                           
  6616                           ;launcher_main.c: 140: }
  6617  0033  2836               	goto	i1l2905
  6618  0034                     i1l2903:	
  6619                           
  6620                           ;launcher_main.c: 141: else
  6621                           ;launcher_main.c: 142: {
  6622                           ;launcher_main.c: 143: messageDoneFlag = 0;
  6623  0034  0020               	movlb	0	; select bank0
  6624  0035  01EB               	clrf	_messageDoneFlag
  6625  0036                     i1l2905:	
  6626                           
  6627                           ;launcher_main.c: 144: }
  6628                           ;launcher_main.c: 145: }
  6629                           ;launcher_main.c: 146: PIR1bits.RCIF = 0;
  6630  0036  1291               	bcf	17,5	;volatile
  6631  0037                     i1l2907:	
  6632                           
  6633                           ;launcher_main.c: 147: }
  6634                           ;launcher_main.c: 150: if (TMR1IF && TMR1IE)
  6635  0037  1C11               	btfss	17,0	;volatile
  6636  0038  2848               	goto	i1l2917
  6637  0039  0021               	movlb	1	; select bank1
  6638  003A  1C11               	btfss	17,0	;volatile
  6639  003B  2848               	goto	i1l2917
  6640                           
  6641                           ;launcher_main.c: 151: {
  6642                           ;launcher_main.c: 152: TMR1H = 0xFF;
  6643  003C  30FF               	movlw	255
  6644  003D  0020               	movlb	0	; select bank0
  6645  003E  0097               	movwf	23	;volatile
  6646                           
  6647                           ;launcher_main.c: 153: TMR1L = 0x71;
  6648  003F  3071               	movlw	113
  6649  0040  0096               	movwf	22	;volatile
  6650                           
  6651                           ;launcher_main.c: 154: TMR1IF = 0;
  6652  0041  1011               	bcf	17,0	;volatile
  6653                           
  6654                           ;launcher_main.c: 156: if(recordFlag)
  6655  0042  086C               	movf	_recordFlag,w
  6656  0043  1903               	btfsc	3,2
  6657  0044  2848               	goto	i1l2917
  6658                           
  6659                           ;launcher_main.c: 157: {
  6660                           ;launcher_main.c: 158: ADCON0bits.ADGO = 1;
  6661  0045  0021               	movlb	1	; select bank1
  6662  0046  149D               	bsf	29,1	;volatile
  6663  0047  0020               	movlb	0	; select bank0
  6664  0048                     i1l2917:	
  6665                           
  6666                           ;launcher_main.c: 159: }
  6667                           ;launcher_main.c: 160: }
  6668                           ;launcher_main.c: 163: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6669  0048  0021               	movlb	1	; select bank1
  6670  0049  0E11               	swapf	17,w	;volatile
  6671  004A  0C89               	rrf	9,f
  6672  004B  0C89               	rrf	9,f
  6673  004C  3901               	andlw	1
  6674  004D  00F2               	movwf	??_isr
  6675  004E  0020               	movlb	0	; select bank0
  6676  004F  0E11               	swapf	17,w	;volatile
  6677  0050  0C89               	rrf	9,f
  6678  0051  0C89               	rrf	9,f
  6679  0052  3901               	andlw	1
  6680  0053  0572               	andwf	??_isr,w
  6681  0054  1903               	btfsc	3,2
  6682  0055  288A               	goto	i1l2933
  6683                           
  6684                           ;launcher_main.c: 164: {
  6685                           ;launcher_main.c: 165: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6686  0056  3033               	movlw	51
  6687  0057  0679               	xorwf	_end,w
  6688  0058  047A               	iorwf	_end+1,w
  6689  0059  1903               	skipnz
  6690  005A  2870               	goto	i1l2923
  6691  005B  0879               	movf	_end,w
  6692  005C  3E01               	addlw	1
  6693  005D  00F2               	movwf	??_isr
  6694  005E  3000               	movlw	0
  6695  005F  3D7A               	addwfc	_end+1,w
  6696  0060  00F3               	movwf	??_isr+1
  6697  0061  087C               	movf	_start+1,w
  6698  0062  0673               	xorwf	??_isr+1,w
  6699  0063  1D03               	skipz
  6700  0064  2867               	goto	u252_25
  6701  0065  087B               	movf	_start,w
  6702  0066  0672               	xorwf	??_isr,w
  6703  0067                     u252_25:	
  6704  0067  3000               	movlw	0
  6705  0068  1903               	skipnz
  6706  0069  3001               	movlw	1
  6707  006A  00F4               	movwf	??_isr+2
  6708  006B  01F5               	clrf	??_isr+3
  6709  006C  0874               	movf	??_isr+2,w
  6710  006D  00F7               	movwf	_isr$536
  6711  006E  0875               	movf	??_isr+3,w
  6712  006F  287A               	goto	L4
  6713  0070                     i1l2923:	
  6714  0070  087C               	movf	_start+1,w
  6715  0071  047B               	iorwf	_start,w
  6716  0072  3000               	movlw	0
  6717  0073  1903               	skipnz
  6718  0074  3001               	movlw	1
  6719  0075  00F2               	movwf	??_isr
  6720  0076  01F3               	clrf	??_isr+1
  6721  0077  0872               	movf	??_isr,w
  6722  0078  00F7               	movwf	_isr$536
  6723  0079  0873               	movf	??_isr+1,w
  6724  007A                     L4:	
  6725  007A  00F8               	movwf	_isr$536+1
  6726  007B  0878               	movf	_isr$536+1,w
  6727  007C  0477               	iorwf	_isr$536,w
  6728  007D  1D03               	skipz
  6729  007E  2888               	goto	i1l2931
  6730                           
  6731                           ;launcher_main.c: 166: {
  6732                           ;launcher_main.c: 167: if(recordFlag)
  6733  007F  086C               	movf	_recordFlag,w
  6734  0080  1903               	btfsc	3,2
  6735  0081  2888               	goto	i1l2931
  6736                           
  6737                           ;launcher_main.c: 168: WriteBuffer(ADRESH);
  6738  0082  0021               	movlb	1	; select bank1
  6739  0083  081C               	movf	28,w	;volatile
  6740  0084  318C  24C5  3180   	fcall	_WriteBuffer
  6741  0087  0020               	movlb	0	; select bank0
  6742  0088                     i1l2931:	
  6743                           
  6744                           ;launcher_main.c: 169: }
  6745                           ;launcher_main.c: 170: PIR1bits.ADIF = 0;
  6746  0088  0020               	movlb	0	; select bank0
  6747  0089  1311               	bcf	17,6	;volatile
  6748  008A                     i1l2933:	
  6749                           
  6750                           ;launcher_main.c: 171: }
  6751                           ;launcher_main.c: 174: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6752  008A  1D8B               	btfss	11,3	;volatile
  6753  008B  28B3               	goto	i1l2947
  6754  008C  0027               	movlb	7	; select bank7
  6755  008D  1D96               	btfss	22,3	;volatile
  6756  008E  28B3               	goto	i1l2947
  6757                           
  6758                           ;launcher_main.c: 175: {
  6759                           ;launcher_main.c: 176: IOCBFbits.IOCBF3 = 0;
  6760  008F  1196               	bcf	22,3	;volatile
  6761                           
  6762                           ;launcher_main.c: 177: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6763  0090  0020               	movlb	0	; select bank0
  6764  0091  0C0D               	rrf	13,w	;volatile
  6765  0092  00F2               	movwf	??_isr
  6766  0093  0CF2               	rrf	??_isr,f
  6767  0094  0C72               	rrf	??_isr,w
  6768  0095  3901               	andlw	1
  6769  0096  00F3               	movwf	??_isr+1
  6770  0097  0027               	movlb	7	; select bank7
  6771  0098  0C14               	rrf	20,w	;volatile
  6772  0099  00F4               	movwf	??_isr+2
  6773  009A  0CF4               	rrf	??_isr+2,f
  6774  009B  0C74               	rrf	??_isr+2,w
  6775  009C  3901               	andlw	1
  6776  009D  0573               	andwf	??_isr+1,w
  6777  009E  1903               	btfsc	3,2
  6778  009F  28A3               	goto	i1l2943
  6779                           
  6780                           ;launcher_main.c: 178: {
  6781                           ;launcher_main.c: 179: recordFlag = 1;
  6782  00A0  0020               	movlb	0	; select bank0
  6783  00A1  01EC               	clrf	_recordFlag
  6784  00A2  0AEC               	incf	_recordFlag,f
  6785  00A3                     i1l2943:	
  6786                           
  6787                           ;launcher_main.c: 180: }
  6788                           ;launcher_main.c: 181: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6789  00A3  0027               	movlb	7	; select bank7
  6790  00A4  0C15               	rrf	21,w	;volatile
  6791  00A5  00F2               	movwf	??_isr
  6792  00A6  0CF2               	rrf	??_isr,f
  6793  00A7  0C72               	rrf	??_isr,w
  6794  00A8  3901               	andlw	1
  6795  00A9  00F3               	movwf	??_isr+1
  6796  00AA  1003               	clrc
  6797  00AB  0020               	movlb	0	; select bank0
  6798  00AC  1D8D               	btfss	13,3	;volatile
  6799  00AD  1403               	setc
  6800  00AE  3000               	movlw	0
  6801  00AF  3D09               	addwfc	9,w
  6802  00B0  0573               	andwf	??_isr+1,w
  6803  00B1  1D03               	btfss	3,2
  6804                           
  6805                           ;launcher_main.c: 182: {
  6806                           ;launcher_main.c: 183: recordFlag = 0;
  6807  00B2  01EC               	clrf	_recordFlag
  6808  00B3                     i1l2947:	
  6809                           
  6810                           ;launcher_main.c: 184: }
  6811                           ;launcher_main.c: 185: }
  6812                           ;launcher_main.c: 188: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6813  00B3  1D8B               	btfss	11,3	;volatile
  6814  00B4  28D3               	goto	i1l2961
  6815  00B5  0027               	movlb	7	; select bank7
  6816  00B6  1C93               	btfss	19,1	;volatile
  6817  00B7  28D3               	goto	i1l2961
  6818                           
  6819                           ;launcher_main.c: 189: {
  6820                           ;launcher_main.c: 190: IOCAFbits.IOCAF1 = 0;
  6821  00B8  1093               	bcf	19,1	;volatile
  6822                           
  6823                           ;launcher_main.c: 191: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6824  00B9  0020               	movlb	0	; select bank0
  6825  00BA  0C0C               	rrf	12,w	;volatile
  6826  00BB  3901               	andlw	1
  6827  00BC  00F2               	movwf	??_isr
  6828  00BD  0027               	movlb	7	; select bank7
  6829  00BE  0C11               	rrf	17,w	;volatile
  6830  00BF  3901               	andlw	1
  6831  00C0  0572               	andwf	??_isr,w
  6832  00C1  1903               	btfsc	3,2
  6833  00C2  28C6               	goto	i1l2957
  6834                           
  6835                           ;launcher_main.c: 192: {
  6836                           ;launcher_main.c: 193: strobeFlag = 1;
  6837  00C3  0020               	movlb	0	; select bank0
  6838  00C4  01ED               	clrf	_strobeFlag
  6839  00C5  0AED               	incf	_strobeFlag,f
  6840  00C6                     i1l2957:	
  6841                           
  6842                           ;launcher_main.c: 194: }
  6843                           ;launcher_main.c: 195: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6844  00C6  0027               	movlb	7	; select bank7
  6845  00C7  0C12               	rrf	18,w	;volatile
  6846  00C8  3901               	andlw	1
  6847  00C9  00F2               	movwf	??_isr
  6848  00CA  1003               	clrc
  6849  00CB  0020               	movlb	0	; select bank0
  6850  00CC  1C8C               	btfss	12,1	;volatile
  6851  00CD  1403               	setc
  6852  00CE  3000               	movlw	0
  6853  00CF  3D09               	addwfc	9,w
  6854  00D0  0572               	andwf	??_isr,w
  6855  00D1  1D03               	btfss	3,2
  6856                           
  6857                           ;launcher_main.c: 196: {
  6858                           ;launcher_main.c: 197: strobeFlag = 0;
  6859  00D2  01ED               	clrf	_strobeFlag
  6860  00D3                     i1l2961:	
  6861                           
  6862                           ;launcher_main.c: 198: }
  6863                           ;launcher_main.c: 199: }
  6864                           ;launcher_main.c: 201: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  6865  00D3  1A8B               	btfsc	11,5	;volatile
  6866  00D4  1D0B               	btfss	11,2	;volatile
  6867  00D5  28DA               	goto	i1l147
  6868                           
  6869                           ;launcher_main.c: 202: {
  6870                           ;launcher_main.c: 203: eeprom_timeoutFlag = 1;
  6871  00D6  0020               	movlb	0	; select bank0
  6872  00D7  01E9               	clrf	_eeprom_timeoutFlag
  6873  00D8  0AE9               	incf	_eeprom_timeoutFlag,f
  6874                           
  6875                           ;launcher_main.c: 204: INTCONbits.TMR0IF = 0;
  6876  00D9  110B               	bcf	11,2	;volatile
  6877  00DA                     i1l147:	
  6878  00DA  0876               	movf	??_isr+4,w
  6879  00DB  0020               	movlb	0	; select bank0
  6880  00DC  00FF               	movwf	127
  6881  00DD  107E               	bcf	126,0	;clear compiler interrupt flag
  6882  00DE  0009               	retfie
  6883  00DF                     __end_of_isr:	
  6884                           
  6885                           	psect	text32
  6886  0CC5                     __ptext32:	
  6887 ;; *************** function _WriteBuffer *****************
  6888 ;; Defined at:
  6889 ;;		line 214 in file "launcher_functions.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  data            1    wreg     unsigned char 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  data            1    1[COMMON] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;		None               void
  6896 ;; Registers used:
  6897 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6903 ;;      Params:         0       0       0       0       0       0       0
  6904 ;;      Locals:         1       0       0       0       0       0       0
  6905 ;;      Temps:          1       0       0       0       0       0       0
  6906 ;;      Totals:         2       0       0       0       0       0       0
  6907 ;;Total ram usage:        2 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_isr
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _WriteBuffer
  6918  0CC5                     _WriteBuffer:	
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6922                           ;WriteBuffer@data stored from wreg
  6923  0CC5  00F1               	movwf	WriteBuffer@data
  6924                           
  6925                           ;launcher_functions.c: 216: buffer[end] = data;
  6926  0CC6  0871               	movf	WriteBuffer@data,w
  6927  0CC7  00F0               	movwf	??_WriteBuffer
  6928  0CC8  0879               	movf	_end,w
  6929  0CC9  3EA0               	addlw	_buffer& (0+255)
  6930  0CCA  0086               	movwf	6
  6931  0CCB  3001               	movlw	1	; select bank3/4
  6932  0CCC  0087               	movwf	7
  6933  0CCD  0870               	movf	??_WriteBuffer,w
  6934  0CCE  0081               	movwf	1
  6935                           
  6936                           ;launcher_functions.c: 218: if (end == 51)
  6937  0CCF  3033               	movlw	51
  6938  0CD0  0679               	xorwf	_end,w
  6939  0CD1  047A               	iorwf	_end+1,w
  6940  0CD2  1D03               	skipz
  6941  0CD3  2CD7               	goto	i1l2807
  6942                           
  6943                           ;launcher_functions.c: 219: end = 0;
  6944  0CD4  01F9               	clrf	_end
  6945  0CD5  01FA               	clrf	_end+1
  6946  0CD6  0008               	return
  6947  0CD7                     i1l2807:	
  6948                           
  6949                           ;launcher_functions.c: 220: else
  6950                           ;launcher_functions.c: 221: end++;
  6951  0CD7  3001               	movlw	1
  6952  0CD8  07F9               	addwf	_end,f
  6953  0CD9  3000               	movlw	0
  6954  0CDA  3DFA               	addwfc	_end+1,f
  6955  0CDB  0008               	return
  6956  0CDC                     __end_of_WriteBuffer:	
  6957  007E                     btemp	set	126	;btemp
  6958  007E                     pic14e$flags	set	126
  6959  007E                     wtemp	set	126
  6960  007E                     wtemp0	set	126
  6961  0080                     wtemp1	set	128
  6962  0082                     wtemp2	set	130
  6963  0084                     wtemp3	set	132
  6964  0086                     wtemp4	set	134
  6965  0088                     wtemp5	set	136
  6966  007F                     wtemp6	set	127
  6967  007E                     ttemp	set	126
  6968  007E                     ttemp0	set	126
  6969  0081                     ttemp1	set	129
  6970  0084                     ttemp2	set	132
  6971  0087                     ttemp3	set	135
  6972  007F                     ttemp4	set	127
  6973  007E                     ltemp	set	126
  6974  007E                     ltemp0	set	126
  6975  0082                     ltemp1	set	130
  6976  0086                     ltemp2	set	134
  6977  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    10
    Data        61
    BSS         193
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     67      78
    BANK1            80     62      79
    BANK2            80      0      76
    BANK3            80      0      73
    BANK4            80      0      72
    BANK5            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1495$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___awdiv
    ___awdiv->___wmul
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RecordMode->_SendGPSSPI
    _SendGPSSPI->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _CheckDisconnect->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8346
                                             59 BANK0      8     4      4
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                         _InitTimer1
                           _InitUART
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    3823
                                             36 BANK0     23    23      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    2784
                                             15 BANK0     21    21      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            65    65      0    2451
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1011
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1263
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1980
                                             28 BANK0     11    11      0
                    _CheckDisconnect
                            _InitSPI
                         _ReadBuffer
                         _SendGPSSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                            _InitSPI
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CheckDisconnect                                      2     2      0      92
                                              7 BANK0      2     2      0
                      _ReadStatusSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitTimer1
   _InitUART
   _InitWatchdog
   _RecordMode
     _CheckDisconnect
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
     _InitSPI
     _ReadBuffer
     _SendGPSSPI
       _InitSPI
       _WriteOverheadSPI
         _ReadStatusSPI
           _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     188       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4C      10       95.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      49      12       91.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      48      14       90.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     188      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Nov 06 16:40:33 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 003C                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l110 069F                               l311 07F5  
                             l305 0CAB                               l322 0EF4                               l333 0CF2  
                             l430 0D0A                               l352 0C20                               l600 0D49  
                             l416 0356                               l455 0F24                               l449 04A6  
                             l369 0FFC                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0032                               wreg 0009  
              DecodeGPS@longitude 003F                   DisableGPS@F4921 0152                              l2105 0C8D  
                            l2203 0DD7                              l2133 0E76                              l2109 0C93  
                            l2055 0EE1                              l2207 0DE0                              l2311 05F4  
                            l2231 0FAF                              l2151 0E9C                              l2143 0E7E  
                            l2127 0E6B                              l2217 0CEE                              l2305 05E5  
                            l2321 053D                              l2081 0E23                              l2145 0E8A  
                            l2323 0638                              l2083 0E5D                              l2251 0FEA  
                            l2155 0EA5                              l2181 0E0E                              l2173 0DF0  
                            l2261 055F                              l2093 0D43                              l2421 0315  
                            l2175 0DFC                              l2319 05F8                              l2263 0561  
                            l2079 0E58                              l2239 0FBD                              l2159 0EAD  
                            l2431 0337                              l2343 0183                              l2505 0F83  
                            l2185 0E17                              l2281 0590                              l2249 0FC7  
                            l2345 0192                              l2283 05AA                              l2339 0172  
                            l2197 0DBF                              l2293 05C0                              l2277 0574  
                            l2453 0390                              l2429 0331                              l2711 0451  
                            l2199 0DCB                              l2447 0368                              l2439 0358  
                            l2721 0476                              l2297 05C6                              l2385 0257  
                            l2377 023B                              l2467 0C53                              l2491 0F57  
                            l2707 0402                              l2643 075B                              l2485 0F3E  
                            l2653 079F                              l2719 046C                              l2727 0489  
                            l2499 0F6A                              l2739 04E0                              l2675 03C8  
                            l2749 0519                              l2853 06A7                              l2871 0717  
                            l2839 068B                              l2777 07E1                              l2881 072A  
                            l2865 06E5                              l2699 0435                              l2797 0D06  
                            l2877 0721                              l2799 0CFD                              _ADIE 048E  
                            _ADIF 008E                              ?_isr 0070            __size_of_ReadStatusSPI 0011  
                            STR_1 080A                              STR_2 081D                              u2115 0F3C  
                            u2125 0F55                              u2205 043B                              u2150 073F  
                            u2310 07B9                              u2135 0F68                              u2223 0418  
                            u1425 0EBF                              u2145 0F81                              u1435 0ED3  
                            u2235 045A                              u2075 0366                              u2245 0472  
                            u2165 0759                              u1605 0E81                              u1525 0D4A  
                            u2085 038E                              u2263 04A4                              u2255 048F  
                            u2175 079D                              u1535 0D4F                              u2273 04D4  
                            u1705 0DFD                              u1625 0E8B                              u2195 0423  
                            u1715 0E07                              u1635 0E95                              u2285 04EB  
                            u1725 0E0F                              u1645 0E9D                              u2295 0500  
                            u1495 0E2D                              u1815 0F9D                              u1755 0DC2  
                            u1915 05DB                              u1685 0DF3                              u1845 0FD7  
                            u1775 0DD1                              u2807 0697                              u1960 0149  
                            u1785 0DD8                              u2817 06CA                              u2827 0701  
                            _PEIE 005E                              u2837 0D93                              u2847 0DA2  
                            u1975 0170                              u2857 0DB0                              u2867 0762  
                            u1995 0190                              _RCIE 048D                              u2877 07A6  
                            u2797 0678                              u2887 03D3                              u2897 04B0  
                            _OERR 0CE9                              _main 063D                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E                              start 00DF                              ttemp 007E  
                            wtemp 007E                 ___bmul@multiplier 0023                     __CFG_MCLRE$ON 0000  
               ?_compute_checksum 0020                   __end_of_InitADC 0D26                   __end_of_InitCLK 0C1E  
                 __end_of_InitSPI 0C8A                   __end_of_ReadSPI 07FF                ??_compute_checksum 0022  
                           ??_isr 0072                     ?_InitWatchdog 0070             ReadStatusSPI@dataRead 0026  
                           ?_main 005B                   __end_of___awdiv 0EB4                   ___awdiv@divisor 0026  
                           _LATC2 0872                             _IOCAF 0393                             _IOCBF 0396  
                 __end_of___lwdiv 0E1E                             i1l147 00DA                   __end_of___lwmod 0DE7  
                 ___awdiv@counter 002B                             _RCREG 0199                             _TMR1H 0017  
                           _TMR1L 0016                             _TXREG 019A                 RecordMode@address 0043  
                 __end_of_dpowers 080A               DecodeGPS@northSouth 0039                             _start 007B  
                  __CFG_BOREN$OFF 0000                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                 __end_of_sprintf 063D            uart_write_message@data 0034            uart_write_message@size 0028  
                      _ReadBuffer 0CDC                   __initialization 00E1                        _InitTimer1 0C28  
               ?_WriteOverheadSPI 0027                      __end_of_main 0734                __size_of_DecodeGPS 025E  
                __end_of_InitGPIO 0D8B                  __end_of_InitUART 0C46                    ??_InitWatchdog 0020  
                   _ReadStatusSPI 0C55                ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0035  
                          ??_main 005F                __size_of_GoToSleep 0012                        _SendGPSSPI 0F14  
                 ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 07AE  
   WriteOverheadSPI@address_bytes 0031                __size_of_Hibernate 0019                        _RecordMode 039C  
                          _ADRESH 009C                  ___awdiv@dividend 0028                   _CheckDisconnect 0C46  
                __end_of_WriteSPI 0CAF                            i1l2807 0CD7                            i1l2903 0034  
                          i1l2905 0036                            i1l2931 0088                            i1l2923 0070  
                          i1l2907 0037                            i1l2933 008A                            i1l2917 0048  
                          i1l2943 00A3                            i1l2961 00D3                            i1l2947 00B3  
                          i1l2957 00C6                            i1l2889 0010                            i1l2899 0026  
                          u252_25 0067                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _TMR1ON 00C0                            _SPBRGL 019B  
                          _SSPBUF 0211                         ??_InitADC 0020                         ??_InitCLK 0020  
                       ??_InitSPI 0020                         ??_ReadSPI 0020                       SendGPSSPI@x 003A  
                          ___bmul 0C8A                    ?_ReadStatusSPI 0070                            ___wmul 0D40  
                       ??___awdiv 002A                         ??___lwdiv 0024                         ??___lwmod 002C  
                          _buffer 01A0                  ___awdiv@quotient 002D       __size_of_uart_write_message 0076  
              __size_of_UpdateGPS 0045               main@periodicCounter 0062                 __end_of_DecodeGPS 039C  
                       ??_sprintf 0034                    _gpsInvalidFlag 0066           __end_of__initialization 013A  
               __end_of_GoToSleep 0C78               ___bmul@multiplicand 0020                       ?_ReadBuffer 0070  
               __end_of_Hibernate 0D0D                       ?_InitTimer1 0070                    __pcstackCOMMON 0070  
                    __pidataBANK0 0C02                      __pidataBANK1 0C0F                      __pidataBANK2 0D26  
                    __pidataBANK3 0CAF                      WriteSPI@temp 0022                       ?_SendGPSSPI 0070  
         __end_of_CheckDisconnect 0C55                    _OPTION_REGbits 0095                       ?_RecordMode 0070  
            __end_of_InitWatchdog 0C0F                        __pbssBANK0 0069                        __pbssBANK1 00DE  
                      __pbssBANK2 0120                        __pbssBANK3 01A0                        __pbssBANK4 0220  
                       ?_InitGPIO 0070                         ?_InitUART 0070                   SetupGPS@message 00A0  
                 ??_ReadStatusSPI 0025                 __end_of_UpdateGPS 07F3                        __pmaintext 063D  
                       ?_SetupGPS 0070                           ?___bmul 0020                           ?___wmul 0020  
                   ??_WriteBuffer 0070                        __pintentry 0004                    _validLongitude 00EC  
       UpdateGPS@GPSupdateMessage 0045                         ?_WriteSPI 0070                __size_of_uart_xmit 000A  
       __size_of_compute_checksum 0042               __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F  
                      ??_InitGPIO 0020                        ??_InitUART 0020                           _InitADC 0D0D  
                         _InitCLK 0C16                           _InitSPI 0C78                        _gpsMessage 0120  
         __size_of_ToggleSleepGPS 002D                           _ReadSPI 07F3                       SetupGPS@MID 00D8  
             __size_of_SendGPSSPI 0076                        ??_SetupGPS 0041               __size_of_RecordMode 019B  
                 __size_of___bmul 0012                           ___awdiv 0E60                   __size_of___wmul 001E  
                         ___lwdiv 0DE7                           ___lwmod 0DB8                           _isr$536 0077  
                      ??_WriteSPI 0020                           __ptext1 07AE                           __ptext2 013E  
                         __ptext3 0D40                           __ptext4 0C8A                           __ptext5 0E60  
                         __ptext6 0D8B                           __ptext7 0734                           __ptext8 0F8A  
                         __ptext9 0C1E                         _T1CONbits 0018                           _dpowers 0800  
             __end_of_WriteBuffer 0CDC                      __size_of_isr 00DB                  ?_CheckDisconnect 0070  
                       _IOCAFbits 0393                         _IOCBFbits 0396                         _IOCANbits 0392  
       __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395                         _IOCAPbits 0391  
                       _IOCBPbits 0394                        _recordFlag 006C                           _sprintf 0537  
                         clrloop0 0BFD              end_of_initialization 013A                           init_ram 0BF6  
                         initloop 0BF7                   WriteBuffer@data 0071                 __end_of_uart_xmit 0C28  
                       _RCSTAbits 019D                  WriteSPI@databyte 0024                      __pstringtext 0800  
                       _PORTAbits 000C                         _PORTBbits 000D                         _PORTCbits 000E  
                  Hibernate@count 0021                  __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007  
                       _TRISAbits 008C                         _TRISBbits 008D                         _TRISCbits 008E  
         WriteOverheadSPI@address 0027                 SendGPSSPI@address 0036                   DecodeGPS@status 003B  
            uart_xmit@mydata_byte 0020             _preRecordingAddresses 0220                         _DecodeGPS 013E  
                       _TXSTAbits 019E                      ??_ReadBuffer 0020                        _strobeFlag 006D  
                    ??_InitTimer1 0020                         _GoToSleep 0C66                    __end_of___bmul 0C9C  
                     _WriteBuffer 0CC5                    __end_of___wmul 0D5E        __end_of_uart_write_message 1000  
                       _Hibernate 0CF4                      _InitWatchdog 0C08                      ??_SendGPSSPI 0035  
                   SetupGPS@F4924 0166                     SetupGPS@F4926 00E8               start_initialization 00E1  
                _compute_checksum 0E1E         WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 003C  
                     __end_of_isr 00DF             CheckDisconnect@status 0028                __end_of_ReadBuffer 0CF4  
               compute_checksum@x 0026                __end_of_InitTimer1 0C37                        ?_DecodeGPS 0070  
                  _ToggleSleepGPS 0D8B                 __size_of_InitGPIO 002D                 __size_of_InitUART 000F  
              __end_of_SendGPSSPI 0F8A                         SetupGPS@x 00DC              compute_checksum@data 0025  
                      ?_GoToSleep 0070                          ??___bmul 0021              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 0537                       __pdataBANK0 0063  
                     __pdataBANK1 00E8                       __pdataBANK2 0152                       __pdataBANK3 01D3  
               __size_of_SetupGPS 007A                         _UpdateGPS 07AE                        ?_Hibernate 0070  
        compute_checksum@checksum 0024                 __size_of_WriteSPI 0013                       __pbssCOMMON 0079  
                       ___latbits 0001                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                _WriteOverheadSPI 0EB4               __end_of__stringdata 0824               uart_write_message@x 0031  
                   _validEastWest 0067            __end_of_ToggleSleepGPS 0DB8                   _messageDoneFlag 006B  
                     sprintf@_val 003C                       sprintf@flag 0038                       sprintf@prec 0039  
                        ?_InitADC 0070                          ?_InitCLK 0070                          ?_InitSPI 0070  
                        ?_ReadSPI 0070                     _validLatitude 0063                  ___lwdiv@dividend 0022  
           __end_of_ReadStatusSPI 0C66                          ?___awdiv 0026                          ?___lwdiv 0020  
                        ?___lwmod 0028                        ?_UpdateGPS 0070                    UpdateGPS@F4931 01D3  
                __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 0025                          ?_sprintf 002E  
      uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070                   _validNorthSouth 0068  
                     ??_DecodeGPS 002F                    ___wmul@product 0024                          _LATBbits 010D  
                        _LATCbits 010E                         clear_ram0 0BFC                          _PIE1bits 0091  
                  DecodeGPS@F4933 015F                    DecodeGPS@F4935 00E2                    DecodeGPS@F4937 00E5  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0C1E  
                     ??_Hibernate 0020                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 080A                        _ADCON2bits 009F                 ___wmul@multiplier 0020  
                 RecordMode@count 0041                          _InitGPIO 0D5E                          _InitUART 0C37  
        __size_of_CheckDisconnect 000F                  __size_of_InitADC 0019                  __size_of_InitCLK 0008  
                __size_of_InitSPI 0012                  __size_of_ReadSPI 000C          __end_of_compute_checksum 0E60  
           SetupGPS@startSequence 00D2                          _SetupGPS 0734                        ?_uart_xmit 0070  
                    ?_WriteBuffer 0070                  __size_of___awdiv 0054                       ??_UpdateGPS 0044  
                __size_of___lwdiv 0037                  __size_of___lwmod 002F                          _WriteSPI 0C9C  
         _uart_write_message$1427 002D           _uart_write_message$1428 002F                        _ANSELAbits 018C  
                      _ANSELBbits 018D               ReadBuffer@read_data 0021                   ___lwdiv@divisor 0020  
                 _hasValidGPSFlag 006A                   ___lwdiv@counter 0027                          __ptext10 0E1E  
                        __ptext11 0537                          __ptext20 0C55                          __ptext12 0DB8  
                        __ptext21 0C9C                          __ptext13 0DE7                        _T1GCONbits 0019  
                        __ptext30 0C66                          __ptext22 07F3                          __ptext14 039C  
                        __ptext23 0C08                          __ptext15 0F14                          __ptext32 0CC5  
                        __ptext24 0C37                          __ptext16 0EB4                          __ptext25 0C28  
                        __ptext17 0C78                          __ptext26 0D5E                          __ptext18 0CDC  
                        __ptext27 0C16                          __ptext19 0C46                          __ptext28 0D0D  
                        __ptext29 0CF4                _uart_write_message 0F8A                  __size_of_sprintf 0106  
                        _gpsIndex 007D                     __size_of_main 00F7               ?_uart_write_message 0028  
                      DecodeGPS@x 0042          __end_of_WriteOverheadSPI 0F14                _eeprom_timeoutFlag 0069  
                  GoToSleep@count 0021                          main@argc 005B                          main@argv 005D  
            ??_uart_write_message 002A                        _INTCONbits 000B                       pic14e$flags 007E  
                        intlevel1 0000                         sprintf@ap 003A                         sprintf@sp 003B  
                ___lwmod@dividend 002A                 __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099  
               ??_CheckDisconnect 0027                       ??_uart_xmit 0020                          sprintf@c 0040  
                        sprintf@f 002E                   ___lwmod@divisor 0028                   ___lwmod@counter 002D  
                ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215                        _WDTCONbits 0097  
                 _recordEndAdress 00DE                 DecodeGPS@eastWest 003A  
