

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 19:44:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0094                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  011F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0197                     	;# 
   125  0199                     	;# 
   126  0199                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019A                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019D                     	;# 
   140  019D                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019E                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  020E                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  028E                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  030C                     	;# 
   181  030D                     	;# 
   182  030E                     	;# 
   183  038C                     	;# 
   184  038D                     	;# 
   185  038E                     	;# 
   186  0390                     	;# 
   187  0391                     	;# 
   188  0392                     	;# 
   189  0393                     	;# 
   190  0394                     	;# 
   191  0395                     	;# 
   192  0396                     	;# 
   193  0397                     	;# 
   194  0398                     	;# 
   195  0399                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0511                     	;# 
   200  0513                     	;# 
   201  051A                     	;# 
   202  0811                     	;# 
   203  0812                     	;# 
   204  0813                     	;# 
   205  0814                     	;# 
   206  0815                     	;# 
   207  0816                     	;# 
   208  0817                     	;# 
   209  0818                     	;# 
   210  0819                     	;# 
   211  081A                     	;# 
   212  081B                     	;# 
   213  081C                     	;# 
   214  081D                     	;# 
   215  081E                     	;# 
   216  081F                     	;# 
   217  0820                     	;# 
   218  0821                     	;# 
   219  0821                     	;# 
   220  0822                     	;# 
   221  0823                     	;# 
   222  0823                     	;# 
   223  0824                     	;# 
   224  0825                     	;# 
   225  0825                     	;# 
   226  0826                     	;# 
   227  0827                     	;# 
   228  0827                     	;# 
   229  0828                     	;# 
   230  0829                     	;# 
   231  082A                     	;# 
   232  082B                     	;# 
   233  082C                     	;# 
   234  082D                     	;# 
   235  082E                     	;# 
   236  082F                     	;# 
   237  0831                     	;# 
   238  0832                     	;# 
   239  0833                     	;# 
   240  0834                     	;# 
   241  0835                     	;# 
   242  0836                     	;# 
   243  0837                     	;# 
   244  0838                     	;# 
   245  0839                     	;# 
   246  083A                     	;# 
   247  083B                     	;# 
   248  083C                     	;# 
   249  083D                     	;# 
   250  083E                     	;# 
   251  083F                     	;# 
   252  0840                     	;# 
   253  0841                     	;# 
   254  0841                     	;# 
   255  0842                     	;# 
   256  0843                     	;# 
   257  0843                     	;# 
   258  0844                     	;# 
   259  0845                     	;# 
   260  0845                     	;# 
   261  0846                     	;# 
   262  0847                     	;# 
   263  0847                     	;# 
   264  0848                     	;# 
   265  0849                     	;# 
   266  084A                     	;# 
   267  084B                     	;# 
   268  084C                     	;# 
   269  084D                     	;# 
   270  084E                     	;# 
   271  084F                     	;# 
   272  0FE4                     	;# 
   273  0FE5                     	;# 
   274  0FE6                     	;# 
   275  0FE7                     	;# 
   276  0FE8                     	;# 
   277  0FE9                     	;# 
   278  0FEA                     	;# 
   279  0FEB                     	;# 
   280  0FED                     	;# 
   281  0FEE                     	;# 
   282  0FEF                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0094                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  0111                     	;# 
   334  0112                     	;# 
   335  0113                     	;# 
   336  0114                     	;# 
   337  0115                     	;# 
   338  0116                     	;# 
   339  0117                     	;# 
   340  0118                     	;# 
   341  0119                     	;# 
   342  011D                     	;# 
   343  011D                     	;# 
   344  011E                     	;# 
   345  011F                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348  0191                     	;# 
   349  0191                     	;# 
   350  0192                     	;# 
   351  0193                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  0199                     	;# 
   360  019A                     	;# 
   361  019A                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019C                     	;# 
   371  019D                     	;# 
   372  019D                     	;# 
   373  019D                     	;# 
   374  019E                     	;# 
   375  019E                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  020C                     	;# 
   383  020D                     	;# 
   384  020E                     	;# 
   385  0210                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0216                     	;# 
   398  0216                     	;# 
   399  0217                     	;# 
   400  0217                     	;# 
   401  028C                     	;# 
   402  028D                     	;# 
   403  028E                     	;# 
   404  0291                     	;# 
   405  0291                     	;# 
   406  0292                     	;# 
   407  0293                     	;# 
   408  0298                     	;# 
   409  0298                     	;# 
   410  0299                     	;# 
   411  029A                     	;# 
   412  030C                     	;# 
   413  030D                     	;# 
   414  030E                     	;# 
   415  038C                     	;# 
   416  038D                     	;# 
   417  038E                     	;# 
   418  0390                     	;# 
   419  0391                     	;# 
   420  0392                     	;# 
   421  0393                     	;# 
   422  0394                     	;# 
   423  0395                     	;# 
   424  0396                     	;# 
   425  0397                     	;# 
   426  0398                     	;# 
   427  0399                     	;# 
   428  039D                     	;# 
   429  039E                     	;# 
   430  039F                     	;# 
   431  0511                     	;# 
   432  0513                     	;# 
   433  051A                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  0815                     	;# 
   439  0816                     	;# 
   440  0817                     	;# 
   441  0818                     	;# 
   442  0819                     	;# 
   443  081A                     	;# 
   444  081B                     	;# 
   445  081C                     	;# 
   446  081D                     	;# 
   447  081E                     	;# 
   448  081F                     	;# 
   449  0820                     	;# 
   450  0821                     	;# 
   451  0821                     	;# 
   452  0822                     	;# 
   453  0823                     	;# 
   454  0823                     	;# 
   455  0824                     	;# 
   456  0825                     	;# 
   457  0825                     	;# 
   458  0826                     	;# 
   459  0827                     	;# 
   460  0827                     	;# 
   461  0828                     	;# 
   462  0829                     	;# 
   463  082A                     	;# 
   464  082B                     	;# 
   465  082C                     	;# 
   466  082D                     	;# 
   467  082E                     	;# 
   468  082F                     	;# 
   469  0831                     	;# 
   470  0832                     	;# 
   471  0833                     	;# 
   472  0834                     	;# 
   473  0835                     	;# 
   474  0836                     	;# 
   475  0837                     	;# 
   476  0838                     	;# 
   477  0839                     	;# 
   478  083A                     	;# 
   479  083B                     	;# 
   480  083C                     	;# 
   481  083D                     	;# 
   482  083E                     	;# 
   483  083F                     	;# 
   484  0840                     	;# 
   485  0841                     	;# 
   486  0841                     	;# 
   487  0842                     	;# 
   488  0843                     	;# 
   489  0843                     	;# 
   490  0844                     	;# 
   491  0845                     	;# 
   492  0845                     	;# 
   493  0846                     	;# 
   494  0847                     	;# 
   495  0847                     	;# 
   496  0848                     	;# 
   497  0849                     	;# 
   498  084A                     	;# 
   499  084B                     	;# 
   500  084C                     	;# 
   501  084D                     	;# 
   502  084E                     	;# 
   503  084F                     	;# 
   504  0FE4                     	;# 
   505  0FE5                     	;# 
   506  0FE6                     	;# 
   507  0FE7                     	;# 
   508  0FE8                     	;# 
   509  0FE9                     	;# 
   510  0FEA                     	;# 
   511  0FEB                     	;# 
   512  0FED                     	;# 
   513  0FEE                     	;# 
   514  0FEF                     	;# 
   515  0000                     	;# 
   516  0001                     	;# 
   517  0002                     	;# 
   518  0003                     	;# 
   519  0004                     	;# 
   520  0005                     	;# 
   521  0006                     	;# 
   522  0007                     	;# 
   523  0008                     	;# 
   524  0009                     	;# 
   525  000A                     	;# 
   526  000B                     	;# 
   527  000C                     	;# 
   528  000D                     	;# 
   529  000E                     	;# 
   530  0010                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0014                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  0090                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0094                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  0111                     	;# 
   566  0112                     	;# 
   567  0113                     	;# 
   568  0114                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011D                     	;# 
   575  011D                     	;# 
   576  011E                     	;# 
   577  011F                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  0210                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  028C                     	;# 
   634  028D                     	;# 
   635  028E                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  030C                     	;# 
   645  030D                     	;# 
   646  030E                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  0390                     	;# 
   651  0391                     	;# 
   652  0392                     	;# 
   653  0393                     	;# 
   654  0394                     	;# 
   655  0395                     	;# 
   656  0396                     	;# 
   657  0397                     	;# 
   658  0398                     	;# 
   659  0399                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0511                     	;# 
   664  0513                     	;# 
   665  051A                     	;# 
   666  0811                     	;# 
   667  0812                     	;# 
   668  0813                     	;# 
   669  0814                     	;# 
   670  0815                     	;# 
   671  0816                     	;# 
   672  0817                     	;# 
   673  0818                     	;# 
   674  0819                     	;# 
   675  081A                     	;# 
   676  081B                     	;# 
   677  081C                     	;# 
   678  081D                     	;# 
   679  081E                     	;# 
   680  081F                     	;# 
   681  0820                     	;# 
   682  0821                     	;# 
   683  0821                     	;# 
   684  0822                     	;# 
   685  0823                     	;# 
   686  0823                     	;# 
   687  0824                     	;# 
   688  0825                     	;# 
   689  0825                     	;# 
   690  0826                     	;# 
   691  0827                     	;# 
   692  0827                     	;# 
   693  0828                     	;# 
   694  0829                     	;# 
   695  082A                     	;# 
   696  082B                     	;# 
   697  082C                     	;# 
   698  082D                     	;# 
   699  082E                     	;# 
   700  082F                     	;# 
   701  0831                     	;# 
   702  0832                     	;# 
   703  0833                     	;# 
   704  0834                     	;# 
   705  0835                     	;# 
   706  0836                     	;# 
   707  0837                     	;# 
   708  0838                     	;# 
   709  0839                     	;# 
   710  083A                     	;# 
   711  083B                     	;# 
   712  083C                     	;# 
   713  083D                     	;# 
   714  083E                     	;# 
   715  083F                     	;# 
   716  0840                     	;# 
   717  0841                     	;# 
   718  0841                     	;# 
   719  0842                     	;# 
   720  0843                     	;# 
   721  0843                     	;# 
   722  0844                     	;# 
   723  0845                     	;# 
   724  0845                     	;# 
   725  0846                     	;# 
   726  0847                     	;# 
   727  0847                     	;# 
   728  0848                     	;# 
   729  0849                     	;# 
   730  084A                     	;# 
   731  084B                     	;# 
   732  084C                     	;# 
   733  084D                     	;# 
   734  084E                     	;# 
   735  084F                     	;# 
   736  0FE4                     	;# 
   737  0FE5                     	;# 
   738  0FE6                     	;# 
   739  0FE7                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEB                     	;# 
   744  0FED                     	;# 
   745  0FEE                     	;# 
   746  0FEF                     	;# 
   747                           
   748                           	psect	idataBANK1
   749  0E52                     __pidataBANK1:	
   750                           
   751                           ;initializer for DisableGPS@F4914
   752  0E52  3424               	retlw	36
   753  0E53  3450               	retlw	80
   754  0E54  3453               	retlw	83
   755  0E55  3452               	retlw	82
   756  0E56  3446               	retlw	70
   757  0E57  3431               	retlw	49
   758  0E58  3431               	retlw	49
   759  0E59  3437               	retlw	55
   760  0E5A  342C               	retlw	44
   761  0E5B  3431               	retlw	49
   762  0E5C  3436               	retlw	54
   763  0E5D  342A               	retlw	42
   764  0E5E  3400               	retlw	0
   765                           
   766                           ;initializer for DecodeGPS@F4926
   767  0E5F  3424               	retlw	36
   768  0E60  3447               	retlw	71
   769  0E61  3450               	retlw	80
   770  0E62  3447               	retlw	71
   771  0E63  344C               	retlw	76
   772  0E64  344C               	retlw	76
   773  0E65  3400               	retlw	0
   774                           
   775                           ;initializer for SetupGPS@F4917
   776  0E66  3424               	retlw	36
   777  0E67  3450               	retlw	80
   778  0E68  3453               	retlw	83
   779  0E69  3452               	retlw	82
   780  0E6A  3446               	retlw	70
   781  0E6B  3400               	retlw	0
   782                           
   783                           ;initializer for SetupGPS@F4919
   784  0E6C  3431               	retlw	49
   785  0E6D  3430               	retlw	48
   786  0E6E  3433               	retlw	51
   787  0E6F  3400               	retlw	0
   788                           
   789                           ;initializer for _gpsInvalidFlag
   790  0E70  3401               	retlw	1
   791                           
   792                           ;initializer for _validEastWest
   793  0E71  3445               	retlw	69
   794                           
   795                           ;initializer for _validNorthSouth
   796  0E72  344E               	retlw	78
   797                           
   798                           	psect	idataBANK2
   799  0DBC                     __pidataBANK2:	
   800                           
   801                           ;initializer for UpdateGPS@F4924
   802  0DBC  3424               	retlw	36
   803  0DBD  3450               	retlw	80
   804  0DBE  3453               	retlw	83
   805  0DBF  3452               	retlw	82
   806  0DC0  3446               	retlw	70
   807  0DC1  3431               	retlw	49
   808  0DC2  3430               	retlw	48
   809  0DC3  3433               	retlw	51
   810  0DC4  342C               	retlw	44
   811  0DC5  3430               	retlw	48
   812  0DC6  3431               	retlw	49
   813  0DC7  342C               	retlw	44
   814  0DC8  3430               	retlw	48
   815  0DC9  3431               	retlw	49
   816  0DCA  342C               	retlw	44
   817  0DCB  3430               	retlw	48
   818  0DCC  3430               	retlw	48
   819  0DCD  342C               	retlw	44
   820  0DCE  3430               	retlw	48
   821  0DCF  3430               	retlw	48
   822  0DD0  342A               	retlw	42
   823  0DD1  3400               	retlw	0
   824                           
   825                           	psect	stringtext
   826  0800                     __pstringtext:	
   827  0800                     _dpowers:	
   828  0800  3401               	retlw	1
   829  0801  3400               	retlw	0
   830  0802  340A               	retlw	10
   831  0803  3400               	retlw	0
   832  0804  3464               	retlw	100
   833  0805  3400               	retlw	0
   834  0806  34E8               	retlw	232
   835  0807  3403               	retlw	3
   836  0808  3410               	retlw	16
   837  0809  3427               	retlw	39
   838  080A                     __end_of_dpowers:	
   839  080A                     __stringdata:	
   840  080A                     STR_1:	
   841  080A  3425               	retlw	37	;'%'
   842  080B  3473               	retlw	115	;'s'
   843  080C  3425               	retlw	37	;'%'
   844  080D  3473               	retlw	115	;'s'
   845  080E  342C               	retlw	44	;','
   846  080F  3430               	retlw	48	;'0'
   847  0810  3425               	retlw	37	;'%'
   848  0811  3464               	retlw	100	;'d'
   849  0812  342C               	retlw	44	;','
   850  0813  3430               	retlw	48	;'0'
   851  0814  3430               	retlw	48	;'0'
   852  0815  342C               	retlw	44	;','
   853  0816  3430               	retlw	48	;'0'
   854  0817  3430               	retlw	48	;'0'
   855  0818  342C               	retlw	44	;','
   856  0819  3430               	retlw	48	;'0'
   857  081A  3430               	retlw	48	;'0'
   858  081B  342A               	retlw	42	;'*'
   859  081C  3400               	retlw	0
   860  081D                     STR_2:	
   861  081D  3425               	retlw	37	;'%'
   862  081E  3473               	retlw	115	;'s'
   863  081F  3425               	retlw	37	;'%'
   864  0820  3473               	retlw	115	;'s'
   865  0821  342C               	retlw	44	;','
   866  0822  3430               	retlw	48	;'0'
   867  0823  3431               	retlw	49	;'1'
   868  0824  342C               	retlw	44	;','
   869  0825  3430               	retlw	48	;'0'
   870  0826  3431               	retlw	49	;'1'
   871  0827  342C               	retlw	44	;','
   872  0828  3430               	retlw	48	;'0'
   873  0829  3431               	retlw	49	;'1'
   874  082A  342C               	retlw	44	;','
   875  082B  3430               	retlw	48	;'0'
   876  082C  3430               	retlw	48	;'0'
   877  082D  342A               	retlw	42	;'*'
   878  082E  3400               	retlw	0
   879  082F                     STR_3:	
   880  082F  3428               	retlw	40	;'('
   881  0830  346E               	retlw	110	;'n'
   882  0831  3475               	retlw	117	;'u'
   883  0832  346C               	retlw	108	;'l'
   884  0833  346C               	retlw	108	;'l'
   885  0834  3429               	retlw	41	;')'
   886  0835  3400               	retlw	0
   887  0836                     __end_of__stringdata:	
   888                           
   889                           ; #config settings
   890  0000                     
   891                           	psect	nvBANK1
   892  00E3                     __pnvBANK1:	
   893  00E3                     _gpsIndex:	
   894  00E3                     	ds	1
   895  000B                     _INTCONbits	set	11
   896  0011                     _PIR1bits	set	17
   897  000C                     _PORTAbits	set	12
   898  000D                     _PORTBbits	set	13
   899  000E                     _PORTCbits	set	14
   900  0018                     _T1CONbits	set	24
   901  0019                     _T1GCONbits	set	25
   902  0017                     _TMR1H	set	23
   903  0016                     _TMR1L	set	22
   904  008E                     _ADIF	set	142
   905  005F                     _GIE	set	95
   906  005E                     _PEIE	set	94
   907  0088                     _TMR1IF	set	136
   908  00C0                     _TMR1ON	set	192
   909  009D                     _ADCON0bits	set	157
   910  009E                     _ADCON1bits	set	158
   911  009F                     _ADCON2bits	set	159
   912  009C                     _ADRESH	set	156
   913  0099                     _OSCCONbits	set	153
   914  0091                     _PIE1bits	set	145
   915  008C                     _TRISAbits	set	140
   916  008D                     _TRISBbits	set	141
   917  008E                     _TRISCbits	set	142
   918  0097                     _WDTCONbits	set	151
   919  048E                     _ADIE	set	1166
   920  048D                     _RCIE	set	1165
   921  0488                     _TMR1IE	set	1160
   922  010D                     _LATBbits	set	269
   923  0872                     _LATC2	set	2162
   924  018C                     _ANSELAbits	set	396
   925  018D                     _ANSELBbits	set	397
   926  0199                     _RCREG	set	409
   927  019D                     _RCSTAbits	set	413
   928  019C                     _SPBRGH	set	412
   929  019B                     _SPBRGL	set	411
   930  019A                     _TXREG	set	410
   931  019E                     _TXSTAbits	set	414
   932  0CE9                     _OERR	set	3305
   933  0211                     _SSPBUF	set	529
   934  0215                     _SSPCON1bits	set	533
   935  0214                     _SSPSTATbits	set	532
   936  0393                     _IOCAF	set	915
   937  0393                     _IOCAFbits	set	915
   938  0392                     _IOCANbits	set	914
   939  0391                     _IOCAPbits	set	913
   940  0396                     _IOCBF	set	918
   941  0396                     _IOCBFbits	set	918
   942  0395                     _IOCBNbits	set	917
   943  0394                     _IOCBPbits	set	916
   944                           
   945                           	psect	cinit
   946  00CF                     start_initialization:	
   947  00CF                     __initialization:	
   948                           
   949                           ; Clear objects allocated to COMMON
   950  00CF  01F9               	clrf	__pbssCOMMON& (0+127)
   951  00D0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   952  00D1  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   953  00D2  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   954  00D3  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   955                           
   956                           ; Clear objects allocated to BANK1
   957  00D4  30C1               	movlw	low __pbssBANK1
   958  00D5  0084               	movwf	4
   959  00D6  3000               	movlw	high __pbssBANK1
   960  00D7  0085               	movwf	5
   961  00D8  301E               	movlw	30
   962  00D9  318D  2537  3180   	fcall	clear_ram0
   963                           
   964                           ; Clear objects allocated to BANK2
   965  00DC  3020               	movlw	low __pbssBANK2
   966  00DD  0084               	movwf	4
   967  00DE  3001               	movlw	high __pbssBANK2
   968  00DF  0085               	movwf	5
   969  00E0  3032               	movlw	50
   970  00E1  318D  2537  3180   	fcall	clear_ram0
   971                           
   972                           ; Clear objects allocated to BANK3
   973  00E4  30A0               	movlw	low __pbssBANK3
   974  00E5  0084               	movwf	4
   975  00E6  3001               	movlw	high __pbssBANK3
   976  00E7  0085               	movwf	5
   977  00E8  3033               	movlw	51
   978  00E9  318D  2537  3180   	fcall	clear_ram0
   979                           
   980                           ; Initialize objects allocated to BANK1
   981  00EC  3052               	movlw	low __pidataBANK1
   982  00ED  0084               	movwf	4
   983  00EE  308E               	movlw	(high __pidataBANK1)| (0+128)
   984  00EF  0085               	movwf	5
   985  00F0  30A0               	movlw	low __pdataBANK1
   986  00F1  0086               	movwf	6
   987  00F2  3000               	movlw	high __pdataBANK1
   988  00F3  0087               	movwf	7
   989  00F4  3021               	movlw	33
   990  00F5  318D  2531  3180   	fcall	init_ram
   991                           
   992                           ; Initialize objects allocated to BANK2
   993  00F8  30BC               	movlw	low __pidataBANK2
   994  00F9  0084               	movwf	4
   995  00FA  308D               	movlw	(high __pidataBANK2)| (0+128)
   996  00FB  0085               	movwf	5
   997  00FC  3052               	movlw	low __pdataBANK2
   998  00FD  0086               	movwf	6
   999  00FE  3001               	movlw	high __pdataBANK2
  1000  00FF  0087               	movwf	7
  1001  0100  3016               	movlw	22
  1002  0101  318D  2531         	fcall	init_ram
  1003  0103                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006  0103                     __end_of__initialization:	
  1007  0103  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1008  0104  0020               	movlb	0
  1009  0105  3186  2E3D         	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bssCOMMON
  1012  0079                     __pbssCOMMON:	
  1013  0079                     _end:	
  1014  0079                     	ds	2
  1015  007B                     _start:	
  1016  007B                     	ds	2
  1017  007D                     _messageDoneFlag:	
  1018  007D                     	ds	1
  1019                           
  1020                           	psect	bssBANK1
  1021  00C1                     __pbssBANK1:	
  1022  00C1                     DecodeGPS@F4928:	
  1023  00C1                     	ds	6
  1024  00C7                     DecodeGPS@F4930:	
  1025  00C7                     	ds	6
  1026  00CD                     _validLatitude:	
  1027  00CD                     	ds	6
  1028  00D3                     _validLongitude:	
  1029  00D3                     	ds	6
  1030  00D9                     _recordEndAdress:	
  1031  00D9                     	ds	4
  1032  00DD                     _recordFlag:	
  1033  00DD                     	ds	1
  1034  00DE                     _strobeFlag:	
  1035  00DE                     	ds	1
  1036                           
  1037                           	psect	dataBANK1
  1038  00A0                     __pdataBANK1:	
  1039  00A0                     DisableGPS@F4914:	
  1040  00A0                     	ds	13
  1041  00AD                     DecodeGPS@F4926:	
  1042  00AD                     	ds	7
  1043  00B4                     SetupGPS@F4917:	
  1044  00B4                     	ds	6
  1045  00BA                     SetupGPS@F4919:	
  1046  00BA                     	ds	4
  1047  00BE                     _gpsInvalidFlag:	
  1048  00BE                     	ds	1
  1049  00BF                     _validEastWest:	
  1050  00BF                     	ds	1
  1051  00C0                     _validNorthSouth:	
  1052  00C0                     	ds	1
  1053                           
  1054                           	psect	bssBANK2
  1055  0120                     __pbssBANK2:	
  1056  0120                     _gpsMessage:	
  1057  0120                     	ds	50
  1058                           
  1059                           	psect	dataBANK2
  1060  0152                     __pdataBANK2:	
  1061  0152                     UpdateGPS@F4924:	
  1062  0152                     	ds	22
  1063                           
  1064                           	psect	bssBANK3
  1065  01A0                     __pbssBANK3:	
  1066  01A0                     _buffer:	
  1067  01A0                     	ds	51
  1068                           
  1069                           	psect	clrtext
  1070  0D37                     clear_ram0:	
  1071                           ;	Called with FSR0 containing the base address, and
  1072                           ;	WREG with the size to clear
  1073                           
  1074  0D37  0064               	clrwdt	;clear the watchdog before getting into this loop
  1075  0D38                     clrloop0:	
  1076  0D38  0180               	clrf	0	;clear RAM location pointed to by FSR
  1077  0D39  3101               	addfsr 0,1
  1078  0D3A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1079  0D3B  2D38               	goto	clrloop0	;have we reached the end yet?
  1080  0D3C  3400               	retlw	0	;all done for this memory range, return
  1081                           
  1082                           	psect	inittext
  1083  0D31                     init_ram:	
  1084  0D31  00FE               	movwf	126
  1085  0D32                     initloop:	
  1086  0D32  0012               	moviw fsr0++
  1087  0D33  001E               	movwi fsr1++
  1088  0D34  0BFE               	decfsz	126,f
  1089  0D35  2D32               	goto	initloop
  1090  0D36  3400               	retlw	0
  1091                           
  1092                           	psect	cstackBANK1
  1093  00DF                     __pcstackBANK1:	
  1094  00DF                     ??_main:	
  1095                           
  1096                           ; 0 bytes @ 0x0
  1097  00DF                     	ds	3
  1098  00E2                     main@periodicCounter:	
  1099                           
  1100                           ; 1 bytes @ 0x3
  1101  00E2                     	ds	1
  1102                           
  1103                           	psect	cstackCOMMON
  1104  0070                     __pcstackCOMMON:	
  1105  0070                     ?_InitCLK:	
  1106  0070                     ?_InitGPIO:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_InitADC:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_InitSPI:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_InitTimer1:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_InitWatchdog:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_initUART:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?_ToggleSleepGPS:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_SetupGPS:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?_RecordMode:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_UpdateGPS:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ?_GoToSleep:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ?_Hibernate:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_WriteBuffer:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ??_WriteBuffer:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ?_DecodeGPS:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_isr:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ?_WriteSPI:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ?_uart_xmit:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ?_ReadSPI:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_ReadStatusSPI:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_ReadBuffer:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 1 bytes @ 0x0
  1171  0070                     	ds	1
  1172  0071                     WriteBuffer@data:	
  1173                           
  1174                           ; 1 bytes @ 0x1
  1175  0071                     	ds	1
  1176  0072                     ??_isr:	
  1177                           
  1178                           ; 0 bytes @ 0x2
  1179  0072                     	ds	5
  1180  0077                     _isr$570:	
  1181                           
  1182                           ; 2 bytes @ 0x7
  1183  0077                     	ds	2
  1184                           
  1185                           	psect	cstackBANK0
  1186  0020                     __pcstackBANK0:	
  1187  0020                     ??_InitCLK:	
  1188  0020                     ??_InitGPIO:	
  1189                           ; 0 bytes @ 0x0
  1190                           
  1191  0020                     ??_InitADC:	
  1192                           ; 0 bytes @ 0x0
  1193                           
  1194  0020                     ??_InitSPI:	
  1195                           ; 0 bytes @ 0x0
  1196                           
  1197  0020                     ??_InitTimer1:	
  1198                           ; 0 bytes @ 0x0
  1199                           
  1200  0020                     ??_InitWatchdog:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0020                     ??_initUART:	
  1204                           ; 0 bytes @ 0x0
  1205                           
  1206  0020                     ??_ToggleSleepGPS:	
  1207                           ; 0 bytes @ 0x0
  1208                           
  1209  0020                     ??_GoToSleep:	
  1210                           ; 0 bytes @ 0x0
  1211                           
  1212  0020                     ??_Hibernate:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0020                     ??_WriteSPI:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0020                     ??_ReadSPI:	
  1219                           ; 0 bytes @ 0x0
  1220                           
  1221  0020                     ??_ReadBuffer:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0020                     ??_uart_xmit:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0020                     ?_compute_checksum:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0020                     ?___wmul:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0020                     uart_xmit@mydata_byte:	
  1234                           ; 2 bytes @ 0x0
  1235                           
  1236  0020                     compute_checksum@size:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0020                     ___wmul@multiplier:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x0
  1244  0020                     	ds	1
  1245  0021                     ReadSPI@dataByte:	
  1246  0021                     ReadBuffer@read_data:	
  1247                           ; 1 bytes @ 0x1
  1248                           
  1249  0021                     GoToSleep@count:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252  0021                     Hibernate@count:	
  1253                           ; 1 bytes @ 0x1
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x1
  1257  0021                     	ds	1
  1258  0022                     ??_compute_checksum:	
  1259  0022                     WriteSPI@temp:	
  1260                           ; 0 bytes @ 0x2
  1261                           
  1262  0022                     ___wmul@multiplicand:	
  1263                           ; 2 bytes @ 0x2
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x2
  1267  0022                     	ds	2
  1268  0024                     ??___wmul:	
  1269  0024                     WriteSPI@databyte:	
  1270                           ; 0 bytes @ 0x4
  1271                           
  1272  0024                     compute_checksum@checksum:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275  0024                     ___wmul@product:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0x4
  1280  0024                     	ds	1
  1281  0025                     ??_ReadStatusSPI:	
  1282  0025                     compute_checksum@data:	
  1283                           ; 0 bytes @ 0x5
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x5
  1287  0025                     	ds	1
  1288  0026                     ?___lwdiv:	
  1289  0026                     ReadStatusSPI@dataRead:	
  1290                           ; 2 bytes @ 0x6
  1291                           
  1292  0026                     compute_checksum@x:	
  1293                           ; 1 bytes @ 0x6
  1294                           
  1295  0026                     ___lwdiv@divisor:	
  1296                           ; 2 bytes @ 0x6
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x6
  1300  0026                     	ds	1
  1301  0027                     ?_WriteOverheadSPI:	
  1302  0027                     WriteOverheadSPI@address:	
  1303                           ; 0 bytes @ 0x7
  1304                           
  1305                           
  1306                           ; 4 bytes @ 0x7
  1307  0027                     	ds	1
  1308  0028                     ?_uart_write_message:	
  1309  0028                     uart_write_message@size:	
  1310                           ; 0 bytes @ 0x8
  1311                           
  1312  0028                     ___lwdiv@dividend:	
  1313                           ; 2 bytes @ 0x8
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x8
  1317  0028                     	ds	2
  1318  002A                     ??_uart_write_message:	
  1319  002A                     ??___lwdiv:	
  1320                           ; 0 bytes @ 0xA
  1321                           
  1322                           
  1323                           ; 0 bytes @ 0xA
  1324  002A                     	ds	1
  1325  002B                     ??_WriteOverheadSPI:	
  1326  002B                     ___lwdiv@quotient:	
  1327                           ; 0 bytes @ 0xB
  1328                           
  1329                           
  1330                           ; 2 bytes @ 0xB
  1331  002B                     	ds	2
  1332  002D                     ___lwdiv@counter:	
  1333  002D                     _uart_write_message$1353:	
  1334                           ; 1 bytes @ 0xD
  1335                           
  1336                           
  1337                           ; 2 bytes @ 0xD
  1338  002D                     	ds	1
  1339  002E                     ??_DecodeGPS:	
  1340  002E                     ?___lwmod:	
  1341                           ; 0 bytes @ 0xE
  1342                           
  1343  002E                     ___lwmod@divisor:	
  1344                           ; 2 bytes @ 0xE
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0xE
  1348  002E                     	ds	1
  1349  002F                     _uart_write_message$1354:	
  1350                           
  1351                           ; 2 bytes @ 0xF
  1352  002F                     	ds	1
  1353  0030                     ___lwmod@dividend:	
  1354  0030                     DecodeGPS@messageID:	
  1355                           ; 2 bytes @ 0x10
  1356                           
  1357                           
  1358                           ; 7 bytes @ 0x10
  1359  0030                     	ds	1
  1360  0031                     uart_write_message@x:	
  1361  0031                     WriteOverheadSPI@address_bytes:	
  1362                           ; 2 bytes @ 0x11
  1363                           
  1364                           
  1365                           ; 3 bytes @ 0x11
  1366  0031                     	ds	1
  1367  0032                     ??___lwmod:	
  1368                           
  1369                           ; 0 bytes @ 0x12
  1370  0032                     	ds	1
  1371  0033                     uart_write_message@checksum:	
  1372  0033                     ___lwmod@counter:	
  1373                           ; 1 bytes @ 0x13
  1374                           
  1375                           
  1376                           ; 1 bytes @ 0x13
  1377  0033                     	ds	1
  1378  0034                     ?_sprintf:	
  1379  0034                     WriteOverheadSPI@StatusReg:	
  1380                           ; 2 bytes @ 0x14
  1381                           
  1382  0034                     uart_write_message@data:	
  1383                           ; 1 bytes @ 0x14
  1384                           
  1385  0034                     sprintf@f:	
  1386                           ; 1 bytes @ 0x14
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x14
  1390  0034                     	ds	1
  1391  0035                     ??_RecordMode:	
  1392  0035                     uart_write_message@ascii_checksum:	
  1393                           ; 0 bytes @ 0x15
  1394                           
  1395                           
  1396                           ; 2 bytes @ 0x15
  1397  0035                     	ds	2
  1398  0037                     DecodeGPS@northSouth:	
  1399                           
  1400                           ; 1 bytes @ 0x17
  1401  0037                     	ds	1
  1402  0038                     DecodeGPS@eastWest:	
  1403                           
  1404                           ; 1 bytes @ 0x18
  1405  0038                     	ds	1
  1406  0039                     DecodeGPS@status:	
  1407                           
  1408                           ; 1 bytes @ 0x19
  1409  0039                     	ds	1
  1410  003A                     ??_sprintf:	
  1411  003A                     RecordMode@count:	
  1412                           ; 0 bytes @ 0x1A
  1413                           
  1414  003A                     DecodeGPS@latitude:	
  1415                           ; 2 bytes @ 0x1A
  1416                           
  1417                           
  1418                           ; 6 bytes @ 0x1A
  1419  003A                     	ds	2
  1420  003C                     RecordMode@address:	
  1421                           
  1422                           ; 4 bytes @ 0x1C
  1423  003C                     	ds	2
  1424  003E                     sprintf@flag:	
  1425                           
  1426                           ; 1 bytes @ 0x1E
  1427  003E                     	ds	1
  1428  003F                     sprintf@prec:	
  1429                           
  1430                           ; 1 bytes @ 0x1F
  1431  003F                     	ds	1
  1432  0040                     sprintf@ap:	
  1433  0040                     RecordMode@x:	
  1434                           ; 1 bytes @ 0x20
  1435                           
  1436  0040                     DecodeGPS@longitude:	
  1437                           ; 2 bytes @ 0x20
  1438                           
  1439                           
  1440                           ; 6 bytes @ 0x20
  1441  0040                     	ds	1
  1442  0041                     sprintf@sp:	
  1443                           
  1444                           ; 1 bytes @ 0x21
  1445  0041                     	ds	1
  1446  0042                     sprintf@_val:	
  1447                           
  1448                           ; 4 bytes @ 0x22
  1449  0042                     	ds	4
  1450  0046                     sprintf@c:	
  1451  0046                     DecodeGPS@x:	
  1452                           ; 1 bytes @ 0x26
  1453                           
  1454                           
  1455                           ; 2 bytes @ 0x26
  1456  0046                     	ds	1
  1457  0047                     ??_SetupGPS:	
  1458                           
  1459                           ; 0 bytes @ 0x27
  1460  0047                     	ds	1
  1461  0048                     ??_UpdateGPS:	
  1462                           
  1463                           ; 0 bytes @ 0x28
  1464  0048                     	ds	1
  1465  0049                     UpdateGPS@GPSupdateMessage:	
  1466                           
  1467                           ; 22 bytes @ 0x29
  1468  0049                     	ds	1
  1469  004A                     SetupGPS@message:	
  1470                           
  1471                           ; 22 bytes @ 0x2A
  1472  004A                     	ds	22
  1473  0060                     SetupGPS@startSequence:	
  1474                           
  1475                           ; 6 bytes @ 0x40
  1476  0060                     	ds	6
  1477  0066                     SetupGPS@MID:	
  1478                           
  1479                           ; 4 bytes @ 0x46
  1480  0066                     	ds	4
  1481  006A                     SetupGPS@x:	
  1482                           
  1483                           ; 2 bytes @ 0x4A
  1484  006A                     	ds	2
  1485  006C                     ?_main:	
  1486  006C                     main@argc:	
  1487                           ; 2 bytes @ 0x4C
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x4C
  1491  006C                     	ds	2
  1492  006E                     main@argv:	
  1493                           
  1494                           ; 2 bytes @ 0x4E
  1495  006E                     	ds	2
  1496                           
  1497                           	psect	maintext
  1498  063D                     __pmaintext:	
  1499 ;;
  1500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1501 ;;
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 20 in file "launcher_main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  argc            2   76[BANK0 ] int 
  1507 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  periodicCoun    1    3[BANK1 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2   76[BANK0 ] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 17F/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1519 ;;      Params:         0       4       0       0       0       0       0
  1520 ;;      Locals:         0       0       1       0       0       0       0
  1521 ;;      Temps:          0       0       3       0       0       0       0
  1522 ;;      Totals:         0       4       4       0       0       0       0
  1523 ;;Total ram usage:        8 bytes
  1524 ;; Hardware stack levels required when called:    6
  1525 ;; This function calls:
  1526 ;;		_GoToSleep
  1527 ;;		_Hibernate
  1528 ;;		_InitADC
  1529 ;;		_InitCLK
  1530 ;;		_InitGPIO
  1531 ;;		_InitSPI
  1532 ;;		_InitTimer1
  1533 ;;		_InitWatchdog
  1534 ;;		_RecordMode
  1535 ;;		_SetupGPS
  1536 ;;		_ToggleSleepGPS
  1537 ;;		_UpdateGPS
  1538 ;;		_initUART
  1539 ;; This function is called by:
  1540 ;;		Startup code after reset
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _main
  1546  063D                     _main:	
  1547                           
  1548                           ;launcher_main.c: 23: InitCLK();
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1552  063D  318D  2544  3186   	fcall	_InitCLK
  1553                           
  1554                           ;launcher_main.c: 24: InitGPIO();
  1555  0640  318E  269E  3186   	fcall	_InitGPIO
  1556                           
  1557                           ;launcher_main.c: 25: InitADC();
  1558  0643  318E  2601  3186   	fcall	_InitADC
  1559                           
  1560                           ;launcher_main.c: 26: InitSPI();
  1561  0646  318D  2597  3186   	fcall	_InitSPI
  1562                           
  1563                           ;launcher_main.c: 27: InitTimer1();
  1564  0649  318D  2556  3186   	fcall	_InitTimer1
  1565                           
  1566                           ;launcher_main.c: 28: InitWatchdog();
  1567  064C  318D  253D  3186   	fcall	_InitWatchdog
  1568                           
  1569                           ;launcher_main.c: 29: initUART();
  1570  064F  318D  2565  3186   	fcall	_initUART
  1571                           
  1572                           ;launcher_main.c: 31: unsigned char periodicCounter = 10;
  1573  0652  300A               	movlw	10
  1574  0653  0021               	movlb	1	; select bank1
  1575  0654  00DF               	movwf	??_main^(0+128)
  1576  0655  085F               	movf	??_main^(0+128),w
  1577  0656  00E2               	movwf	main@periodicCounter^(0+128)
  1578                           
  1579                           ;launcher_main.c: 32: gpsIndex = 1;
  1580  0657  3001               	movlw	1
  1581  0658  00DF               	movwf	??_main^(0+128)
  1582  0659  085F               	movf	??_main^(0+128),w
  1583  065A  00E3               	movwf	_gpsIndex^(0+128)	;volatile
  1584                           
  1585                           ;launcher_main.c: 34: INTCONbits.GIE = 1;
  1586  065B  178B               	bsf	11,7	;volatile
  1587                           
  1588                           ;launcher_main.c: 36: if(!PORTCbits.RC7)
  1589  065C  0020               	movlb	0	; select bank0
  1590  065D  1B8E               	btfsc	14,7	;volatile
  1591  065E  2E62               	goto	l2389
  1592                           
  1593                           ;launcher_main.c: 37: ToggleSleepGPS();
  1594  065F  318E  26CB  3186   	fcall	_ToggleSleepGPS
  1595  0662                     l2389:	
  1596                           
  1597                           ;launcher_main.c: 38: SetupGPS();
  1598  0662  3186  26EA  3186   	fcall	_SetupGPS
  1599  0665                     l2391:	
  1600                           ;launcher_main.c: 40: while(1){
  1601                           
  1602                           
  1603                           ;launcher_main.c: 43: if(PORTAbits.RA1)
  1604  0665  0020               	movlb	0	; select bank0
  1605  0666  1C8C               	btfss	12,1	;volatile
  1606  0667  2E78               	goto	l107
  1607                           
  1608                           ;launcher_main.c: 44: {
  1609                           ;launcher_main.c: 46: PORTBbits.RB0 = 1;
  1610  0668  140D               	bsf	13,0	;volatile
  1611                           
  1612                           ;launcher_main.c: 47: _delay((unsigned long)((100)*(16000000/4000.0)));
  1613  0669  3003               	movlw	3
  1614  066A  0021               	movlb	1	; select bank1
  1615  066B  00E1               	movwf	(??_main^(0+128)+2)
  1616  066C  3008               	movlw	8
  1617  066D  00E0               	movwf	(??_main^(0+128)+1)
  1618  066E  3078               	movlw	120
  1619  066F  00DF               	movwf	??_main^(0+128)
  1620  0670                     u2197:	
  1621  0670  0BDF               	decfsz	??_main^(0+128),f
  1622  0671  2E70               	goto	u2197
  1623  0672  0BE0               	decfsz	(??_main^(0+128)+1),f
  1624  0673  2E70               	goto	u2197
  1625  0674  0BE1               	decfsz	(??_main^(0+128)+2),f
  1626  0675  2E70               	goto	u2197
  1627                           
  1628                           ;launcher_main.c: 48: PORTBbits.RB0 = 0;
  1629  0676  0020               	movlb	0	; select bank0
  1630  0677  100D               	bcf	13,0	;volatile
  1631  0678                     l107:	
  1632                           
  1633                           ;launcher_main.c: 49: }
  1634                           ;launcher_main.c: 51: if(recordFlag)
  1635  0678  0021               	movlb	1	; select bank1
  1636  0679  085D               	movf	_recordFlag^(0+128),w
  1637  067A  1903               	btfsc	3,2
  1638  067B  2E80               	goto	l2401
  1639                           
  1640                           ;launcher_main.c: 52: {
  1641                           ;launcher_main.c: 53: RecordMode();
  1642  067C  3183  23CA  3186   	fcall	_RecordMode
  1643  067F  0021               	movlb	1	; select bank1
  1644  0680                     l2401:	
  1645                           
  1646                           ;launcher_main.c: 54: }
  1647                           ;launcher_main.c: 57: UpdateGPS();
  1648  0680  318E  2673  3186   	fcall	_UpdateGPS
  1649                           
  1650                           ;launcher_main.c: 59: if(gpsInvalidFlag)
  1651  0683  0021               	movlb	1	; select bank1
  1652  0684  083E               	movf	_gpsInvalidFlag^(0+128),w
  1653  0685  1903               	btfsc	3,2
  1654  0686  2EAD               	goto	l2411
  1655                           
  1656                           ;launcher_main.c: 60: {
  1657                           ;launcher_main.c: 61: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1658  0687  0022               	movlb	2	; select bank2
  1659  0688  080D               	movf	13,w	;volatile
  1660  0689  39FF               	andlw	255
  1661  068A  3820               	iorlw	32
  1662  068B  0021               	movlb	1	; select bank1
  1663  068C  00DF               	movwf	??_main^(0+128)
  1664  068D  0020               	movlb	0	; select bank0
  1665  068E  080D               	movf	13,w	;volatile
  1666  068F  0021               	movlb	1	; select bank1
  1667  0690  065F               	xorwf	??_main^(0+128),w
  1668  0691  3900               	andlw	-256
  1669  0692  065F               	xorwf	??_main^(0+128),w
  1670  0693  0020               	movlb	0	; select bank0
  1671  0694  008D               	movwf	13	;volatile
  1672                           
  1673                           ;launcher_main.c: 62: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1674  0695  0022               	movlb	2	; select bank2
  1675  0696  080D               	movf	13,w	;volatile
  1676  0697  39FF               	andlw	255
  1677  0698  39EF               	andlw	239
  1678  0699  0021               	movlb	1	; select bank1
  1679  069A  00DF               	movwf	??_main^(0+128)
  1680  069B  0020               	movlb	0	; select bank0
  1681  069C  080D               	movf	13,w	;volatile
  1682  069D  0021               	movlb	1	; select bank1
  1683  069E  065F               	xorwf	??_main^(0+128),w
  1684  069F  3900               	andlw	-256
  1685  06A0  065F               	xorwf	??_main^(0+128),w
  1686  06A1  0020               	movlb	0	; select bank0
  1687  06A2  008D               	movwf	13	;volatile
  1688                           
  1689                           ;launcher_main.c: 63: if(periodicCounter < 14)
  1690  06A3  300E               	movlw	14
  1691  06A4  0021               	movlb	1	; select bank1
  1692  06A5  0262               	subwf	main@periodicCounter^(0+128),w
  1693  06A6  1803               	skipnc
  1694  06A7  2ED1               	goto	l2417
  1695                           
  1696                           ;launcher_main.c: 64: periodicCounter++;
  1697  06A8  3001               	movlw	1
  1698  06A9  00DF               	movwf	??_main^(0+128)
  1699  06AA  085F               	movf	??_main^(0+128),w
  1700  06AB  07E2               	addwf	main@periodicCounter^(0+128),f
  1701                           
  1702                           ;launcher_main.c: 65: }
  1703  06AC  2ED1               	goto	l2417
  1704  06AD                     l2411:	
  1705                           
  1706                           ;launcher_main.c: 66: else
  1707                           ;launcher_main.c: 67: {
  1708                           ;launcher_main.c: 68: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1709  06AD  0022               	movlb	2	; select bank2
  1710  06AE  080D               	movf	13,w	;volatile
  1711  06AF  39FF               	andlw	255
  1712  06B0  3810               	iorlw	16
  1713  06B1  0021               	movlb	1	; select bank1
  1714  06B2  00DF               	movwf	??_main^(0+128)
  1715  06B3  0020               	movlb	0	; select bank0
  1716  06B4  080D               	movf	13,w	;volatile
  1717  06B5  0021               	movlb	1	; select bank1
  1718  06B6  065F               	xorwf	??_main^(0+128),w
  1719  06B7  3900               	andlw	-256
  1720  06B8  065F               	xorwf	??_main^(0+128),w
  1721  06B9  0020               	movlb	0	; select bank0
  1722  06BA  008D               	movwf	13	;volatile
  1723                           
  1724                           ;launcher_main.c: 69: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1725  06BB  0022               	movlb	2	; select bank2
  1726  06BC  080D               	movf	13,w	;volatile
  1727  06BD  39FF               	andlw	255
  1728  06BE  39DF               	andlw	223
  1729  06BF  0021               	movlb	1	; select bank1
  1730  06C0  00DF               	movwf	??_main^(0+128)
  1731  06C1  0020               	movlb	0	; select bank0
  1732  06C2  080D               	movf	13,w	;volatile
  1733  06C3  0021               	movlb	1	; select bank1
  1734  06C4  065F               	xorwf	??_main^(0+128),w
  1735  06C5  3900               	andlw	-256
  1736  06C6  065F               	xorwf	??_main^(0+128),w
  1737  06C7  0020               	movlb	0	; select bank0
  1738  06C8  008D               	movwf	13	;volatile
  1739                           
  1740                           ;launcher_main.c: 70: periodicCounter = 10;
  1741  06C9  300A               	movlw	10
  1742  06CA  0021               	movlb	1	; select bank1
  1743  06CB  00DF               	movwf	??_main^(0+128)
  1744  06CC  085F               	movf	??_main^(0+128),w
  1745  06CD  00E2               	movwf	main@periodicCounter^(0+128)
  1746                           
  1747                           ;launcher_main.c: 71: ToggleSleepGPS();
  1748  06CE  318E  26CB  3186   	fcall	_ToggleSleepGPS
  1749  06D1                     l2417:	
  1750                           
  1751                           ;launcher_main.c: 72: }
  1752                           ;launcher_main.c: 74: if(!recordFlag)
  1753  06D1  0021               	movlb	1	; select bank1
  1754  06D2  08DD               	movf	_recordFlag^(0+128),f
  1755  06D3  1D03               	skipz
  1756  06D4  2E65               	goto	l2391
  1757                           
  1758                           ;launcher_main.c: 75: {
  1759                           ;launcher_main.c: 76: if(strobeFlag)
  1760  06D5  085E               	movf	_strobeFlag^(0+128),w
  1761  06D6  1903               	btfsc	3,2
  1762  06D7  2EDD               	goto	l2423
  1763                           
  1764                           ;launcher_main.c: 77: GoToSleep(10);
  1765  06D8  300A               	movlw	10
  1766  06D9  318D  2585  3186   	fcall	_GoToSleep
  1767  06DC  2E65               	goto	l2391
  1768  06DD                     l2423:	
  1769                           
  1770                           ;launcher_main.c: 78: else if(gpsInvalidFlag)
  1771  06DD  0021               	movlb	1	; select bank1
  1772  06DE  083E               	movf	_gpsInvalidFlag^(0+128),w
  1773  06DF  1903               	btfsc	3,2
  1774  06E0  2EE6               	goto	l2427
  1775                           
  1776                           ;launcher_main.c: 79: GoToSleep(periodicCounter);
  1777  06E1  0862               	movf	main@periodicCounter^(0+128),w
  1778  06E2  318D  2585  3186   	fcall	_GoToSleep
  1779  06E5  2E65               	goto	l2391
  1780  06E6                     l2427:	
  1781                           
  1782                           ;launcher_main.c: 80: else
  1783                           ;launcher_main.c: 81: Hibernate();
  1784  06E6  318E  261A  3186   	fcall	_Hibernate
  1785  06E9  2E65               	goto	l2391
  1786  06EA                     __end_of_main:	
  1787                           ;launcher_main.c: 82: }
  1788                           ;launcher_main.c: 83: }
  1789                           ;launcher_main.c: 85: return (0);
  1790                           ;	Return value of _main is never used
  1791                           
  1792                           
  1793                           	psect	text1
  1794  0D65                     __ptext1:	
  1795 ;; *************** function _initUART *****************
  1796 ;; Defined at:
  1797 ;;		line 253 in file "launcher_functions.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;		None               void
  1804 ;; Registers used:
  1805 ;;		wreg, status,2
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1811 ;;      Params:         0       0       0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    2
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _initUART
  1827  0D65                     _initUART:	
  1828                           
  1829                           ;launcher_functions.c: 256: TRISCbits.TRISC6 = 0;
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _initUART: [wreg+status,2]
  1833  0D65  0021               	movlb	1	; select bank1
  1834  0D66  130E               	bcf	14,6	;volatile
  1835                           
  1836                           ;launcher_functions.c: 257: TRISCbits.TRISC7 = 1;
  1837  0D67  178E               	bsf	14,7	;volatile
  1838                           
  1839                           ;launcher_functions.c: 258: TXSTAbits.BRGH = 0;
  1840  0D68  0023               	movlb	3	; select bank3
  1841  0D69  111E               	bcf	30,2	;volatile
  1842                           
  1843                           ;launcher_functions.c: 260: SPBRGH = 0;
  1844  0D6A  019C               	clrf	28	;volatile
  1845                           
  1846                           ;launcher_functions.c: 261: SPBRGL = 51;
  1847  0D6B  3033               	movlw	51
  1848  0D6C  009B               	movwf	27	;volatile
  1849                           
  1850                           ;launcher_functions.c: 262: TXSTAbits.TX9 = 0;
  1851  0D6D  131E               	bcf	30,6	;volatile
  1852                           
  1853                           ;launcher_functions.c: 263: TXSTAbits.SYNC = 0;
  1854  0D6E  121E               	bcf	30,4	;volatile
  1855                           
  1856                           ;launcher_functions.c: 264: TXSTAbits.TXEN = 1;
  1857  0D6F  169E               	bsf	30,5	;volatile
  1858                           
  1859                           ;launcher_functions.c: 266: RCSTAbits.SPEN = 1;
  1860  0D70  179D               	bsf	29,7	;volatile
  1861                           
  1862                           ;launcher_functions.c: 267: RCSTAbits.RX9 = 0;
  1863  0D71  131D               	bcf	29,6	;volatile
  1864                           
  1865                           ;launcher_functions.c: 268: RCSTAbits.CREN = 1;
  1866  0D72  161D               	bsf	29,4	;volatile
  1867  0D73  0008               	return
  1868  0D74                     __end_of_initUART:	
  1869                           
  1870                           	psect	text2
  1871  0E73                     __ptext2:	
  1872 ;; *************** function _UpdateGPS *****************
  1873 ;; Defined at:
  1874 ;;		line 357 in file "launcher_functions.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  GPSupdateMes   22   41[BANK0 ] unsigned char [22]
  1879 ;; Return value:  Size  Location     Type
  1880 ;;		None               void
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         0       0       0       0       0       0       0
  1889 ;;      Locals:         0      22       0       0       0       0       0
  1890 ;;      Temps:          0       1       0       0       0       0       0
  1891 ;;      Totals:         0      23       0       0       0       0       0
  1892 ;;Total ram usage:       23 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    4
  1895 ;; This function calls:
  1896 ;;		_DecodeGPS
  1897 ;;		_ToggleSleepGPS
  1898 ;;		_uart_write_message
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _UpdateGPS
  1906  0E73                     _UpdateGPS:	
  1907                           
  1908                           ;launcher_functions.c: 359: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,00,00*"
      +                          ;
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1912  0E73  3052               	movlw	low UpdateGPS@F4924
  1913  0E74  0086               	movwf	6
  1914  0E75  3001               	movlw	high UpdateGPS@F4924
  1915  0E76  0087               	movwf	7
  1916  0E77  3049               	movlw	low UpdateGPS@GPSupdateMessage
  1917  0E78  0084               	movwf	4
  1918  0E79  3000               	movlw	high UpdateGPS@GPSupdateMessage
  1919  0E7A  0085               	movwf	5
  1920  0E7B  3016               	movlw	22
  1921  0E7C  0020               	movlb	0	; select bank0
  1922  0E7D  00C8               	movwf	??_UpdateGPS
  1923  0E7E                     u1840:	
  1924  0E7E  0016               	moviw fsr1++
  1925  0E7F  001A               	movwi fsr0++
  1926  0E80  0BC8               	decfsz	??_UpdateGPS,f
  1927  0E81  2E7E               	goto	u1840
  1928                           
  1929                           ;launcher_functions.c: 362: RCIE = 1;
  1930  0E82  0021               	movlb	1	; select bank1
  1931  0E83  1691               	bsf	17,5	;volatile
  1932                           
  1933                           ;launcher_functions.c: 363: PEIE = 1;
  1934  0E84  170B               	bsf	11,6	;volatile
  1935                           
  1936                           ;launcher_functions.c: 364: GIE = 1;
  1937  0E85  178B               	bsf	11,7	;volatile
  1938                           
  1939                           ;launcher_functions.c: 366: if(!PORTCbits.RC7)
  1940  0E86  0020               	movlb	0	; select bank0
  1941  0E87  1B8E               	btfsc	14,7	;volatile
  1942  0E88  2E8C               	goto	l2331
  1943                           
  1944                           ;launcher_functions.c: 367: ToggleSleepGPS();
  1945  0E89  318E  26CB  318E   	fcall	_ToggleSleepGPS
  1946  0E8C                     l2331:	
  1947                           
  1948                           ;launcher_functions.c: 369: gpsIndex = 0;
  1949  0E8C  0021               	movlb	1	; select bank1
  1950  0E8D  01E3               	clrf	_gpsIndex^(0+128)	;volatile
  1951                           
  1952                           ;launcher_functions.c: 370: uart_write_message(GPSupdateMessage, 22);
  1953  0E8E  3016               	movlw	22
  1954  0E8F  0020               	movlb	0	; select bank0
  1955  0E90  00A8               	movwf	uart_write_message@size
  1956  0E91  3000               	movlw	0
  1957  0E92  00A9               	movwf	uart_write_message@size+1
  1958  0E93  3049               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  1959  0E94  3187  277C  318E   	fcall	_uart_write_message
  1960  0E97                     l2335:	
  1961                           ;launcher_functions.c: 371: while(!messageDoneFlag);
  1962                           
  1963  0E97  087D               	movf	_messageDoneFlag,w
  1964  0E98  1903               	btfsc	3,2
  1965  0E99  2E97               	goto	l2335
  1966                           
  1967                           ;launcher_functions.c: 373: messageDoneFlag = 0;
  1968  0E9A  01FD               	clrf	_messageDoneFlag
  1969                           
  1970                           ;launcher_functions.c: 374: DecodeGPS();
  1971  0E9B  3181  2107         	fcall	_DecodeGPS
  1972  0E9D  0008               	return
  1973  0E9E                     __end_of_UpdateGPS:	
  1974                           
  1975                           	psect	text3
  1976  0ECB                     __ptext3:	
  1977 ;; *************** function _ToggleSleepGPS *****************
  1978 ;; Defined at:
  1979 ;;		line 316 in file "launcher_functions.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;		None               void
  1986 ;; Registers used:
  1987 ;;		wreg
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1993 ;;      Params:         0       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0
  1995 ;;      Temps:          0       3       0       0       0       0       0
  1996 ;;      Totals:         0       3       0       0       0       0       0
  1997 ;;Total ram usage:        3 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    2
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;;		_UpdateGPS
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _ToggleSleepGPS
  2010  0ECB                     _ToggleSleepGPS:	
  2011                           
  2012                           ;launcher_functions.c: 318: PORTAbits.RA6 = 0;
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _ToggleSleepGPS: [wreg]
  2016  0ECB  0020               	movlb	0	; select bank0
  2017  0ECC  130C               	bcf	12,6	;volatile
  2018                           
  2019                           ;launcher_functions.c: 319: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2020  0ECD  3015               	movlw	21
  2021  0ECE  00A2               	movwf	??_ToggleSleepGPS+2
  2022  0ECF  304B               	movlw	75
  2023  0ED0  00A1               	movwf	??_ToggleSleepGPS+1
  2024  0ED1  30D1               	movlw	209
  2025  0ED2  00A0               	movwf	??_ToggleSleepGPS
  2026  0ED3                     u2207:	
  2027  0ED3  0BA0               	decfsz	??_ToggleSleepGPS,f
  2028  0ED4  2ED3               	goto	u2207
  2029  0ED5  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2030  0ED6  2ED3               	goto	u2207
  2031  0ED7  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2032  0ED8  2ED3               	goto	u2207
  2033  0ED9  0000               	nop
  2034                           
  2035                           ;launcher_functions.c: 320: PORTAbits.RA6 = 1;
  2036  0EDA  0020               	movlb	0	; select bank0
  2037  0EDB  170C               	bsf	12,6	;volatile
  2038                           
  2039                           ;launcher_functions.c: 321: _delay((unsigned long)((100)*(16000000/4000.0)));
  2040  0EDC  3003               	movlw	3
  2041  0EDD  00A2               	movwf	??_ToggleSleepGPS+2
  2042  0EDE  3008               	movlw	8
  2043  0EDF  00A1               	movwf	??_ToggleSleepGPS+1
  2044  0EE0  3078               	movlw	120
  2045  0EE1  00A0               	movwf	??_ToggleSleepGPS
  2046  0EE2                     u2217:	
  2047  0EE2  0BA0               	decfsz	??_ToggleSleepGPS,f
  2048  0EE3  2EE2               	goto	u2217
  2049  0EE4  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2050  0EE5  2EE2               	goto	u2217
  2051  0EE6  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2052  0EE7  2EE2               	goto	u2217
  2053                           
  2054                           ;launcher_functions.c: 322: PORTAbits.RA6 = 0;
  2055  0EE8  0020               	movlb	0	; select bank0
  2056  0EE9  130C               	bcf	12,6	;volatile
  2057                           
  2058                           ;launcher_functions.c: 323: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2059  0EEA  3015               	movlw	21
  2060  0EEB  00A2               	movwf	??_ToggleSleepGPS+2
  2061  0EEC  304B               	movlw	75
  2062  0EED  00A1               	movwf	??_ToggleSleepGPS+1
  2063  0EEE  30D1               	movlw	209
  2064  0EEF  00A0               	movwf	??_ToggleSleepGPS
  2065  0EF0                     u2227:	
  2066  0EF0  0BA0               	decfsz	??_ToggleSleepGPS,f
  2067  0EF1  2EF0               	goto	u2227
  2068  0EF2  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2069  0EF3  2EF0               	goto	u2227
  2070  0EF4  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2071  0EF5  2EF0               	goto	u2227
  2072  0EF6  0000               	nop
  2073  0EF7  0008               	return
  2074  0EF8                     __end_of_ToggleSleepGPS:	
  2075                           
  2076                           	psect	text4
  2077  0107                     __ptext4:	
  2078 ;; *************** function _DecodeGPS *****************
  2079 ;; Defined at:
  2080 ;;		line 380 in file "launcher_functions.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  messageID       7   16[BANK0 ] unsigned char [7]
  2085 ;;  longitude       6   32[BANK0 ] unsigned int [3]
  2086 ;;  latitude        6   26[BANK0 ] unsigned int [3]
  2087 ;;  x               2   38[BANK0 ] int 
  2088 ;;  status          1   25[BANK0 ] unsigned char 
  2089 ;;  eastWest        1   24[BANK0 ] unsigned char 
  2090 ;;  northSouth      1   23[BANK0 ] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;		None               void
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2100 ;;      Params:         0       0       0       0       0       0       0
  2101 ;;      Locals:         0      24       0       0       0       0       0
  2102 ;;      Temps:          0       2       0       0       0       0       0
  2103 ;;      Totals:         0      26       0       0       0       0       0
  2104 ;;Total ram usage:       26 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    3
  2107 ;; This function calls:
  2108 ;;		___lwdiv
  2109 ;;		___wmul
  2110 ;; This function is called by:
  2111 ;;		_UpdateGPS
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _DecodeGPS
  2117  0107                     _DecodeGPS:	
  2118                           
  2119                           ;launcher_functions.c: 383: unsigned char messageID[7] = "$GPGLL";
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2123  0107  30AD               	movlw	low DecodeGPS@F4926
  2124  0108  0086               	movwf	6
  2125  0109  3000               	movlw	high DecodeGPS@F4926
  2126  010A  0087               	movwf	7
  2127  010B  3030               	movlw	low DecodeGPS@messageID
  2128  010C  0084               	movwf	4
  2129  010D  3000               	movlw	high DecodeGPS@messageID
  2130  010E  0085               	movwf	5
  2131  010F  3007               	movlw	7
  2132  0110  0020               	movlb	0	; select bank0
  2133  0111  00AE               	movwf	??_DecodeGPS
  2134  0112                     u1540:	
  2135  0112  0016               	moviw fsr1++
  2136  0113  001A               	movwi fsr0++
  2137  0114  0BAE               	decfsz	??_DecodeGPS,f
  2138  0115  2912               	goto	u1540
  2139                           
  2140                           ;launcher_functions.c: 384: unsigned int latitude[3] = {0,0,0};
  2141  0116  30C1               	movlw	low DecodeGPS@F4928
  2142  0117  0086               	movwf	6
  2143  0118  3000               	movlw	high DecodeGPS@F4928
  2144  0119  0087               	movwf	7
  2145  011A  303A               	movlw	low DecodeGPS@latitude
  2146  011B  0084               	movwf	4
  2147  011C  3000               	movlw	high DecodeGPS@latitude
  2148  011D  0085               	movwf	5
  2149  011E  3006               	movlw	6
  2150  011F  00AE               	movwf	??_DecodeGPS
  2151  0120                     u1550:	
  2152  0120  0016               	moviw fsr1++
  2153  0121  001A               	movwi fsr0++
  2154  0122  0BAE               	decfsz	??_DecodeGPS,f
  2155  0123  2920               	goto	u1550
  2156                           
  2157                           ;launcher_functions.c: 385: unsigned int longitude[3] = {0,0,0};
  2158  0124  30C7               	movlw	low DecodeGPS@F4930
  2159  0125  0086               	movwf	6
  2160  0126  3000               	movlw	high DecodeGPS@F4930
  2161  0127  0087               	movwf	7
  2162  0128  3040               	movlw	low DecodeGPS@longitude
  2163  0129  0084               	movwf	4
  2164  012A  3000               	movlw	high DecodeGPS@longitude
  2165  012B  0085               	movwf	5
  2166  012C  3006               	movlw	6
  2167  012D  00AE               	movwf	??_DecodeGPS
  2168  012E                     u1560:	
  2169  012E  0016               	moviw fsr1++
  2170  012F  001A               	movwi fsr0++
  2171  0130  0BAE               	decfsz	??_DecodeGPS,f
  2172  0131  292E               	goto	u1560
  2173                           
  2174                           ;launcher_functions.c: 386: unsigned char northSouth;
  2175                           ;launcher_functions.c: 387: unsigned char eastWest;
  2176                           ;launcher_functions.c: 388: unsigned char status;
  2177                           ;launcher_functions.c: 389: int x;
  2178                           ;launcher_functions.c: 391: for(x=0;x<6;x++)
  2179  0132  01C6               	clrf	DecodeGPS@x
  2180  0133  01C7               	clrf	DecodeGPS@x+1
  2181  0134  0847               	movf	DecodeGPS@x+1,w
  2182  0135  3A80               	xorlw	128
  2183  0136  00AE               	movwf	??_DecodeGPS
  2184  0137  3080               	movlw	128
  2185  0138  022E               	subwf	??_DecodeGPS,w
  2186  0139  1D03               	skipz
  2187  013A  293D               	goto	u1575
  2188  013B  3006               	movlw	6
  2189  013C  0246               	subwf	DecodeGPS@x,w
  2190  013D                     u1575:	
  2191  013D  1803               	btfsc	3,0
  2192  013E  2960               	goto	l1979
  2193  013F                     l1973:	
  2194                           
  2195                           ;launcher_functions.c: 392: {
  2196                           ;launcher_functions.c: 393: if(gpsMessage[x] != messageID[x])
  2197  013F  0020               	movlb	0	; select bank0
  2198  0140  0846               	movf	DecodeGPS@x,w
  2199  0141  3E30               	addlw	DecodeGPS@messageID& (0+255)
  2200  0142  0086               	movwf	6
  2201  0143  0187               	clrf	7
  2202  0144  0846               	movf	DecodeGPS@x,w
  2203  0145  3E20               	addlw	_gpsMessage& (0+255)
  2204  0146  0084               	movwf	4
  2205  0147  3001               	movlw	1	; select bank2/3
  2206  0148  0085               	movwf	5
  2207  0149  0800               	movf	0,w
  2208  014A  0601               	xorwf	1,w
  2209  014B  1903               	skipnz
  2210  014C  2950               	goto	l1977
  2211                           
  2212                           ;launcher_functions.c: 394: gpsInvalidFlag = 1;
  2213  014D  0021               	movlb	1	; select bank1
  2214  014E  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2215  014F  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2216  0150                     l1977:	
  2217  0150  3001               	movlw	1
  2218  0151  0020               	movlb	0	; select bank0
  2219  0152  07C6               	addwf	DecodeGPS@x,f
  2220  0153  3000               	movlw	0
  2221  0154  3DC7               	addwfc	DecodeGPS@x+1,f
  2222  0155  0847               	movf	DecodeGPS@x+1,w
  2223  0156  3A80               	xorlw	128
  2224  0157  00AE               	movwf	??_DecodeGPS
  2225  0158  3080               	movlw	128
  2226  0159  022E               	subwf	??_DecodeGPS,w
  2227  015A  1D03               	skipz
  2228  015B  295E               	goto	u1595
  2229  015C  3006               	movlw	6
  2230  015D  0246               	subwf	DecodeGPS@x,w
  2231  015E                     u1595:	
  2232  015E  1C03               	skipc
  2233  015F  293F               	goto	l1973
  2234  0160                     l1979:	
  2235                           
  2236                           ;launcher_functions.c: 395: }
  2237                           ;launcher_functions.c: 398: x = x + 1;
  2238  0160  0020               	movlb	0	; select bank0
  2239  0161  0846               	movf	DecodeGPS@x,w
  2240  0162  3E01               	addlw	1
  2241  0163  00C6               	movwf	DecodeGPS@x
  2242  0164  3000               	movlw	0
  2243  0165  3D47               	addwfc	DecodeGPS@x+1,w
  2244  0166  00C7               	movwf	DecodeGPS@x+1
  2245                           
  2246                           ;launcher_functions.c: 401: if(gpsMessage[x]!= ',')
  2247  0167  0846               	movf	DecodeGPS@x,w
  2248  0168  3E20               	addlw	_gpsMessage& (0+255)
  2249  0169  0086               	movwf	6
  2250  016A  3001               	movlw	1	; select bank2/3
  2251  016B  0087               	movwf	7
  2252  016C  0801               	movf	1,w
  2253  016D  3A2C               	xorlw	44
  2254  016E  1903               	skipnz
  2255  016F  2A34               	goto	l2011
  2256                           
  2257                           ;launcher_functions.c: 402: {
  2258                           ;launcher_functions.c: 404: latitude[0] = (gpsMessage[x++] - 48)*10;
  2259  0170  0846               	movf	DecodeGPS@x,w
  2260  0171  3E20               	addlw	_gpsMessage& (0+255)
  2261  0172  0086               	movwf	6
  2262  0173  3001               	movlw	1	; select bank2/3
  2263  0174  0087               	movwf	7
  2264  0175  0801               	movf	1,w
  2265  0176  3ED0               	addlw	208
  2266  0177  00A0               	movwf	___wmul@multiplier
  2267  0178  30FF               	movlw	255
  2268  0179  1803               	skipnc
  2269  017A  3000               	movlw	0
  2270  017B  00A1               	movwf	___wmul@multiplier+1
  2271  017C  300A               	movlw	10
  2272  017D  00A2               	movwf	___wmul@multiplicand
  2273  017E  3000               	movlw	0
  2274  017F  00A3               	movwf	___wmul@multiplicand+1
  2275  0180  318E  2634  3181   	fcall	___wmul
  2276  0183  0020               	movlb	0	; select bank0
  2277  0184  0821               	movf	?___wmul+1,w
  2278  0185  01BB               	clrf	DecodeGPS@latitude+1
  2279  0186  07BB               	addwf	DecodeGPS@latitude+1,f
  2280  0187  0820               	movf	?___wmul,w
  2281  0188  01BA               	clrf	DecodeGPS@latitude
  2282  0189  07BA               	addwf	DecodeGPS@latitude,f
  2283  018A  3001               	movlw	1
  2284  018B  07C6               	addwf	DecodeGPS@x,f
  2285  018C  3000               	movlw	0
  2286  018D  3DC7               	addwfc	DecodeGPS@x+1,f
  2287                           
  2288                           ;launcher_functions.c: 405: latitude[0] += (gpsMessage[x++] - 48);
  2289  018E  0846               	movf	DecodeGPS@x,w
  2290  018F  3E20               	addlw	_gpsMessage& (0+255)
  2291  0190  0086               	movwf	6
  2292  0191  3001               	movlw	1	; select bank2/3
  2293  0192  0087               	movwf	7
  2294  0193  0801               	movf	1,w
  2295  0194  3ED0               	addlw	208
  2296  0195  00AE               	movwf	??_DecodeGPS
  2297  0196  30FF               	movlw	255
  2298  0197  1803               	skipnc
  2299  0198  3000               	movlw	0
  2300  0199  00AF               	movwf	??_DecodeGPS+1
  2301  019A  082E               	movf	??_DecodeGPS,w
  2302  019B  07BA               	addwf	DecodeGPS@latitude,f
  2303  019C  082F               	movf	??_DecodeGPS+1,w
  2304  019D  3DBB               	addwfc	DecodeGPS@latitude+1,f
  2305  019E  3001               	movlw	1
  2306  019F  07C6               	addwf	DecodeGPS@x,f
  2307  01A0  3000               	movlw	0
  2308  01A1  3DC7               	addwfc	DecodeGPS@x+1,f
  2309                           
  2310                           ;launcher_functions.c: 408: latitude[1] = (gpsMessage[x++] - 48)*10;
  2311  01A2  0846               	movf	DecodeGPS@x,w
  2312  01A3  3E20               	addlw	_gpsMessage& (0+255)
  2313  01A4  0086               	movwf	6
  2314  01A5  3001               	movlw	1	; select bank2/3
  2315  01A6  0087               	movwf	7
  2316  01A7  0801               	movf	1,w
  2317  01A8  3ED0               	addlw	208
  2318  01A9  00A0               	movwf	___wmul@multiplier
  2319  01AA  30FF               	movlw	255
  2320  01AB  1803               	skipnc
  2321  01AC  3000               	movlw	0
  2322  01AD  00A1               	movwf	___wmul@multiplier+1
  2323  01AE  300A               	movlw	10
  2324  01AF  00A2               	movwf	___wmul@multiplicand
  2325  01B0  3000               	movlw	0
  2326  01B1  00A3               	movwf	___wmul@multiplicand+1
  2327  01B2  318E  2634  3181   	fcall	___wmul
  2328  01B5  0020               	movlb	0	; select bank0
  2329  01B6  0821               	movf	?___wmul+1,w
  2330  01B7  01BD               	clrf	DecodeGPS@latitude+3
  2331  01B8  07BD               	addwf	DecodeGPS@latitude+3,f
  2332  01B9  0820               	movf	?___wmul,w
  2333  01BA  01BC               	clrf	DecodeGPS@latitude+2
  2334  01BB  07BC               	addwf	DecodeGPS@latitude+2,f
  2335  01BC  3001               	movlw	1
  2336  01BD  07C6               	addwf	DecodeGPS@x,f
  2337  01BE  3000               	movlw	0
  2338  01BF  3DC7               	addwfc	DecodeGPS@x+1,f
  2339                           
  2340                           ;launcher_functions.c: 409: latitude[1] += (gpsMessage[x++] - 48);
  2341  01C0  0846               	movf	DecodeGPS@x,w
  2342  01C1  3E20               	addlw	_gpsMessage& (0+255)
  2343  01C2  0086               	movwf	6
  2344  01C3  3001               	movlw	1	; select bank2/3
  2345  01C4  0087               	movwf	7
  2346  01C5  0801               	movf	1,w
  2347  01C6  3ED0               	addlw	208
  2348  01C7  00AE               	movwf	??_DecodeGPS
  2349  01C8  30FF               	movlw	255
  2350  01C9  1803               	skipnc
  2351  01CA  3000               	movlw	0
  2352  01CB  00AF               	movwf	??_DecodeGPS+1
  2353  01CC  082E               	movf	??_DecodeGPS,w
  2354  01CD  07BC               	addwf	DecodeGPS@latitude+2,f
  2355  01CE  082F               	movf	??_DecodeGPS+1,w
  2356  01CF  3DBD               	addwfc	DecodeGPS@latitude+3,f
  2357  01D0  3001               	movlw	1
  2358  01D1  07C6               	addwf	DecodeGPS@x,f
  2359  01D2  3000               	movlw	0
  2360  01D3  3DC7               	addwfc	DecodeGPS@x+1,f
  2361                           
  2362                           ;launcher_functions.c: 412: x = x + 1;
  2363  01D4  0846               	movf	DecodeGPS@x,w
  2364  01D5  3E01               	addlw	1
  2365  01D6  00C6               	movwf	DecodeGPS@x
  2366  01D7  3000               	movlw	0
  2367  01D8  3D47               	addwfc	DecodeGPS@x+1,w
  2368  01D9  00C7               	movwf	DecodeGPS@x+1
  2369                           
  2370                           ;launcher_functions.c: 415: latitude[2] = (gpsMessage[x++] - 48)*10;
  2371  01DA  0846               	movf	DecodeGPS@x,w
  2372  01DB  3E20               	addlw	_gpsMessage& (0+255)
  2373  01DC  0086               	movwf	6
  2374  01DD  3001               	movlw	1	; select bank2/3
  2375  01DE  0087               	movwf	7
  2376  01DF  0801               	movf	1,w
  2377  01E0  3ED0               	addlw	208
  2378  01E1  00A0               	movwf	___wmul@multiplier
  2379  01E2  30FF               	movlw	255
  2380  01E3  1803               	skipnc
  2381  01E4  3000               	movlw	0
  2382  01E5  00A1               	movwf	___wmul@multiplier+1
  2383  01E6  300A               	movlw	10
  2384  01E7  00A2               	movwf	___wmul@multiplicand
  2385  01E8  3000               	movlw	0
  2386  01E9  00A3               	movwf	___wmul@multiplicand+1
  2387  01EA  318E  2634  3181   	fcall	___wmul
  2388  01ED  0020               	movlb	0	; select bank0
  2389  01EE  0821               	movf	?___wmul+1,w
  2390  01EF  01BF               	clrf	DecodeGPS@latitude+5
  2391  01F0  07BF               	addwf	DecodeGPS@latitude+5,f
  2392  01F1  0820               	movf	?___wmul,w
  2393  01F2  01BE               	clrf	DecodeGPS@latitude+4
  2394  01F3  07BE               	addwf	DecodeGPS@latitude+4,f
  2395  01F4  3001               	movlw	1
  2396  01F5  07C6               	addwf	DecodeGPS@x,f
  2397  01F6  3000               	movlw	0
  2398  01F7  3DC7               	addwfc	DecodeGPS@x+1,f
  2399                           
  2400                           ;launcher_functions.c: 416: latitude[2] += (gpsMessage[x++] - 48);
  2401  01F8  0846               	movf	DecodeGPS@x,w
  2402  01F9  3E20               	addlw	_gpsMessage& (0+255)
  2403  01FA  0086               	movwf	6
  2404  01FB  3001               	movlw	1	; select bank2/3
  2405  01FC  0087               	movwf	7
  2406  01FD  0801               	movf	1,w
  2407  01FE  3ED0               	addlw	208
  2408  01FF  00AE               	movwf	??_DecodeGPS
  2409  0200  30FF               	movlw	255
  2410  0201  1803               	skipnc
  2411  0202  3000               	movlw	0
  2412  0203  00AF               	movwf	??_DecodeGPS+1
  2413  0204  082E               	movf	??_DecodeGPS,w
  2414  0205  07BE               	addwf	DecodeGPS@latitude+4,f
  2415  0206  082F               	movf	??_DecodeGPS+1,w
  2416  0207  3DBF               	addwfc	DecodeGPS@latitude+5,f
  2417  0208  3001               	movlw	1
  2418  0209  07C6               	addwf	DecodeGPS@x,f
  2419  020A  3000               	movlw	0
  2420  020B  3DC7               	addwfc	DecodeGPS@x+1,f
  2421                           
  2422                           ;launcher_functions.c: 417: latitude[2] = (latitude[2]*60)/100;
  2423  020C  3064               	movlw	100
  2424  020D  00A6               	movwf	___lwdiv@divisor
  2425  020E  3000               	movlw	0
  2426  020F  00A7               	movwf	___lwdiv@divisor+1
  2427  0210  083F               	movf	DecodeGPS@latitude+5,w
  2428  0211  01A1               	clrf	___wmul@multiplier+1
  2429  0212  07A1               	addwf	___wmul@multiplier+1,f
  2430  0213  083E               	movf	DecodeGPS@latitude+4,w
  2431  0214  01A0               	clrf	___wmul@multiplier
  2432  0215  07A0               	addwf	___wmul@multiplier,f
  2433  0216  303C               	movlw	60
  2434  0217  00A2               	movwf	___wmul@multiplicand
  2435  0218  3000               	movlw	0
  2436  0219  00A3               	movwf	___wmul@multiplicand+1
  2437  021A  318E  2634  3181   	fcall	___wmul
  2438  021D  0020               	movlb	0	; select bank0
  2439  021E  0821               	movf	?___wmul+1,w
  2440  021F  01A9               	clrf	___lwdiv@dividend+1
  2441  0220  07A9               	addwf	___lwdiv@dividend+1,f
  2442  0221  0820               	movf	?___wmul,w
  2443  0222  01A8               	clrf	___lwdiv@dividend
  2444  0223  07A8               	addwf	___lwdiv@dividend,f
  2445  0224  318F  2727  3181   	fcall	___lwdiv
  2446  0227  0020               	movlb	0	; select bank0
  2447  0228  0827               	movf	?___lwdiv+1,w
  2448  0229  01BF               	clrf	DecodeGPS@latitude+5
  2449  022A  07BF               	addwf	DecodeGPS@latitude+5,f
  2450  022B  0826               	movf	?___lwdiv,w
  2451  022C  01BE               	clrf	DecodeGPS@latitude+4
  2452  022D  07BE               	addwf	DecodeGPS@latitude+4,f
  2453                           
  2454                           ;launcher_functions.c: 420: x = x + 2;
  2455  022E  0846               	movf	DecodeGPS@x,w
  2456  022F  3E02               	addlw	2
  2457  0230  00C6               	movwf	DecodeGPS@x
  2458  0231  3000               	movlw	0
  2459  0232  3D47               	addwfc	DecodeGPS@x+1,w
  2460  0233  00C7               	movwf	DecodeGPS@x+1
  2461  0234                     l2011:	
  2462                           
  2463                           ;launcher_functions.c: 421: }
  2464                           ;launcher_functions.c: 424: x = x + 1;
  2465  0234  0846               	movf	DecodeGPS@x,w
  2466  0235  3E01               	addlw	1
  2467  0236  00C6               	movwf	DecodeGPS@x
  2468  0237  3000               	movlw	0
  2469  0238  3D47               	addwfc	DecodeGPS@x+1,w
  2470  0239  00C7               	movwf	DecodeGPS@x+1
  2471                           
  2472                           ;launcher_functions.c: 427: if(gpsMessage[x] != ',')
  2473  023A  0846               	movf	DecodeGPS@x,w
  2474  023B  3E20               	addlw	_gpsMessage& (0+255)
  2475  023C  0086               	movwf	6
  2476  023D  3001               	movlw	1	; select bank2/3
  2477  023E  0087               	movwf	7
  2478  023F  0801               	movf	1,w
  2479  0240  3A2C               	xorlw	44
  2480  0241  1903               	skipnz
  2481  0242  2A50               	goto	l2019
  2482                           
  2483                           ;launcher_functions.c: 428: northSouth = gpsMessage[x++];
  2484  0243  0846               	movf	DecodeGPS@x,w
  2485  0244  3E20               	addlw	_gpsMessage& (0+255)
  2486  0245  0086               	movwf	6
  2487  0246  3001               	movlw	1	; select bank2/3
  2488  0247  0087               	movwf	7
  2489  0248  0801               	movf	1,w
  2490  0249  00AE               	movwf	??_DecodeGPS
  2491  024A  082E               	movf	??_DecodeGPS,w
  2492  024B  00B7               	movwf	DecodeGPS@northSouth
  2493  024C  3001               	movlw	1
  2494  024D  07C6               	addwf	DecodeGPS@x,f
  2495  024E  3000               	movlw	0
  2496  024F  3DC7               	addwfc	DecodeGPS@x+1,f
  2497  0250                     l2019:	
  2498                           
  2499                           ;launcher_functions.c: 431: x = x + 1;
  2500  0250  0846               	movf	DecodeGPS@x,w
  2501  0251  3E01               	addlw	1
  2502  0252  00C6               	movwf	DecodeGPS@x
  2503  0253  3000               	movlw	0
  2504  0254  3D47               	addwfc	DecodeGPS@x+1,w
  2505  0255  00C7               	movwf	DecodeGPS@x+1
  2506                           
  2507                           ;launcher_functions.c: 434: if(gpsMessage[x]!= ',')
  2508  0256  0846               	movf	DecodeGPS@x,w
  2509  0257  3E20               	addlw	_gpsMessage& (0+255)
  2510  0258  0086               	movwf	6
  2511  0259  3001               	movlw	1	; select bank2/3
  2512  025A  0087               	movwf	7
  2513  025B  0801               	movf	1,w
  2514  025C  3A2C               	xorlw	44
  2515  025D  1903               	skipnz
  2516  025E  2B3F               	goto	l2055
  2517                           
  2518                           ;launcher_functions.c: 435: {
  2519                           ;launcher_functions.c: 437: longitude[0] = (gpsMessage[x++] - 48)*100;
  2520  025F  0846               	movf	DecodeGPS@x,w
  2521  0260  3E20               	addlw	_gpsMessage& (0+255)
  2522  0261  0086               	movwf	6
  2523  0262  3001               	movlw	1	; select bank2/3
  2524  0263  0087               	movwf	7
  2525  0264  0801               	movf	1,w
  2526  0265  3ED0               	addlw	208
  2527  0266  00A0               	movwf	___wmul@multiplier
  2528  0267  30FF               	movlw	255
  2529  0268  1803               	skipnc
  2530  0269  3000               	movlw	0
  2531  026A  00A1               	movwf	___wmul@multiplier+1
  2532  026B  3064               	movlw	100
  2533  026C  00A2               	movwf	___wmul@multiplicand
  2534  026D  3000               	movlw	0
  2535  026E  00A3               	movwf	___wmul@multiplicand+1
  2536  026F  318E  2634  3181   	fcall	___wmul
  2537  0272  0020               	movlb	0	; select bank0
  2538  0273  0821               	movf	?___wmul+1,w
  2539  0274  01C1               	clrf	DecodeGPS@longitude+1
  2540  0275  07C1               	addwf	DecodeGPS@longitude+1,f
  2541  0276  0820               	movf	?___wmul,w
  2542  0277  01C0               	clrf	DecodeGPS@longitude
  2543  0278  07C0               	addwf	DecodeGPS@longitude,f
  2544  0279  3001               	movlw	1
  2545  027A  07C6               	addwf	DecodeGPS@x,f
  2546  027B  3000               	movlw	0
  2547  027C  3DC7               	addwfc	DecodeGPS@x+1,f
  2548                           
  2549                           ;launcher_functions.c: 438: longitude[0] += (gpsMessage[x++] - 48)*10;
  2550  027D  0846               	movf	DecodeGPS@x,w
  2551  027E  3E20               	addlw	_gpsMessage& (0+255)
  2552  027F  0086               	movwf	6
  2553  0280  3001               	movlw	1	; select bank2/3
  2554  0281  0087               	movwf	7
  2555  0282  0801               	movf	1,w
  2556  0283  3ED0               	addlw	208
  2557  0284  00A0               	movwf	___wmul@multiplier
  2558  0285  30FF               	movlw	255
  2559  0286  1803               	skipnc
  2560  0287  3000               	movlw	0
  2561  0288  00A1               	movwf	___wmul@multiplier+1
  2562  0289  300A               	movlw	10
  2563  028A  00A2               	movwf	___wmul@multiplicand
  2564  028B  3000               	movlw	0
  2565  028C  00A3               	movwf	___wmul@multiplicand+1
  2566  028D  318E  2634  3181   	fcall	___wmul
  2567  0290  0020               	movlb	0	; select bank0
  2568  0291  0820               	movf	?___wmul,w
  2569  0292  07C0               	addwf	DecodeGPS@longitude,f
  2570  0293  0821               	movf	?___wmul+1,w
  2571  0294  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2572  0295  3001               	movlw	1
  2573  0296  07C6               	addwf	DecodeGPS@x,f
  2574  0297  3000               	movlw	0
  2575  0298  3DC7               	addwfc	DecodeGPS@x+1,f
  2576                           
  2577                           ;launcher_functions.c: 439: longitude[0] += (gpsMessage[x++] - 48);
  2578  0299  0846               	movf	DecodeGPS@x,w
  2579  029A  3E20               	addlw	_gpsMessage& (0+255)
  2580  029B  0086               	movwf	6
  2581  029C  3001               	movlw	1	; select bank2/3
  2582  029D  0087               	movwf	7
  2583  029E  0801               	movf	1,w
  2584  029F  3ED0               	addlw	208
  2585  02A0  00AE               	movwf	??_DecodeGPS
  2586  02A1  30FF               	movlw	255
  2587  02A2  1803               	skipnc
  2588  02A3  3000               	movlw	0
  2589  02A4  00AF               	movwf	??_DecodeGPS+1
  2590  02A5  082E               	movf	??_DecodeGPS,w
  2591  02A6  07C0               	addwf	DecodeGPS@longitude,f
  2592  02A7  082F               	movf	??_DecodeGPS+1,w
  2593  02A8  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2594  02A9  3001               	movlw	1
  2595  02AA  07C6               	addwf	DecodeGPS@x,f
  2596  02AB  3000               	movlw	0
  2597  02AC  3DC7               	addwfc	DecodeGPS@x+1,f
  2598                           
  2599                           ;launcher_functions.c: 442: longitude[1] = (gpsMessage[x++] - 48)*10;
  2600  02AD  0846               	movf	DecodeGPS@x,w
  2601  02AE  3E20               	addlw	_gpsMessage& (0+255)
  2602  02AF  0086               	movwf	6
  2603  02B0  3001               	movlw	1	; select bank2/3
  2604  02B1  0087               	movwf	7
  2605  02B2  0801               	movf	1,w
  2606  02B3  3ED0               	addlw	208
  2607  02B4  00A0               	movwf	___wmul@multiplier
  2608  02B5  30FF               	movlw	255
  2609  02B6  1803               	skipnc
  2610  02B7  3000               	movlw	0
  2611  02B8  00A1               	movwf	___wmul@multiplier+1
  2612  02B9  300A               	movlw	10
  2613  02BA  00A2               	movwf	___wmul@multiplicand
  2614  02BB  3000               	movlw	0
  2615  02BC  00A3               	movwf	___wmul@multiplicand+1
  2616  02BD  318E  2634  3181   	fcall	___wmul
  2617  02C0  0020               	movlb	0	; select bank0
  2618  02C1  0821               	movf	?___wmul+1,w
  2619  02C2  01C3               	clrf	DecodeGPS@longitude+3
  2620  02C3  07C3               	addwf	DecodeGPS@longitude+3,f
  2621  02C4  0820               	movf	?___wmul,w
  2622  02C5  01C2               	clrf	DecodeGPS@longitude+2
  2623  02C6  07C2               	addwf	DecodeGPS@longitude+2,f
  2624  02C7  3001               	movlw	1
  2625  02C8  07C6               	addwf	DecodeGPS@x,f
  2626  02C9  3000               	movlw	0
  2627  02CA  3DC7               	addwfc	DecodeGPS@x+1,f
  2628                           
  2629                           ;launcher_functions.c: 443: longitude[1] += (gpsMessage[x++] - 48);
  2630  02CB  0846               	movf	DecodeGPS@x,w
  2631  02CC  3E20               	addlw	_gpsMessage& (0+255)
  2632  02CD  0086               	movwf	6
  2633  02CE  3001               	movlw	1	; select bank2/3
  2634  02CF  0087               	movwf	7
  2635  02D0  0801               	movf	1,w
  2636  02D1  3ED0               	addlw	208
  2637  02D2  00AE               	movwf	??_DecodeGPS
  2638  02D3  30FF               	movlw	255
  2639  02D4  1803               	skipnc
  2640  02D5  3000               	movlw	0
  2641  02D6  00AF               	movwf	??_DecodeGPS+1
  2642  02D7  082E               	movf	??_DecodeGPS,w
  2643  02D8  07C2               	addwf	DecodeGPS@longitude+2,f
  2644  02D9  082F               	movf	??_DecodeGPS+1,w
  2645  02DA  3DC3               	addwfc	DecodeGPS@longitude+3,f
  2646  02DB  3001               	movlw	1
  2647  02DC  07C6               	addwf	DecodeGPS@x,f
  2648  02DD  3000               	movlw	0
  2649  02DE  3DC7               	addwfc	DecodeGPS@x+1,f
  2650                           
  2651                           ;launcher_functions.c: 446: x = x + 1;
  2652  02DF  0846               	movf	DecodeGPS@x,w
  2653  02E0  3E01               	addlw	1
  2654  02E1  00C6               	movwf	DecodeGPS@x
  2655  02E2  3000               	movlw	0
  2656  02E3  3D47               	addwfc	DecodeGPS@x+1,w
  2657  02E4  00C7               	movwf	DecodeGPS@x+1
  2658                           
  2659                           ;launcher_functions.c: 449: longitude[2] = (gpsMessage[x++] - 48)*10;
  2660  02E5  0846               	movf	DecodeGPS@x,w
  2661  02E6  3E20               	addlw	_gpsMessage& (0+255)
  2662  02E7  0086               	movwf	6
  2663  02E8  3001               	movlw	1	; select bank2/3
  2664  02E9  0087               	movwf	7
  2665  02EA  0801               	movf	1,w
  2666  02EB  3ED0               	addlw	208
  2667  02EC  00A0               	movwf	___wmul@multiplier
  2668  02ED  30FF               	movlw	255
  2669  02EE  1803               	skipnc
  2670  02EF  3000               	movlw	0
  2671  02F0  00A1               	movwf	___wmul@multiplier+1
  2672  02F1  300A               	movlw	10
  2673  02F2  00A2               	movwf	___wmul@multiplicand
  2674  02F3  3000               	movlw	0
  2675  02F4  00A3               	movwf	___wmul@multiplicand+1
  2676  02F5  318E  2634  3181   	fcall	___wmul
  2677  02F8  0020               	movlb	0	; select bank0
  2678  02F9  0821               	movf	?___wmul+1,w
  2679  02FA  01C5               	clrf	DecodeGPS@longitude+5
  2680  02FB  07C5               	addwf	DecodeGPS@longitude+5,f
  2681  02FC  0820               	movf	?___wmul,w
  2682  02FD  01C4               	clrf	DecodeGPS@longitude+4
  2683  02FE  07C4               	addwf	DecodeGPS@longitude+4,f
  2684  02FF  3001               	movlw	1
  2685  0300  07C6               	addwf	DecodeGPS@x,f
  2686  0301  3000               	movlw	0
  2687  0302  3DC7               	addwfc	DecodeGPS@x+1,f
  2688                           
  2689                           ;launcher_functions.c: 450: longitude[2] += (gpsMessage[x++] - 48);
  2690  0303  0846               	movf	DecodeGPS@x,w
  2691  0304  3E20               	addlw	_gpsMessage& (0+255)
  2692  0305  0086               	movwf	6
  2693  0306  3001               	movlw	1	; select bank2/3
  2694  0307  0087               	movwf	7
  2695  0308  0801               	movf	1,w
  2696  0309  3ED0               	addlw	208
  2697  030A  00AE               	movwf	??_DecodeGPS
  2698  030B  30FF               	movlw	255
  2699  030C  1803               	skipnc
  2700  030D  3000               	movlw	0
  2701  030E  00AF               	movwf	??_DecodeGPS+1
  2702  030F  082E               	movf	??_DecodeGPS,w
  2703  0310  07C4               	addwf	DecodeGPS@longitude+4,f
  2704  0311  082F               	movf	??_DecodeGPS+1,w
  2705  0312  3DC5               	addwfc	DecodeGPS@longitude+5,f
  2706  0313  3001               	movlw	1
  2707  0314  07C6               	addwf	DecodeGPS@x,f
  2708  0315  3000               	movlw	0
  2709  0316  3DC7               	addwfc	DecodeGPS@x+1,f
  2710                           
  2711                           ;launcher_functions.c: 451: longitude[2] = (longitude[2]*60)/100;
  2712  0317  3064               	movlw	100
  2713  0318  00A6               	movwf	___lwdiv@divisor
  2714  0319  3000               	movlw	0
  2715  031A  00A7               	movwf	___lwdiv@divisor+1
  2716  031B  0845               	movf	DecodeGPS@longitude+5,w
  2717  031C  01A1               	clrf	___wmul@multiplier+1
  2718  031D  07A1               	addwf	___wmul@multiplier+1,f
  2719  031E  0844               	movf	DecodeGPS@longitude+4,w
  2720  031F  01A0               	clrf	___wmul@multiplier
  2721  0320  07A0               	addwf	___wmul@multiplier,f
  2722  0321  303C               	movlw	60
  2723  0322  00A2               	movwf	___wmul@multiplicand
  2724  0323  3000               	movlw	0
  2725  0324  00A3               	movwf	___wmul@multiplicand+1
  2726  0325  318E  2634  3181   	fcall	___wmul
  2727  0328  0020               	movlb	0	; select bank0
  2728  0329  0821               	movf	?___wmul+1,w
  2729  032A  01A9               	clrf	___lwdiv@dividend+1
  2730  032B  07A9               	addwf	___lwdiv@dividend+1,f
  2731  032C  0820               	movf	?___wmul,w
  2732  032D  01A8               	clrf	___lwdiv@dividend
  2733  032E  07A8               	addwf	___lwdiv@dividend,f
  2734  032F  318F  2727  3181   	fcall	___lwdiv
  2735  0332  0020               	movlb	0	; select bank0
  2736  0333  0827               	movf	?___lwdiv+1,w
  2737  0334  01C5               	clrf	DecodeGPS@longitude+5
  2738  0335  07C5               	addwf	DecodeGPS@longitude+5,f
  2739  0336  0826               	movf	?___lwdiv,w
  2740  0337  01C4               	clrf	DecodeGPS@longitude+4
  2741  0338  07C4               	addwf	DecodeGPS@longitude+4,f
  2742                           
  2743                           ;launcher_functions.c: 454: x = x + 2;
  2744  0339  0846               	movf	DecodeGPS@x,w
  2745  033A  3E02               	addlw	2
  2746  033B  00C6               	movwf	DecodeGPS@x
  2747  033C  3000               	movlw	0
  2748  033D  3D47               	addwfc	DecodeGPS@x+1,w
  2749  033E  00C7               	movwf	DecodeGPS@x+1
  2750  033F                     l2055:	
  2751                           
  2752                           ;launcher_functions.c: 455: }
  2753                           ;launcher_functions.c: 458: x = x + 1;
  2754  033F  0846               	movf	DecodeGPS@x,w
  2755  0340  3E01               	addlw	1
  2756  0341  00C6               	movwf	DecodeGPS@x
  2757  0342  3000               	movlw	0
  2758  0343  3D47               	addwfc	DecodeGPS@x+1,w
  2759  0344  00C7               	movwf	DecodeGPS@x+1
  2760                           
  2761                           ;launcher_functions.c: 461: if(gpsMessage[x] != ',')
  2762  0345  0846               	movf	DecodeGPS@x,w
  2763  0346  3E20               	addlw	_gpsMessage& (0+255)
  2764  0347  0086               	movwf	6
  2765  0348  3001               	movlw	1	; select bank2/3
  2766  0349  0087               	movwf	7
  2767  034A  0801               	movf	1,w
  2768  034B  3A2C               	xorlw	44
  2769  034C  1903               	skipnz
  2770  034D  2B5B               	goto	l2063
  2771                           
  2772                           ;launcher_functions.c: 462: eastWest = gpsMessage[x++];
  2773  034E  0846               	movf	DecodeGPS@x,w
  2774  034F  3E20               	addlw	_gpsMessage& (0+255)
  2775  0350  0086               	movwf	6
  2776  0351  3001               	movlw	1	; select bank2/3
  2777  0352  0087               	movwf	7
  2778  0353  0801               	movf	1,w
  2779  0354  00AE               	movwf	??_DecodeGPS
  2780  0355  082E               	movf	??_DecodeGPS,w
  2781  0356  00B8               	movwf	DecodeGPS@eastWest
  2782  0357  3001               	movlw	1
  2783  0358  07C6               	addwf	DecodeGPS@x,f
  2784  0359  3000               	movlw	0
  2785  035A  3DC7               	addwfc	DecodeGPS@x+1,f
  2786  035B                     l2063:	
  2787                           
  2788                           ;launcher_functions.c: 465: x = x + 1;
  2789  035B  0846               	movf	DecodeGPS@x,w
  2790  035C  3E01               	addlw	1
  2791  035D  00C6               	movwf	DecodeGPS@x
  2792  035E  3000               	movlw	0
  2793  035F  3D47               	addwfc	DecodeGPS@x+1,w
  2794  0360  00C7               	movwf	DecodeGPS@x+1
  2795  0361                     l2065:	
  2796                           ;launcher_functions.c: 468: while(gpsMessage[x++] != ','){}
  2797                           
  2798  0361  0847               	movf	DecodeGPS@x+1,w
  2799  0362  00AF               	movwf	??_DecodeGPS+1
  2800  0363  0846               	movf	DecodeGPS@x,w
  2801  0364  00AE               	movwf	??_DecodeGPS
  2802  0365  0AC6               	incf	DecodeGPS@x,f
  2803  0366  1903               	skipnz
  2804  0367  0AC7               	incf	DecodeGPS@x+1,f
  2805  0368  082E               	movf	??_DecodeGPS,w
  2806  0369  3E20               	addlw	_gpsMessage& (0+255)
  2807  036A  0086               	movwf	6
  2808  036B  3001               	movlw	1	; select bank2/3
  2809  036C  0087               	movwf	7
  2810  036D  0801               	movf	1,w
  2811  036E  3A2C               	xorlw	44
  2812  036F  1D03               	skipz
  2813  0370  2B61               	goto	l2065
  2814                           
  2815                           ;launcher_functions.c: 471: status = gpsMessage[x];
  2816  0371  0846               	movf	DecodeGPS@x,w
  2817  0372  3E20               	addlw	_gpsMessage& (0+255)
  2818  0373  0086               	movwf	6
  2819  0374  3001               	movlw	1	; select bank2/3
  2820  0375  0087               	movwf	7
  2821  0376  0801               	movf	1,w
  2822  0377  00AE               	movwf	??_DecodeGPS
  2823  0378  082E               	movf	??_DecodeGPS,w
  2824  0379  00B9               	movwf	DecodeGPS@status
  2825                           
  2826                           ;launcher_functions.c: 473: if(status == 'A')
  2827  037A  0839               	movf	DecodeGPS@status,w
  2828  037B  3A41               	xorlw	65
  2829  037C  1D03               	skipz
  2830  037D  2B81               	goto	l391
  2831                           
  2832                           ;launcher_functions.c: 474: gpsInvalidFlag = 0;
  2833  037E  0021               	movlb	1	; select bank1
  2834  037F  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2835  0380  2B84               	goto	l2073
  2836  0381                     l391:	
  2837                           
  2838                           ;launcher_functions.c: 475: else
  2839                           ;launcher_functions.c: 476: gpsInvalidFlag = 1;
  2840  0381  0021               	movlb	1	; select bank1
  2841  0382  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2842  0383  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2843  0384                     l2073:	
  2844                           
  2845                           ;launcher_functions.c: 480: if(!gpsInvalidFlag)
  2846  0384  08BE               	movf	_gpsInvalidFlag^(0+128),f
  2847  0385  1D03               	skipz
  2848  0386  0008               	return
  2849                           
  2850                           ;launcher_functions.c: 481: {
  2851                           ;launcher_functions.c: 483: for(x=0;x<3;x++)
  2852  0387  0020               	movlb	0	; select bank0
  2853  0388  01C6               	clrf	DecodeGPS@x
  2854  0389  01C7               	clrf	DecodeGPS@x+1
  2855  038A  0847               	movf	DecodeGPS@x+1,w
  2856  038B  3A80               	xorlw	128
  2857  038C  00AE               	movwf	??_DecodeGPS
  2858  038D  3080               	movlw	128
  2859  038E  022E               	subwf	??_DecodeGPS,w
  2860  038F  1D03               	skipz
  2861  0390  2B93               	goto	u1675
  2862  0391  3003               	movlw	3
  2863  0392  0246               	subwf	DecodeGPS@x,w
  2864  0393                     u1675:	
  2865  0393  1803               	btfsc	3,0
  2866  0394  2BBD               	goto	l2087
  2867  0395                     l2081:	
  2868                           
  2869                           ;launcher_functions.c: 484: {
  2870                           ;launcher_functions.c: 485: validLatitude[x] = latitude[x];
  2871  0395  0020               	movlb	0	; select bank0
  2872  0396  3546               	lslf	DecodeGPS@x,w
  2873  0397  3E3A               	addlw	DecodeGPS@latitude& (0+255)
  2874  0398  0086               	movwf	6
  2875  0399  0187               	clrf	7
  2876  039A  3546               	lslf	DecodeGPS@x,w
  2877  039B  3ECD               	addlw	_validLatitude& (0+255)
  2878  039C  0084               	movwf	4
  2879  039D  0185               	clrf	5
  2880  039E  3F40               	moviw [0]fsr1
  2881  039F  3F80               	movwi [0]fsr0
  2882  03A0  3F41               	moviw [1]fsr1
  2883  03A1  3F81               	movwi [1]fsr0
  2884                           
  2885                           ;launcher_functions.c: 486: validLongitude[x] = longitude[x];
  2886  03A2  3546               	lslf	DecodeGPS@x,w
  2887  03A3  3E40               	addlw	DecodeGPS@longitude& (0+255)
  2888  03A4  0086               	movwf	6
  2889  03A5  0187               	clrf	7
  2890  03A6  3546               	lslf	DecodeGPS@x,w
  2891  03A7  3ED3               	addlw	_validLongitude& (0+255)
  2892  03A8  0084               	movwf	4
  2893  03A9  0185               	clrf	5
  2894  03AA  3F40               	moviw [0]fsr1
  2895  03AB  3F80               	movwi [0]fsr0
  2896  03AC  3F41               	moviw [1]fsr1
  2897  03AD  3F81               	movwi [1]fsr0
  2898  03AE  3001               	movlw	1
  2899  03AF  07C6               	addwf	DecodeGPS@x,f
  2900  03B0  3000               	movlw	0
  2901  03B1  3DC7               	addwfc	DecodeGPS@x+1,f
  2902  03B2  0847               	movf	DecodeGPS@x+1,w
  2903  03B3  3A80               	xorlw	128
  2904  03B4  00AE               	movwf	??_DecodeGPS
  2905  03B5  3080               	movlw	128
  2906  03B6  022E               	subwf	??_DecodeGPS,w
  2907  03B7  1D03               	skipz
  2908  03B8  2BBB               	goto	u1685
  2909  03B9  3003               	movlw	3
  2910  03BA  0246               	subwf	DecodeGPS@x,w
  2911  03BB                     u1685:	
  2912  03BB  1C03               	skipc
  2913  03BC  2B95               	goto	l2081
  2914  03BD                     l2087:	
  2915                           
  2916                           ;launcher_functions.c: 487: }
  2917                           ;launcher_functions.c: 488: validNorthSouth = northSouth;
  2918  03BD  0020               	movlb	0	; select bank0
  2919  03BE  0837               	movf	DecodeGPS@northSouth,w
  2920  03BF  00AE               	movwf	??_DecodeGPS
  2921  03C0  082E               	movf	??_DecodeGPS,w
  2922  03C1  0021               	movlb	1	; select bank1
  2923  03C2  00C0               	movwf	_validNorthSouth^(0+128)
  2924                           
  2925                           ;launcher_functions.c: 489: validEastWest = eastWest;
  2926  03C3  0020               	movlb	0	; select bank0
  2927  03C4  0838               	movf	DecodeGPS@eastWest,w
  2928  03C5  00AE               	movwf	??_DecodeGPS
  2929  03C6  082E               	movf	??_DecodeGPS,w
  2930  03C7  0021               	movlb	1	; select bank1
  2931  03C8  00BF               	movwf	_validEastWest^(0+128)
  2932  03C9  0008               	return
  2933  03CA                     __end_of_DecodeGPS:	
  2934                           
  2935                           	psect	text5
  2936  0E34                     __ptext5:	
  2937 ;; *************** function ___wmul *****************
  2938 ;; Defined at:
  2939 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2942 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  product         2    4[BANK0 ] unsigned int 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    0[BANK0 ] unsigned int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2954 ;;      Params:         0       4       0       0       0       0       0
  2955 ;;      Locals:         0       2       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0
  2957 ;;      Totals:         0       6       0       0       0       0       0
  2958 ;;Total ram usage:        6 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    2
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_DecodeGPS
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function ___wmul
  2970  0E34                     ___wmul:	
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2974  0E34  0020               	movlb	0	; select bank0
  2975  0E35  01A4               	clrf	___wmul@product
  2976  0E36  01A5               	clrf	___wmul@product+1
  2977  0E37                     l1765:	
  2978  0E37  1C20               	btfss	___wmul@multiplier,0
  2979  0E38  2E3D               	goto	l540
  2980  0E39  0822               	movf	___wmul@multiplicand,w
  2981  0E3A  07A4               	addwf	___wmul@product,f
  2982  0E3B  0823               	movf	___wmul@multiplicand+1,w
  2983  0E3C  3DA5               	addwfc	___wmul@product+1,f
  2984  0E3D                     l540:	
  2985  0E3D  3001               	movlw	1
  2986  0E3E                     u1185:	
  2987  0E3E  35A2               	lslf	___wmul@multiplicand,f
  2988  0E3F  0DA3               	rlf	___wmul@multiplicand+1,f
  2989  0E40  0B89               	decfsz	9,f
  2990  0E41  2E3E               	goto	u1185
  2991  0E42  3001               	movlw	1
  2992  0E43                     u1195:	
  2993  0E43  36A1               	lsrf	___wmul@multiplier+1,f
  2994  0E44  0CA0               	rrf	___wmul@multiplier,f
  2995  0E45  0B89               	decfsz	9,f
  2996  0E46  2E43               	goto	u1195
  2997  0E47  0821               	movf	___wmul@multiplier+1,w
  2998  0E48  0420               	iorwf	___wmul@multiplier,w
  2999  0E49  1D03               	skipz
  3000  0E4A  2E37               	goto	l1765
  3001  0E4B  0825               	movf	___wmul@product+1,w
  3002  0E4C  01A1               	clrf	?___wmul+1
  3003  0E4D  07A1               	addwf	?___wmul+1,f
  3004  0E4E  0824               	movf	___wmul@product,w
  3005  0E4F  01A0               	clrf	?___wmul
  3006  0E50  07A0               	addwf	?___wmul,f
  3007  0E51  0008               	return
  3008  0E52                     __end_of___wmul:	
  3009                           
  3010                           	psect	text6
  3011  06EA                     __ptext6:	
  3012 ;; *************** function _SetupGPS *****************
  3013 ;; Defined at:
  3014 ;;		line 333 in file "launcher_functions.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  message        22   42[BANK0 ] unsigned char [22]
  3019 ;;  startSequenc    6   64[BANK0 ] unsigned char [6]
  3020 ;;  MID             4   70[BANK0 ] unsigned char [4]
  3021 ;;  x               2   74[BANK0 ] int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;		None               void
  3024 ;; Registers used:
  3025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3031 ;;      Params:         0       0       0       0       0       0       0
  3032 ;;      Locals:         0      34       0       0       0       0       0
  3033 ;;      Temps:          0       3       0       0       0       0       0
  3034 ;;      Totals:         0      37       0       0       0       0       0
  3035 ;;Total ram usage:       37 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    4
  3038 ;; This function calls:
  3039 ;;		_sprintf
  3040 ;;		_uart_write_message
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _SetupGPS
  3048  06EA                     _SetupGPS:	
  3049                           
  3050                           ;launcher_functions.c: 335: int x;
  3051                           ;launcher_functions.c: 336: unsigned char startSequence[6] = "$PSRF";
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3055  06EA  30B4               	movlw	low SetupGPS@F4917
  3056  06EB  0086               	movwf	6
  3057  06EC  3000               	movlw	high SetupGPS@F4917
  3058  06ED  0087               	movwf	7
  3059  06EE  3060               	movlw	low SetupGPS@startSequence
  3060  06EF  0084               	movwf	4
  3061  06F0  3000               	movlw	high SetupGPS@startSequence
  3062  06F1  0085               	movwf	5
  3063  06F2  3006               	movlw	6
  3064  06F3  0020               	movlb	0	; select bank0
  3065  06F4  00C7               	movwf	??_SetupGPS
  3066  06F5                     u1690:	
  3067  06F5  0016               	moviw fsr1++
  3068  06F6  001A               	movwi fsr0++
  3069  06F7  0BC7               	decfsz	??_SetupGPS,f
  3070  06F8  2EF5               	goto	u1690
  3071                           
  3072                           ;launcher_functions.c: 337: unsigned char MID[4] = "103";
  3073  06F9  0021               	movlb	1	; select bank1
  3074  06FA  083D               	movf	(SetupGPS@F4919+3)^(0+128),w
  3075  06FB  0020               	movlb	0	; select bank0
  3076  06FC  00E9               	movwf	SetupGPS@MID+3
  3077  06FD  0021               	movlb	1	; select bank1
  3078  06FE  083C               	movf	(SetupGPS@F4919+2)^(0+128),w
  3079  06FF  0020               	movlb	0	; select bank0
  3080  0700  00E8               	movwf	SetupGPS@MID+2
  3081  0701  0021               	movlb	1	; select bank1
  3082  0702  083B               	movf	(SetupGPS@F4919+1)^(0+128),w
  3083  0703  0020               	movlb	0	; select bank0
  3084  0704  00E7               	movwf	SetupGPS@MID+1
  3085  0705  0021               	movlb	1	; select bank1
  3086  0706  083A               	movf	SetupGPS@F4919^(0+128),w
  3087  0707  0020               	movlb	0	; select bank0
  3088  0708  00E6               	movwf	SetupGPS@MID
  3089                           
  3090                           ;launcher_functions.c: 338: unsigned char message[22];
  3091                           ;launcher_functions.c: 341: for(x = 0; x < 6; x++)
  3092  0709  01EA               	clrf	SetupGPS@x
  3093  070A  01EB               	clrf	SetupGPS@x+1
  3094  070B  086B               	movf	SetupGPS@x+1,w
  3095  070C  3A80               	xorlw	128
  3096  070D  00C7               	movwf	??_SetupGPS
  3097  070E  3080               	movlw	128
  3098  070F  0247               	subwf	??_SetupGPS,w
  3099  0710  1D03               	skipz
  3100  0711  2F14               	goto	u1705
  3101  0712  3006               	movlw	6
  3102  0713  026A               	subwf	SetupGPS@x,w
  3103  0714                     u1705:	
  3104  0714  1803               	btfsc	3,0
  3105  0715  2F54               	goto	l2235
  3106  0716                     l2225:	
  3107                           
  3108                           ;launcher_functions.c: 342: {
  3109                           ;launcher_functions.c: 343: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3110  0716  3015               	movlw	21
  3111  0717  0020               	movlb	0	; select bank0
  3112  0718  00C9               	movwf	??_SetupGPS+2
  3113  0719  304B               	movlw	75
  3114  071A  00C8               	movwf	??_SetupGPS+1
  3115  071B  30D1               	movlw	209
  3116  071C  00C7               	movwf	??_SetupGPS
  3117  071D                     u2237:	
  3118  071D  0BC7               	decfsz	??_SetupGPS,f
  3119  071E  2F1D               	goto	u2237
  3120  071F  0BC8               	decfsz	??_SetupGPS+1,f
  3121  0720  2F1D               	goto	u2237
  3122  0721  0BC9               	decfsz	??_SetupGPS+2,f
  3123  0722  2F1D               	goto	u2237
  3124  0723  0000               	nop
  3125                           
  3126                           ;launcher_functions.c: 344: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3127  0724  300A               	movlw	low (STR_1| (0+32768))
  3128  0725  0020               	movlb	0	; select bank0
  3129  0726  00B4               	movwf	sprintf@f
  3130  0727  3088               	movlw	high (STR_1| (0+32768))
  3131  0728  00B5               	movwf	sprintf@f+1
  3132  0729  3060               	movlw	SetupGPS@startSequence& (0+255)
  3133  072A  00C7               	movwf	??_SetupGPS
  3134  072B  0847               	movf	??_SetupGPS,w
  3135  072C  00B6               	movwf	?_sprintf+2
  3136  072D  3066               	movlw	SetupGPS@MID& (0+255)
  3137  072E  00C8               	movwf	??_SetupGPS+1
  3138  072F  0848               	movf	??_SetupGPS+1,w
  3139  0730  00B7               	movwf	?_sprintf+3
  3140  0731  086B               	movf	SetupGPS@x+1,w
  3141  0732  01B9               	clrf	?_sprintf+5
  3142  0733  07B9               	addwf	?_sprintf+5,f
  3143  0734  086A               	movf	SetupGPS@x,w
  3144  0735  01B8               	clrf	?_sprintf+4
  3145  0736  07B8               	addwf	?_sprintf+4,f
  3146  0737  304A               	movlw	SetupGPS@message& (0+255)
  3147  0738  3185  2537  3186   	fcall	_sprintf
  3148                           
  3149                           ;launcher_functions.c: 345: uart_write_message(message, 22);
  3150  073B  3016               	movlw	22
  3151  073C  0020               	movlb	0	; select bank0
  3152  073D  00A8               	movwf	uart_write_message@size
  3153  073E  3000               	movlw	0
  3154  073F  00A9               	movwf	uart_write_message@size+1
  3155  0740  304A               	movlw	SetupGPS@message& (0+255)
  3156  0741  3187  277C  3186   	fcall	_uart_write_message
  3157  0744  3001               	movlw	1
  3158  0745  0020               	movlb	0	; select bank0
  3159  0746  07EA               	addwf	SetupGPS@x,f
  3160  0747  3000               	movlw	0
  3161  0748  3DEB               	addwfc	SetupGPS@x+1,f
  3162  0749  086B               	movf	SetupGPS@x+1,w
  3163  074A  3A80               	xorlw	128
  3164  074B  00C7               	movwf	??_SetupGPS
  3165  074C  3080               	movlw	128
  3166  074D  0247               	subwf	??_SetupGPS,w
  3167  074E  1D03               	skipz
  3168  074F  2F52               	goto	u1715
  3169  0750  3006               	movlw	6
  3170  0751  026A               	subwf	SetupGPS@x,w
  3171  0752                     u1715:	
  3172  0752  1C03               	skipc
  3173  0753  2F16               	goto	l2225
  3174  0754                     l2235:	
  3175                           
  3176                           ;launcher_functions.c: 346: }
  3177                           ;launcher_functions.c: 348: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3178  0754  3015               	movlw	21
  3179  0755  0020               	movlb	0	; select bank0
  3180  0756  00C9               	movwf	??_SetupGPS+2
  3181  0757  304B               	movlw	75
  3182  0758  00C8               	movwf	??_SetupGPS+1
  3183  0759  30D1               	movlw	209
  3184  075A  00C7               	movwf	??_SetupGPS
  3185  075B                     u2247:	
  3186  075B  0BC7               	decfsz	??_SetupGPS,f
  3187  075C  2F5B               	goto	u2247
  3188  075D  0BC8               	decfsz	??_SetupGPS+1,f
  3189  075E  2F5B               	goto	u2247
  3190  075F  0BC9               	decfsz	??_SetupGPS+2,f
  3191  0760  2F5B               	goto	u2247
  3192  0761  0000               	nop
  3193                           
  3194                           ;launcher_functions.c: 350: sprintf(message, "%s%s,01,01,01,00*", startSequence, MID);
  3195  0762  301D               	movlw	low (STR_2| (0+32768))
  3196  0763  0020               	movlb	0	; select bank0
  3197  0764  00B4               	movwf	sprintf@f
  3198  0765  3088               	movlw	high (STR_2| (0+32768))
  3199  0766  00B5               	movwf	sprintf@f+1
  3200  0767  3060               	movlw	SetupGPS@startSequence& (0+255)
  3201  0768  00C7               	movwf	??_SetupGPS
  3202  0769  0847               	movf	??_SetupGPS,w
  3203  076A  00B6               	movwf	?_sprintf+2
  3204  076B  3066               	movlw	SetupGPS@MID& (0+255)
  3205  076C  00C8               	movwf	??_SetupGPS+1
  3206  076D  0848               	movf	??_SetupGPS+1,w
  3207  076E  00B7               	movwf	?_sprintf+3
  3208  076F  304A               	movlw	SetupGPS@message& (0+255)
  3209  0770  3185  2537  3186   	fcall	_sprintf
  3210                           
  3211                           ;launcher_functions.c: 351: uart_write_message(message, 22);
  3212  0773  3016               	movlw	22
  3213  0774  0020               	movlb	0	; select bank0
  3214  0775  00A8               	movwf	uart_write_message@size
  3215  0776  3000               	movlw	0
  3216  0777  00A9               	movwf	uart_write_message@size+1
  3217  0778  304A               	movlw	SetupGPS@message& (0+255)
  3218  0779  3187  277C         	fcall	_uart_write_message
  3219  077B  0008               	return
  3220  077C                     __end_of_SetupGPS:	
  3221                           
  3222                           	psect	text7
  3223  077C                     __ptext7:	
  3224 ;; *************** function _uart_write_message *****************
  3225 ;; Defined at:
  3226 ;;		line 289 in file "launcher_functions.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  data            1    wreg     PTR unsigned char 
  3229 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3230 ;;  size            2    8[BANK0 ] int 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3233 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3234 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3235 ;;  x               2   17[BANK0 ] int 
  3236 ;;  checksum        1   19[BANK0 ] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;		None               void
  3239 ;; Registers used:
  3240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3246 ;;      Params:         0       2       0       0       0       0       0
  3247 ;;      Locals:         0      10       0       0       0       0       0
  3248 ;;      Temps:          0       3       0       0       0       0       0
  3249 ;;      Totals:         0      15       0       0       0       0       0
  3250 ;;Total ram usage:       15 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    3
  3253 ;; This function calls:
  3254 ;;		_compute_checksum
  3255 ;;		_uart_xmit
  3256 ;; This function is called by:
  3257 ;;		_SetupGPS
  3258 ;;		_UpdateGPS
  3259 ;;		_DisableGPS
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _uart_write_message
  3265  077C                     _uart_write_message:	
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3269                           ;uart_write_message@data stored from wreg
  3270  077C  0020               	movlb	0	; select bank0
  3271  077D  00B4               	movwf	uart_write_message@data
  3272                           
  3273                           ;launcher_functions.c: 291: int x;
  3274                           ;launcher_functions.c: 292: unsigned char checksum;
  3275                           ;launcher_functions.c: 293: unsigned char ascii_checksum[2];
  3276                           ;launcher_functions.c: 295: checksum = compute_checksum(data, size);
  3277  077E  0829               	movf	uart_write_message@size+1,w
  3278  077F  01A1               	clrf	compute_checksum@size+1
  3279  0780  07A1               	addwf	compute_checksum@size+1,f
  3280  0781  0828               	movf	uart_write_message@size,w
  3281  0782  01A0               	clrf	compute_checksum@size
  3282  0783  07A0               	addwf	compute_checksum@size,f
  3283  0784  0834               	movf	uart_write_message@data,w
  3284  0785  318F  275E  3187   	fcall	_compute_checksum
  3285  0788  0020               	movlb	0	; select bank0
  3286  0789  00AA               	movwf	??_uart_write_message
  3287  078A  082A               	movf	??_uart_write_message,w
  3288  078B  00B3               	movwf	uart_write_message@checksum
  3289                           
  3290                           ;launcher_functions.c: 296: ascii_checksum[0] = checksum >> 4;
  3291  078C  0833               	movf	uart_write_message@checksum,w
  3292  078D  00AA               	movwf	??_uart_write_message
  3293  078E  3004               	movlw	4
  3294  078F                     u1395:	
  3295  078F  36AA               	lsrf	??_uart_write_message,f
  3296  0790  0B89               	decfsz	9,f
  3297  0791  2F8F               	goto	u1395
  3298  0792  082A               	movf	??_uart_write_message,w
  3299  0793  00AB               	movwf	??_uart_write_message+1
  3300  0794  082B               	movf	??_uart_write_message+1,w
  3301  0795  00B5               	movwf	uart_write_message@ascii_checksum
  3302                           
  3303                           ;launcher_functions.c: 297: ascii_checksum[1] = checksum & 0x0F;
  3304  0796  0833               	movf	uart_write_message@checksum,w
  3305  0797  390F               	andlw	15
  3306  0798  00AA               	movwf	??_uart_write_message
  3307  0799  082A               	movf	??_uart_write_message,w
  3308  079A  00B6               	movwf	uart_write_message@ascii_checksum+1
  3309                           
  3310                           ;launcher_functions.c: 299: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3311  079B  300A               	movlw	10
  3312  079C  0235               	subwf	uart_write_message@ascii_checksum,w
  3313  079D  1C03               	skipc
  3314  079E  2FA1               	goto	l1869
  3315  079F  3037               	movlw	55
  3316  07A0  2FA2               	goto	L1
  3317  07A1                     l1869:	
  3318  07A1  3030               	movlw	48
  3319  07A2                     L1:	
  3320  07A2  00AD               	movwf	_uart_write_message$1353
  3321  07A3  3000               	movlw	0
  3322  07A4  00AE               	movwf	_uart_write_message$1353+1
  3323  07A5  082D               	movf	_uart_write_message$1353,w
  3324  07A6  00AA               	movwf	??_uart_write_message
  3325  07A7  082A               	movf	??_uart_write_message,w
  3326  07A8  07B5               	addwf	uart_write_message@ascii_checksum,f
  3327                           
  3328                           ;launcher_functions.c: 300: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3329  07A9  300A               	movlw	10
  3330  07AA  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3331  07AB  1C03               	skipc
  3332  07AC  2FAF               	goto	l1877
  3333  07AD  3037               	movlw	55
  3334  07AE  2FB0               	goto	L2
  3335  07AF                     l1877:	
  3336  07AF  3030               	movlw	48
  3337  07B0                     L2:	
  3338  07B0  00AF               	movwf	_uart_write_message$1354
  3339  07B1  3000               	movlw	0
  3340  07B2  00B0               	movwf	_uart_write_message$1354+1
  3341  07B3  082F               	movf	_uart_write_message$1354,w
  3342  07B4  00AA               	movwf	??_uart_write_message
  3343  07B5  082A               	movf	??_uart_write_message,w
  3344  07B6  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3345                           
  3346                           ;launcher_functions.c: 302: for(x=0; x<size-1; x++)
  3347  07B7  01B1               	clrf	uart_write_message@x
  3348  07B8  01B2               	clrf	uart_write_message@x+1
  3349  07B9                     l1887:	
  3350  07B9  0828               	movf	uart_write_message@size,w
  3351  07BA  3EFF               	addlw	255
  3352  07BB  00AA               	movwf	??_uart_write_message
  3353  07BC  30FF               	movlw	255
  3354  07BD  3D29               	addwfc	uart_write_message@size+1,w
  3355  07BE  00AB               	movwf	??_uart_write_message+1
  3356  07BF  0832               	movf	uart_write_message@x+1,w
  3357  07C0  3A80               	xorlw	128
  3358  07C1  00AC               	movwf	??_uart_write_message+2
  3359  07C2  082B               	movf	??_uart_write_message+1,w
  3360  07C3  3A80               	xorlw	128
  3361  07C4  022C               	subwf	??_uart_write_message+2,w
  3362  07C5  1D03               	skipz
  3363  07C6  2FC9               	goto	u1425
  3364  07C7  082A               	movf	??_uart_write_message,w
  3365  07C8  0231               	subwf	uart_write_message@x,w
  3366  07C9                     u1425:	
  3367  07C9  1803               	btfsc	3,0
  3368  07CA  2FDC               	goto	l1889
  3369                           
  3370                           ;launcher_functions.c: 303: {
  3371                           ;launcher_functions.c: 304: uart_xmit(data[x]);
  3372  07CB  0020               	movlb	0	; select bank0
  3373  07CC  0831               	movf	uart_write_message@x,w
  3374  07CD  0734               	addwf	uart_write_message@data,w
  3375  07CE  00AA               	movwf	??_uart_write_message
  3376  07CF  082A               	movf	??_uart_write_message,w
  3377  07D0  0086               	movwf	6
  3378  07D1  0187               	clrf	7
  3379  07D2  0801               	movf	1,w
  3380  07D3  318D  254C  3187   	fcall	_uart_xmit
  3381  07D6  3001               	movlw	1
  3382  07D7  0020               	movlb	0	; select bank0
  3383  07D8  07B1               	addwf	uart_write_message@x,f
  3384  07D9  3000               	movlw	0
  3385  07DA  3DB2               	addwfc	uart_write_message@x+1,f
  3386  07DB  2FB9               	goto	l1887
  3387  07DC                     l1889:	
  3388                           
  3389                           ;launcher_functions.c: 305: }
  3390                           ;launcher_functions.c: 306: uart_xmit(ascii_checksum[0]);
  3391  07DC  0020               	movlb	0	; select bank0
  3392  07DD  0835               	movf	uart_write_message@ascii_checksum,w
  3393  07DE  318D  254C  3187   	fcall	_uart_xmit
  3394                           
  3395                           ;launcher_functions.c: 307: uart_xmit(ascii_checksum[1]);
  3396  07E1  0020               	movlb	0	; select bank0
  3397  07E2  0836               	movf	uart_write_message@ascii_checksum+1,w
  3398  07E3  318D  254C  3187   	fcall	_uart_xmit
  3399                           
  3400                           ;launcher_functions.c: 309: uart_xmit(0x0D);
  3401  07E6  300D               	movlw	13
  3402  07E7  318D  254C  3187   	fcall	_uart_xmit
  3403                           
  3404                           ;launcher_functions.c: 310: uart_xmit(0x0A);
  3405  07EA  300A               	movlw	10
  3406  07EB  318D  254C  3187   	fcall	_uart_xmit
  3407  07EE                     l343:	
  3408                           ;launcher_functions.c: 311: while(!TXSTAbits.TRMT);
  3409                           
  3410  07EE  0023               	movlb	3	; select bank3
  3411  07EF  189E               	btfsc	30,1	;volatile
  3412  07F0  0008               	return
  3413  07F1  2FEE               	goto	l343
  3414  07F2                     __end_of_uart_write_message:	
  3415                           
  3416                           	psect	text8
  3417  0D4C                     __ptext8:	
  3418 ;; *************** function _uart_xmit *****************
  3419 ;; Defined at:
  3420 ;;		line 281 in file "launcher_functions.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  mydata_byte     1    wreg     unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;		None               void
  3427 ;; Registers used:
  3428 ;;		wreg
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3434 ;;      Params:         0       0       0       0       0       0       0
  3435 ;;      Locals:         0       1       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0
  3437 ;;      Totals:         0       1       0       0       0       0       0
  3438 ;;Total ram usage:        1 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    2
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_uart_write_message
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function _uart_xmit
  3450  0D4C                     _uart_xmit:	
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _uart_xmit: [wreg]
  3454                           ;uart_xmit@mydata_byte stored from wreg
  3455  0D4C  0020               	movlb	0	; select bank0
  3456  0D4D  00A0               	movwf	uart_xmit@mydata_byte
  3457  0D4E                     l326:	
  3458                           ;launcher_functions.c: 284: while(!TXSTAbits.TRMT);
  3459                           
  3460  0D4E  0023               	movlb	3	; select bank3
  3461  0D4F  1C9E               	btfss	30,1	;volatile
  3462  0D50  2D4E               	goto	l326
  3463                           
  3464                           ;launcher_functions.c: 285: TXREG = mydata_byte;
  3465  0D51  0020               	movlb	0	; select bank0
  3466  0D52  0820               	movf	uart_xmit@mydata_byte,w
  3467  0D53  0023               	movlb	3	; select bank3
  3468  0D54  009A               	movwf	26	;volatile
  3469  0D55  0008               	return
  3470  0D56                     __end_of_uart_xmit:	
  3471                           
  3472                           	psect	text9
  3473  0F5E                     __ptext9:	
  3474 ;; *************** function _compute_checksum *****************
  3475 ;; Defined at:
  3476 ;;		line 270 in file "launcher_functions.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  data            1    wreg     PTR unsigned char 
  3479 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3480 ;;  size            2    0[BANK0 ] int 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3483 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3484 ;;  x               2    6[BANK0 ] int 
  3485 ;;  checksum        1    4[BANK0 ] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      unsigned char 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3495 ;;      Params:         0       2       0       0       0       0       0
  3496 ;;      Locals:         0       4       0       0       0       0       0
  3497 ;;      Temps:          0       2       0       0       0       0       0
  3498 ;;      Totals:         0       8       0       0       0       0       0
  3499 ;;Total ram usage:        8 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    2
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_uart_write_message
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _compute_checksum
  3511  0F5E                     _compute_checksum:	
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3515                           ;compute_checksum@data stored from wreg
  3516  0F5E  0020               	movlb	0	; select bank0
  3517  0F5F  00A5               	movwf	compute_checksum@data
  3518                           
  3519                           ;launcher_functions.c: 272: unsigned char checksum = 0;
  3520  0F60  01A4               	clrf	compute_checksum@checksum
  3521                           
  3522                           ;launcher_functions.c: 273: int x;
  3523                           ;launcher_functions.c: 274: for(x=0; x<size; x++)
  3524  0F61  01A6               	clrf	compute_checksum@x
  3525  0F62  01A7               	clrf	compute_checksum@x+1
  3526  0F63                     l1753:	
  3527  0F63  0827               	movf	compute_checksum@x+1,w
  3528  0F64  3A80               	xorlw	128
  3529  0F65  00A2               	movwf	??_compute_checksum
  3530  0F66  0821               	movf	compute_checksum@size+1,w
  3531  0F67  3A80               	xorlw	128
  3532  0F68  0222               	subwf	??_compute_checksum,w
  3533  0F69  1D03               	skipz
  3534  0F6A  2F6D               	goto	u1155
  3535  0F6B  0820               	movf	compute_checksum@size,w
  3536  0F6C  0226               	subwf	compute_checksum@x,w
  3537  0F6D                     u1155:	
  3538  0F6D  1803               	btfsc	3,0
  3539  0F6E  2F9D               	goto	l1755
  3540                           
  3541                           ;launcher_functions.c: 275: {
  3542                           ;launcher_functions.c: 276: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3543  0F6F  0020               	movlb	0	; select bank0
  3544  0F70  0826               	movf	compute_checksum@x,w
  3545  0F71  0725               	addwf	compute_checksum@data,w
  3546  0F72  00A2               	movwf	??_compute_checksum
  3547  0F73  0822               	movf	??_compute_checksum,w
  3548  0F74  0086               	movwf	6
  3549  0F75  0187               	clrf	7
  3550  0F76  0801               	movf	1,w
  3551  0F77  3A24               	xorlw	36
  3552  0F78  1903               	skipnz
  3553  0F79  2F98               	goto	l1751
  3554  0F7A  0826               	movf	compute_checksum@x,w
  3555  0F7B  0725               	addwf	compute_checksum@data,w
  3556  0F7C  00A2               	movwf	??_compute_checksum
  3557  0F7D  0822               	movf	??_compute_checksum,w
  3558  0F7E  0086               	movwf	6
  3559  0F7F  0187               	clrf	7
  3560  0F80  0801               	movf	1,w
  3561  0F81  3A2A               	xorlw	42
  3562  0F82  1903               	skipnz
  3563  0F83  2F98               	goto	l1751
  3564  0F84  0826               	movf	compute_checksum@x,w
  3565  0F85  0725               	addwf	compute_checksum@data,w
  3566  0F86  00A2               	movwf	??_compute_checksum
  3567  0F87  0822               	movf	??_compute_checksum,w
  3568  0F88  0086               	movwf	6
  3569  0F89  0187               	clrf	7
  3570  0F8A  0801               	movf	1,w
  3571  0F8B  3A21               	xorlw	33
  3572  0F8C  1903               	skipnz
  3573  0F8D  2F98               	goto	l1751
  3574                           
  3575                           ;launcher_functions.c: 277: checksum ^= data[x];
  3576  0F8E  0826               	movf	compute_checksum@x,w
  3577  0F8F  0725               	addwf	compute_checksum@data,w
  3578  0F90  00A2               	movwf	??_compute_checksum
  3579  0F91  0822               	movf	??_compute_checksum,w
  3580  0F92  0086               	movwf	6
  3581  0F93  0187               	clrf	7
  3582  0F94  0801               	movf	1,w
  3583  0F95  00A3               	movwf	??_compute_checksum+1
  3584  0F96  0823               	movf	??_compute_checksum+1,w
  3585  0F97  06A4               	xorwf	compute_checksum@checksum,f
  3586  0F98                     l1751:	
  3587  0F98  3001               	movlw	1
  3588  0F99  07A6               	addwf	compute_checksum@x,f
  3589  0F9A  3000               	movlw	0
  3590  0F9B  3DA7               	addwfc	compute_checksum@x+1,f
  3591  0F9C  2F63               	goto	l1753
  3592  0F9D                     l1755:	
  3593                           
  3594                           ;launcher_functions.c: 278: }
  3595                           ;launcher_functions.c: 279: return checksum;
  3596  0F9D  0020               	movlb	0	; select bank0
  3597  0F9E  0824               	movf	compute_checksum@checksum,w
  3598  0F9F  0008               	return
  3599  0FA0                     __end_of_compute_checksum:	
  3600                           
  3601                           	psect	text10
  3602  0537                     __ptext10:	
  3603 ;; *************** function _sprintf *****************
  3604 ;; Defined at:
  3605 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  sp              1    wreg     PTR unsigned char 
  3608 ;;		 -> SetupGPS@message(22), 
  3609 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  3610 ;;		 -> STR_2(18), STR_1(19), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  3613 ;;		 -> SetupGPS@message(22), 
  3614 ;;  _val            4   34[BANK0 ] struct .
  3615 ;;  c               1   38[BANK0 ] char 
  3616 ;;  ap              1   32[BANK0 ] PTR void [1]
  3617 ;;		 -> ?_sprintf(2), 
  3618 ;;  prec            1   31[BANK0 ] char 
  3619 ;;  flag            1   30[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  2   20[BANK0 ] int 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3629 ;;      Params:         0       6       0       0       0       0       0
  3630 ;;      Locals:         0       9       0       0       0       0       0
  3631 ;;      Temps:          0       4       0       0       0       0       0
  3632 ;;      Totals:         0      19       0       0       0       0       0
  3633 ;;Total ram usage:       19 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    3
  3636 ;; This function calls:
  3637 ;;		___lwdiv
  3638 ;;		___lwmod
  3639 ;; This function is called by:
  3640 ;;		_SetupGPS
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _sprintf
  3646  0537                     _sprintf:	
  3647                           
  3648                           ;incstack = 0
  3649                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3650                           ;sprintf@sp stored from wreg
  3651  0537  0020               	movlb	0	; select bank0
  3652  0538  00C1               	movwf	sprintf@sp
  3653                           
  3654                           ;doprnt.c: 494: va_list ap;
  3655                           ;doprnt.c: 499: signed char c;
  3656                           ;doprnt.c: 506: signed char prec;
  3657                           ;doprnt.c: 508: unsigned char flag;
  3658                           ;doprnt.c: 527: union {
  3659                           ;doprnt.c: 528: unsigned int _val;
  3660                           ;doprnt.c: 529: struct {
  3661                           ;doprnt.c: 530: const char * _cp;
  3662                           ;doprnt.c: 531: unsigned _len;
  3663                           ;doprnt.c: 532: } _str;
  3664                           ;doprnt.c: 533: } _val;
  3665                           ;doprnt.c: 542: *ap = __va_start();
  3666  0539  3036               	movlw	(?_sprintf+2)& (0+255)
  3667  053A  00BA               	movwf	??_sprintf
  3668  053B  083A               	movf	??_sprintf,w
  3669  053C  00C0               	movwf	sprintf@ap
  3670  053D                     l1959:	
  3671                           ;doprnt.c: 545: while(c = *f++) {
  3672                           
  3673  053D  0835               	movf	sprintf@f+1,w
  3674  053E  00BB               	movwf	??_sprintf+1
  3675  053F  0834               	movf	sprintf@f,w
  3676  0540  00BA               	movwf	??_sprintf
  3677  0541  0AB4               	incf	sprintf@f,f
  3678  0542  1903               	skipnz
  3679  0543  0AB5               	incf	sprintf@f+1,f
  3680  0544  083A               	movf	??_sprintf,w
  3681  0545  0084               	movwf	4
  3682  0546  083B               	movf	??_sprintf+1,w
  3683  0547  0085               	movwf	5
  3684  0548  0800               	movf	0,w	;code access
  3685  0549  00BC               	movwf	??_sprintf+2
  3686  054A  083C               	movf	??_sprintf+2,w
  3687  054B  00C6               	movwf	sprintf@c
  3688  054C  08C6               	movf	sprintf@c,f
  3689  054D  1903               	btfsc	3,2
  3690  054E  2E38               	goto	l1961
  3691                           
  3692                           ;doprnt.c: 547: if(c != '%')
  3693  054F  0846               	movf	sprintf@c,w
  3694  0550  3A25               	xorlw	37
  3695  0551  1903               	skipnz
  3696  0552  2D5F               	goto	l1899
  3697                           
  3698                           ;doprnt.c: 549: {
  3699                           ;doprnt.c: 550: ((*sp++ = (c)));
  3700  0553  0846               	movf	sprintf@c,w
  3701  0554  00BA               	movwf	??_sprintf
  3702  0555  0841               	movf	sprintf@sp,w
  3703  0556  0086               	movwf	6
  3704  0557  0187               	clrf	7
  3705  0558  083A               	movf	??_sprintf,w
  3706  0559  0081               	movwf	1
  3707  055A  3001               	movlw	1
  3708  055B  00BA               	movwf	??_sprintf
  3709  055C  083A               	movf	??_sprintf,w
  3710  055D  07C1               	addwf	sprintf@sp,f
  3711                           
  3712                           ;doprnt.c: 551: continue;
  3713  055E  2D3D               	goto	l1959
  3714  055F                     l1899:	
  3715                           
  3716                           ;doprnt.c: 552: }
  3717                           ;doprnt.c: 557: flag = 0;
  3718  055F  01BE               	clrf	sprintf@flag
  3719                           
  3720                           ;doprnt.c: 644: switch(c = *f++) {
  3721  0560  2D90               	goto	l1919
  3722  0561                     l1901:	
  3723                           ;doprnt.c: 737: case 's':
  3724                           
  3725                           ;doprnt.c: 707: case 'i':
  3726                           ;doprnt.c: 708: break;
  3727                           
  3728                           ;doprnt.c: 706: case 'd':
  3729                           
  3730                           ;doprnt.c: 647: goto alldone;
  3731                           
  3732                           ;doprnt.c: 646: case 0:
  3733                           
  3734                           
  3735                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3736  0561  0840               	movf	sprintf@ap,w
  3737  0562  0086               	movwf	6
  3738  0563  0187               	clrf	7
  3739  0564  0801               	movf	1,w
  3740  0565  00C2               	movwf	sprintf@_val
  3741  0566  3000               	movlw	0
  3742  0567  00C3               	movwf	sprintf@_val+1
  3743  0568  3001               	movlw	1
  3744  0569  00BA               	movwf	??_sprintf
  3745  056A  083A               	movf	??_sprintf,w
  3746  056B  07C0               	addwf	sprintf@ap,f
  3747                           
  3748                           ;doprnt.c: 749: if(!_val._str._cp)
  3749  056C  0843               	movf	sprintf@_val+1,w
  3750  056D  0442               	iorwf	sprintf@_val,w
  3751  056E  1D03               	skipz
  3752  056F  2D74               	goto	l1915
  3753                           
  3754                           ;doprnt.c: 750: _val._str._cp = "(null)";
  3755  0570  302F               	movlw	low (STR_3| (0+32768))
  3756  0571  00C2               	movwf	sprintf@_val
  3757  0572  3088               	movlw	high (STR_3| (0+32768))
  3758  0573  00C3               	movwf	sprintf@_val+1
  3759  0574                     l1915:	
  3760                           ;doprnt.c: 786: while(*_val._str._cp)
  3761                           
  3762  0574  0842               	movf	sprintf@_val,w
  3763  0575  0084               	movwf	4
  3764  0576  0843               	movf	sprintf@_val+1,w
  3765  0577  0085               	movwf	5
  3766  0578  0800               	movf	0,w	;code access
  3767  0579  3800               	iorlw	0
  3768  057A  1903               	btfsc	3,2
  3769  057B  2D3D               	goto	l1959
  3770                           
  3771                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  3772  057C  0842               	movf	sprintf@_val,w
  3773  057D  0084               	movwf	4
  3774  057E  0843               	movf	sprintf@_val+1,w
  3775  057F  0085               	movwf	5
  3776  0580  0800               	movf	0,w	;code access
  3777  0581  00BA               	movwf	??_sprintf
  3778  0582  0841               	movf	sprintf@sp,w
  3779  0583  0086               	movwf	6
  3780  0584  0187               	clrf	7
  3781  0585  083A               	movf	??_sprintf,w
  3782  0586  0081               	movwf	1
  3783  0587  3001               	movlw	1
  3784  0588  07C2               	addwf	sprintf@_val,f
  3785  0589  3000               	movlw	0
  3786  058A  3DC3               	addwfc	sprintf@_val+1,f
  3787  058B  3001               	movlw	1
  3788  058C  00BA               	movwf	??_sprintf
  3789  058D  083A               	movf	??_sprintf,w
  3790  058E  07C1               	addwf	sprintf@sp,f
  3791  058F  2D74               	goto	l1915
  3792  0590                     l1919:	
  3793                           ;doprnt.c: 831: }
  3794                           
  3795                           ;doprnt.c: 822: continue;
  3796                           
  3797                           ;doprnt.c: 811: default:
  3798                           
  3799                           ;doprnt.c: 788: continue;
  3800                           
  3801  0590  0835               	movf	sprintf@f+1,w
  3802  0591  00BB               	movwf	??_sprintf+1
  3803  0592  0834               	movf	sprintf@f,w
  3804  0593  00BA               	movwf	??_sprintf
  3805  0594  0AB4               	incf	sprintf@f,f
  3806  0595  1903               	skipnz
  3807  0596  0AB5               	incf	sprintf@f+1,f
  3808  0597  083A               	movf	??_sprintf,w
  3809  0598  0084               	movwf	4
  3810  0599  083B               	movf	??_sprintf+1,w
  3811  059A  0085               	movwf	5
  3812  059B  0800               	movf	0,w	;code access
  3813  059C  00C6               	movwf	sprintf@c
  3814                           
  3815                           ; Switch size 1, requested type "space"
  3816                           ; Number of cases is 4, Range of values is 0 to 115
  3817                           ; switch strategies available:
  3818                           ; Name         Instructions Cycles
  3819                           ; simple_byte           13     7 (average)
  3820                           ; direct_byte          238     6 (fixed)
  3821                           ; jumptable            260     6 (fixed)
  3822                           ;	Chosen strategy is simple_byte
  3823  059D  3A00               	xorlw	0	; case 0
  3824  059E  1903               	skipnz
  3825  059F  2E38               	goto	l1961
  3826  05A0  3A64               	xorlw	100	; case 100
  3827  05A1  1903               	skipnz
  3828  05A2  2DAA               	goto	l1921
  3829  05A3  3A0D               	xorlw	13	; case 105
  3830  05A4  1903               	skipnz
  3831  05A5  2DAA               	goto	l1921
  3832  05A6  3A1A               	xorlw	26	; case 115
  3833  05A7  1903               	skipnz
  3834  05A8  2D61               	goto	l1901
  3835  05A9  2D3D               	goto	l1959
  3836  05AA                     l1921:	
  3837                           
  3838                           ;doprnt.c: 1262: {
  3839                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3840  05AA  0840               	movf	sprintf@ap,w
  3841  05AB  0086               	movwf	6
  3842  05AC  0187               	clrf	7
  3843  05AD  3F40               	moviw [0]fsr1
  3844  05AE  00C2               	movwf	sprintf@_val
  3845  05AF  3F41               	moviw [1]fsr1
  3846  05B0  00C3               	movwf	sprintf@_val+1
  3847  05B1  3002               	movlw	2
  3848  05B2  00BA               	movwf	??_sprintf
  3849  05B3  083A               	movf	??_sprintf,w
  3850  05B4  07C0               	addwf	sprintf@ap,f
  3851                           
  3852                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3853  05B5  1FC3               	btfss	sprintf@_val+1,7
  3854  05B6  2DC0               	goto	l1931
  3855                           
  3856                           ;doprnt.c: 1271: flag |= 0x03;
  3857  05B7  3003               	movlw	3
  3858  05B8  00BA               	movwf	??_sprintf
  3859  05B9  083A               	movf	??_sprintf,w
  3860  05BA  04BE               	iorwf	sprintf@flag,f
  3861                           
  3862                           ;doprnt.c: 1272: _val._val = -_val._val;
  3863  05BB  09C2               	comf	sprintf@_val,f
  3864  05BC  09C3               	comf	sprintf@_val+1,f
  3865  05BD  0AC2               	incf	sprintf@_val,f
  3866  05BE  1903               	skipnz
  3867  05BF  0AC3               	incf	sprintf@_val+1,f
  3868  05C0                     l1931:	
  3869                           
  3870                           ;doprnt.c: 1273: }
  3871                           ;doprnt.c: 1275: }
  3872                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3873  05C0  01C6               	clrf	sprintf@c
  3874  05C1  0AC6               	incf	sprintf@c,f
  3875  05C2  0846               	movf	sprintf@c,w
  3876  05C3  3A05               	xorlw	5
  3877  05C4  1903               	btfsc	3,2
  3878  05C5  2DE5               	goto	l1943
  3879  05C6                     l1935:	
  3880                           
  3881                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3882  05C6  0846               	movf	sprintf@c,w
  3883  05C7  00BA               	movwf	??_sprintf
  3884  05C8  01BB               	clrf	??_sprintf+1
  3885  05C9  35BA               	lslf	??_sprintf,f
  3886  05CA  0DBB               	rlf	??_sprintf+1,f
  3887  05CB  3000               	movlw	low (_dpowers| (0+32768))
  3888  05CC  073A               	addwf	??_sprintf,w
  3889  05CD  0084               	movwf	4
  3890  05CE  3088               	movlw	high (_dpowers| (0+32768))
  3891  05CF  3D3B               	addwfc	??_sprintf+1,w
  3892  05D0  0085               	movwf	5
  3893  05D1  3F00               	moviw [0]fsr0
  3894  05D2  00BC               	movwf	??_sprintf+2
  3895  05D3  3F01               	moviw [1]fsr0
  3896  05D4  00BD               	movwf	??_sprintf+3
  3897  05D5  083D               	movf	??_sprintf+3,w
  3898  05D6  0243               	subwf	sprintf@_val+1,w
  3899  05D7  1D03               	skipz
  3900  05D8  2DDB               	goto	u1495
  3901  05D9  083C               	movf	??_sprintf+2,w
  3902  05DA  0242               	subwf	sprintf@_val,w
  3903  05DB                     u1495:	
  3904  05DB  1C03               	btfss	3,0
  3905  05DC  2DE5               	goto	l1943
  3906                           
  3907                           ;doprnt.c: 1316: break;
  3908  05DD  3001               	movlw	1
  3909  05DE  00BA               	movwf	??_sprintf
  3910  05DF  083A               	movf	??_sprintf,w
  3911  05E0  07C6               	addwf	sprintf@c,f
  3912  05E1  0846               	movf	sprintf@c,w
  3913  05E2  3A05               	xorlw	5
  3914  05E3  1D03               	skipz
  3915  05E4  2DC6               	goto	l1935
  3916  05E5                     l1943:	
  3917                           
  3918                           ;doprnt.c: 1431: {
  3919                           ;doprnt.c: 1447: if(flag & 0x03)
  3920  05E5  083E               	movf	sprintf@flag,w
  3921  05E6  3903               	andlw	3
  3922  05E7  1903               	btfsc	3,2
  3923  05E8  2DF4               	goto	l1949
  3924                           
  3925                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3926  05E9  302D               	movlw	45
  3927  05EA  00BA               	movwf	??_sprintf
  3928  05EB  0841               	movf	sprintf@sp,w
  3929  05EC  0086               	movwf	6
  3930  05ED  0187               	clrf	7
  3931  05EE  083A               	movf	??_sprintf,w
  3932  05EF  0081               	movwf	1
  3933  05F0  3001               	movlw	1
  3934  05F1  00BA               	movwf	??_sprintf
  3935  05F2  083A               	movf	??_sprintf,w
  3936  05F3  07C1               	addwf	sprintf@sp,f
  3937  05F4                     l1949:	
  3938                           
  3939                           ;doprnt.c: 1478: }
  3940                           ;doprnt.c: 1481: prec = c;
  3941  05F4  0846               	movf	sprintf@c,w
  3942  05F5  00BA               	movwf	??_sprintf
  3943  05F6  083A               	movf	??_sprintf,w
  3944  05F7  00BF               	movwf	sprintf@prec
  3945  05F8                     l1957:	
  3946                           ;doprnt.c: 1483: while(prec--) {
  3947                           
  3948  05F8  30FF               	movlw	-1
  3949  05F9  00BA               	movwf	??_sprintf
  3950  05FA  083A               	movf	??_sprintf,w
  3951  05FB  07BF               	addwf	sprintf@prec,f
  3952  05FC  083F               	movf	sprintf@prec,w
  3953  05FD  3AFF               	xorlw	255
  3954  05FE  1903               	btfsc	3,2
  3955  05FF  2D3D               	goto	l1959
  3956                           
  3957                           ;doprnt.c: 1487: {
  3958                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3959  0600  300A               	movlw	10
  3960  0601  00AE               	movwf	___lwmod@divisor
  3961  0602  3000               	movlw	0
  3962  0603  00AF               	movwf	___lwmod@divisor+1
  3963  0604  083F               	movf	sprintf@prec,w
  3964  0605  00BA               	movwf	??_sprintf
  3965  0606  01BB               	clrf	??_sprintf+1
  3966  0607  35BA               	lslf	??_sprintf,f
  3967  0608  0DBB               	rlf	??_sprintf+1,f
  3968  0609  3000               	movlw	low (_dpowers| (0+32768))
  3969  060A  073A               	addwf	??_sprintf,w
  3970  060B  0084               	movwf	4
  3971  060C  3088               	movlw	high (_dpowers| (0+32768))
  3972  060D  3D3B               	addwfc	??_sprintf+1,w
  3973  060E  0085               	movwf	5
  3974  060F  3F00               	moviw [0]fsr0
  3975  0610  00A6               	movwf	___lwdiv@divisor
  3976  0611  3F01               	moviw [1]fsr0
  3977  0612  00A7               	movwf	___lwdiv@divisor+1
  3978  0613  0843               	movf	sprintf@_val+1,w
  3979  0614  01A9               	clrf	___lwdiv@dividend+1
  3980  0615  07A9               	addwf	___lwdiv@dividend+1,f
  3981  0616  0842               	movf	sprintf@_val,w
  3982  0617  01A8               	clrf	___lwdiv@dividend
  3983  0618  07A8               	addwf	___lwdiv@dividend,f
  3984  0619  318F  2727  3185   	fcall	___lwdiv
  3985  061C  0020               	movlb	0	; select bank0
  3986  061D  0827               	movf	?___lwdiv+1,w
  3987  061E  01B1               	clrf	___lwmod@dividend+1
  3988  061F  07B1               	addwf	___lwmod@dividend+1,f
  3989  0620  0826               	movf	?___lwdiv,w
  3990  0621  01B0               	clrf	___lwmod@dividend
  3991  0622  07B0               	addwf	___lwmod@dividend,f
  3992  0623  318E  26F8  3185   	fcall	___lwmod
  3993  0626  0020               	movlb	0	; select bank0
  3994  0627  082E               	movf	?___lwmod,w
  3995  0628  3E30               	addlw	48
  3996  0629  00BC               	movwf	??_sprintf+2
  3997  062A  083C               	movf	??_sprintf+2,w
  3998  062B  00C6               	movwf	sprintf@c
  3999                           
  4000                           ;doprnt.c: 1532: }
  4001                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4002  062C  0846               	movf	sprintf@c,w
  4003  062D  00BA               	movwf	??_sprintf
  4004  062E  0841               	movf	sprintf@sp,w
  4005  062F  0086               	movwf	6
  4006  0630  0187               	clrf	7
  4007  0631  083A               	movf	??_sprintf,w
  4008  0632  0081               	movwf	1
  4009  0633  3001               	movlw	1
  4010  0634  00BA               	movwf	??_sprintf
  4011  0635  083A               	movf	??_sprintf,w
  4012  0636  07C1               	addwf	sprintf@sp,f
  4013  0637  2DF8               	goto	l1957
  4014  0638                     l1961:	
  4015                           ;doprnt.c: 1534: }
  4016                           ;doprnt.c: 1542: }
  4017                           ;doprnt.c: 1544: alldone:
  4018                           
  4019                           
  4020                           ;doprnt.c: 1547: *sp = 0;
  4021  0638  0841               	movf	sprintf@sp,w
  4022  0639  0086               	movwf	6
  4023  063A  0187               	clrf	7
  4024  063B  0181               	clrf	1
  4025  063C  0008               	return
  4026  063D                     __end_of_sprintf:	
  4027                           ;doprnt.c: 1549: return 0;
  4028                           ;	Return value of _sprintf is never used
  4029                           
  4030                           
  4031                           	psect	text11
  4032  0EF8                     __ptext11:	
  4033 ;; *************** function ___lwmod *****************
  4034 ;; Defined at:
  4035 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  divisor         2   14[BANK0 ] unsigned int 
  4038 ;;  dividend        2   16[BANK0 ] unsigned int 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  counter         1   19[BANK0 ] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2   14[BANK0 ] unsigned int 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4050 ;;      Params:         0       4       0       0       0       0       0
  4051 ;;      Locals:         0       1       0       0       0       0       0
  4052 ;;      Temps:          0       1       0       0       0       0       0
  4053 ;;      Totals:         0       6       0       0       0       0       0
  4054 ;;Total ram usage:        6 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    2
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_sprintf
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function ___lwmod
  4066  0EF8                     ___lwmod:	
  4067                           
  4068                           ;incstack = 0
  4069                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4070  0EF8  0020               	movlb	0	; select bank0
  4071  0EF9  082F               	movf	___lwmod@divisor+1,w
  4072  0EFA  042E               	iorwf	___lwmod@divisor,w
  4073  0EFB  1903               	skipnz
  4074  0EFC  2F20               	goto	l1819
  4075  0EFD  01B3               	clrf	___lwmod@counter
  4076  0EFE  0AB3               	incf	___lwmod@counter,f
  4077  0EFF                     l1809:	
  4078  0EFF  1BAF               	btfsc	___lwmod@divisor+1,7
  4079  0F00  2F0B               	goto	l1811
  4080  0F01  3001               	movlw	1
  4081  0F02                     u1295:	
  4082  0F02  35AE               	lslf	___lwmod@divisor,f
  4083  0F03  0DAF               	rlf	___lwmod@divisor+1,f
  4084  0F04  0B89               	decfsz	9,f
  4085  0F05  2F02               	goto	u1295
  4086  0F06  3001               	movlw	1
  4087  0F07  00B2               	movwf	??___lwmod
  4088  0F08  0832               	movf	??___lwmod,w
  4089  0F09  07B3               	addwf	___lwmod@counter,f
  4090  0F0A  2EFF               	goto	l1809
  4091  0F0B                     l1811:	
  4092  0F0B  082F               	movf	___lwmod@divisor+1,w
  4093  0F0C  0231               	subwf	___lwmod@dividend+1,w
  4094  0F0D  1D03               	skipz
  4095  0F0E  2F11               	goto	u1315
  4096  0F0F  082E               	movf	___lwmod@divisor,w
  4097  0F10  0230               	subwf	___lwmod@dividend,w
  4098  0F11                     u1315:	
  4099  0F11  1C03               	skipc
  4100  0F12  2F17               	goto	l1815
  4101  0F13  082E               	movf	___lwmod@divisor,w
  4102  0F14  02B0               	subwf	___lwmod@dividend,f
  4103  0F15  082F               	movf	___lwmod@divisor+1,w
  4104  0F16  3BB1               	subwfb	___lwmod@dividend+1,f
  4105  0F17                     l1815:	
  4106  0F17  3001               	movlw	1
  4107  0F18                     u1325:	
  4108  0F18  36AF               	lsrf	___lwmod@divisor+1,f
  4109  0F19  0CAE               	rrf	___lwmod@divisor,f
  4110  0F1A  0B89               	decfsz	9,f
  4111  0F1B  2F18               	goto	u1325
  4112  0F1C  3001               	movlw	1
  4113  0F1D  02B3               	subwf	___lwmod@counter,f
  4114  0F1E  1D03               	btfss	3,2
  4115  0F1F  2F0B               	goto	l1811
  4116  0F20                     l1819:	
  4117  0F20  0831               	movf	___lwmod@dividend+1,w
  4118  0F21  01AF               	clrf	?___lwmod+1
  4119  0F22  07AF               	addwf	?___lwmod+1,f
  4120  0F23  0830               	movf	___lwmod@dividend,w
  4121  0F24  01AE               	clrf	?___lwmod
  4122  0F25  07AE               	addwf	?___lwmod,f
  4123  0F26  0008               	return
  4124  0F27                     __end_of___lwmod:	
  4125                           
  4126                           	psect	text12
  4127  0F27                     __ptext12:	
  4128 ;; *************** function ___lwdiv *****************
  4129 ;; Defined at:
  4130 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  divisor         2    6[BANK0 ] unsigned int 
  4133 ;;  dividend        2    8[BANK0 ] unsigned int 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  quotient        2   11[BANK0 ] unsigned int 
  4136 ;;  counter         1   13[BANK0 ] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  2    6[BANK0 ] unsigned int 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4146 ;;      Params:         0       4       0       0       0       0       0
  4147 ;;      Locals:         0       3       0       0       0       0       0
  4148 ;;      Temps:          0       1       0       0       0       0       0
  4149 ;;      Totals:         0       8       0       0       0       0       0
  4150 ;;Total ram usage:        8 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    2
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_DecodeGPS
  4157 ;;		_sprintf
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function ___lwdiv
  4163  0F27                     ___lwdiv:	
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4167  0F27  0020               	movlb	0	; select bank0
  4168  0F28  01AB               	clrf	___lwdiv@quotient
  4169  0F29  01AC               	clrf	___lwdiv@quotient+1
  4170  0F2A  0827               	movf	___lwdiv@divisor+1,w
  4171  0F2B  0426               	iorwf	___lwdiv@divisor,w
  4172  0F2C  1903               	skipnz
  4173  0F2D  2F57               	goto	l1797
  4174  0F2E  01AD               	clrf	___lwdiv@counter
  4175  0F2F  0AAD               	incf	___lwdiv@counter,f
  4176  0F30                     l1785:	
  4177  0F30  1BA7               	btfsc	___lwdiv@divisor+1,7
  4178  0F31  2F3C               	goto	l1787
  4179  0F32  3001               	movlw	1
  4180  0F33                     u1225:	
  4181  0F33  35A6               	lslf	___lwdiv@divisor,f
  4182  0F34  0DA7               	rlf	___lwdiv@divisor+1,f
  4183  0F35  0B89               	decfsz	9,f
  4184  0F36  2F33               	goto	u1225
  4185  0F37  3001               	movlw	1
  4186  0F38  00AA               	movwf	??___lwdiv
  4187  0F39  082A               	movf	??___lwdiv,w
  4188  0F3A  07AD               	addwf	___lwdiv@counter,f
  4189  0F3B  2F30               	goto	l1785
  4190  0F3C                     l1787:	
  4191  0F3C  3001               	movlw	1
  4192  0F3D                     u1245:	
  4193  0F3D  35AB               	lslf	___lwdiv@quotient,f
  4194  0F3E  0DAC               	rlf	___lwdiv@quotient+1,f
  4195  0F3F  0B89               	decfsz	9,f
  4196  0F40  2F3D               	goto	u1245
  4197  0F41  0827               	movf	___lwdiv@divisor+1,w
  4198  0F42  0229               	subwf	___lwdiv@dividend+1,w
  4199  0F43  1D03               	skipz
  4200  0F44  2F47               	goto	u1255
  4201  0F45  0826               	movf	___lwdiv@divisor,w
  4202  0F46  0228               	subwf	___lwdiv@dividend,w
  4203  0F47                     u1255:	
  4204  0F47  1C03               	skipc
  4205  0F48  2F4E               	goto	l1793
  4206  0F49  0826               	movf	___lwdiv@divisor,w
  4207  0F4A  02A8               	subwf	___lwdiv@dividend,f
  4208  0F4B  0827               	movf	___lwdiv@divisor+1,w
  4209  0F4C  3BA9               	subwfb	___lwdiv@dividend+1,f
  4210  0F4D  142B               	bsf	___lwdiv@quotient,0
  4211  0F4E                     l1793:	
  4212  0F4E  3001               	movlw	1
  4213  0F4F                     u1265:	
  4214  0F4F  36A7               	lsrf	___lwdiv@divisor+1,f
  4215  0F50  0CA6               	rrf	___lwdiv@divisor,f
  4216  0F51  0B89               	decfsz	9,f
  4217  0F52  2F4F               	goto	u1265
  4218  0F53  3001               	movlw	1
  4219  0F54  02AD               	subwf	___lwdiv@counter,f
  4220  0F55  1D03               	btfss	3,2
  4221  0F56  2F3C               	goto	l1787
  4222  0F57                     l1797:	
  4223  0F57  082C               	movf	___lwdiv@quotient+1,w
  4224  0F58  01A7               	clrf	?___lwdiv+1
  4225  0F59  07A7               	addwf	?___lwdiv+1,f
  4226  0F5A  082B               	movf	___lwdiv@quotient,w
  4227  0F5B  01A6               	clrf	?___lwdiv
  4228  0F5C  07A6               	addwf	?___lwdiv,f
  4229  0F5D  0008               	return
  4230  0F5E                     __end_of___lwdiv:	
  4231                           
  4232                           	psect	text13
  4233  03CA                     __ptext13:	
  4234 ;; *************** function _RecordMode *****************
  4235 ;; Defined at:
  4236 ;;		line 513 in file "launcher_functions.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  address         4   28[BANK0 ] long 
  4241 ;;  x               2   32[BANK0 ] int 
  4242 ;;  count           2   26[BANK0 ] int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4252 ;;      Params:         0       0       0       0       0       0       0
  4253 ;;      Locals:         0       8       0       0       0       0       0
  4254 ;;      Temps:          0       5       0       0       0       0       0
  4255 ;;      Totals:         0      13       0       0       0       0       0
  4256 ;;Total ram usage:       13 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    5
  4259 ;; This function calls:
  4260 ;;		_ReadBuffer
  4261 ;;		_WriteOverheadSPI
  4262 ;;		_WriteSPI
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           
  4269                           ;psect for function _RecordMode
  4270  03CA                     _RecordMode:	
  4271                           
  4272                           ;launcher_functions.c: 515: long int address = 18;
  4273                           
  4274                           ;incstack = 0
  4275                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4276  03CA  3000               	movlw	0
  4277  03CB  0020               	movlb	0	; select bank0
  4278  03CC  00BF               	movwf	RecordMode@address+3
  4279  03CD  3000               	movlw	0
  4280  03CE  00BE               	movwf	RecordMode@address+2
  4281  03CF  3000               	movlw	0
  4282  03D0  00BD               	movwf	RecordMode@address+1
  4283  03D1  3012               	movlw	18
  4284  03D2  00BC               	movwf	RecordMode@address
  4285                           
  4286                           ;launcher_functions.c: 516: int count = 18;
  4287  03D3  3012               	movlw	18
  4288  03D4  00BA               	movwf	RecordMode@count
  4289  03D5  3000               	movlw	0
  4290  03D6  00BB               	movwf	RecordMode@count+1
  4291                           
  4292                           ;launcher_functions.c: 517: int x;
  4293                           ;launcher_functions.c: 519: (start) = 0;
  4294  03D7  01FB               	clrf	_start
  4295  03D8  01FC               	clrf	_start+1
  4296                           
  4297                           ;launcher_functions.c: 520: (end) = 0;
  4298  03D9  01F9               	clrf	_end
  4299  03DA  01FA               	clrf	_end+1
  4300                           
  4301                           ;launcher_functions.c: 523: WriteOverheadSPI(address);
  4302  03DB  083F               	movf	RecordMode@address+3,w
  4303  03DC  00AA               	movwf	WriteOverheadSPI@address+3
  4304  03DD  083E               	movf	RecordMode@address+2,w
  4305  03DE  00A9               	movwf	WriteOverheadSPI@address+2
  4306  03DF  083D               	movf	RecordMode@address+1,w
  4307  03E0  00A8               	movwf	WriteOverheadSPI@address+1
  4308  03E1  083C               	movf	RecordMode@address,w
  4309  03E2  00A7               	movwf	WriteOverheadSPI@address
  4310  03E3  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4311                           
  4312                           ;launcher_functions.c: 524: for(x=0;x<3;x++)
  4313  03E6  0020               	movlb	0	; select bank0
  4314  03E7  01C0               	clrf	RecordMode@x
  4315  03E8  01C1               	clrf	RecordMode@x+1
  4316  03E9  0841               	movf	RecordMode@x+1,w
  4317  03EA  3A80               	xorlw	128
  4318  03EB  00B5               	movwf	??_RecordMode
  4319  03EC  3080               	movlw	128
  4320  03ED  0235               	subwf	??_RecordMode,w
  4321  03EE  1D03               	skipz
  4322  03EF  2BF2               	goto	u1725
  4323  03F0  3003               	movlw	3
  4324  03F1  0240               	subwf	RecordMode@x,w
  4325  03F2                     u1725:	
  4326  03F2  1803               	btfsc	3,0
  4327  03F3  2C1A               	goto	l2261
  4328  03F4                     l2255:	
  4329                           
  4330                           ;launcher_functions.c: 525: {
  4331                           ;launcher_functions.c: 526: WriteSPI(validLongitude[x]);
  4332  03F4  0020               	movlb	0	; select bank0
  4333  03F5  3540               	lslf	RecordMode@x,w
  4334  03F6  3ED3               	addlw	_validLongitude& (0+255)
  4335  03F7  0086               	movwf	6
  4336  03F8  0187               	clrf	7
  4337  03F9  0801               	movf	1,w
  4338  03FA  318D  25A9  3183   	fcall	_WriteSPI
  4339                           
  4340                           ;launcher_functions.c: 527: WriteSPI(validLongitude[x]>>8);
  4341  03FD  0020               	movlb	0	; select bank0
  4342  03FE  3540               	lslf	RecordMode@x,w
  4343  03FF  3ED3               	addlw	_validLongitude& (0+255)
  4344  0400  0086               	movwf	6
  4345  0401  0187               	clrf	7
  4346  0402  3F40               	moviw [0]fsr1
  4347  0403  00B5               	movwf	??_RecordMode
  4348  0404  3F41               	moviw [1]fsr1
  4349  0405  00B6               	movwf	??_RecordMode+1
  4350  0406  0836               	movf	??_RecordMode+1,w
  4351  0407  318D  25A9  3183   	fcall	_WriteSPI
  4352  040A  3001               	movlw	1
  4353  040B  0020               	movlb	0	; select bank0
  4354  040C  07C0               	addwf	RecordMode@x,f
  4355  040D  3000               	movlw	0
  4356  040E  3DC1               	addwfc	RecordMode@x+1,f
  4357  040F  0841               	movf	RecordMode@x+1,w
  4358  0410  3A80               	xorlw	128
  4359  0411  00B5               	movwf	??_RecordMode
  4360  0412  3080               	movlw	128
  4361  0413  0235               	subwf	??_RecordMode,w
  4362  0414  1D03               	skipz
  4363  0415  2C18               	goto	u1735
  4364  0416  3003               	movlw	3
  4365  0417  0240               	subwf	RecordMode@x,w
  4366  0418                     u1735:	
  4367  0418  1C03               	skipc
  4368  0419  2BF4               	goto	l2255
  4369  041A                     l2261:	
  4370                           
  4371                           ;launcher_functions.c: 528: }
  4372                           ;launcher_functions.c: 529: WriteSPI(validNorthSouth);
  4373  041A  0021               	movlb	1	; select bank1
  4374  041B  0840               	movf	_validNorthSouth^(0+128),w
  4375  041C  318D  25A9  3183   	fcall	_WriteSPI
  4376                           
  4377                           ;launcher_functions.c: 530: for(x=0;x<3;x++)
  4378  041F  0020               	movlb	0	; select bank0
  4379  0420  01C0               	clrf	RecordMode@x
  4380  0421  01C1               	clrf	RecordMode@x+1
  4381  0422  0841               	movf	RecordMode@x+1,w
  4382  0423  3A80               	xorlw	128
  4383  0424  00B5               	movwf	??_RecordMode
  4384  0425  3080               	movlw	128
  4385  0426  0235               	subwf	??_RecordMode,w
  4386  0427  1D03               	skipz
  4387  0428  2C2B               	goto	u1745
  4388  0429  3003               	movlw	3
  4389  042A  0240               	subwf	RecordMode@x,w
  4390  042B                     u1745:	
  4391  042B  1803               	btfsc	3,0
  4392  042C  2C53               	goto	l2275
  4393  042D                     l2269:	
  4394                           
  4395                           ;launcher_functions.c: 531: {
  4396                           ;launcher_functions.c: 532: WriteSPI(validLatitude[x]);
  4397  042D  0020               	movlb	0	; select bank0
  4398  042E  3540               	lslf	RecordMode@x,w
  4399  042F  3ECD               	addlw	_validLatitude& (0+255)
  4400  0430  0086               	movwf	6
  4401  0431  0187               	clrf	7
  4402  0432  0801               	movf	1,w
  4403  0433  318D  25A9  3183   	fcall	_WriteSPI
  4404                           
  4405                           ;launcher_functions.c: 533: WriteSPI(validLatitude[x]>>8);
  4406  0436  0020               	movlb	0	; select bank0
  4407  0437  3540               	lslf	RecordMode@x,w
  4408  0438  3ECD               	addlw	_validLatitude& (0+255)
  4409  0439  0086               	movwf	6
  4410  043A  0187               	clrf	7
  4411  043B  3F40               	moviw [0]fsr1
  4412  043C  00B5               	movwf	??_RecordMode
  4413  043D  3F41               	moviw [1]fsr1
  4414  043E  00B6               	movwf	??_RecordMode+1
  4415  043F  0836               	movf	??_RecordMode+1,w
  4416  0440  318D  25A9  3183   	fcall	_WriteSPI
  4417  0443  3001               	movlw	1
  4418  0444  0020               	movlb	0	; select bank0
  4419  0445  07C0               	addwf	RecordMode@x,f
  4420  0446  3000               	movlw	0
  4421  0447  3DC1               	addwfc	RecordMode@x+1,f
  4422  0448  0841               	movf	RecordMode@x+1,w
  4423  0449  3A80               	xorlw	128
  4424  044A  00B5               	movwf	??_RecordMode
  4425  044B  3080               	movlw	128
  4426  044C  0235               	subwf	??_RecordMode,w
  4427  044D  1D03               	skipz
  4428  044E  2C51               	goto	u1755
  4429  044F  3003               	movlw	3
  4430  0450  0240               	subwf	RecordMode@x,w
  4431  0451                     u1755:	
  4432  0451  1C03               	skipc
  4433  0452  2C2D               	goto	l2269
  4434  0453                     l2275:	
  4435                           
  4436                           ;launcher_functions.c: 534: }
  4437                           ;launcher_functions.c: 535: WriteSPI(validEastWest);
  4438  0453  0021               	movlb	1	; select bank1
  4439  0454  083F               	movf	_validEastWest^(0+128),w
  4440  0455  318D  25A9  3183   	fcall	_WriteSPI
  4441                           
  4442                           ;launcher_functions.c: 537: TMR1IF = 0;
  4443  0458  0020               	movlb	0	; select bank0
  4444  0459  1011               	bcf	17,0	;volatile
  4445                           
  4446                           ;launcher_functions.c: 538: TMR1IE = 1;
  4447  045A  0021               	movlb	1	; select bank1
  4448  045B  1411               	bsf	17,0	;volatile
  4449                           
  4450                           ;launcher_functions.c: 539: TMR1ON = 1;
  4451  045C  0020               	movlb	0	; select bank0
  4452  045D  1418               	bsf	24,0	;volatile
  4453  045E                     l2299:	
  4454                           ;launcher_functions.c: 541: while((recordFlag) && (address < 131072))
  4455                           
  4456  045E  0021               	movlb	1	; select bank1
  4457  045F  085D               	movf	_recordFlag^(0+128),w
  4458  0460  1903               	btfsc	3,2
  4459  0461  2CAF               	goto	l420
  4460  0462  0020               	movlb	0	; select bank0
  4461  0463  083F               	movf	RecordMode@address+3,w
  4462  0464  3A80               	xorlw	128
  4463  0465  00B5               	movwf	??_RecordMode
  4464  0466  3000               	movlw	0
  4465  0467  3A80               	xorlw	128
  4466  0468  0235               	subwf	??_RecordMode,w
  4467  0469  1D03               	skipz
  4468  046A  2C75               	goto	u1793
  4469  046B  3002               	movlw	2
  4470  046C  023E               	subwf	RecordMode@address+2,w
  4471  046D  1D03               	skipz
  4472  046E  2C75               	goto	u1793
  4473  046F  3000               	movlw	0
  4474  0470  023D               	subwf	RecordMode@address+1,w
  4475  0471  1D03               	skipz
  4476  0472  2C75               	goto	u1793
  4477  0473  3000               	movlw	0
  4478  0474  023C               	subwf	RecordMode@address,w
  4479  0475                     u1793:	
  4480  0475  1803               	btfsc	3,0
  4481  0476  2CAE               	goto	u1790
  4482                           
  4483                           ;launcher_functions.c: 542: {
  4484                           ;launcher_functions.c: 543: if(count>=256)
  4485  0477  083B               	movf	RecordMode@count+1,w
  4486  0478  3A80               	xorlw	128
  4487  0479  00B5               	movwf	??_RecordMode
  4488  047A  3081               	movlw	129
  4489  047B  0235               	subwf	??_RecordMode,w
  4490  047C  1D03               	skipz
  4491  047D  2C80               	goto	u1765
  4492  047E  3000               	movlw	0
  4493  047F  023A               	subwf	RecordMode@count,w
  4494  0480                     u1765:	
  4495  0480  1C03               	skipc
  4496  0481  2C92               	goto	l2291
  4497                           
  4498                           ;launcher_functions.c: 544: {
  4499                           ;launcher_functions.c: 545: LATC2 = (0);
  4500  0482  0022               	movlb	2	; select bank2
  4501  0483  110E               	bcf	14,2	;volatile
  4502                           
  4503                           ;launcher_functions.c: 546: count = 0;
  4504  0484  0020               	movlb	0	; select bank0
  4505  0485  01BA               	clrf	RecordMode@count
  4506  0486  01BB               	clrf	RecordMode@count+1
  4507                           
  4508                           ;launcher_functions.c: 547: WriteOverheadSPI(address);
  4509  0487  083F               	movf	RecordMode@address+3,w
  4510  0488  00AA               	movwf	WriteOverheadSPI@address+3
  4511  0489  083E               	movf	RecordMode@address+2,w
  4512  048A  00A9               	movwf	WriteOverheadSPI@address+2
  4513  048B  083D               	movf	RecordMode@address+1,w
  4514  048C  00A8               	movwf	WriteOverheadSPI@address+1
  4515  048D  083C               	movf	RecordMode@address,w
  4516  048E  00A7               	movwf	WriteOverheadSPI@address
  4517  048F  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4518  0492                     l2291:	
  4519                           
  4520                           ;launcher_functions.c: 548: }
  4521                           ;launcher_functions.c: 549: if(!((((start))==((end)))?(1):(0)))
  4522  0492  087A               	movf	_end+1,w
  4523  0493  067C               	xorwf	_start+1,w
  4524  0494  1D03               	skipz
  4525  0495  2C98               	goto	u1775
  4526  0496  0879               	movf	_end,w
  4527  0497  067B               	xorwf	_start,w
  4528  0498                     u1775:	
  4529  0498  1903               	skipnz
  4530  0499  2C5E               	goto	l2299
  4531                           
  4532                           ;launcher_functions.c: 550: {
  4533                           ;launcher_functions.c: 551: WriteSPI(ReadBuffer());
  4534  049A  318D  25E9  3183   	fcall	_ReadBuffer
  4535  049D  318D  25A9  3183   	fcall	_WriteSPI
  4536                           
  4537                           ;launcher_functions.c: 552: address++;
  4538  04A0  3001               	movlw	1
  4539  04A1  0020               	movlb	0	; select bank0
  4540  04A2  07BC               	addwf	RecordMode@address,f
  4541  04A3  3000               	movlw	0
  4542  04A4  3DBD               	addwfc	RecordMode@address+1,f
  4543  04A5  3000               	movlw	0
  4544  04A6  3DBE               	addwfc	RecordMode@address+2,f
  4545  04A7  3000               	movlw	0
  4546  04A8  3DBF               	addwfc	RecordMode@address+3,f
  4547                           
  4548                           ;launcher_functions.c: 553: count++;
  4549  04A9  3001               	movlw	1
  4550  04AA  07BA               	addwf	RecordMode@count,f
  4551  04AB  3000               	movlw	0
  4552  04AC  3DBB               	addwfc	RecordMode@count+1,f
  4553  04AD  2C5E               	goto	l2299
  4554  04AE                     u1790:	
  4555  04AE  0021               	movlb	1	; select bank1
  4556  04AF                     l420:	
  4557                           
  4558                           ;launcher_functions.c: 554: }
  4559                           ;launcher_functions.c: 555: }
  4560                           ;launcher_functions.c: 556: LATC2 = (0);
  4561  04AF  0022               	movlb	2	; select bank2
  4562  04B0  110E               	bcf	14,2	;volatile
  4563                           
  4564                           ;launcher_functions.c: 557: TMR1IE = 0;
  4565  04B1  0021               	movlb	1	; select bank1
  4566  04B2  1011               	bcf	17,0	;volatile
  4567                           
  4568                           ;launcher_functions.c: 558: TMR1ON = 0;
  4569  04B3  0020               	movlb	0	; select bank0
  4570  04B4  1018               	bcf	24,0	;volatile
  4571                           
  4572                           ;launcher_functions.c: 559: _delay((unsigned long)((5)*(16000000/4000.0)));
  4573  04B5  301A               	movlw	26
  4574  04B6  00B6               	movwf	??_RecordMode+1
  4575  04B7  30F8               	movlw	248
  4576  04B8  00B5               	movwf	??_RecordMode
  4577  04B9                     u2257:	
  4578  04B9  0BB5               	decfsz	??_RecordMode,f
  4579  04BA  2CB9               	goto	u2257
  4580  04BB  0BB6               	decfsz	??_RecordMode+1,f
  4581  04BC  2CB9               	goto	u2257
  4582  04BD  0000               	nop
  4583                           
  4584                           ;launcher_functions.c: 560: WriteOverheadSPI(0x0000000E);
  4585  04BE  3000               	movlw	0
  4586  04BF  0020               	movlb	0	; select bank0
  4587  04C0  00AA               	movwf	WriteOverheadSPI@address+3
  4588  04C1  3000               	movlw	0
  4589  04C2  00A9               	movwf	WriteOverheadSPI@address+2
  4590  04C3  3000               	movlw	0
  4591  04C4  00A8               	movwf	WriteOverheadSPI@address+1
  4592  04C5  300E               	movlw	14
  4593  04C6  00A7               	movwf	WriteOverheadSPI@address
  4594  04C7  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4595                           
  4596                           ;launcher_functions.c: 561: if(address >= 131072)
  4597  04CA  0020               	movlb	0	; select bank0
  4598  04CB  083F               	movf	RecordMode@address+3,w
  4599  04CC  3A80               	xorlw	128
  4600  04CD  00B5               	movwf	??_RecordMode
  4601  04CE  3000               	movlw	0
  4602  04CF  3A80               	xorlw	128
  4603  04D0  0235               	subwf	??_RecordMode,w
  4604  04D1  1D03               	skipz
  4605  04D2  2CDD               	goto	u1803
  4606  04D3  3002               	movlw	2
  4607  04D4  023E               	subwf	RecordMode@address+2,w
  4608  04D5  1D03               	skipz
  4609  04D6  2CDD               	goto	u1803
  4610  04D7  3000               	movlw	0
  4611  04D8  023D               	subwf	RecordMode@address+1,w
  4612  04D9  1D03               	skipz
  4613  04DA  2CDD               	goto	u1803
  4614  04DB  3000               	movlw	0
  4615  04DC  023C               	subwf	RecordMode@address,w
  4616  04DD                     u1803:	
  4617  04DD  1C03               	skipc
  4618  04DE  2CED               	goto	l2311
  4619                           
  4620                           ;launcher_functions.c: 562: {
  4621                           ;launcher_functions.c: 563: WriteSPI(131072 - 1);
  4622  04DF  30FF               	movlw	255
  4623  04E0  318D  25A9  3183   	fcall	_WriteSPI
  4624                           
  4625                           ;launcher_functions.c: 564: WriteSPI((131072 - 1)>>8);
  4626  04E3  30FF               	movlw	255
  4627  04E4  318D  25A9  3183   	fcall	_WriteSPI
  4628                           
  4629                           ;launcher_functions.c: 565: WriteSPI((131072 - 1)>>16);
  4630  04E7  3001               	movlw	1
  4631  04E8  318D  25A9  3183   	fcall	_WriteSPI
  4632                           
  4633                           ;launcher_functions.c: 566: WriteSPI((131072 - 1)>>24);
  4634  04EB  3000               	movlw	0
  4635  04EC  2D2E               	goto	L3
  4636  04ED                     l2311:	
  4637                           ;launcher_functions.c: 567: }
  4638                           
  4639                           
  4640                           ;launcher_functions.c: 568: else
  4641                           ;launcher_functions.c: 569: {
  4642                           ;launcher_functions.c: 570: WriteSPI(address);
  4643  04ED  0020               	movlb	0	; select bank0
  4644  04EE  083C               	movf	RecordMode@address,w
  4645  04EF  318D  25A9  3183   	fcall	_WriteSPI
  4646                           
  4647                           ;launcher_functions.c: 571: WriteSPI(address>>8);
  4648  04F2  0020               	movlb	0	; select bank0
  4649  04F3  083C               	movf	RecordMode@address,w
  4650  04F4  00B5               	movwf	??_RecordMode
  4651  04F5  083D               	movf	RecordMode@address+1,w
  4652  04F6  00B6               	movwf	??_RecordMode+1
  4653  04F7  083E               	movf	RecordMode@address+2,w
  4654  04F8  00B7               	movwf	??_RecordMode+2
  4655  04F9  083F               	movf	RecordMode@address+3,w
  4656  04FA  00B8               	movwf	??_RecordMode+3
  4657  04FB  3008               	movlw	8
  4658  04FC  00B9               	movwf	??_RecordMode+4
  4659  04FD                     u1815:	
  4660  04FD  37B8               	asrf	??_RecordMode+3,f
  4661  04FE  0CB7               	rrf	??_RecordMode+2,f
  4662  04FF  0CB6               	rrf	??_RecordMode+1,f
  4663  0500  0CB5               	rrf	??_RecordMode,f
  4664  0501  0BB9               	decfsz	??_RecordMode+4,f
  4665  0502  2CFD               	goto	u1815
  4666  0503  0835               	movf	??_RecordMode,w
  4667  0504  318D  25A9  3183   	fcall	_WriteSPI
  4668                           
  4669                           ;launcher_functions.c: 572: WriteSPI(address>>16);
  4670  0507  0020               	movlb	0	; select bank0
  4671  0508  083C               	movf	RecordMode@address,w
  4672  0509  00B5               	movwf	??_RecordMode
  4673  050A  083D               	movf	RecordMode@address+1,w
  4674  050B  00B6               	movwf	??_RecordMode+1
  4675  050C  083E               	movf	RecordMode@address+2,w
  4676  050D  00B7               	movwf	??_RecordMode+2
  4677  050E  083F               	movf	RecordMode@address+3,w
  4678  050F  00B8               	movwf	??_RecordMode+3
  4679  0510  3010               	movlw	16
  4680  0511  00B9               	movwf	??_RecordMode+4
  4681  0512                     u1825:	
  4682  0512  37B8               	asrf	??_RecordMode+3,f
  4683  0513  0CB7               	rrf	??_RecordMode+2,f
  4684  0514  0CB6               	rrf	??_RecordMode+1,f
  4685  0515  0CB5               	rrf	??_RecordMode,f
  4686  0516  0BB9               	decfsz	??_RecordMode+4,f
  4687  0517  2D12               	goto	u1825
  4688  0518  0835               	movf	??_RecordMode,w
  4689  0519  318D  25A9  3183   	fcall	_WriteSPI
  4690                           
  4691                           ;launcher_functions.c: 573: WriteSPI(address>>24);
  4692  051C  0020               	movlb	0	; select bank0
  4693  051D  083C               	movf	RecordMode@address,w
  4694  051E  00B5               	movwf	??_RecordMode
  4695  051F  083D               	movf	RecordMode@address+1,w
  4696  0520  00B6               	movwf	??_RecordMode+1
  4697  0521  083E               	movf	RecordMode@address+2,w
  4698  0522  00B7               	movwf	??_RecordMode+2
  4699  0523  083F               	movf	RecordMode@address+3,w
  4700  0524  00B8               	movwf	??_RecordMode+3
  4701  0525  3018               	movlw	24
  4702  0526  00B9               	movwf	??_RecordMode+4
  4703  0527                     u1835:	
  4704  0527  37B8               	asrf	??_RecordMode+3,f
  4705  0528  0CB7               	rrf	??_RecordMode+2,f
  4706  0529  0CB6               	rrf	??_RecordMode+1,f
  4707  052A  0CB5               	rrf	??_RecordMode,f
  4708  052B  0BB9               	decfsz	??_RecordMode+4,f
  4709  052C  2D27               	goto	u1835
  4710  052D  0835               	movf	??_RecordMode,w
  4711  052E                     L3:	
  4712  052E  318D  25A9         	fcall	_WriteSPI
  4713                           
  4714                           ;launcher_functions.c: 574: }
  4715                           ;launcher_functions.c: 575: LATC2 = (0);
  4716  0530  0022               	movlb	2	; select bank2
  4717  0531  110E               	bcf	14,2	;volatile
  4718                           
  4719                           ;launcher_functions.c: 576: (start) = 0;
  4720  0532  01FB               	clrf	_start
  4721  0533  01FC               	clrf	_start+1
  4722                           
  4723                           ;launcher_functions.c: 577: (end) = 0;
  4724  0534  01F9               	clrf	_end
  4725  0535  01FA               	clrf	_end+1
  4726  0536  0008               	return
  4727  0537                     __end_of_RecordMode:	
  4728                           
  4729                           	psect	text14
  4730  0FA0                     __ptext14:	
  4731 ;; *************** function _WriteOverheadSPI *****************
  4732 ;; Defined at:
  4733 ;;		line 168 in file "launcher_functions.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  address         4    7[BANK0 ] long 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  4738 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;		None               void
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4748 ;;      Params:         0       4       0       0       0       0       0
  4749 ;;      Locals:         0       4       0       0       0       0       0
  4750 ;;      Temps:          0       6       0       0       0       0       0
  4751 ;;      Totals:         0      14       0       0       0       0       0
  4752 ;;Total ram usage:       14 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    4
  4755 ;; This function calls:
  4756 ;;		_ReadStatusSPI
  4757 ;;		_WriteSPI
  4758 ;; This function is called by:
  4759 ;;		_RecordMode
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _WriteOverheadSPI
  4765  0FA0                     _WriteOverheadSPI:	
  4766                           
  4767                           ;launcher_functions.c: 170: unsigned char address_bytes[3];
  4768                           ;launcher_functions.c: 171: unsigned char StatusReg;
  4769                           ;launcher_functions.c: 173: address_bytes[0]=(unsigned char)(address>>8);
  4770                           
  4771                           ;incstack = 0
  4772                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  4773  0FA0  0020               	movlb	0	; select bank0
  4774  0FA1  0827               	movf	WriteOverheadSPI@address,w
  4775  0FA2  00AB               	movwf	??_WriteOverheadSPI
  4776  0FA3  0828               	movf	WriteOverheadSPI@address+1,w
  4777  0FA4  00AC               	movwf	??_WriteOverheadSPI+1
  4778  0FA5  0829               	movf	WriteOverheadSPI@address+2,w
  4779  0FA6  00AD               	movwf	??_WriteOverheadSPI+2
  4780  0FA7  082A               	movf	WriteOverheadSPI@address+3,w
  4781  0FA8  00AE               	movwf	??_WriteOverheadSPI+3
  4782  0FA9  3008               	movlw	8
  4783  0FAA  00AF               	movwf	??_WriteOverheadSPI+4
  4784  0FAB                     u1345:	
  4785  0FAB  37AE               	asrf	??_WriteOverheadSPI+3,f
  4786  0FAC  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4787  0FAD  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4788  0FAE  0CAB               	rrf	??_WriteOverheadSPI,f
  4789  0FAF  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4790  0FB0  2FAB               	goto	u1345
  4791  0FB1  082B               	movf	??_WriteOverheadSPI,w
  4792  0FB2  00B0               	movwf	??_WriteOverheadSPI+5
  4793  0FB3  0830               	movf	??_WriteOverheadSPI+5,w
  4794  0FB4  00B1               	movwf	WriteOverheadSPI@address_bytes
  4795                           
  4796                           ;launcher_functions.c: 174: address_bytes[1]=(unsigned char)(address>>4);
  4797  0FB5  0827               	movf	WriteOverheadSPI@address,w
  4798  0FB6  00AB               	movwf	??_WriteOverheadSPI
  4799  0FB7  0828               	movf	WriteOverheadSPI@address+1,w
  4800  0FB8  00AC               	movwf	??_WriteOverheadSPI+1
  4801  0FB9  0829               	movf	WriteOverheadSPI@address+2,w
  4802  0FBA  00AD               	movwf	??_WriteOverheadSPI+2
  4803  0FBB  082A               	movf	WriteOverheadSPI@address+3,w
  4804  0FBC  00AE               	movwf	??_WriteOverheadSPI+3
  4805  0FBD  3004               	movlw	4
  4806  0FBE  00AF               	movwf	??_WriteOverheadSPI+4
  4807  0FBF                     u1355:	
  4808  0FBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  4809  0FC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4810  0FC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4811  0FC2  0CAB               	rrf	??_WriteOverheadSPI,f
  4812  0FC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4813  0FC4  2FBF               	goto	u1355
  4814  0FC5  082B               	movf	??_WriteOverheadSPI,w
  4815  0FC6  00B0               	movwf	??_WriteOverheadSPI+5
  4816  0FC7  0830               	movf	??_WriteOverheadSPI+5,w
  4817  0FC8  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  4818                           
  4819                           ;launcher_functions.c: 175: address_bytes[2]=(unsigned char)(address);
  4820  0FC9  0827               	movf	WriteOverheadSPI@address,w
  4821  0FCA  00AB               	movwf	??_WriteOverheadSPI
  4822  0FCB  082B               	movf	??_WriteOverheadSPI,w
  4823  0FCC  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  4824  0FCD                     l1835:	
  4825                           ;launcher_functions.c: 177: do
  4826                           
  4827                           
  4828                           ;launcher_functions.c: 178: {
  4829                           ;launcher_functions.c: 179: StatusReg = (ReadStatusSPI() & 0x01);
  4830  0FCD  318D  2574  318F   	fcall	_ReadStatusSPI
  4831  0FD0  3901               	andlw	1
  4832  0FD1  0020               	movlb	0	; select bank0
  4833  0FD2  00AB               	movwf	??_WriteOverheadSPI
  4834  0FD3  082B               	movf	??_WriteOverheadSPI,w
  4835  0FD4  00B4               	movwf	WriteOverheadSPI@StatusReg
  4836                           
  4837                           ;launcher_functions.c: 180: } while (StatusReg);
  4838  0FD5  08B4               	movf	WriteOverheadSPI@StatusReg,f
  4839  0FD6  1D03               	skipz
  4840  0FD7  2FCD               	goto	l1835
  4841                           
  4842                           ;launcher_functions.c: 183: LATC2 = (1);
  4843  0FD8  0022               	movlb	2	; select bank2
  4844  0FD9  150E               	bsf	14,2	;volatile
  4845                           
  4846                           ;launcher_functions.c: 184: WriteSPI((0x06));
  4847  0FDA  3006               	movlw	6
  4848  0FDB  318D  25A9  318F   	fcall	_WriteSPI
  4849                           
  4850                           ;launcher_functions.c: 185: LATC2 = (0);
  4851  0FDE  0022               	movlb	2	; select bank2
  4852  0FDF  110E               	bcf	14,2	;volatile
  4853  0FE0                     l296:	
  4854                           ;launcher_functions.c: 187: do
  4855                           
  4856                           
  4857                           ;launcher_functions.c: 188: {
  4858                           ;launcher_functions.c: 189: StatusReg = (ReadStatusSPI() & 0x02);
  4859  0FE0  318D  2574  318F   	fcall	_ReadStatusSPI
  4860  0FE3  3902               	andlw	2
  4861  0FE4  0020               	movlb	0	; select bank0
  4862  0FE5  00AB               	movwf	??_WriteOverheadSPI
  4863  0FE6  082B               	movf	??_WriteOverheadSPI,w
  4864  0FE7  00B4               	movwf	WriteOverheadSPI@StatusReg
  4865                           
  4866                           ;launcher_functions.c: 190: } while (!StatusReg);
  4867  0FE8  0834               	movf	WriteOverheadSPI@StatusReg,w
  4868  0FE9  1903               	btfsc	3,2
  4869  0FEA  2FE0               	goto	l296
  4870                           
  4871                           ;launcher_functions.c: 194: LATC2=(1);
  4872  0FEB  0022               	movlb	2	; select bank2
  4873  0FEC  150E               	bsf	14,2	;volatile
  4874                           
  4875                           ;launcher_functions.c: 195: WriteSPI((0x02));
  4876  0FED  3002               	movlw	2
  4877  0FEE  318D  25A9  318F   	fcall	_WriteSPI
  4878                           
  4879                           ;launcher_functions.c: 196: WriteSPI(address_bytes[0]);
  4880  0FF1  0020               	movlb	0	; select bank0
  4881  0FF2  0831               	movf	WriteOverheadSPI@address_bytes,w
  4882  0FF3  318D  25A9  318F   	fcall	_WriteSPI
  4883                           
  4884                           ;launcher_functions.c: 197: WriteSPI(address_bytes[1]);
  4885  0FF6  0020               	movlb	0	; select bank0
  4886  0FF7  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  4887  0FF8  318D  25A9  318F   	fcall	_WriteSPI
  4888                           
  4889                           ;launcher_functions.c: 198: WriteSPI(address_bytes[2]);
  4890  0FFB  0020               	movlb	0	; select bank0
  4891  0FFC  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  4892  0FFD  318D  25A9         	fcall	_WriteSPI
  4893  0FFF  0008               	return
  4894  1000                     __end_of_WriteOverheadSPI:	
  4895                           ;launcher_functions.c: 200: return;
  4896                           
  4897                           
  4898                           	psect	text15
  4899  0D74                     __ptext15:	
  4900 ;; *************** function _ReadStatusSPI *****************
  4901 ;; Defined at:
  4902 ;;		line 156 in file "launcher_functions.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  dataRead        1    6[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      unsigned char 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0, pclath, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4916 ;;      Params:         0       0       0       0       0       0       0
  4917 ;;      Locals:         0       1       0       0       0       0       0
  4918 ;;      Temps:          0       1       0       0       0       0       0
  4919 ;;      Totals:         0       2       0       0       0       0       0
  4920 ;;Total ram usage:        2 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    3
  4923 ;; This function calls:
  4924 ;;		_ReadSPI
  4925 ;;		_WriteSPI
  4926 ;; This function is called by:
  4927 ;;		_WriteOverheadSPI
  4928 ;;		_ReadOverheadSPI
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function _ReadStatusSPI
  4934  0D74                     _ReadStatusSPI:	
  4935                           
  4936                           ;launcher_functions.c: 158: unsigned char dataRead;
  4937                           ;launcher_functions.c: 160: LATC2=(1);
  4938                           
  4939                           ;incstack = 0
  4940                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  4941  0D74  0022               	movlb	2	; select bank2
  4942  0D75  150E               	bsf	14,2	;volatile
  4943                           
  4944                           ;launcher_functions.c: 161: WriteSPI((0x05));
  4945  0D76  3005               	movlw	5
  4946  0D77  318D  25A9  318D   	fcall	_WriteSPI
  4947                           
  4948                           ;launcher_functions.c: 162: dataRead = ReadSPI();
  4949  0D7A  3187  27F2         	fcall	_ReadSPI
  4950  0D7C  0020               	movlb	0	; select bank0
  4951  0D7D  00A5               	movwf	??_ReadStatusSPI
  4952  0D7E  0825               	movf	??_ReadStatusSPI,w
  4953  0D7F  00A6               	movwf	ReadStatusSPI@dataRead
  4954                           
  4955                           ;launcher_functions.c: 163: LATC2=(0);
  4956  0D80  0022               	movlb	2	; select bank2
  4957  0D81  110E               	bcf	14,2	;volatile
  4958                           
  4959                           ;launcher_functions.c: 165: return(dataRead);
  4960  0D82  0020               	movlb	0	; select bank0
  4961  0D83  0826               	movf	ReadStatusSPI@dataRead,w
  4962  0D84  0008               	return
  4963  0D85                     __end_of_ReadStatusSPI:	
  4964                           
  4965                           	psect	text16
  4966  0DA9                     __ptext16:	
  4967 ;; *************** function _WriteSPI *****************
  4968 ;; Defined at:
  4969 ;;		line 136 in file "launcher_functions.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  databyte        1    wreg     unsigned char 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  databyte        1    4[BANK0 ] unsigned char 
  4974 ;;  temp            2    2[BANK0 ] unsigned int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4984 ;;      Params:         0       0       0       0       0       0       0
  4985 ;;      Locals:         0       3       0       0       0       0       0
  4986 ;;      Temps:          0       2       0       0       0       0       0
  4987 ;;      Totals:         0       5       0       0       0       0       0
  4988 ;;Total ram usage:        5 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    2
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_ReadStatusSPI
  4995 ;;		_WriteOverheadSPI
  4996 ;;		_RecordMode
  4997 ;;		_ReadOverheadSPI
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           
  5002                           ;psect for function _WriteSPI
  5003  0DA9                     _WriteSPI:	
  5004                           
  5005                           ;incstack = 0
  5006                           ; Regs used in _WriteSPI: [wreg]
  5007                           ;WriteSPI@databyte stored from wreg
  5008  0DA9  0020               	movlb	0	; select bank0
  5009  0DAA  00A4               	movwf	WriteSPI@databyte
  5010                           
  5011                           ;launcher_functions.c: 138: unsigned int temp;
  5012                           ;launcher_functions.c: 139: temp = SSPBUF;
  5013  0DAB  0024               	movlb	4	; select bank4
  5014  0DAC  0811               	movf	17,w	;volatile
  5015  0DAD  0020               	movlb	0	; select bank0
  5016  0DAE  00A0               	movwf	??_WriteSPI
  5017  0DAF  01A1               	clrf	??_WriteSPI+1
  5018  0DB0  0820               	movf	??_WriteSPI,w
  5019  0DB1  00A2               	movwf	WriteSPI@temp
  5020  0DB2  0821               	movf	??_WriteSPI+1,w
  5021  0DB3  00A3               	movwf	WriteSPI@temp+1
  5022                           
  5023                           ;launcher_functions.c: 140: PIR1bits.SSP1IF=0;
  5024  0DB4  1191               	bcf	17,3	;volatile
  5025                           
  5026                           ;launcher_functions.c: 141: SSPBUF = databyte;
  5027  0DB5  0824               	movf	WriteSPI@databyte,w
  5028  0DB6  0024               	movlb	4	; select bank4
  5029  0DB7  0091               	movwf	17	;volatile
  5030  0DB8                     l279:	
  5031                           ;launcher_functions.c: 142: while(!PIR1bits.SSP1IF);
  5032                           
  5033  0DB8  0020               	movlb	0	; select bank0
  5034  0DB9  1991               	btfsc	17,3	;volatile
  5035  0DBA  0008               	return
  5036  0DBB  2DB8               	goto	l279
  5037  0DBC                     __end_of_WriteSPI:	
  5038                           
  5039                           	psect	text17
  5040  07F2                     __ptext17:	
  5041 ;; *************** function _ReadSPI *****************
  5042 ;; Defined at:
  5043 ;;		line 145 in file "launcher_functions.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      unsigned char 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5057 ;;      Params:         0       0       0       0       0       0       0
  5058 ;;      Locals:         0       1       0       0       0       0       0
  5059 ;;      Temps:          0       1       0       0       0       0       0
  5060 ;;      Totals:         0       2       0       0       0       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    2
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_ReadStatusSPI
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _ReadSPI
  5073  07F2                     _ReadSPI:	
  5074                           
  5075                           ;launcher_functions.c: 147: unsigned char dataByte;
  5076                           ;launcher_functions.c: 149: SSPBUF = 0x00;
  5077                           
  5078                           ;incstack = 0
  5079                           ; Regs used in _ReadSPI: [wreg+status,2]
  5080  07F2  0024               	movlb	4	; select bank4
  5081  07F3  0191               	clrf	17	;volatile
  5082  07F4                     l285:	
  5083                           ;launcher_functions.c: 150: while(!SSPSTATbits.BF);
  5084                           
  5085  07F4  1C14               	btfss	20,0	;volatile
  5086  07F5  2FF4               	goto	l285
  5087                           
  5088                           ;launcher_functions.c: 151: dataByte = SSPBUF;
  5089  07F6  0811               	movf	17,w	;volatile
  5090  07F7  0020               	movlb	0	; select bank0
  5091  07F8  00A0               	movwf	??_ReadSPI
  5092  07F9  0820               	movf	??_ReadSPI,w
  5093  07FA  00A1               	movwf	ReadSPI@dataByte
  5094                           
  5095                           ;launcher_functions.c: 152: PIR1bits.SSP1IF=0;
  5096  07FB  1191               	bcf	17,3	;volatile
  5097                           
  5098                           ;launcher_functions.c: 153: return (dataByte);
  5099  07FC  0821               	movf	ReadSPI@dataByte,w
  5100  07FD  0008               	return
  5101  07FE                     __end_of_ReadSPI:	
  5102                           
  5103                           	psect	text18
  5104  0DE9                     __ptext18:	
  5105 ;; *************** function _ReadBuffer *****************
  5106 ;; Defined at:
  5107 ;;		line 215 in file "launcher_functions.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  read_data       1    1[BANK0 ] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      unsigned char 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5121 ;;      Params:         0       0       0       0       0       0       0
  5122 ;;      Locals:         0       1       0       0       0       0       0
  5123 ;;      Temps:          0       1       0       0       0       0       0
  5124 ;;      Totals:         0       2       0       0       0       0       0
  5125 ;;Total ram usage:        2 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    2
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_RecordMode
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function _ReadBuffer
  5137  0DE9                     _ReadBuffer:	
  5138                           
  5139                           ;launcher_functions.c: 217: unsigned char read_data;
  5140                           ;launcher_functions.c: 219: read_data = buffer[start];
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5144  0DE9  087B               	movf	_start,w
  5145  0DEA  3EA0               	addlw	_buffer& (0+255)
  5146  0DEB  0086               	movwf	6
  5147  0DEC  3001               	movlw	1	; select bank3/4
  5148  0DED  0087               	movwf	7
  5149  0DEE  0801               	movf	1,w
  5150  0DEF  0020               	movlb	0	; select bank0
  5151  0DF0  00A0               	movwf	??_ReadBuffer
  5152  0DF1  0820               	movf	??_ReadBuffer,w
  5153  0DF2  00A1               	movwf	ReadBuffer@read_data
  5154                           
  5155                           ;launcher_functions.c: 220: if (start == 51)
  5156  0DF3  3033               	movlw	51
  5157  0DF4  067B               	xorwf	_start,w
  5158  0DF5  047C               	iorwf	_start+1,w
  5159  0DF6  1D03               	skipz
  5160  0DF7  2DFB               	goto	l1855
  5161                           
  5162                           ;launcher_functions.c: 221: start = 0;
  5163  0DF8  01FB               	clrf	_start
  5164  0DF9  01FC               	clrf	_start+1
  5165  0DFA  2DFF               	goto	l307
  5166  0DFB                     l1855:	
  5167                           
  5168                           ;launcher_functions.c: 222: else
  5169                           ;launcher_functions.c: 223: start++;
  5170  0DFB  3001               	movlw	1
  5171  0DFC  07FB               	addwf	_start,f
  5172  0DFD  3000               	movlw	0
  5173  0DFE  3DFC               	addwfc	_start+1,f
  5174  0DFF                     l307:	
  5175                           
  5176                           ;launcher_functions.c: 224: return read_data;
  5177  0DFF  0821               	movf	ReadBuffer@read_data,w
  5178  0E00  0008               	return
  5179  0E01                     __end_of_ReadBuffer:	
  5180                           
  5181                           	psect	text19
  5182  0D3D                     __ptext19:	
  5183 ;; *************** function _InitWatchdog *****************
  5184 ;; Defined at:
  5185 ;;		line 127 in file "launcher_functions.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;		None               void
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5199 ;;      Params:         0       0       0       0       0       0       0
  5200 ;;      Locals:         0       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0
  5202 ;;      Totals:         0       0       0       0       0       0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    2
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _InitWatchdog
  5215  0D3D                     _InitWatchdog:	
  5216                           
  5217                           ;launcher_functions.c: 130: WDTCONbits.WDTPS = 0x0A;
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5221  0D3D  0021               	movlb	1	; select bank1
  5222  0D3E  0817               	movf	23,w	;volatile
  5223  0D3F  39C1               	andlw	-63
  5224  0D40  3814               	iorlw	20
  5225  0D41  0097               	movwf	23	;volatile
  5226                           
  5227                           ;launcher_functions.c: 131: WDTCONbits.SWDTEN = 0;
  5228  0D42  1017               	bcf	23,0	;volatile
  5229  0D43  0008               	return
  5230  0D44                     __end_of_InitWatchdog:	
  5231                           
  5232                           	psect	text20
  5233  0D56                     __ptext20:	
  5234 ;; *************** function _InitTimer1 *****************
  5235 ;; Defined at:
  5236 ;;		line 96 in file "launcher_functions.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;		None               void
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5250 ;;      Params:         0       0       0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0
  5253 ;;      Totals:         0       0       0       0       0       0       0
  5254 ;;Total ram usage:        0 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    2
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_main
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           
  5265                           ;psect for function _InitTimer1
  5266  0D56                     _InitTimer1:	
  5267                           
  5268                           ;launcher_functions.c: 98: T1CONbits.TMR1CS = 0;
  5269                           
  5270                           ;incstack = 0
  5271                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  5272  0D56  303F               	movlw	-193
  5273  0D57  0020               	movlb	0	; select bank0
  5274  0D58  0598               	andwf	24,f	;volatile
  5275                           
  5276                           ;launcher_functions.c: 99: T1CONbits.T1CKPS = 2;
  5277  0D59  0818               	movf	24,w	;volatile
  5278  0D5A  39CF               	andlw	-49
  5279  0D5B  3820               	iorlw	32
  5280  0D5C  0098               	movwf	24	;volatile
  5281                           
  5282                           ;launcher_functions.c: 100: T1CONbits.nT1SYNC = 1;
  5283  0D5D  1518               	bsf	24,2	;volatile
  5284                           
  5285                           ;launcher_functions.c: 101: T1GCONbits.TMR1GE = 0;
  5286  0D5E  1399               	bcf	25,7	;volatile
  5287                           
  5288                           ;launcher_functions.c: 102: TMR1H = 0xFF;
  5289  0D5F  30FF               	movlw	255
  5290  0D60  0097               	movwf	23	;volatile
  5291                           
  5292                           ;launcher_functions.c: 103: TMR1L = 0xCD;
  5293  0D61  30CD               	movlw	205
  5294  0D62  0096               	movwf	22	;volatile
  5295                           
  5296                           ;launcher_functions.c: 104: T1CONbits.TMR1ON = 1;
  5297  0D63  1418               	bsf	24,0	;volatile
  5298  0D64  0008               	return
  5299  0D65                     __end_of_InitTimer1:	
  5300                           
  5301                           	psect	text21
  5302  0D97                     __ptext21:	
  5303 ;; *************** function _InitSPI *****************
  5304 ;; Defined at:
  5305 ;;		line 108 in file "launcher_functions.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;		None               void
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5319 ;;      Params:         0       0       0       0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_main
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           
  5334                           ;psect for function _InitSPI
  5335  0D97                     _InitSPI:	
  5336                           
  5337                           ;launcher_functions.c: 111: TRISCbits.TRISC2 = 0;
  5338                           
  5339                           ;incstack = 0
  5340                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5341  0D97  0021               	movlb	1	; select bank1
  5342  0D98  110E               	bcf	14,2	;volatile
  5343                           
  5344                           ;launcher_functions.c: 112: TRISCbits.TRISC3 = 0;
  5345  0D99  118E               	bcf	14,3	;volatile
  5346                           
  5347                           ;launcher_functions.c: 113: TRISCbits.TRISC4 = 1;
  5348  0D9A  160E               	bsf	14,4	;volatile
  5349                           
  5350                           ;launcher_functions.c: 114: TRISCbits.TRISC5 = 0;
  5351  0D9B  128E               	bcf	14,5	;volatile
  5352                           
  5353                           ;launcher_functions.c: 116: LATC2 = (0);
  5354  0D9C  0022               	movlb	2	; select bank2
  5355  0D9D  110E               	bcf	14,2	;volatile
  5356                           
  5357                           ;launcher_functions.c: 119: SSPCON1bits.SSPEN=0x00;
  5358  0D9E  0024               	movlb	4	; select bank4
  5359  0D9F  1295               	bcf	21,5	;volatile
  5360                           
  5361                           ;launcher_functions.c: 120: SSPCON1bits.SSPM=0x01;
  5362  0DA0  0815               	movf	21,w	;volatile
  5363  0DA1  39F0               	andlw	-16
  5364  0DA2  3801               	iorlw	1
  5365  0DA3  0095               	movwf	21	;volatile
  5366                           
  5367                           ;launcher_functions.c: 121: SSPCON1bits.CKP=0;
  5368  0DA4  1215               	bcf	21,4	;volatile
  5369                           
  5370                           ;launcher_functions.c: 122: SSPSTATbits.CKE=1;
  5371  0DA5  1714               	bsf	20,6	;volatile
  5372                           
  5373                           ;launcher_functions.c: 123: SSPSTATbits.SMP=0;
  5374  0DA6  1394               	bcf	20,7	;volatile
  5375                           
  5376                           ;launcher_functions.c: 124: SSPCON1bits.SSPEN=0x01;
  5377  0DA7  1695               	bsf	21,5	;volatile
  5378  0DA8  0008               	return
  5379  0DA9                     __end_of_InitSPI:	
  5380                           
  5381                           	psect	text22
  5382  0E9E                     __ptext22:	
  5383 ;; *************** function _InitGPIO *****************
  5384 ;; Defined at:
  5385 ;;		line 13 in file "launcher_functions.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;		None               void
  5392 ;; Registers used:
  5393 ;;		status,2
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5399 ;;      Params:         0       0       0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    2
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_main
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           
  5414                           ;psect for function _InitGPIO
  5415  0E9E                     _InitGPIO:	
  5416                           
  5417                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  5418                           
  5419                           ;incstack = 0
  5420                           ; Regs used in _InitGPIO: [status,2]
  5421  0E9E  0021               	movlb	1	; select bank1
  5422  0E9F  148C               	bsf	12,1	;volatile
  5423                           
  5424                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  5425  0EA0  0023               	movlb	3	; select bank3
  5426  0EA1  108C               	bcf	12,1	;volatile
  5427                           
  5428                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  5429  0EA2  0027               	movlb	7	; select bank7
  5430  0EA3  1491               	bsf	17,1	;volatile
  5431                           
  5432                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  5433  0EA4  1492               	bsf	18,1	;volatile
  5434                           
  5435                           ;launcher_functions.c: 22: IOCAF = 0x00;
  5436  0EA5  0193               	clrf	19	;volatile
  5437                           
  5438                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  5439  0EA6  158B               	bsf	11,3	;volatile
  5440                           
  5441                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  5442  0EA7  0021               	movlb	1	; select bank1
  5443  0EA8  158D               	bsf	13,3	;volatile
  5444                           
  5445                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  5446  0EA9  0023               	movlb	3	; select bank3
  5447  0EAA  118D               	bcf	13,3	;volatile
  5448                           
  5449                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  5450  0EAB  0027               	movlb	7	; select bank7
  5451  0EAC  1595               	bsf	21,3	;volatile
  5452                           
  5453                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  5454  0EAD  1594               	bsf	20,3	;volatile
  5455                           
  5456                           ;launcher_functions.c: 30: IOCBF = 0x00;
  5457  0EAE  0196               	clrf	22	;volatile
  5458                           
  5459                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  5460  0EAF  158B               	bsf	11,3	;volatile
  5461                           
  5462                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  5463  0EB0  0021               	movlb	1	; select bank1
  5464  0EB1  140C               	bsf	12,0	;volatile
  5465                           
  5466                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  5467  0EB2  150C               	bsf	12,2	;volatile
  5468                           
  5469                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  5470  0EB3  158C               	bsf	12,3	;volatile
  5471                           
  5472                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  5473  0EB4  120C               	bcf	12,4	;volatile
  5474                           
  5475                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  5476  0EB5  128C               	bcf	12,5	;volatile
  5477                           
  5478                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  5479  0EB6  130C               	bcf	12,6	;volatile
  5480                           
  5481                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  5482  0EB7  138C               	bcf	12,7	;volatile
  5483                           
  5484                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  5485  0EB8  100D               	bcf	13,0	;volatile
  5486                           
  5487                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  5488  0EB9  148D               	bsf	13,1	;volatile
  5489                           
  5490                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  5491  0EBA  110D               	bcf	13,2	;volatile
  5492                           
  5493                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  5494  0EBB  120D               	bcf	13,4	;volatile
  5495                           
  5496                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  5497  0EBC  128D               	bcf	13,5	;volatile
  5498                           
  5499                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  5500  0EBD  0020               	movlb	0	; select bank0
  5501  0EBE  100D               	bcf	13,0	;volatile
  5502                           
  5503                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  5504  0EBF  120D               	bcf	13,4	;volatile
  5505                           
  5506                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  5507  0EC0  128D               	bcf	13,5	;volatile
  5508                           
  5509                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  5510  0EC1  0023               	movlb	3	; select bank3
  5511  0EC2  100D               	bcf	13,0	;volatile
  5512                           
  5513                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  5514  0EC3  108D               	bcf	13,1	;volatile
  5515                           
  5516                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  5517  0EC4  110D               	bcf	13,2	;volatile
  5518                           
  5519                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  5520  0EC5  120D               	bcf	13,4	;volatile
  5521                           
  5522                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  5523  0EC6  128D               	bcf	13,5	;volatile
  5524                           
  5525                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  5526  0EC7  0021               	movlb	1	; select bank1
  5527  0EC8  100E               	bcf	14,0	;volatile
  5528                           
  5529                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  5530  0EC9  108E               	bcf	14,1	;volatile
  5531  0ECA  0008               	return
  5532  0ECB                     __end_of_InitGPIO:	
  5533                           
  5534                           	psect	text23
  5535  0D44                     __ptext23:	
  5536 ;; *************** function _InitCLK *****************
  5537 ;; Defined at:
  5538 ;;		line 8 in file "launcher_functions.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;		None               void
  5545 ;; Registers used:
  5546 ;;		wreg, status,2, status,0
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5552 ;;      Params:         0       0       0       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0
  5555 ;;      Totals:         0       0       0       0       0       0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    2
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_main
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function _InitCLK
  5568  0D44                     _InitCLK:	
  5569                           
  5570                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  5571                           
  5572                           ;incstack = 0
  5573                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  5574  0D44  3078               	movlw	120
  5575  0D45  0021               	movlb	1	; select bank1
  5576  0D46  0499               	iorwf	25,f	;volatile
  5577                           
  5578                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  5579  0D47  0819               	movf	25,w	;volatile
  5580  0D48  39FC               	andlw	-4
  5581  0D49  3802               	iorlw	2
  5582  0D4A  0099               	movwf	25	;volatile
  5583  0D4B  0008               	return
  5584  0D4C                     __end_of_InitCLK:	
  5585                           
  5586                           	psect	text24
  5587  0E01                     __ptext24:	
  5588 ;; *************** function _InitADC *****************
  5589 ;; Defined at:
  5590 ;;		line 73 in file "launcher_functions.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5604 ;;      Params:         0       0       0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0
  5607 ;;      Totals:         0       0       0       0       0       0       0
  5608 ;;Total ram usage:        0 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    2
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_main
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _InitADC
  5620  0E01                     _InitADC:	
  5621                           
  5622                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  5626  0E01  0021               	movlb	1	; select bank1
  5627  0E02  140C               	bsf	12,0	;volatile
  5628                           
  5629                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  5630  0E03  0023               	movlb	3	; select bank3
  5631  0E04  140C               	bsf	12,0	;volatile
  5632                           
  5633                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  5634  0E05  0021               	movlb	1	; select bank1
  5635  0E06  081E               	movf	30,w	;volatile
  5636  0E07  398F               	andlw	-113
  5637  0E08  3850               	iorlw	80
  5638  0E09  009E               	movwf	30	;volatile
  5639                           
  5640                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  5641  0E0A  30FC               	movlw	-4
  5642  0E0B  059E               	andwf	30,f	;volatile
  5643                           
  5644                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  5645  0E0C  111E               	bcf	30,2	;volatile
  5646                           
  5647                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  5648  0E0D  3083               	movlw	-125
  5649  0E0E  059D               	andwf	29,f	;volatile
  5650                           
  5651                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  5652  0E0F  300F               	movlw	15
  5653  0E10  049F               	iorwf	31,f	;volatile
  5654                           
  5655                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  5656  0E11  139E               	bcf	30,7	;volatile
  5657                           
  5658                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  5659  0E12  179D               	bsf	29,7	;volatile
  5660                           
  5661                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  5662  0E13  141D               	bsf	29,0	;volatile
  5663                           
  5664                           ;launcher_functions.c: 90: ADIF = 0;
  5665  0E14  0020               	movlb	0	; select bank0
  5666  0E15  1311               	bcf	17,6	;volatile
  5667                           
  5668                           ;launcher_functions.c: 91: ADIE = 1;
  5669  0E16  0021               	movlb	1	; select bank1
  5670  0E17  1711               	bsf	17,6	;volatile
  5671                           
  5672                           ;launcher_functions.c: 92: PEIE = 1;
  5673  0E18  170B               	bsf	11,6	;volatile
  5674  0E19  0008               	return
  5675  0E1A                     __end_of_InitADC:	
  5676                           
  5677                           	psect	text25
  5678  0E1A                     __ptext25:	
  5679 ;; *************** function _Hibernate *****************
  5680 ;; Defined at:
  5681 ;;		line 501 in file "launcher_functions.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  count           1    1[BANK0 ] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;		None               void
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5695 ;;      Params:         0       0       0       0       0       0       0
  5696 ;;      Locals:         0       1       0       0       0       0       0
  5697 ;;      Temps:          0       1       0       0       0       0       0
  5698 ;;      Totals:         0       2       0       0       0       0       0
  5699 ;;Total ram usage:        2 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    2
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_main
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _Hibernate
  5711  0E1A                     _Hibernate:	
  5712                           
  5713                           ;launcher_functions.c: 503: unsigned char count = 0;
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  5717  0E1A  0020               	movlb	0	; select bank0
  5718  0E1B  01A1               	clrf	Hibernate@count
  5719                           
  5720                           ;launcher_functions.c: 504: WDTCONbits.WDTPS = 14;
  5721  0E1C  0021               	movlb	1	; select bank1
  5722  0E1D  0817               	movf	23,w	;volatile
  5723  0E1E  39C1               	andlw	-63
  5724  0E1F  381C               	iorlw	28
  5725  0E20  0097               	movwf	23	;volatile
  5726                           
  5727                           ;launcher_functions.c: 505: WDTCONbits.SWDTEN = 1;
  5728  0E21  1417               	bsf	23,0	;volatile
  5729                           
  5730                           ;launcher_functions.c: 506: while(!recordFlag && count++ < 3)
  5731  0E22  2E2D               	goto	l2353
  5732  0E23                     l2355:	
  5733  0E23  3001               	movlw	1
  5734  0E24  0020               	movlb	0	; select bank0
  5735  0E25  00A0               	movwf	??_Hibernate
  5736  0E26  0820               	movf	??_Hibernate,w
  5737  0E27  07A1               	addwf	Hibernate@count,f
  5738  0E28  3004               	movlw	4
  5739  0E29  0221               	subwf	Hibernate@count,w
  5740  0E2A  1803               	btfsc	3,0
  5741  0E2B  2E31               	goto	l406
  5742  0E2C  0063               	sleep	;# 
  5743  0E2D                     l2353:	
  5744  0E2D  0021               	movlb	1	; select bank1
  5745  0E2E  08DD               	movf	_recordFlag^(0+128),f
  5746  0E2F  1903               	btfsc	3,2
  5747  0E30  2E23               	goto	l2355
  5748  0E31                     l406:	
  5749                           
  5750                           ;launcher_functions.c: 509: }
  5751                           ;launcher_functions.c: 510: WDTCONbits.SWDTEN = 0;
  5752  0E31  0021               	movlb	1	; select bank1
  5753  0E32  1017               	bcf	23,0	;volatile
  5754  0E33  0008               	return
  5755  0E34                     __end_of_Hibernate:	
  5756                           
  5757                           	psect	text26
  5758  0D85                     __ptext26:	
  5759 ;; *************** function _GoToSleep *****************
  5760 ;; Defined at:
  5761 ;;		line 493 in file "launcher_functions.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  count           1    wreg     unsigned char 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  count           1    1[BANK0 ] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;		None               void
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5775 ;;      Params:         0       0       0       0       0       0       0
  5776 ;;      Locals:         0       1       0       0       0       0       0
  5777 ;;      Temps:          0       1       0       0       0       0       0
  5778 ;;      Totals:         0       2       0       0       0       0       0
  5779 ;;Total ram usage:        2 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    2
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _GoToSleep
  5791  0D85                     _GoToSleep:	
  5792                           
  5793                           ;incstack = 0
  5794                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  5795                           ;GoToSleep@count stored from wreg
  5796  0D85  0020               	movlb	0	; select bank0
  5797  0D86  00A1               	movwf	GoToSleep@count
  5798                           
  5799                           ;launcher_functions.c: 495: WDTCONbits.WDTPS = count;
  5800  0D87  0821               	movf	GoToSleep@count,w
  5801  0D88  00A0               	movwf	??_GoToSleep
  5802  0D89  0DA0               	rlf	??_GoToSleep,f
  5803  0D8A  0021               	movlb	1	; select bank1
  5804  0D8B  0817               	movf	23,w	;volatile
  5805  0D8C  0020               	movlb	0	; select bank0
  5806  0D8D  0620               	xorwf	??_GoToSleep,w
  5807  0D8E  39C1               	andlw	-63
  5808  0D8F  0620               	xorwf	??_GoToSleep,w
  5809  0D90  0021               	movlb	1	; select bank1
  5810  0D91  0097               	movwf	23	;volatile
  5811                           
  5812                           ;launcher_functions.c: 496: WDTCONbits.SWDTEN = 1;
  5813  0D92  1417               	bsf	23,0	;volatile
  5814  0D93  0063               	sleep	;# 
  5815                           
  5816                           ;launcher_functions.c: 498: WDTCONbits.SWDTEN = 0;
  5817  0D94  0021               	movlb	1	; select bank1
  5818  0D95  1017               	bcf	23,0	;volatile
  5819  0D96  0008               	return
  5820  0D97                     __end_of_GoToSleep:	
  5821                           
  5822                           	psect	intentry
  5823  0004                     __pintentry:	
  5824 ;; *************** function _isr *****************
  5825 ;; Defined at:
  5826 ;;		line 88 in file "launcher_main.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;		None               void
  5833 ;; Registers used:
  5834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5840 ;;      Params:         0       0       0       0       0       0       0
  5841 ;;      Locals:         2       0       0       0       0       0       0
  5842 ;;      Temps:          5       0       0       0       0       0       0
  5843 ;;      Totals:         7       0       0       0       0       0       0
  5844 ;;Total ram usage:        7 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    1
  5847 ;; This function calls:
  5848 ;;		_WriteBuffer
  5849 ;; This function is called by:
  5850 ;;		Interrupt level 1
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854  0004                     _isr:	
  5855                           
  5856                           ;incstack = 0
  5857                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5858  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5859  0005  3180               	pagesel	$
  5860  0006  0020               	movlb	0	; select bank0
  5861  0007  087F               	movf	127,w
  5862  0008  00F6               	movwf	??_isr+4
  5863                           
  5864                           ;launcher_main.c: 91: if (PIR1bits.RCIF)
  5865  0009  1E91               	btfss	17,5	;volatile
  5866  000A  282E               	goto	i1l2447
  5867                           
  5868                           ;launcher_main.c: 92: {
  5869                           ;launcher_main.c: 94: if(OERR)
  5870  000B  0023               	movlb	3	; select bank3
  5871  000C  1C9D               	btfss	29,1	;volatile
  5872  000D  2810               	goto	i1l2435
  5873                           
  5874                           ;launcher_main.c: 95: {
  5875                           ;launcher_main.c: 96: RCSTAbits.CREN = 0;
  5876  000E  121D               	bcf	29,4	;volatile
  5877                           
  5878                           ;launcher_main.c: 97: RCSTAbits.CREN = 1;
  5879  000F  161D               	bsf	29,4	;volatile
  5880  0010                     i1l2435:	
  5881                           
  5882                           ;launcher_main.c: 98: }
  5883                           ;launcher_main.c: 99: gpsMessage[gpsIndex++] = RCREG;
  5884  0010  0819               	movf	25,w	;volatile
  5885  0011  00F2               	movwf	??_isr
  5886  0012  0021               	movlb	1	; select bank1
  5887  0013  0863               	movf	_gpsIndex^(0+128),w
  5888  0014  3E20               	addlw	_gpsMessage& (0+255)
  5889  0015  0086               	movwf	6
  5890  0016  3001               	movlw	1	; select bank2/3
  5891  0017  0087               	movwf	7
  5892  0018  0872               	movf	??_isr,w
  5893  0019  0081               	movwf	1
  5894  001A  3001               	movlw	1
  5895  001B  00F2               	movwf	??_isr
  5896  001C  0872               	movf	??_isr,w
  5897  001D  07E3               	addwf	_gpsIndex^(0+128),f	;volatile
  5898                           
  5899                           ;launcher_main.c: 100: if(gpsMessage[gpsIndex-1] == 0x0A)
  5900  001E  0863               	movf	_gpsIndex^(0+128),w
  5901  001F  3EFF               	addlw	255
  5902  0020  3E20               	addlw	_gpsMessage& (0+255)
  5903  0021  0086               	movwf	6
  5904  0022  3001               	movlw	1	; select bank2/3
  5905  0023  0087               	movwf	7
  5906  0024  0801               	movf	1,w
  5907  0025  3A0A               	xorlw	10
  5908  0026  1D03               	skipz
  5909  0027  282B               	goto	i1l2443
  5910                           
  5911                           ;launcher_main.c: 101: {
  5912                           ;launcher_main.c: 102: messageDoneFlag = 1;
  5913  0028  01FD               	clrf	_messageDoneFlag
  5914  0029  0AFD               	incf	_messageDoneFlag,f
  5915                           
  5916                           ;launcher_main.c: 103: }
  5917  002A  282C               	goto	i1l2445
  5918  002B                     i1l2443:	
  5919                           
  5920                           ;launcher_main.c: 104: else
  5921                           ;launcher_main.c: 105: {
  5922                           ;launcher_main.c: 106: messageDoneFlag = 0;
  5923  002B  01FD               	clrf	_messageDoneFlag
  5924  002C                     i1l2445:	
  5925                           
  5926                           ;launcher_main.c: 107: }
  5927                           ;launcher_main.c: 108: PIR1bits.RCIF = 0;
  5928  002C  0020               	movlb	0	; select bank0
  5929  002D  1291               	bcf	17,5	;volatile
  5930  002E                     i1l2447:	
  5931                           
  5932                           ;launcher_main.c: 109: }
  5933                           ;launcher_main.c: 112: if (TMR1IF && TMR1IE)
  5934  002E  1C11               	btfss	17,0	;volatile
  5935  002F  283D               	goto	i1l2457
  5936  0030  0021               	movlb	1	; select bank1
  5937  0031  1C11               	btfss	17,0	;volatile
  5938  0032  283D               	goto	i1l2457
  5939                           
  5940                           ;launcher_main.c: 113: {
  5941                           ;launcher_main.c: 114: TMR1H = 0xFF;
  5942  0033  30FF               	movlw	255
  5943  0034  0020               	movlb	0	; select bank0
  5944  0035  0097               	movwf	23	;volatile
  5945                           
  5946                           ;launcher_main.c: 115: TMR1L = 0xCD;
  5947  0036  30CD               	movlw	205
  5948  0037  0096               	movwf	22	;volatile
  5949                           
  5950                           ;launcher_main.c: 116: TMR1IF = 0;
  5951  0038  1011               	bcf	17,0	;volatile
  5952                           
  5953                           ;launcher_main.c: 118: if(recordFlag)
  5954  0039  0021               	movlb	1	; select bank1
  5955  003A  085D               	movf	_recordFlag^(0+128),w
  5956  003B  1D03               	skipz
  5957                           
  5958                           ;launcher_main.c: 119: {
  5959                           ;launcher_main.c: 120: ADCON0bits.ADGO = 1;
  5960  003C  149D               	bsf	29,1	;volatile
  5961  003D                     i1l2457:	
  5962                           
  5963                           ;launcher_main.c: 121: }
  5964                           ;launcher_main.c: 122: }
  5965                           ;launcher_main.c: 125: if(PIR1bits.ADIF & PIE1bits.ADIE)
  5966  003D  0021               	movlb	1	; select bank1
  5967  003E  0E11               	swapf	17,w	;volatile
  5968  003F  0C89               	rrf	9,f
  5969  0040  0C89               	rrf	9,f
  5970  0041  3901               	andlw	1
  5971  0042  00F2               	movwf	??_isr
  5972  0043  0020               	movlb	0	; select bank0
  5973  0044  0E11               	swapf	17,w	;volatile
  5974  0045  0C89               	rrf	9,f
  5975  0046  0C89               	rrf	9,f
  5976  0047  3901               	andlw	1
  5977  0048  0572               	andwf	??_isr,w
  5978  0049  1903               	btfsc	3,2
  5979  004A  287B               	goto	i1l2471
  5980                           
  5981                           ;launcher_main.c: 126: {
  5982                           ;launcher_main.c: 127: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  5983  004B  3033               	movlw	51
  5984  004C  0679               	xorwf	_end,w
  5985  004D  047A               	iorwf	_end+1,w
  5986  004E  1903               	skipnz
  5987  004F  2865               	goto	i1l2463
  5988  0050  0879               	movf	_end,w
  5989  0051  3E01               	addlw	1
  5990  0052  00F2               	movwf	??_isr
  5991  0053  3000               	movlw	0
  5992  0054  3D7A               	addwfc	_end+1,w
  5993  0055  00F3               	movwf	??_isr+1
  5994  0056  087C               	movf	_start+1,w
  5995  0057  0673               	xorwf	??_isr+1,w
  5996  0058  1D03               	skipz
  5997  0059  285C               	goto	u206_25
  5998  005A  087B               	movf	_start,w
  5999  005B  0672               	xorwf	??_isr,w
  6000  005C                     u206_25:	
  6001  005C  3000               	movlw	0
  6002  005D  1903               	skipnz
  6003  005E  3001               	movlw	1
  6004  005F  00F4               	movwf	??_isr+2
  6005  0060  01F5               	clrf	??_isr+3
  6006  0061  0874               	movf	??_isr+2,w
  6007  0062  00F7               	movwf	_isr$570
  6008  0063  0875               	movf	??_isr+3,w
  6009  0064  286F               	goto	L4
  6010  0065                     i1l2463:	
  6011  0065  087C               	movf	_start+1,w
  6012  0066  047B               	iorwf	_start,w
  6013  0067  3000               	movlw	0
  6014  0068  1903               	skipnz
  6015  0069  3001               	movlw	1
  6016  006A  00F2               	movwf	??_isr
  6017  006B  01F3               	clrf	??_isr+1
  6018  006C  0872               	movf	??_isr,w
  6019  006D  00F7               	movwf	_isr$570
  6020  006E  0873               	movf	??_isr+1,w
  6021  006F                     L4:	
  6022  006F  00F8               	movwf	_isr$570+1
  6023  0070  0878               	movf	_isr$570+1,w
  6024  0071  0477               	iorwf	_isr$570,w
  6025  0072  1D03               	skipz
  6026  0073  2879               	goto	i1l2469
  6027                           
  6028                           ;launcher_main.c: 128: {
  6029                           ;launcher_main.c: 129: WriteBuffer(ADRESH);
  6030  0074  0021               	movlb	1	; select bank1
  6031  0075  081C               	movf	28,w	;volatile
  6032  0076  318D  25D2  3180   	fcall	_WriteBuffer
  6033  0079                     i1l2469:	
  6034                           
  6035                           ;launcher_main.c: 130: }
  6036                           ;launcher_main.c: 131: PIR1bits.ADIF = 0;
  6037  0079  0020               	movlb	0	; select bank0
  6038  007A  1311               	bcf	17,6	;volatile
  6039  007B                     i1l2471:	
  6040                           
  6041                           ;launcher_main.c: 132: }
  6042                           ;launcher_main.c: 135: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6043  007B  1D8B               	btfss	11,3	;volatile
  6044  007C  28A6               	goto	i1l2485
  6045  007D  0027               	movlb	7	; select bank7
  6046  007E  1D96               	btfss	22,3	;volatile
  6047  007F  28A6               	goto	i1l2485
  6048                           
  6049                           ;launcher_main.c: 136: {
  6050                           ;launcher_main.c: 137: IOCBFbits.IOCBF3 = 0;
  6051  0080  1196               	bcf	22,3	;volatile
  6052                           
  6053                           ;launcher_main.c: 138: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6054  0081  0020               	movlb	0	; select bank0
  6055  0082  0C0D               	rrf	13,w	;volatile
  6056  0083  00F2               	movwf	??_isr
  6057  0084  0CF2               	rrf	??_isr,f
  6058  0085  0C72               	rrf	??_isr,w
  6059  0086  3901               	andlw	1
  6060  0087  00F3               	movwf	??_isr+1
  6061  0088  0027               	movlb	7	; select bank7
  6062  0089  0C14               	rrf	20,w	;volatile
  6063  008A  00F4               	movwf	??_isr+2
  6064  008B  0CF4               	rrf	??_isr+2,f
  6065  008C  0C74               	rrf	??_isr+2,w
  6066  008D  3901               	andlw	1
  6067  008E  0573               	andwf	??_isr+1,w
  6068  008F  1903               	btfsc	3,2
  6069  0090  2894               	goto	i1l2481
  6070                           
  6071                           ;launcher_main.c: 139: {
  6072                           ;launcher_main.c: 140: recordFlag = 1;
  6073  0091  0021               	movlb	1	; select bank1
  6074  0092  01DD               	clrf	_recordFlag^(0+128)
  6075  0093  0ADD               	incf	_recordFlag^(0+128),f
  6076  0094                     i1l2481:	
  6077                           
  6078                           ;launcher_main.c: 141: }
  6079                           ;launcher_main.c: 142: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6080  0094  0027               	movlb	7	; select bank7
  6081  0095  0C15               	rrf	21,w	;volatile
  6082  0096  00F2               	movwf	??_isr
  6083  0097  0CF2               	rrf	??_isr,f
  6084  0098  0C72               	rrf	??_isr,w
  6085  0099  3901               	andlw	1
  6086  009A  00F3               	movwf	??_isr+1
  6087  009B  1003               	clrc
  6088  009C  0020               	movlb	0	; select bank0
  6089  009D  1D8D               	btfss	13,3	;volatile
  6090  009E  1403               	setc
  6091  009F  3000               	movlw	0
  6092  00A0  3D09               	addwfc	9,w
  6093  00A1  0573               	andwf	??_isr+1,w
  6094  00A2  1903               	btfsc	3,2
  6095  00A3  28A6               	goto	i1l2485
  6096                           
  6097                           ;launcher_main.c: 143: {
  6098                           ;launcher_main.c: 144: recordFlag = 0;
  6099  00A4  0021               	movlb	1	; select bank1
  6100  00A5  01DD               	clrf	_recordFlag^(0+128)
  6101  00A6                     i1l2485:	
  6102                           
  6103                           ;launcher_main.c: 145: }
  6104                           ;launcher_main.c: 146: }
  6105                           ;launcher_main.c: 149: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6106  00A6  1D8B               	btfss	11,3	;volatile
  6107  00A7  28C8               	goto	i1l140
  6108  00A8  0027               	movlb	7	; select bank7
  6109  00A9  1C93               	btfss	19,1	;volatile
  6110  00AA  28C8               	goto	i1l140
  6111                           
  6112                           ;launcher_main.c: 150: {
  6113                           ;launcher_main.c: 151: IOCAFbits.IOCAF1 = 0;
  6114  00AB  1093               	bcf	19,1	;volatile
  6115                           
  6116                           ;launcher_main.c: 152: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6117  00AC  0020               	movlb	0	; select bank0
  6118  00AD  0C0C               	rrf	12,w	;volatile
  6119  00AE  3901               	andlw	1
  6120  00AF  00F2               	movwf	??_isr
  6121  00B0  0027               	movlb	7	; select bank7
  6122  00B1  0C11               	rrf	17,w	;volatile
  6123  00B2  3901               	andlw	1
  6124  00B3  0572               	andwf	??_isr,w
  6125  00B4  1903               	btfsc	3,2
  6126  00B5  28B9               	goto	i1l2495
  6127                           
  6128                           ;launcher_main.c: 153: {
  6129                           ;launcher_main.c: 154: strobeFlag = 1;
  6130  00B6  0021               	movlb	1	; select bank1
  6131  00B7  01DE               	clrf	_strobeFlag^(0+128)
  6132  00B8  0ADE               	incf	_strobeFlag^(0+128),f
  6133  00B9                     i1l2495:	
  6134                           
  6135                           ;launcher_main.c: 155: }
  6136                           ;launcher_main.c: 156: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6137  00B9  0027               	movlb	7	; select bank7
  6138  00BA  0C12               	rrf	18,w	;volatile
  6139  00BB  3901               	andlw	1
  6140  00BC  00F2               	movwf	??_isr
  6141  00BD  1003               	clrc
  6142  00BE  0020               	movlb	0	; select bank0
  6143  00BF  1C8C               	btfss	12,1	;volatile
  6144  00C0  1403               	setc
  6145  00C1  3000               	movlw	0
  6146  00C2  3D09               	addwfc	9,w
  6147  00C3  0572               	andwf	??_isr,w
  6148  00C4  1903               	btfsc	3,2
  6149  00C5  28C8               	goto	i1l140
  6150                           
  6151                           ;launcher_main.c: 157: {
  6152                           ;launcher_main.c: 158: strobeFlag = 0;
  6153  00C6  0021               	movlb	1	; select bank1
  6154  00C7  01DE               	clrf	_strobeFlag^(0+128)
  6155  00C8                     i1l140:	
  6156  00C8  0876               	movf	??_isr+4,w
  6157  00C9  0020               	movlb	0	; select bank0
  6158  00CA  00FF               	movwf	127
  6159  00CB  107E               	bcf	126,0	;clear compiler interrupt flag
  6160  00CC  0009               	retfie
  6161  00CD                     __end_of_isr:	
  6162                           
  6163                           	psect	text28
  6164  0DD2                     __ptext28:	
  6165 ;; *************** function _WriteBuffer *****************
  6166 ;; Defined at:
  6167 ;;		line 205 in file "launcher_functions.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  data            1    wreg     unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  data            1    1[COMMON] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;		None               void
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6181 ;;      Params:         0       0       0       0       0       0       0
  6182 ;;      Locals:         1       0       0       0       0       0       0
  6183 ;;      Temps:          1       0       0       0       0       0       0
  6184 ;;      Totals:         2       0       0       0       0       0       0
  6185 ;;Total ram usage:        2 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_isr
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function _WriteBuffer
  6196  0DD2                     _WriteBuffer:	
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6200                           ;WriteBuffer@data stored from wreg
  6201  0DD2  00F1               	movwf	WriteBuffer@data
  6202                           
  6203                           ;launcher_functions.c: 207: buffer[end] = data;
  6204  0DD3  0871               	movf	WriteBuffer@data,w
  6205  0DD4  00F0               	movwf	??_WriteBuffer
  6206  0DD5  0879               	movf	_end,w
  6207  0DD6  3EA0               	addlw	_buffer& (0+255)
  6208  0DD7  0086               	movwf	6
  6209  0DD8  3001               	movlw	1	; select bank3/4
  6210  0DD9  0087               	movwf	7
  6211  0DDA  0870               	movf	??_WriteBuffer,w
  6212  0DDB  0081               	movwf	1
  6213                           
  6214                           ;launcher_functions.c: 209: if (end == 51)
  6215  0DDC  3033               	movlw	51
  6216  0DDD  0679               	xorwf	_end,w
  6217  0DDE  047A               	iorwf	_end+1,w
  6218  0DDF  1D03               	skipz
  6219  0DE0  2DE4               	goto	i1l2363
  6220                           
  6221                           ;launcher_functions.c: 210: end = 0;
  6222  0DE1  01F9               	clrf	_end
  6223  0DE2  01FA               	clrf	_end+1
  6224  0DE3  0008               	return
  6225  0DE4                     i1l2363:	
  6226                           
  6227                           ;launcher_functions.c: 211: else
  6228                           ;launcher_functions.c: 212: end++;
  6229  0DE4  3001               	movlw	1
  6230  0DE5  07F9               	addwf	_end,f
  6231  0DE6  3000               	movlw	0
  6232  0DE7  3DFA               	addwfc	_end+1,f
  6233  0DE8  0008               	return
  6234  0DE9                     __end_of_WriteBuffer:	
  6235  007E                     btemp	set	126	;btemp
  6236  007E                     pic14e$flags	set	126
  6237  007E                     wtemp	set	126
  6238  007E                     wtemp0	set	126
  6239  0080                     wtemp1	set	128
  6240  0082                     wtemp2	set	130
  6241  0084                     wtemp3	set	132
  6242  0086                     wtemp4	set	134
  6243  0088                     wtemp5	set	136
  6244  007F                     wtemp6	set	127
  6245  007E                     ttemp	set	126
  6246  007E                     ttemp0	set	126
  6247  0081                     ttemp1	set	129
  6248  0084                     ttemp2	set	132
  6249  0087                     ttemp3	set	135
  6250  007F                     ttemp4	set	127
  6251  007E                     ltemp	set	126
  6252  007E                     ltemp0	set	126
  6253  0082                     ltemp1	set	130
  6254  0086                     ltemp2	set	134
  6255  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    10
    Data        55
    BSS         136
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80      4      68
    BANK2            80      0      72
    BANK3            80      0      51
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 22
		 -> SetupGPS@message(BANK0[22]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1411$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___lwdiv
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _RecordMode->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8280
                                             76 BANK0      4     0      4
                                              0 BANK1      4     4      0
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    4263
                                             40 BANK0     23    23      0
                          _DecodeGPS
                     _ToggleSleepGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           26    26      0    3130
                                             14 BANK0     26    26      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            37    37      0    2983
                                             39 BANK0     37    37      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1613
                                             20 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          13    13      0     942
                                             21 BANK0     13    13      0
                         _ReadBuffer
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     513
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (6) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _RecordMode
     _ReadBuffer
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _ToggleSleepGPS
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     11D       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      33      12       63.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     11D      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 19:44:46 2014

               DecodeGPS@latitude 003A                       _SSPSTATbits 0214               ___wmul@multiplicand 0022  
            __size_of_WriteBuffer 0017                       __CFG_LVP$ON 0000                               l107 0678  
                             l307 0DFF                               l420 04AF                               l406 0E31  
                             l326 0D4E                               l343 07EE                               l540 0E3D  
                             l285 07F4                               l279 0DB8                               l391 0381  
                             l296 0FE0                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0030                               wreg 0009  
              DecodeGPS@longitude 0040                   DisableGPS@F4914 00A0                              l2011 0234  
                            l2019 0250                              l2311 04ED                              l2063 035B  
                            l2055 033F                              l2225 0716                              l2081 0395  
                            l2073 0384                              l2065 0361                              l2401 0680  
                            l2235 0754                              l2331 0E8C                              l2411 06AD  
                            l2261 041A                              l2255 03F4                              l2087 03BD  
                            l2335 0E97                              l2423 06DD                              l2353 0E2D  
                            l2417 06D1                              l2355 0E23                              l2291 0492  
                            l2275 0453                              l1811 0F0B                              l2427 06E6  
                            l2269 042D                              l1901 0561                              l1815 0F17  
                            l1751 0F98                              l2391 0665                              l1809 0EFF  
                            l1921 05AA                              l1753 0F63                              l1835 0FCD  
                            l2299 045E                              l1819 0F20                              l1931 05C0  
                            l1915 0574                              l1755 0F9D                              l1765 0E37  
                            l2389 0662                              l1855 0DFB                              l1943 05E5  
                            l1935 05C6                              l1919 0590                              l1793 0F4E  
                            l1785 0F30                              l1961 0638                              l1787 0F3C  
                            l1797 0F57                              l1957 05F8                              l1949 05F4  
                            l1877 07AF                              l1869 07A1                              l1973 013F  
                            l1959 053D                              l1887 07B9                              l1889 07DC  
                            l1977 0150                              l1899 055F                              l1979 0160  
                            _ADIE 048E                              _ADIF 008E                              ?_isr 0070  
          __size_of_ReadStatusSPI 0011                              STR_1 080A                              STR_2 081D  
                            STR_3 082F                              u1225 0F33                              u1315 0F11  
                            u1155 0F6D                              u1245 0F3D                              u1325 0F18  
                            u1255 0F47                              u2207 0ED3                              u1345 0FAB  
                            u1265 0F4F                              u1425 07C9                              u1185 0E3E  
                            u2217 0EE2                              u1355 0FBF                              u1195 0E43  
                            u2227 0EF0                              u1540 0112                              u2237 071D  
                            u1550 0120                              u1295 0F02                              u2247 075B  
                            u1560 012E                              u2257 04B9                              u1705 0714  
                            u1803 04DD                              u1395 078F                              u1715 0752  
                            u1725 03F2                              u2197 0670                              u1815 04FD  
                            u1735 0418                              u1495 05DB                              u1575 013D  
                            u1840 0E7E                              u1825 0512                              u1745 042B  
                            u1690 06F5                              u1835 0527                              u1755 0451  
                            u1675 0393                              u1595 015E                              u1765 0480  
                            u1685 03BB                              u1790 04AE                              u1775 0498  
                            u1793 0475                              _PEIE 005E                              _RCIE 048D  
                            _OERR 0CE9                              _main 063D                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E                              start 00CD                              ttemp 007E  
                            wtemp 007E                     __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020  
                 __end_of_InitADC 0E1A                   __end_of_InitCLK 0D4C                   __end_of_InitSPI 0DA9  
                 __end_of_ReadSPI 07FE                ??_compute_checksum 0022                             ??_isr 0072  
                   ?_InitWatchdog 0070             ReadStatusSPI@dataRead 0026                             ?_main 006C  
                           _LATC2 0872                             _IOCAF 0393                             _IOCBF 0396  
                 __end_of___lwdiv 0F5E                             i1l140 00C8                   __end_of___lwmod 0F27  
                           _RCREG 0199                             _TMR1H 0017                             _TMR1L 0016  
                           _TXREG 019A                 RecordMode@address 003C                   __end_of_dpowers 080A  
             DecodeGPS@northSouth 0037                             _start 007B                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                   __end_of_sprintf 063D  
          uart_write_message@data 0034            uart_write_message@size 0028                        _ReadBuffer 0DE9  
                 __initialization 00CF                        _InitTimer1 0D56                 ?_WriteOverheadSPI 0027  
                    __end_of_main 06EA                __size_of_DecodeGPS 02C3                  __end_of_InitGPIO 0ECB  
                  ??_InitWatchdog 0020                     _ReadStatusSPI 0D74                ??_WriteOverheadSPI 002B  
uart_write_message@ascii_checksum 0035                            ??_main 00DF                __size_of_GoToSleep 0012  
                 ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 077C  
   WriteOverheadSPI@address_bytes 0031                __size_of_Hibernate 001A                        _RecordMode 03CA  
                          _ADRESH 009C                  __end_of_WriteSPI 0DBC                            i1l2363 0DE4  
                          i1l2443 002B                            i1l2435 0010                            i1l2445 002C  
                          i1l2463 0065                            i1l2471 007B                            i1l2447 002E  
                          i1l2481 0094                            i1l2457 003D                            i1l2485 00A6  
                          i1l2469 0079                            i1l2495 00B9                            u206_25 005C  
                          _TMR1IE 0488                            _TMR1IF 0088                            _SPBRGH 019C  
                          _TMR1ON 00C0                            _SPBRGL 019B                            _SSPBUF 0211  
                       ??_InitADC 0020                         ??_InitCLK 0020                         ??_InitSPI 0020  
                       ??_ReadSPI 0020                    ?_ReadStatusSPI 0070                            ___wmul 0E34  
                __end_of_initUART 0D74                         ??___lwdiv 002A                         ??___lwmod 0032  
                          _buffer 01A0       __size_of_uart_write_message 0076                __size_of_UpdateGPS 002B  
                     RecordMode@x 0040               main@periodicCounter 00E2                 __end_of_DecodeGPS 03CA  
                       ??_sprintf 003A                    _gpsInvalidFlag 00BE           __end_of__initialization 0103  
               __end_of_GoToSleep 0D97                       ?_ReadBuffer 0070                 __end_of_Hibernate 0E34  
                     ?_InitTimer1 0070                    __pcstackCOMMON 0070                      __pidataBANK1 0E52  
                    __pidataBANK2 0DBC                      WriteSPI@temp 0022                       ?_RecordMode 0070  
            __end_of_InitWatchdog 0D44                        __pbssBANK1 00C1                        __pbssBANK2 0120  
                      __pbssBANK3 01A0                         ?_InitGPIO 0070                   SetupGPS@message 004A  
                 ??_ReadStatusSPI 0025                 __end_of_UpdateGPS 0E9E                        __pmaintext 063D  
                       ?_SetupGPS 0070                           ?___wmul 0020                     ??_WriteBuffer 0070  
                      __pintentry 0004                    _validLongitude 00D3         UpdateGPS@GPSupdateMessage 0049  
                       ?_WriteSPI 0070                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                       ?_initUART 0070                           _InitADC 0E01                           _InitCLK 0D44  
                         _InitSPI 0D97                        _gpsMessage 0120           __size_of_ToggleSleepGPS 002D  
                         _ReadSPI 07F2                       SetupGPS@MID 0066                        ??_SetupGPS 0047  
             __size_of_RecordMode 016D                   __size_of___wmul 001E                           ___lwdiv 0F27  
                         ___lwmod 0EF8                           _isr$570 0077                        ??_WriteSPI 0020  
                         __ptext1 0D65                           __ptext2 0E73                           __ptext3 0ECB  
                         __ptext4 0107                           __ptext5 0E34                           __ptext6 06EA  
                         __ptext7 077C                           __ptext8 0D4C                           __ptext9 0F5E  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0DE9  
                    __size_of_isr 00C9                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 00DD  
                         _sprintf 0537                           clrloop0 0D38              end_of_initialization 0103  
                      ??_initUART 0020                           init_ram 0D31                           initloop 0D32  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0D56                         _RCSTAbits 019D  
                WriteSPI@databyte 0024                      __pstringtext 0800                         _PORTAbits 000C  
                       _PORTBbits 000D                         _PORTCbits 000E                    Hibernate@count 0021  
                __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E           WriteOverheadSPI@address 0027  
                 DecodeGPS@status 0039              uart_xmit@mydata_byte 0020                         _DecodeGPS 0107  
                       _TXSTAbits 019E                      ??_ReadBuffer 0020                        _strobeFlag 00DE  
                    ??_InitTimer1 0020                         _GoToSleep 0D85                       _WriteBuffer 0DD2  
                  __end_of___wmul 0E52        __end_of_uart_write_message 07F2                         _Hibernate 0E1A  
                    _InitWatchdog 0D3D                     SetupGPS@F4917 00B4                     SetupGPS@F4919 00BA  
             start_initialization 00CF                  _compute_checksum 0F5E         WriteOverheadSPI@StatusReg 0034  
                    ??_RecordMode 0035                       __end_of_isr 00CD                __end_of_ReadBuffer 0E01  
               compute_checksum@x 0026                __end_of_InitTimer1 0D65                        ?_DecodeGPS 0070  
                  _ToggleSleepGPS 0ECB                 __size_of_InitGPIO 002D                         SetupGPS@x 006A  
            compute_checksum@data 0025                        ?_GoToSleep 0070              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 0537                       __pdataBANK1 00A0  
                     __pdataBANK2 0152                 __size_of_SetupGPS 0092                         _UpdateGPS 0E73  
                      ?_Hibernate 0070          compute_checksum@checksum 0024                 __size_of_WriteSPI 0013  
                     __pbssCOMMON 0079                         ___latbits 0001                     __pcstackBANK0 0020  
                   __pcstackBANK1 00DF                  _WriteOverheadSPI 0FA0               __end_of__stringdata 0836  
             uart_write_message@x 0031                     _validEastWest 00BF            __end_of_ToggleSleepGPS 0EF8  
                 _messageDoneFlag 007D                       sprintf@_val 0042                       sprintf@flag 003E  
                     sprintf@prec 003F                          ?_InitADC 0070                          ?_InitCLK 0070  
                        ?_InitSPI 0070                 __size_of_initUART 000F                          ?_ReadSPI 0070  
                       __pnvBANK1 00E3                     _validLatitude 00CD                  ___lwdiv@dividend 0028  
           __end_of_ReadStatusSPI 0D85                          ?___lwdiv 0026                          ?___lwmod 002E  
                      ?_UpdateGPS 0070                    UpdateGPS@F4924 0152                  __CFG_WDTE$SWDTEN 0000  
                ___lwdiv@quotient 002B                          ?_sprintf 0034        uart_write_message@checksum 0033  
                 ?_ToggleSleepGPS 0070                   _validNorthSouth 00C0                       ??_DecodeGPS 002E  
                  ___wmul@product 0024                          _LATBbits 010D                         clear_ram0 0D37  
                        _PIE1bits 0091                    DecodeGPS@F4930 00C7                    DecodeGPS@F4926 00AD  
                  DecodeGPS@F4928 00C1                          _PIR1bits 0011                       ??_GoToSleep 0020  
                       _uart_xmit 0D4C                       ??_Hibernate 0020                        _ADCON0bits 009D  
                      _ADCON1bits 009E                       __stringdata 080A                        _ADCON2bits 009F  
               ___wmul@multiplier 0020                   RecordMode@count 003A                          _InitGPIO 0E9E  
                __size_of_InitADC 0019                  __size_of_InitCLK 0008                  __size_of_InitSPI 0012  
                __size_of_ReadSPI 000C          __end_of_compute_checksum 0FA0             SetupGPS@startSequence 0060  
                        _SetupGPS 06EA                        ?_uart_xmit 0070                      ?_WriteBuffer 0070  
                     ??_UpdateGPS 0048                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
                        _WriteSPI 0DA9           _uart_write_message$1353 002D           _uart_write_message$1354 002F  
                      _ANSELAbits 018C                        _ANSELBbits 018D               ReadBuffer@read_data 0021  
                 ___lwdiv@divisor 0026                   ___lwdiv@counter 002D                          __ptext10 0537  
                        __ptext11 0EF8                          __ptext20 0D56                          __ptext12 0F27  
                        __ptext21 0D97                          __ptext13 03CA                        _T1GCONbits 0019  
                        __ptext22 0E9E                          __ptext14 0FA0                          __ptext23 0D44  
                        __ptext15 0D74                          __ptext24 0E01                          __ptext16 0DA9  
                        __ptext25 0E1A                          __ptext17 07F2                          __ptext26 0D85  
                        __ptext18 0DE9                          __ptext19 0D3D                          __ptext28 0DD2  
              _uart_write_message 077C                  __size_of_sprintf 0106                          _gpsIndex 00E3  
                        _initUART 0D65                     __size_of_main 00AD               ?_uart_write_message 0028  
                      DecodeGPS@x 0046          __end_of_WriteOverheadSPI 1000                    GoToSleep@count 0021  
                        main@argc 006C                          main@argv 006E              ??_uart_write_message 002A  
                      _INTCONbits 000B                       pic14e$flags 007E                          intlevel1 0000  
                       sprintf@ap 0040                         sprintf@sp 0041                  ___lwmod@dividend 0030  
               __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099                       ??_uart_xmit 0020  
                        sprintf@c 0046                          sprintf@f 0034                   ___lwmod@divisor 002E  
                 ___lwmod@counter 0033                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                   _recordEndAdress 00D9                 DecodeGPS@eastWest 0038  
