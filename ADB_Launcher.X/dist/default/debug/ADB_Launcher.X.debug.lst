

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 30 22:20:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0094                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  011E                     	;# 
   117  011F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0197                     	;# 
   130  0199                     	;# 
   131  0199                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019A                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019D                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019E                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020D                     	;# 
   157  020E                     	;# 
   158  0210                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  028C                     	;# 
   175  028D                     	;# 
   176  028E                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  0390                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  0397                     	;# 
   199  0398                     	;# 
   200  0399                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0511                     	;# 
   205  0513                     	;# 
   206  051A                     	;# 
   207  0811                     	;# 
   208  0812                     	;# 
   209  0813                     	;# 
   210  0814                     	;# 
   211  0815                     	;# 
   212  0816                     	;# 
   213  0817                     	;# 
   214  0818                     	;# 
   215  0819                     	;# 
   216  081A                     	;# 
   217  081B                     	;# 
   218  081C                     	;# 
   219  081D                     	;# 
   220  081E                     	;# 
   221  081F                     	;# 
   222  0820                     	;# 
   223  0821                     	;# 
   224  0821                     	;# 
   225  0822                     	;# 
   226  0823                     	;# 
   227  0823                     	;# 
   228  0824                     	;# 
   229  0825                     	;# 
   230  0825                     	;# 
   231  0826                     	;# 
   232  0827                     	;# 
   233  0827                     	;# 
   234  0828                     	;# 
   235  0829                     	;# 
   236  082A                     	;# 
   237  082B                     	;# 
   238  082C                     	;# 
   239  082D                     	;# 
   240  082E                     	;# 
   241  082F                     	;# 
   242  0831                     	;# 
   243  0832                     	;# 
   244  0833                     	;# 
   245  0834                     	;# 
   246  0835                     	;# 
   247  0836                     	;# 
   248  0837                     	;# 
   249  0838                     	;# 
   250  0839                     	;# 
   251  083A                     	;# 
   252  083B                     	;# 
   253  083C                     	;# 
   254  083D                     	;# 
   255  083E                     	;# 
   256  083F                     	;# 
   257  0840                     	;# 
   258  0841                     	;# 
   259  0841                     	;# 
   260  0842                     	;# 
   261  0843                     	;# 
   262  0843                     	;# 
   263  0844                     	;# 
   264  0845                     	;# 
   265  0845                     	;# 
   266  0846                     	;# 
   267  0847                     	;# 
   268  0847                     	;# 
   269  0848                     	;# 
   270  0849                     	;# 
   271  084A                     	;# 
   272  084B                     	;# 
   273  084C                     	;# 
   274  084D                     	;# 
   275  084E                     	;# 
   276  084F                     	;# 
   277  0FE4                     	;# 
   278  0FE5                     	;# 
   279  0FE6                     	;# 
   280  0FE7                     	;# 
   281  0FE8                     	;# 
   282  0FE9                     	;# 
   283  0FEA                     	;# 
   284  0FEB                     	;# 
   285  0FED                     	;# 
   286  0FEE                     	;# 
   287  0FEF                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  008E                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0094                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  0111                     	;# 
   339  0112                     	;# 
   340  0113                     	;# 
   341  0114                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011D                     	;# 
   348  011D                     	;# 
   349  011E                     	;# 
   350  011F                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0194                     	;# 
   360  0195                     	;# 
   361  0196                     	;# 
   362  0199                     	;# 
   363  0199                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019A                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019D                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019E                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  019F                     	;# 
   386  019F                     	;# 
   387  020C                     	;# 
   388  020D                     	;# 
   389  020E                     	;# 
   390  0210                     	;# 
   391  0211                     	;# 
   392  0211                     	;# 
   393  0212                     	;# 
   394  0212                     	;# 
   395  0213                     	;# 
   396  0213                     	;# 
   397  0214                     	;# 
   398  0214                     	;# 
   399  0215                     	;# 
   400  0215                     	;# 
   401  0215                     	;# 
   402  0216                     	;# 
   403  0216                     	;# 
   404  0217                     	;# 
   405  0217                     	;# 
   406  028C                     	;# 
   407  028D                     	;# 
   408  028E                     	;# 
   409  0291                     	;# 
   410  0291                     	;# 
   411  0292                     	;# 
   412  0293                     	;# 
   413  0298                     	;# 
   414  0298                     	;# 
   415  0299                     	;# 
   416  029A                     	;# 
   417  030C                     	;# 
   418  030D                     	;# 
   419  030E                     	;# 
   420  038C                     	;# 
   421  038D                     	;# 
   422  038E                     	;# 
   423  0390                     	;# 
   424  0391                     	;# 
   425  0392                     	;# 
   426  0393                     	;# 
   427  0394                     	;# 
   428  0395                     	;# 
   429  0396                     	;# 
   430  0397                     	;# 
   431  0398                     	;# 
   432  0399                     	;# 
   433  039D                     	;# 
   434  039E                     	;# 
   435  039F                     	;# 
   436  0511                     	;# 
   437  0513                     	;# 
   438  051A                     	;# 
   439  0811                     	;# 
   440  0812                     	;# 
   441  0813                     	;# 
   442  0814                     	;# 
   443  0815                     	;# 
   444  0816                     	;# 
   445  0817                     	;# 
   446  0818                     	;# 
   447  0819                     	;# 
   448  081A                     	;# 
   449  081B                     	;# 
   450  081C                     	;# 
   451  081D                     	;# 
   452  081E                     	;# 
   453  081F                     	;# 
   454  0820                     	;# 
   455  0821                     	;# 
   456  0821                     	;# 
   457  0822                     	;# 
   458  0823                     	;# 
   459  0823                     	;# 
   460  0824                     	;# 
   461  0825                     	;# 
   462  0825                     	;# 
   463  0826                     	;# 
   464  0827                     	;# 
   465  0827                     	;# 
   466  0828                     	;# 
   467  0829                     	;# 
   468  082A                     	;# 
   469  082B                     	;# 
   470  082C                     	;# 
   471  082D                     	;# 
   472  082E                     	;# 
   473  082F                     	;# 
   474  0831                     	;# 
   475  0832                     	;# 
   476  0833                     	;# 
   477  0834                     	;# 
   478  0835                     	;# 
   479  0836                     	;# 
   480  0837                     	;# 
   481  0838                     	;# 
   482  0839                     	;# 
   483  083A                     	;# 
   484  083B                     	;# 
   485  083C                     	;# 
   486  083D                     	;# 
   487  083E                     	;# 
   488  083F                     	;# 
   489  0840                     	;# 
   490  0841                     	;# 
   491  0841                     	;# 
   492  0842                     	;# 
   493  0843                     	;# 
   494  0843                     	;# 
   495  0844                     	;# 
   496  0845                     	;# 
   497  0845                     	;# 
   498  0846                     	;# 
   499  0847                     	;# 
   500  0847                     	;# 
   501  0848                     	;# 
   502  0849                     	;# 
   503  084A                     	;# 
   504  084B                     	;# 
   505  084C                     	;# 
   506  084D                     	;# 
   507  084E                     	;# 
   508  084F                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0014                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  008C                     	;# 
   549  008D                     	;# 
   550  008E                     	;# 
   551  0090                     	;# 
   552  0091                     	;# 
   553  0092                     	;# 
   554  0094                     	;# 
   555  0095                     	;# 
   556  0096                     	;# 
   557  0097                     	;# 
   558  0098                     	;# 
   559  0099                     	;# 
   560  009A                     	;# 
   561  009B                     	;# 
   562  009B                     	;# 
   563  009C                     	;# 
   564  009D                     	;# 
   565  009E                     	;# 
   566  009F                     	;# 
   567  010C                     	;# 
   568  010D                     	;# 
   569  010E                     	;# 
   570  0111                     	;# 
   571  0112                     	;# 
   572  0113                     	;# 
   573  0114                     	;# 
   574  0115                     	;# 
   575  0116                     	;# 
   576  0117                     	;# 
   577  0118                     	;# 
   578  0119                     	;# 
   579  011D                     	;# 
   580  011D                     	;# 
   581  011E                     	;# 
   582  011F                     	;# 
   583  018C                     	;# 
   584  018D                     	;# 
   585  0191                     	;# 
   586  0191                     	;# 
   587  0192                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0193                     	;# 
   591  0194                     	;# 
   592  0195                     	;# 
   593  0196                     	;# 
   594  0199                     	;# 
   595  0199                     	;# 
   596  0199                     	;# 
   597  019A                     	;# 
   598  019A                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019C                     	;# 
   606  019C                     	;# 
   607  019C                     	;# 
   608  019D                     	;# 
   609  019D                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019E                     	;# 
   613  019E                     	;# 
   614  019F                     	;# 
   615  019F                     	;# 
   616  019F                     	;# 
   617  019F                     	;# 
   618  019F                     	;# 
   619  020C                     	;# 
   620  020D                     	;# 
   621  020E                     	;# 
   622  0210                     	;# 
   623  0211                     	;# 
   624  0211                     	;# 
   625  0212                     	;# 
   626  0212                     	;# 
   627  0213                     	;# 
   628  0213                     	;# 
   629  0214                     	;# 
   630  0214                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  028C                     	;# 
   639  028D                     	;# 
   640  028E                     	;# 
   641  0291                     	;# 
   642  0291                     	;# 
   643  0292                     	;# 
   644  0293                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  030C                     	;# 
   650  030D                     	;# 
   651  030E                     	;# 
   652  038C                     	;# 
   653  038D                     	;# 
   654  038E                     	;# 
   655  0390                     	;# 
   656  0391                     	;# 
   657  0392                     	;# 
   658  0393                     	;# 
   659  0394                     	;# 
   660  0395                     	;# 
   661  0396                     	;# 
   662  0397                     	;# 
   663  0398                     	;# 
   664  0399                     	;# 
   665  039D                     	;# 
   666  039E                     	;# 
   667  039F                     	;# 
   668  0511                     	;# 
   669  0513                     	;# 
   670  051A                     	;# 
   671  0811                     	;# 
   672  0812                     	;# 
   673  0813                     	;# 
   674  0814                     	;# 
   675  0815                     	;# 
   676  0816                     	;# 
   677  0817                     	;# 
   678  0818                     	;# 
   679  0819                     	;# 
   680  081A                     	;# 
   681  081B                     	;# 
   682  081C                     	;# 
   683  081D                     	;# 
   684  081E                     	;# 
   685  081F                     	;# 
   686  0820                     	;# 
   687  0821                     	;# 
   688  0821                     	;# 
   689  0822                     	;# 
   690  0823                     	;# 
   691  0823                     	;# 
   692  0824                     	;# 
   693  0825                     	;# 
   694  0825                     	;# 
   695  0826                     	;# 
   696  0827                     	;# 
   697  0827                     	;# 
   698  0828                     	;# 
   699  0829                     	;# 
   700  082A                     	;# 
   701  082B                     	;# 
   702  082C                     	;# 
   703  082D                     	;# 
   704  082E                     	;# 
   705  082F                     	;# 
   706  0831                     	;# 
   707  0832                     	;# 
   708  0833                     	;# 
   709  0834                     	;# 
   710  0835                     	;# 
   711  0836                     	;# 
   712  0837                     	;# 
   713  0838                     	;# 
   714  0839                     	;# 
   715  083A                     	;# 
   716  083B                     	;# 
   717  083C                     	;# 
   718  083D                     	;# 
   719  083E                     	;# 
   720  083F                     	;# 
   721  0840                     	;# 
   722  0841                     	;# 
   723  0841                     	;# 
   724  0842                     	;# 
   725  0843                     	;# 
   726  0843                     	;# 
   727  0844                     	;# 
   728  0845                     	;# 
   729  0845                     	;# 
   730  0846                     	;# 
   731  0847                     	;# 
   732  0847                     	;# 
   733  0848                     	;# 
   734  0849                     	;# 
   735  084A                     	;# 
   736  084B                     	;# 
   737  084C                     	;# 
   738  084D                     	;# 
   739  084E                     	;# 
   740  084F                     	;# 
   741  0FE4                     	;# 
   742  0FE5                     	;# 
   743  0FE6                     	;# 
   744  0FE7                     	;# 
   745  0FE8                     	;# 
   746  0FE9                     	;# 
   747  0FEA                     	;# 
   748  0FEB                     	;# 
   749  0FED                     	;# 
   750  0FEE                     	;# 
   751  0FEF                     	;# 
   752                           
   753                           	psect	idataBANK1
   754  0C99                     __pidataBANK1:	
   755                           
   756                           ;initializer for _validLatitude
   757  0C99  3428               	retlw	40
   758  0C9A  3419               	retlw	25
   759  0C9B  3414               	retlw	20
   760                           
   761                           ;initializer for _validLongitude
   762  0C9C  3456               	retlw	86
   763  0C9D  3444               	retlw	68
   764  0C9E  3414               	retlw	20
   765                           
   766                           ;initializer for _gpsInvalidFlag
   767  0C9F  3401               	retlw	1
   768                           
   769                           ;initializer for _validEastWest
   770  0CA0  3445               	retlw	69
   771                           
   772                           ;initializer for _validNorthSouth
   773  0CA1  344E               	retlw	78
   774                           
   775                           	psect	idataBANK2
   776  0CE7                     __pidataBANK2:	
   777                           
   778                           ;initializer for DecodeGPS@F4931
   779  0CE7  3424               	retlw	36
   780  0CE8  3447               	retlw	71
   781  0CE9  3450               	retlw	80
   782  0CEA  3447               	retlw	71
   783  0CEB  344C               	retlw	76
   784  0CEC  344C               	retlw	76
   785  0CED  3400               	retlw	0
   786                           
   787                           ;initializer for SetupGPS@F4920
   788  0CEE  3424               	retlw	36
   789  0CEF  3450               	retlw	80
   790  0CF0  3453               	retlw	83
   791  0CF1  3452               	retlw	82
   792  0CF2  3446               	retlw	70
   793  0CF3  3400               	retlw	0
   794                           
   795                           ;initializer for SetupGPS@F4922
   796  0CF4  3431               	retlw	49
   797  0CF5  3430               	retlw	48
   798  0CF6  3433               	retlw	51
   799  0CF7  3400               	retlw	0
   800                           
   801                           	psect	idataBANK3
   802  0DC1                     __pidataBANK3:	
   803                           
   804                           ;initializer for UpdateGPS@F4928
   805  0DC1  3424               	retlw	36
   806  0DC2  3450               	retlw	80
   807  0DC3  3453               	retlw	83
   808  0DC4  3452               	retlw	82
   809  0DC5  3446               	retlw	70
   810  0DC6  3431               	retlw	49
   811  0DC7  3430               	retlw	48
   812  0DC8  3433               	retlw	51
   813  0DC9  342C               	retlw	44
   814  0DCA  3430               	retlw	48
   815  0DCB  3431               	retlw	49
   816  0DCC  342C               	retlw	44
   817  0DCD  3430               	retlw	48
   818  0DCE  3431               	retlw	49
   819  0DCF  342C               	retlw	44
   820  0DD0  3430               	retlw	48
   821  0DD1  3431               	retlw	49
   822  0DD2  342C               	retlw	44
   823  0DD3  3430               	retlw	48
   824  0DD4  3430               	retlw	48
   825  0DD5  342A               	retlw	42
   826  0DD6  3400               	retlw	0
   827                           
   828                           ;initializer for DisableGPS@F4917
   829  0DD7  3424               	retlw	36
   830  0DD8  3450               	retlw	80
   831  0DD9  3453               	retlw	83
   832  0DDA  3452               	retlw	82
   833  0DDB  3446               	retlw	70
   834  0DDC  3431               	retlw	49
   835  0DDD  3431               	retlw	49
   836  0DDE  3437               	retlw	55
   837  0DDF  342C               	retlw	44
   838  0DE0  3431               	retlw	49
   839  0DE1  3436               	retlw	54
   840  0DE2  342A               	retlw	42
   841  0DE3  3400               	retlw	0
   842                           
   843                           	psect	stringtext
   844  0800                     __pstringtext:	
   845  0800                     _dpowers:	
   846  0800  3401               	retlw	1
   847  0801  3400               	retlw	0
   848  0802  340A               	retlw	10
   849  0803  3400               	retlw	0
   850  0804  3464               	retlw	100
   851  0805  3400               	retlw	0
   852  0806  34E8               	retlw	232
   853  0807  3403               	retlw	3
   854  0808  3410               	retlw	16
   855  0809  3427               	retlw	39
   856  080A                     __end_of_dpowers:	
   857  000B                     _INTCONbits	set	11
   858  0011                     _PIR1bits	set	17
   859  000C                     _PORTAbits	set	12
   860  000D                     _PORTBbits	set	13
   861  000E                     _PORTCbits	set	14
   862  0018                     _T1CONbits	set	24
   863  0019                     _T1GCONbits	set	25
   864  0017                     _TMR1H	set	23
   865  0016                     _TMR1L	set	22
   866  008E                     _ADIF	set	142
   867  005F                     _GIE	set	95
   868  005E                     _PEIE	set	94
   869  0088                     _TMR1IF	set	136
   870  00C0                     _TMR1ON	set	192
   871  009D                     _ADCON0bits	set	157
   872  009E                     _ADCON1bits	set	158
   873  009F                     _ADCON2bits	set	159
   874  009C                     _ADRESH	set	156
   875  0099                     _OSCCONbits	set	153
   876  0091                     _PIE1bits	set	145
   877  008C                     _TRISAbits	set	140
   878  008D                     _TRISBbits	set	141
   879  008E                     _TRISCbits	set	142
   880  0097                     _WDTCONbits	set	151
   881  048E                     _ADIE	set	1166
   882  048D                     _RCIE	set	1165
   883  0488                     _TMR1IE	set	1160
   884  010D                     _LATBbits	set	269
   885  0872                     _LATC2	set	2162
   886  018C                     _ANSELAbits	set	396
   887  018D                     _ANSELBbits	set	397
   888  0199                     _RCREG	set	409
   889  019D                     _RCSTAbits	set	413
   890  019C                     _SPBRGH	set	412
   891  019B                     _SPBRGL	set	411
   892  019A                     _TXREG	set	410
   893  019E                     _TXSTAbits	set	414
   894  0CE9                     _OERR	set	3305
   895  0211                     _SSPBUF	set	529
   896  0215                     _SSPCON1bits	set	533
   897  0214                     _SSPSTATbits	set	532
   898  0393                     _IOCAF	set	915
   899  0393                     _IOCAFbits	set	915
   900  0392                     _IOCANbits	set	914
   901  0391                     _IOCAPbits	set	913
   902  0396                     _IOCBF	set	918
   903  0396                     _IOCBFbits	set	918
   904  0395                     _IOCBNbits	set	917
   905  0394                     _IOCBPbits	set	916
   906  080A                     __stringdata:	
   907  080A                     STR_2:	
   908  080A  3425               	retlw	37	;'%'
   909  080B  3473               	retlw	115	;'s'
   910  080C  3431               	retlw	49	;'1'
   911  080D  3430               	retlw	48	;'0'
   912  080E  3434               	retlw	52	;'4'
   913  080F  342C               	retlw	44	;','
   914  0810  3434               	retlw	52	;'4'
   915  0811  3430               	retlw	48	;'0'
   916  0812  342E               	retlw	46	;'.'
   917  0813  3434               	retlw	52	;'4'
   918  0814  3434               	retlw	52	;'4'
   919  0815  3431               	retlw	49	;'1'
   920  0816  3439               	retlw	57	;'9'
   921  0817  3434               	retlw	52	;'4'
   922  0818  3434               	retlw	52	;'4'
   923  0819  342C               	retlw	44	;','
   924  081A  342D               	retlw	45	;'-'
   925  081B  3438               	retlw	56	;'8'
   926  081C  3436               	retlw	54	;'6'
   927  081D  342E               	retlw	46	;'.'
   928  081E  3439               	retlw	57	;'9'
   929  081F  3431               	retlw	49	;'1'
   930  0820  3432               	retlw	50	;'2'
   931  0821  3435               	retlw	53	;'5'
   932  0822  342C               	retlw	44	;','
   933  0823  3430               	retlw	48	;'0'
   934  0824  342C               	retlw	44	;','
   935  0825  3430               	retlw	48	;'0'
   936  0826  342C               	retlw	44	;','
   937  0827  3430               	retlw	48	;'0'
   938  0828  342C               	retlw	44	;','
   939  0829  3430               	retlw	48	;'0'
   940  082A  342C               	retlw	44	;','
   941  082B  3431               	retlw	49	;'1'
   942  082C  3432               	retlw	50	;'2'
   943  082D  342C               	retlw	44	;','
   944  082E  3432               	retlw	50	;'2'
   945  082F  342A               	retlw	42	;'*'
   946  0830  3400               	retlw	0
   947  0831                     STR_1:	
   948  0831  3425               	retlw	37	;'%'
   949  0832  3473               	retlw	115	;'s'
   950  0833  3425               	retlw	37	;'%'
   951  0834  3473               	retlw	115	;'s'
   952  0835  342C               	retlw	44	;','
   953  0836  3430               	retlw	48	;'0'
   954  0837  3425               	retlw	37	;'%'
   955  0838  3464               	retlw	100	;'d'
   956  0839  342C               	retlw	44	;','
   957  083A  3430               	retlw	48	;'0'
   958  083B  3430               	retlw	48	;'0'
   959  083C  342C               	retlw	44	;','
   960  083D  3430               	retlw	48	;'0'
   961  083E  3430               	retlw	48	;'0'
   962  083F  342C               	retlw	44	;','
   963  0840  3430               	retlw	48	;'0'
   964  0841  3430               	retlw	48	;'0'
   965  0842  342A               	retlw	42	;'*'
   966  0843  3400               	retlw	0
   967  0844                     STR_3:	
   968  0844  3428               	retlw	40	;'('
   969  0845  346E               	retlw	110	;'n'
   970  0846  3475               	retlw	117	;'u'
   971  0847  346C               	retlw	108	;'l'
   972  0848  346C               	retlw	108	;'l'
   973  0849  3429               	retlw	41	;')'
   974  084A  3400               	retlw	0
   975  084B                     __end_of__stringdata:	
   976                           
   977                           ; #config settings
   978  0000                     
   979                           	psect	cinit
   980  00D4                     start_initialization:	
   981  00D4                     __initialization:	
   982                           
   983                           ; Clear objects allocated to COMMON
   984  00D4  01F9               	clrf	__pbssCOMMON& (0+127)
   985  00D5  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   986  00D6  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   987  00D7  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   988  00D8  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   989                           
   990                           ; Clear objects allocated to BANK1
   991  00D9  0021               	movlb	1	; select bank1
   992  00DA  01EB               	clrf	__pbssBANK1& (0+127)
   993  00DB  01EC               	clrf	(__pbssBANK1+1)& (0+127)
   994  00DC  01ED               	clrf	(__pbssBANK1+2)& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK2
   997  00DD  3020               	movlw	low __pbssBANK2
   998  00DE  0084               	movwf	4
   999  00DF  3001               	movlw	high __pbssBANK2
  1000  00E0  0085               	movwf	5
  1001  00E1  303C               	movlw	60
  1002  00E2  318C  2484  3180   	fcall	clear_ram0
  1003                           
  1004                           ; Clear objects allocated to BANK4
  1005  00E5  3020               	movlw	low __pbssBANK4
  1006  00E6  0084               	movwf	4
  1007  00E7  3002               	movlw	high __pbssBANK4
  1008  00E8  0085               	movwf	5
  1009  00E9  3033               	movlw	51
  1010  00EA  318C  2484  3180   	fcall	clear_ram0
  1011                           
  1012                           ; Clear objects allocated to BANK5
  1013  00ED  30A0               	movlw	low __pbssBANK5
  1014  00EE  0084               	movwf	4
  1015  00EF  3002               	movlw	high __pbssBANK5
  1016  00F0  0085               	movwf	5
  1017  00F1  3044               	movlw	68
  1018  00F2  318C  2484  3180   	fcall	clear_ram0
  1019                           
  1020                           ; Initialize objects allocated to BANK1
  1021  00F5  3099               	movlw	low __pidataBANK1
  1022  00F6  0084               	movwf	4
  1023  00F7  308C               	movlw	(high __pidataBANK1)| (0+128)
  1024  00F8  0085               	movwf	5
  1025  00F9  30E2               	movlw	low __pdataBANK1
  1026  00FA  0086               	movwf	6
  1027  00FB  3000               	movlw	high __pdataBANK1
  1028  00FC  0087               	movwf	7
  1029  00FD  3009               	movlw	9
  1030  00FE  318C  247E  3180   	fcall	init_ram
  1031                           
  1032                           ; Initialize objects allocated to BANK2
  1033  0101  30E7               	movlw	low __pidataBANK2
  1034  0102  0084               	movwf	4
  1035  0103  308C               	movlw	(high __pidataBANK2)| (0+128)
  1036  0104  0085               	movwf	5
  1037  0105  305C               	movlw	low __pdataBANK2
  1038  0106  0086               	movwf	6
  1039  0107  3001               	movlw	high __pdataBANK2
  1040  0108  0087               	movwf	7
  1041  0109  3011               	movlw	17
  1042  010A  318C  247E  3180   	fcall	init_ram
  1043                           
  1044                           ; Initialize objects allocated to BANK3
  1045  010D  30C1               	movlw	low __pidataBANK3
  1046  010E  0084               	movwf	4
  1047  010F  308D               	movlw	(high __pidataBANK3)| (0+128)
  1048  0110  0085               	movwf	5
  1049  0111  30A0               	movlw	low __pdataBANK3
  1050  0112  0086               	movwf	6
  1051  0113  3001               	movlw	high __pdataBANK3
  1052  0114  0087               	movwf	7
  1053  0115  3023               	movlw	35
  1054  0116  318C  247E         	fcall	init_ram
  1055  0118                     end_of_initialization:	
  1056                           ;End of C runtime variable initialization code
  1057                           
  1058  0118                     __end_of__initialization:	
  1059  0118  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1060  0119  0020               	movlb	0
  1061  011A  3185  2DC9         	ljmp	_main	;jump to C main() function
  1062                           
  1063                           	psect	bssCOMMON
  1064  0079                     __pbssCOMMON:	
  1065  0079                     _end:	
  1066  0079                     	ds	2
  1067  007B                     _start:	
  1068  007B                     	ds	2
  1069  007D                     _gpsIndex:	
  1070  007D                     	ds	1
  1071                           
  1072                           	psect	bssBANK1
  1073  00EB                     __pbssBANK1:	
  1074  00EB                     _messageDoneFlag:	
  1075  00EB                     	ds	1
  1076  00EC                     _recordFlag:	
  1077  00EC                     	ds	1
  1078  00ED                     _strobeFlag:	
  1079  00ED                     	ds	1
  1080                           
  1081                           	psect	dataBANK1
  1082  00E2                     __pdataBANK1:	
  1083  00E2                     _validLatitude:	
  1084  00E2                     	ds	3
  1085  00E5                     _validLongitude:	
  1086  00E5                     	ds	3
  1087  00E8                     _gpsInvalidFlag:	
  1088  00E8                     	ds	1
  1089  00E9                     _validEastWest:	
  1090  00E9                     	ds	1
  1091  00EA                     _validNorthSouth:	
  1092  00EA                     	ds	1
  1093                           
  1094                           	psect	bssBANK2
  1095  0120                     __pbssBANK2:	
  1096  0120                     _recordEndAdress:	
  1097  0120                     	ds	4
  1098  0124                     DecodeGPS@F4933:	
  1099  0124                     	ds	3
  1100  0127                     DecodeGPS@F4935:	
  1101  0127                     	ds	3
  1102  012A                     _gpsMessage:	
  1103  012A                     	ds	50
  1104                           
  1105                           	psect	dataBANK2
  1106  015C                     __pdataBANK2:	
  1107  015C                     DecodeGPS@F4931:	
  1108  015C                     	ds	7
  1109  0163                     SetupGPS@F4920:	
  1110  0163                     	ds	6
  1111  0169                     SetupGPS@F4922:	
  1112  0169                     	ds	4
  1113                           
  1114                           	psect	dataBANK3
  1115  01A0                     __pdataBANK3:	
  1116  01A0                     UpdateGPS@F4928:	
  1117  01A0                     	ds	22
  1118  01B6                     DisableGPS@F4917:	
  1119  01B6                     	ds	13
  1120                           
  1121                           	psect	bssBANK4
  1122  0220                     __pbssBANK4:	
  1123  0220                     _buffer:	
  1124  0220                     	ds	51
  1125                           
  1126                           	psect	bssBANK5
  1127  02A0                     __pbssBANK5:	
  1128  02A0                     _preRecordingAddresses:	
  1129  02A0                     	ds	68
  1130                           
  1131                           	psect	clrtext
  1132  0C84                     clear_ram0:	
  1133                           ;	Called with FSR0 containing the base address, and
  1134                           ;	WREG with the size to clear
  1135                           
  1136  0C84  0064               	clrwdt	;clear the watchdog before getting into this loop
  1137  0C85                     clrloop0:	
  1138  0C85  0180               	clrf	0	;clear RAM location pointed to by FSR
  1139  0C86  3101               	addfsr 0,1
  1140  0C87  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1141  0C88  2C85               	goto	clrloop0	;have we reached the end yet?
  1142  0C89  3400               	retlw	0	;all done for this memory range, return
  1143                           
  1144                           	psect	inittext
  1145  0C7E                     init_ram:	
  1146  0C7E  00FE               	movwf	126
  1147  0C7F                     initloop:	
  1148  0C7F  0012               	moviw fsr0++
  1149  0C80  001E               	movwi fsr1++
  1150  0C81  0BFE               	decfsz	126,f
  1151  0C82  2C7F               	goto	initloop
  1152  0C83  3400               	retlw	0
  1153                           
  1154                           	psect	cstackBANK1
  1155  00A0                     __pcstackBANK1:	
  1156  00A0                     SetupGPS@message:	
  1157                           
  1158                           ; 50 bytes @ 0x0
  1159  00A0                     	ds	50
  1160  00D2                     SetupGPS@startSequence:	
  1161                           
  1162                           ; 6 bytes @ 0x32
  1163  00D2                     	ds	6
  1164  00D8                     SetupGPS@MID:	
  1165                           
  1166                           ; 4 bytes @ 0x38
  1167  00D8                     	ds	4
  1168  00DC                     SetupGPS@x:	
  1169                           
  1170                           ; 2 bytes @ 0x3C
  1171  00DC                     	ds	2
  1172  00DE                     ??_main:	
  1173                           
  1174                           ; 0 bytes @ 0x3E
  1175  00DE                     	ds	3
  1176  00E1                     main@periodicCounter:	
  1177                           
  1178                           ; 1 bytes @ 0x41
  1179  00E1                     	ds	1
  1180                           
  1181                           	psect	cstackCOMMON
  1182  0070                     __pcstackCOMMON:	
  1183  0070                     ?_InitCLK:	
  1184  0070                     ?_InitGPIO:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?_InitADC:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?_InitSPI:	
  1191                           ; 0 bytes @ 0x0
  1192                           
  1193  0070                     ?_InitTimer1:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?_InitWatchdog:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ?_initUART:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?_ToggleSleepGPS:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ?_SetupGPS:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?_SendGPSSPI:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ?_RecordMode:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?_UpdateGPS:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ?_GoToSleep:	
  1218                           ; 0 bytes @ 0x0
  1219                           
  1220  0070                     ?_Hibernate:	
  1221                           ; 0 bytes @ 0x0
  1222                           
  1223  0070                     ?_WriteBuffer:	
  1224                           ; 0 bytes @ 0x0
  1225                           
  1226  0070                     ??_WriteBuffer:	
  1227                           ; 0 bytes @ 0x0
  1228                           
  1229  0070                     ?_DecodeGPS:	
  1230                           ; 0 bytes @ 0x0
  1231                           
  1232  0070                     ?_isr:	
  1233                           ; 0 bytes @ 0x0
  1234                           
  1235  0070                     ?_WriteSPI:	
  1236                           ; 0 bytes @ 0x0
  1237                           
  1238  0070                     ?_uart_xmit:	
  1239                           ; 0 bytes @ 0x0
  1240                           
  1241  0070                     ?_ReadSPI:	
  1242                           ; 0 bytes @ 0x0
  1243                           
  1244  0070                     ?_ReadStatusSPI:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_ReadBuffer:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x0
  1252  0070                     	ds	1
  1253  0071                     WriteBuffer@data:	
  1254                           
  1255                           ; 1 bytes @ 0x1
  1256  0071                     	ds	1
  1257  0072                     ??_isr:	
  1258                           
  1259                           ; 0 bytes @ 0x2
  1260  0072                     	ds	5
  1261  0077                     _isr$610:	
  1262                           
  1263                           ; 2 bytes @ 0x7
  1264  0077                     	ds	2
  1265                           
  1266                           	psect	cstackBANK0
  1267  0020                     __pcstackBANK0:	
  1268  0020                     ??_InitCLK:	
  1269  0020                     ??_InitGPIO:	
  1270                           ; 0 bytes @ 0x0
  1271                           
  1272  0020                     ??_InitADC:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0020                     ??_InitSPI:	
  1276                           ; 0 bytes @ 0x0
  1277                           
  1278  0020                     ??_InitTimer1:	
  1279                           ; 0 bytes @ 0x0
  1280                           
  1281  0020                     ??_InitWatchdog:	
  1282                           ; 0 bytes @ 0x0
  1283                           
  1284  0020                     ??_initUART:	
  1285                           ; 0 bytes @ 0x0
  1286                           
  1287  0020                     ??_ToggleSleepGPS:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0020                     ??_GoToSleep:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0020                     ??_Hibernate:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0020                     ??_WriteSPI:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0020                     ??_ReadSPI:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0020                     ??_ReadBuffer:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0020                     ??_uart_xmit:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0020                     ?_compute_checksum:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0020                     ?___bmul:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ?___wmul:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0020                     ?___lwdiv:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320  0020                     uart_xmit@mydata_byte:	
  1321                           ; 2 bytes @ 0x0
  1322                           
  1323  0020                     ___bmul@multiplicand:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0020                     compute_checksum@size:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0020                     ___wmul@multiplier:	
  1330                           ; 2 bytes @ 0x0
  1331                           
  1332  0020                     ___lwdiv@divisor:	
  1333                           ; 2 bytes @ 0x0
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0x0
  1337  0020                     	ds	1
  1338  0021                     ??___bmul:	
  1339  0021                     ReadSPI@dataByte:	
  1340                           ; 0 bytes @ 0x1
  1341                           
  1342  0021                     ReadBuffer@read_data:	
  1343                           ; 1 bytes @ 0x1
  1344                           
  1345  0021                     GoToSleep@count:	
  1346                           ; 1 bytes @ 0x1
  1347                           
  1348  0021                     Hibernate@count:	
  1349                           ; 1 bytes @ 0x1
  1350                           
  1351                           
  1352                           ; 1 bytes @ 0x1
  1353  0021                     	ds	1
  1354  0022                     ??_compute_checksum:	
  1355  0022                     ___bmul@product:	
  1356                           ; 0 bytes @ 0x2
  1357                           
  1358  0022                     WriteSPI@temp:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361  0022                     ___wmul@multiplicand:	
  1362                           ; 2 bytes @ 0x2
  1363                           
  1364  0022                     ___lwdiv@dividend:	
  1365                           ; 2 bytes @ 0x2
  1366                           
  1367                           
  1368                           ; 2 bytes @ 0x2
  1369  0022                     	ds	1
  1370  0023                     ___bmul@multiplier:	
  1371                           
  1372                           ; 1 bytes @ 0x3
  1373  0023                     	ds	1
  1374  0024                     ??___wmul:	
  1375  0024                     ??___lwdiv:	
  1376                           ; 0 bytes @ 0x4
  1377                           
  1378  0024                     WriteSPI@databyte:	
  1379                           ; 0 bytes @ 0x4
  1380                           
  1381  0024                     compute_checksum@checksum:	
  1382                           ; 1 bytes @ 0x4
  1383                           
  1384  0024                     ___wmul@product:	
  1385                           ; 1 bytes @ 0x4
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x4
  1389  0024                     	ds	1
  1390  0025                     ??_ReadStatusSPI:	
  1391  0025                     compute_checksum@data:	
  1392                           ; 0 bytes @ 0x5
  1393                           
  1394  0025                     ___lwdiv@quotient:	
  1395                           ; 1 bytes @ 0x5
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x5
  1399  0025                     	ds	1
  1400  0026                     ?___awdiv:	
  1401  0026                     ReadStatusSPI@dataRead:	
  1402                           ; 2 bytes @ 0x6
  1403                           
  1404  0026                     compute_checksum@x:	
  1405                           ; 1 bytes @ 0x6
  1406                           
  1407  0026                     ___awdiv@divisor:	
  1408                           ; 2 bytes @ 0x6
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x6
  1412  0026                     	ds	1
  1413  0027                     ?_WriteOverheadSPI:	
  1414  0027                     ___lwdiv@counter:	
  1415                           ; 0 bytes @ 0x7
  1416                           
  1417  0027                     WriteOverheadSPI@address:	
  1418                           ; 1 bytes @ 0x7
  1419                           
  1420                           
  1421                           ; 4 bytes @ 0x7
  1422  0027                     	ds	1
  1423  0028                     ?_uart_write_message:	
  1424  0028                     ?___lwmod:	
  1425                           ; 0 bytes @ 0x8
  1426                           
  1427  0028                     uart_write_message@size:	
  1428                           ; 2 bytes @ 0x8
  1429                           
  1430  0028                     ___awdiv@dividend:	
  1431                           ; 2 bytes @ 0x8
  1432                           
  1433  0028                     ___lwmod@divisor:	
  1434                           ; 2 bytes @ 0x8
  1435                           
  1436                           
  1437                           ; 2 bytes @ 0x8
  1438  0028                     	ds	2
  1439  002A                     ??_uart_write_message:	
  1440  002A                     ??___awdiv:	
  1441                           ; 0 bytes @ 0xA
  1442                           
  1443  002A                     ___lwmod@dividend:	
  1444                           ; 0 bytes @ 0xA
  1445                           
  1446                           
  1447                           ; 2 bytes @ 0xA
  1448  002A                     	ds	1
  1449  002B                     ??_WriteOverheadSPI:	
  1450  002B                     ___awdiv@counter:	
  1451                           ; 0 bytes @ 0xB
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0xB
  1455  002B                     	ds	1
  1456  002C                     ??___lwmod:	
  1457  002C                     ___awdiv@sign:	
  1458                           ; 0 bytes @ 0xC
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0xC
  1462  002C                     	ds	1
  1463  002D                     ___lwmod@counter:	
  1464  002D                     _uart_write_message$1376:	
  1465                           ; 1 bytes @ 0xD
  1466                           
  1467  002D                     ___awdiv@quotient:	
  1468                           ; 2 bytes @ 0xD
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0xD
  1472  002D                     	ds	1
  1473  002E                     ?_sprintf:	
  1474  002E                     sprintf@f:	
  1475                           ; 2 bytes @ 0xE
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0xE
  1479  002E                     	ds	1
  1480  002F                     _uart_write_message$1377:	
  1481                           
  1482                           ; 2 bytes @ 0xF
  1483  002F                     	ds	2
  1484  0031                     uart_write_message@x:	
  1485  0031                     WriteOverheadSPI@address_bytes:	
  1486                           ; 2 bytes @ 0x11
  1487                           
  1488                           
  1489                           ; 3 bytes @ 0x11
  1490  0031                     	ds	2
  1491  0033                     uart_write_message@checksum:	
  1492                           
  1493                           ; 1 bytes @ 0x13
  1494  0033                     	ds	1
  1495  0034                     ??_sprintf:	
  1496  0034                     WriteOverheadSPI@StatusReg:	
  1497                           ; 0 bytes @ 0x14
  1498                           
  1499  0034                     uart_write_message@ascii_checksum:	
  1500                           ; 1 bytes @ 0x14
  1501                           
  1502                           
  1503                           ; 2 bytes @ 0x14
  1504  0034                     	ds	1
  1505  0035                     ??_SendGPSSPI:	
  1506  0035                     ??_RecordMode:	
  1507                           ; 0 bytes @ 0x15
  1508                           
  1509                           
  1510                           ; 0 bytes @ 0x15
  1511  0035                     	ds	1
  1512  0036                     uart_write_message@data:	
  1513  0036                     SendGPSSPI@address:	
  1514                           ; 1 bytes @ 0x16
  1515                           
  1516                           
  1517                           ; 4 bytes @ 0x16
  1518  0036                     	ds	2
  1519  0038                     sprintf@flag:	
  1520                           
  1521                           ; 1 bytes @ 0x18
  1522  0038                     	ds	1
  1523  0039                     sprintf@prec:	
  1524                           
  1525                           ; 1 bytes @ 0x19
  1526  0039                     	ds	1
  1527  003A                     sprintf@ap:	
  1528  003A                     RecordMode@count:	
  1529                           ; 1 bytes @ 0x1A
  1530                           
  1531  003A                     SendGPSSPI@x:	
  1532                           ; 2 bytes @ 0x1A
  1533                           
  1534                           
  1535                           ; 2 bytes @ 0x1A
  1536  003A                     	ds	1
  1537  003B                     sprintf@sp:	
  1538                           
  1539                           ; 1 bytes @ 0x1B
  1540  003B                     	ds	1
  1541  003C                     ??_DecodeGPS:	
  1542  003C                     RecordMode@address:	
  1543                           ; 0 bytes @ 0x1C
  1544                           
  1545  003C                     sprintf@_val:	
  1546                           ; 4 bytes @ 0x1C
  1547                           
  1548                           
  1549                           ; 4 bytes @ 0x1C
  1550  003C                     	ds	3
  1551  003F                     DecodeGPS@messageID:	
  1552                           
  1553                           ; 7 bytes @ 0x1F
  1554  003F                     	ds	1
  1555  0040                     sprintf@c:	
  1556                           
  1557                           ; 1 bytes @ 0x20
  1558  0040                     	ds	1
  1559  0041                     ??_SetupGPS:	
  1560                           
  1561                           ; 0 bytes @ 0x21
  1562  0041                     	ds	5
  1563  0046                     DecodeGPS@northSouth:	
  1564                           
  1565                           ; 1 bytes @ 0x26
  1566  0046                     	ds	1
  1567  0047                     DecodeGPS@eastWest:	
  1568                           
  1569                           ; 1 bytes @ 0x27
  1570  0047                     	ds	1
  1571  0048                     DecodeGPS@status:	
  1572                           
  1573                           ; 1 bytes @ 0x28
  1574  0048                     	ds	1
  1575  0049                     DecodeGPS@latitude:	
  1576                           
  1577                           ; 3 bytes @ 0x29
  1578  0049                     	ds	3
  1579  004C                     DecodeGPS@longitude:	
  1580                           
  1581                           ; 3 bytes @ 0x2C
  1582  004C                     	ds	3
  1583  004F                     DecodeGPS@x:	
  1584                           
  1585                           ; 2 bytes @ 0x2F
  1586  004F                     	ds	2
  1587  0051                     ??_UpdateGPS:	
  1588                           
  1589                           ; 0 bytes @ 0x31
  1590  0051                     	ds	3
  1591  0054                     UpdateGPS@GPSupdateMessage:	
  1592                           
  1593                           ; 22 bytes @ 0x34
  1594  0054                     	ds	22
  1595  006A                     UpdateGPS@count:	
  1596                           
  1597                           ; 2 bytes @ 0x4A
  1598  006A                     	ds	2
  1599  006C                     ?_main:	
  1600  006C                     main@argc:	
  1601                           ; 2 bytes @ 0x4C
  1602                           
  1603                           
  1604                           ; 2 bytes @ 0x4C
  1605  006C                     	ds	2
  1606  006E                     main@argv:	
  1607                           
  1608                           ; 2 bytes @ 0x4E
  1609  006E                     	ds	2
  1610                           
  1611                           	psect	maintext
  1612  05C9                     __pmaintext:	
  1613 ;;
  1614 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1615 ;;
  1616 ;; *************** function _main *****************
  1617 ;; Defined at:
  1618 ;;		line 20 in file "launcher_main.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  argc            2   76[BANK0 ] int 
  1621 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  periodicCoun    1   65[BANK1 ] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2   76[BANK0 ] int 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 17F/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         0       4       0       0       0       0       0
  1634 ;;      Locals:         0       0       1       0       0       0       0
  1635 ;;      Temps:          0       0       3       0       0       0       0
  1636 ;;      Totals:         0       4       4       0       0       0       0
  1637 ;;Total ram usage:        8 bytes
  1638 ;; Hardware stack levels required when called:    8
  1639 ;; This function calls:
  1640 ;;		_GoToSleep
  1641 ;;		_Hibernate
  1642 ;;		_InitADC
  1643 ;;		_InitCLK
  1644 ;;		_InitGPIO
  1645 ;;		_InitSPI
  1646 ;;		_InitTimer1
  1647 ;;		_InitWatchdog
  1648 ;;		_RecordMode
  1649 ;;		_SendGPSSPI
  1650 ;;		_SetupGPS
  1651 ;;		_ToggleSleepGPS
  1652 ;;		_UpdateGPS
  1653 ;;		_initUART
  1654 ;; This function is called by:
  1655 ;;		Startup code after reset
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _main
  1661  05C9                     _main:	
  1662                           
  1663                           ;launcher_main.c: 23: InitCLK();
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1667  05C9  318C  2491  3185   	fcall	_InitCLK
  1668                           
  1669                           ;launcher_main.c: 24: InitGPIO();
  1670  05CC  318D  25E4  3185   	fcall	_InitGPIO
  1671                           
  1672                           ;launcher_main.c: 25: InitADC();
  1673  05CF  318D  2570  3185   	fcall	_InitADC
  1674                           
  1675                           ;launcher_main.c: 26: InitSPI();
  1676  05D2  318D  250A  3185   	fcall	_InitSPI
  1677                           
  1678                           ;launcher_main.c: 27: InitTimer1();
  1679  05D5  318C  24B8  3185   	fcall	_InitTimer1
  1680                           
  1681                           ;launcher_main.c: 28: InitWatchdog();
  1682  05D8  318C  248A  3185   	fcall	_InitWatchdog
  1683                           
  1684                           ;launcher_main.c: 29: initUART();
  1685  05DB  318C  24C7  3185   	fcall	_initUART
  1686                           
  1687                           ;launcher_main.c: 31: unsigned char periodicCounter = 10;
  1688  05DE  300A               	movlw	10
  1689  05DF  0021               	movlb	1	; select bank1
  1690  05E0  00DE               	movwf	??_main^(0+128)
  1691  05E1  085E               	movf	??_main^(0+128),w
  1692  05E2  00E1               	movwf	main@periodicCounter^(0+128)
  1693                           
  1694                           ;launcher_main.c: 32: gpsIndex = 0;
  1695  05E3  01FD               	clrf	_gpsIndex	;volatile
  1696                           
  1697                           ;launcher_main.c: 34: INTCONbits.GIE = 1;
  1698  05E4  178B               	bsf	11,7	;volatile
  1699                           
  1700                           ;launcher_main.c: 36: if(!PORTCbits.RC7)
  1701  05E5  0020               	movlb	0	; select bank0
  1702  05E6  1B8E               	btfsc	14,7	;volatile
  1703  05E7  2DEB               	goto	l2752
  1704                           
  1705                           ;launcher_main.c: 37: ToggleSleepGPS();
  1706  05E8  318E  2611  3185   	fcall	_ToggleSleepGPS
  1707  05EB                     l2752:	
  1708                           
  1709                           ;launcher_main.c: 38: SetupGPS();
  1710  05EB  3186  267F  3185   	fcall	_SetupGPS
  1711                           
  1712                           ;launcher_main.c: 39: SendGPSSPI();
  1713  05EE  3187  278B  3185   	fcall	_SendGPSSPI
  1714                           
  1715                           ;launcher_main.c: 41: SSPCON1bits.SSPEN=0;
  1716  05F1  0024               	movlb	4	; select bank4
  1717  05F2  1295               	bcf	21,5	;volatile
  1718                           
  1719                           ;launcher_main.c: 42: PORTCbits.RC5 = 0;
  1720  05F3  0020               	movlb	0	; select bank0
  1721  05F4  128E               	bcf	14,5	;volatile
  1722                           
  1723                           ;launcher_main.c: 44: LATC2 = (1);
  1724  05F5  0022               	movlb	2	; select bank2
  1725  05F6  150E               	bsf	14,2	;volatile
  1726  05F7                     l2762:	
  1727                           ;launcher_main.c: 46: while(1){
  1728                           
  1729                           
  1730                           ;launcher_main.c: 53: LATC2 = (1);
  1731  05F7  0022               	movlb	2	; select bank2
  1732  05F8  150E               	bsf	14,2	;volatile
  1733                           
  1734                           ;launcher_main.c: 56: LATC2 = (1);
  1735  05F9  150E               	bsf	14,2	;volatile
  1736                           
  1737                           ;launcher_main.c: 59: if(PORTAbits.RA1)
  1738  05FA  0020               	movlb	0	; select bank0
  1739  05FB  1C8C               	btfss	12,1	;volatile
  1740  05FC  2E0D               	goto	l115
  1741                           
  1742                           ;launcher_main.c: 60: {
  1743                           ;launcher_main.c: 62: PORTBbits.RB0 = 1;
  1744  05FD  140D               	bsf	13,0	;volatile
  1745                           
  1746                           ;launcher_main.c: 63: _delay((unsigned long)((100)*(16000000/4000.0)));
  1747  05FE  3003               	movlw	3
  1748  05FF  0021               	movlb	1	; select bank1
  1749  0600  00E0               	movwf	(??_main^(0+128)+2)
  1750  0601  3008               	movlw	8
  1751  0602  00DF               	movwf	(??_main^(0+128)+1)
  1752  0603  3078               	movlw	120
  1753  0604  00DE               	movwf	??_main^(0+128)
  1754  0605                     u2737:	
  1755  0605  0BDE               	decfsz	??_main^(0+128),f
  1756  0606  2E05               	goto	u2737
  1757  0607  0BDF               	decfsz	(??_main^(0+128)+1),f
  1758  0608  2E05               	goto	u2737
  1759  0609  0BE0               	decfsz	(??_main^(0+128)+2),f
  1760  060A  2E05               	goto	u2737
  1761                           
  1762                           ;launcher_main.c: 64: PORTBbits.RB0 = 0;
  1763  060B  0020               	movlb	0	; select bank0
  1764  060C  100D               	bcf	13,0	;volatile
  1765  060D                     l115:	
  1766                           
  1767                           ;launcher_main.c: 65: }
  1768                           ;launcher_main.c: 67: if(recordFlag)
  1769  060D  0021               	movlb	1	; select bank1
  1770  060E  086C               	movf	_recordFlag^(0+128),w
  1771  060F  1903               	btfsc	3,2
  1772  0610  2E15               	goto	l2776
  1773                           
  1774                           ;launcher_main.c: 68: {
  1775                           ;launcher_main.c: 69: RecordMode();
  1776  0611  3183  2381  3185   	fcall	_RecordMode
  1777  0614  0021               	movlb	1	; select bank1
  1778  0615                     l2776:	
  1779                           
  1780                           ;launcher_main.c: 70: }
  1781                           ;launcher_main.c: 73: UpdateGPS();
  1782  0615  318F  279A  3185   	fcall	_UpdateGPS
  1783                           
  1784                           ;launcher_main.c: 75: if(gpsInvalidFlag)
  1785  0618  0021               	movlb	1	; select bank1
  1786  0619  0868               	movf	_gpsInvalidFlag^(0+128),w
  1787  061A  1903               	btfsc	3,2
  1788  061B  2E42               	goto	l2786
  1789                           
  1790                           ;launcher_main.c: 76: {
  1791                           ;launcher_main.c: 77: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1792  061C  0022               	movlb	2	; select bank2
  1793  061D  080D               	movf	13,w	;volatile
  1794  061E  39FF               	andlw	255
  1795  061F  3820               	iorlw	32
  1796  0620  0021               	movlb	1	; select bank1
  1797  0621  00DE               	movwf	??_main^(0+128)
  1798  0622  0020               	movlb	0	; select bank0
  1799  0623  080D               	movf	13,w	;volatile
  1800  0624  0021               	movlb	1	; select bank1
  1801  0625  065E               	xorwf	??_main^(0+128),w
  1802  0626  3900               	andlw	-256
  1803  0627  065E               	xorwf	??_main^(0+128),w
  1804  0628  0020               	movlb	0	; select bank0
  1805  0629  008D               	movwf	13	;volatile
  1806                           
  1807                           ;launcher_main.c: 78: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1808  062A  0022               	movlb	2	; select bank2
  1809  062B  080D               	movf	13,w	;volatile
  1810  062C  39FF               	andlw	255
  1811  062D  39EF               	andlw	239
  1812  062E  0021               	movlb	1	; select bank1
  1813  062F  00DE               	movwf	??_main^(0+128)
  1814  0630  0020               	movlb	0	; select bank0
  1815  0631  080D               	movf	13,w	;volatile
  1816  0632  0021               	movlb	1	; select bank1
  1817  0633  065E               	xorwf	??_main^(0+128),w
  1818  0634  3900               	andlw	-256
  1819  0635  065E               	xorwf	??_main^(0+128),w
  1820  0636  0020               	movlb	0	; select bank0
  1821  0637  008D               	movwf	13	;volatile
  1822                           
  1823                           ;launcher_main.c: 79: if(periodicCounter < 14)
  1824  0638  300E               	movlw	14
  1825  0639  0021               	movlb	1	; select bank1
  1826  063A  0261               	subwf	main@periodicCounter^(0+128),w
  1827  063B  1803               	skipnc
  1828  063C  2E66               	goto	l2792
  1829                           
  1830                           ;launcher_main.c: 80: periodicCounter++;
  1831  063D  3001               	movlw	1
  1832  063E  00DE               	movwf	??_main^(0+128)
  1833  063F  085E               	movf	??_main^(0+128),w
  1834  0640  07E1               	addwf	main@periodicCounter^(0+128),f
  1835                           
  1836                           ;launcher_main.c: 81: }
  1837  0641  2E66               	goto	l2792
  1838  0642                     l2786:	
  1839                           
  1840                           ;launcher_main.c: 82: else
  1841                           ;launcher_main.c: 83: {
  1842                           ;launcher_main.c: 84: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1843  0642  0022               	movlb	2	; select bank2
  1844  0643  080D               	movf	13,w	;volatile
  1845  0644  39FF               	andlw	255
  1846  0645  3810               	iorlw	16
  1847  0646  0021               	movlb	1	; select bank1
  1848  0647  00DE               	movwf	??_main^(0+128)
  1849  0648  0020               	movlb	0	; select bank0
  1850  0649  080D               	movf	13,w	;volatile
  1851  064A  0021               	movlb	1	; select bank1
  1852  064B  065E               	xorwf	??_main^(0+128),w
  1853  064C  3900               	andlw	-256
  1854  064D  065E               	xorwf	??_main^(0+128),w
  1855  064E  0020               	movlb	0	; select bank0
  1856  064F  008D               	movwf	13	;volatile
  1857                           
  1858                           ;launcher_main.c: 85: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1859  0650  0022               	movlb	2	; select bank2
  1860  0651  080D               	movf	13,w	;volatile
  1861  0652  39FF               	andlw	255
  1862  0653  39DF               	andlw	223
  1863  0654  0021               	movlb	1	; select bank1
  1864  0655  00DE               	movwf	??_main^(0+128)
  1865  0656  0020               	movlb	0	; select bank0
  1866  0657  080D               	movf	13,w	;volatile
  1867  0658  0021               	movlb	1	; select bank1
  1868  0659  065E               	xorwf	??_main^(0+128),w
  1869  065A  3900               	andlw	-256
  1870  065B  065E               	xorwf	??_main^(0+128),w
  1871  065C  0020               	movlb	0	; select bank0
  1872  065D  008D               	movwf	13	;volatile
  1873                           
  1874                           ;launcher_main.c: 86: periodicCounter = 10;
  1875  065E  300A               	movlw	10
  1876  065F  0021               	movlb	1	; select bank1
  1877  0660  00DE               	movwf	??_main^(0+128)
  1878  0661  085E               	movf	??_main^(0+128),w
  1879  0662  00E1               	movwf	main@periodicCounter^(0+128)
  1880                           
  1881                           ;launcher_main.c: 87: ToggleSleepGPS();
  1882  0663  318E  2611  3185   	fcall	_ToggleSleepGPS
  1883  0666                     l2792:	
  1884                           
  1885                           ;launcher_main.c: 88: }
  1886                           ;launcher_main.c: 90: if(!recordFlag)
  1887  0666  0021               	movlb	1	; select bank1
  1888  0667  08EC               	movf	_recordFlag^(0+128),f
  1889  0668  1D03               	skipz
  1890  0669  2DF7               	goto	l2762
  1891                           
  1892                           ;launcher_main.c: 91: {
  1893                           ;launcher_main.c: 92: if(strobeFlag)
  1894  066A  086D               	movf	_strobeFlag^(0+128),w
  1895  066B  1903               	btfsc	3,2
  1896  066C  2E72               	goto	l2798
  1897                           
  1898                           ;launcher_main.c: 93: GoToSleep(10);
  1899  066D  300A               	movlw	10
  1900  066E  318C  24F8  3185   	fcall	_GoToSleep
  1901  0671  2DF7               	goto	l2762
  1902  0672                     l2798:	
  1903                           
  1904                           ;launcher_main.c: 94: else if(gpsInvalidFlag)
  1905  0672  0021               	movlb	1	; select bank1
  1906  0673  0868               	movf	_gpsInvalidFlag^(0+128),w
  1907  0674  1903               	btfsc	3,2
  1908  0675  2E7B               	goto	l2802
  1909                           
  1910                           ;launcher_main.c: 95: GoToSleep(periodicCounter);
  1911  0676  0861               	movf	main@periodicCounter^(0+128),w
  1912  0677  318C  24F8  3185   	fcall	_GoToSleep
  1913  067A  2DF7               	goto	l2762
  1914  067B                     l2802:	
  1915                           
  1916                           ;launcher_main.c: 96: else
  1917                           ;launcher_main.c: 97: Hibernate();
  1918  067B  318D  2589  3185   	fcall	_Hibernate
  1919  067E  2DF7               	goto	l2762
  1920  067F                     __end_of_main:	
  1921                           ;launcher_main.c: 98: }
  1922                           ;launcher_main.c: 101: }
  1923                           ;launcher_main.c: 103: return (0);
  1924                           ;	Return value of _main is never used
  1925                           
  1926                           
  1927                           	psect	text1
  1928  0CC7                     __ptext1:	
  1929 ;; *************** function _initUART *****************
  1930 ;; Defined at:
  1931 ;;		line 253 in file "launcher_functions.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		wreg, status,2
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1945 ;;      Params:         0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    2
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _initUART
  1961  0CC7                     _initUART:	
  1962                           
  1963                           ;launcher_functions.c: 256: TRISCbits.TRISC6 = 0;
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _initUART: [wreg+status,2]
  1967  0CC7  0021               	movlb	1	; select bank1
  1968  0CC8  130E               	bcf	14,6	;volatile
  1969                           
  1970                           ;launcher_functions.c: 257: TRISCbits.TRISC7 = 1;
  1971  0CC9  178E               	bsf	14,7	;volatile
  1972                           
  1973                           ;launcher_functions.c: 258: TXSTAbits.BRGH = 0;
  1974  0CCA  0023               	movlb	3	; select bank3
  1975  0CCB  111E               	bcf	30,2	;volatile
  1976                           
  1977                           ;launcher_functions.c: 260: SPBRGH = 0;
  1978  0CCC  019C               	clrf	28	;volatile
  1979                           
  1980                           ;launcher_functions.c: 261: SPBRGL = 51;
  1981  0CCD  3033               	movlw	51
  1982  0CCE  009B               	movwf	27	;volatile
  1983                           
  1984                           ;launcher_functions.c: 262: TXSTAbits.TX9 = 0;
  1985  0CCF  131E               	bcf	30,6	;volatile
  1986                           
  1987                           ;launcher_functions.c: 263: TXSTAbits.SYNC = 0;
  1988  0CD0  121E               	bcf	30,4	;volatile
  1989                           
  1990                           ;launcher_functions.c: 264: TXSTAbits.TXEN = 1;
  1991  0CD1  169E               	bsf	30,5	;volatile
  1992                           
  1993                           ;launcher_functions.c: 266: RCSTAbits.SPEN = 1;
  1994  0CD2  179D               	bsf	29,7	;volatile
  1995                           
  1996                           ;launcher_functions.c: 267: RCSTAbits.RX9 = 0;
  1997  0CD3  131D               	bcf	29,6	;volatile
  1998                           
  1999                           ;launcher_functions.c: 268: RCSTAbits.CREN = 1;
  2000  0CD4  161D               	bsf	29,4	;volatile
  2001  0CD5  0008               	return
  2002  0CD6                     __end_of_initUART:	
  2003                           
  2004                           	psect	text2
  2005  0F9A                     __ptext2:	
  2006 ;; *************** function _UpdateGPS *****************
  2007 ;; Defined at:
  2008 ;;		line 361 in file "launcher_functions.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  GPSupdateMes   22   52[BANK0 ] unsigned char [22]
  2013 ;;  count           2   74[BANK0 ] unsigned int 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;		None               void
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2023 ;;      Params:         0       0       0       0       0       0       0
  2024 ;;      Locals:         0      24       0       0       0       0       0
  2025 ;;      Temps:          0       3       0       0       0       0       0
  2026 ;;      Totals:         0      27       0       0       0       0       0
  2027 ;;Total ram usage:       27 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    7
  2030 ;; This function calls:
  2031 ;;		_DecodeGPS
  2032 ;;		_SetupGPS
  2033 ;;		_ToggleSleepGPS
  2034 ;;		_uart_write_message
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _UpdateGPS
  2042  0F9A                     _UpdateGPS:	
  2043                           
  2044                           ;launcher_functions.c: 363: unsigned int count = 0;
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2048  0F9A  0020               	movlb	0	; select bank0
  2049  0F9B  01EA               	clrf	UpdateGPS@count
  2050  0F9C  01EB               	clrf	UpdateGPS@count+1
  2051                           
  2052                           ;launcher_functions.c: 364: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,01,00*"
      +                          ;
  2053  0F9D  30A0               	movlw	low UpdateGPS@F4928
  2054  0F9E  0086               	movwf	6
  2055  0F9F  3001               	movlw	high UpdateGPS@F4928
  2056  0FA0  0087               	movwf	7
  2057  0FA1  3054               	movlw	low UpdateGPS@GPSupdateMessage
  2058  0FA2  0084               	movwf	4
  2059  0FA3  3000               	movlw	high UpdateGPS@GPSupdateMessage
  2060  0FA4  0085               	movwf	5
  2061  0FA5  3016               	movlw	22
  2062  0FA6  00D1               	movwf	??_UpdateGPS
  2063  0FA7                     u2240:	
  2064  0FA7  0016               	moviw fsr1++
  2065  0FA8  001A               	movwi fsr0++
  2066  0FA9  0BD1               	decfsz	??_UpdateGPS,f
  2067  0FAA  2FA7               	goto	u2240
  2068                           
  2069                           ;launcher_functions.c: 367: RCIE = 1;
  2070  0FAB  0021               	movlb	1	; select bank1
  2071  0FAC  1691               	bsf	17,5	;volatile
  2072                           
  2073                           ;launcher_functions.c: 368: PEIE = 1;
  2074  0FAD  170B               	bsf	11,6	;volatile
  2075                           
  2076                           ;launcher_functions.c: 369: GIE = 1;
  2077  0FAE  178B               	bsf	11,7	;volatile
  2078                           
  2079                           ;launcher_functions.c: 371: if(!PORTCbits.RC7)
  2080  0FAF  0020               	movlb	0	; select bank0
  2081  0FB0  1B8E               	btfsc	14,7	;volatile
  2082  0FB1  2FB5               	goto	l2674
  2083                           
  2084                           ;launcher_functions.c: 372: ToggleSleepGPS();
  2085  0FB2  318E  2611  318F   	fcall	_ToggleSleepGPS
  2086  0FB5                     l2674:	
  2087                           
  2088                           ;launcher_functions.c: 374: gpsIndex = 0;
  2089  0FB5  01FD               	clrf	_gpsIndex	;volatile
  2090                           
  2091                           ;launcher_functions.c: 375: uart_write_message(GPSupdateMessage, 22);
  2092  0FB6  3016               	movlw	22
  2093  0FB7  0020               	movlb	0	; select bank0
  2094  0FB8  00A8               	movwf	uart_write_message@size
  2095  0FB9  3000               	movlw	0
  2096  0FBA  00A9               	movwf	uart_write_message@size+1
  2097  0FBB  3054               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2098  0FBC  3187  2715  318F   	fcall	_uart_write_message
  2099  0FBF                     l2698:	
  2100                           ;launcher_functions.c: 376: while(!messageDoneFlag)
  2101                           
  2102  0FBF  0021               	movlb	1	; select bank1
  2103  0FC0  086B               	movf	_messageDoneFlag^(0+128),w
  2104  0FC1  1D03               	skipz
  2105  0FC2  2FFC               	goto	l2700
  2106                           
  2107                           ;launcher_functions.c: 377: {
  2108                           ;launcher_functions.c: 378: if(count == 60000)
  2109  0FC3  30EA               	movlw	234
  2110  0FC4  0020               	movlb	0	; select bank0
  2111  0FC5  066B               	xorwf	UpdateGPS@count+1,w
  2112  0FC6  1D03               	skipz
  2113  0FC7  2FCA               	goto	u2265
  2114  0FC8  3060               	movlw	96
  2115  0FC9  066A               	xorwf	UpdateGPS@count,w
  2116  0FCA                     u2265:	
  2117  0FCA  1D03               	skipz
  2118  0FCB  2FF6               	goto	l2696
  2119                           
  2120                           ;launcher_functions.c: 379: {
  2121                           ;launcher_functions.c: 380: ToggleSleepGPS();
  2122  0FCC  318E  2611  318F   	fcall	_ToggleSleepGPS
  2123                           
  2124                           ;launcher_functions.c: 381: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2125  0FCF  3015               	movlw	21
  2126  0FD0  0020               	movlb	0	; select bank0
  2127  0FD1  00D3               	movwf	??_UpdateGPS+2
  2128  0FD2  304B               	movlw	75
  2129  0FD3  00D2               	movwf	??_UpdateGPS+1
  2130  0FD4  30D1               	movlw	209
  2131  0FD5  00D1               	movwf	??_UpdateGPS
  2132  0FD6                     u2747:	
  2133  0FD6  0BD1               	decfsz	??_UpdateGPS,f
  2134  0FD7  2FD6               	goto	u2747
  2135  0FD8  0BD2               	decfsz	??_UpdateGPS+1,f
  2136  0FD9  2FD6               	goto	u2747
  2137  0FDA  0BD3               	decfsz	??_UpdateGPS+2,f
  2138  0FDB  2FD6               	goto	u2747
  2139  0FDC  0000               	nop
  2140                           
  2141                           ;launcher_functions.c: 382: if(!PORTCbits.RC7)
  2142  0FDD  0020               	movlb	0	; select bank0
  2143  0FDE  1B8E               	btfsc	14,7	;volatile
  2144  0FDF  2FE3               	goto	l2688
  2145                           
  2146                           ;launcher_functions.c: 383: ToggleSleepGPS();
  2147  0FE0  318E  2611  318F   	fcall	_ToggleSleepGPS
  2148  0FE3                     l2688:	
  2149                           
  2150                           ;launcher_functions.c: 384: SetupGPS();
  2151  0FE3  3186  267F  318F   	fcall	_SetupGPS
  2152  0FE6                     l2690:	
  2153                           ;launcher_functions.c: 385: while(!messageDoneFlag);
  2154                           
  2155  0FE6  0021               	movlb	1	; select bank1
  2156  0FE7  086B               	movf	_messageDoneFlag^(0+128),w
  2157  0FE8  1903               	btfsc	3,2
  2158  0FE9  2FE6               	goto	l2690
  2159                           
  2160                           ;launcher_functions.c: 386: messageDoneFlag = 0;
  2161  0FEA  01EB               	clrf	_messageDoneFlag^(0+128)
  2162                           
  2163                           ;launcher_functions.c: 387: count = 0;
  2164  0FEB  0020               	movlb	0	; select bank0
  2165  0FEC  01EA               	clrf	UpdateGPS@count
  2166  0FED  01EB               	clrf	UpdateGPS@count+1
  2167                           
  2168                           ;launcher_functions.c: 388: uart_write_message(GPSupdateMessage, 22);
  2169  0FEE  3016               	movlw	22
  2170  0FEF  00A8               	movwf	uart_write_message@size
  2171  0FF0  3000               	movlw	0
  2172  0FF1  00A9               	movwf	uart_write_message@size+1
  2173  0FF2  3054               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  2174  0FF3  3187  2715  318F   	fcall	_uart_write_message
  2175  0FF6                     l2696:	
  2176                           
  2177                           ;launcher_functions.c: 389: }
  2178                           ;launcher_functions.c: 390: count++;
  2179  0FF6  3001               	movlw	1
  2180  0FF7  0020               	movlb	0	; select bank0
  2181  0FF8  07EA               	addwf	UpdateGPS@count,f
  2182  0FF9  3000               	movlw	0
  2183  0FFA  3DEB               	addwfc	UpdateGPS@count+1,f
  2184  0FFB  2FBF               	goto	l2698
  2185  0FFC                     l2700:	
  2186                           
  2187                           ;launcher_functions.c: 391: }
  2188                           ;launcher_functions.c: 392: messageDoneFlag = 0;
  2189  0FFC  01EB               	clrf	_messageDoneFlag^(0+128)
  2190                           
  2191                           ;launcher_functions.c: 393: DecodeGPS();
  2192  0FFD  3181  211C         	fcall	_DecodeGPS
  2193  0FFF  0008               	return
  2194  1000                     __end_of_UpdateGPS:	
  2195                           
  2196                           	psect	text3
  2197  067F                     __ptext3:	
  2198 ;; *************** function _SetupGPS *****************
  2199 ;; Defined at:
  2200 ;;		line 333 in file "launcher_functions.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  message        50    0[BANK1 ] unsigned char [50]
  2205 ;;  startSequenc    6   50[BANK1 ] unsigned char [6]
  2206 ;;  MID             4   56[BANK1 ] unsigned char [4]
  2207 ;;  x               2   60[BANK1 ] int 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2217 ;;      Params:         0       0       0       0       0       0       0
  2218 ;;      Locals:         0       0      62       0       0       0       0
  2219 ;;      Temps:          0       3       0       0       0       0       0
  2220 ;;      Totals:         0       3      62       0       0       0       0
  2221 ;;Total ram usage:       65 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    4
  2224 ;; This function calls:
  2225 ;;		_sprintf
  2226 ;;		_uart_write_message
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;;		_UpdateGPS
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _SetupGPS
  2235  067F                     _SetupGPS:	
  2236                           
  2237                           ;launcher_functions.c: 335: int x;
  2238                           ;launcher_functions.c: 336: unsigned char startSequence[6] = "$PSRF";
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2242  067F  3063               	movlw	low SetupGPS@F4920
  2243  0680  0086               	movwf	6
  2244  0681  3001               	movlw	high SetupGPS@F4920
  2245  0682  0087               	movwf	7
  2246  0683  30D2               	movlw	low SetupGPS@startSequence
  2247  0684  0084               	movwf	4
  2248  0685  3000               	movlw	high SetupGPS@startSequence
  2249  0686  0085               	movwf	5
  2250  0687  3006               	movlw	6
  2251  0688  0020               	movlb	0	; select bank0
  2252  0689  00C1               	movwf	??_SetupGPS
  2253  068A                     u1960:	
  2254  068A  0016               	moviw fsr1++
  2255  068B  001A               	movwi fsr0++
  2256  068C  0BC1               	decfsz	??_SetupGPS,f
  2257  068D  2E8A               	goto	u1960
  2258                           
  2259                           ;launcher_functions.c: 337: unsigned char MID[4] = "103";
  2260  068E  0022               	movlb	2	; select bank2
  2261  068F  086C               	movf	(SetupGPS@F4922+3)^(0+256),w
  2262  0690  0021               	movlb	1	; select bank1
  2263  0691  00DB               	movwf	(SetupGPS@MID+3)^(0+128)
  2264  0692  0022               	movlb	2	; select bank2
  2265  0693  086B               	movf	(SetupGPS@F4922+2)^(0+256),w
  2266  0694  0021               	movlb	1	; select bank1
  2267  0695  00DA               	movwf	(SetupGPS@MID+2)^(0+128)
  2268  0696  0022               	movlb	2	; select bank2
  2269  0697  086A               	movf	(SetupGPS@F4922+1)^(0+256),w
  2270  0698  0021               	movlb	1	; select bank1
  2271  0699  00D9               	movwf	(SetupGPS@MID+1)^(0+128)
  2272  069A  0022               	movlb	2	; select bank2
  2273  069B  0869               	movf	SetupGPS@F4922^(0+256),w
  2274  069C  0021               	movlb	1	; select bank1
  2275  069D  00D8               	movwf	SetupGPS@MID^(0+128)
  2276                           
  2277                           ;launcher_functions.c: 338: unsigned char message[50];
  2278                           ;launcher_functions.c: 341: for(x = 0; x < 6; x++)
  2279  069E  01DC               	clrf	SetupGPS@x^(0+128)
  2280  069F  01DD               	clrf	(SetupGPS@x+1)^(0+128)
  2281  06A0  085D               	movf	(SetupGPS@x+1)^(0+128),w
  2282  06A1  3A80               	xorlw	128
  2283  06A2  0020               	movlb	0	; select bank0
  2284  06A3  00C1               	movwf	??_SetupGPS
  2285  06A4  3080               	movlw	128
  2286  06A5  0241               	subwf	??_SetupGPS,w
  2287  06A6  1D03               	skipz
  2288  06A7  2EAB               	goto	u1975
  2289  06A8  3006               	movlw	6
  2290  06A9  0021               	movlb	1	; select bank1
  2291  06AA  025C               	subwf	SetupGPS@x^(0+128),w
  2292  06AB                     u1975:	
  2293  06AB  1803               	btfsc	3,0
  2294  06AC  2EF1               	goto	l2320
  2295  06AD                     l2310:	
  2296                           
  2297                           ;launcher_functions.c: 342: {
  2298                           ;launcher_functions.c: 343: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2299  06AD  3015               	movlw	21
  2300  06AE  0020               	movlb	0	; select bank0
  2301  06AF  00C3               	movwf	??_SetupGPS+2
  2302  06B0  304B               	movlw	75
  2303  06B1  00C2               	movwf	??_SetupGPS+1
  2304  06B2  30D1               	movlw	209
  2305  06B3  00C1               	movwf	??_SetupGPS
  2306  06B4                     u2757:	
  2307  06B4  0BC1               	decfsz	??_SetupGPS,f
  2308  06B5  2EB4               	goto	u2757
  2309  06B6  0BC2               	decfsz	??_SetupGPS+1,f
  2310  06B7  2EB4               	goto	u2757
  2311  06B8  0BC3               	decfsz	??_SetupGPS+2,f
  2312  06B9  2EB4               	goto	u2757
  2313  06BA  0000               	nop
  2314                           
  2315                           ;launcher_functions.c: 344: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  2316  06BB  3031               	movlw	low (STR_1| (0+32768))
  2317  06BC  0020               	movlb	0	; select bank0
  2318  06BD  00AE               	movwf	sprintf@f
  2319  06BE  3088               	movlw	high (STR_1| (0+32768))
  2320  06BF  00AF               	movwf	sprintf@f+1
  2321  06C0  30D2               	movlw	SetupGPS@startSequence& (0+255)
  2322  06C1  00C1               	movwf	??_SetupGPS
  2323  06C2  0841               	movf	??_SetupGPS,w
  2324  06C3  00B0               	movwf	?_sprintf+2
  2325  06C4  30D8               	movlw	SetupGPS@MID& (0+255)
  2326  06C5  00C2               	movwf	??_SetupGPS+1
  2327  06C6  0842               	movf	??_SetupGPS+1,w
  2328  06C7  00B1               	movwf	?_sprintf+3
  2329  06C8  0021               	movlb	1	; select bank1
  2330  06C9  085D               	movf	(SetupGPS@x+1)^(0+128),w
  2331  06CA  0020               	movlb	0	; select bank0
  2332  06CB  01B3               	clrf	?_sprintf+5
  2333  06CC  07B3               	addwf	?_sprintf+5,f
  2334  06CD  0021               	movlb	1	; select bank1
  2335  06CE  085C               	movf	SetupGPS@x^(0+128),w
  2336  06CF  0020               	movlb	0	; select bank0
  2337  06D0  01B2               	clrf	?_sprintf+4
  2338  06D1  07B2               	addwf	?_sprintf+4,f
  2339  06D2  30A0               	movlw	SetupGPS@message& (0+255)
  2340  06D3  3184  24C3  3186   	fcall	_sprintf
  2341                           
  2342                           ;launcher_functions.c: 345: uart_write_message(message, 22);
  2343  06D6  3016               	movlw	22
  2344  06D7  0020               	movlb	0	; select bank0
  2345  06D8  00A8               	movwf	uart_write_message@size
  2346  06D9  3000               	movlw	0
  2347  06DA  00A9               	movwf	uart_write_message@size+1
  2348  06DB  30A0               	movlw	SetupGPS@message& (0+255)
  2349  06DC  3187  2715  3186   	fcall	_uart_write_message
  2350  06DF  3001               	movlw	1
  2351  06E0  0021               	movlb	1	; select bank1
  2352  06E1  07DC               	addwf	SetupGPS@x^(0+128),f
  2353  06E2  3000               	movlw	0
  2354  06E3  3DDD               	addwfc	(SetupGPS@x+1)^(0+128),f
  2355  06E4  085D               	movf	(SetupGPS@x+1)^(0+128),w
  2356  06E5  3A80               	xorlw	128
  2357  06E6  0020               	movlb	0	; select bank0
  2358  06E7  00C1               	movwf	??_SetupGPS
  2359  06E8  3080               	movlw	128
  2360  06E9  0241               	subwf	??_SetupGPS,w
  2361  06EA  1D03               	skipz
  2362  06EB  2EEF               	goto	u1985
  2363  06EC  3006               	movlw	6
  2364  06ED  0021               	movlb	1	; select bank1
  2365  06EE  025C               	subwf	SetupGPS@x^(0+128),w
  2366  06EF                     u1985:	
  2367  06EF  1C03               	skipc
  2368  06F0  2EAD               	goto	l2310
  2369  06F1                     l2320:	
  2370                           
  2371                           ;launcher_functions.c: 346: }
  2372                           ;launcher_functions.c: 348: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2373  06F1  3015               	movlw	21
  2374  06F2  0020               	movlb	0	; select bank0
  2375  06F3  00C3               	movwf	??_SetupGPS+2
  2376  06F4  304B               	movlw	75
  2377  06F5  00C2               	movwf	??_SetupGPS+1
  2378  06F6  30D1               	movlw	209
  2379  06F7  00C1               	movwf	??_SetupGPS
  2380  06F8                     u2767:	
  2381  06F8  0BC1               	decfsz	??_SetupGPS,f
  2382  06F9  2EF8               	goto	u2767
  2383  06FA  0BC2               	decfsz	??_SetupGPS+1,f
  2384  06FB  2EF8               	goto	u2767
  2385  06FC  0BC3               	decfsz	??_SetupGPS+2,f
  2386  06FD  2EF8               	goto	u2767
  2387  06FE  0000               	nop
  2388                           
  2389                           ;launcher_functions.c: 354: sprintf(message, "%s104,40.441944,-86.9125,0,0,0,0,12,2*", s
      +                          tartSequence);
  2390  06FF  300A               	movlw	low (STR_2| (0+32768))
  2391  0700  0020               	movlb	0	; select bank0
  2392  0701  00AE               	movwf	sprintf@f
  2393  0702  3088               	movlw	high (STR_2| (0+32768))
  2394  0703  00AF               	movwf	sprintf@f+1
  2395  0704  30D2               	movlw	SetupGPS@startSequence& (0+255)
  2396  0705  00C1               	movwf	??_SetupGPS
  2397  0706  0841               	movf	??_SetupGPS,w
  2398  0707  00B0               	movwf	?_sprintf+2
  2399  0708  30A0               	movlw	SetupGPS@message& (0+255)
  2400  0709  3184  24C3  3186   	fcall	_sprintf
  2401                           
  2402                           ;launcher_functions.c: 355: uart_write_message(message, 42);
  2403  070C  302A               	movlw	42
  2404  070D  0020               	movlb	0	; select bank0
  2405  070E  00A8               	movwf	uart_write_message@size
  2406  070F  3000               	movlw	0
  2407  0710  00A9               	movwf	uart_write_message@size+1
  2408  0711  30A0               	movlw	SetupGPS@message& (0+255)
  2409  0712  3187  2715         	fcall	_uart_write_message
  2410  0714  0008               	return
  2411  0715                     __end_of_SetupGPS:	
  2412                           
  2413                           	psect	text4
  2414  0715                     __ptext4:	
  2415 ;; *************** function _uart_write_message *****************
  2416 ;; Defined at:
  2417 ;;		line 289 in file "launcher_functions.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  data            1    wreg     PTR unsigned char 
  2420 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2421 ;;  size            2    8[BANK0 ] int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  data            1   22[BANK0 ] PTR unsigned char 
  2424 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2425 ;;  ascii_checks    2   20[BANK0 ] unsigned char [2]
  2426 ;;  x               2   17[BANK0 ] int 
  2427 ;;  checksum        1   19[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;		None               void
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2437 ;;      Params:         0       2       0       0       0       0       0
  2438 ;;      Locals:         0      10       0       0       0       0       0
  2439 ;;      Temps:          0       3       0       0       0       0       0
  2440 ;;      Totals:         0      15       0       0       0       0       0
  2441 ;;Total ram usage:       15 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		_compute_checksum
  2446 ;;		_uart_xmit
  2447 ;; This function is called by:
  2448 ;;		_SetupGPS
  2449 ;;		_UpdateGPS
  2450 ;;		_DisableGPS
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _uart_write_message
  2456  0715                     _uart_write_message:	
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2460                           ;uart_write_message@data stored from wreg
  2461  0715  0020               	movlb	0	; select bank0
  2462  0716  00B6               	movwf	uart_write_message@data
  2463                           
  2464                           ;launcher_functions.c: 291: int x;
  2465                           ;launcher_functions.c: 292: unsigned char checksum;
  2466                           ;launcher_functions.c: 293: unsigned char ascii_checksum[2];
  2467                           ;launcher_functions.c: 295: checksum = compute_checksum(data, size);
  2468  0717  0829               	movf	uart_write_message@size+1,w
  2469  0718  01A1               	clrf	compute_checksum@size+1
  2470  0719  07A1               	addwf	compute_checksum@size+1,f
  2471  071A  0828               	movf	uart_write_message@size,w
  2472  071B  01A0               	clrf	compute_checksum@size
  2473  071C  07A0               	addwf	compute_checksum@size,f
  2474  071D  0836               	movf	uart_write_message@data,w
  2475  071E  318E  26A4  3187   	fcall	_compute_checksum
  2476  0721  0020               	movlb	0	; select bank0
  2477  0722  00AA               	movwf	??_uart_write_message
  2478  0723  082A               	movf	??_uart_write_message,w
  2479  0724  00B3               	movwf	uart_write_message@checksum
  2480                           
  2481                           ;launcher_functions.c: 296: ascii_checksum[0] = checksum >> 4;
  2482  0725  0833               	movf	uart_write_message@checksum,w
  2483  0726  00AA               	movwf	??_uart_write_message
  2484  0727  3004               	movlw	4
  2485  0728                     u1655:	
  2486  0728  36AA               	lsrf	??_uart_write_message,f
  2487  0729  0B89               	decfsz	9,f
  2488  072A  2F28               	goto	u1655
  2489  072B  082A               	movf	??_uart_write_message,w
  2490  072C  00AB               	movwf	??_uart_write_message+1
  2491  072D  082B               	movf	??_uart_write_message+1,w
  2492  072E  00B4               	movwf	uart_write_message@ascii_checksum
  2493                           
  2494                           ;launcher_functions.c: 297: ascii_checksum[1] = checksum & 0x0F;
  2495  072F  0833               	movf	uart_write_message@checksum,w
  2496  0730  390F               	andlw	15
  2497  0731  00AA               	movwf	??_uart_write_message
  2498  0732  082A               	movf	??_uart_write_message,w
  2499  0733  00B5               	movwf	uart_write_message@ascii_checksum+1
  2500                           
  2501                           ;launcher_functions.c: 299: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  2502  0734  300A               	movlw	10
  2503  0735  0234               	subwf	uart_write_message@ascii_checksum,w
  2504  0736  1C03               	skipc
  2505  0737  2F3A               	goto	l2112
  2506  0738  3037               	movlw	55
  2507  0739  2F3B               	goto	L1
  2508  073A                     l2112:	
  2509  073A  3030               	movlw	48
  2510  073B                     L1:	
  2511  073B  00AD               	movwf	_uart_write_message$1376
  2512  073C  3000               	movlw	0
  2513  073D  00AE               	movwf	_uart_write_message$1376+1
  2514  073E  082D               	movf	_uart_write_message$1376,w
  2515  073F  00AA               	movwf	??_uart_write_message
  2516  0740  082A               	movf	??_uart_write_message,w
  2517  0741  07B4               	addwf	uart_write_message@ascii_checksum,f
  2518                           
  2519                           ;launcher_functions.c: 300: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  2520  0742  300A               	movlw	10
  2521  0743  0235               	subwf	uart_write_message@ascii_checksum+1,w
  2522  0744  1C03               	skipc
  2523  0745  2F48               	goto	l2120
  2524  0746  3037               	movlw	55
  2525  0747  2F49               	goto	L2
  2526  0748                     l2120:	
  2527  0748  3030               	movlw	48
  2528  0749                     L2:	
  2529  0749  00AF               	movwf	_uart_write_message$1377
  2530  074A  3000               	movlw	0
  2531  074B  00B0               	movwf	_uart_write_message$1377+1
  2532  074C  082F               	movf	_uart_write_message$1377,w
  2533  074D  00AA               	movwf	??_uart_write_message
  2534  074E  082A               	movf	??_uart_write_message,w
  2535  074F  07B5               	addwf	uart_write_message@ascii_checksum+1,f
  2536                           
  2537                           ;launcher_functions.c: 302: for(x=0; x<size-1; x++)
  2538  0750  01B1               	clrf	uart_write_message@x
  2539  0751  01B2               	clrf	uart_write_message@x+1
  2540  0752                     l2130:	
  2541  0752  0828               	movf	uart_write_message@size,w
  2542  0753  3EFF               	addlw	255
  2543  0754  00AA               	movwf	??_uart_write_message
  2544  0755  30FF               	movlw	255
  2545  0756  3D29               	addwfc	uart_write_message@size+1,w
  2546  0757  00AB               	movwf	??_uart_write_message+1
  2547  0758  0832               	movf	uart_write_message@x+1,w
  2548  0759  3A80               	xorlw	128
  2549  075A  00AC               	movwf	??_uart_write_message+2
  2550  075B  082B               	movf	??_uart_write_message+1,w
  2551  075C  3A80               	xorlw	128
  2552  075D  022C               	subwf	??_uart_write_message+2,w
  2553  075E  1D03               	skipz
  2554  075F  2F62               	goto	u1685
  2555  0760  082A               	movf	??_uart_write_message,w
  2556  0761  0231               	subwf	uart_write_message@x,w
  2557  0762                     u1685:	
  2558  0762  1803               	btfsc	3,0
  2559  0763  2F75               	goto	l2132
  2560                           
  2561                           ;launcher_functions.c: 303: {
  2562                           ;launcher_functions.c: 304: uart_xmit(data[x]);
  2563  0764  0020               	movlb	0	; select bank0
  2564  0765  0831               	movf	uart_write_message@x,w
  2565  0766  0736               	addwf	uart_write_message@data,w
  2566  0767  00AA               	movwf	??_uart_write_message
  2567  0768  082A               	movf	??_uart_write_message,w
  2568  0769  0086               	movwf	6
  2569  076A  0187               	clrf	7
  2570  076B  0801               	movf	1,w
  2571  076C  318C  24A2  3187   	fcall	_uart_xmit
  2572  076F  3001               	movlw	1
  2573  0770  0020               	movlb	0	; select bank0
  2574  0771  07B1               	addwf	uart_write_message@x,f
  2575  0772  3000               	movlw	0
  2576  0773  3DB2               	addwfc	uart_write_message@x+1,f
  2577  0774  2F52               	goto	l2130
  2578  0775                     l2132:	
  2579                           
  2580                           ;launcher_functions.c: 305: }
  2581                           ;launcher_functions.c: 306: uart_xmit(ascii_checksum[0]);
  2582  0775  0020               	movlb	0	; select bank0
  2583  0776  0834               	movf	uart_write_message@ascii_checksum,w
  2584  0777  318C  24A2  3187   	fcall	_uart_xmit
  2585                           
  2586                           ;launcher_functions.c: 307: uart_xmit(ascii_checksum[1]);
  2587  077A  0020               	movlb	0	; select bank0
  2588  077B  0835               	movf	uart_write_message@ascii_checksum+1,w
  2589  077C  318C  24A2  3187   	fcall	_uart_xmit
  2590                           
  2591                           ;launcher_functions.c: 309: uart_xmit(0x0D);
  2592  077F  300D               	movlw	13
  2593  0780  318C  24A2  3187   	fcall	_uart_xmit
  2594                           
  2595                           ;launcher_functions.c: 310: uart_xmit(0x0A);
  2596  0783  300A               	movlw	10
  2597  0784  318C  24A2  3187   	fcall	_uart_xmit
  2598  0787                     l356:	
  2599                           ;launcher_functions.c: 311: while(!TXSTAbits.TRMT);
  2600                           
  2601  0787  0023               	movlb	3	; select bank3
  2602  0788  189E               	btfsc	30,1	;volatile
  2603  0789  0008               	return
  2604  078A  2F87               	goto	l356
  2605  078B                     __end_of_uart_write_message:	
  2606                           
  2607                           	psect	text5
  2608  0CA2                     __ptext5:	
  2609 ;; *************** function _uart_xmit *****************
  2610 ;; Defined at:
  2611 ;;		line 281 in file "launcher_functions.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  mydata_byte     1    wreg     unsigned char 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;		None               void
  2618 ;; Registers used:
  2619 ;;		wreg
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2625 ;;      Params:         0       0       0       0       0       0       0
  2626 ;;      Locals:         0       1       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0
  2628 ;;      Totals:         0       1       0       0       0       0       0
  2629 ;;Total ram usage:        1 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    2
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_uart_write_message
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function _uart_xmit
  2641  0CA2                     _uart_xmit:	
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in _uart_xmit: [wreg]
  2645                           ;uart_xmit@mydata_byte stored from wreg
  2646  0CA2  0020               	movlb	0	; select bank0
  2647  0CA3  00A0               	movwf	uart_xmit@mydata_byte
  2648  0CA4                     l339:	
  2649                           ;launcher_functions.c: 284: while(!TXSTAbits.TRMT);
  2650                           
  2651  0CA4  0023               	movlb	3	; select bank3
  2652  0CA5  1C9E               	btfss	30,1	;volatile
  2653  0CA6  2CA4               	goto	l339
  2654                           
  2655                           ;launcher_functions.c: 285: TXREG = mydata_byte;
  2656  0CA7  0020               	movlb	0	; select bank0
  2657  0CA8  0820               	movf	uart_xmit@mydata_byte,w
  2658  0CA9  0023               	movlb	3	; select bank3
  2659  0CAA  009A               	movwf	26	;volatile
  2660  0CAB  0008               	return
  2661  0CAC                     __end_of_uart_xmit:	
  2662                           
  2663                           	psect	text6
  2664  0EA4                     __ptext6:	
  2665 ;; *************** function _compute_checksum *****************
  2666 ;; Defined at:
  2667 ;;		line 270 in file "launcher_functions.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  data            1    wreg     PTR unsigned char 
  2670 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2671 ;;  size            2    0[BANK0 ] int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  data            1    5[BANK0 ] PTR unsigned char 
  2674 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(50), DisableGPS@init_117(13), 
  2675 ;;  x               2    6[BANK0 ] int 
  2676 ;;  checksum        1    4[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      unsigned char 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         0       2       0       0       0       0       0
  2687 ;;      Locals:         0       4       0       0       0       0       0
  2688 ;;      Temps:          0       2       0       0       0       0       0
  2689 ;;      Totals:         0       8       0       0       0       0       0
  2690 ;;Total ram usage:        8 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    2
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_uart_write_message
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function _compute_checksum
  2702  0EA4                     _compute_checksum:	
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  2706                           ;compute_checksum@data stored from wreg
  2707  0EA4  0020               	movlb	0	; select bank0
  2708  0EA5  00A5               	movwf	compute_checksum@data
  2709                           
  2710                           ;launcher_functions.c: 272: unsigned char checksum = 0;
  2711  0EA6  01A4               	clrf	compute_checksum@checksum
  2712                           
  2713                           ;launcher_functions.c: 273: int x;
  2714                           ;launcher_functions.c: 274: for(x=0; x<size; x++)
  2715  0EA7  01A6               	clrf	compute_checksum@x
  2716  0EA8  01A7               	clrf	compute_checksum@x+1
  2717  0EA9                     l2006:	
  2718  0EA9  0827               	movf	compute_checksum@x+1,w
  2719  0EAA  3A80               	xorlw	128
  2720  0EAB  00A2               	movwf	??_compute_checksum
  2721  0EAC  0821               	movf	compute_checksum@size+1,w
  2722  0EAD  3A80               	xorlw	128
  2723  0EAE  0222               	subwf	??_compute_checksum,w
  2724  0EAF  1D03               	skipz
  2725  0EB0  2EB3               	goto	u1465
  2726  0EB1  0820               	movf	compute_checksum@size,w
  2727  0EB2  0226               	subwf	compute_checksum@x,w
  2728  0EB3                     u1465:	
  2729  0EB3  1803               	btfsc	3,0
  2730  0EB4  2EE3               	goto	l2008
  2731                           
  2732                           ;launcher_functions.c: 275: {
  2733                           ;launcher_functions.c: 276: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  2734  0EB5  0020               	movlb	0	; select bank0
  2735  0EB6  0826               	movf	compute_checksum@x,w
  2736  0EB7  0725               	addwf	compute_checksum@data,w
  2737  0EB8  00A2               	movwf	??_compute_checksum
  2738  0EB9  0822               	movf	??_compute_checksum,w
  2739  0EBA  0086               	movwf	6
  2740  0EBB  0187               	clrf	7
  2741  0EBC  0801               	movf	1,w
  2742  0EBD  3A24               	xorlw	36
  2743  0EBE  1903               	skipnz
  2744  0EBF  2EDE               	goto	l2004
  2745  0EC0  0826               	movf	compute_checksum@x,w
  2746  0EC1  0725               	addwf	compute_checksum@data,w
  2747  0EC2  00A2               	movwf	??_compute_checksum
  2748  0EC3  0822               	movf	??_compute_checksum,w
  2749  0EC4  0086               	movwf	6
  2750  0EC5  0187               	clrf	7
  2751  0EC6  0801               	movf	1,w
  2752  0EC7  3A2A               	xorlw	42
  2753  0EC8  1903               	skipnz
  2754  0EC9  2EDE               	goto	l2004
  2755  0ECA  0826               	movf	compute_checksum@x,w
  2756  0ECB  0725               	addwf	compute_checksum@data,w
  2757  0ECC  00A2               	movwf	??_compute_checksum
  2758  0ECD  0822               	movf	??_compute_checksum,w
  2759  0ECE  0086               	movwf	6
  2760  0ECF  0187               	clrf	7
  2761  0ED0  0801               	movf	1,w
  2762  0ED1  3A21               	xorlw	33
  2763  0ED2  1903               	skipnz
  2764  0ED3  2EDE               	goto	l2004
  2765                           
  2766                           ;launcher_functions.c: 277: checksum ^= data[x];
  2767  0ED4  0826               	movf	compute_checksum@x,w
  2768  0ED5  0725               	addwf	compute_checksum@data,w
  2769  0ED6  00A2               	movwf	??_compute_checksum
  2770  0ED7  0822               	movf	??_compute_checksum,w
  2771  0ED8  0086               	movwf	6
  2772  0ED9  0187               	clrf	7
  2773  0EDA  0801               	movf	1,w
  2774  0EDB  00A3               	movwf	??_compute_checksum+1
  2775  0EDC  0823               	movf	??_compute_checksum+1,w
  2776  0EDD  06A4               	xorwf	compute_checksum@checksum,f
  2777  0EDE                     l2004:	
  2778  0EDE  3001               	movlw	1
  2779  0EDF  07A6               	addwf	compute_checksum@x,f
  2780  0EE0  3000               	movlw	0
  2781  0EE1  3DA7               	addwfc	compute_checksum@x+1,f
  2782  0EE2  2EA9               	goto	l2006
  2783  0EE3                     l2008:	
  2784                           
  2785                           ;launcher_functions.c: 278: }
  2786                           ;launcher_functions.c: 279: return checksum;
  2787  0EE3  0020               	movlb	0	; select bank0
  2788  0EE4  0824               	movf	compute_checksum@checksum,w
  2789  0EE5  0008               	return
  2790  0EE6                     __end_of_compute_checksum:	
  2791                           
  2792                           	psect	text7
  2793  04C3                     __ptext7:	
  2794 ;; *************** function _sprintf *****************
  2795 ;; Defined at:
  2796 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  sp              1    wreg     PTR unsigned char 
  2799 ;;		 -> SetupGPS@message(50), 
  2800 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2801 ;;		 -> STR_2(39), STR_1(19), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  2804 ;;		 -> SetupGPS@message(50), 
  2805 ;;  _val            4   28[BANK0 ] struct .
  2806 ;;  c               1   32[BANK0 ] char 
  2807 ;;  ap              1   26[BANK0 ] PTR void [1]
  2808 ;;		 -> ?_sprintf(2), 
  2809 ;;  prec            1   25[BANK0 ] char 
  2810 ;;  flag            1   24[BANK0 ] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  2   14[BANK0 ] int 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2820 ;;      Params:         0       6       0       0       0       0       0
  2821 ;;      Locals:         0       9       0       0       0       0       0
  2822 ;;      Temps:          0       4       0       0       0       0       0
  2823 ;;      Totals:         0      19       0       0       0       0       0
  2824 ;;Total ram usage:       19 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    3
  2827 ;; This function calls:
  2828 ;;		___lwdiv
  2829 ;;		___lwmod
  2830 ;; This function is called by:
  2831 ;;		_SetupGPS
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _sprintf
  2837  04C3                     _sprintf:	
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2841                           ;sprintf@sp stored from wreg
  2842  04C3  0020               	movlb	0	; select bank0
  2843  04C4  00BB               	movwf	sprintf@sp
  2844                           
  2845                           ;doprnt.c: 494: va_list ap;
  2846                           ;doprnt.c: 499: signed char c;
  2847                           ;doprnt.c: 506: signed char prec;
  2848                           ;doprnt.c: 508: unsigned char flag;
  2849                           ;doprnt.c: 527: union {
  2850                           ;doprnt.c: 528: unsigned int _val;
  2851                           ;doprnt.c: 529: struct {
  2852                           ;doprnt.c: 530: const char * _cp;
  2853                           ;doprnt.c: 531: unsigned _len;
  2854                           ;doprnt.c: 532: } _str;
  2855                           ;doprnt.c: 533: } _val;
  2856                           ;doprnt.c: 542: *ap = __va_start();
  2857  04C5  3030               	movlw	(?_sprintf+2)& (0+255)
  2858  04C6  00B4               	movwf	??_sprintf
  2859  04C7  0834               	movf	??_sprintf,w
  2860  04C8  00BA               	movwf	sprintf@ap
  2861  04C9                     l2202:	
  2862                           ;doprnt.c: 545: while(c = *f++) {
  2863                           
  2864  04C9  082F               	movf	sprintf@f+1,w
  2865  04CA  00B5               	movwf	??_sprintf+1
  2866  04CB  082E               	movf	sprintf@f,w
  2867  04CC  00B4               	movwf	??_sprintf
  2868  04CD  0AAE               	incf	sprintf@f,f
  2869  04CE  1903               	skipnz
  2870  04CF  0AAF               	incf	sprintf@f+1,f
  2871  04D0  0834               	movf	??_sprintf,w
  2872  04D1  0084               	movwf	4
  2873  04D2  0835               	movf	??_sprintf+1,w
  2874  04D3  0085               	movwf	5
  2875  04D4  0800               	movf	0,w	;code access
  2876  04D5  00B6               	movwf	??_sprintf+2
  2877  04D6  0836               	movf	??_sprintf+2,w
  2878  04D7  00C0               	movwf	sprintf@c
  2879  04D8  08C0               	movf	sprintf@c,f
  2880  04D9  1903               	btfsc	3,2
  2881  04DA  2DC4               	goto	l2204
  2882                           
  2883                           ;doprnt.c: 547: if(c != '%')
  2884  04DB  0840               	movf	sprintf@c,w
  2885  04DC  3A25               	xorlw	37
  2886  04DD  1903               	skipnz
  2887  04DE  2CEB               	goto	l2142
  2888                           
  2889                           ;doprnt.c: 549: {
  2890                           ;doprnt.c: 550: ((*sp++ = (c)));
  2891  04DF  0840               	movf	sprintf@c,w
  2892  04E0  00B4               	movwf	??_sprintf
  2893  04E1  083B               	movf	sprintf@sp,w
  2894  04E2  0086               	movwf	6
  2895  04E3  0187               	clrf	7
  2896  04E4  0834               	movf	??_sprintf,w
  2897  04E5  0081               	movwf	1
  2898  04E6  3001               	movlw	1
  2899  04E7  00B4               	movwf	??_sprintf
  2900  04E8  0834               	movf	??_sprintf,w
  2901  04E9  07BB               	addwf	sprintf@sp,f
  2902                           
  2903                           ;doprnt.c: 551: continue;
  2904  04EA  2CC9               	goto	l2202
  2905  04EB                     l2142:	
  2906                           
  2907                           ;doprnt.c: 552: }
  2908                           ;doprnt.c: 557: flag = 0;
  2909  04EB  01B8               	clrf	sprintf@flag
  2910                           
  2911                           ;doprnt.c: 644: switch(c = *f++) {
  2912  04EC  2D1C               	goto	l2162
  2913  04ED                     l2144:	
  2914                           ;doprnt.c: 737: case 's':
  2915                           
  2916                           ;doprnt.c: 707: case 'i':
  2917                           ;doprnt.c: 708: break;
  2918                           
  2919                           ;doprnt.c: 706: case 'd':
  2920                           
  2921                           ;doprnt.c: 647: goto alldone;
  2922                           
  2923                           ;doprnt.c: 646: case 0:
  2924                           
  2925                           
  2926                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  2927  04ED  083A               	movf	sprintf@ap,w
  2928  04EE  0086               	movwf	6
  2929  04EF  0187               	clrf	7
  2930  04F0  0801               	movf	1,w
  2931  04F1  00BC               	movwf	sprintf@_val
  2932  04F2  3000               	movlw	0
  2933  04F3  00BD               	movwf	sprintf@_val+1
  2934  04F4  3001               	movlw	1
  2935  04F5  00B4               	movwf	??_sprintf
  2936  04F6  0834               	movf	??_sprintf,w
  2937  04F7  07BA               	addwf	sprintf@ap,f
  2938                           
  2939                           ;doprnt.c: 749: if(!_val._str._cp)
  2940  04F8  083D               	movf	sprintf@_val+1,w
  2941  04F9  043C               	iorwf	sprintf@_val,w
  2942  04FA  1D03               	skipz
  2943  04FB  2D00               	goto	l2158
  2944                           
  2945                           ;doprnt.c: 750: _val._str._cp = "(null)";
  2946  04FC  3044               	movlw	low (STR_3| (0+32768))
  2947  04FD  00BC               	movwf	sprintf@_val
  2948  04FE  3088               	movlw	high (STR_3| (0+32768))
  2949  04FF  00BD               	movwf	sprintf@_val+1
  2950  0500                     l2158:	
  2951                           ;doprnt.c: 786: while(*_val._str._cp)
  2952                           
  2953  0500  083C               	movf	sprintf@_val,w
  2954  0501  0084               	movwf	4
  2955  0502  083D               	movf	sprintf@_val+1,w
  2956  0503  0085               	movwf	5
  2957  0504  0800               	movf	0,w	;code access
  2958  0505  3800               	iorlw	0
  2959  0506  1903               	btfsc	3,2
  2960  0507  2CC9               	goto	l2202
  2961                           
  2962                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  2963  0508  083C               	movf	sprintf@_val,w
  2964  0509  0084               	movwf	4
  2965  050A  083D               	movf	sprintf@_val+1,w
  2966  050B  0085               	movwf	5
  2967  050C  0800               	movf	0,w	;code access
  2968  050D  00B4               	movwf	??_sprintf
  2969  050E  083B               	movf	sprintf@sp,w
  2970  050F  0086               	movwf	6
  2971  0510  0187               	clrf	7
  2972  0511  0834               	movf	??_sprintf,w
  2973  0512  0081               	movwf	1
  2974  0513  3001               	movlw	1
  2975  0514  07BC               	addwf	sprintf@_val,f
  2976  0515  3000               	movlw	0
  2977  0516  3DBD               	addwfc	sprintf@_val+1,f
  2978  0517  3001               	movlw	1
  2979  0518  00B4               	movwf	??_sprintf
  2980  0519  0834               	movf	??_sprintf,w
  2981  051A  07BB               	addwf	sprintf@sp,f
  2982  051B  2D00               	goto	l2158
  2983  051C                     l2162:	
  2984                           ;doprnt.c: 831: }
  2985                           
  2986                           ;doprnt.c: 822: continue;
  2987                           
  2988                           ;doprnt.c: 811: default:
  2989                           
  2990                           ;doprnt.c: 788: continue;
  2991                           
  2992  051C  082F               	movf	sprintf@f+1,w
  2993  051D  00B5               	movwf	??_sprintf+1
  2994  051E  082E               	movf	sprintf@f,w
  2995  051F  00B4               	movwf	??_sprintf
  2996  0520  0AAE               	incf	sprintf@f,f
  2997  0521  1903               	skipnz
  2998  0522  0AAF               	incf	sprintf@f+1,f
  2999  0523  0834               	movf	??_sprintf,w
  3000  0524  0084               	movwf	4
  3001  0525  0835               	movf	??_sprintf+1,w
  3002  0526  0085               	movwf	5
  3003  0527  0800               	movf	0,w	;code access
  3004  0528  00C0               	movwf	sprintf@c
  3005                           
  3006                           ; Switch size 1, requested type "space"
  3007                           ; Number of cases is 4, Range of values is 0 to 115
  3008                           ; switch strategies available:
  3009                           ; Name         Instructions Cycles
  3010                           ; simple_byte           13     7 (average)
  3011                           ; direct_byte          238     6 (fixed)
  3012                           ; jumptable            260     6 (fixed)
  3013                           ;	Chosen strategy is simple_byte
  3014  0529  3A00               	xorlw	0	; case 0
  3015  052A  1903               	skipnz
  3016  052B  2DC4               	goto	l2204
  3017  052C  3A64               	xorlw	100	; case 100
  3018  052D  1903               	skipnz
  3019  052E  2D36               	goto	l2164
  3020  052F  3A0D               	xorlw	13	; case 105
  3021  0530  1903               	skipnz
  3022  0531  2D36               	goto	l2164
  3023  0532  3A1A               	xorlw	26	; case 115
  3024  0533  1903               	skipnz
  3025  0534  2CED               	goto	l2144
  3026  0535  2CC9               	goto	l2202
  3027  0536                     l2164:	
  3028                           
  3029                           ;doprnt.c: 1262: {
  3030                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3031  0536  083A               	movf	sprintf@ap,w
  3032  0537  0086               	movwf	6
  3033  0538  0187               	clrf	7
  3034  0539  3F40               	moviw [0]fsr1
  3035  053A  00BC               	movwf	sprintf@_val
  3036  053B  3F41               	moviw [1]fsr1
  3037  053C  00BD               	movwf	sprintf@_val+1
  3038  053D  3002               	movlw	2
  3039  053E  00B4               	movwf	??_sprintf
  3040  053F  0834               	movf	??_sprintf,w
  3041  0540  07BA               	addwf	sprintf@ap,f
  3042                           
  3043                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3044  0541  1FBD               	btfss	sprintf@_val+1,7
  3045  0542  2D4C               	goto	l2174
  3046                           
  3047                           ;doprnt.c: 1271: flag |= 0x03;
  3048  0543  3003               	movlw	3
  3049  0544  00B4               	movwf	??_sprintf
  3050  0545  0834               	movf	??_sprintf,w
  3051  0546  04B8               	iorwf	sprintf@flag,f
  3052                           
  3053                           ;doprnt.c: 1272: _val._val = -_val._val;
  3054  0547  09BC               	comf	sprintf@_val,f
  3055  0548  09BD               	comf	sprintf@_val+1,f
  3056  0549  0ABC               	incf	sprintf@_val,f
  3057  054A  1903               	skipnz
  3058  054B  0ABD               	incf	sprintf@_val+1,f
  3059  054C                     l2174:	
  3060                           
  3061                           ;doprnt.c: 1273: }
  3062                           ;doprnt.c: 1275: }
  3063                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3064  054C  01C0               	clrf	sprintf@c
  3065  054D  0AC0               	incf	sprintf@c,f
  3066  054E  0840               	movf	sprintf@c,w
  3067  054F  3A05               	xorlw	5
  3068  0550  1903               	btfsc	3,2
  3069  0551  2D71               	goto	l2186
  3070  0552                     l2178:	
  3071                           
  3072                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3073  0552  0840               	movf	sprintf@c,w
  3074  0553  00B4               	movwf	??_sprintf
  3075  0554  01B5               	clrf	??_sprintf+1
  3076  0555  35B4               	lslf	??_sprintf,f
  3077  0556  0DB5               	rlf	??_sprintf+1,f
  3078  0557  3000               	movlw	low (_dpowers| (0+32768))
  3079  0558  0734               	addwf	??_sprintf,w
  3080  0559  0084               	movwf	4
  3081  055A  3088               	movlw	high (_dpowers| (0+32768))
  3082  055B  3D35               	addwfc	??_sprintf+1,w
  3083  055C  0085               	movwf	5
  3084  055D  3F00               	moviw [0]fsr0
  3085  055E  00B6               	movwf	??_sprintf+2
  3086  055F  3F01               	moviw [1]fsr0
  3087  0560  00B7               	movwf	??_sprintf+3
  3088  0561  0837               	movf	??_sprintf+3,w
  3089  0562  023D               	subwf	sprintf@_val+1,w
  3090  0563  1D03               	skipz
  3091  0564  2D67               	goto	u1755
  3092  0565  0836               	movf	??_sprintf+2,w
  3093  0566  023C               	subwf	sprintf@_val,w
  3094  0567                     u1755:	
  3095  0567  1C03               	btfss	3,0
  3096  0568  2D71               	goto	l2186
  3097                           
  3098                           ;doprnt.c: 1316: break;
  3099  0569  3001               	movlw	1
  3100  056A  00B4               	movwf	??_sprintf
  3101  056B  0834               	movf	??_sprintf,w
  3102  056C  07C0               	addwf	sprintf@c,f
  3103  056D  0840               	movf	sprintf@c,w
  3104  056E  3A05               	xorlw	5
  3105  056F  1D03               	skipz
  3106  0570  2D52               	goto	l2178
  3107  0571                     l2186:	
  3108                           
  3109                           ;doprnt.c: 1431: {
  3110                           ;doprnt.c: 1447: if(flag & 0x03)
  3111  0571  0838               	movf	sprintf@flag,w
  3112  0572  3903               	andlw	3
  3113  0573  1903               	btfsc	3,2
  3114  0574  2D80               	goto	l2192
  3115                           
  3116                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3117  0575  302D               	movlw	45
  3118  0576  00B4               	movwf	??_sprintf
  3119  0577  083B               	movf	sprintf@sp,w
  3120  0578  0086               	movwf	6
  3121  0579  0187               	clrf	7
  3122  057A  0834               	movf	??_sprintf,w
  3123  057B  0081               	movwf	1
  3124  057C  3001               	movlw	1
  3125  057D  00B4               	movwf	??_sprintf
  3126  057E  0834               	movf	??_sprintf,w
  3127  057F  07BB               	addwf	sprintf@sp,f
  3128  0580                     l2192:	
  3129                           
  3130                           ;doprnt.c: 1478: }
  3131                           ;doprnt.c: 1481: prec = c;
  3132  0580  0840               	movf	sprintf@c,w
  3133  0581  00B4               	movwf	??_sprintf
  3134  0582  0834               	movf	??_sprintf,w
  3135  0583  00B9               	movwf	sprintf@prec
  3136  0584                     l2200:	
  3137                           ;doprnt.c: 1483: while(prec--) {
  3138                           
  3139  0584  30FF               	movlw	-1
  3140  0585  00B4               	movwf	??_sprintf
  3141  0586  0834               	movf	??_sprintf,w
  3142  0587  07B9               	addwf	sprintf@prec,f
  3143  0588  0839               	movf	sprintf@prec,w
  3144  0589  3AFF               	xorlw	255
  3145  058A  1903               	btfsc	3,2
  3146  058B  2CC9               	goto	l2202
  3147                           
  3148                           ;doprnt.c: 1487: {
  3149                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3150  058C  300A               	movlw	10
  3151  058D  00A8               	movwf	___lwmod@divisor
  3152  058E  3000               	movlw	0
  3153  058F  00A9               	movwf	___lwmod@divisor+1
  3154  0590  0839               	movf	sprintf@prec,w
  3155  0591  00B4               	movwf	??_sprintf
  3156  0592  01B5               	clrf	??_sprintf+1
  3157  0593  35B4               	lslf	??_sprintf,f
  3158  0594  0DB5               	rlf	??_sprintf+1,f
  3159  0595  3000               	movlw	low (_dpowers| (0+32768))
  3160  0596  0734               	addwf	??_sprintf,w
  3161  0597  0084               	movwf	4
  3162  0598  3088               	movlw	high (_dpowers| (0+32768))
  3163  0599  3D35               	addwfc	??_sprintf+1,w
  3164  059A  0085               	movwf	5
  3165  059B  3F00               	moviw [0]fsr0
  3166  059C  00A0               	movwf	___lwdiv@divisor
  3167  059D  3F01               	moviw [1]fsr0
  3168  059E  00A1               	movwf	___lwdiv@divisor+1
  3169  059F  083D               	movf	sprintf@_val+1,w
  3170  05A0  01A3               	clrf	___lwdiv@dividend+1
  3171  05A1  07A3               	addwf	___lwdiv@dividend+1,f
  3172  05A2  083C               	movf	sprintf@_val,w
  3173  05A3  01A2               	clrf	___lwdiv@dividend
  3174  05A4  07A2               	addwf	___lwdiv@dividend,f
  3175  05A5  318E  266D  3184   	fcall	___lwdiv
  3176  05A8  0020               	movlb	0	; select bank0
  3177  05A9  0821               	movf	?___lwdiv+1,w
  3178  05AA  01AB               	clrf	___lwmod@dividend+1
  3179  05AB  07AB               	addwf	___lwmod@dividend+1,f
  3180  05AC  0820               	movf	?___lwdiv,w
  3181  05AD  01AA               	clrf	___lwmod@dividend
  3182  05AE  07AA               	addwf	___lwmod@dividend,f
  3183  05AF  318E  263E  3184   	fcall	___lwmod
  3184  05B2  0020               	movlb	0	; select bank0
  3185  05B3  0828               	movf	?___lwmod,w
  3186  05B4  3E30               	addlw	48
  3187  05B5  00B6               	movwf	??_sprintf+2
  3188  05B6  0836               	movf	??_sprintf+2,w
  3189  05B7  00C0               	movwf	sprintf@c
  3190                           
  3191                           ;doprnt.c: 1532: }
  3192                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3193  05B8  0840               	movf	sprintf@c,w
  3194  05B9  00B4               	movwf	??_sprintf
  3195  05BA  083B               	movf	sprintf@sp,w
  3196  05BB  0086               	movwf	6
  3197  05BC  0187               	clrf	7
  3198  05BD  0834               	movf	??_sprintf,w
  3199  05BE  0081               	movwf	1
  3200  05BF  3001               	movlw	1
  3201  05C0  00B4               	movwf	??_sprintf
  3202  05C1  0834               	movf	??_sprintf,w
  3203  05C2  07BB               	addwf	sprintf@sp,f
  3204  05C3  2D84               	goto	l2200
  3205  05C4                     l2204:	
  3206                           ;doprnt.c: 1534: }
  3207                           ;doprnt.c: 1542: }
  3208                           ;doprnt.c: 1544: alldone:
  3209                           
  3210                           
  3211                           ;doprnt.c: 1547: *sp = 0;
  3212  05C4  083B               	movf	sprintf@sp,w
  3213  05C5  0086               	movwf	6
  3214  05C6  0187               	clrf	7
  3215  05C7  0181               	clrf	1
  3216  05C8  0008               	return
  3217  05C9                     __end_of_sprintf:	
  3218                           ;doprnt.c: 1549: return 0;
  3219                           ;	Return value of _sprintf is never used
  3220                           
  3221                           
  3222                           	psect	text8
  3223  0E3E                     __ptext8:	
  3224 ;; *************** function ___lwmod *****************
  3225 ;; Defined at:
  3226 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  divisor         2    8[BANK0 ] unsigned int 
  3229 ;;  dividend        2   10[BANK0 ] unsigned int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  counter         1   13[BANK0 ] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  2    8[BANK0 ] unsigned int 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3241 ;;      Params:         0       4       0       0       0       0       0
  3242 ;;      Locals:         0       1       0       0       0       0       0
  3243 ;;      Temps:          0       1       0       0       0       0       0
  3244 ;;      Totals:         0       6       0       0       0       0       0
  3245 ;;Total ram usage:        6 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    2
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_sprintf
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function ___lwmod
  3257  0E3E                     ___lwmod:	
  3258                           
  3259                           ;incstack = 0
  3260                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3261  0E3E  0020               	movlb	0	; select bank0
  3262  0E3F  0829               	movf	___lwmod@divisor+1,w
  3263  0E40  0428               	iorwf	___lwmod@divisor,w
  3264  0E41  1903               	skipnz
  3265  0E42  2E66               	goto	l2060
  3266  0E43  01AD               	clrf	___lwmod@counter
  3267  0E44  0AAD               	incf	___lwmod@counter,f
  3268  0E45                     l2050:	
  3269  0E45  1BA9               	btfsc	___lwmod@divisor+1,7
  3270  0E46  2E51               	goto	l2052
  3271  0E47  3001               	movlw	1
  3272  0E48                     u1565:	
  3273  0E48  35A8               	lslf	___lwmod@divisor,f
  3274  0E49  0DA9               	rlf	___lwmod@divisor+1,f
  3275  0E4A  0B89               	decfsz	9,f
  3276  0E4B  2E48               	goto	u1565
  3277  0E4C  3001               	movlw	1
  3278  0E4D  00AC               	movwf	??___lwmod
  3279  0E4E  082C               	movf	??___lwmod,w
  3280  0E4F  07AD               	addwf	___lwmod@counter,f
  3281  0E50  2E45               	goto	l2050
  3282  0E51                     l2052:	
  3283  0E51  0829               	movf	___lwmod@divisor+1,w
  3284  0E52  022B               	subwf	___lwmod@dividend+1,w
  3285  0E53  1D03               	skipz
  3286  0E54  2E57               	goto	u1585
  3287  0E55  0828               	movf	___lwmod@divisor,w
  3288  0E56  022A               	subwf	___lwmod@dividend,w
  3289  0E57                     u1585:	
  3290  0E57  1C03               	skipc
  3291  0E58  2E5D               	goto	l2056
  3292  0E59  0828               	movf	___lwmod@divisor,w
  3293  0E5A  02AA               	subwf	___lwmod@dividend,f
  3294  0E5B  0829               	movf	___lwmod@divisor+1,w
  3295  0E5C  3BAB               	subwfb	___lwmod@dividend+1,f
  3296  0E5D                     l2056:	
  3297  0E5D  3001               	movlw	1
  3298  0E5E                     u1595:	
  3299  0E5E  36A9               	lsrf	___lwmod@divisor+1,f
  3300  0E5F  0CA8               	rrf	___lwmod@divisor,f
  3301  0E60  0B89               	decfsz	9,f
  3302  0E61  2E5E               	goto	u1595
  3303  0E62  3001               	movlw	1
  3304  0E63  02AD               	subwf	___lwmod@counter,f
  3305  0E64  1D03               	btfss	3,2
  3306  0E65  2E51               	goto	l2052
  3307  0E66                     l2060:	
  3308  0E66  082B               	movf	___lwmod@dividend+1,w
  3309  0E67  01A9               	clrf	?___lwmod+1
  3310  0E68  07A9               	addwf	?___lwmod+1,f
  3311  0E69  082A               	movf	___lwmod@dividend,w
  3312  0E6A  01A8               	clrf	?___lwmod
  3313  0E6B  07A8               	addwf	?___lwmod,f
  3314  0E6C  0008               	return
  3315  0E6D                     __end_of___lwmod:	
  3316                           
  3317                           	psect	text9
  3318  0E6D                     __ptext9:	
  3319 ;; *************** function ___lwdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  divisor         2    0[BANK0 ] unsigned int 
  3324 ;;  dividend        2    2[BANK0 ] unsigned int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        2    5[BANK0 ] unsigned int 
  3327 ;;  counter         1    7[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    0[BANK0 ] unsigned int 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3337 ;;      Params:         0       4       0       0       0       0       0
  3338 ;;      Locals:         0       3       0       0       0       0       0
  3339 ;;      Temps:          0       1       0       0       0       0       0
  3340 ;;      Totals:         0       8       0       0       0       0       0
  3341 ;;Total ram usage:        8 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_sprintf
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function ___lwdiv
  3353  0E6D                     ___lwdiv:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3357  0E6D  0020               	movlb	0	; select bank0
  3358  0E6E  01A5               	clrf	___lwdiv@quotient
  3359  0E6F  01A6               	clrf	___lwdiv@quotient+1
  3360  0E70  0821               	movf	___lwdiv@divisor+1,w
  3361  0E71  0420               	iorwf	___lwdiv@divisor,w
  3362  0E72  1903               	skipnz
  3363  0E73  2E9D               	goto	l2038
  3364  0E74  01A7               	clrf	___lwdiv@counter
  3365  0E75  0AA7               	incf	___lwdiv@counter,f
  3366  0E76                     l2026:	
  3367  0E76  1BA1               	btfsc	___lwdiv@divisor+1,7
  3368  0E77  2E82               	goto	l2028
  3369  0E78  3001               	movlw	1
  3370  0E79                     u1495:	
  3371  0E79  35A0               	lslf	___lwdiv@divisor,f
  3372  0E7A  0DA1               	rlf	___lwdiv@divisor+1,f
  3373  0E7B  0B89               	decfsz	9,f
  3374  0E7C  2E79               	goto	u1495
  3375  0E7D  3001               	movlw	1
  3376  0E7E  00A4               	movwf	??___lwdiv
  3377  0E7F  0824               	movf	??___lwdiv,w
  3378  0E80  07A7               	addwf	___lwdiv@counter,f
  3379  0E81  2E76               	goto	l2026
  3380  0E82                     l2028:	
  3381  0E82  3001               	movlw	1
  3382  0E83                     u1515:	
  3383  0E83  35A5               	lslf	___lwdiv@quotient,f
  3384  0E84  0DA6               	rlf	___lwdiv@quotient+1,f
  3385  0E85  0B89               	decfsz	9,f
  3386  0E86  2E83               	goto	u1515
  3387  0E87  0821               	movf	___lwdiv@divisor+1,w
  3388  0E88  0223               	subwf	___lwdiv@dividend+1,w
  3389  0E89  1D03               	skipz
  3390  0E8A  2E8D               	goto	u1525
  3391  0E8B  0820               	movf	___lwdiv@divisor,w
  3392  0E8C  0222               	subwf	___lwdiv@dividend,w
  3393  0E8D                     u1525:	
  3394  0E8D  1C03               	skipc
  3395  0E8E  2E94               	goto	l2034
  3396  0E8F  0820               	movf	___lwdiv@divisor,w
  3397  0E90  02A2               	subwf	___lwdiv@dividend,f
  3398  0E91  0821               	movf	___lwdiv@divisor+1,w
  3399  0E92  3BA3               	subwfb	___lwdiv@dividend+1,f
  3400  0E93  1425               	bsf	___lwdiv@quotient,0
  3401  0E94                     l2034:	
  3402  0E94  3001               	movlw	1
  3403  0E95                     u1535:	
  3404  0E95  36A1               	lsrf	___lwdiv@divisor+1,f
  3405  0E96  0CA0               	rrf	___lwdiv@divisor,f
  3406  0E97  0B89               	decfsz	9,f
  3407  0E98  2E95               	goto	u1535
  3408  0E99  3001               	movlw	1
  3409  0E9A  02A7               	subwf	___lwdiv@counter,f
  3410  0E9B  1D03               	btfss	3,2
  3411  0E9C  2E82               	goto	l2028
  3412  0E9D                     l2038:	
  3413  0E9D  0826               	movf	___lwdiv@quotient+1,w
  3414  0E9E  01A1               	clrf	?___lwdiv+1
  3415  0E9F  07A1               	addwf	?___lwdiv+1,f
  3416  0EA0  0825               	movf	___lwdiv@quotient,w
  3417  0EA1  01A0               	clrf	?___lwdiv
  3418  0EA2  07A0               	addwf	?___lwdiv,f
  3419  0EA3  0008               	return
  3420  0EA4                     __end_of___lwdiv:	
  3421                           
  3422                           	psect	text10
  3423  011C                     __ptext10:	
  3424 ;; *************** function _DecodeGPS *****************
  3425 ;; Defined at:
  3426 ;;		line 399 in file "launcher_functions.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  messageID       7   31[BANK0 ] unsigned char [7]
  3431 ;;  longitude       3   44[BANK0 ] unsigned char [3]
  3432 ;;  latitude        3   41[BANK0 ] unsigned char [3]
  3433 ;;  x               2   47[BANK0 ] int 
  3434 ;;  status          1   40[BANK0 ] unsigned char 
  3435 ;;  eastWest        1   39[BANK0 ] unsigned char 
  3436 ;;  northSouth      1   38[BANK0 ] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3446 ;;      Params:         0       0       0       0       0       0       0
  3447 ;;      Locals:         0      18       0       0       0       0       0
  3448 ;;      Temps:          0       3       0       0       0       0       0
  3449 ;;      Totals:         0      21       0       0       0       0       0
  3450 ;;Total ram usage:       21 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    6
  3453 ;; This function calls:
  3454 ;;		_SendGPSSPI
  3455 ;;		___awdiv
  3456 ;;		___bmul
  3457 ;;		___wmul
  3458 ;; This function is called by:
  3459 ;;		_UpdateGPS
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _DecodeGPS
  3465  011C                     _DecodeGPS:	
  3466                           
  3467                           ;launcher_functions.c: 402: unsigned char messageID[7] = "$GPGLL";
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3471  011C  305C               	movlw	low DecodeGPS@F4931
  3472  011D  0086               	movwf	6
  3473  011E  3001               	movlw	high DecodeGPS@F4931
  3474  011F  0087               	movwf	7
  3475  0120  303F               	movlw	low DecodeGPS@messageID
  3476  0121  0084               	movwf	4
  3477  0122  3000               	movlw	high DecodeGPS@messageID
  3478  0123  0085               	movwf	5
  3479  0124  3007               	movlw	7
  3480  0125  0020               	movlb	0	; select bank0
  3481  0126  00BC               	movwf	??_DecodeGPS
  3482  0127                     u2000:	
  3483  0127  0016               	moviw fsr1++
  3484  0128  001A               	movwi fsr0++
  3485  0129  0BBC               	decfsz	??_DecodeGPS,f
  3486  012A  2927               	goto	u2000
  3487                           
  3488                           ;launcher_functions.c: 403: unsigned char latitude[3] = {0,0,0};
  3489  012B  0022               	movlb	2	; select bank2
  3490  012C  0824               	movf	DecodeGPS@F4933^(0+256),w
  3491  012D  0020               	movlb	0	; select bank0
  3492  012E  00C9               	movwf	DecodeGPS@latitude
  3493  012F  0022               	movlb	2	; select bank2
  3494  0130  0825               	movf	(DecodeGPS@F4933+1)^(0+256),w
  3495  0131  0020               	movlb	0	; select bank0
  3496  0132  00CA               	movwf	DecodeGPS@latitude+1
  3497  0133  0022               	movlb	2	; select bank2
  3498  0134  0826               	movf	(DecodeGPS@F4933+2)^(0+256),w
  3499  0135  0020               	movlb	0	; select bank0
  3500  0136  00CB               	movwf	DecodeGPS@latitude+2
  3501                           
  3502                           ;launcher_functions.c: 404: unsigned char longitude[3] = {0,0,0};
  3503  0137  0022               	movlb	2	; select bank2
  3504  0138  0827               	movf	DecodeGPS@F4935^(0+256),w
  3505  0139  0020               	movlb	0	; select bank0
  3506  013A  00CC               	movwf	DecodeGPS@longitude
  3507  013B  0022               	movlb	2	; select bank2
  3508  013C  0828               	movf	(DecodeGPS@F4935+1)^(0+256),w
  3509  013D  0020               	movlb	0	; select bank0
  3510  013E  00CD               	movwf	DecodeGPS@longitude+1
  3511  013F  0022               	movlb	2	; select bank2
  3512  0140  0829               	movf	(DecodeGPS@F4935+2)^(0+256),w
  3513  0141  0020               	movlb	0	; select bank0
  3514  0142  00CE               	movwf	DecodeGPS@longitude+2
  3515                           
  3516                           ;launcher_functions.c: 405: unsigned char northSouth;
  3517                           ;launcher_functions.c: 406: unsigned char eastWest;
  3518                           ;launcher_functions.c: 407: unsigned char status;
  3519                           ;launcher_functions.c: 408: int x;
  3520                           ;launcher_functions.c: 410: for(x=0;x<6;x++)
  3521  0143  01CF               	clrf	DecodeGPS@x
  3522  0144  01D0               	clrf	DecodeGPS@x+1
  3523  0145  0850               	movf	DecodeGPS@x+1,w
  3524  0146  3A80               	xorlw	128
  3525  0147  00BC               	movwf	??_DecodeGPS
  3526  0148  3080               	movlw	128
  3527  0149  023C               	subwf	??_DecodeGPS,w
  3528  014A  1D03               	skipz
  3529  014B  294E               	goto	u2015
  3530  014C  3006               	movlw	6
  3531  014D  024F               	subwf	DecodeGPS@x,w
  3532  014E                     u2015:	
  3533  014E  1803               	btfsc	3,0
  3534  014F  2971               	goto	l2354
  3535  0150                     l2348:	
  3536                           
  3537                           ;launcher_functions.c: 411: {
  3538                           ;launcher_functions.c: 412: if(gpsMessage[x] != messageID[x])
  3539  0150  0020               	movlb	0	; select bank0
  3540  0151  084F               	movf	DecodeGPS@x,w
  3541  0152  3E3F               	addlw	DecodeGPS@messageID& (0+255)
  3542  0153  0086               	movwf	6
  3543  0154  0187               	clrf	7
  3544  0155  084F               	movf	DecodeGPS@x,w
  3545  0156  3E2A               	addlw	_gpsMessage& (0+255)
  3546  0157  0084               	movwf	4
  3547  0158  3001               	movlw	1	; select bank2/3
  3548  0159  0085               	movwf	5
  3549  015A  0800               	movf	0,w
  3550  015B  0601               	xorwf	1,w
  3551  015C  1903               	skipnz
  3552  015D  2961               	goto	l2352
  3553                           
  3554                           ;launcher_functions.c: 413: gpsInvalidFlag = 1;
  3555  015E  0021               	movlb	1	; select bank1
  3556  015F  01E8               	clrf	_gpsInvalidFlag^(0+128)
  3557  0160  0AE8               	incf	_gpsInvalidFlag^(0+128),f
  3558  0161                     l2352:	
  3559  0161  3001               	movlw	1
  3560  0162  0020               	movlb	0	; select bank0
  3561  0163  07CF               	addwf	DecodeGPS@x,f
  3562  0164  3000               	movlw	0
  3563  0165  3DD0               	addwfc	DecodeGPS@x+1,f
  3564  0166  0850               	movf	DecodeGPS@x+1,w
  3565  0167  3A80               	xorlw	128
  3566  0168  00BC               	movwf	??_DecodeGPS
  3567  0169  3080               	movlw	128
  3568  016A  023C               	subwf	??_DecodeGPS,w
  3569  016B  1D03               	skipz
  3570  016C  296F               	goto	u2035
  3571  016D  3006               	movlw	6
  3572  016E  024F               	subwf	DecodeGPS@x,w
  3573  016F                     u2035:	
  3574  016F  1C03               	skipc
  3575  0170  2950               	goto	l2348
  3576  0171                     l2354:	
  3577                           
  3578                           ;launcher_functions.c: 414: }
  3579                           ;launcher_functions.c: 417: x = x + 1;
  3580  0171  0020               	movlb	0	; select bank0
  3581  0172  084F               	movf	DecodeGPS@x,w
  3582  0173  3E01               	addlw	1
  3583  0174  00CF               	movwf	DecodeGPS@x
  3584  0175  3000               	movlw	0
  3585  0176  3D50               	addwfc	DecodeGPS@x+1,w
  3586  0177  00D0               	movwf	DecodeGPS@x+1
  3587                           
  3588                           ;launcher_functions.c: 420: if(gpsMessage[x]!= ',')
  3589  0178  084F               	movf	DecodeGPS@x,w
  3590  0179  3E2A               	addlw	_gpsMessage& (0+255)
  3591  017A  0086               	movwf	6
  3592  017B  3001               	movlw	1	; select bank2/3
  3593  017C  0087               	movwf	7
  3594  017D  0801               	movf	1,w
  3595  017E  3A2C               	xorlw	44
  3596  017F  1903               	skipnz
  3597  0180  2A1A               	goto	l2386
  3598                           
  3599                           ;launcher_functions.c: 421: {
  3600                           ;launcher_functions.c: 423: latitude[0] = (gpsMessage[x++] - 48)*10;
  3601  0181  300A               	movlw	10
  3602  0182  00BC               	movwf	??_DecodeGPS
  3603  0183  083C               	movf	??_DecodeGPS,w
  3604  0184  00A0               	movwf	___bmul@multiplicand
  3605  0185  084F               	movf	DecodeGPS@x,w
  3606  0186  3E2A               	addlw	_gpsMessage& (0+255)
  3607  0187  0086               	movwf	6
  3608  0188  3001               	movlw	1	; select bank2/3
  3609  0189  0087               	movwf	7
  3610  018A  0801               	movf	1,w
  3611  018B  3ED0               	addlw	208
  3612  018C  318D  251C  3181   	fcall	___bmul
  3613  018F  0020               	movlb	0	; select bank0
  3614  0190  00BD               	movwf	??_DecodeGPS+1
  3615  0191  083D               	movf	??_DecodeGPS+1,w
  3616  0192  00C9               	movwf	DecodeGPS@latitude
  3617  0193  3001               	movlw	1
  3618  0194  07CF               	addwf	DecodeGPS@x,f
  3619  0195  3000               	movlw	0
  3620  0196  3DD0               	addwfc	DecodeGPS@x+1,f
  3621                           
  3622                           ;launcher_functions.c: 424: latitude[0] += (gpsMessage[x++] - 48);
  3623  0197  084F               	movf	DecodeGPS@x,w
  3624  0198  3E2A               	addlw	_gpsMessage& (0+255)
  3625  0199  0086               	movwf	6
  3626  019A  3001               	movlw	1	; select bank2/3
  3627  019B  0087               	movwf	7
  3628  019C  0801               	movf	1,w
  3629  019D  3ED0               	addlw	208
  3630  019E  00BC               	movwf	??_DecodeGPS
  3631  019F  083C               	movf	??_DecodeGPS,w
  3632  01A0  07C9               	addwf	DecodeGPS@latitude,f
  3633  01A1  3001               	movlw	1
  3634  01A2  07CF               	addwf	DecodeGPS@x,f
  3635  01A3  3000               	movlw	0
  3636  01A4  3DD0               	addwfc	DecodeGPS@x+1,f
  3637                           
  3638                           ;launcher_functions.c: 427: latitude[1] = (gpsMessage[x++] - 48)*10;
  3639  01A5  300A               	movlw	10
  3640  01A6  00BC               	movwf	??_DecodeGPS
  3641  01A7  083C               	movf	??_DecodeGPS,w
  3642  01A8  00A0               	movwf	___bmul@multiplicand
  3643  01A9  084F               	movf	DecodeGPS@x,w
  3644  01AA  3E2A               	addlw	_gpsMessage& (0+255)
  3645  01AB  0086               	movwf	6
  3646  01AC  3001               	movlw	1	; select bank2/3
  3647  01AD  0087               	movwf	7
  3648  01AE  0801               	movf	1,w
  3649  01AF  3ED0               	addlw	208
  3650  01B0  318D  251C  3181   	fcall	___bmul
  3651  01B3  0020               	movlb	0	; select bank0
  3652  01B4  00BD               	movwf	??_DecodeGPS+1
  3653  01B5  083D               	movf	??_DecodeGPS+1,w
  3654  01B6  00CA               	movwf	DecodeGPS@latitude+1
  3655  01B7  3001               	movlw	1
  3656  01B8  07CF               	addwf	DecodeGPS@x,f
  3657  01B9  3000               	movlw	0
  3658  01BA  3DD0               	addwfc	DecodeGPS@x+1,f
  3659                           
  3660                           ;launcher_functions.c: 428: latitude[1] += (gpsMessage[x++] - 48);
  3661  01BB  084F               	movf	DecodeGPS@x,w
  3662  01BC  3E2A               	addlw	_gpsMessage& (0+255)
  3663  01BD  0086               	movwf	6
  3664  01BE  3001               	movlw	1	; select bank2/3
  3665  01BF  0087               	movwf	7
  3666  01C0  0801               	movf	1,w
  3667  01C1  3ED0               	addlw	208
  3668  01C2  00BC               	movwf	??_DecodeGPS
  3669  01C3  083C               	movf	??_DecodeGPS,w
  3670  01C4  07CA               	addwf	DecodeGPS@latitude+1,f
  3671  01C5  3001               	movlw	1
  3672  01C6  07CF               	addwf	DecodeGPS@x,f
  3673  01C7  3000               	movlw	0
  3674  01C8  3DD0               	addwfc	DecodeGPS@x+1,f
  3675                           
  3676                           ;launcher_functions.c: 431: x = x + 1;
  3677  01C9  084F               	movf	DecodeGPS@x,w
  3678  01CA  3E01               	addlw	1
  3679  01CB  00CF               	movwf	DecodeGPS@x
  3680  01CC  3000               	movlw	0
  3681  01CD  3D50               	addwfc	DecodeGPS@x+1,w
  3682  01CE  00D0               	movwf	DecodeGPS@x+1
  3683                           
  3684                           ;launcher_functions.c: 434: latitude[2] = (gpsMessage[x++] - 48)*10;
  3685  01CF  300A               	movlw	10
  3686  01D0  00BC               	movwf	??_DecodeGPS
  3687  01D1  083C               	movf	??_DecodeGPS,w
  3688  01D2  00A0               	movwf	___bmul@multiplicand
  3689  01D3  084F               	movf	DecodeGPS@x,w
  3690  01D4  3E2A               	addlw	_gpsMessage& (0+255)
  3691  01D5  0086               	movwf	6
  3692  01D6  3001               	movlw	1	; select bank2/3
  3693  01D7  0087               	movwf	7
  3694  01D8  0801               	movf	1,w
  3695  01D9  3ED0               	addlw	208
  3696  01DA  318D  251C  3181   	fcall	___bmul
  3697  01DD  0020               	movlb	0	; select bank0
  3698  01DE  00BD               	movwf	??_DecodeGPS+1
  3699  01DF  083D               	movf	??_DecodeGPS+1,w
  3700  01E0  00CB               	movwf	DecodeGPS@latitude+2
  3701  01E1  3001               	movlw	1
  3702  01E2  07CF               	addwf	DecodeGPS@x,f
  3703  01E3  3000               	movlw	0
  3704  01E4  3DD0               	addwfc	DecodeGPS@x+1,f
  3705                           
  3706                           ;launcher_functions.c: 435: latitude[2] += (gpsMessage[x++] - 48);
  3707  01E5  084F               	movf	DecodeGPS@x,w
  3708  01E6  3E2A               	addlw	_gpsMessage& (0+255)
  3709  01E7  0086               	movwf	6
  3710  01E8  3001               	movlw	1	; select bank2/3
  3711  01E9  0087               	movwf	7
  3712  01EA  0801               	movf	1,w
  3713  01EB  3ED0               	addlw	208
  3714  01EC  00BC               	movwf	??_DecodeGPS
  3715  01ED  083C               	movf	??_DecodeGPS,w
  3716  01EE  07CB               	addwf	DecodeGPS@latitude+2,f
  3717  01EF  3001               	movlw	1
  3718  01F0  07CF               	addwf	DecodeGPS@x,f
  3719  01F1  3000               	movlw	0
  3720  01F2  3DD0               	addwfc	DecodeGPS@x+1,f
  3721                           
  3722                           ;launcher_functions.c: 436: latitude[2] = (latitude[2]*60)/100;
  3723  01F3  3064               	movlw	100
  3724  01F4  00A6               	movwf	___awdiv@divisor
  3725  01F5  3000               	movlw	0
  3726  01F6  00A7               	movwf	___awdiv@divisor+1
  3727  01F7  084B               	movf	DecodeGPS@latitude+2,w
  3728  01F8  00BC               	movwf	??_DecodeGPS
  3729  01F9  01BD               	clrf	??_DecodeGPS+1
  3730  01FA  083C               	movf	??_DecodeGPS,w
  3731  01FB  00A0               	movwf	___wmul@multiplier
  3732  01FC  083D               	movf	??_DecodeGPS+1,w
  3733  01FD  00A1               	movwf	___wmul@multiplier+1
  3734  01FE  303C               	movlw	60
  3735  01FF  00A2               	movwf	___wmul@multiplicand
  3736  0200  3000               	movlw	0
  3737  0201  00A3               	movwf	___wmul@multiplicand+1
  3738  0202  318D  25A3  3181   	fcall	___wmul
  3739  0205  0020               	movlb	0	; select bank0
  3740  0206  0821               	movf	?___wmul+1,w
  3741  0207  01A9               	clrf	___awdiv@dividend+1
  3742  0208  07A9               	addwf	___awdiv@dividend+1,f
  3743  0209  0820               	movf	?___wmul,w
  3744  020A  01A8               	clrf	___awdiv@dividend
  3745  020B  07A8               	addwf	___awdiv@dividend,f
  3746  020C  318E  26E6  3181   	fcall	___awdiv
  3747  020F  0020               	movlb	0	; select bank0
  3748  0210  0826               	movf	?___awdiv,w
  3749  0211  00BE               	movwf	??_DecodeGPS+2
  3750  0212  083E               	movf	??_DecodeGPS+2,w
  3751  0213  00CB               	movwf	DecodeGPS@latitude+2
  3752                           
  3753                           ;launcher_functions.c: 439: x = x + 2;
  3754  0214  084F               	movf	DecodeGPS@x,w
  3755  0215  3E02               	addlw	2
  3756  0216  00CF               	movwf	DecodeGPS@x
  3757  0217  3000               	movlw	0
  3758  0218  3D50               	addwfc	DecodeGPS@x+1,w
  3759  0219  00D0               	movwf	DecodeGPS@x+1
  3760  021A                     l2386:	
  3761                           
  3762                           ;launcher_functions.c: 440: }
  3763                           ;launcher_functions.c: 443: x = x + 1;
  3764  021A  084F               	movf	DecodeGPS@x,w
  3765  021B  3E01               	addlw	1
  3766  021C  00CF               	movwf	DecodeGPS@x
  3767  021D  3000               	movlw	0
  3768  021E  3D50               	addwfc	DecodeGPS@x+1,w
  3769  021F  00D0               	movwf	DecodeGPS@x+1
  3770                           
  3771                           ;launcher_functions.c: 446: if(gpsMessage[x] != ',')
  3772  0220  084F               	movf	DecodeGPS@x,w
  3773  0221  3E2A               	addlw	_gpsMessage& (0+255)
  3774  0222  0086               	movwf	6
  3775  0223  3001               	movlw	1	; select bank2/3
  3776  0224  0087               	movwf	7
  3777  0225  0801               	movf	1,w
  3778  0226  3A2C               	xorlw	44
  3779  0227  1903               	skipnz
  3780  0228  2A36               	goto	l2394
  3781                           
  3782                           ;launcher_functions.c: 447: northSouth = gpsMessage[x++];
  3783  0229  084F               	movf	DecodeGPS@x,w
  3784  022A  3E2A               	addlw	_gpsMessage& (0+255)
  3785  022B  0086               	movwf	6
  3786  022C  3001               	movlw	1	; select bank2/3
  3787  022D  0087               	movwf	7
  3788  022E  0801               	movf	1,w
  3789  022F  00BC               	movwf	??_DecodeGPS
  3790  0230  083C               	movf	??_DecodeGPS,w
  3791  0231  00C6               	movwf	DecodeGPS@northSouth
  3792  0232  3001               	movlw	1
  3793  0233  07CF               	addwf	DecodeGPS@x,f
  3794  0234  3000               	movlw	0
  3795  0235  3DD0               	addwfc	DecodeGPS@x+1,f
  3796  0236                     l2394:	
  3797                           
  3798                           ;launcher_functions.c: 450: x = x + 1;
  3799  0236  084F               	movf	DecodeGPS@x,w
  3800  0237  3E01               	addlw	1
  3801  0238  00CF               	movwf	DecodeGPS@x
  3802  0239  3000               	movlw	0
  3803  023A  3D50               	addwfc	DecodeGPS@x+1,w
  3804  023B  00D0               	movwf	DecodeGPS@x+1
  3805                           
  3806                           ;launcher_functions.c: 453: if(gpsMessage[x]!= ',')
  3807  023C  084F               	movf	DecodeGPS@x,w
  3808  023D  3E2A               	addlw	_gpsMessage& (0+255)
  3809  023E  0086               	movwf	6
  3810  023F  3001               	movlw	1	; select bank2/3
  3811  0240  0087               	movwf	7
  3812  0241  0801               	movf	1,w
  3813  0242  3A2C               	xorlw	44
  3814  0243  1903               	skipnz
  3815  0244  2AF4               	goto	l2430
  3816                           
  3817                           ;launcher_functions.c: 454: {
  3818                           ;launcher_functions.c: 456: longitude[0] = (gpsMessage[x++] - 48)*100;
  3819  0245  3064               	movlw	100
  3820  0246  00BC               	movwf	??_DecodeGPS
  3821  0247  083C               	movf	??_DecodeGPS,w
  3822  0248  00A0               	movwf	___bmul@multiplicand
  3823  0249  084F               	movf	DecodeGPS@x,w
  3824  024A  3E2A               	addlw	_gpsMessage& (0+255)
  3825  024B  0086               	movwf	6
  3826  024C  3001               	movlw	1	; select bank2/3
  3827  024D  0087               	movwf	7
  3828  024E  0801               	movf	1,w
  3829  024F  3ED0               	addlw	208
  3830  0250  318D  251C  3181   	fcall	___bmul
  3831  0253  0020               	movlb	0	; select bank0
  3832  0254  00BD               	movwf	??_DecodeGPS+1
  3833  0255  083D               	movf	??_DecodeGPS+1,w
  3834  0256  00CC               	movwf	DecodeGPS@longitude
  3835  0257  3001               	movlw	1
  3836  0258  07CF               	addwf	DecodeGPS@x,f
  3837  0259  3000               	movlw	0
  3838  025A  3DD0               	addwfc	DecodeGPS@x+1,f
  3839                           
  3840                           ;launcher_functions.c: 457: longitude[0] += (gpsMessage[x++] - 48)*10;
  3841  025B  300A               	movlw	10
  3842  025C  00BC               	movwf	??_DecodeGPS
  3843  025D  083C               	movf	??_DecodeGPS,w
  3844  025E  00A0               	movwf	___bmul@multiplicand
  3845  025F  084F               	movf	DecodeGPS@x,w
  3846  0260  3E2A               	addlw	_gpsMessage& (0+255)
  3847  0261  0086               	movwf	6
  3848  0262  3001               	movlw	1	; select bank2/3
  3849  0263  0087               	movwf	7
  3850  0264  0801               	movf	1,w
  3851  0265  3ED0               	addlw	208
  3852  0266  318D  251C  3181   	fcall	___bmul
  3853  0269  0020               	movlb	0	; select bank0
  3854  026A  00BD               	movwf	??_DecodeGPS+1
  3855  026B  083D               	movf	??_DecodeGPS+1,w
  3856  026C  07CC               	addwf	DecodeGPS@longitude,f
  3857  026D  3001               	movlw	1
  3858  026E  07CF               	addwf	DecodeGPS@x,f
  3859  026F  3000               	movlw	0
  3860  0270  3DD0               	addwfc	DecodeGPS@x+1,f
  3861                           
  3862                           ;launcher_functions.c: 458: longitude[0] += (gpsMessage[x++] - 48);
  3863  0271  084F               	movf	DecodeGPS@x,w
  3864  0272  3E2A               	addlw	_gpsMessage& (0+255)
  3865  0273  0086               	movwf	6
  3866  0274  3001               	movlw	1	; select bank2/3
  3867  0275  0087               	movwf	7
  3868  0276  0801               	movf	1,w
  3869  0277  3ED0               	addlw	208
  3870  0278  00BC               	movwf	??_DecodeGPS
  3871  0279  083C               	movf	??_DecodeGPS,w
  3872  027A  07CC               	addwf	DecodeGPS@longitude,f
  3873  027B  3001               	movlw	1
  3874  027C  07CF               	addwf	DecodeGPS@x,f
  3875  027D  3000               	movlw	0
  3876  027E  3DD0               	addwfc	DecodeGPS@x+1,f
  3877                           
  3878                           ;launcher_functions.c: 461: longitude[1] = (gpsMessage[x++] - 48)*10;
  3879  027F  300A               	movlw	10
  3880  0280  00BC               	movwf	??_DecodeGPS
  3881  0281  083C               	movf	??_DecodeGPS,w
  3882  0282  00A0               	movwf	___bmul@multiplicand
  3883  0283  084F               	movf	DecodeGPS@x,w
  3884  0284  3E2A               	addlw	_gpsMessage& (0+255)
  3885  0285  0086               	movwf	6
  3886  0286  3001               	movlw	1	; select bank2/3
  3887  0287  0087               	movwf	7
  3888  0288  0801               	movf	1,w
  3889  0289  3ED0               	addlw	208
  3890  028A  318D  251C  3181   	fcall	___bmul
  3891  028D  0020               	movlb	0	; select bank0
  3892  028E  00BD               	movwf	??_DecodeGPS+1
  3893  028F  083D               	movf	??_DecodeGPS+1,w
  3894  0290  00CD               	movwf	DecodeGPS@longitude+1
  3895  0291  3001               	movlw	1
  3896  0292  07CF               	addwf	DecodeGPS@x,f
  3897  0293  3000               	movlw	0
  3898  0294  3DD0               	addwfc	DecodeGPS@x+1,f
  3899                           
  3900                           ;launcher_functions.c: 462: longitude[1] += (gpsMessage[x++] - 48);
  3901  0295  084F               	movf	DecodeGPS@x,w
  3902  0296  3E2A               	addlw	_gpsMessage& (0+255)
  3903  0297  0086               	movwf	6
  3904  0298  3001               	movlw	1	; select bank2/3
  3905  0299  0087               	movwf	7
  3906  029A  0801               	movf	1,w
  3907  029B  3ED0               	addlw	208
  3908  029C  00BC               	movwf	??_DecodeGPS
  3909  029D  083C               	movf	??_DecodeGPS,w
  3910  029E  07CD               	addwf	DecodeGPS@longitude+1,f
  3911  029F  3001               	movlw	1
  3912  02A0  07CF               	addwf	DecodeGPS@x,f
  3913  02A1  3000               	movlw	0
  3914  02A2  3DD0               	addwfc	DecodeGPS@x+1,f
  3915                           
  3916                           ;launcher_functions.c: 465: x = x + 1;
  3917  02A3  084F               	movf	DecodeGPS@x,w
  3918  02A4  3E01               	addlw	1
  3919  02A5  00CF               	movwf	DecodeGPS@x
  3920  02A6  3000               	movlw	0
  3921  02A7  3D50               	addwfc	DecodeGPS@x+1,w
  3922  02A8  00D0               	movwf	DecodeGPS@x+1
  3923                           
  3924                           ;launcher_functions.c: 468: longitude[2] = (gpsMessage[x++] - 48)*10;
  3925  02A9  300A               	movlw	10
  3926  02AA  00BC               	movwf	??_DecodeGPS
  3927  02AB  083C               	movf	??_DecodeGPS,w
  3928  02AC  00A0               	movwf	___bmul@multiplicand
  3929  02AD  084F               	movf	DecodeGPS@x,w
  3930  02AE  3E2A               	addlw	_gpsMessage& (0+255)
  3931  02AF  0086               	movwf	6
  3932  02B0  3001               	movlw	1	; select bank2/3
  3933  02B1  0087               	movwf	7
  3934  02B2  0801               	movf	1,w
  3935  02B3  3ED0               	addlw	208
  3936  02B4  318D  251C  3181   	fcall	___bmul
  3937  02B7  0020               	movlb	0	; select bank0
  3938  02B8  00BD               	movwf	??_DecodeGPS+1
  3939  02B9  083D               	movf	??_DecodeGPS+1,w
  3940  02BA  00CE               	movwf	DecodeGPS@longitude+2
  3941  02BB  3001               	movlw	1
  3942  02BC  07CF               	addwf	DecodeGPS@x,f
  3943  02BD  3000               	movlw	0
  3944  02BE  3DD0               	addwfc	DecodeGPS@x+1,f
  3945                           
  3946                           ;launcher_functions.c: 469: longitude[2] += (gpsMessage[x++] - 48);
  3947  02BF  084F               	movf	DecodeGPS@x,w
  3948  02C0  3E2A               	addlw	_gpsMessage& (0+255)
  3949  02C1  0086               	movwf	6
  3950  02C2  3001               	movlw	1	; select bank2/3
  3951  02C3  0087               	movwf	7
  3952  02C4  0801               	movf	1,w
  3953  02C5  3ED0               	addlw	208
  3954  02C6  00BC               	movwf	??_DecodeGPS
  3955  02C7  083C               	movf	??_DecodeGPS,w
  3956  02C8  07CE               	addwf	DecodeGPS@longitude+2,f
  3957  02C9  3001               	movlw	1
  3958  02CA  07CF               	addwf	DecodeGPS@x,f
  3959  02CB  3000               	movlw	0
  3960  02CC  3DD0               	addwfc	DecodeGPS@x+1,f
  3961                           
  3962                           ;launcher_functions.c: 470: longitude[2] = (longitude[2]*60)/100;
  3963  02CD  3064               	movlw	100
  3964  02CE  00A6               	movwf	___awdiv@divisor
  3965  02CF  3000               	movlw	0
  3966  02D0  00A7               	movwf	___awdiv@divisor+1
  3967  02D1  084E               	movf	DecodeGPS@longitude+2,w
  3968  02D2  00BC               	movwf	??_DecodeGPS
  3969  02D3  01BD               	clrf	??_DecodeGPS+1
  3970  02D4  083C               	movf	??_DecodeGPS,w
  3971  02D5  00A0               	movwf	___wmul@multiplier
  3972  02D6  083D               	movf	??_DecodeGPS+1,w
  3973  02D7  00A1               	movwf	___wmul@multiplier+1
  3974  02D8  303C               	movlw	60
  3975  02D9  00A2               	movwf	___wmul@multiplicand
  3976  02DA  3000               	movlw	0
  3977  02DB  00A3               	movwf	___wmul@multiplicand+1
  3978  02DC  318D  25A3  3181   	fcall	___wmul
  3979  02DF  0020               	movlb	0	; select bank0
  3980  02E0  0821               	movf	?___wmul+1,w
  3981  02E1  01A9               	clrf	___awdiv@dividend+1
  3982  02E2  07A9               	addwf	___awdiv@dividend+1,f
  3983  02E3  0820               	movf	?___wmul,w
  3984  02E4  01A8               	clrf	___awdiv@dividend
  3985  02E5  07A8               	addwf	___awdiv@dividend,f
  3986  02E6  318E  26E6  3181   	fcall	___awdiv
  3987  02E9  0020               	movlb	0	; select bank0
  3988  02EA  0826               	movf	?___awdiv,w
  3989  02EB  00BE               	movwf	??_DecodeGPS+2
  3990  02EC  083E               	movf	??_DecodeGPS+2,w
  3991  02ED  00CE               	movwf	DecodeGPS@longitude+2
  3992                           
  3993                           ;launcher_functions.c: 473: x = x + 2;
  3994  02EE  084F               	movf	DecodeGPS@x,w
  3995  02EF  3E02               	addlw	2
  3996  02F0  00CF               	movwf	DecodeGPS@x
  3997  02F1  3000               	movlw	0
  3998  02F2  3D50               	addwfc	DecodeGPS@x+1,w
  3999  02F3  00D0               	movwf	DecodeGPS@x+1
  4000  02F4                     l2430:	
  4001                           
  4002                           ;launcher_functions.c: 474: }
  4003                           ;launcher_functions.c: 477: x = x + 1;
  4004  02F4  084F               	movf	DecodeGPS@x,w
  4005  02F5  3E01               	addlw	1
  4006  02F6  00CF               	movwf	DecodeGPS@x
  4007  02F7  3000               	movlw	0
  4008  02F8  3D50               	addwfc	DecodeGPS@x+1,w
  4009  02F9  00D0               	movwf	DecodeGPS@x+1
  4010                           
  4011                           ;launcher_functions.c: 480: if(gpsMessage[x] != ',')
  4012  02FA  084F               	movf	DecodeGPS@x,w
  4013  02FB  3E2A               	addlw	_gpsMessage& (0+255)
  4014  02FC  0086               	movwf	6
  4015  02FD  3001               	movlw	1	; select bank2/3
  4016  02FE  0087               	movwf	7
  4017  02FF  0801               	movf	1,w
  4018  0300  3A2C               	xorlw	44
  4019  0301  1903               	skipnz
  4020  0302  2B10               	goto	l2438
  4021                           
  4022                           ;launcher_functions.c: 481: eastWest = gpsMessage[x++];
  4023  0303  084F               	movf	DecodeGPS@x,w
  4024  0304  3E2A               	addlw	_gpsMessage& (0+255)
  4025  0305  0086               	movwf	6
  4026  0306  3001               	movlw	1	; select bank2/3
  4027  0307  0087               	movwf	7
  4028  0308  0801               	movf	1,w
  4029  0309  00BC               	movwf	??_DecodeGPS
  4030  030A  083C               	movf	??_DecodeGPS,w
  4031  030B  00C7               	movwf	DecodeGPS@eastWest
  4032  030C  3001               	movlw	1
  4033  030D  07CF               	addwf	DecodeGPS@x,f
  4034  030E  3000               	movlw	0
  4035  030F  3DD0               	addwfc	DecodeGPS@x+1,f
  4036  0310                     l2438:	
  4037                           
  4038                           ;launcher_functions.c: 484: x = x + 1;
  4039  0310  084F               	movf	DecodeGPS@x,w
  4040  0311  3E01               	addlw	1
  4041  0312  00CF               	movwf	DecodeGPS@x
  4042  0313  3000               	movlw	0
  4043  0314  3D50               	addwfc	DecodeGPS@x+1,w
  4044  0315  00D0               	movwf	DecodeGPS@x+1
  4045  0316                     l2440:	
  4046                           ;launcher_functions.c: 487: while(gpsMessage[x++] != ','){}
  4047                           
  4048  0316  0850               	movf	DecodeGPS@x+1,w
  4049  0317  00BD               	movwf	??_DecodeGPS+1
  4050  0318  084F               	movf	DecodeGPS@x,w
  4051  0319  00BC               	movwf	??_DecodeGPS
  4052  031A  0ACF               	incf	DecodeGPS@x,f
  4053  031B  1903               	skipnz
  4054  031C  0AD0               	incf	DecodeGPS@x+1,f
  4055  031D  083C               	movf	??_DecodeGPS,w
  4056  031E  3E2A               	addlw	_gpsMessage& (0+255)
  4057  031F  0086               	movwf	6
  4058  0320  3001               	movlw	1	; select bank2/3
  4059  0321  0087               	movwf	7
  4060  0322  0801               	movf	1,w
  4061  0323  3A2C               	xorlw	44
  4062  0324  1D03               	skipz
  4063  0325  2B16               	goto	l2440
  4064                           
  4065                           ;launcher_functions.c: 490: status = gpsMessage[x];
  4066  0326  084F               	movf	DecodeGPS@x,w
  4067  0327  3E2A               	addlw	_gpsMessage& (0+255)
  4068  0328  0086               	movwf	6
  4069  0329  3001               	movlw	1	; select bank2/3
  4070  032A  0087               	movwf	7
  4071  032B  0801               	movf	1,w
  4072  032C  00BC               	movwf	??_DecodeGPS
  4073  032D  083C               	movf	??_DecodeGPS,w
  4074  032E  00C8               	movwf	DecodeGPS@status
  4075                           
  4076                           ;launcher_functions.c: 492: if(status == 'A')
  4077  032F  0848               	movf	DecodeGPS@status,w
  4078  0330  3A41               	xorlw	65
  4079  0331  1D03               	skipz
  4080  0332  2B36               	goto	l409
  4081                           
  4082                           ;launcher_functions.c: 493: gpsInvalidFlag = 0;
  4083  0333  0021               	movlb	1	; select bank1
  4084  0334  01E8               	clrf	_gpsInvalidFlag^(0+128)
  4085  0335  2B39               	goto	l2448
  4086  0336                     l409:	
  4087                           
  4088                           ;launcher_functions.c: 494: else
  4089                           ;launcher_functions.c: 495: gpsInvalidFlag = 1;
  4090  0336  0021               	movlb	1	; select bank1
  4091  0337  01E8               	clrf	_gpsInvalidFlag^(0+128)
  4092  0338  0AE8               	incf	_gpsInvalidFlag^(0+128),f
  4093  0339                     l2448:	
  4094                           
  4095                           ;launcher_functions.c: 499: if(!gpsInvalidFlag)
  4096  0339  08E8               	movf	_gpsInvalidFlag^(0+128),f
  4097  033A  1D03               	skipz
  4098  033B  0008               	return
  4099                           
  4100                           ;launcher_functions.c: 500: {
  4101                           ;launcher_functions.c: 502: for(x=0;x<3;x++)
  4102  033C  0020               	movlb	0	; select bank0
  4103  033D  01CF               	clrf	DecodeGPS@x
  4104  033E  01D0               	clrf	DecodeGPS@x+1
  4105  033F  0850               	movf	DecodeGPS@x+1,w
  4106  0340  3A80               	xorlw	128
  4107  0341  00BC               	movwf	??_DecodeGPS
  4108  0342  3080               	movlw	128
  4109  0343  023C               	subwf	??_DecodeGPS,w
  4110  0344  1D03               	skipz
  4111  0345  2B48               	goto	u2115
  4112  0346  3003               	movlw	3
  4113  0347  024F               	subwf	DecodeGPS@x,w
  4114  0348                     u2115:	
  4115  0348  1803               	btfsc	3,0
  4116  0349  2B72               	goto	l2462
  4117  034A                     l2456:	
  4118                           
  4119                           ;launcher_functions.c: 503: {
  4120                           ;launcher_functions.c: 504: validLatitude[x] = latitude[x];
  4121  034A  0020               	movlb	0	; select bank0
  4122  034B  084F               	movf	DecodeGPS@x,w
  4123  034C  3E49               	addlw	DecodeGPS@latitude& (0+255)
  4124  034D  0086               	movwf	6
  4125  034E  0187               	clrf	7
  4126  034F  0801               	movf	1,w
  4127  0350  00BC               	movwf	??_DecodeGPS
  4128  0351  084F               	movf	DecodeGPS@x,w
  4129  0352  3EE2               	addlw	_validLatitude& (0+255)
  4130  0353  0086               	movwf	6
  4131  0354  0187               	clrf	7
  4132  0355  083C               	movf	??_DecodeGPS,w
  4133  0356  0081               	movwf	1
  4134                           
  4135                           ;launcher_functions.c: 505: validLongitude[x] = longitude[x];
  4136  0357  084F               	movf	DecodeGPS@x,w
  4137  0358  3E4C               	addlw	DecodeGPS@longitude& (0+255)
  4138  0359  0086               	movwf	6
  4139  035A  0187               	clrf	7
  4140  035B  0801               	movf	1,w
  4141  035C  00BC               	movwf	??_DecodeGPS
  4142  035D  084F               	movf	DecodeGPS@x,w
  4143  035E  3EE5               	addlw	_validLongitude& (0+255)
  4144  035F  0086               	movwf	6
  4145  0360  0187               	clrf	7
  4146  0361  083C               	movf	??_DecodeGPS,w
  4147  0362  0081               	movwf	1
  4148  0363  3001               	movlw	1
  4149  0364  07CF               	addwf	DecodeGPS@x,f
  4150  0365  3000               	movlw	0
  4151  0366  3DD0               	addwfc	DecodeGPS@x+1,f
  4152  0367  0850               	movf	DecodeGPS@x+1,w
  4153  0368  3A80               	xorlw	128
  4154  0369  00BC               	movwf	??_DecodeGPS
  4155  036A  3080               	movlw	128
  4156  036B  023C               	subwf	??_DecodeGPS,w
  4157  036C  1D03               	skipz
  4158  036D  2B70               	goto	u2125
  4159  036E  3003               	movlw	3
  4160  036F  024F               	subwf	DecodeGPS@x,w
  4161  0370                     u2125:	
  4162  0370  1C03               	skipc
  4163  0371  2B4A               	goto	l2456
  4164  0372                     l2462:	
  4165                           
  4166                           ;launcher_functions.c: 506: }
  4167                           ;launcher_functions.c: 507: validNorthSouth = northSouth;
  4168  0372  0020               	movlb	0	; select bank0
  4169  0373  0846               	movf	DecodeGPS@northSouth,w
  4170  0374  00BC               	movwf	??_DecodeGPS
  4171  0375  083C               	movf	??_DecodeGPS,w
  4172  0376  0021               	movlb	1	; select bank1
  4173  0377  00EA               	movwf	_validNorthSouth^(0+128)
  4174                           
  4175                           ;launcher_functions.c: 508: validEastWest = eastWest;
  4176  0378  0020               	movlb	0	; select bank0
  4177  0379  0847               	movf	DecodeGPS@eastWest,w
  4178  037A  00BC               	movwf	??_DecodeGPS
  4179  037B  083C               	movf	??_DecodeGPS,w
  4180  037C  0021               	movlb	1	; select bank1
  4181  037D  00E9               	movwf	_validEastWest^(0+128)
  4182                           
  4183                           ;launcher_functions.c: 510: SendGPSSPI();
  4184  037E  3187  278B         	fcall	_SendGPSSPI
  4185  0380  0008               	return
  4186  0381                     __end_of_DecodeGPS:	
  4187                           
  4188                           	psect	text11
  4189  0DA3                     __ptext11:	
  4190 ;; *************** function ___wmul *****************
  4191 ;; Defined at:
  4192 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4195 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  product         2    4[BANK0 ] unsigned int 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2    0[BANK0 ] unsigned int 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         0       4       0       0       0       0       0
  4208 ;;      Locals:         0       2       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0
  4210 ;;      Totals:         0       6       0       0       0       0       0
  4211 ;;Total ram usage:        6 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_DecodeGPS
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function ___wmul
  4223  0DA3                     ___wmul:	
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4227  0DA3  0020               	movlb	0	; select bank0
  4228  0DA4  01A4               	clrf	___wmul@product
  4229  0DA5  01A5               	clrf	___wmul@product+1
  4230  0DA6                     l2210:	
  4231  0DA6  1C20               	btfss	___wmul@multiplier,0
  4232  0DA7  2DAC               	goto	l585
  4233  0DA8  0822               	movf	___wmul@multiplicand,w
  4234  0DA9  07A4               	addwf	___wmul@product,f
  4235  0DAA  0823               	movf	___wmul@multiplicand+1,w
  4236  0DAB  3DA5               	addwfc	___wmul@product+1,f
  4237  0DAC                     l585:	
  4238  0DAC  3001               	movlw	1
  4239  0DAD                     u1815:	
  4240  0DAD  35A2               	lslf	___wmul@multiplicand,f
  4241  0DAE  0DA3               	rlf	___wmul@multiplicand+1,f
  4242  0DAF  0B89               	decfsz	9,f
  4243  0DB0  2DAD               	goto	u1815
  4244  0DB1  3001               	movlw	1
  4245  0DB2                     u1825:	
  4246  0DB2  36A1               	lsrf	___wmul@multiplier+1,f
  4247  0DB3  0CA0               	rrf	___wmul@multiplier,f
  4248  0DB4  0B89               	decfsz	9,f
  4249  0DB5  2DB2               	goto	u1825
  4250  0DB6  0821               	movf	___wmul@multiplier+1,w
  4251  0DB7  0420               	iorwf	___wmul@multiplier,w
  4252  0DB8  1D03               	skipz
  4253  0DB9  2DA6               	goto	l2210
  4254  0DBA  0825               	movf	___wmul@product+1,w
  4255  0DBB  01A1               	clrf	?___wmul+1
  4256  0DBC  07A1               	addwf	?___wmul+1,f
  4257  0DBD  0824               	movf	___wmul@product,w
  4258  0DBE  01A0               	clrf	?___wmul
  4259  0DBF  07A0               	addwf	?___wmul,f
  4260  0DC0  0008               	return
  4261  0DC1                     __end_of___wmul:	
  4262                           
  4263                           	psect	text12
  4264  0D1C                     __ptext12:	
  4265 ;; *************** function ___bmul *****************
  4266 ;; Defined at:
  4267 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  multiplier      1    wreg     unsigned char 
  4270 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4273 ;;  product         1    2[BANK0 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      unsigned char 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4283 ;;      Params:         0       1       0       0       0       0       0
  4284 ;;      Locals:         0       2       0       0       0       0       0
  4285 ;;      Temps:          0       1       0       0       0       0       0
  4286 ;;      Totals:         0       4       0       0       0       0       0
  4287 ;;Total ram usage:        4 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    2
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_DecodeGPS
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function ___bmul
  4299  0D1C                     ___bmul:	
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4303                           ;___bmul@multiplier stored from wreg
  4304  0D1C  0020               	movlb	0	; select bank0
  4305  0D1D  00A3               	movwf	___bmul@multiplier
  4306  0D1E  01A2               	clrf	___bmul@product
  4307  0D1F                     l2222:	
  4308  0D1F  1C23               	btfss	___bmul@multiplier,0
  4309  0D20  2D25               	goto	l2226
  4310  0D21  0820               	movf	___bmul@multiplicand,w
  4311  0D22  00A1               	movwf	??___bmul
  4312  0D23  0821               	movf	??___bmul,w
  4313  0D24  07A2               	addwf	___bmul@product,f
  4314  0D25                     l2226:	
  4315  0D25  1003               	clrc
  4316  0D26  0DA0               	rlf	___bmul@multiplicand,f
  4317  0D27  1003               	clrc
  4318  0D28  0CA3               	rrf	___bmul@multiplier,f
  4319  0D29  08A3               	movf	___bmul@multiplier,f
  4320  0D2A  1D03               	skipz
  4321  0D2B  2D1F               	goto	l2222
  4322  0D2C  0822               	movf	___bmul@product,w
  4323  0D2D  0008               	return
  4324  0D2E                     __end_of___bmul:	
  4325                           
  4326                           	psect	text13
  4327  0EE6                     __ptext13:	
  4328 ;; *************** function ___awdiv *****************
  4329 ;; Defined at:
  4330 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  divisor         2    6[BANK0 ] int 
  4333 ;;  dividend        2    8[BANK0 ] int 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  quotient        2   13[BANK0 ] int 
  4336 ;;  sign            1   12[BANK0 ] unsigned char 
  4337 ;;  counter         1   11[BANK0 ] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  2    6[BANK0 ] int 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4347 ;;      Params:         0       4       0       0       0       0       0
  4348 ;;      Locals:         0       4       0       0       0       0       0
  4349 ;;      Temps:          0       1       0       0       0       0       0
  4350 ;;      Totals:         0       9       0       0       0       0       0
  4351 ;;Total ram usage:        9 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    2
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_DecodeGPS
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           
  4362                           ;psect for function ___awdiv
  4363  0EE6                     ___awdiv:	
  4364                           
  4365                           ;incstack = 0
  4366                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4367  0EE6  0020               	movlb	0	; select bank0
  4368  0EE7  01AC               	clrf	___awdiv@sign
  4369  0EE8  1FA7               	btfss	___awdiv@divisor+1,7
  4370  0EE9  2EF1               	goto	l2244
  4371  0EEA  09A6               	comf	___awdiv@divisor,f
  4372  0EEB  09A7               	comf	___awdiv@divisor+1,f
  4373  0EEC  0AA6               	incf	___awdiv@divisor,f
  4374  0EED  1903               	skipnz
  4375  0EEE  0AA7               	incf	___awdiv@divisor+1,f
  4376  0EEF  01AC               	clrf	___awdiv@sign
  4377  0EF0  0AAC               	incf	___awdiv@sign,f
  4378  0EF1                     l2244:	
  4379  0EF1  1FA9               	btfss	___awdiv@dividend+1,7
  4380  0EF2  2EFC               	goto	l2250
  4381  0EF3  09A8               	comf	___awdiv@dividend,f
  4382  0EF4  09A9               	comf	___awdiv@dividend+1,f
  4383  0EF5  0AA8               	incf	___awdiv@dividend,f
  4384  0EF6  1903               	skipnz
  4385  0EF7  0AA9               	incf	___awdiv@dividend+1,f
  4386  0EF8  3001               	movlw	1
  4387  0EF9  00AA               	movwf	??___awdiv
  4388  0EFA  082A               	movf	??___awdiv,w
  4389  0EFB  06AC               	xorwf	___awdiv@sign,f
  4390  0EFC                     l2250:	
  4391  0EFC  01AD               	clrf	___awdiv@quotient
  4392  0EFD  01AE               	clrf	___awdiv@quotient+1
  4393  0EFE  0827               	movf	___awdiv@divisor+1,w
  4394  0EFF  0426               	iorwf	___awdiv@divisor,w
  4395  0F00  1903               	skipnz
  4396  0F01  2F2B               	goto	l2272
  4397  0F02  01AB               	clrf	___awdiv@counter
  4398  0F03  0AAB               	incf	___awdiv@counter,f
  4399  0F04                     l2260:	
  4400  0F04  1BA7               	btfsc	___awdiv@divisor+1,7
  4401  0F05  2F10               	goto	l2262
  4402  0F06  3001               	movlw	1
  4403  0F07                     u1895:	
  4404  0F07  35A6               	lslf	___awdiv@divisor,f
  4405  0F08  0DA7               	rlf	___awdiv@divisor+1,f
  4406  0F09  0B89               	decfsz	9,f
  4407  0F0A  2F07               	goto	u1895
  4408  0F0B  3001               	movlw	1
  4409  0F0C  00AA               	movwf	??___awdiv
  4410  0F0D  082A               	movf	??___awdiv,w
  4411  0F0E  07AB               	addwf	___awdiv@counter,f
  4412  0F0F  2F04               	goto	l2260
  4413  0F10                     l2262:	
  4414  0F10  3001               	movlw	1
  4415  0F11                     u1915:	
  4416  0F11  35AD               	lslf	___awdiv@quotient,f
  4417  0F12  0DAE               	rlf	___awdiv@quotient+1,f
  4418  0F13  0B89               	decfsz	9,f
  4419  0F14  2F11               	goto	u1915
  4420  0F15  0827               	movf	___awdiv@divisor+1,w
  4421  0F16  0229               	subwf	___awdiv@dividend+1,w
  4422  0F17  1D03               	skipz
  4423  0F18  2F1B               	goto	u1925
  4424  0F19  0826               	movf	___awdiv@divisor,w
  4425  0F1A  0228               	subwf	___awdiv@dividend,w
  4426  0F1B                     u1925:	
  4427  0F1B  1C03               	skipc
  4428  0F1C  2F22               	goto	l2268
  4429  0F1D  0826               	movf	___awdiv@divisor,w
  4430  0F1E  02A8               	subwf	___awdiv@dividend,f
  4431  0F1F  0827               	movf	___awdiv@divisor+1,w
  4432  0F20  3BA9               	subwfb	___awdiv@dividend+1,f
  4433  0F21  142D               	bsf	___awdiv@quotient,0
  4434  0F22                     l2268:	
  4435  0F22  3001               	movlw	1
  4436  0F23                     u1935:	
  4437  0F23  36A7               	lsrf	___awdiv@divisor+1,f
  4438  0F24  0CA6               	rrf	___awdiv@divisor,f
  4439  0F25  0B89               	decfsz	9,f
  4440  0F26  2F23               	goto	u1935
  4441  0F27  3001               	movlw	1
  4442  0F28  02AB               	subwf	___awdiv@counter,f
  4443  0F29  1D03               	btfss	3,2
  4444  0F2A  2F10               	goto	l2262
  4445  0F2B                     l2272:	
  4446  0F2B  082C               	movf	___awdiv@sign,w
  4447  0F2C  1903               	btfsc	3,2
  4448  0F2D  2F33               	goto	l2276
  4449  0F2E  09AD               	comf	___awdiv@quotient,f
  4450  0F2F  09AE               	comf	___awdiv@quotient+1,f
  4451  0F30  0AAD               	incf	___awdiv@quotient,f
  4452  0F31  1903               	skipnz
  4453  0F32  0AAE               	incf	___awdiv@quotient+1,f
  4454  0F33                     l2276:	
  4455  0F33  082E               	movf	___awdiv@quotient+1,w
  4456  0F34  01A7               	clrf	?___awdiv+1
  4457  0F35  07A7               	addwf	?___awdiv+1,f
  4458  0F36  082D               	movf	___awdiv@quotient,w
  4459  0F37  01A6               	clrf	?___awdiv
  4460  0F38  07A6               	addwf	?___awdiv,f
  4461  0F39  0008               	return
  4462  0F3A                     __end_of___awdiv:	
  4463                           
  4464                           	psect	text14
  4465  078B                     __ptext14:	
  4466 ;; *************** function _SendGPSSPI *****************
  4467 ;; Defined at:
  4468 ;;		line 609 in file "launcher_functions.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;		None
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  address         4   22[BANK0 ] long 
  4473 ;;  x               2   26[BANK0 ] int 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;		None               void
  4476 ;; Registers used:
  4477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4483 ;;      Params:         0       0       0       0       0       0       0
  4484 ;;      Locals:         0       6       0       0       0       0       0
  4485 ;;      Temps:          0       1       0       0       0       0       0
  4486 ;;      Totals:         0       7       0       0       0       0       0
  4487 ;;Total ram usage:        7 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    5
  4490 ;; This function calls:
  4491 ;;		_WriteOverheadSPI
  4492 ;;		_WriteSPI
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;;		_DecodeGPS
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _SendGPSSPI
  4501  078B                     _SendGPSSPI:	
  4502                           
  4503                           ;launcher_functions.c: 611: long int address = 0x135C0 + 3;
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in _SendGPSSPI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4507  078B  3000               	movlw	0
  4508  078C  0020               	movlb	0	; select bank0
  4509  078D  00B9               	movwf	SendGPSSPI@address+3
  4510  078E  3001               	movlw	1
  4511  078F  00B8               	movwf	SendGPSSPI@address+2
  4512  0790  3035               	movlw	53
  4513  0791  00B7               	movwf	SendGPSSPI@address+1
  4514  0792  30C3               	movlw	195
  4515  0793  00B6               	movwf	SendGPSSPI@address
  4516                           
  4517                           ;launcher_functions.c: 612: int x;
  4518                           ;launcher_functions.c: 613: PORTAbits.RA4 = 1;
  4519  0794  160C               	bsf	12,4	;volatile
  4520                           
  4521                           ;launcher_functions.c: 616: WriteOverheadSPI(address);
  4522  0795  0839               	movf	SendGPSSPI@address+3,w
  4523  0796  00AA               	movwf	WriteOverheadSPI@address+3
  4524  0797  0838               	movf	SendGPSSPI@address+2,w
  4525  0798  00A9               	movwf	WriteOverheadSPI@address+2
  4526  0799  0837               	movf	SendGPSSPI@address+1,w
  4527  079A  00A8               	movwf	WriteOverheadSPI@address+1
  4528  079B  0836               	movf	SendGPSSPI@address,w
  4529  079C  00A7               	movwf	WriteOverheadSPI@address
  4530  079D  318F  273A  3187   	fcall	_WriteOverheadSPI
  4531                           
  4532                           ;launcher_functions.c: 617: for(x=0;x<3;x++)
  4533  07A0  0020               	movlb	0	; select bank0
  4534  07A1  01BA               	clrf	SendGPSSPI@x
  4535  07A2  01BB               	clrf	SendGPSSPI@x+1
  4536  07A3  083B               	movf	SendGPSSPI@x+1,w
  4537  07A4  3A80               	xorlw	128
  4538  07A5  00B5               	movwf	??_SendGPSSPI
  4539  07A6  3080               	movlw	128
  4540  07A7  0235               	subwf	??_SendGPSSPI,w
  4541  07A8  1D03               	skipz
  4542  07A9  2FAC               	goto	u1615
  4543  07AA  3003               	movlw	3
  4544  07AB  023A               	subwf	SendGPSSPI@x,w
  4545  07AC                     u1615:	
  4546  07AC  1803               	btfsc	3,0
  4547  07AD  2FC7               	goto	l2082
  4548  07AE                     l2076:	
  4549                           
  4550                           ;launcher_functions.c: 618: {
  4551                           ;launcher_functions.c: 619: WriteSPI(validLatitude[x]);
  4552  07AE  0020               	movlb	0	; select bank0
  4553  07AF  083A               	movf	SendGPSSPI@x,w
  4554  07B0  3EE2               	addlw	_validLatitude& (0+255)
  4555  07B1  0086               	movwf	6
  4556  07B2  0187               	clrf	7
  4557  07B3  0801               	movf	1,w
  4558  07B4  318D  252E  3187   	fcall	_WriteSPI
  4559  07B7  3001               	movlw	1
  4560  07B8  0020               	movlb	0	; select bank0
  4561  07B9  07BA               	addwf	SendGPSSPI@x,f
  4562  07BA  3000               	movlw	0
  4563  07BB  3DBB               	addwfc	SendGPSSPI@x+1,f
  4564  07BC  083B               	movf	SendGPSSPI@x+1,w
  4565  07BD  3A80               	xorlw	128
  4566  07BE  00B5               	movwf	??_SendGPSSPI
  4567  07BF  3080               	movlw	128
  4568  07C0  0235               	subwf	??_SendGPSSPI,w
  4569  07C1  1D03               	skipz
  4570  07C2  2FC5               	goto	u1625
  4571  07C3  3003               	movlw	3
  4572  07C4  023A               	subwf	SendGPSSPI@x,w
  4573  07C5                     u1625:	
  4574  07C5  1C03               	skipc
  4575  07C6  2FAE               	goto	l2076
  4576  07C7                     l2082:	
  4577                           
  4578                           ;launcher_functions.c: 620: }
  4579                           ;launcher_functions.c: 621: WriteSPI(validNorthSouth);
  4580  07C7  0021               	movlb	1	; select bank1
  4581  07C8  086A               	movf	_validNorthSouth^(0+128),w
  4582  07C9  318D  252E  3187   	fcall	_WriteSPI
  4583                           
  4584                           ;launcher_functions.c: 622: for(x=0;x<3;x++)
  4585  07CC  0020               	movlb	0	; select bank0
  4586  07CD  01BA               	clrf	SendGPSSPI@x
  4587  07CE  01BB               	clrf	SendGPSSPI@x+1
  4588  07CF  083B               	movf	SendGPSSPI@x+1,w
  4589  07D0  3A80               	xorlw	128
  4590  07D1  00B5               	movwf	??_SendGPSSPI
  4591  07D2  3080               	movlw	128
  4592  07D3  0235               	subwf	??_SendGPSSPI,w
  4593  07D4  1D03               	skipz
  4594  07D5  2FD8               	goto	u1635
  4595  07D6  3003               	movlw	3
  4596  07D7  023A               	subwf	SendGPSSPI@x,w
  4597  07D8                     u1635:	
  4598  07D8  1803               	btfsc	3,0
  4599  07D9  2FF3               	goto	l2096
  4600  07DA                     l2090:	
  4601                           
  4602                           ;launcher_functions.c: 623: {
  4603                           ;launcher_functions.c: 624: WriteSPI(validLongitude[x]);
  4604  07DA  0020               	movlb	0	; select bank0
  4605  07DB  083A               	movf	SendGPSSPI@x,w
  4606  07DC  3EE5               	addlw	_validLongitude& (0+255)
  4607  07DD  0086               	movwf	6
  4608  07DE  0187               	clrf	7
  4609  07DF  0801               	movf	1,w
  4610  07E0  318D  252E  3187   	fcall	_WriteSPI
  4611  07E3  3001               	movlw	1
  4612  07E4  0020               	movlb	0	; select bank0
  4613  07E5  07BA               	addwf	SendGPSSPI@x,f
  4614  07E6  3000               	movlw	0
  4615  07E7  3DBB               	addwfc	SendGPSSPI@x+1,f
  4616  07E8  083B               	movf	SendGPSSPI@x+1,w
  4617  07E9  3A80               	xorlw	128
  4618  07EA  00B5               	movwf	??_SendGPSSPI
  4619  07EB  3080               	movlw	128
  4620  07EC  0235               	subwf	??_SendGPSSPI,w
  4621  07ED  1D03               	skipz
  4622  07EE  2FF1               	goto	u1645
  4623  07EF  3003               	movlw	3
  4624  07F0  023A               	subwf	SendGPSSPI@x,w
  4625  07F1                     u1645:	
  4626  07F1  1C03               	skipc
  4627  07F2  2FDA               	goto	l2090
  4628  07F3                     l2096:	
  4629                           
  4630                           ;launcher_functions.c: 625: }
  4631                           ;launcher_functions.c: 626: WriteSPI(validEastWest);
  4632  07F3  0021               	movlb	1	; select bank1
  4633  07F4  0869               	movf	_validEastWest^(0+128),w
  4634  07F5  318D  252E         	fcall	_WriteSPI
  4635                           
  4636                           ;launcher_functions.c: 627: LATC2 = (1);
  4637  07F7  0022               	movlb	2	; select bank2
  4638  07F8  150E               	bsf	14,2	;volatile
  4639                           
  4640                           ;launcher_functions.c: 628: PORTAbits.RA4 = 0;
  4641  07F9  0020               	movlb	0	; select bank0
  4642  07FA  120C               	bcf	12,4	;volatile
  4643  07FB  0008               	return
  4644  07FC                     __end_of_SendGPSSPI:	
  4645                           
  4646                           	psect	text15
  4647  0381                     __ptext15:	
  4648 ;; *************** function _RecordMode *****************
  4649 ;; Defined at:
  4650 ;;		line 534 in file "launcher_functions.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  address         4   28[BANK0 ] long 
  4655 ;;  count           2   26[BANK0 ] int 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;		None               void
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4665 ;;      Params:         0       0       0       0       0       0       0
  4666 ;;      Locals:         0       6       0       0       0       0       0
  4667 ;;      Temps:          0       5       0       0       0       0       0
  4668 ;;      Totals:         0      11       0       0       0       0       0
  4669 ;;Total ram usage:       11 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    5
  4672 ;; This function calls:
  4673 ;;		_InitSPI
  4674 ;;		_ReadBuffer
  4675 ;;		_ToggleSleepGPS
  4676 ;;		_WriteOverheadSPI
  4677 ;;		_WriteSPI
  4678 ;; This function is called by:
  4679 ;;		_main
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function _RecordMode
  4685  0381                     _RecordMode:	
  4686                           
  4687                           ;launcher_functions.c: 536: PORTAbits.RA4 = 1;
  4688                           
  4689                           ;incstack = 0
  4690                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4691  0381  0020               	movlb	0	; select bank0
  4692  0382  160C               	bsf	12,4	;volatile
  4693                           
  4694                           ;launcher_functions.c: 537: long int address = 0x135C0+11;
  4695  0383  3000               	movlw	0
  4696  0384  00BF               	movwf	RecordMode@address+3
  4697  0385  3001               	movlw	1
  4698  0386  00BE               	movwf	RecordMode@address+2
  4699  0387  3035               	movlw	53
  4700  0388  00BD               	movwf	RecordMode@address+1
  4701  0389  30CB               	movlw	203
  4702  038A  00BC               	movwf	RecordMode@address
  4703                           
  4704                           ;launcher_functions.c: 538: int count = 203;
  4705  038B  30CB               	movlw	203
  4706  038C  00BA               	movwf	RecordMode@count
  4707  038D  3000               	movlw	0
  4708  038E  00BB               	movwf	RecordMode@count+1
  4709                           
  4710                           ;launcher_functions.c: 542: InitSPI();
  4711  038F  318D  250A  3183   	fcall	_InitSPI
  4712                           
  4713                           ;launcher_functions.c: 544: (start) = 0;
  4714  0392  01FB               	clrf	_start
  4715  0393  01FC               	clrf	_start+1
  4716                           
  4717                           ;launcher_functions.c: 545: (end) = 0;
  4718  0394  01F9               	clrf	_end
  4719  0395  01FA               	clrf	_end+1
  4720                           
  4721                           ;launcher_functions.c: 546: WriteOverheadSPI(address);
  4722  0396  0020               	movlb	0	; select bank0
  4723  0397  083F               	movf	RecordMode@address+3,w
  4724  0398  00AA               	movwf	WriteOverheadSPI@address+3
  4725  0399  083E               	movf	RecordMode@address+2,w
  4726  039A  00A9               	movwf	WriteOverheadSPI@address+2
  4727  039B  083D               	movf	RecordMode@address+1,w
  4728  039C  00A8               	movwf	WriteOverheadSPI@address+1
  4729  039D  083C               	movf	RecordMode@address,w
  4730  039E  00A7               	movwf	WriteOverheadSPI@address
  4731  039F  318F  273A  3183   	fcall	_WriteOverheadSPI
  4732                           
  4733                           ;launcher_functions.c: 548: TMR1IF = 0;
  4734  03A2  0020               	movlb	0	; select bank0
  4735  03A3  1011               	bcf	17,0	;volatile
  4736                           
  4737                           ;launcher_functions.c: 549: TMR1IE = 1;
  4738  03A4  0021               	movlb	1	; select bank1
  4739  03A5  1411               	bsf	17,0	;volatile
  4740                           
  4741                           ;launcher_functions.c: 550: TMR1ON = 1;
  4742  03A6  0020               	movlb	0	; select bank0
  4743  03A7  1418               	bsf	24,0	;volatile
  4744  03A8                     l2614:	
  4745                           ;launcher_functions.c: 552: while((recordFlag) && (address < 131072))
  4746                           
  4747  03A8  0021               	movlb	1	; select bank1
  4748  03A9  086C               	movf	_recordFlag^(0+128),w
  4749  03AA  1903               	btfsc	3,2
  4750  03AB  2C2F               	goto	l2634
  4751  03AC  0020               	movlb	0	; select bank0
  4752  03AD  083F               	movf	RecordMode@address+3,w
  4753  03AE  3A80               	xorlw	128
  4754  03AF  00B5               	movwf	??_RecordMode
  4755  03B0  3000               	movlw	0
  4756  03B1  3A80               	xorlw	128
  4757  03B2  0235               	subwf	??_RecordMode,w
  4758  03B3  1D03               	skipz
  4759  03B4  2BBF               	goto	u2163
  4760  03B5  3002               	movlw	2
  4761  03B6  023E               	subwf	RecordMode@address+2,w
  4762  03B7  1D03               	skipz
  4763  03B8  2BBF               	goto	u2163
  4764  03B9  3000               	movlw	0
  4765  03BA  023D               	subwf	RecordMode@address+1,w
  4766  03BB  1D03               	skipz
  4767  03BC  2BBF               	goto	u2163
  4768  03BD  3000               	movlw	0
  4769  03BE  023C               	subwf	RecordMode@address,w
  4770  03BF                     u2163:	
  4771  03BF  1803               	btfsc	3,0
  4772  03C0  2C2E               	goto	l438
  4773                           
  4774                           ;launcher_functions.c: 553: {
  4775                           ;launcher_functions.c: 554: if(count>=256)
  4776  03C1  083B               	movf	RecordMode@count+1,w
  4777  03C2  3A80               	xorlw	128
  4778  03C3  00B5               	movwf	??_RecordMode
  4779  03C4  3081               	movlw	129
  4780  03C5  0235               	subwf	??_RecordMode,w
  4781  03C6  1D03               	skipz
  4782  03C7  2BCA               	goto	u2135
  4783  03C8  3000               	movlw	0
  4784  03C9  023A               	subwf	RecordMode@count,w
  4785  03CA                     u2135:	
  4786  03CA  1C03               	skipc
  4787  03CB  2BDC               	goto	l2606
  4788                           
  4789                           ;launcher_functions.c: 555: {
  4790                           ;launcher_functions.c: 556: LATC2 = (1);
  4791  03CC  0022               	movlb	2	; select bank2
  4792  03CD  150E               	bsf	14,2	;volatile
  4793                           
  4794                           ;launcher_functions.c: 557: count = 0;
  4795  03CE  0020               	movlb	0	; select bank0
  4796  03CF  01BA               	clrf	RecordMode@count
  4797  03D0  01BB               	clrf	RecordMode@count+1
  4798                           
  4799                           ;launcher_functions.c: 558: WriteOverheadSPI(address);
  4800  03D1  083F               	movf	RecordMode@address+3,w
  4801  03D2  00AA               	movwf	WriteOverheadSPI@address+3
  4802  03D3  083E               	movf	RecordMode@address+2,w
  4803  03D4  00A9               	movwf	WriteOverheadSPI@address+2
  4804  03D5  083D               	movf	RecordMode@address+1,w
  4805  03D6  00A8               	movwf	WriteOverheadSPI@address+1
  4806  03D7  083C               	movf	RecordMode@address,w
  4807  03D8  00A7               	movwf	WriteOverheadSPI@address
  4808  03D9  318F  273A  3183   	fcall	_WriteOverheadSPI
  4809  03DC                     l2606:	
  4810                           
  4811                           ;launcher_functions.c: 559: }
  4812                           ;launcher_functions.c: 560: if(!((((start))==((end)))?(1):(0)))
  4813  03DC  087A               	movf	_end+1,w
  4814  03DD  067C               	xorwf	_start+1,w
  4815  03DE  1D03               	skipz
  4816  03DF  2BE2               	goto	u2145
  4817  03E0  0879               	movf	_end,w
  4818  03E1  067B               	xorwf	_start,w
  4819  03E2                     u2145:	
  4820  03E2  1903               	skipnz
  4821  03E3  2BA8               	goto	l2614
  4822                           
  4823                           ;launcher_functions.c: 561: {
  4824                           ;launcher_functions.c: 562: WriteSPI(ReadBuffer());
  4825  03E4  318D  2558  3183   	fcall	_ReadBuffer
  4826  03E7  318D  252E  3183   	fcall	_WriteSPI
  4827                           
  4828                           ;launcher_functions.c: 563: address++;
  4829  03EA  3001               	movlw	1
  4830  03EB  0020               	movlb	0	; select bank0
  4831  03EC  07BC               	addwf	RecordMode@address,f
  4832  03ED  3000               	movlw	0
  4833  03EE  3DBD               	addwfc	RecordMode@address+1,f
  4834  03EF  3000               	movlw	0
  4835  03F0  3DBE               	addwfc	RecordMode@address+2,f
  4836  03F1  3000               	movlw	0
  4837  03F2  3DBF               	addwfc	RecordMode@address+3,f
  4838                           
  4839                           ;launcher_functions.c: 564: count++;
  4840  03F3  3001               	movlw	1
  4841  03F4  07BA               	addwf	RecordMode@count,f
  4842  03F5  3000               	movlw	0
  4843  03F6  3DBB               	addwfc	RecordMode@count+1,f
  4844  03F7  2BA8               	goto	l2614
  4845  03F8                     l2618:	
  4846                           ;launcher_functions.c: 565: }
  4847                           ;launcher_functions.c: 567: }
  4848                           ;launcher_functions.c: 568: while(!((((start))==((end)))?(1):(0)) && (address < 131072))
  4849                           
  4850                           
  4851                           ;launcher_functions.c: 569: {
  4852                           ;launcher_functions.c: 570: if(count>=256)
  4853  03F8  083B               	movf	RecordMode@count+1,w
  4854  03F9  3A80               	xorlw	128
  4855  03FA  00B5               	movwf	??_RecordMode
  4856  03FB  3081               	movlw	129
  4857  03FC  0235               	subwf	??_RecordMode,w
  4858  03FD  1D03               	skipz
  4859  03FE  2C01               	goto	u2175
  4860  03FF  3000               	movlw	0
  4861  0400  023A               	subwf	RecordMode@count,w
  4862  0401                     u2175:	
  4863  0401  1C03               	skipc
  4864  0402  2C13               	goto	l2626
  4865                           
  4866                           ;launcher_functions.c: 571: {
  4867                           ;launcher_functions.c: 572: LATC2 = (1);
  4868  0403  0022               	movlb	2	; select bank2
  4869  0404  150E               	bsf	14,2	;volatile
  4870                           
  4871                           ;launcher_functions.c: 573: count = 0;
  4872  0405  0020               	movlb	0	; select bank0
  4873  0406  01BA               	clrf	RecordMode@count
  4874  0407  01BB               	clrf	RecordMode@count+1
  4875                           
  4876                           ;launcher_functions.c: 574: WriteOverheadSPI(address);
  4877  0408  083F               	movf	RecordMode@address+3,w
  4878  0409  00AA               	movwf	WriteOverheadSPI@address+3
  4879  040A  083E               	movf	RecordMode@address+2,w
  4880  040B  00A9               	movwf	WriteOverheadSPI@address+2
  4881  040C  083D               	movf	RecordMode@address+1,w
  4882  040D  00A8               	movwf	WriteOverheadSPI@address+1
  4883  040E  083C               	movf	RecordMode@address,w
  4884  040F  00A7               	movwf	WriteOverheadSPI@address
  4885  0410  318F  273A  3183   	fcall	_WriteOverheadSPI
  4886  0413                     l2626:	
  4887                           
  4888                           ;launcher_functions.c: 575: }
  4889                           ;launcher_functions.c: 576: if(!((((start))==((end)))?(1):(0)))
  4890  0413  087A               	movf	_end+1,w
  4891  0414  067C               	xorwf	_start+1,w
  4892  0415  1D03               	skipz
  4893  0416  2C19               	goto	u2185
  4894  0417  0879               	movf	_end,w
  4895  0418  067B               	xorwf	_start,w
  4896  0419                     u2185:	
  4897  0419  1903               	skipnz
  4898  041A  2C2E               	goto	l438
  4899                           
  4900                           ;launcher_functions.c: 577: {
  4901                           ;launcher_functions.c: 578: WriteSPI(ReadBuffer());
  4902  041B  318D  2558  3183   	fcall	_ReadBuffer
  4903  041E  318D  252E  3183   	fcall	_WriteSPI
  4904                           
  4905                           ;launcher_functions.c: 579: address++;
  4906  0421  3001               	movlw	1
  4907  0422  0020               	movlb	0	; select bank0
  4908  0423  07BC               	addwf	RecordMode@address,f
  4909  0424  3000               	movlw	0
  4910  0425  3DBD               	addwfc	RecordMode@address+1,f
  4911  0426  3000               	movlw	0
  4912  0427  3DBE               	addwfc	RecordMode@address+2,f
  4913  0428  3000               	movlw	0
  4914  0429  3DBF               	addwfc	RecordMode@address+3,f
  4915                           
  4916                           ;launcher_functions.c: 580: count++;
  4917  042A  3001               	movlw	1
  4918  042B  07BA               	addwf	RecordMode@count,f
  4919  042C  3000               	movlw	0
  4920  042D  3DBB               	addwfc	RecordMode@count+1,f
  4921  042E                     l438:	
  4922  042E  0021               	movlb	1	; select bank1
  4923  042F                     l2634:	
  4924  042F  087A               	movf	_end+1,w
  4925  0430  067C               	xorwf	_start+1,w
  4926  0431  1D03               	skipz
  4927  0432  2C35               	goto	u2195
  4928  0433  0879               	movf	_end,w
  4929  0434  067B               	xorwf	_start,w
  4930  0435                     u2195:	
  4931  0435  1903               	skipnz
  4932  0436  2C4C               	goto	l441
  4933  0437  0020               	movlb	0	; select bank0
  4934  0438  083F               	movf	RecordMode@address+3,w
  4935  0439  3A80               	xorlw	128
  4936  043A  00B5               	movwf	??_RecordMode
  4937  043B  3000               	movlw	0
  4938  043C  3A80               	xorlw	128
  4939  043D  0235               	subwf	??_RecordMode,w
  4940  043E  1D03               	skipz
  4941  043F  2C4A               	goto	u2203
  4942  0440  3002               	movlw	2
  4943  0441  023E               	subwf	RecordMode@address+2,w
  4944  0442  1D03               	skipz
  4945  0443  2C4A               	goto	u2203
  4946  0444  3000               	movlw	0
  4947  0445  023D               	subwf	RecordMode@address+1,w
  4948  0446  1D03               	skipz
  4949  0447  2C4A               	goto	u2203
  4950  0448  3000               	movlw	0
  4951  0449  023C               	subwf	RecordMode@address,w
  4952  044A                     u2203:	
  4953  044A  1C03               	skipc
  4954  044B  2BF8               	goto	l2618
  4955  044C                     l441:	
  4956                           
  4957                           ;launcher_functions.c: 581: }
  4958                           ;launcher_functions.c: 582: }
  4959                           ;launcher_functions.c: 583: LATC2 = (1);
  4960  044C  0022               	movlb	2	; select bank2
  4961  044D  150E               	bsf	14,2	;volatile
  4962                           
  4963                           ;launcher_functions.c: 584: TMR1IE = 0;
  4964  044E  0021               	movlb	1	; select bank1
  4965  044F  1011               	bcf	17,0	;volatile
  4966                           
  4967                           ;launcher_functions.c: 585: TMR1ON = 0;
  4968  0450  0020               	movlb	0	; select bank0
  4969  0451  1018               	bcf	24,0	;volatile
  4970                           
  4971                           ;launcher_functions.c: 586: _delay((unsigned long)((5)*(16000000/4000.0)));
  4972  0452  301A               	movlw	26
  4973  0453  00B6               	movwf	??_RecordMode+1
  4974  0454  30F8               	movlw	248
  4975  0455  00B5               	movwf	??_RecordMode
  4976  0456                     u2777:	
  4977  0456  0BB5               	decfsz	??_RecordMode,f
  4978  0457  2C56               	goto	u2777
  4979  0458  0BB6               	decfsz	??_RecordMode+1,f
  4980  0459  2C56               	goto	u2777
  4981  045A  0000               	nop
  4982                           
  4983                           ;launcher_functions.c: 587: WriteOverheadSPI(0x135C0);
  4984  045B  3000               	movlw	0
  4985  045C  0020               	movlb	0	; select bank0
  4986  045D  00AA               	movwf	WriteOverheadSPI@address+3
  4987  045E  3001               	movlw	1
  4988  045F  00A9               	movwf	WriteOverheadSPI@address+2
  4989  0460  3035               	movlw	53
  4990  0461  00A8               	movwf	WriteOverheadSPI@address+1
  4991  0462  30C0               	movlw	192
  4992  0463  00A7               	movwf	WriteOverheadSPI@address
  4993  0464  318F  273A  3183   	fcall	_WriteOverheadSPI
  4994                           
  4995                           ;launcher_functions.c: 588: if(address >= 131072)
  4996  0467  0020               	movlb	0	; select bank0
  4997  0468  083F               	movf	RecordMode@address+3,w
  4998  0469  3A80               	xorlw	128
  4999  046A  00B5               	movwf	??_RecordMode
  5000  046B  3000               	movlw	0
  5001  046C  3A80               	xorlw	128
  5002  046D  0235               	subwf	??_RecordMode,w
  5003  046E  1D03               	skipz
  5004  046F  2C7A               	goto	u2213
  5005  0470  3002               	movlw	2
  5006  0471  023E               	subwf	RecordMode@address+2,w
  5007  0472  1D03               	skipz
  5008  0473  2C7A               	goto	u2213
  5009  0474  3000               	movlw	0
  5010  0475  023D               	subwf	RecordMode@address+1,w
  5011  0476  1D03               	skipz
  5012  0477  2C7A               	goto	u2213
  5013  0478  3000               	movlw	0
  5014  0479  023C               	subwf	RecordMode@address,w
  5015  047A                     u2213:	
  5016  047A  1C03               	skipc
  5017  047B  2C86               	goto	l2646
  5018                           
  5019                           ;launcher_functions.c: 589: {
  5020                           ;launcher_functions.c: 590: WriteSPI((131072 - 1)>>16);
  5021  047C  3001               	movlw	1
  5022  047D  318D  252E  3183   	fcall	_WriteSPI
  5023                           
  5024                           ;launcher_functions.c: 591: WriteSPI((131072 - 1)>>8);
  5025  0480  30FF               	movlw	255
  5026  0481  318D  252E  3183   	fcall	_WriteSPI
  5027                           
  5028                           ;launcher_functions.c: 592: WriteSPI(131072 - 1);
  5029  0484  30FF               	movlw	255
  5030  0485  2CB2               	goto	L4
  5031  0486                     l2646:	
  5032                           ;launcher_functions.c: 593: }
  5033                           
  5034                           
  5035                           ;launcher_functions.c: 594: else
  5036                           ;launcher_functions.c: 595: {
  5037                           ;launcher_functions.c: 596: WriteSPI(address>>16);
  5038  0486  0020               	movlb	0	; select bank0
  5039  0487  083C               	movf	RecordMode@address,w
  5040  0488  00B5               	movwf	??_RecordMode
  5041  0489  083D               	movf	RecordMode@address+1,w
  5042  048A  00B6               	movwf	??_RecordMode+1
  5043  048B  083E               	movf	RecordMode@address+2,w
  5044  048C  00B7               	movwf	??_RecordMode+2
  5045  048D  083F               	movf	RecordMode@address+3,w
  5046  048E  00B8               	movwf	??_RecordMode+3
  5047  048F  3010               	movlw	16
  5048  0490  00B9               	movwf	??_RecordMode+4
  5049  0491                     u2225:	
  5050  0491  37B8               	asrf	??_RecordMode+3,f
  5051  0492  0CB7               	rrf	??_RecordMode+2,f
  5052  0493  0CB6               	rrf	??_RecordMode+1,f
  5053  0494  0CB5               	rrf	??_RecordMode,f
  5054  0495  0BB9               	decfsz	??_RecordMode+4,f
  5055  0496  2C91               	goto	u2225
  5056  0497  0835               	movf	??_RecordMode,w
  5057  0498  318D  252E  3183   	fcall	_WriteSPI
  5058                           
  5059                           ;launcher_functions.c: 597: WriteSPI(address>>8);
  5060  049B  0020               	movlb	0	; select bank0
  5061  049C  083C               	movf	RecordMode@address,w
  5062  049D  00B5               	movwf	??_RecordMode
  5063  049E  083D               	movf	RecordMode@address+1,w
  5064  049F  00B6               	movwf	??_RecordMode+1
  5065  04A0  083E               	movf	RecordMode@address+2,w
  5066  04A1  00B7               	movwf	??_RecordMode+2
  5067  04A2  083F               	movf	RecordMode@address+3,w
  5068  04A3  00B8               	movwf	??_RecordMode+3
  5069  04A4  3008               	movlw	8
  5070  04A5  00B9               	movwf	??_RecordMode+4
  5071  04A6                     u2235:	
  5072  04A6  37B8               	asrf	??_RecordMode+3,f
  5073  04A7  0CB7               	rrf	??_RecordMode+2,f
  5074  04A8  0CB6               	rrf	??_RecordMode+1,f
  5075  04A9  0CB5               	rrf	??_RecordMode,f
  5076  04AA  0BB9               	decfsz	??_RecordMode+4,f
  5077  04AB  2CA6               	goto	u2235
  5078  04AC  0835               	movf	??_RecordMode,w
  5079  04AD  318D  252E  3183   	fcall	_WriteSPI
  5080                           
  5081                           ;launcher_functions.c: 598: WriteSPI(address);
  5082  04B0  0020               	movlb	0	; select bank0
  5083  04B1  083C               	movf	RecordMode@address,w
  5084  04B2                     L4:	
  5085  04B2  318D  252E  3183   	fcall	_WriteSPI
  5086                           
  5087                           ;launcher_functions.c: 599: }
  5088                           ;launcher_functions.c: 600: LATC2 = (1);
  5089  04B5  0022               	movlb	2	; select bank2
  5090  04B6  150E               	bsf	14,2	;volatile
  5091                           
  5092                           ;launcher_functions.c: 601: (start) = 0;
  5093  04B7  01FB               	clrf	_start
  5094  04B8  01FC               	clrf	_start+1
  5095                           
  5096                           ;launcher_functions.c: 602: (end) = 0;
  5097  04B9  01F9               	clrf	_end
  5098  04BA  01FA               	clrf	_end+1
  5099                           
  5100                           ;launcher_functions.c: 603: SSPCON1bits.SSPEN=0;
  5101  04BB  0024               	movlb	4	; select bank4
  5102  04BC  1295               	bcf	21,5	;volatile
  5103                           
  5104                           ;launcher_functions.c: 604: PORTCbits.RC5 = 0;
  5105  04BD  0020               	movlb	0	; select bank0
  5106  04BE  128E               	bcf	14,5	;volatile
  5107                           
  5108                           ;launcher_functions.c: 605: PORTAbits.RA4 = 0;
  5109  04BF  120C               	bcf	12,4	;volatile
  5110                           
  5111                           ;launcher_functions.c: 606: ToggleSleepGPS();
  5112  04C0  318E  2611         	fcall	_ToggleSleepGPS
  5113  04C2  0008               	return
  5114  04C3                     __end_of_RecordMode:	
  5115                           
  5116                           	psect	text16
  5117  0F3A                     __ptext16:	
  5118 ;; *************** function _WriteOverheadSPI *****************
  5119 ;; Defined at:
  5120 ;;		line 168 in file "launcher_functions.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  address         4    7[BANK0 ] long 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  5125 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;		None               void
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0, pclath, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5135 ;;      Params:         0       4       0       0       0       0       0
  5136 ;;      Locals:         0       4       0       0       0       0       0
  5137 ;;      Temps:          0       6       0       0       0       0       0
  5138 ;;      Totals:         0      14       0       0       0       0       0
  5139 ;;Total ram usage:       14 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    4
  5142 ;; This function calls:
  5143 ;;		_ReadStatusSPI
  5144 ;;		_WriteSPI
  5145 ;; This function is called by:
  5146 ;;		_RecordMode
  5147 ;;		_SendGPSSPI
  5148 ;;		_PreRecordMode
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _WriteOverheadSPI
  5154  0F3A                     _WriteOverheadSPI:	
  5155                           
  5156                           ;launcher_functions.c: 170: unsigned char address_bytes[3];
  5157                           ;launcher_functions.c: 171: unsigned char StatusReg;
  5158                           ;launcher_functions.c: 173: address_bytes[0]=(unsigned char)(address>>16);
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  5162  0F3A  0020               	movlb	0	; select bank0
  5163  0F3B  0827               	movf	WriteOverheadSPI@address,w
  5164  0F3C  00AB               	movwf	??_WriteOverheadSPI
  5165  0F3D  0828               	movf	WriteOverheadSPI@address+1,w
  5166  0F3E  00AC               	movwf	??_WriteOverheadSPI+1
  5167  0F3F  0829               	movf	WriteOverheadSPI@address+2,w
  5168  0F40  00AD               	movwf	??_WriteOverheadSPI+2
  5169  0F41  082A               	movf	WriteOverheadSPI@address+3,w
  5170  0F42  00AE               	movwf	??_WriteOverheadSPI+3
  5171  0F43  3010               	movlw	16
  5172  0F44  00AF               	movwf	??_WriteOverheadSPI+4
  5173  0F45                     u1395:	
  5174  0F45  37AE               	asrf	??_WriteOverheadSPI+3,f
  5175  0F46  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5176  0F47  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5177  0F48  0CAB               	rrf	??_WriteOverheadSPI,f
  5178  0F49  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5179  0F4A  2F45               	goto	u1395
  5180  0F4B  082B               	movf	??_WriteOverheadSPI,w
  5181  0F4C  00B0               	movwf	??_WriteOverheadSPI+5
  5182  0F4D  0830               	movf	??_WriteOverheadSPI+5,w
  5183  0F4E  00B1               	movwf	WriteOverheadSPI@address_bytes
  5184                           
  5185                           ;launcher_functions.c: 174: address_bytes[1]=(unsigned char)(address>>8);
  5186  0F4F  0827               	movf	WriteOverheadSPI@address,w
  5187  0F50  00AB               	movwf	??_WriteOverheadSPI
  5188  0F51  0828               	movf	WriteOverheadSPI@address+1,w
  5189  0F52  00AC               	movwf	??_WriteOverheadSPI+1
  5190  0F53  0829               	movf	WriteOverheadSPI@address+2,w
  5191  0F54  00AD               	movwf	??_WriteOverheadSPI+2
  5192  0F55  082A               	movf	WriteOverheadSPI@address+3,w
  5193  0F56  00AE               	movwf	??_WriteOverheadSPI+3
  5194  0F57  3008               	movlw	8
  5195  0F58  00AF               	movwf	??_WriteOverheadSPI+4
  5196  0F59                     u1405:	
  5197  0F59  37AE               	asrf	??_WriteOverheadSPI+3,f
  5198  0F5A  0CAD               	rrf	??_WriteOverheadSPI+2,f
  5199  0F5B  0CAC               	rrf	??_WriteOverheadSPI+1,f
  5200  0F5C  0CAB               	rrf	??_WriteOverheadSPI,f
  5201  0F5D  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  5202  0F5E  2F59               	goto	u1405
  5203  0F5F  082B               	movf	??_WriteOverheadSPI,w
  5204  0F60  00B0               	movwf	??_WriteOverheadSPI+5
  5205  0F61  0830               	movf	??_WriteOverheadSPI+5,w
  5206  0F62  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  5207                           
  5208                           ;launcher_functions.c: 175: address_bytes[2]=(unsigned char)(address);
  5209  0F63  0827               	movf	WriteOverheadSPI@address,w
  5210  0F64  00AB               	movwf	??_WriteOverheadSPI
  5211  0F65  082B               	movf	??_WriteOverheadSPI,w
  5212  0F66  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  5213  0F67                     l1980:	
  5214                           ;launcher_functions.c: 177: do
  5215                           
  5216                           
  5217                           ;launcher_functions.c: 178: {
  5218                           ;launcher_functions.c: 179: StatusReg = (ReadStatusSPI() & 0x01);
  5219  0F67  318C  24D6  318F   	fcall	_ReadStatusSPI
  5220  0F6A  3901               	andlw	1
  5221  0F6B  0020               	movlb	0	; select bank0
  5222  0F6C  00AB               	movwf	??_WriteOverheadSPI
  5223  0F6D  082B               	movf	??_WriteOverheadSPI,w
  5224  0F6E  00B4               	movwf	WriteOverheadSPI@StatusReg
  5225                           
  5226                           ;launcher_functions.c: 180: } while (StatusReg);
  5227  0F6F  08B4               	movf	WriteOverheadSPI@StatusReg,f
  5228  0F70  1D03               	skipz
  5229  0F71  2F67               	goto	l1980
  5230                           
  5231                           ;launcher_functions.c: 183: LATC2 = (0);
  5232  0F72  0022               	movlb	2	; select bank2
  5233  0F73  110E               	bcf	14,2	;volatile
  5234                           
  5235                           ;launcher_functions.c: 184: WriteSPI((0x06));
  5236  0F74  3006               	movlw	6
  5237  0F75  318D  252E  318F   	fcall	_WriteSPI
  5238                           
  5239                           ;launcher_functions.c: 185: LATC2 = (1);
  5240  0F78  0022               	movlb	2	; select bank2
  5241  0F79  150E               	bsf	14,2	;volatile
  5242  0F7A                     l309:	
  5243                           ;launcher_functions.c: 187: do
  5244                           
  5245                           
  5246                           ;launcher_functions.c: 188: {
  5247                           ;launcher_functions.c: 189: StatusReg = (ReadStatusSPI() & 0x02);
  5248  0F7A  318C  24D6  318F   	fcall	_ReadStatusSPI
  5249  0F7D  3902               	andlw	2
  5250  0F7E  0020               	movlb	0	; select bank0
  5251  0F7F  00AB               	movwf	??_WriteOverheadSPI
  5252  0F80  082B               	movf	??_WriteOverheadSPI,w
  5253  0F81  00B4               	movwf	WriteOverheadSPI@StatusReg
  5254                           
  5255                           ;launcher_functions.c: 190: } while (!StatusReg);
  5256  0F82  0834               	movf	WriteOverheadSPI@StatusReg,w
  5257  0F83  1903               	btfsc	3,2
  5258  0F84  2F7A               	goto	l309
  5259                           
  5260                           ;launcher_functions.c: 194: LATC2=(0);
  5261  0F85  0022               	movlb	2	; select bank2
  5262  0F86  110E               	bcf	14,2	;volatile
  5263                           
  5264                           ;launcher_functions.c: 195: WriteSPI((0x02));
  5265  0F87  3002               	movlw	2
  5266  0F88  318D  252E  318F   	fcall	_WriteSPI
  5267                           
  5268                           ;launcher_functions.c: 196: WriteSPI(address_bytes[0]);
  5269  0F8B  0020               	movlb	0	; select bank0
  5270  0F8C  0831               	movf	WriteOverheadSPI@address_bytes,w
  5271  0F8D  318D  252E  318F   	fcall	_WriteSPI
  5272                           
  5273                           ;launcher_functions.c: 197: WriteSPI(address_bytes[1]);
  5274  0F90  0020               	movlb	0	; select bank0
  5275  0F91  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  5276  0F92  318D  252E  318F   	fcall	_WriteSPI
  5277                           
  5278                           ;launcher_functions.c: 198: WriteSPI(address_bytes[2]);
  5279  0F95  0020               	movlb	0	; select bank0
  5280  0F96  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  5281  0F97  318D  252E         	fcall	_WriteSPI
  5282  0F99  0008               	return
  5283  0F9A                     __end_of_WriteOverheadSPI:	
  5284                           ;launcher_functions.c: 200: return;
  5285                           
  5286                           
  5287                           	psect	text17
  5288  0CD6                     __ptext17:	
  5289 ;; *************** function _ReadStatusSPI *****************
  5290 ;; Defined at:
  5291 ;;		line 156 in file "launcher_functions.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  dataRead        1    6[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      unsigned char 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5305 ;;      Params:         0       0       0       0       0       0       0
  5306 ;;      Locals:         0       1       0       0       0       0       0
  5307 ;;      Temps:          0       1       0       0       0       0       0
  5308 ;;      Totals:         0       2       0       0       0       0       0
  5309 ;;Total ram usage:        2 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    3
  5312 ;; This function calls:
  5313 ;;		_ReadSPI
  5314 ;;		_WriteSPI
  5315 ;; This function is called by:
  5316 ;;		_WriteOverheadSPI
  5317 ;;		_ReadOverheadSPI
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           
  5322                           ;psect for function _ReadStatusSPI
  5323  0CD6                     _ReadStatusSPI:	
  5324                           
  5325                           ;launcher_functions.c: 158: unsigned char dataRead;
  5326                           ;launcher_functions.c: 160: LATC2=(0);
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  5330  0CD6  0022               	movlb	2	; select bank2
  5331  0CD7  110E               	bcf	14,2	;volatile
  5332                           
  5333                           ;launcher_functions.c: 161: WriteSPI((0x05));
  5334  0CD8  3005               	movlw	5
  5335  0CD9  318D  252E  318C   	fcall	_WriteSPI
  5336                           
  5337                           ;launcher_functions.c: 162: dataRead = ReadSPI();
  5338  0CDC  318C  24AC         	fcall	_ReadSPI
  5339  0CDE  0020               	movlb	0	; select bank0
  5340  0CDF  00A5               	movwf	??_ReadStatusSPI
  5341  0CE0  0825               	movf	??_ReadStatusSPI,w
  5342  0CE1  00A6               	movwf	ReadStatusSPI@dataRead
  5343                           
  5344                           ;launcher_functions.c: 163: LATC2=(1);
  5345  0CE2  0022               	movlb	2	; select bank2
  5346  0CE3  150E               	bsf	14,2	;volatile
  5347                           
  5348                           ;launcher_functions.c: 165: return(dataRead);
  5349  0CE4  0020               	movlb	0	; select bank0
  5350  0CE5  0826               	movf	ReadStatusSPI@dataRead,w
  5351  0CE6  0008               	return
  5352  0CE7                     __end_of_ReadStatusSPI:	
  5353                           
  5354                           	psect	text18
  5355  0D2E                     __ptext18:	
  5356 ;; *************** function _WriteSPI *****************
  5357 ;; Defined at:
  5358 ;;		line 136 in file "launcher_functions.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  databyte        1    wreg     unsigned char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  databyte        1    4[BANK0 ] unsigned char 
  5363 ;;  temp            2    2[BANK0 ] unsigned int 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		wreg
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5373 ;;      Params:         0       0       0       0       0       0       0
  5374 ;;      Locals:         0       3       0       0       0       0       0
  5375 ;;      Temps:          0       2       0       0       0       0       0
  5376 ;;      Totals:         0       5       0       0       0       0       0
  5377 ;;Total ram usage:        5 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    2
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_ReadStatusSPI
  5384 ;;		_WriteOverheadSPI
  5385 ;;		_RecordMode
  5386 ;;		_SendGPSSPI
  5387 ;;		_ReadOverheadSPI
  5388 ;;		_PreRecordMode
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _WriteSPI
  5394  0D2E                     _WriteSPI:	
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _WriteSPI: [wreg]
  5398                           ;WriteSPI@databyte stored from wreg
  5399  0D2E  0020               	movlb	0	; select bank0
  5400  0D2F  00A4               	movwf	WriteSPI@databyte
  5401                           
  5402                           ;launcher_functions.c: 138: unsigned int temp;
  5403                           ;launcher_functions.c: 139: temp = SSPBUF;
  5404  0D30  0024               	movlb	4	; select bank4
  5405  0D31  0811               	movf	17,w	;volatile
  5406  0D32  0020               	movlb	0	; select bank0
  5407  0D33  00A0               	movwf	??_WriteSPI
  5408  0D34  01A1               	clrf	??_WriteSPI+1
  5409  0D35  0820               	movf	??_WriteSPI,w
  5410  0D36  00A2               	movwf	WriteSPI@temp
  5411  0D37  0821               	movf	??_WriteSPI+1,w
  5412  0D38  00A3               	movwf	WriteSPI@temp+1
  5413                           
  5414                           ;launcher_functions.c: 140: PIR1bits.SSP1IF=0;
  5415  0D39  1191               	bcf	17,3	;volatile
  5416                           
  5417                           ;launcher_functions.c: 141: SSPBUF = databyte;
  5418  0D3A  0824               	movf	WriteSPI@databyte,w
  5419  0D3B  0024               	movlb	4	; select bank4
  5420  0D3C  0091               	movwf	17	;volatile
  5421  0D3D                     l292:	
  5422                           ;launcher_functions.c: 142: while(!PIR1bits.SSP1IF);
  5423                           
  5424  0D3D  0020               	movlb	0	; select bank0
  5425  0D3E  1991               	btfsc	17,3	;volatile
  5426  0D3F  0008               	return
  5427  0D40  2D3D               	goto	l292
  5428  0D41                     __end_of_WriteSPI:	
  5429                           
  5430                           	psect	text19
  5431  0CAC                     __ptext19:	
  5432 ;; *************** function _ReadSPI *****************
  5433 ;; Defined at:
  5434 ;;		line 145 in file "launcher_functions.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  dataByte        1    1[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      unsigned char 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5448 ;;      Params:         0       0       0       0       0       0       0
  5449 ;;      Locals:         0       1       0       0       0       0       0
  5450 ;;      Temps:          0       1       0       0       0       0       0
  5451 ;;      Totals:         0       2       0       0       0       0       0
  5452 ;;Total ram usage:        2 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    2
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_ReadStatusSPI
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _ReadSPI
  5464  0CAC                     _ReadSPI:	
  5465                           
  5466                           ;launcher_functions.c: 147: unsigned char dataByte;
  5467                           ;launcher_functions.c: 149: SSPBUF = 0x00;
  5468                           
  5469                           ;incstack = 0
  5470                           ; Regs used in _ReadSPI: [wreg+status,2]
  5471  0CAC  0024               	movlb	4	; select bank4
  5472  0CAD  0191               	clrf	17	;volatile
  5473  0CAE                     l298:	
  5474                           ;launcher_functions.c: 150: while(!SSPSTATbits.BF);
  5475                           
  5476  0CAE  1C14               	btfss	20,0	;volatile
  5477  0CAF  2CAE               	goto	l298
  5478                           
  5479                           ;launcher_functions.c: 151: dataByte = SSPBUF;
  5480  0CB0  0811               	movf	17,w	;volatile
  5481  0CB1  0020               	movlb	0	; select bank0
  5482  0CB2  00A0               	movwf	??_ReadSPI
  5483  0CB3  0820               	movf	??_ReadSPI,w
  5484  0CB4  00A1               	movwf	ReadSPI@dataByte
  5485                           
  5486                           ;launcher_functions.c: 152: PIR1bits.SSP1IF=0;
  5487  0CB5  1191               	bcf	17,3	;volatile
  5488                           
  5489                           ;launcher_functions.c: 153: return (dataByte);
  5490  0CB6  0821               	movf	ReadSPI@dataByte,w
  5491  0CB7  0008               	return
  5492  0CB8                     __end_of_ReadSPI:	
  5493                           
  5494                           	psect	text20
  5495  0E11                     __ptext20:	
  5496 ;; *************** function _ToggleSleepGPS *****************
  5497 ;; Defined at:
  5498 ;;		line 316 in file "launcher_functions.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;		None               void
  5505 ;; Registers used:
  5506 ;;		wreg
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5512 ;;      Params:         0       0       0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0
  5514 ;;      Temps:          0       3       0       0       0       0       0
  5515 ;;      Totals:         0       3       0       0       0       0       0
  5516 ;;Total ram usage:        3 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    2
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;;		_UpdateGPS
  5524 ;;		_RecordMode
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _ToggleSleepGPS
  5530  0E11                     _ToggleSleepGPS:	
  5531                           
  5532                           ;launcher_functions.c: 318: PORTAbits.RA6 = 0;
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in _ToggleSleepGPS: [wreg]
  5536  0E11  0020               	movlb	0	; select bank0
  5537  0E12  130C               	bcf	12,6	;volatile
  5538                           
  5539                           ;launcher_functions.c: 319: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5540  0E13  3015               	movlw	21
  5541  0E14  00A2               	movwf	??_ToggleSleepGPS+2
  5542  0E15  304B               	movlw	75
  5543  0E16  00A1               	movwf	??_ToggleSleepGPS+1
  5544  0E17  30D1               	movlw	209
  5545  0E18  00A0               	movwf	??_ToggleSleepGPS
  5546  0E19                     u2787:	
  5547  0E19  0BA0               	decfsz	??_ToggleSleepGPS,f
  5548  0E1A  2E19               	goto	u2787
  5549  0E1B  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  5550  0E1C  2E19               	goto	u2787
  5551  0E1D  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  5552  0E1E  2E19               	goto	u2787
  5553  0E1F  0000               	nop
  5554                           
  5555                           ;launcher_functions.c: 320: PORTAbits.RA6 = 1;
  5556  0E20  0020               	movlb	0	; select bank0
  5557  0E21  170C               	bsf	12,6	;volatile
  5558                           
  5559                           ;launcher_functions.c: 321: _delay((unsigned long)((100)*(16000000/4000.0)));
  5560  0E22  3003               	movlw	3
  5561  0E23  00A2               	movwf	??_ToggleSleepGPS+2
  5562  0E24  3008               	movlw	8
  5563  0E25  00A1               	movwf	??_ToggleSleepGPS+1
  5564  0E26  3078               	movlw	120
  5565  0E27  00A0               	movwf	??_ToggleSleepGPS
  5566  0E28                     u2797:	
  5567  0E28  0BA0               	decfsz	??_ToggleSleepGPS,f
  5568  0E29  2E28               	goto	u2797
  5569  0E2A  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  5570  0E2B  2E28               	goto	u2797
  5571  0E2C  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  5572  0E2D  2E28               	goto	u2797
  5573                           
  5574                           ;launcher_functions.c: 322: PORTAbits.RA6 = 0;
  5575  0E2E  0020               	movlb	0	; select bank0
  5576  0E2F  130C               	bcf	12,6	;volatile
  5577                           
  5578                           ;launcher_functions.c: 323: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5579  0E30  3015               	movlw	21
  5580  0E31  00A2               	movwf	??_ToggleSleepGPS+2
  5581  0E32  304B               	movlw	75
  5582  0E33  00A1               	movwf	??_ToggleSleepGPS+1
  5583  0E34  30D1               	movlw	209
  5584  0E35  00A0               	movwf	??_ToggleSleepGPS
  5585  0E36                     u2807:	
  5586  0E36  0BA0               	decfsz	??_ToggleSleepGPS,f
  5587  0E37  2E36               	goto	u2807
  5588  0E38  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  5589  0E39  2E36               	goto	u2807
  5590  0E3A  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  5591  0E3B  2E36               	goto	u2807
  5592  0E3C  0000               	nop
  5593  0E3D  0008               	return
  5594  0E3E                     __end_of_ToggleSleepGPS:	
  5595                           
  5596                           	psect	text21
  5597  0D58                     __ptext21:	
  5598 ;; *************** function _ReadBuffer *****************
  5599 ;; Defined at:
  5600 ;;		line 215 in file "launcher_functions.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  read_data       1    1[BANK0 ] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      unsigned char 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5614 ;;      Params:         0       0       0       0       0       0       0
  5615 ;;      Locals:         0       1       0       0       0       0       0
  5616 ;;      Temps:          0       1       0       0       0       0       0
  5617 ;;      Totals:         0       2       0       0       0       0       0
  5618 ;;Total ram usage:        2 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    2
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_RecordMode
  5625 ;;		_PreRecordMode
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function _ReadBuffer
  5631  0D58                     _ReadBuffer:	
  5632                           
  5633                           ;launcher_functions.c: 217: unsigned char read_data;
  5634                           ;launcher_functions.c: 219: read_data = buffer[start];
  5635                           
  5636                           ;incstack = 0
  5637                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5638  0D58  087B               	movf	_start,w
  5639  0D59  3E20               	addlw	_buffer& (0+255)
  5640  0D5A  0086               	movwf	6
  5641  0D5B  3002               	movlw	2	; select bank4/5
  5642  0D5C  0087               	movwf	7
  5643  0D5D  0801               	movf	1,w
  5644  0D5E  0020               	movlb	0	; select bank0
  5645  0D5F  00A0               	movwf	??_ReadBuffer
  5646  0D60  0820               	movf	??_ReadBuffer,w
  5647  0D61  00A1               	movwf	ReadBuffer@read_data
  5648                           
  5649                           ;launcher_functions.c: 220: if (start == 51)
  5650  0D62  3033               	movlw	51
  5651  0D63  067B               	xorwf	_start,w
  5652  0D64  047C               	iorwf	_start+1,w
  5653  0D65  1D03               	skipz
  5654  0D66  2D6A               	goto	l2332
  5655                           
  5656                           ;launcher_functions.c: 221: start = 0;
  5657  0D67  01FB               	clrf	_start
  5658  0D68  01FC               	clrf	_start+1
  5659  0D69  2D6E               	goto	l320
  5660  0D6A                     l2332:	
  5661                           
  5662                           ;launcher_functions.c: 222: else
  5663                           ;launcher_functions.c: 223: start++;
  5664  0D6A  3001               	movlw	1
  5665  0D6B  07FB               	addwf	_start,f
  5666  0D6C  3000               	movlw	0
  5667  0D6D  3DFC               	addwfc	_start+1,f
  5668  0D6E                     l320:	
  5669                           
  5670                           ;launcher_functions.c: 224: return read_data;
  5671  0D6E  0821               	movf	ReadBuffer@read_data,w
  5672  0D6F  0008               	return
  5673  0D70                     __end_of_ReadBuffer:	
  5674                           
  5675                           	psect	text22
  5676  0D0A                     __ptext22:	
  5677 ;; *************** function _InitSPI *****************
  5678 ;; Defined at:
  5679 ;;		line 108 in file "launcher_functions.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;		None               void
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5693 ;;      Params:         0       0       0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0
  5696 ;;      Totals:         0       0       0       0       0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    2
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_main
  5704 ;;		_RecordMode
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _InitSPI
  5710  0D0A                     _InitSPI:	
  5711                           
  5712                           ;launcher_functions.c: 111: TRISCbits.TRISC2 = 0;
  5713                           
  5714                           ;incstack = 0
  5715                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5716  0D0A  0021               	movlb	1	; select bank1
  5717  0D0B  110E               	bcf	14,2	;volatile
  5718                           
  5719                           ;launcher_functions.c: 112: TRISCbits.TRISC3 = 0;
  5720  0D0C  118E               	bcf	14,3	;volatile
  5721                           
  5722                           ;launcher_functions.c: 113: TRISCbits.TRISC4 = 1;
  5723  0D0D  160E               	bsf	14,4	;volatile
  5724                           
  5725                           ;launcher_functions.c: 114: TRISCbits.TRISC5 = 0;
  5726  0D0E  128E               	bcf	14,5	;volatile
  5727                           
  5728                           ;launcher_functions.c: 116: LATC2 = (1);
  5729  0D0F  0022               	movlb	2	; select bank2
  5730  0D10  150E               	bsf	14,2	;volatile
  5731                           
  5732                           ;launcher_functions.c: 119: SSPCON1bits.SSPEN=0x00;
  5733  0D11  0024               	movlb	4	; select bank4
  5734  0D12  1295               	bcf	21,5	;volatile
  5735                           
  5736                           ;launcher_functions.c: 120: SSPCON1bits.SSPM=0x01;
  5737  0D13  0815               	movf	21,w	;volatile
  5738  0D14  39F0               	andlw	-16
  5739  0D15  3801               	iorlw	1
  5740  0D16  0095               	movwf	21	;volatile
  5741                           
  5742                           ;launcher_functions.c: 121: SSPCON1bits.CKP=0;
  5743  0D17  1215               	bcf	21,4	;volatile
  5744                           
  5745                           ;launcher_functions.c: 122: SSPSTATbits.CKE=1;
  5746  0D18  1714               	bsf	20,6	;volatile
  5747                           
  5748                           ;launcher_functions.c: 123: SSPSTATbits.SMP=0;
  5749  0D19  1394               	bcf	20,7	;volatile
  5750                           
  5751                           ;launcher_functions.c: 124: SSPCON1bits.SSPEN=0x01;
  5752  0D1A  1695               	bsf	21,5	;volatile
  5753  0D1B  0008               	return
  5754  0D1C                     __end_of_InitSPI:	
  5755                           
  5756                           	psect	text23
  5757  0C8A                     __ptext23:	
  5758 ;; *************** function _InitWatchdog *****************
  5759 ;; Defined at:
  5760 ;;		line 127 in file "launcher_functions.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;		None               void
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5774 ;;      Params:         0       0       0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0
  5777 ;;      Totals:         0       0       0       0       0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    2
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _InitWatchdog
  5790  0C8A                     _InitWatchdog:	
  5791                           
  5792                           ;launcher_functions.c: 130: WDTCONbits.WDTPS = 0x0A;
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5796  0C8A  0021               	movlb	1	; select bank1
  5797  0C8B  0817               	movf	23,w	;volatile
  5798  0C8C  39C1               	andlw	-63
  5799  0C8D  3814               	iorlw	20
  5800  0C8E  0097               	movwf	23	;volatile
  5801                           
  5802                           ;launcher_functions.c: 131: WDTCONbits.SWDTEN = 0;
  5803  0C8F  1017               	bcf	23,0	;volatile
  5804  0C90  0008               	return
  5805  0C91                     __end_of_InitWatchdog:	
  5806                           
  5807                           	psect	text24
  5808  0CB8                     __ptext24:	
  5809 ;; *************** function _InitTimer1 *****************
  5810 ;; Defined at:
  5811 ;;		line 96 in file "launcher_functions.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;		None               void
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5825 ;;      Params:         0       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0
  5828 ;;      Totals:         0       0       0       0       0       0       0
  5829 ;;Total ram usage:        0 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    2
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_main
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _InitTimer1
  5841  0CB8                     _InitTimer1:	
  5842                           
  5843                           ;launcher_functions.c: 98: T1CONbits.TMR1CS = 0;
  5844                           
  5845                           ;incstack = 0
  5846                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  5847  0CB8  303F               	movlw	-193
  5848  0CB9  0020               	movlb	0	; select bank0
  5849  0CBA  0598               	andwf	24,f	;volatile
  5850                           
  5851                           ;launcher_functions.c: 99: T1CONbits.T1CKPS = 2;
  5852  0CBB  0818               	movf	24,w	;volatile
  5853  0CBC  39CF               	andlw	-49
  5854  0CBD  3820               	iorlw	32
  5855  0CBE  0098               	movwf	24	;volatile
  5856                           
  5857                           ;launcher_functions.c: 100: T1CONbits.nT1SYNC = 1;
  5858  0CBF  1518               	bsf	24,2	;volatile
  5859                           
  5860                           ;launcher_functions.c: 101: T1GCONbits.TMR1GE = 0;
  5861  0CC0  1399               	bcf	25,7	;volatile
  5862                           
  5863                           ;launcher_functions.c: 102: TMR1H = 0xFF;
  5864  0CC1  30FF               	movlw	255
  5865  0CC2  0097               	movwf	23	;volatile
  5866                           
  5867                           ;launcher_functions.c: 103: TMR1L = 0xCD;
  5868  0CC3  30CD               	movlw	205
  5869  0CC4  0096               	movwf	22	;volatile
  5870                           
  5871                           ;launcher_functions.c: 104: T1CONbits.TMR1ON = 1;
  5872  0CC5  1418               	bsf	24,0	;volatile
  5873  0CC6  0008               	return
  5874  0CC7                     __end_of_InitTimer1:	
  5875                           
  5876                           	psect	text25
  5877  0DE4                     __ptext25:	
  5878 ;; *************** function _InitGPIO *****************
  5879 ;; Defined at:
  5880 ;;		line 13 in file "launcher_functions.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;		None               void
  5887 ;; Registers used:
  5888 ;;		status,2
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5894 ;;      Params:         0       0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    2
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_main
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           
  5909                           ;psect for function _InitGPIO
  5910  0DE4                     _InitGPIO:	
  5911                           
  5912                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in _InitGPIO: [status,2]
  5916  0DE4  0021               	movlb	1	; select bank1
  5917  0DE5  148C               	bsf	12,1	;volatile
  5918                           
  5919                           ;launcher_functions.c: 19: ANSELAbits.ANSA1 = 0;
  5920  0DE6  0023               	movlb	3	; select bank3
  5921  0DE7  108C               	bcf	12,1	;volatile
  5922                           
  5923                           ;launcher_functions.c: 20: IOCAPbits.IOCAP1 = 1;
  5924  0DE8  0027               	movlb	7	; select bank7
  5925  0DE9  1491               	bsf	17,1	;volatile
  5926                           
  5927                           ;launcher_functions.c: 21: IOCANbits.IOCAN1 = 1;
  5928  0DEA  1492               	bsf	18,1	;volatile
  5929                           
  5930                           ;launcher_functions.c: 22: IOCAF = 0x00;
  5931  0DEB  0193               	clrf	19	;volatile
  5932                           
  5933                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  5934  0DEC  158B               	bsf	11,3	;volatile
  5935                           
  5936                           ;launcher_functions.c: 26: TRISBbits.TRISB3 = 1;
  5937  0DED  0021               	movlb	1	; select bank1
  5938  0DEE  158D               	bsf	13,3	;volatile
  5939                           
  5940                           ;launcher_functions.c: 27: ANSELBbits.ANSB3 = 0;
  5941  0DEF  0023               	movlb	3	; select bank3
  5942  0DF0  118D               	bcf	13,3	;volatile
  5943                           
  5944                           ;launcher_functions.c: 28: IOCBNbits.IOCBN3 = 1;
  5945  0DF1  0027               	movlb	7	; select bank7
  5946  0DF2  1595               	bsf	21,3	;volatile
  5947                           
  5948                           ;launcher_functions.c: 29: IOCBPbits.IOCBP3 = 1;
  5949  0DF3  1594               	bsf	20,3	;volatile
  5950                           
  5951                           ;launcher_functions.c: 30: IOCBF = 0x00;
  5952  0DF4  0196               	clrf	22	;volatile
  5953                           
  5954                           ;launcher_functions.c: 31: INTCONbits.IOCIE = 1;
  5955  0DF5  158B               	bsf	11,3	;volatile
  5956                           
  5957                           ;launcher_functions.c: 34: TRISAbits.TRISA0 = 1;
  5958  0DF6  0021               	movlb	1	; select bank1
  5959  0DF7  140C               	bsf	12,0	;volatile
  5960                           
  5961                           ;launcher_functions.c: 36: TRISAbits.TRISA2 = 1;
  5962  0DF8  150C               	bsf	12,2	;volatile
  5963                           
  5964                           ;launcher_functions.c: 37: TRISAbits.TRISA3 = 1;
  5965  0DF9  158C               	bsf	12,3	;volatile
  5966                           
  5967                           ;launcher_functions.c: 38: TRISAbits.TRISA4 = 0;
  5968  0DFA  120C               	bcf	12,4	;volatile
  5969                           
  5970                           ;launcher_functions.c: 39: TRISAbits.TRISA5 = 0;
  5971  0DFB  128C               	bcf	12,5	;volatile
  5972                           
  5973                           ;launcher_functions.c: 40: TRISAbits.TRISA6 = 0;
  5974  0DFC  130C               	bcf	12,6	;volatile
  5975                           
  5976                           ;launcher_functions.c: 41: TRISAbits.TRISA7 = 0;
  5977  0DFD  138C               	bcf	12,7	;volatile
  5978                           
  5979                           ;launcher_functions.c: 44: TRISBbits.TRISB0 = 0;
  5980  0DFE  100D               	bcf	13,0	;volatile
  5981                           
  5982                           ;launcher_functions.c: 45: TRISBbits.TRISB1 = 1;
  5983  0DFF  148D               	bsf	13,1	;volatile
  5984                           
  5985                           ;launcher_functions.c: 46: TRISBbits.TRISB2 = 0;
  5986  0E00  110D               	bcf	13,2	;volatile
  5987                           
  5988                           ;launcher_functions.c: 48: TRISBbits.TRISB4 = 0;
  5989  0E01  120D               	bcf	13,4	;volatile
  5990                           
  5991                           ;launcher_functions.c: 49: TRISBbits.TRISB5 = 0;
  5992  0E02  128D               	bcf	13,5	;volatile
  5993                           
  5994                           ;launcher_functions.c: 51: PORTBbits.RB0 = 0;
  5995  0E03  0020               	movlb	0	; select bank0
  5996  0E04  100D               	bcf	13,0	;volatile
  5997                           
  5998                           ;launcher_functions.c: 52: PORTBbits.RB4 = 0;
  5999  0E05  120D               	bcf	13,4	;volatile
  6000                           
  6001                           ;launcher_functions.c: 53: PORTBbits.RB5 = 0;
  6002  0E06  128D               	bcf	13,5	;volatile
  6003                           
  6004                           ;launcher_functions.c: 55: ANSELBbits.ANSB0 = 0;
  6005  0E07  0023               	movlb	3	; select bank3
  6006  0E08  100D               	bcf	13,0	;volatile
  6007                           
  6008                           ;launcher_functions.c: 56: ANSELBbits.ANSB1 = 0;
  6009  0E09  108D               	bcf	13,1	;volatile
  6010                           
  6011                           ;launcher_functions.c: 57: ANSELBbits.ANSB2 = 0;
  6012  0E0A  110D               	bcf	13,2	;volatile
  6013                           
  6014                           ;launcher_functions.c: 59: ANSELBbits.ANSB4 = 0;
  6015  0E0B  120D               	bcf	13,4	;volatile
  6016                           
  6017                           ;launcher_functions.c: 60: ANSELBbits.ANSB5 = 0;
  6018  0E0C  128D               	bcf	13,5	;volatile
  6019                           
  6020                           ;launcher_functions.c: 63: TRISCbits.TRISC0 = 0;
  6021  0E0D  0021               	movlb	1	; select bank1
  6022  0E0E  100E               	bcf	14,0	;volatile
  6023                           
  6024                           ;launcher_functions.c: 64: TRISCbits.TRISC1 = 0;
  6025  0E0F  108E               	bcf	14,1	;volatile
  6026  0E10  0008               	return
  6027  0E11                     __end_of_InitGPIO:	
  6028                           
  6029                           	psect	text26
  6030  0C91                     __ptext26:	
  6031 ;; *************** function _InitCLK *****************
  6032 ;; Defined at:
  6033 ;;		line 8 in file "launcher_functions.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;		None               void
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6047 ;;      Params:         0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    2
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function _InitCLK
  6063  0C91                     _InitCLK:	
  6064                           
  6065                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  6066                           
  6067                           ;incstack = 0
  6068                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  6069  0C91  3078               	movlw	120
  6070  0C92  0021               	movlb	1	; select bank1
  6071  0C93  0499               	iorwf	25,f	;volatile
  6072                           
  6073                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  6074  0C94  0819               	movf	25,w	;volatile
  6075  0C95  39FC               	andlw	-4
  6076  0C96  3802               	iorlw	2
  6077  0C97  0099               	movwf	25	;volatile
  6078  0C98  0008               	return
  6079  0C99                     __end_of_InitCLK:	
  6080                           
  6081                           	psect	text27
  6082  0D70                     __ptext27:	
  6083 ;; *************** function _InitADC *****************
  6084 ;; Defined at:
  6085 ;;		line 73 in file "launcher_functions.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;		None               void
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6099 ;;      Params:         0       0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    2
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           
  6114                           ;psect for function _InitADC
  6115  0D70                     _InitADC:	
  6116                           
  6117                           ;launcher_functions.c: 76: TRISAbits.TRISA0 = 1;
  6118                           
  6119                           ;incstack = 0
  6120                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  6121  0D70  0021               	movlb	1	; select bank1
  6122  0D71  140C               	bsf	12,0	;volatile
  6123                           
  6124                           ;launcher_functions.c: 77: ANSELAbits.ANSA0 = 1;
  6125  0D72  0023               	movlb	3	; select bank3
  6126  0D73  140C               	bsf	12,0	;volatile
  6127                           
  6128                           ;launcher_functions.c: 80: ADCON1bits.ADCS = 0x05;
  6129  0D74  0021               	movlb	1	; select bank1
  6130  0D75  081E               	movf	30,w	;volatile
  6131  0D76  398F               	andlw	-113
  6132  0D77  3850               	iorlw	80
  6133  0D78  009E               	movwf	30	;volatile
  6134                           
  6135                           ;launcher_functions.c: 81: ADCON1bits.ADPREF = 0x00;
  6136  0D79  30FC               	movlw	-4
  6137  0D7A  059E               	andwf	30,f	;volatile
  6138                           
  6139                           ;launcher_functions.c: 82: ADCON1bits.ADNREF = 0x00;
  6140  0D7B  111E               	bcf	30,2	;volatile
  6141                           
  6142                           ;launcher_functions.c: 83: ADCON0bits.CHS = 0x00;
  6143  0D7C  3083               	movlw	-125
  6144  0D7D  059D               	andwf	29,f	;volatile
  6145                           
  6146                           ;launcher_functions.c: 84: ADCON2bits.CHSN = 0xF;
  6147  0D7E  300F               	movlw	15
  6148  0D7F  049F               	iorwf	31,f	;volatile
  6149                           
  6150                           ;launcher_functions.c: 85: ADCON1bits.ADFM = 0;
  6151  0D80  139E               	bcf	30,7	;volatile
  6152                           
  6153                           ;launcher_functions.c: 86: ADCON0bits.ADRMD = 1;
  6154  0D81  179D               	bsf	29,7	;volatile
  6155                           
  6156                           ;launcher_functions.c: 87: ADCON0bits.ADON = 1;
  6157  0D82  141D               	bsf	29,0	;volatile
  6158                           
  6159                           ;launcher_functions.c: 90: ADIF = 0;
  6160  0D83  0020               	movlb	0	; select bank0
  6161  0D84  1311               	bcf	17,6	;volatile
  6162                           
  6163                           ;launcher_functions.c: 91: ADIE = 1;
  6164  0D85  0021               	movlb	1	; select bank1
  6165  0D86  1711               	bsf	17,6	;volatile
  6166                           
  6167                           ;launcher_functions.c: 92: PEIE = 1;
  6168  0D87  170B               	bsf	11,6	;volatile
  6169  0D88  0008               	return
  6170  0D89                     __end_of_InitADC:	
  6171                           
  6172                           	psect	text28
  6173  0D89                     __ptext28:	
  6174 ;; *************** function _Hibernate *****************
  6175 ;; Defined at:
  6176 ;;		line 522 in file "launcher_functions.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;  count           1    1[BANK0 ] unsigned char 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;		None               void
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6190 ;;      Params:         0       0       0       0       0       0       0
  6191 ;;      Locals:         0       1       0       0       0       0       0
  6192 ;;      Temps:          0       1       0       0       0       0       0
  6193 ;;      Totals:         0       2       0       0       0       0       0
  6194 ;;Total ram usage:        2 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    2
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_main
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function _Hibernate
  6206  0D89                     _Hibernate:	
  6207                           
  6208                           ;launcher_functions.c: 524: unsigned char count = 0;
  6209                           
  6210                           ;incstack = 0
  6211                           ; Regs used in _Hibernate: [wreg+status,2+status,0]
  6212  0D89  0020               	movlb	0	; select bank0
  6213  0D8A  01A1               	clrf	Hibernate@count
  6214                           
  6215                           ;launcher_functions.c: 525: WDTCONbits.WDTPS = 14;
  6216  0D8B  0021               	movlb	1	; select bank1
  6217  0D8C  0817               	movf	23,w	;volatile
  6218  0D8D  39C1               	andlw	-63
  6219  0D8E  381C               	iorlw	28
  6220  0D8F  0097               	movwf	23	;volatile
  6221                           
  6222                           ;launcher_functions.c: 526: WDTCONbits.SWDTEN = 1;
  6223  0D90  1417               	bsf	23,0	;volatile
  6224                           
  6225                           ;launcher_functions.c: 527: while(!recordFlag && count++ < 3)
  6226  0D91  2D9C               	goto	l2716
  6227  0D92                     l2718:	
  6228  0D92  3001               	movlw	1
  6229  0D93  0020               	movlb	0	; select bank0
  6230  0D94  00A0               	movwf	??_Hibernate
  6231  0D95  0820               	movf	??_Hibernate,w
  6232  0D96  07A1               	addwf	Hibernate@count,f
  6233  0D97  3004               	movlw	4
  6234  0D98  0221               	subwf	Hibernate@count,w
  6235  0D99  1803               	btfsc	3,0
  6236  0D9A  2DA0               	goto	l424
  6237  0D9B  0063               	sleep	;# 
  6238  0D9C                     l2716:	
  6239  0D9C  0021               	movlb	1	; select bank1
  6240  0D9D  08EC               	movf	_recordFlag^(0+128),f
  6241  0D9E  1903               	btfsc	3,2
  6242  0D9F  2D92               	goto	l2718
  6243  0DA0                     l424:	
  6244                           
  6245                           ;launcher_functions.c: 530: }
  6246                           ;launcher_functions.c: 531: WDTCONbits.SWDTEN = 0;
  6247  0DA0  0021               	movlb	1	; select bank1
  6248  0DA1  1017               	bcf	23,0	;volatile
  6249  0DA2  0008               	return
  6250  0DA3                     __end_of_Hibernate:	
  6251                           
  6252                           	psect	text29
  6253  0CF8                     __ptext29:	
  6254 ;; *************** function _GoToSleep *****************
  6255 ;; Defined at:
  6256 ;;		line 514 in file "launcher_functions.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  count           1    wreg     unsigned char 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  count           1    1[BANK0 ] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;		None               void
  6263 ;; Registers used:
  6264 ;;		wreg, status,2, status,0
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6270 ;;      Params:         0       0       0       0       0       0       0
  6271 ;;      Locals:         0       1       0       0       0       0       0
  6272 ;;      Temps:          0       1       0       0       0       0       0
  6273 ;;      Totals:         0       2       0       0       0       0       0
  6274 ;;Total ram usage:        2 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    2
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_main
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function _GoToSleep
  6286  0CF8                     _GoToSleep:	
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  6290                           ;GoToSleep@count stored from wreg
  6291  0CF8  0020               	movlb	0	; select bank0
  6292  0CF9  00A1               	movwf	GoToSleep@count
  6293                           
  6294                           ;launcher_functions.c: 516: WDTCONbits.WDTPS = count;
  6295  0CFA  0821               	movf	GoToSleep@count,w
  6296  0CFB  00A0               	movwf	??_GoToSleep
  6297  0CFC  0DA0               	rlf	??_GoToSleep,f
  6298  0CFD  0021               	movlb	1	; select bank1
  6299  0CFE  0817               	movf	23,w	;volatile
  6300  0CFF  0020               	movlb	0	; select bank0
  6301  0D00  0620               	xorwf	??_GoToSleep,w
  6302  0D01  39C1               	andlw	-63
  6303  0D02  0620               	xorwf	??_GoToSleep,w
  6304  0D03  0021               	movlb	1	; select bank1
  6305  0D04  0097               	movwf	23	;volatile
  6306                           
  6307                           ;launcher_functions.c: 517: WDTCONbits.SWDTEN = 1;
  6308  0D05  1417               	bsf	23,0	;volatile
  6309  0D06  0063               	sleep	;# 
  6310                           
  6311                           ;launcher_functions.c: 519: WDTCONbits.SWDTEN = 0;
  6312  0D07  0021               	movlb	1	; select bank1
  6313  0D08  1017               	bcf	23,0	;volatile
  6314  0D09  0008               	return
  6315  0D0A                     __end_of_GoToSleep:	
  6316                           
  6317                           	psect	intentry
  6318  0004                     __pintentry:	
  6319 ;; *************** function _isr *****************
  6320 ;; Defined at:
  6321 ;;		line 106 in file "launcher_main.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;		None               void
  6328 ;; Registers used:
  6329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6335 ;;      Params:         0       0       0       0       0       0       0
  6336 ;;      Locals:         2       0       0       0       0       0       0
  6337 ;;      Temps:          5       0       0       0       0       0       0
  6338 ;;      Totals:         7       0       0       0       0       0       0
  6339 ;;Total ram usage:        7 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    1
  6342 ;; This function calls:
  6343 ;;		_WriteBuffer
  6344 ;; This function is called by:
  6345 ;;		Interrupt level 1
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349  0004                     _isr:	
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6353  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6354  0005  3180               	pagesel	$
  6355  0006  0020               	movlb	0	; select bank0
  6356  0007  087F               	movf	127,w
  6357  0008  00F6               	movwf	??_isr+4
  6358                           
  6359                           ;launcher_main.c: 109: if (PIR1bits.RCIF)
  6360  0009  1E91               	btfss	17,5	;volatile
  6361  000A  282F               	goto	i1l2822
  6362                           
  6363                           ;launcher_main.c: 110: {
  6364                           ;launcher_main.c: 112: if(OERR)
  6365  000B  0023               	movlb	3	; select bank3
  6366  000C  1C9D               	btfss	29,1	;volatile
  6367  000D  2810               	goto	i1l2810
  6368                           
  6369                           ;launcher_main.c: 113: {
  6370                           ;launcher_main.c: 114: RCSTAbits.CREN = 0;
  6371  000E  121D               	bcf	29,4	;volatile
  6372                           
  6373                           ;launcher_main.c: 115: RCSTAbits.CREN = 1;
  6374  000F  161D               	bsf	29,4	;volatile
  6375  0010                     i1l2810:	
  6376                           
  6377                           ;launcher_main.c: 116: }
  6378                           ;launcher_main.c: 117: gpsMessage[gpsIndex++] = RCREG;
  6379  0010  0819               	movf	25,w	;volatile
  6380  0011  00F2               	movwf	??_isr
  6381  0012  087D               	movf	_gpsIndex,w
  6382  0013  3E2A               	addlw	_gpsMessage& (0+255)
  6383  0014  0086               	movwf	6
  6384  0015  3001               	movlw	1	; select bank2/3
  6385  0016  0087               	movwf	7
  6386  0017  0872               	movf	??_isr,w
  6387  0018  0081               	movwf	1
  6388  0019  3001               	movlw	1
  6389  001A  00F2               	movwf	??_isr
  6390  001B  0872               	movf	??_isr,w
  6391  001C  07FD               	addwf	_gpsIndex,f	;volatile
  6392                           
  6393                           ;launcher_main.c: 118: if(gpsMessage[gpsIndex-1] == 0x0A)
  6394  001D  087D               	movf	_gpsIndex,w
  6395  001E  3EFF               	addlw	255
  6396  001F  3E2A               	addlw	_gpsMessage& (0+255)
  6397  0020  0086               	movwf	6
  6398  0021  3001               	movlw	1	; select bank2/3
  6399  0022  0087               	movwf	7
  6400  0023  0801               	movf	1,w
  6401  0024  3A0A               	xorlw	10
  6402  0025  1D03               	skipz
  6403  0026  282B               	goto	i1l2818
  6404                           
  6405                           ;launcher_main.c: 119: {
  6406                           ;launcher_main.c: 120: messageDoneFlag = 1;
  6407  0027  0021               	movlb	1	; select bank1
  6408  0028  01EB               	clrf	_messageDoneFlag^(0+128)
  6409  0029  0AEB               	incf	_messageDoneFlag^(0+128),f
  6410                           
  6411                           ;launcher_main.c: 121: }
  6412  002A  282D               	goto	i1l2820
  6413  002B                     i1l2818:	
  6414                           
  6415                           ;launcher_main.c: 122: else
  6416                           ;launcher_main.c: 123: {
  6417                           ;launcher_main.c: 124: messageDoneFlag = 0;
  6418  002B  0021               	movlb	1	; select bank1
  6419  002C  01EB               	clrf	_messageDoneFlag^(0+128)
  6420  002D                     i1l2820:	
  6421                           
  6422                           ;launcher_main.c: 125: }
  6423                           ;launcher_main.c: 126: PIR1bits.RCIF = 0;
  6424  002D  0020               	movlb	0	; select bank0
  6425  002E  1291               	bcf	17,5	;volatile
  6426  002F                     i1l2822:	
  6427                           
  6428                           ;launcher_main.c: 127: }
  6429                           ;launcher_main.c: 130: if (TMR1IF && TMR1IE)
  6430  002F  1C11               	btfss	17,0	;volatile
  6431  0030  283E               	goto	i1l2832
  6432  0031  0021               	movlb	1	; select bank1
  6433  0032  1C11               	btfss	17,0	;volatile
  6434  0033  283E               	goto	i1l2832
  6435                           
  6436                           ;launcher_main.c: 131: {
  6437                           ;launcher_main.c: 132: TMR1H = 0xFF;
  6438  0034  30FF               	movlw	255
  6439  0035  0020               	movlb	0	; select bank0
  6440  0036  0097               	movwf	23	;volatile
  6441                           
  6442                           ;launcher_main.c: 133: TMR1L = 0xCD;
  6443  0037  30CD               	movlw	205
  6444  0038  0096               	movwf	22	;volatile
  6445                           
  6446                           ;launcher_main.c: 134: TMR1IF = 0;
  6447  0039  1011               	bcf	17,0	;volatile
  6448                           
  6449                           ;launcher_main.c: 136: if(recordFlag)
  6450  003A  0021               	movlb	1	; select bank1
  6451  003B  086C               	movf	_recordFlag^(0+128),w
  6452  003C  1D03               	skipz
  6453                           
  6454                           ;launcher_main.c: 137: {
  6455                           ;launcher_main.c: 138: ADCON0bits.ADGO = 1;
  6456  003D  149D               	bsf	29,1	;volatile
  6457  003E                     i1l2832:	
  6458                           
  6459                           ;launcher_main.c: 139: }
  6460                           ;launcher_main.c: 140: }
  6461                           ;launcher_main.c: 143: if(PIR1bits.ADIF & PIE1bits.ADIE)
  6462  003E  0021               	movlb	1	; select bank1
  6463  003F  0E11               	swapf	17,w	;volatile
  6464  0040  0C89               	rrf	9,f
  6465  0041  0C89               	rrf	9,f
  6466  0042  3901               	andlw	1
  6467  0043  00F2               	movwf	??_isr
  6468  0044  0020               	movlb	0	; select bank0
  6469  0045  0E11               	swapf	17,w	;volatile
  6470  0046  0C89               	rrf	9,f
  6471  0047  0C89               	rrf	9,f
  6472  0048  3901               	andlw	1
  6473  0049  0572               	andwf	??_isr,w
  6474  004A  1903               	btfsc	3,2
  6475  004B  2880               	goto	i1l2848
  6476                           
  6477                           ;launcher_main.c: 144: {
  6478                           ;launcher_main.c: 145: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  6479  004C  3033               	movlw	51
  6480  004D  0679               	xorwf	_end,w
  6481  004E  047A               	iorwf	_end+1,w
  6482  004F  1903               	skipnz
  6483  0050  2866               	goto	i1l2838
  6484  0051  0879               	movf	_end,w
  6485  0052  3E01               	addlw	1
  6486  0053  00F2               	movwf	??_isr
  6487  0054  3000               	movlw	0
  6488  0055  3D7A               	addwfc	_end+1,w
  6489  0056  00F3               	movwf	??_isr+1
  6490  0057  087C               	movf	_start+1,w
  6491  0058  0673               	xorwf	??_isr+1,w
  6492  0059  1D03               	skipz
  6493  005A  285D               	goto	u249_25
  6494  005B  087B               	movf	_start,w
  6495  005C  0672               	xorwf	??_isr,w
  6496  005D                     u249_25:	
  6497  005D  3000               	movlw	0
  6498  005E  1903               	skipnz
  6499  005F  3001               	movlw	1
  6500  0060  00F4               	movwf	??_isr+2
  6501  0061  01F5               	clrf	??_isr+3
  6502  0062  0874               	movf	??_isr+2,w
  6503  0063  00F7               	movwf	_isr$610
  6504  0064  0875               	movf	??_isr+3,w
  6505  0065  2870               	goto	L5
  6506  0066                     i1l2838:	
  6507  0066  087C               	movf	_start+1,w
  6508  0067  047B               	iorwf	_start,w
  6509  0068  3000               	movlw	0
  6510  0069  1903               	skipnz
  6511  006A  3001               	movlw	1
  6512  006B  00F2               	movwf	??_isr
  6513  006C  01F3               	clrf	??_isr+1
  6514  006D  0872               	movf	??_isr,w
  6515  006E  00F7               	movwf	_isr$610
  6516  006F  0873               	movf	??_isr+1,w
  6517  0070                     L5:	
  6518  0070  00F8               	movwf	_isr$610+1
  6519  0071  0878               	movf	_isr$610+1,w
  6520  0072  0477               	iorwf	_isr$610,w
  6521  0073  1D03               	skipz
  6522  0074  287E               	goto	i1l2846
  6523                           
  6524                           ;launcher_main.c: 146: {
  6525                           ;launcher_main.c: 147: if(recordFlag)
  6526  0075  0021               	movlb	1	; select bank1
  6527  0076  086C               	movf	_recordFlag^(0+128),w
  6528  0077  1903               	btfsc	3,2
  6529  0078  287E               	goto	i1l2846
  6530                           
  6531                           ;launcher_main.c: 148: WriteBuffer(ADRESH);
  6532  0079  081C               	movf	28,w	;volatile
  6533  007A  318D  2541  3180   	fcall	_WriteBuffer
  6534  007D  0021               	movlb	1	; select bank1
  6535  007E                     i1l2846:	
  6536                           
  6537                           ;launcher_main.c: 149: }
  6538                           ;launcher_main.c: 150: PIR1bits.ADIF = 0;
  6539  007E  0020               	movlb	0	; select bank0
  6540  007F  1311               	bcf	17,6	;volatile
  6541  0080                     i1l2848:	
  6542                           
  6543                           ;launcher_main.c: 151: }
  6544                           ;launcher_main.c: 154: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  6545  0080  1D8B               	btfss	11,3	;volatile
  6546  0081  28AB               	goto	i1l2862
  6547  0082  0027               	movlb	7	; select bank7
  6548  0083  1D96               	btfss	22,3	;volatile
  6549  0084  28AB               	goto	i1l2862
  6550                           
  6551                           ;launcher_main.c: 155: {
  6552                           ;launcher_main.c: 156: IOCBFbits.IOCBF3 = 0;
  6553  0085  1196               	bcf	22,3	;volatile
  6554                           
  6555                           ;launcher_main.c: 157: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  6556  0086  0020               	movlb	0	; select bank0
  6557  0087  0C0D               	rrf	13,w	;volatile
  6558  0088  00F2               	movwf	??_isr
  6559  0089  0CF2               	rrf	??_isr,f
  6560  008A  0C72               	rrf	??_isr,w
  6561  008B  3901               	andlw	1
  6562  008C  00F3               	movwf	??_isr+1
  6563  008D  0027               	movlb	7	; select bank7
  6564  008E  0C14               	rrf	20,w	;volatile
  6565  008F  00F4               	movwf	??_isr+2
  6566  0090  0CF4               	rrf	??_isr+2,f
  6567  0091  0C74               	rrf	??_isr+2,w
  6568  0092  3901               	andlw	1
  6569  0093  0573               	andwf	??_isr+1,w
  6570  0094  1903               	btfsc	3,2
  6571  0095  2899               	goto	i1l2858
  6572                           
  6573                           ;launcher_main.c: 158: {
  6574                           ;launcher_main.c: 159: recordFlag = 1;
  6575  0096  0021               	movlb	1	; select bank1
  6576  0097  01EC               	clrf	_recordFlag^(0+128)
  6577  0098  0AEC               	incf	_recordFlag^(0+128),f
  6578  0099                     i1l2858:	
  6579                           
  6580                           ;launcher_main.c: 160: }
  6581                           ;launcher_main.c: 161: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  6582  0099  0027               	movlb	7	; select bank7
  6583  009A  0C15               	rrf	21,w	;volatile
  6584  009B  00F2               	movwf	??_isr
  6585  009C  0CF2               	rrf	??_isr,f
  6586  009D  0C72               	rrf	??_isr,w
  6587  009E  3901               	andlw	1
  6588  009F  00F3               	movwf	??_isr+1
  6589  00A0  1003               	clrc
  6590  00A1  0020               	movlb	0	; select bank0
  6591  00A2  1D8D               	btfss	13,3	;volatile
  6592  00A3  1403               	setc
  6593  00A4  3000               	movlw	0
  6594  00A5  3D09               	addwfc	9,w
  6595  00A6  0573               	andwf	??_isr+1,w
  6596  00A7  1903               	btfsc	3,2
  6597  00A8  28AB               	goto	i1l2862
  6598                           
  6599                           ;launcher_main.c: 162: {
  6600                           ;launcher_main.c: 163: recordFlag = 0;
  6601  00A9  0021               	movlb	1	; select bank1
  6602  00AA  01EC               	clrf	_recordFlag^(0+128)
  6603  00AB                     i1l2862:	
  6604                           
  6605                           ;launcher_main.c: 164: }
  6606                           ;launcher_main.c: 165: }
  6607                           ;launcher_main.c: 168: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  6608  00AB  1D8B               	btfss	11,3	;volatile
  6609  00AC  28CD               	goto	i1l149
  6610  00AD  0027               	movlb	7	; select bank7
  6611  00AE  1C93               	btfss	19,1	;volatile
  6612  00AF  28CD               	goto	i1l149
  6613                           
  6614                           ;launcher_main.c: 169: {
  6615                           ;launcher_main.c: 170: IOCAFbits.IOCAF1 = 0;
  6616  00B0  1093               	bcf	19,1	;volatile
  6617                           
  6618                           ;launcher_main.c: 171: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  6619  00B1  0020               	movlb	0	; select bank0
  6620  00B2  0C0C               	rrf	12,w	;volatile
  6621  00B3  3901               	andlw	1
  6622  00B4  00F2               	movwf	??_isr
  6623  00B5  0027               	movlb	7	; select bank7
  6624  00B6  0C11               	rrf	17,w	;volatile
  6625  00B7  3901               	andlw	1
  6626  00B8  0572               	andwf	??_isr,w
  6627  00B9  1903               	btfsc	3,2
  6628  00BA  28BE               	goto	i1l2872
  6629                           
  6630                           ;launcher_main.c: 172: {
  6631                           ;launcher_main.c: 173: strobeFlag = 1;
  6632  00BB  0021               	movlb	1	; select bank1
  6633  00BC  01ED               	clrf	_strobeFlag^(0+128)
  6634  00BD  0AED               	incf	_strobeFlag^(0+128),f
  6635  00BE                     i1l2872:	
  6636                           
  6637                           ;launcher_main.c: 174: }
  6638                           ;launcher_main.c: 175: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  6639  00BE  0027               	movlb	7	; select bank7
  6640  00BF  0C12               	rrf	18,w	;volatile
  6641  00C0  3901               	andlw	1
  6642  00C1  00F2               	movwf	??_isr
  6643  00C2  1003               	clrc
  6644  00C3  0020               	movlb	0	; select bank0
  6645  00C4  1C8C               	btfss	12,1	;volatile
  6646  00C5  1403               	setc
  6647  00C6  3000               	movlw	0
  6648  00C7  3D09               	addwfc	9,w
  6649  00C8  0572               	andwf	??_isr,w
  6650  00C9  1903               	btfsc	3,2
  6651  00CA  28CD               	goto	i1l149
  6652                           
  6653                           ;launcher_main.c: 176: {
  6654                           ;launcher_main.c: 177: strobeFlag = 0;
  6655  00CB  0021               	movlb	1	; select bank1
  6656  00CC  01ED               	clrf	_strobeFlag^(0+128)
  6657  00CD                     i1l149:	
  6658  00CD  0876               	movf	??_isr+4,w
  6659  00CE  0020               	movlb	0	; select bank0
  6660  00CF  00FF               	movwf	127
  6661  00D0  107E               	bcf	126,0	;clear compiler interrupt flag
  6662  00D1  0009               	retfie
  6663  00D2                     __end_of_isr:	
  6664                           
  6665                           	psect	text31
  6666  0D41                     __ptext31:	
  6667 ;; *************** function _WriteBuffer *****************
  6668 ;; Defined at:
  6669 ;;		line 205 in file "launcher_functions.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  data            1    wreg     unsigned char 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  data            1    1[COMMON] unsigned char 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;		None               void
  6676 ;; Registers used:
  6677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6683 ;;      Params:         0       0       0       0       0       0       0
  6684 ;;      Locals:         1       0       0       0       0       0       0
  6685 ;;      Temps:          1       0       0       0       0       0       0
  6686 ;;      Totals:         2       0       0       0       0       0       0
  6687 ;;Total ram usage:        2 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_isr
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _WriteBuffer
  6698  0D41                     _WriteBuffer:	
  6699                           
  6700                           ;incstack = 0
  6701                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6702                           ;WriteBuffer@data stored from wreg
  6703  0D41  00F1               	movwf	WriteBuffer@data
  6704                           
  6705                           ;launcher_functions.c: 207: buffer[end] = data;
  6706  0D42  0871               	movf	WriteBuffer@data,w
  6707  0D43  00F0               	movwf	??_WriteBuffer
  6708  0D44  0879               	movf	_end,w
  6709  0D45  3E20               	addlw	_buffer& (0+255)
  6710  0D46  0086               	movwf	6
  6711  0D47  3002               	movlw	2	; select bank4/5
  6712  0D48  0087               	movwf	7
  6713  0D49  0870               	movf	??_WriteBuffer,w
  6714  0D4A  0081               	movwf	1
  6715                           
  6716                           ;launcher_functions.c: 209: if (end == 51)
  6717  0D4B  3033               	movlw	51
  6718  0D4C  0679               	xorwf	_end,w
  6719  0D4D  047A               	iorwf	_end+1,w
  6720  0D4E  1D03               	skipz
  6721  0D4F  2D53               	goto	i1l2726
  6722                           
  6723                           ;launcher_functions.c: 210: end = 0;
  6724  0D50  01F9               	clrf	_end
  6725  0D51  01FA               	clrf	_end+1
  6726  0D52  0008               	return
  6727  0D53                     i1l2726:	
  6728                           
  6729                           ;launcher_functions.c: 211: else
  6730                           ;launcher_functions.c: 212: end++;
  6731  0D53  3001               	movlw	1
  6732  0D54  07F9               	addwf	_end,f
  6733  0D55  3000               	movlw	0
  6734  0D56  3DFA               	addwfc	_end+1,f
  6735  0D57  0008               	return
  6736  0D58                     __end_of_WriteBuffer:	
  6737  007E                     btemp	set	126	;btemp
  6738  007E                     pic14e$flags	set	126
  6739  007E                     wtemp	set	126
  6740  007E                     wtemp0	set	126
  6741  0080                     wtemp1	set	128
  6742  0082                     wtemp2	set	130
  6743  0084                     wtemp3	set	132
  6744  0086                     wtemp4	set	134
  6745  0088                     wtemp5	set	136
  6746  007F                     wtemp6	set	127
  6747  007E                     ttemp	set	126
  6748  007E                     ttemp0	set	126
  6749  0081                     ttemp1	set	129
  6750  0084                     ttemp2	set	132
  6751  0087                     ttemp3	set	135
  6752  007F                     ttemp4	set	127
  6753  007E                     ltemp	set	126
  6754  007E                     ltemp0	set	126
  6755  0082                     ltemp1	set	130
  6756  0086                     ltemp2	set	134
  6757  0080                     ltemp3	set	128


Data Sizes:
    Strings     65
    Constant    10
    Data        61
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80     66      78
    BANK2            80      0      77
    BANK3            80      0      35
    BANK4            80      0      51
    BANK5            80      0      68

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_2(CODE[39]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> SetupGPS@message(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1441$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK1[4]), SetupGPS@startSequence(BANK1[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 50
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK1[50]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_UpdateGPS
    _UpdateGPS->_DecodeGPS
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _DecodeGPS->_SendGPSSPI
    ___awdiv->___wmul
    _SendGPSSPI->_WriteOverheadSPI
    _RecordMode->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetupGPS
    _UpdateGPS->_SetupGPS

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4   12523
                                             76 BANK0      4     0      4
                                             62 BANK1      4     4      0
                          _GoToSleep
                          _Hibernate
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                         _RecordMode
                         _SendGPSSPI
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           27    27      0    7744
                                             49 BANK0     27    27      0
                          _DecodeGPS
                           _SetupGPS
                     _ToggleSleepGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _SetupGPS                                            65    65      0    2799
                                             33 BANK0      3     3      0
                                              0 BANK1     62    62      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1199
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             19    13      6    1357
                                             14 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     287
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           21    21      0    3671
                                             28 BANK0     21    21      0
                         _SendGPSSPI
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     540
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     556
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _SendGPSSPI                                           7     7      0     887
                                             21 BANK0      7     7      0
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          11    11      0    1001
                                             21 BANK0     11    11      0
                            _InitSPI
                         _ReadBuffer
                     _ToggleSleepGPS
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteOverheadSPI                                    14    10      4     705
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hibernate                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (8) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _Hibernate
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _RecordMode
     _InitSPI
     _ReadBuffer
     _ToggleSleepGPS
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SendGPSSPI
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       _SendGPSSPI
         _WriteOverheadSPI
           _ReadStatusSPI
             _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI
       ___awdiv
         ___wmul (ARG)
       ___bmul
       ___wmul
     _SetupGPS
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _uart_write_message
         _compute_checksum
         _uart_xmit
     _ToggleSleepGPS
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     193       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     42      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      23      12       43.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      33      14       63.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      44      16       85.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     193      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 30 22:20:46 2014

                  ___bmul@product 0022                 DecodeGPS@latitude 0049                       _SSPSTATbits 0214  
                    ___awdiv@sign 002C               ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017  
                     __CFG_LVP$ON 0000                               l115 060D                               l320 0D6E  
                             l309 0F7A                               l424 0DA0                               l441 044C  
                             l409 0336                               l339 0CA4                               l292 0D3D  
                             l356 0787                               l438 042E                               l298 0CAE  
                             l585 0DAC                               _GIE 005F                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 003F                               wreg 0009  
              DecodeGPS@longitude 004C                   DisableGPS@F4917 01B6                              l2004 0EDE  
                            l2006 0EA9                              l2200 0584                              l2008 0EE3  
                            l2120 0748                              l2112 073A                              l2210 0DA6  
                            l2034 0E94                              l2026 0E76                              l2050 0E45  
                            l2202 04C9                              l2130 0752                              l2028 0E82  
                            l2052 0E51                              l2060 0E66                              l2204 05C4  
                            l2132 0775                              l2222 0D1F                              l2038 0E9D  
                            l2142 04EB                              l2310 06AD                              l2056 0E5D  
                            l2144 04ED                              l2320 06F1                              l2090 07DA  
                            l2082 07C7                              l2250 0EFC                              l2226 0D25  
                            l2162 051C                              l2332 0D6A                              l2076 07AE  
                            l2260 0F04                              l2244 0EF1                              l2164 0536  
                            l2262 0F10                              l2430 02F4                              l2174 054C  
                            l2158 0500                              l2096 07F3                              l2272 0F2B  
                            l2440 0316                              l2352 0161                              l2192 0580  
                            l2354 0171                              l2186 0571                              l2178 0552  
                            l2276 0F33                              l2268 0F22                              l2348 0150  
                            l2700 0FFC                              l2606 03DC                              l2614 03A8  
                            l2462 0372                              l2438 0310                              l2456 034A  
                            l2448 0339                              l2626 0413                              l2618 03F8  
                            l2634 042F                              l2394 0236                              l2386 021A  
                            l2802 067B                              l2716 0D9C                              l2718 0D92  
                            l2646 0486                              l2752 05EB                              l2690 0FE6  
                            l2674 0FB5                              l2762 05F7                              l1980 0F67  
                            l2688 0FE3                              l2696 0FF6                              l2792 0666  
                            l2776 0615                              l2698 0FBF                              l2786 0642  
                            l2798 0672                              _ADIE 048E                              _ADIF 008E  
                            ?_isr 0070            __size_of_ReadStatusSPI 0011                              STR_1 0831  
                            STR_2 080A                              STR_3 0844                              u2000 0127  
                            u2015 014E                              u2203 044A                              u2115 0348  
                            u2035 016F                              u1405 0F59                              u2213 047A  
                            u2125 0370                              u2135 03CA                              u2240 0FA7  
                            u2225 0491                              u2145 03E2                              u2235 04A6  
                            u2163 03BF                              u1515 0E83                              u1525 0E8D  
                            u2175 0401                              u1615 07AC                              u1535 0E95  
                            u2185 0419                              u1625 07C5                              u1465 0EB3  
                            u2265 0FCA                              u1395 0F45                              u2195 0435  
                            u1635 07D8                              u1645 07F1                              u1565 0E48  
                            u1815 0DAD                              u1495 0E79                              u1655 0728  
                            u1825 0DB2                              u1585 0E57                              u1915 0F11  
                            u1595 0E5E                              u1755 0567                              u1925 0F1B  
                            u1685 0762                              u2807 0E36                              u1935 0F23  
                            u1960 068A                              u2737 0605                              u2747 0FD6  
                            _PEIE 005E                              u2757 06B4                              u1895 0F07  
                            u2767 06F8                              u1975 06AB                              u2777 0456  
                            u1985 06EF                              u2787 0E19                              _RCIE 048D  
                            u2797 0E28                              _OERR 0CE9                              _main 05C9  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              ltemp 007E                              start 00D2  
                            ttemp 007E                              wtemp 007E                 ___bmul@multiplier 0023  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 0D89  
                 __end_of_InitCLK 0C99                   __end_of_InitSPI 0D1C                   __end_of_ReadSPI 0CB8  
              ??_compute_checksum 0022                             ??_isr 0072                     ?_InitWatchdog 0070  
           ReadStatusSPI@dataRead 0026                             ?_main 006C                   __end_of___awdiv 0F3A  
                 ___awdiv@divisor 0026                             _LATC2 0872                             _IOCAF 0393  
                           _IOCBF 0396                   __end_of___lwdiv 0EA4                             i1l149 00CD  
                 __end_of___lwmod 0E6D                   ___awdiv@counter 002B                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
               RecordMode@address 003C                   __end_of_dpowers 080A               DecodeGPS@northSouth 0046  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 05C9            uart_write_message@data 0036  
          uart_write_message@size 0028                        _ReadBuffer 0D58                   __initialization 00D4  
                      _InitTimer1 0CB8                 ?_WriteOverheadSPI 0027                      __end_of_main 067F  
              __size_of_DecodeGPS 0265                  __end_of_InitGPIO 0E11                    ??_InitWatchdog 0020  
                   _ReadStatusSPI 0CD6                ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0034  
                          ??_main 00DE                __size_of_GoToSleep 0012                        _SendGPSSPI 078B  
                 ReadSPI@dataByte 0021                    __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 0715  
   WriteOverheadSPI@address_bytes 0031                __size_of_Hibernate 001A                        _RecordMode 0381  
                          _ADRESH 009C                  ___awdiv@dividend 0028                  __end_of_WriteSPI 0D41  
                          i1l2810 0010                            i1l2820 002D                            i1l2726 0D53  
                          i1l2822 002F                            i1l2832 003E                            i1l2818 002B  
                          i1l2862 00AB                            i1l2846 007E                            i1l2838 0066  
                          i1l2872 00BE                            i1l2848 0080                            i1l2858 0099  
                          u249_25 005D                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _TMR1ON 00C0                            _SPBRGL 019B  
                          _SSPBUF 0211                         ??_InitADC 0020                         ??_InitCLK 0020  
                       ??_InitSPI 0020                         ??_ReadSPI 0020                       SendGPSSPI@x 003A  
                          ___bmul 0D1C                    ?_ReadStatusSPI 0070                            ___wmul 0DA3  
                       ??___awdiv 002A                  __end_of_initUART 0CD6                         ??___lwdiv 0024  
                       ??___lwmod 002C                            _buffer 0220                  ___awdiv@quotient 002D  
     __size_of_uart_write_message 0076                __size_of_UpdateGPS 0066               main@periodicCounter 00E1  
               __end_of_DecodeGPS 0381                         ??_sprintf 0034                    _gpsInvalidFlag 00E8  
         __end_of__initialization 0118                 __end_of_GoToSleep 0D0A               ___bmul@multiplicand 0020  
                     ?_ReadBuffer 0070                 __end_of_Hibernate 0DA3                       ?_InitTimer1 0070  
                  __pcstackCOMMON 0070                      __pidataBANK1 0C99                      __pidataBANK2 0CE7  
                    __pidataBANK3 0DC1                      WriteSPI@temp 0022                       ?_SendGPSSPI 0070  
                     ?_RecordMode 0070              __end_of_InitWatchdog 0C91                        __pbssBANK1 00EB  
                      __pbssBANK2 0120                        __pbssBANK4 0220                        __pbssBANK5 02A0  
                       ?_InitGPIO 0070                   SetupGPS@message 00A0                   ??_ReadStatusSPI 0025  
               __end_of_UpdateGPS 1000                        __pmaintext 05C9                         ?_SetupGPS 0070  
                         ?___bmul 0020                           ?___wmul 0020                     ??_WriteBuffer 0070  
                      __pintentry 0004                    _validLongitude 00E5         UpdateGPS@GPSupdateMessage 0054  
                       ?_WriteSPI 0070                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                       ?_initUART 0070                           _InitADC 0D70                           _InitCLK 0C91  
                         _InitSPI 0D0A                        _gpsMessage 012A           __size_of_ToggleSleepGPS 002D  
                         _ReadSPI 0CAC                       SetupGPS@MID 00D8               __size_of_SendGPSSPI 0071  
                      ??_SetupGPS 0041               __size_of_RecordMode 0142                   __size_of___bmul 0012  
                         ___awdiv 0EE6                   __size_of___wmul 001E                           ___lwdiv 0E6D  
                         ___lwmod 0E3E                           _isr$610 0077                        ??_WriteSPI 0020  
                         __ptext1 0CC7                           __ptext2 0F9A                           __ptext3 067F  
                         __ptext4 0715                           __ptext5 0CA2                           __ptext6 0EA4  
                         __ptext7 04C3                           __ptext8 0E3E                           __ptext9 0E6D  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0D58  
                    __size_of_isr 00CE                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 00EC  
                         _sprintf 04C3                           clrloop0 0C85              end_of_initialization 0118  
                      ??_initUART 0020                           init_ram 0C7E                           initloop 0C7F  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0CAC                         _RCSTAbits 019D  
                WriteSPI@databyte 0024                      __pstringtext 0800                         _PORTAbits 000C  
                       _PORTBbits 000D                         _PORTCbits 000E                    Hibernate@count 0021  
                __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E           WriteOverheadSPI@address 0027  
               SendGPSSPI@address 0036                   DecodeGPS@status 0048              uart_xmit@mydata_byte 0020  
           _preRecordingAddresses 02A0                         _DecodeGPS 011C                         _TXSTAbits 019E  
                    ??_ReadBuffer 0020                        _strobeFlag 00ED                      ??_InitTimer1 0020  
                       _GoToSleep 0CF8                    __end_of___bmul 0D2E                       _WriteBuffer 0D41  
                  __end_of___wmul 0DC1        __end_of_uart_write_message 078B                         _Hibernate 0D89  
                    _InitWatchdog 0C8A                      ??_SendGPSSPI 0035                     SetupGPS@F4920 0163  
                   SetupGPS@F4922 0169               start_initialization 00D4                  _compute_checksum 0EA4  
       WriteOverheadSPI@StatusReg 0034                      ??_RecordMode 0035                       __end_of_isr 00D2  
              __end_of_ReadBuffer 0D70                 compute_checksum@x 0026                __end_of_InitTimer1 0CC7  
                      ?_DecodeGPS 0070                    _ToggleSleepGPS 0E11                 __size_of_InitGPIO 002D  
              __end_of_SendGPSSPI 07FC                         SetupGPS@x 00DC              compute_checksum@data 0025  
                      ?_GoToSleep 0070                          ??___bmul 0021              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 04C3                       __pdataBANK1 00E2  
                     __pdataBANK2 015C                       __pdataBANK3 01A0                 __size_of_SetupGPS 0096  
                       _UpdateGPS 0F9A                        ?_Hibernate 0070          compute_checksum@checksum 0024  
               __size_of_WriteSPI 0013                       __pbssCOMMON 0079                         ___latbits 0001  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                  _WriteOverheadSPI 0F3A  
             __end_of__stringdata 084B               uart_write_message@x 0031                     _validEastWest 00E9  
          __end_of_ToggleSleepGPS 0E3E                   _messageDoneFlag 00EB                       sprintf@_val 003C  
                     sprintf@flag 0038                       sprintf@prec 0039                          ?_InitADC 0070  
                        ?_InitCLK 0070                          ?_InitSPI 0070                 __size_of_initUART 000F  
                        ?_ReadSPI 0070                     _validLatitude 00E2                  ___lwdiv@dividend 0022  
           __end_of_ReadStatusSPI 0CE7                          ?___awdiv 0026                          ?___lwdiv 0020  
                        ?___lwmod 0028                        ?_UpdateGPS 0070                    UpdateGPS@F4928 01A0  
                __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 0025                          ?_sprintf 002E  
                  UpdateGPS@count 006A        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 00EA                       ??_DecodeGPS 003C                    ___wmul@product 0024  
                        _LATBbits 010D                         clear_ram0 0C84                          _PIE1bits 0091  
                  DecodeGPS@F4931 015C                    DecodeGPS@F4933 0124                    DecodeGPS@F4935 0127  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0CA2  
                     ??_Hibernate 0020                        _ADCON0bits 009D                        _ADCON1bits 009E  
                     __stringdata 080A                        _ADCON2bits 009F                 ___wmul@multiplier 0020  
                 RecordMode@count 003A                          _InitGPIO 0DE4                  __size_of_InitADC 0019  
                __size_of_InitCLK 0008                  __size_of_InitSPI 0012                  __size_of_ReadSPI 000C  
        __end_of_compute_checksum 0EE6             SetupGPS@startSequence 00D2                          _SetupGPS 067F  
                      ?_uart_xmit 0070                      ?_WriteBuffer 0070                  __size_of___awdiv 0054  
                     ??_UpdateGPS 0051                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
                        _WriteSPI 0D2E           _uart_write_message$1376 002D           _uart_write_message$1377 002F  
                      _ANSELAbits 018C                        _ANSELBbits 018D               ReadBuffer@read_data 0021  
                 ___lwdiv@divisor 0020                   ___lwdiv@counter 0027                          __ptext10 011C  
                        __ptext11 0DA3                          __ptext20 0E11                          __ptext12 0D1C  
                        __ptext21 0D58                          __ptext13 0EE6                        _T1GCONbits 0019  
                        __ptext22 0D0A                          __ptext14 078B                          __ptext31 0D41  
                        __ptext23 0C8A                          __ptext15 0381                          __ptext24 0CB8  
                        __ptext16 0F3A                          __ptext25 0DE4                          __ptext17 0CD6  
                        __ptext26 0C91                          __ptext18 0D2E                          __ptext27 0D70  
                        __ptext19 0CAC                          __ptext28 0D89                          __ptext29 0CF8  
              _uart_write_message 0715                  __size_of_sprintf 0106                          _gpsIndex 007D  
                        _initUART 0CC7                     __size_of_main 00B6               ?_uart_write_message 0028  
                      DecodeGPS@x 004F          __end_of_WriteOverheadSPI 0F9A                    GoToSleep@count 0021  
                        main@argc 006C                          main@argv 006E              ??_uart_write_message 002A  
                      _INTCONbits 000B                       pic14e$flags 007E                          intlevel1 0000  
                       sprintf@ap 003A                         sprintf@sp 003B                  ___lwmod@dividend 002A  
               __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099                       ??_uart_xmit 0020  
                        sprintf@c 0040                          sprintf@f 002E                   ___lwmod@divisor 0028  
                 ___lwmod@counter 002D                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                   _recordEndAdress 0120                 DecodeGPS@eastWest 0047  
