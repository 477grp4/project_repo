

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 11:32:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001C                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  0090                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0094                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  0111                     	;# 
    92  0112                     	;# 
    93  0113                     	;# 
    94  0114                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011D                     	;# 
   101  011D                     	;# 
   102  011E                     	;# 
   103  011F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0197                     	;# 
   116  0199                     	;# 
   117  0199                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019A                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019D                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019E                     	;# 
   135  019E                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020D                     	;# 
   143  020E                     	;# 
   144  0210                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  028C                     	;# 
   161  028D                     	;# 
   162  028E                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  030C                     	;# 
   172  030D                     	;# 
   173  030E                     	;# 
   174  038C                     	;# 
   175  038D                     	;# 
   176  038E                     	;# 
   177  0390                     	;# 
   178  0391                     	;# 
   179  0392                     	;# 
   180  0393                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0397                     	;# 
   185  0398                     	;# 
   186  0399                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0511                     	;# 
   191  0513                     	;# 
   192  051A                     	;# 
   193  0811                     	;# 
   194  0812                     	;# 
   195  0813                     	;# 
   196  0814                     	;# 
   197  0815                     	;# 
   198  0816                     	;# 
   199  0817                     	;# 
   200  0818                     	;# 
   201  0819                     	;# 
   202  081A                     	;# 
   203  081B                     	;# 
   204  081C                     	;# 
   205  081D                     	;# 
   206  081E                     	;# 
   207  081F                     	;# 
   208  0820                     	;# 
   209  0821                     	;# 
   210  0821                     	;# 
   211  0822                     	;# 
   212  0823                     	;# 
   213  0823                     	;# 
   214  0824                     	;# 
   215  0825                     	;# 
   216  0825                     	;# 
   217  0826                     	;# 
   218  0827                     	;# 
   219  0827                     	;# 
   220  0828                     	;# 
   221  0829                     	;# 
   222  082A                     	;# 
   223  082B                     	;# 
   224  082C                     	;# 
   225  082D                     	;# 
   226  082E                     	;# 
   227  082F                     	;# 
   228  0831                     	;# 
   229  0832                     	;# 
   230  0833                     	;# 
   231  0834                     	;# 
   232  0835                     	;# 
   233  0836                     	;# 
   234  0837                     	;# 
   235  0838                     	;# 
   236  0839                     	;# 
   237  083A                     	;# 
   238  083B                     	;# 
   239  083C                     	;# 
   240  083D                     	;# 
   241  083E                     	;# 
   242  083F                     	;# 
   243  0840                     	;# 
   244  0841                     	;# 
   245  0841                     	;# 
   246  0842                     	;# 
   247  0843                     	;# 
   248  0843                     	;# 
   249  0844                     	;# 
   250  0845                     	;# 
   251  0845                     	;# 
   252  0846                     	;# 
   253  0847                     	;# 
   254  0847                     	;# 
   255  0848                     	;# 
   256  0849                     	;# 
   257  084A                     	;# 
   258  084B                     	;# 
   259  084C                     	;# 
   260  084D                     	;# 
   261  084E                     	;# 
   262  084F                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  0010                     	;# 
   290  0011                     	;# 
   291  0012                     	;# 
   292  0014                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0094                     	;# 
   309  0095                     	;# 
   310  0096                     	;# 
   311  0097                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  009F                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  0111                     	;# 
   325  0112                     	;# 
   326  0113                     	;# 
   327  0114                     	;# 
   328  0115                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  0118                     	;# 
   332  0119                     	;# 
   333  011D                     	;# 
   334  011D                     	;# 
   335  011E                     	;# 
   336  011F                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0191                     	;# 
   340  0191                     	;# 
   341  0192                     	;# 
   342  0193                     	;# 
   343  0193                     	;# 
   344  0193                     	;# 
   345  0194                     	;# 
   346  0195                     	;# 
   347  0196                     	;# 
   348  0199                     	;# 
   349  0199                     	;# 
   350  0199                     	;# 
   351  019A                     	;# 
   352  019A                     	;# 
   353  019A                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019C                     	;# 
   360  019C                     	;# 
   361  019C                     	;# 
   362  019D                     	;# 
   363  019D                     	;# 
   364  019D                     	;# 
   365  019E                     	;# 
   366  019E                     	;# 
   367  019E                     	;# 
   368  019F                     	;# 
   369  019F                     	;# 
   370  019F                     	;# 
   371  019F                     	;# 
   372  019F                     	;# 
   373  020C                     	;# 
   374  020D                     	;# 
   375  020E                     	;# 
   376  0210                     	;# 
   377  0211                     	;# 
   378  0211                     	;# 
   379  0212                     	;# 
   380  0212                     	;# 
   381  0213                     	;# 
   382  0213                     	;# 
   383  0214                     	;# 
   384  0214                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0216                     	;# 
   389  0216                     	;# 
   390  0217                     	;# 
   391  0217                     	;# 
   392  028C                     	;# 
   393  028D                     	;# 
   394  028E                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  030C                     	;# 
   404  030D                     	;# 
   405  030E                     	;# 
   406  038C                     	;# 
   407  038D                     	;# 
   408  038E                     	;# 
   409  0390                     	;# 
   410  0391                     	;# 
   411  0392                     	;# 
   412  0393                     	;# 
   413  0394                     	;# 
   414  0395                     	;# 
   415  0396                     	;# 
   416  0397                     	;# 
   417  0398                     	;# 
   418  0399                     	;# 
   419  039D                     	;# 
   420  039E                     	;# 
   421  039F                     	;# 
   422  0511                     	;# 
   423  0513                     	;# 
   424  051A                     	;# 
   425  0811                     	;# 
   426  0812                     	;# 
   427  0813                     	;# 
   428  0814                     	;# 
   429  0815                     	;# 
   430  0816                     	;# 
   431  0817                     	;# 
   432  0818                     	;# 
   433  0819                     	;# 
   434  081A                     	;# 
   435  081B                     	;# 
   436  081C                     	;# 
   437  081D                     	;# 
   438  081E                     	;# 
   439  081F                     	;# 
   440  0820                     	;# 
   441  0821                     	;# 
   442  0821                     	;# 
   443  0822                     	;# 
   444  0823                     	;# 
   445  0823                     	;# 
   446  0824                     	;# 
   447  0825                     	;# 
   448  0825                     	;# 
   449  0826                     	;# 
   450  0827                     	;# 
   451  0827                     	;# 
   452  0828                     	;# 
   453  0829                     	;# 
   454  082A                     	;# 
   455  082B                     	;# 
   456  082C                     	;# 
   457  082D                     	;# 
   458  082E                     	;# 
   459  082F                     	;# 
   460  0831                     	;# 
   461  0832                     	;# 
   462  0833                     	;# 
   463  0834                     	;# 
   464  0835                     	;# 
   465  0836                     	;# 
   466  0837                     	;# 
   467  0838                     	;# 
   468  0839                     	;# 
   469  083A                     	;# 
   470  083B                     	;# 
   471  083C                     	;# 
   472  083D                     	;# 
   473  083E                     	;# 
   474  083F                     	;# 
   475  0840                     	;# 
   476  0841                     	;# 
   477  0841                     	;# 
   478  0842                     	;# 
   479  0843                     	;# 
   480  0843                     	;# 
   481  0844                     	;# 
   482  0845                     	;# 
   483  0845                     	;# 
   484  0846                     	;# 
   485  0847                     	;# 
   486  0847                     	;# 
   487  0848                     	;# 
   488  0849                     	;# 
   489  084A                     	;# 
   490  084B                     	;# 
   491  084C                     	;# 
   492  084D                     	;# 
   493  084E                     	;# 
   494  084F                     	;# 
   495  0FE4                     	;# 
   496  0FE5                     	;# 
   497  0FE6                     	;# 
   498  0FE7                     	;# 
   499  0FE8                     	;# 
   500  0FE9                     	;# 
   501  0FEA                     	;# 
   502  0FEB                     	;# 
   503  0FED                     	;# 
   504  0FEE                     	;# 
   505  0FEF                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  0010                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  0090                     	;# 
   538  0091                     	;# 
   539  0092                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009B                     	;# 
   549  009C                     	;# 
   550  009D                     	;# 
   551  009E                     	;# 
   552  009F                     	;# 
   553  010C                     	;# 
   554  010D                     	;# 
   555  010E                     	;# 
   556  0111                     	;# 
   557  0112                     	;# 
   558  0113                     	;# 
   559  0114                     	;# 
   560  0115                     	;# 
   561  0116                     	;# 
   562  0117                     	;# 
   563  0118                     	;# 
   564  0119                     	;# 
   565  011D                     	;# 
   566  011D                     	;# 
   567  011E                     	;# 
   568  011F                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0194                     	;# 
   578  0195                     	;# 
   579  0196                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  028C                     	;# 
   625  028D                     	;# 
   626  028E                     	;# 
   627  0291                     	;# 
   628  0291                     	;# 
   629  0292                     	;# 
   630  0293                     	;# 
   631  0298                     	;# 
   632  0298                     	;# 
   633  0299                     	;# 
   634  029A                     	;# 
   635  030C                     	;# 
   636  030D                     	;# 
   637  030E                     	;# 
   638  038C                     	;# 
   639  038D                     	;# 
   640  038E                     	;# 
   641  0390                     	;# 
   642  0391                     	;# 
   643  0392                     	;# 
   644  0393                     	;# 
   645  0394                     	;# 
   646  0395                     	;# 
   647  0396                     	;# 
   648  0397                     	;# 
   649  0398                     	;# 
   650  0399                     	;# 
   651  039D                     	;# 
   652  039E                     	;# 
   653  039F                     	;# 
   654  0511                     	;# 
   655  0513                     	;# 
   656  051A                     	;# 
   657  0811                     	;# 
   658  0812                     	;# 
   659  0813                     	;# 
   660  0814                     	;# 
   661  0815                     	;# 
   662  0816                     	;# 
   663  0817                     	;# 
   664  0818                     	;# 
   665  0819                     	;# 
   666  081A                     	;# 
   667  081B                     	;# 
   668  081C                     	;# 
   669  081D                     	;# 
   670  081E                     	;# 
   671  081F                     	;# 
   672  0820                     	;# 
   673  0821                     	;# 
   674  0821                     	;# 
   675  0822                     	;# 
   676  0823                     	;# 
   677  0823                     	;# 
   678  0824                     	;# 
   679  0825                     	;# 
   680  0825                     	;# 
   681  0826                     	;# 
   682  0827                     	;# 
   683  0827                     	;# 
   684  0828                     	;# 
   685  0829                     	;# 
   686  082A                     	;# 
   687  082B                     	;# 
   688  082C                     	;# 
   689  082D                     	;# 
   690  082E                     	;# 
   691  082F                     	;# 
   692  0831                     	;# 
   693  0832                     	;# 
   694  0833                     	;# 
   695  0834                     	;# 
   696  0835                     	;# 
   697  0836                     	;# 
   698  0837                     	;# 
   699  0838                     	;# 
   700  0839                     	;# 
   701  083A                     	;# 
   702  083B                     	;# 
   703  083C                     	;# 
   704  083D                     	;# 
   705  083E                     	;# 
   706  083F                     	;# 
   707  0840                     	;# 
   708  0841                     	;# 
   709  0841                     	;# 
   710  0842                     	;# 
   711  0843                     	;# 
   712  0843                     	;# 
   713  0844                     	;# 
   714  0845                     	;# 
   715  0845                     	;# 
   716  0846                     	;# 
   717  0847                     	;# 
   718  0847                     	;# 
   719  0848                     	;# 
   720  0849                     	;# 
   721  084A                     	;# 
   722  084B                     	;# 
   723  084C                     	;# 
   724  084D                     	;# 
   725  084E                     	;# 
   726  084F                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738                           
   739                           	psect	idataBANK1
   740  07F4                     __pidataBANK1:	
   741                           
   742                           ;initializer for SetupGPS@F4906
   743  07F4  3424               	retlw	36
   744  07F5  3450               	retlw	80
   745  07F6  3453               	retlw	83
   746  07F7  3452               	retlw	82
   747  07F8  3446               	retlw	70
   748  07F9  3400               	retlw	0
   749                           
   750                           ;initializer for SetupGPS@F4908
   751  07FA  3431               	retlw	49
   752  07FB  3430               	retlw	48
   753  07FC  3433               	retlw	51
   754  07FD  3400               	retlw	0
   755                           
   756                           ;initializer for _gpsInvalidFlag
   757  07FE  3401               	retlw	1
   758                           
   759                           	psect	idataBANK2
   760  0765                     __pidataBANK2:	
   761                           
   762                           ;initializer for UpdateGPS@F4913
   763  0765  3424               	retlw	36
   764  0766  3450               	retlw	80
   765  0767  3453               	retlw	83
   766  0768  3452               	retlw	82
   767  0769  3446               	retlw	70
   768  076A  3431               	retlw	49
   769  076B  3430               	retlw	48
   770  076C  3433               	retlw	51
   771  076D  342C               	retlw	44
   772  076E  3430               	retlw	48
   773  076F  3431               	retlw	49
   774  0770  342C               	retlw	44
   775  0771  3430               	retlw	48
   776  0772  3431               	retlw	49
   777  0773  342C               	retlw	44
   778  0774  3430               	retlw	48
   779  0775  3430               	retlw	48
   780  0776  342C               	retlw	44
   781  0777  3430               	retlw	48
   782  0778  3430               	retlw	48
   783  0779  342A               	retlw	42
   784  077A  3400               	retlw	0
   785                           
   786                           ;initializer for DisableGPS@F4903
   787  077B  3424               	retlw	36
   788  077C  3450               	retlw	80
   789  077D  3453               	retlw	83
   790  077E  3452               	retlw	82
   791  077F  3446               	retlw	70
   792  0780  3431               	retlw	49
   793  0781  3431               	retlw	49
   794  0782  3437               	retlw	55
   795  0783  342C               	retlw	44
   796  0784  3431               	retlw	49
   797  0785  3436               	retlw	54
   798  0786  342A               	retlw	42
   799  0787  3400               	retlw	0
   800                           
   801                           ;initializer for DecodeGPS@F4915
   802  0788  3424               	retlw	36
   803  0789  3447               	retlw	71
   804  078A  3450               	retlw	80
   805  078B  3447               	retlw	71
   806  078C  344C               	retlw	76
   807  078D  344C               	retlw	76
   808  078E  3400               	retlw	0
   809                           
   810                           	psect	stringtext
   811  0700                     __pstringtext:	
   812  0700                     _dpowers:	
   813  0700  3401               	retlw	1
   814  0701  3400               	retlw	0
   815  0702  340A               	retlw	10
   816  0703  3400               	retlw	0
   817  0704  3464               	retlw	100
   818  0705  3400               	retlw	0
   819  0706  34E8               	retlw	232
   820  0707  3403               	retlw	3
   821  0708  3410               	retlw	16
   822  0709  3427               	retlw	39
   823  070A                     __end_of_dpowers:	
   824  070A                     __stringdata:	
   825  070A                     STR_1:	
   826  070A  3425               	retlw	37	;'%'
   827  070B  3473               	retlw	115	;'s'
   828  070C  3425               	retlw	37	;'%'
   829  070D  3473               	retlw	115	;'s'
   830  070E  342C               	retlw	44	;','
   831  070F  3430               	retlw	48	;'0'
   832  0710  3425               	retlw	37	;'%'
   833  0711  3464               	retlw	100	;'d'
   834  0712  342C               	retlw	44	;','
   835  0713  3430               	retlw	48	;'0'
   836  0714  3430               	retlw	48	;'0'
   837  0715  342C               	retlw	44	;','
   838  0716  3430               	retlw	48	;'0'
   839  0717  3430               	retlw	48	;'0'
   840  0718  342C               	retlw	44	;','
   841  0719  3430               	retlw	48	;'0'
   842  071A  3430               	retlw	48	;'0'
   843  071B  342A               	retlw	42	;'*'
   844  071C  3400               	retlw	0
   845  071D                     STR_2:	
   846  071D  3425               	retlw	37	;'%'
   847  071E  3473               	retlw	115	;'s'
   848  071F  3425               	retlw	37	;'%'
   849  0720  3473               	retlw	115	;'s'
   850  0721  342C               	retlw	44	;','
   851  0722  3430               	retlw	48	;'0'
   852  0723  3431               	retlw	49	;'1'
   853  0724  342C               	retlw	44	;','
   854  0725  3430               	retlw	48	;'0'
   855  0726  3431               	retlw	49	;'1'
   856  0727  342C               	retlw	44	;','
   857  0728  3430               	retlw	48	;'0'
   858  0729  3431               	retlw	49	;'1'
   859  072A  342C               	retlw	44	;','
   860  072B  3430               	retlw	48	;'0'
   861  072C  3430               	retlw	48	;'0'
   862  072D  342A               	retlw	42	;'*'
   863  072E  3400               	retlw	0
   864  072F                     STR_3:	
   865  072F  3428               	retlw	40	;'('
   866  0730  346E               	retlw	110	;'n'
   867  0731  3475               	retlw	117	;'u'
   868  0732  346C               	retlw	108	;'l'
   869  0733  346C               	retlw	108	;'l'
   870  0734  3429               	retlw	41	;')'
   871  0735  3400               	retlw	0
   872  0736                     __end_of__stringdata:	
   873                           
   874                           ; #config settings
   875  0000                     
   876                           	psect	nvBANK1
   877  00ED                     __pnvBANK1:	
   878  00ED                     _gpsIndex:	
   879  00ED                     	ds	1
   880  000B                     _INTCONbits	set	11
   881  0011                     _PIR1bits	set	17
   882  000D                     _PORTBbits	set	13
   883  0018                     _T1CONbits	set	24
   884  0019                     _T1GCONbits	set	25
   885  0017                     _TMR1H	set	23
   886  0016                     _TMR1L	set	22
   887  008E                     _ADIF	set	142
   888  005F                     _GIE	set	95
   889  005E                     _PEIE	set	94
   890  0066                     _RA6	set	102
   891  0088                     _TMR1IF	set	136
   892  009D                     _ADCON0bits	set	157
   893  009E                     _ADCON1bits	set	158
   894  009F                     _ADCON2bits	set	159
   895  009C                     _ADRESH	set	156
   896  0099                     _OSCCONbits	set	153
   897  0091                     _PIE1bits	set	145
   898  008C                     _TRISAbits	set	140
   899  008D                     _TRISBbits	set	141
   900  008E                     _TRISCbits	set	142
   901  0097                     _WDTCONbits	set	151
   902  048E                     _ADIE	set	1166
   903  048D                     _RCIE	set	1165
   904  0488                     _TMR1IE	set	1160
   905  010D                     _LATBbits	set	269
   906  0872                     _LATC2	set	2162
   907  018C                     _ANSELAbits	set	396
   908  018D                     _ANSELBbits	set	397
   909  0199                     _RCREG	set	409
   910  019D                     _RCSTAbits	set	413
   911  019C                     _SPBRGH	set	412
   912  019B                     _SPBRGL	set	411
   913  019A                     _TXREG	set	410
   914  019E                     _TXSTAbits	set	414
   915  0CE9                     _OERR	set	3305
   916  0211                     _SSPBUF	set	529
   917  0215                     _SSPCON1bits	set	533
   918  0214                     _SSPSTATbits	set	532
   919  0396                     _IOCBF	set	918
   920  0396                     _IOCBFbits	set	918
   921  0395                     _IOCBNbits	set	917
   922  0394                     _IOCBPbits	set	916
   923                           
   924                           	psect	cinit
   925  00A9                     start_initialization:	
   926  00A9                     __initialization:	
   927                           
   928                           ; Clear objects allocated to COMMON
   929  00A9  01F9               	clrf	__pbssCOMMON& (0+127)
   930  00AA  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   931  00AB  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   932  00AC  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   933  00AD  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   934                           
   935                           ; Clear objects allocated to BANK1
   936  00AE  30A0               	movlw	low __pbssBANK1
   937  00AF  0084               	movwf	4
   938  00B0  3000               	movlw	high __pbssBANK1
   939  00B1  0085               	movwf	5
   940  00B2  303F               	movlw	63
   941  00B3  3186  26D6  3180   	fcall	clear_ram0
   942                           
   943                           ; Clear objects allocated to BANK3
   944  00B6  30A0               	movlw	low __pbssBANK3
   945  00B7  0084               	movwf	4
   946  00B8  3001               	movlw	high __pbssBANK3
   947  00B9  0085               	movwf	5
   948  00BA  3033               	movlw	51
   949  00BB  3186  26D6  3180   	fcall	clear_ram0
   950                           
   951                           ; Initialize objects allocated to BANK1
   952  00BE  30F4               	movlw	low __pidataBANK1
   953  00BF  0084               	movwf	4
   954  00C0  3087               	movlw	(high __pidataBANK1)| (0+128)
   955  00C1  0085               	movwf	5
   956  00C2  30DF               	movlw	low __pdataBANK1
   957  00C3  0086               	movwf	6
   958  00C4  3000               	movlw	high __pdataBANK1
   959  00C5  0087               	movwf	7
   960  00C6  300B               	movlw	11
   961  00C7  3186  26DC  3180   	fcall	init_ram
   962                           
   963                           ; Initialize objects allocated to BANK2
   964  00CA  3065               	movlw	low __pidataBANK2
   965  00CB  0084               	movwf	4
   966  00CC  3087               	movlw	(high __pidataBANK2)| (0+128)
   967  00CD  0085               	movwf	5
   968  00CE  3020               	movlw	low __pdataBANK2
   969  00CF  0086               	movwf	6
   970  00D0  3001               	movlw	high __pdataBANK2
   971  00D1  0087               	movwf	7
   972  00D2  302A               	movlw	42
   973  00D3  3186  26DC         	fcall	init_ram
   974  00D5                     end_of_initialization:	
   975                           ;End of C runtime variable initialization code
   976                           
   977  00D5                     __end_of__initialization:	
   978  00D5  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   979  00D6  0020               	movlb	0
   980  00D7  3184  2CD9         	ljmp	_main	;jump to C main() function
   981                           
   982                           	psect	bssCOMMON
   983  0079                     __pbssCOMMON:	
   984  0079                     _end:	
   985  0079                     	ds	2
   986  007B                     _start:	
   987  007B                     	ds	2
   988  007D                     _recordModeFlag:	
   989  007D                     	ds	1
   990                           
   991                           	psect	bssBANK1
   992  00A0                     __pbssBANK1:	
   993  00A0                     DecodeGPS@F4917:	
   994  00A0                     	ds	6
   995  00A6                     DecodeGPS@F4919:	
   996  00A6                     	ds	6
   997  00AC                     _messageDoneFlag:	
   998  00AC                     	ds	1
   999  00AD                     _gpsMessage:	
  1000  00AD                     	ds	50
  1001                           
  1002                           	psect	dataBANK1
  1003  00DF                     __pdataBANK1:	
  1004  00DF                     SetupGPS@F4906:	
  1005  00DF                     	ds	6
  1006  00E5                     SetupGPS@F4908:	
  1007  00E5                     	ds	4
  1008  00E9                     _gpsInvalidFlag:	
  1009  00E9                     	ds	1
  1010                           
  1011                           	psect	dataBANK2
  1012  0120                     __pdataBANK2:	
  1013  0120                     UpdateGPS@F4913:	
  1014  0120                     	ds	22
  1015  0136                     DisableGPS@F4903:	
  1016  0136                     	ds	13
  1017  0143                     DecodeGPS@F4915:	
  1018  0143                     	ds	7
  1019                           
  1020                           	psect	bssBANK3
  1021  01A0                     __pbssBANK3:	
  1022  01A0                     _buffer:	
  1023  01A0                     	ds	51
  1024                           
  1025                           	psect	clrtext
  1026  06D6                     clear_ram0:	
  1027                           ;	Called with FSR0 containing the base address, and
  1028                           ;	WREG with the size to clear
  1029                           
  1030  06D6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1031  06D7                     clrloop0:	
  1032  06D7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1033  06D8  3101               	addfsr 0,1
  1034  06D9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1035  06DA  2ED7               	goto	clrloop0	;have we reached the end yet?
  1036  06DB  3400               	retlw	0	;all done for this memory range, return
  1037                           
  1038                           	psect	inittext
  1039  06DC                     init_ram:	
  1040  06DC  00FE               	movwf	126
  1041  06DD                     initloop:	
  1042  06DD  0012               	moviw fsr0++
  1043  06DE  001E               	movwi fsr1++
  1044  06DF  0BFE               	decfsz	126,f
  1045  06E0  2EDD               	goto	initloop
  1046  06E1  3400               	retlw	0
  1047                           
  1048                           	psect	cstackBANK1
  1049  00EA                     __pcstackBANK1:	
  1050  00EA                     ??_main:	
  1051                           
  1052                           ; 0 bytes @ 0x0
  1053  00EA                     	ds	3
  1054                           
  1055                           	psect	cstackCOMMON
  1056  0070                     __pcstackCOMMON:	
  1057  0070                     ?_InitCLK:	
  1058  0070                     ?_InitGPIO:	
  1059                           ; 0 bytes @ 0x0
  1060                           
  1061  0070                     ?_InitADC:	
  1062                           ; 0 bytes @ 0x0
  1063                           
  1064  0070                     ?_InitSPI:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  0070                     ?_InitTimer1:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  0070                     ?_InitWatchdog:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  0070                     ?_initUART:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  0070                     ?_ToggleSleepGPS:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0070                     ?_SetupGPS:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0070                     ?_UpdateGPS:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ?_DecodeGPS:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ?_WriteBuffer:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ??_WriteBuffer:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?_isr:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ?_uart_xmit:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100                           
  1101                           ; 0 bytes @ 0x0
  1102  0070                     	ds	1
  1103  0071                     WriteBuffer@data:	
  1104                           
  1105                           ; 1 bytes @ 0x1
  1106  0071                     	ds	1
  1107  0072                     ??_isr:	
  1108                           
  1109                           ; 0 bytes @ 0x2
  1110  0072                     	ds	5
  1111  0077                     _isr$400:	
  1112                           
  1113                           ; 2 bytes @ 0x7
  1114  0077                     	ds	2
  1115                           
  1116                           	psect	cstackBANK0
  1117  0020                     __pcstackBANK0:	
  1118  0020                     ??_InitCLK:	
  1119  0020                     ??_InitGPIO:	
  1120                           ; 0 bytes @ 0x0
  1121                           
  1122  0020                     ??_InitADC:	
  1123                           ; 0 bytes @ 0x0
  1124                           
  1125  0020                     ??_InitSPI:	
  1126                           ; 0 bytes @ 0x0
  1127                           
  1128  0020                     ??_InitTimer1:	
  1129                           ; 0 bytes @ 0x0
  1130                           
  1131  0020                     ??_InitWatchdog:	
  1132                           ; 0 bytes @ 0x0
  1133                           
  1134  0020                     ??_initUART:	
  1135                           ; 0 bytes @ 0x0
  1136                           
  1137  0020                     ??_ToggleSleepGPS:	
  1138                           ; 0 bytes @ 0x0
  1139                           
  1140  0020                     ??_uart_xmit:	
  1141                           ; 0 bytes @ 0x0
  1142                           
  1143  0020                     ?_compute_checksum:	
  1144                           ; 0 bytes @ 0x0
  1145                           
  1146  0020                     ?___wmul:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0020                     uart_xmit@mydata_byte:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152  0020                     compute_checksum@size:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0020                     ___wmul@multiplier:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x0
  1160  0020                     	ds	2
  1161  0022                     ??_compute_checksum:	
  1162  0022                     ___wmul@multiplicand:	
  1163                           ; 0 bytes @ 0x2
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x2
  1167  0022                     	ds	2
  1168  0024                     ??___wmul:	
  1169  0024                     compute_checksum@checksum:	
  1170                           ; 0 bytes @ 0x4
  1171                           
  1172  0024                     ___wmul@product:	
  1173                           ; 1 bytes @ 0x4
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x4
  1177  0024                     	ds	1
  1178  0025                     compute_checksum@data:	
  1179                           
  1180                           ; 1 bytes @ 0x5
  1181  0025                     	ds	1
  1182  0026                     ?___lwdiv:	
  1183  0026                     compute_checksum@x:	
  1184                           ; 2 bytes @ 0x6
  1185                           
  1186  0026                     ___lwdiv@divisor:	
  1187                           ; 2 bytes @ 0x6
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x6
  1191  0026                     	ds	2
  1192  0028                     ?_uart_write_message:	
  1193  0028                     uart_write_message@size:	
  1194                           ; 0 bytes @ 0x8
  1195                           
  1196  0028                     ___lwdiv@dividend:	
  1197                           ; 2 bytes @ 0x8
  1198                           
  1199                           
  1200                           ; 2 bytes @ 0x8
  1201  0028                     	ds	2
  1202  002A                     ??_uart_write_message:	
  1203  002A                     ??___lwdiv:	
  1204                           ; 0 bytes @ 0xA
  1205                           
  1206                           
  1207                           ; 0 bytes @ 0xA
  1208  002A                     	ds	1
  1209  002B                     ___lwdiv@quotient:	
  1210                           
  1211                           ; 2 bytes @ 0xB
  1212  002B                     	ds	2
  1213  002D                     ___lwdiv@counter:	
  1214  002D                     _uart_write_message$1094:	
  1215                           ; 1 bytes @ 0xD
  1216                           
  1217                           
  1218                           ; 2 bytes @ 0xD
  1219  002D                     	ds	1
  1220  002E                     ??_DecodeGPS:	
  1221  002E                     ?___lwmod:	
  1222                           ; 0 bytes @ 0xE
  1223                           
  1224  002E                     ___lwmod@divisor:	
  1225                           ; 2 bytes @ 0xE
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0xE
  1229  002E                     	ds	1
  1230  002F                     _uart_write_message$1095:	
  1231                           
  1232                           ; 2 bytes @ 0xF
  1233  002F                     	ds	1
  1234  0030                     ___lwmod@dividend:	
  1235  0030                     DecodeGPS@messageID:	
  1236                           ; 2 bytes @ 0x10
  1237                           
  1238                           
  1239                           ; 7 bytes @ 0x10
  1240  0030                     	ds	1
  1241  0031                     uart_write_message@x:	
  1242                           
  1243                           ; 2 bytes @ 0x11
  1244  0031                     	ds	1
  1245  0032                     ??___lwmod:	
  1246                           
  1247                           ; 0 bytes @ 0x12
  1248  0032                     	ds	1
  1249  0033                     uart_write_message@checksum:	
  1250  0033                     ___lwmod@counter:	
  1251                           ; 1 bytes @ 0x13
  1252                           
  1253                           
  1254                           ; 1 bytes @ 0x13
  1255  0033                     	ds	1
  1256  0034                     ?_sprintf:	
  1257  0034                     uart_write_message@data:	
  1258                           ; 2 bytes @ 0x14
  1259                           
  1260  0034                     sprintf@f:	
  1261                           ; 1 bytes @ 0x14
  1262                           
  1263                           
  1264                           ; 2 bytes @ 0x14
  1265  0034                     	ds	1
  1266  0035                     uart_write_message@ascii_checksum:	
  1267                           
  1268                           ; 2 bytes @ 0x15
  1269  0035                     	ds	2
  1270  0037                     ??_UpdateGPS:	
  1271  0037                     DecodeGPS@northSouth:	
  1272                           ; 0 bytes @ 0x17
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x17
  1276  0037                     	ds	1
  1277  0038                     DecodeGPS@eastWest:	
  1278  0038                     UpdateGPS@GPSupdateMessage:	
  1279                           ; 1 bytes @ 0x18
  1280                           
  1281                           
  1282                           ; 22 bytes @ 0x18
  1283  0038                     	ds	1
  1284  0039                     DecodeGPS@status:	
  1285                           
  1286                           ; 1 bytes @ 0x19
  1287  0039                     	ds	1
  1288  003A                     ??_sprintf:	
  1289  003A                     DecodeGPS@latitude:	
  1290                           ; 0 bytes @ 0x1A
  1291                           
  1292                           
  1293                           ; 6 bytes @ 0x1A
  1294  003A                     	ds	4
  1295  003E                     sprintf@flag:	
  1296                           
  1297                           ; 1 bytes @ 0x1E
  1298  003E                     	ds	1
  1299  003F                     sprintf@prec:	
  1300                           
  1301                           ; 1 bytes @ 0x1F
  1302  003F                     	ds	1
  1303  0040                     sprintf@ap:	
  1304  0040                     DecodeGPS@longitude:	
  1305                           ; 1 bytes @ 0x20
  1306                           
  1307                           
  1308                           ; 6 bytes @ 0x20
  1309  0040                     	ds	1
  1310  0041                     sprintf@sp:	
  1311                           
  1312                           ; 1 bytes @ 0x21
  1313  0041                     	ds	1
  1314  0042                     sprintf@_val:	
  1315                           
  1316                           ; 4 bytes @ 0x22
  1317  0042                     	ds	4
  1318  0046                     sprintf@c:	
  1319  0046                     DecodeGPS@x:	
  1320                           ; 1 bytes @ 0x26
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x26
  1324  0046                     	ds	1
  1325  0047                     ??_SetupGPS:	
  1326                           
  1327                           ; 0 bytes @ 0x27
  1328  0047                     	ds	3
  1329  004A                     SetupGPS@message:	
  1330                           
  1331                           ; 22 bytes @ 0x2A
  1332  004A                     	ds	22
  1333  0060                     SetupGPS@startSequence:	
  1334                           
  1335                           ; 6 bytes @ 0x40
  1336  0060                     	ds	6
  1337  0066                     SetupGPS@MID:	
  1338                           
  1339                           ; 4 bytes @ 0x46
  1340  0066                     	ds	4
  1341  006A                     SetupGPS@x:	
  1342                           
  1343                           ; 2 bytes @ 0x4A
  1344  006A                     	ds	2
  1345  006C                     ?_main:	
  1346  006C                     main@argc:	
  1347                           ; 2 bytes @ 0x4C
  1348                           
  1349                           
  1350                           ; 2 bytes @ 0x4C
  1351  006C                     	ds	2
  1352  006E                     main@argv:	
  1353                           
  1354                           ; 2 bytes @ 0x4E
  1355  006E                     	ds	2
  1356                           
  1357                           	psect	maintext
  1358  04D9                     __pmaintext:	
  1359 ;;
  1360 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1361 ;;
  1362 ;; *************** function _main *****************
  1363 ;; Defined at:
  1364 ;;		line 20 in file "launcher_main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  argc            2   76[BANK0 ] int 
  1367 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2   76[BANK0 ] int 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 17F/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1379 ;;      Params:         0       4       0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0
  1381 ;;      Temps:          0       0       3       0       0       0       0
  1382 ;;      Totals:         0       4       3       0       0       0       0
  1383 ;;Total ram usage:        7 bytes
  1384 ;; Hardware stack levels required when called:    5
  1385 ;; This function calls:
  1386 ;;		_DecodeGPS
  1387 ;;		_InitADC
  1388 ;;		_InitCLK
  1389 ;;		_InitGPIO
  1390 ;;		_InitSPI
  1391 ;;		_InitTimer1
  1392 ;;		_InitWatchdog
  1393 ;;		_SetupGPS
  1394 ;;		_ToggleSleepGPS
  1395 ;;		_UpdateGPS
  1396 ;;		_initUART
  1397 ;; This function is called by:
  1398 ;;		Startup code after reset
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _main
  1404  04D9                     _main:	
  1405                           
  1406                           ;launcher_main.c: 23: InitCLK();
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1410  04D9  3186  26C7  3184   	fcall	_InitCLK
  1411                           
  1412                           ;launcher_main.c: 24: InitGPIO();
  1413  04DC  3187  278F  3184   	fcall	_InitGPIO
  1414                           
  1415                           ;launcher_main.c: 25: InitADC();
  1416  04DF  3186  265D  3184   	fcall	_InitADC
  1417                           
  1418                           ;launcher_main.c: 26: InitSPI();
  1419  04E2  3186  268D  3184   	fcall	_InitSPI
  1420                           
  1421                           ;launcher_main.c: 27: InitTimer1();
  1422  04E5  3186  26AE  3184   	fcall	_InitTimer1
  1423                           
  1424                           ;launcher_main.c: 28: InitWatchdog();
  1425  04E8  3186  26CF  3184   	fcall	_InitWatchdog
  1426                           
  1427                           ;launcher_main.c: 29: initUART();
  1428  04EB  3186  269F  3184   	fcall	_initUART
  1429                           
  1430                           ;launcher_main.c: 31: gpsIndex = 1;
  1431  04EE  3001               	movlw	1
  1432  04EF  0021               	movlb	1	; select bank1
  1433  04F0  00EA               	movwf	??_main^(0+128)
  1434  04F1  086A               	movf	??_main^(0+128),w
  1435  04F2  00ED               	movwf	_gpsIndex^(0+128)	;volatile
  1436                           
  1437                           ;launcher_main.c: 33: INTCONbits.GIE = 1;
  1438  04F3  178B               	bsf	11,7	;volatile
  1439                           
  1440                           ;launcher_main.c: 35: ToggleSleepGPS();
  1441  04F4  3187  27B4  3184   	fcall	_ToggleSleepGPS
  1442                           
  1443                           ;launcher_main.c: 37: SetupGPS();
  1444  04F7  3184  2447  3184   	fcall	_SetupGPS
  1445                           
  1446                           ;launcher_main.c: 38: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1447  04FA  3015               	movlw	21
  1448  04FB  0021               	movlb	1	; select bank1
  1449  04FC  00EC               	movwf	(??_main^(0+128)+2)
  1450  04FD  304B               	movlw	75
  1451  04FE  00EB               	movwf	(??_main^(0+128)+1)
  1452  04FF  30D1               	movlw	209
  1453  0500  00EA               	movwf	??_main^(0+128)
  1454  0501                     u1517:	
  1455  0501  0BEA               	decfsz	??_main^(0+128),f
  1456  0502  2D01               	goto	u1517
  1457  0503  0BEB               	decfsz	(??_main^(0+128)+1),f
  1458  0504  2D01               	goto	u1517
  1459  0505  0BEC               	decfsz	(??_main^(0+128)+2),f
  1460  0506  2D01               	goto	u1517
  1461  0507  0000               	nop
  1462  0508                     l1939:	
  1463                           ;launcher_main.c: 43: while(1){
  1464                           
  1465                           
  1466                           ;launcher_main.c: 44: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1467  0508  3015               	movlw	21
  1468  0509  0021               	movlb	1	; select bank1
  1469  050A  00EC               	movwf	(??_main^(0+128)+2)
  1470  050B  304B               	movlw	75
  1471  050C  00EB               	movwf	(??_main^(0+128)+1)
  1472  050D  30D1               	movlw	209
  1473  050E  00EA               	movwf	??_main^(0+128)
  1474  050F                     u1527:	
  1475  050F  0BEA               	decfsz	??_main^(0+128),f
  1476  0510  2D0F               	goto	u1527
  1477  0511  0BEB               	decfsz	(??_main^(0+128)+1),f
  1478  0512  2D0F               	goto	u1527
  1479  0513  0BEC               	decfsz	(??_main^(0+128)+2),f
  1480  0514  2D0F               	goto	u1527
  1481  0515  0000               	nop
  1482                           
  1483                           ;launcher_main.c: 45: UpdateGPS();
  1484  0516  3186  2640  3184   	fcall	_UpdateGPS
  1485  0519                     l1943:	
  1486                           ;launcher_main.c: 46: while(!messageDoneFlag);
  1487                           
  1488  0519  0021               	movlb	1	; select bank1
  1489  051A  082C               	movf	_messageDoneFlag^(0+128),w
  1490  051B  1903               	btfsc	3,2
  1491  051C  2D19               	goto	l1943
  1492                           
  1493                           ;launcher_main.c: 47: DecodeGPS();
  1494  051D  3180  20D9  3184   	fcall	_DecodeGPS
  1495                           
  1496                           ;launcher_main.c: 48: messageDoneFlag = 0;
  1497  0520  0021               	movlb	1	; select bank1
  1498  0521  01AC               	clrf	_messageDoneFlag^(0+128)
  1499                           
  1500                           ;launcher_main.c: 49: if(gpsInvalidFlag)
  1501  0522  0869               	movf	_gpsInvalidFlag^(0+128),w
  1502  0523  1903               	btfsc	3,2
  1503  0524  2D38               	goto	l1953
  1504                           
  1505                           ;launcher_main.c: 50: {
  1506                           ;launcher_main.c: 51: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1507  0525  0022               	movlb	2	; select bank2
  1508  0526  080D               	movf	13,w	;volatile
  1509  0527  39FF               	andlw	255
  1510  0528  3820               	iorlw	32
  1511  0529  0021               	movlb	1	; select bank1
  1512  052A  00EA               	movwf	??_main^(0+128)
  1513  052B  0020               	movlb	0	; select bank0
  1514  052C  080D               	movf	13,w	;volatile
  1515  052D  0021               	movlb	1	; select bank1
  1516  052E  066A               	xorwf	??_main^(0+128),w
  1517  052F  3900               	andlw	-256
  1518  0530  066A               	xorwf	??_main^(0+128),w
  1519  0531  0020               	movlb	0	; select bank0
  1520  0532  008D               	movwf	13	;volatile
  1521                           
  1522                           ;launcher_main.c: 52: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1523  0533  0022               	movlb	2	; select bank2
  1524  0534  080D               	movf	13,w	;volatile
  1525  0535  39FF               	andlw	255
  1526  0536  39EF               	andlw	239
  1527  0537  2D4A               	goto	L1
  1528  0538                     l1953:	
  1529                           ;launcher_main.c: 53: }
  1530                           
  1531                           
  1532                           ;launcher_main.c: 54: else
  1533                           ;launcher_main.c: 55: {
  1534                           ;launcher_main.c: 56: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1535  0538  0022               	movlb	2	; select bank2
  1536  0539  080D               	movf	13,w	;volatile
  1537  053A  39FF               	andlw	255
  1538  053B  3810               	iorlw	16
  1539  053C  0021               	movlb	1	; select bank1
  1540  053D  00EA               	movwf	??_main^(0+128)
  1541  053E  0020               	movlb	0	; select bank0
  1542  053F  080D               	movf	13,w	;volatile
  1543  0540  0021               	movlb	1	; select bank1
  1544  0541  066A               	xorwf	??_main^(0+128),w
  1545  0542  3900               	andlw	-256
  1546  0543  066A               	xorwf	??_main^(0+128),w
  1547  0544  0020               	movlb	0	; select bank0
  1548  0545  008D               	movwf	13	;volatile
  1549                           
  1550                           ;launcher_main.c: 57: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1551  0546  0022               	movlb	2	; select bank2
  1552  0547  080D               	movf	13,w	;volatile
  1553  0548  39FF               	andlw	255
  1554  0549  39DF               	andlw	223
  1555  054A                     L1:	
  1556  054A  0021               	movlb	1	; select bank1
  1557  054B  00EA               	movwf	??_main^(0+128)
  1558  054C  0020               	movlb	0	; select bank0
  1559  054D  080D               	movf	13,w	;volatile
  1560  054E  0021               	movlb	1	; select bank1
  1561  054F  066A               	xorwf	??_main^(0+128),w
  1562  0550  3900               	andlw	-256
  1563  0551  066A               	xorwf	??_main^(0+128),w
  1564  0552  0020               	movlb	0	; select bank0
  1565  0553  008D               	movwf	13	;volatile
  1566  0554  2D08               	goto	l1939
  1567  0555                     __end_of_main:	
  1568                           ;launcher_main.c: 58: }
  1569                           ;launcher_main.c: 59: }
  1570                           ;launcher_main.c: 72: return (0);
  1571                           ;	Return value of _main is never used
  1572                           
  1573                           
  1574                           	psect	text1
  1575  069F                     __ptext1:	
  1576 ;; *************** function _initUART *****************
  1577 ;; Defined at:
  1578 ;;		line 245 in file "launcher_functions.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;		None               void
  1585 ;; Registers used:
  1586 ;;		wreg, status,2
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1592 ;;      Params:         0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    2
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           
  1607                           ;psect for function _initUART
  1608  069F                     _initUART:	
  1609                           
  1610                           ;launcher_functions.c: 248: TRISCbits.TRISC6 = 0;
  1611                           
  1612                           ;incstack = 0
  1613                           ; Regs used in _initUART: [wreg+status,2]
  1614  069F  0021               	movlb	1	; select bank1
  1615  06A0  130E               	bcf	14,6	;volatile
  1616                           
  1617                           ;launcher_functions.c: 249: TRISCbits.TRISC7 = 1;
  1618  06A1  178E               	bsf	14,7	;volatile
  1619                           
  1620                           ;launcher_functions.c: 250: TXSTAbits.BRGH = 0;
  1621  06A2  0023               	movlb	3	; select bank3
  1622  06A3  111E               	bcf	30,2	;volatile
  1623                           
  1624                           ;launcher_functions.c: 252: SPBRGH = 0;
  1625  06A4  019C               	clrf	28	;volatile
  1626                           
  1627                           ;launcher_functions.c: 253: SPBRGL = 51;
  1628  06A5  3033               	movlw	51
  1629  06A6  009B               	movwf	27	;volatile
  1630                           
  1631                           ;launcher_functions.c: 254: TXSTAbits.TX9 = 0;
  1632  06A7  131E               	bcf	30,6	;volatile
  1633                           
  1634                           ;launcher_functions.c: 255: TXSTAbits.SYNC = 0;
  1635  06A8  121E               	bcf	30,4	;volatile
  1636                           
  1637                           ;launcher_functions.c: 256: TXSTAbits.TXEN = 1;
  1638  06A9  169E               	bsf	30,5	;volatile
  1639                           
  1640                           ;launcher_functions.c: 258: RCSTAbits.SPEN = 1;
  1641  06AA  179D               	bsf	29,7	;volatile
  1642                           
  1643                           ;launcher_functions.c: 259: RCSTAbits.RX9 = 0;
  1644  06AB  131D               	bcf	29,6	;volatile
  1645                           
  1646                           ;launcher_functions.c: 260: RCSTAbits.CREN = 1;
  1647  06AC  161D               	bsf	29,4	;volatile
  1648  06AD  0008               	return
  1649  06AE                     __end_of_initUART:	
  1650                           
  1651                           	psect	text2
  1652  0640                     __ptext2:	
  1653 ;; *************** function _UpdateGPS *****************
  1654 ;; Defined at:
  1655 ;;		line 350 in file "launcher_functions.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  GPSupdateMes   22   24[BANK0 ] unsigned char [22]
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1669 ;;      Params:         0       0       0       0       0       0       0
  1670 ;;      Locals:         0      22       0       0       0       0       0
  1671 ;;      Temps:          0       1       0       0       0       0       0
  1672 ;;      Totals:         0      23       0       0       0       0       0
  1673 ;;Total ram usage:       23 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    4
  1676 ;; This function calls:
  1677 ;;		_uart_write_message
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _UpdateGPS
  1685  0640                     _UpdateGPS:	
  1686                           
  1687                           ;launcher_functions.c: 352: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,00,00*"
      +                          ;
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1691  0640  3020               	movlw	low UpdateGPS@F4913
  1692  0641  0086               	movwf	6
  1693  0642  3001               	movlw	high UpdateGPS@F4913
  1694  0643  0087               	movwf	7
  1695  0644  3038               	movlw	low UpdateGPS@GPSupdateMessage
  1696  0645  0084               	movwf	4
  1697  0646  3000               	movlw	high UpdateGPS@GPSupdateMessage
  1698  0647  0085               	movwf	5
  1699  0648  3016               	movlw	22
  1700  0649  0020               	movlb	0	; select bank0
  1701  064A  00B7               	movwf	??_UpdateGPS
  1702  064B                     u1190:	
  1703  064B  0016               	moviw fsr1++
  1704  064C  001A               	movwi fsr0++
  1705  064D  0BB7               	decfsz	??_UpdateGPS,f
  1706  064E  2E4B               	goto	u1190
  1707                           
  1708                           ;launcher_functions.c: 355: RCIE = 1;
  1709  064F  0021               	movlb	1	; select bank1
  1710  0650  1691               	bsf	17,5	;volatile
  1711                           
  1712                           ;launcher_functions.c: 356: PEIE = 1;
  1713  0651  170B               	bsf	11,6	;volatile
  1714                           
  1715                           ;launcher_functions.c: 357: GIE = 1;
  1716  0652  178B               	bsf	11,7	;volatile
  1717                           
  1718                           ;launcher_functions.c: 360: gpsIndex = 0;
  1719  0653  01ED               	clrf	_gpsIndex^(0+128)	;volatile
  1720                           
  1721                           ;launcher_functions.c: 361: uart_write_message(GPSupdateMessage, 22);
  1722  0654  3016               	movlw	22
  1723  0655  0020               	movlb	0	; select bank0
  1724  0656  00A8               	movwf	uart_write_message@size
  1725  0657  3000               	movlw	0
  1726  0658  00A9               	movwf	uart_write_message@size+1
  1727  0659  3038               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  1728  065A  3185  2555         	fcall	_uart_write_message
  1729  065C  0008               	return
  1730  065D                     __end_of_UpdateGPS:	
  1731                           
  1732                           	psect	text3
  1733  07B4                     __ptext3:	
  1734 ;; *************** function _ToggleSleepGPS *****************
  1735 ;; Defined at:
  1736 ;;		line 308 in file "launcher_functions.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;		None               void
  1743 ;; Registers used:
  1744 ;;		wreg
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1750 ;;      Params:         0       0       0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0
  1752 ;;      Temps:          0       3       0       0       0       0       0
  1753 ;;      Totals:         0       3       0       0       0       0       0
  1754 ;;Total ram usage:        3 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    2
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _ToggleSleepGPS
  1766  07B4                     _ToggleSleepGPS:	
  1767                           
  1768                           ;launcher_functions.c: 310: TRISAbits.TRISA6 = 0;
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _ToggleSleepGPS: [wreg]
  1772  07B4  0021               	movlb	1	; select bank1
  1773  07B5  130C               	bcf	12,6	;volatile
  1774                           
  1775                           ;launcher_functions.c: 312: RA6 = 0;
  1776  07B6  0020               	movlb	0	; select bank0
  1777  07B7  130C               	bcf	12,6	;volatile
  1778                           
  1779                           ;launcher_functions.c: 313: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1780  07B8  3015               	movlw	21
  1781  07B9  00A2               	movwf	??_ToggleSleepGPS+2
  1782  07BA  304B               	movlw	75
  1783  07BB  00A1               	movwf	??_ToggleSleepGPS+1
  1784  07BC  30D1               	movlw	209
  1785  07BD  00A0               	movwf	??_ToggleSleepGPS
  1786  07BE                     u1537:	
  1787  07BE  0BA0               	decfsz	??_ToggleSleepGPS,f
  1788  07BF  2FBE               	goto	u1537
  1789  07C0  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  1790  07C1  2FBE               	goto	u1537
  1791  07C2  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  1792  07C3  2FBE               	goto	u1537
  1793  07C4  0000               	nop
  1794                           
  1795                           ;launcher_functions.c: 314: RA6 = 1;
  1796  07C5  0020               	movlb	0	; select bank0
  1797  07C6  170C               	bsf	12,6	;volatile
  1798                           
  1799                           ;launcher_functions.c: 315: _delay((unsigned long)((100)*(16000000/4000.0)));
  1800  07C7  3003               	movlw	3
  1801  07C8  00A2               	movwf	??_ToggleSleepGPS+2
  1802  07C9  3008               	movlw	8
  1803  07CA  00A1               	movwf	??_ToggleSleepGPS+1
  1804  07CB  3078               	movlw	120
  1805  07CC  00A0               	movwf	??_ToggleSleepGPS
  1806  07CD                     u1547:	
  1807  07CD  0BA0               	decfsz	??_ToggleSleepGPS,f
  1808  07CE  2FCD               	goto	u1547
  1809  07CF  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  1810  07D0  2FCD               	goto	u1547
  1811  07D1  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  1812  07D2  2FCD               	goto	u1547
  1813                           
  1814                           ;launcher_functions.c: 316: RA6 = 0;
  1815  07D3  0020               	movlb	0	; select bank0
  1816  07D4  130C               	bcf	12,6	;volatile
  1817  07D5  0008               	return
  1818  07D6                     __end_of_ToggleSleepGPS:	
  1819                           
  1820                           	psect	text4
  1821  0447                     __ptext4:	
  1822 ;; *************** function _SetupGPS *****************
  1823 ;; Defined at:
  1824 ;;		line 326 in file "launcher_functions.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  message        22   42[BANK0 ] unsigned char [22]
  1829 ;;  startSequenc    6   64[BANK0 ] unsigned char [6]
  1830 ;;  MID             4   70[BANK0 ] unsigned char [4]
  1831 ;;  x               2   74[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1841 ;;      Params:         0       0       0       0       0       0       0
  1842 ;;      Locals:         0      34       0       0       0       0       0
  1843 ;;      Temps:          0       3       0       0       0       0       0
  1844 ;;      Totals:         0      37       0       0       0       0       0
  1845 ;;Total ram usage:       37 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    4
  1848 ;; This function calls:
  1849 ;;		_sprintf
  1850 ;;		_uart_write_message
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _SetupGPS
  1858  0447                     _SetupGPS:	
  1859                           
  1860                           ;launcher_functions.c: 328: int x;
  1861                           ;launcher_functions.c: 329: unsigned char startSequence[6] = "$PSRF";
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1865  0447  30DF               	movlw	low SetupGPS@F4906
  1866  0448  0086               	movwf	6
  1867  0449  3000               	movlw	high SetupGPS@F4906
  1868  044A  0087               	movwf	7
  1869  044B  3060               	movlw	low SetupGPS@startSequence
  1870  044C  0084               	movwf	4
  1871  044D  3000               	movlw	high SetupGPS@startSequence
  1872  044E  0085               	movwf	5
  1873  044F  3006               	movlw	6
  1874  0450  0020               	movlb	0	; select bank0
  1875  0451  00C7               	movwf	??_SetupGPS
  1876  0452                     u1160:	
  1877  0452  0016               	moviw fsr1++
  1878  0453  001A               	movwi fsr0++
  1879  0454  0BC7               	decfsz	??_SetupGPS,f
  1880  0455  2C52               	goto	u1160
  1881                           
  1882                           ;launcher_functions.c: 330: unsigned char MID[4] = "103";
  1883  0456  0021               	movlb	1	; select bank1
  1884  0457  0868               	movf	(SetupGPS@F4908+3)^(0+128),w
  1885  0458  0020               	movlb	0	; select bank0
  1886  0459  00E9               	movwf	SetupGPS@MID+3
  1887  045A  0021               	movlb	1	; select bank1
  1888  045B  0867               	movf	(SetupGPS@F4908+2)^(0+128),w
  1889  045C  0020               	movlb	0	; select bank0
  1890  045D  00E8               	movwf	SetupGPS@MID+2
  1891  045E  0021               	movlb	1	; select bank1
  1892  045F  0866               	movf	(SetupGPS@F4908+1)^(0+128),w
  1893  0460  0020               	movlb	0	; select bank0
  1894  0461  00E7               	movwf	SetupGPS@MID+1
  1895  0462  0021               	movlb	1	; select bank1
  1896  0463  0865               	movf	SetupGPS@F4908^(0+128),w
  1897  0464  0020               	movlb	0	; select bank0
  1898  0465  00E6               	movwf	SetupGPS@MID
  1899                           
  1900                           ;launcher_functions.c: 331: unsigned char message[22];
  1901                           ;launcher_functions.c: 334: for(x = 0; x < 6; x++)
  1902  0466  01EA               	clrf	SetupGPS@x
  1903  0467  01EB               	clrf	SetupGPS@x+1
  1904  0468  086B               	movf	SetupGPS@x+1,w
  1905  0469  3A80               	xorlw	128
  1906  046A  00C7               	movwf	??_SetupGPS
  1907  046B  3080               	movlw	128
  1908  046C  0247               	subwf	??_SetupGPS,w
  1909  046D  1D03               	skipz
  1910  046E  2C71               	goto	u1175
  1911  046F  3006               	movlw	6
  1912  0470  026A               	subwf	SetupGPS@x,w
  1913  0471                     u1175:	
  1914  0471  1803               	btfsc	3,0
  1915  0472  2CB1               	goto	l1783
  1916  0473                     l1773:	
  1917                           
  1918                           ;launcher_functions.c: 335: {
  1919                           ;launcher_functions.c: 336: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1920  0473  3015               	movlw	21
  1921  0474  0020               	movlb	0	; select bank0
  1922  0475  00C9               	movwf	??_SetupGPS+2
  1923  0476  304B               	movlw	75
  1924  0477  00C8               	movwf	??_SetupGPS+1
  1925  0478  30D1               	movlw	209
  1926  0479  00C7               	movwf	??_SetupGPS
  1927  047A                     u1557:	
  1928  047A  0BC7               	decfsz	??_SetupGPS,f
  1929  047B  2C7A               	goto	u1557
  1930  047C  0BC8               	decfsz	??_SetupGPS+1,f
  1931  047D  2C7A               	goto	u1557
  1932  047E  0BC9               	decfsz	??_SetupGPS+2,f
  1933  047F  2C7A               	goto	u1557
  1934  0480  0000               	nop
  1935                           
  1936                           ;launcher_functions.c: 337: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  1937  0481  300A               	movlw	low (STR_1| (0+32768))
  1938  0482  0020               	movlb	0	; select bank0
  1939  0483  00B4               	movwf	sprintf@f
  1940  0484  3087               	movlw	high (STR_1| (0+32768))
  1941  0485  00B5               	movwf	sprintf@f+1
  1942  0486  3060               	movlw	SetupGPS@startSequence& (0+255)
  1943  0487  00C7               	movwf	??_SetupGPS
  1944  0488  0847               	movf	??_SetupGPS,w
  1945  0489  00B6               	movwf	?_sprintf+2
  1946  048A  3066               	movlw	SetupGPS@MID& (0+255)
  1947  048B  00C8               	movwf	??_SetupGPS+1
  1948  048C  0848               	movf	??_SetupGPS+1,w
  1949  048D  00B7               	movwf	?_sprintf+3
  1950  048E  086B               	movf	SetupGPS@x+1,w
  1951  048F  01B9               	clrf	?_sprintf+5
  1952  0490  07B9               	addwf	?_sprintf+5,f
  1953  0491  086A               	movf	SetupGPS@x,w
  1954  0492  01B8               	clrf	?_sprintf+4
  1955  0493  07B8               	addwf	?_sprintf+4,f
  1956  0494  304A               	movlw	SetupGPS@message& (0+255)
  1957  0495  3183  2341  3184   	fcall	_sprintf
  1958                           
  1959                           ;launcher_functions.c: 338: uart_write_message(message, 22);
  1960  0498  3016               	movlw	22
  1961  0499  0020               	movlb	0	; select bank0
  1962  049A  00A8               	movwf	uart_write_message@size
  1963  049B  3000               	movlw	0
  1964  049C  00A9               	movwf	uart_write_message@size+1
  1965  049D  304A               	movlw	SetupGPS@message& (0+255)
  1966  049E  3185  2555  3184   	fcall	_uart_write_message
  1967  04A1  3001               	movlw	1
  1968  04A2  0020               	movlb	0	; select bank0
  1969  04A3  07EA               	addwf	SetupGPS@x,f
  1970  04A4  3000               	movlw	0
  1971  04A5  3DEB               	addwfc	SetupGPS@x+1,f
  1972  04A6  086B               	movf	SetupGPS@x+1,w
  1973  04A7  3A80               	xorlw	128
  1974  04A8  00C7               	movwf	??_SetupGPS
  1975  04A9  3080               	movlw	128
  1976  04AA  0247               	subwf	??_SetupGPS,w
  1977  04AB  1D03               	skipz
  1978  04AC  2CAF               	goto	u1185
  1979  04AD  3006               	movlw	6
  1980  04AE  026A               	subwf	SetupGPS@x,w
  1981  04AF                     u1185:	
  1982  04AF  1C03               	skipc
  1983  04B0  2C73               	goto	l1773
  1984  04B1                     l1783:	
  1985                           
  1986                           ;launcher_functions.c: 339: }
  1987                           ;launcher_functions.c: 341: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1988  04B1  3015               	movlw	21
  1989  04B2  0020               	movlb	0	; select bank0
  1990  04B3  00C9               	movwf	??_SetupGPS+2
  1991  04B4  304B               	movlw	75
  1992  04B5  00C8               	movwf	??_SetupGPS+1
  1993  04B6  30D1               	movlw	209
  1994  04B7  00C7               	movwf	??_SetupGPS
  1995  04B8                     u1567:	
  1996  04B8  0BC7               	decfsz	??_SetupGPS,f
  1997  04B9  2CB8               	goto	u1567
  1998  04BA  0BC8               	decfsz	??_SetupGPS+1,f
  1999  04BB  2CB8               	goto	u1567
  2000  04BC  0BC9               	decfsz	??_SetupGPS+2,f
  2001  04BD  2CB8               	goto	u1567
  2002  04BE  0000               	nop
  2003                           
  2004                           ;launcher_functions.c: 343: sprintf(message, "%s%s,01,01,01,00*", startSequence, MID);
  2005  04BF  301D               	movlw	low (STR_2| (0+32768))
  2006  04C0  0020               	movlb	0	; select bank0
  2007  04C1  00B4               	movwf	sprintf@f
  2008  04C2  3087               	movlw	high (STR_2| (0+32768))
  2009  04C3  00B5               	movwf	sprintf@f+1
  2010  04C4  3060               	movlw	SetupGPS@startSequence& (0+255)
  2011  04C5  00C7               	movwf	??_SetupGPS
  2012  04C6  0847               	movf	??_SetupGPS,w
  2013  04C7  00B6               	movwf	?_sprintf+2
  2014  04C8  3066               	movlw	SetupGPS@MID& (0+255)
  2015  04C9  00C8               	movwf	??_SetupGPS+1
  2016  04CA  0848               	movf	??_SetupGPS+1,w
  2017  04CB  00B7               	movwf	?_sprintf+3
  2018  04CC  304A               	movlw	SetupGPS@message& (0+255)
  2019  04CD  3183  2341  3184   	fcall	_sprintf
  2020                           
  2021                           ;launcher_functions.c: 344: uart_write_message(message, 22);
  2022  04D0  3016               	movlw	22
  2023  04D1  0020               	movlb	0	; select bank0
  2024  04D2  00A8               	movwf	uart_write_message@size
  2025  04D3  3000               	movlw	0
  2026  04D4  00A9               	movwf	uart_write_message@size+1
  2027  04D5  304A               	movlw	SetupGPS@message& (0+255)
  2028  04D6  3185  2555         	fcall	_uart_write_message
  2029  04D8  0008               	return
  2030  04D9                     __end_of_SetupGPS:	
  2031                           
  2032                           	psect	text5
  2033  0555                     __ptext5:	
  2034 ;; *************** function _uart_write_message *****************
  2035 ;; Defined at:
  2036 ;;		line 281 in file "launcher_functions.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  data            1    wreg     PTR unsigned char 
  2039 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2040 ;;  size            2    8[BANK0 ] int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  data            1   20[BANK0 ] PTR unsigned char 
  2043 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2044 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  2045 ;;  x               2   17[BANK0 ] int 
  2046 ;;  checksum        1   19[BANK0 ] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;		None               void
  2049 ;; Registers used:
  2050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2056 ;;      Params:         0       2       0       0       0       0       0
  2057 ;;      Locals:         0      10       0       0       0       0       0
  2058 ;;      Temps:          0       3       0       0       0       0       0
  2059 ;;      Totals:         0      15       0       0       0       0       0
  2060 ;;Total ram usage:       15 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    3
  2063 ;; This function calls:
  2064 ;;		_compute_checksum
  2065 ;;		_uart_xmit
  2066 ;; This function is called by:
  2067 ;;		_SetupGPS
  2068 ;;		_UpdateGPS
  2069 ;;		_DisableGPS
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _uart_write_message
  2075  0555                     _uart_write_message:	
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2079                           ;uart_write_message@data stored from wreg
  2080  0555  0020               	movlb	0	; select bank0
  2081  0556  00B4               	movwf	uart_write_message@data
  2082                           
  2083                           ;launcher_functions.c: 283: int x;
  2084                           ;launcher_functions.c: 284: unsigned char checksum;
  2085                           ;launcher_functions.c: 285: unsigned char ascii_checksum[2];
  2086                           ;launcher_functions.c: 287: checksum = compute_checksum(data, size);
  2087  0557  0829               	movf	uart_write_message@size+1,w
  2088  0558  01A1               	clrf	compute_checksum@size+1
  2089  0559  07A1               	addwf	compute_checksum@size+1,f
  2090  055A  0828               	movf	uart_write_message@size,w
  2091  055B  01A0               	clrf	compute_checksum@size
  2092  055C  07A0               	addwf	compute_checksum@size,f
  2093  055D  0834               	movf	uart_write_message@data,w
  2094  055E  3185  25C7  3185   	fcall	_compute_checksum
  2095  0561  0020               	movlb	0	; select bank0
  2096  0562  00AA               	movwf	??_uart_write_message
  2097  0563  082A               	movf	??_uart_write_message,w
  2098  0564  00B3               	movwf	uart_write_message@checksum
  2099                           
  2100                           ;launcher_functions.c: 288: ascii_checksum[0] = checksum >> 4;
  2101  0565  0833               	movf	uart_write_message@checksum,w
  2102  0566  00AA               	movwf	??_uart_write_message
  2103  0567  3004               	movlw	4
  2104  0568                     u985:	
  2105  0568  36AA               	lsrf	??_uart_write_message,f
  2106  0569  0B89               	decfsz	9,f
  2107  056A  2D68               	goto	u985
  2108  056B  082A               	movf	??_uart_write_message,w
  2109  056C  00AB               	movwf	??_uart_write_message+1
  2110  056D  082B               	movf	??_uart_write_message+1,w
  2111  056E  00B5               	movwf	uart_write_message@ascii_checksum
  2112                           
  2113                           ;launcher_functions.c: 289: ascii_checksum[1] = checksum & 0x0F;
  2114  056F  0833               	movf	uart_write_message@checksum,w
  2115  0570  390F               	andlw	15
  2116  0571  00AA               	movwf	??_uart_write_message
  2117  0572  082A               	movf	??_uart_write_message,w
  2118  0573  00B6               	movwf	uart_write_message@ascii_checksum+1
  2119                           
  2120                           ;launcher_functions.c: 291: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  2121  0574  300A               	movlw	10
  2122  0575  0235               	subwf	uart_write_message@ascii_checksum,w
  2123  0576  1C03               	skipc
  2124  0577  2D7A               	goto	l1529
  2125  0578  3037               	movlw	55
  2126  0579  2D7B               	goto	L2
  2127  057A                     l1529:	
  2128  057A  3030               	movlw	48
  2129  057B                     L2:	
  2130  057B  00AD               	movwf	_uart_write_message$1094
  2131  057C  3000               	movlw	0
  2132  057D  00AE               	movwf	_uart_write_message$1094+1
  2133  057E  082D               	movf	_uart_write_message$1094,w
  2134  057F  00AA               	movwf	??_uart_write_message
  2135  0580  082A               	movf	??_uart_write_message,w
  2136  0581  07B5               	addwf	uart_write_message@ascii_checksum,f
  2137                           
  2138                           ;launcher_functions.c: 292: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  2139  0582  300A               	movlw	10
  2140  0583  0236               	subwf	uart_write_message@ascii_checksum+1,w
  2141  0584  1C03               	skipc
  2142  0585  2D88               	goto	l1537
  2143  0586  3037               	movlw	55
  2144  0587  2D89               	goto	L3
  2145  0588                     l1537:	
  2146  0588  3030               	movlw	48
  2147  0589                     L3:	
  2148  0589  00AF               	movwf	_uart_write_message$1095
  2149  058A  3000               	movlw	0
  2150  058B  00B0               	movwf	_uart_write_message$1095+1
  2151  058C  082F               	movf	_uart_write_message$1095,w
  2152  058D  00AA               	movwf	??_uart_write_message
  2153  058E  082A               	movf	??_uart_write_message,w
  2154  058F  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  2155                           
  2156                           ;launcher_functions.c: 294: for(x=0; x<size-1; x++)
  2157  0590  01B1               	clrf	uart_write_message@x
  2158  0591  01B2               	clrf	uart_write_message@x+1
  2159  0592                     l1547:	
  2160  0592  0828               	movf	uart_write_message@size,w
  2161  0593  3EFF               	addlw	255
  2162  0594  00AA               	movwf	??_uart_write_message
  2163  0595  30FF               	movlw	255
  2164  0596  3D29               	addwfc	uart_write_message@size+1,w
  2165  0597  00AB               	movwf	??_uart_write_message+1
  2166  0598  0832               	movf	uart_write_message@x+1,w
  2167  0599  3A80               	xorlw	128
  2168  059A  00AC               	movwf	??_uart_write_message+2
  2169  059B  082B               	movf	??_uart_write_message+1,w
  2170  059C  3A80               	xorlw	128
  2171  059D  022C               	subwf	??_uart_write_message+2,w
  2172  059E  1D03               	skipz
  2173  059F  2DA2               	goto	u1015
  2174  05A0  082A               	movf	??_uart_write_message,w
  2175  05A1  0231               	subwf	uart_write_message@x,w
  2176  05A2                     u1015:	
  2177  05A2  1803               	btfsc	3,0
  2178  05A3  2DB5               	goto	l1549
  2179                           
  2180                           ;launcher_functions.c: 295: {
  2181                           ;launcher_functions.c: 296: uart_xmit(data[x]);
  2182  05A4  0020               	movlb	0	; select bank0
  2183  05A5  0831               	movf	uart_write_message@x,w
  2184  05A6  0734               	addwf	uart_write_message@data,w
  2185  05A7  00AA               	movwf	??_uart_write_message
  2186  05A8  082A               	movf	??_uart_write_message,w
  2187  05A9  0086               	movwf	6
  2188  05AA  0187               	clrf	7
  2189  05AB  0801               	movf	1,w
  2190  05AC  3186  26BD  3185   	fcall	_uart_xmit
  2191  05AF  3001               	movlw	1
  2192  05B0  0020               	movlb	0	; select bank0
  2193  05B1  07B1               	addwf	uart_write_message@x,f
  2194  05B2  3000               	movlw	0
  2195  05B3  3DB2               	addwfc	uart_write_message@x+1,f
  2196  05B4  2D92               	goto	l1547
  2197  05B5                     l1549:	
  2198                           
  2199                           ;launcher_functions.c: 297: }
  2200                           ;launcher_functions.c: 298: uart_xmit(ascii_checksum[0]);
  2201  05B5  0020               	movlb	0	; select bank0
  2202  05B6  0835               	movf	uart_write_message@ascii_checksum,w
  2203  05B7  3186  26BD  3185   	fcall	_uart_xmit
  2204                           
  2205                           ;launcher_functions.c: 299: uart_xmit(ascii_checksum[1]);
  2206  05BA  0020               	movlb	0	; select bank0
  2207  05BB  0836               	movf	uart_write_message@ascii_checksum+1,w
  2208  05BC  3186  26BD  3185   	fcall	_uart_xmit
  2209                           
  2210                           ;launcher_functions.c: 301: uart_xmit(0x0D);
  2211  05BF  300D               	movlw	13
  2212  05C0  3186  26BD  3185   	fcall	_uart_xmit
  2213                           
  2214                           ;launcher_functions.c: 302: uart_xmit(0x0A);
  2215  05C3  300A               	movlw	10
  2216  05C4  3186  26BD         	fcall	_uart_xmit
  2217  05C6  0008               	return
  2218  05C7                     __end_of_uart_write_message:	
  2219                           
  2220                           	psect	text6
  2221  06BD                     __ptext6:	
  2222 ;; *************** function _uart_xmit *****************
  2223 ;; Defined at:
  2224 ;;		line 273 in file "launcher_functions.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  mydata_byte     1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;		None               void
  2231 ;; Registers used:
  2232 ;;		wreg
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2238 ;;      Params:         0       0       0       0       0       0       0
  2239 ;;      Locals:         0       1       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0
  2241 ;;      Totals:         0       1       0       0       0       0       0
  2242 ;;Total ram usage:        1 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    2
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_uart_write_message
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _uart_xmit
  2254  06BD                     _uart_xmit:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _uart_xmit: [wreg]
  2258                           ;uart_xmit@mydata_byte stored from wreg
  2259  06BD  0020               	movlb	0	; select bank0
  2260  06BE  00A0               	movwf	uart_xmit@mydata_byte
  2261  06BF                     l263:	
  2262                           ;launcher_functions.c: 276: while(!TXSTAbits.TRMT);
  2263                           
  2264  06BF  0023               	movlb	3	; select bank3
  2265  06C0  1C9E               	btfss	30,1	;volatile
  2266  06C1  2EBF               	goto	l263
  2267                           
  2268                           ;launcher_functions.c: 277: TXREG = mydata_byte;
  2269  06C2  0020               	movlb	0	; select bank0
  2270  06C3  0820               	movf	uart_xmit@mydata_byte,w
  2271  06C4  0023               	movlb	3	; select bank3
  2272  06C5  009A               	movwf	26	;volatile
  2273  06C6  0008               	return
  2274  06C7                     __end_of_uart_xmit:	
  2275                           
  2276                           	psect	text7
  2277  05C7                     __ptext7:	
  2278 ;; *************** function _compute_checksum *****************
  2279 ;; Defined at:
  2280 ;;		line 262 in file "launcher_functions.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  data            1    wreg     PTR unsigned char 
  2283 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2284 ;;  size            2    0[BANK0 ] int 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  data            1    5[BANK0 ] PTR unsigned char 
  2287 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  2288 ;;  x               2    6[BANK0 ] int 
  2289 ;;  checksum        1    4[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      unsigned char 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2299 ;;      Params:         0       2       0       0       0       0       0
  2300 ;;      Locals:         0       4       0       0       0       0       0
  2301 ;;      Temps:          0       2       0       0       0       0       0
  2302 ;;      Totals:         0       8       0       0       0       0       0
  2303 ;;Total ram usage:        8 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_uart_write_message
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _compute_checksum
  2315  05C7                     _compute_checksum:	
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  2319                           ;compute_checksum@data stored from wreg
  2320  05C7  0020               	movlb	0	; select bank0
  2321  05C8  00A5               	movwf	compute_checksum@data
  2322                           
  2323                           ;launcher_functions.c: 264: unsigned char checksum = 0;
  2324  05C9  01A4               	clrf	compute_checksum@checksum
  2325                           
  2326                           ;launcher_functions.c: 265: int x;
  2327                           ;launcher_functions.c: 266: for(x=0; x<size; x++)
  2328  05CA  01A6               	clrf	compute_checksum@x
  2329  05CB  01A7               	clrf	compute_checksum@x+1
  2330  05CC                     l1461:	
  2331  05CC  0827               	movf	compute_checksum@x+1,w
  2332  05CD  3A80               	xorlw	128
  2333  05CE  00A2               	movwf	??_compute_checksum
  2334  05CF  0821               	movf	compute_checksum@size+1,w
  2335  05D0  3A80               	xorlw	128
  2336  05D1  0222               	subwf	??_compute_checksum,w
  2337  05D2  1D03               	skipz
  2338  05D3  2DD6               	goto	u835
  2339  05D4  0820               	movf	compute_checksum@size,w
  2340  05D5  0226               	subwf	compute_checksum@x,w
  2341  05D6                     u835:	
  2342  05D6  1803               	btfsc	3,0
  2343  05D7  2E06               	goto	l1463
  2344                           
  2345                           ;launcher_functions.c: 267: {
  2346                           ;launcher_functions.c: 268: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  2347  05D8  0020               	movlb	0	; select bank0
  2348  05D9  0826               	movf	compute_checksum@x,w
  2349  05DA  0725               	addwf	compute_checksum@data,w
  2350  05DB  00A2               	movwf	??_compute_checksum
  2351  05DC  0822               	movf	??_compute_checksum,w
  2352  05DD  0086               	movwf	6
  2353  05DE  0187               	clrf	7
  2354  05DF  0801               	movf	1,w
  2355  05E0  3A24               	xorlw	36
  2356  05E1  1903               	skipnz
  2357  05E2  2E01               	goto	l1459
  2358  05E3  0826               	movf	compute_checksum@x,w
  2359  05E4  0725               	addwf	compute_checksum@data,w
  2360  05E5  00A2               	movwf	??_compute_checksum
  2361  05E6  0822               	movf	??_compute_checksum,w
  2362  05E7  0086               	movwf	6
  2363  05E8  0187               	clrf	7
  2364  05E9  0801               	movf	1,w
  2365  05EA  3A2A               	xorlw	42
  2366  05EB  1903               	skipnz
  2367  05EC  2E01               	goto	l1459
  2368  05ED  0826               	movf	compute_checksum@x,w
  2369  05EE  0725               	addwf	compute_checksum@data,w
  2370  05EF  00A2               	movwf	??_compute_checksum
  2371  05F0  0822               	movf	??_compute_checksum,w
  2372  05F1  0086               	movwf	6
  2373  05F2  0187               	clrf	7
  2374  05F3  0801               	movf	1,w
  2375  05F4  3A21               	xorlw	33
  2376  05F5  1903               	skipnz
  2377  05F6  2E01               	goto	l1459
  2378                           
  2379                           ;launcher_functions.c: 269: checksum ^= data[x];
  2380  05F7  0826               	movf	compute_checksum@x,w
  2381  05F8  0725               	addwf	compute_checksum@data,w
  2382  05F9  00A2               	movwf	??_compute_checksum
  2383  05FA  0822               	movf	??_compute_checksum,w
  2384  05FB  0086               	movwf	6
  2385  05FC  0187               	clrf	7
  2386  05FD  0801               	movf	1,w
  2387  05FE  00A3               	movwf	??_compute_checksum+1
  2388  05FF  0823               	movf	??_compute_checksum+1,w
  2389  0600  06A4               	xorwf	compute_checksum@checksum,f
  2390  0601                     l1459:	
  2391  0601  3001               	movlw	1
  2392  0602  07A6               	addwf	compute_checksum@x,f
  2393  0603  3000               	movlw	0
  2394  0604  3DA7               	addwfc	compute_checksum@x+1,f
  2395  0605  2DCC               	goto	l1461
  2396  0606                     l1463:	
  2397                           
  2398                           ;launcher_functions.c: 270: }
  2399                           ;launcher_functions.c: 271: return checksum;
  2400  0606  0020               	movlb	0	; select bank0
  2401  0607  0824               	movf	compute_checksum@checksum,w
  2402  0608  0008               	return
  2403  0609                     __end_of_compute_checksum:	
  2404                           
  2405                           	psect	text8
  2406  0341                     __ptext8:	
  2407 ;; *************** function _sprintf *****************
  2408 ;; Defined at:
  2409 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  sp              1    wreg     PTR unsigned char 
  2412 ;;		 -> SetupGPS@message(22), 
  2413 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  2414 ;;		 -> STR_2(18), STR_1(19), 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  2417 ;;		 -> SetupGPS@message(22), 
  2418 ;;  _val            4   34[BANK0 ] struct .
  2419 ;;  c               1   38[BANK0 ] char 
  2420 ;;  ap              1   32[BANK0 ] PTR void [1]
  2421 ;;		 -> ?_sprintf(2), 
  2422 ;;  prec            1   31[BANK0 ] char 
  2423 ;;  flag            1   30[BANK0 ] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2   20[BANK0 ] int 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2433 ;;      Params:         0       6       0       0       0       0       0
  2434 ;;      Locals:         0       9       0       0       0       0       0
  2435 ;;      Temps:          0       4       0       0       0       0       0
  2436 ;;      Totals:         0      19       0       0       0       0       0
  2437 ;;Total ram usage:       19 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    3
  2440 ;; This function calls:
  2441 ;;		___lwdiv
  2442 ;;		___lwmod
  2443 ;; This function is called by:
  2444 ;;		_SetupGPS
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _sprintf
  2450  0341                     _sprintf:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2454                           ;sprintf@sp stored from wreg
  2455  0341  0020               	movlb	0	; select bank0
  2456  0342  00C1               	movwf	sprintf@sp
  2457                           
  2458                           ;doprnt.c: 494: va_list ap;
  2459                           ;doprnt.c: 499: signed char c;
  2460                           ;doprnt.c: 506: signed char prec;
  2461                           ;doprnt.c: 508: unsigned char flag;
  2462                           ;doprnt.c: 527: union {
  2463                           ;doprnt.c: 528: unsigned int _val;
  2464                           ;doprnt.c: 529: struct {
  2465                           ;doprnt.c: 530: const char * _cp;
  2466                           ;doprnt.c: 531: unsigned _len;
  2467                           ;doprnt.c: 532: } _str;
  2468                           ;doprnt.c: 533: } _val;
  2469                           ;doprnt.c: 542: *ap = __va_start();
  2470  0343  3036               	movlw	(?_sprintf+2)& (0+255)
  2471  0344  00BA               	movwf	??_sprintf
  2472  0345  083A               	movf	??_sprintf,w
  2473  0346  00C0               	movwf	sprintf@ap
  2474  0347                     l1619:	
  2475                           ;doprnt.c: 545: while(c = *f++) {
  2476                           
  2477  0347  0835               	movf	sprintf@f+1,w
  2478  0348  00BB               	movwf	??_sprintf+1
  2479  0349  0834               	movf	sprintf@f,w
  2480  034A  00BA               	movwf	??_sprintf
  2481  034B  0AB4               	incf	sprintf@f,f
  2482  034C  1903               	skipnz
  2483  034D  0AB5               	incf	sprintf@f+1,f
  2484  034E  083A               	movf	??_sprintf,w
  2485  034F  0084               	movwf	4
  2486  0350  083B               	movf	??_sprintf+1,w
  2487  0351  0085               	movwf	5
  2488  0352  0800               	movf	0,w	;code access
  2489  0353  00BC               	movwf	??_sprintf+2
  2490  0354  083C               	movf	??_sprintf+2,w
  2491  0355  00C6               	movwf	sprintf@c
  2492  0356  08C6               	movf	sprintf@c,f
  2493  0357  1903               	btfsc	3,2
  2494  0358  2C42               	goto	l1621
  2495                           
  2496                           ;doprnt.c: 547: if(c != '%')
  2497  0359  0846               	movf	sprintf@c,w
  2498  035A  3A25               	xorlw	37
  2499  035B  1903               	skipnz
  2500  035C  2B69               	goto	l1559
  2501                           
  2502                           ;doprnt.c: 549: {
  2503                           ;doprnt.c: 550: ((*sp++ = (c)));
  2504  035D  0846               	movf	sprintf@c,w
  2505  035E  00BA               	movwf	??_sprintf
  2506  035F  0841               	movf	sprintf@sp,w
  2507  0360  0086               	movwf	6
  2508  0361  0187               	clrf	7
  2509  0362  083A               	movf	??_sprintf,w
  2510  0363  0081               	movwf	1
  2511  0364  3001               	movlw	1
  2512  0365  00BA               	movwf	??_sprintf
  2513  0366  083A               	movf	??_sprintf,w
  2514  0367  07C1               	addwf	sprintf@sp,f
  2515                           
  2516                           ;doprnt.c: 551: continue;
  2517  0368  2B47               	goto	l1619
  2518  0369                     l1559:	
  2519                           
  2520                           ;doprnt.c: 552: }
  2521                           ;doprnt.c: 557: flag = 0;
  2522  0369  01BE               	clrf	sprintf@flag
  2523                           
  2524                           ;doprnt.c: 644: switch(c = *f++) {
  2525  036A  2B9A               	goto	l1579
  2526  036B                     l1561:	
  2527                           ;doprnt.c: 737: case 's':
  2528                           
  2529                           ;doprnt.c: 707: case 'i':
  2530                           ;doprnt.c: 708: break;
  2531                           
  2532                           ;doprnt.c: 706: case 'd':
  2533                           
  2534                           ;doprnt.c: 647: goto alldone;
  2535                           
  2536                           ;doprnt.c: 646: case 0:
  2537                           
  2538                           
  2539                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  2540  036B  0840               	movf	sprintf@ap,w
  2541  036C  0086               	movwf	6
  2542  036D  0187               	clrf	7
  2543  036E  0801               	movf	1,w
  2544  036F  00C2               	movwf	sprintf@_val
  2545  0370  3000               	movlw	0
  2546  0371  00C3               	movwf	sprintf@_val+1
  2547  0372  3001               	movlw	1
  2548  0373  00BA               	movwf	??_sprintf
  2549  0374  083A               	movf	??_sprintf,w
  2550  0375  07C0               	addwf	sprintf@ap,f
  2551                           
  2552                           ;doprnt.c: 749: if(!_val._str._cp)
  2553  0376  0843               	movf	sprintf@_val+1,w
  2554  0377  0442               	iorwf	sprintf@_val,w
  2555  0378  1D03               	skipz
  2556  0379  2B7E               	goto	l1575
  2557                           
  2558                           ;doprnt.c: 750: _val._str._cp = "(null)";
  2559  037A  302F               	movlw	low (STR_3| (0+32768))
  2560  037B  00C2               	movwf	sprintf@_val
  2561  037C  3087               	movlw	high (STR_3| (0+32768))
  2562  037D  00C3               	movwf	sprintf@_val+1
  2563  037E                     l1575:	
  2564                           ;doprnt.c: 786: while(*_val._str._cp)
  2565                           
  2566  037E  0842               	movf	sprintf@_val,w
  2567  037F  0084               	movwf	4
  2568  0380  0843               	movf	sprintf@_val+1,w
  2569  0381  0085               	movwf	5
  2570  0382  0800               	movf	0,w	;code access
  2571  0383  3800               	iorlw	0
  2572  0384  1903               	btfsc	3,2
  2573  0385  2B47               	goto	l1619
  2574                           
  2575                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  2576  0386  0842               	movf	sprintf@_val,w
  2577  0387  0084               	movwf	4
  2578  0388  0843               	movf	sprintf@_val+1,w
  2579  0389  0085               	movwf	5
  2580  038A  0800               	movf	0,w	;code access
  2581  038B  00BA               	movwf	??_sprintf
  2582  038C  0841               	movf	sprintf@sp,w
  2583  038D  0086               	movwf	6
  2584  038E  0187               	clrf	7
  2585  038F  083A               	movf	??_sprintf,w
  2586  0390  0081               	movwf	1
  2587  0391  3001               	movlw	1
  2588  0392  07C2               	addwf	sprintf@_val,f
  2589  0393  3000               	movlw	0
  2590  0394  3DC3               	addwfc	sprintf@_val+1,f
  2591  0395  3001               	movlw	1
  2592  0396  00BA               	movwf	??_sprintf
  2593  0397  083A               	movf	??_sprintf,w
  2594  0398  07C1               	addwf	sprintf@sp,f
  2595  0399  2B7E               	goto	l1575
  2596  039A                     l1579:	
  2597                           ;doprnt.c: 831: }
  2598                           
  2599                           ;doprnt.c: 822: continue;
  2600                           
  2601                           ;doprnt.c: 811: default:
  2602                           
  2603                           ;doprnt.c: 788: continue;
  2604                           
  2605  039A  0835               	movf	sprintf@f+1,w
  2606  039B  00BB               	movwf	??_sprintf+1
  2607  039C  0834               	movf	sprintf@f,w
  2608  039D  00BA               	movwf	??_sprintf
  2609  039E  0AB4               	incf	sprintf@f,f
  2610  039F  1903               	skipnz
  2611  03A0  0AB5               	incf	sprintf@f+1,f
  2612  03A1  083A               	movf	??_sprintf,w
  2613  03A2  0084               	movwf	4
  2614  03A3  083B               	movf	??_sprintf+1,w
  2615  03A4  0085               	movwf	5
  2616  03A5  0800               	movf	0,w	;code access
  2617  03A6  00C6               	movwf	sprintf@c
  2618                           
  2619                           ; Switch size 1, requested type "space"
  2620                           ; Number of cases is 4, Range of values is 0 to 115
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte           13     7 (average)
  2624                           ; direct_byte          238     6 (fixed)
  2625                           ; jumptable            260     6 (fixed)
  2626                           ;	Chosen strategy is simple_byte
  2627  03A7  3A00               	xorlw	0	; case 0
  2628  03A8  1903               	skipnz
  2629  03A9  2C42               	goto	l1621
  2630  03AA  3A64               	xorlw	100	; case 100
  2631  03AB  1903               	skipnz
  2632  03AC  2BB4               	goto	l1581
  2633  03AD  3A0D               	xorlw	13	; case 105
  2634  03AE  1903               	skipnz
  2635  03AF  2BB4               	goto	l1581
  2636  03B0  3A1A               	xorlw	26	; case 115
  2637  03B1  1903               	skipnz
  2638  03B2  2B6B               	goto	l1561
  2639  03B3  2B47               	goto	l1619
  2640  03B4                     l1581:	
  2641                           
  2642                           ;doprnt.c: 1262: {
  2643                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2644  03B4  0840               	movf	sprintf@ap,w
  2645  03B5  0086               	movwf	6
  2646  03B6  0187               	clrf	7
  2647  03B7  3F40               	moviw [0]fsr1
  2648  03B8  00C2               	movwf	sprintf@_val
  2649  03B9  3F41               	moviw [1]fsr1
  2650  03BA  00C3               	movwf	sprintf@_val+1
  2651  03BB  3002               	movlw	2
  2652  03BC  00BA               	movwf	??_sprintf
  2653  03BD  083A               	movf	??_sprintf,w
  2654  03BE  07C0               	addwf	sprintf@ap,f
  2655                           
  2656                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2657  03BF  1FC3               	btfss	sprintf@_val+1,7
  2658  03C0  2BCA               	goto	l1591
  2659                           
  2660                           ;doprnt.c: 1271: flag |= 0x03;
  2661  03C1  3003               	movlw	3
  2662  03C2  00BA               	movwf	??_sprintf
  2663  03C3  083A               	movf	??_sprintf,w
  2664  03C4  04BE               	iorwf	sprintf@flag,f
  2665                           
  2666                           ;doprnt.c: 1272: _val._val = -_val._val;
  2667  03C5  09C2               	comf	sprintf@_val,f
  2668  03C6  09C3               	comf	sprintf@_val+1,f
  2669  03C7  0AC2               	incf	sprintf@_val,f
  2670  03C8  1903               	skipnz
  2671  03C9  0AC3               	incf	sprintf@_val+1,f
  2672  03CA                     l1591:	
  2673                           
  2674                           ;doprnt.c: 1273: }
  2675                           ;doprnt.c: 1275: }
  2676                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2677  03CA  01C6               	clrf	sprintf@c
  2678  03CB  0AC6               	incf	sprintf@c,f
  2679  03CC  0846               	movf	sprintf@c,w
  2680  03CD  3A05               	xorlw	5
  2681  03CE  1903               	btfsc	3,2
  2682  03CF  2BEF               	goto	l1603
  2683  03D0                     l1595:	
  2684                           
  2685                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2686  03D0  0846               	movf	sprintf@c,w
  2687  03D1  00BA               	movwf	??_sprintf
  2688  03D2  01BB               	clrf	??_sprintf+1
  2689  03D3  35BA               	lslf	??_sprintf,f
  2690  03D4  0DBB               	rlf	??_sprintf+1,f
  2691  03D5  3000               	movlw	low (_dpowers| (0+32768))
  2692  03D6  073A               	addwf	??_sprintf,w
  2693  03D7  0084               	movwf	4
  2694  03D8  3087               	movlw	high (_dpowers| (0+32768))
  2695  03D9  3D3B               	addwfc	??_sprintf+1,w
  2696  03DA  0085               	movwf	5
  2697  03DB  3F00               	moviw [0]fsr0
  2698  03DC  00BC               	movwf	??_sprintf+2
  2699  03DD  3F01               	moviw [1]fsr0
  2700  03DE  00BD               	movwf	??_sprintf+3
  2701  03DF  083D               	movf	??_sprintf+3,w
  2702  03E0  0243               	subwf	sprintf@_val+1,w
  2703  03E1  1D03               	skipz
  2704  03E2  2BE5               	goto	u1075
  2705  03E3  083C               	movf	??_sprintf+2,w
  2706  03E4  0242               	subwf	sprintf@_val,w
  2707  03E5                     u1075:	
  2708  03E5  1C03               	btfss	3,0
  2709  03E6  2BEF               	goto	l1603
  2710                           
  2711                           ;doprnt.c: 1316: break;
  2712  03E7  3001               	movlw	1
  2713  03E8  00BA               	movwf	??_sprintf
  2714  03E9  083A               	movf	??_sprintf,w
  2715  03EA  07C6               	addwf	sprintf@c,f
  2716  03EB  0846               	movf	sprintf@c,w
  2717  03EC  3A05               	xorlw	5
  2718  03ED  1D03               	skipz
  2719  03EE  2BD0               	goto	l1595
  2720  03EF                     l1603:	
  2721                           
  2722                           ;doprnt.c: 1431: {
  2723                           ;doprnt.c: 1447: if(flag & 0x03)
  2724  03EF  083E               	movf	sprintf@flag,w
  2725  03F0  3903               	andlw	3
  2726  03F1  1903               	btfsc	3,2
  2727  03F2  2BFE               	goto	l1609
  2728                           
  2729                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2730  03F3  302D               	movlw	45
  2731  03F4  00BA               	movwf	??_sprintf
  2732  03F5  0841               	movf	sprintf@sp,w
  2733  03F6  0086               	movwf	6
  2734  03F7  0187               	clrf	7
  2735  03F8  083A               	movf	??_sprintf,w
  2736  03F9  0081               	movwf	1
  2737  03FA  3001               	movlw	1
  2738  03FB  00BA               	movwf	??_sprintf
  2739  03FC  083A               	movf	??_sprintf,w
  2740  03FD  07C1               	addwf	sprintf@sp,f
  2741  03FE                     l1609:	
  2742                           
  2743                           ;doprnt.c: 1478: }
  2744                           ;doprnt.c: 1481: prec = c;
  2745  03FE  0846               	movf	sprintf@c,w
  2746  03FF  00BA               	movwf	??_sprintf
  2747  0400  083A               	movf	??_sprintf,w
  2748  0401  00BF               	movwf	sprintf@prec
  2749  0402                     l1617:	
  2750                           ;doprnt.c: 1483: while(prec--) {
  2751                           
  2752  0402  30FF               	movlw	-1
  2753  0403  00BA               	movwf	??_sprintf
  2754  0404  083A               	movf	??_sprintf,w
  2755  0405  07BF               	addwf	sprintf@prec,f
  2756  0406  083F               	movf	sprintf@prec,w
  2757  0407  3AFF               	xorlw	255
  2758  0408  1903               	btfsc	3,2
  2759  0409  2B47               	goto	l1619
  2760                           
  2761                           ;doprnt.c: 1487: {
  2762                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2763  040A  300A               	movlw	10
  2764  040B  00AE               	movwf	___lwmod@divisor
  2765  040C  3000               	movlw	0
  2766  040D  00AF               	movwf	___lwmod@divisor+1
  2767  040E  083F               	movf	sprintf@prec,w
  2768  040F  00BA               	movwf	??_sprintf
  2769  0410  01BB               	clrf	??_sprintf+1
  2770  0411  35BA               	lslf	??_sprintf,f
  2771  0412  0DBB               	rlf	??_sprintf+1,f
  2772  0413  3000               	movlw	low (_dpowers| (0+32768))
  2773  0414  073A               	addwf	??_sprintf,w
  2774  0415  0084               	movwf	4
  2775  0416  3087               	movlw	high (_dpowers| (0+32768))
  2776  0417  3D3B               	addwfc	??_sprintf+1,w
  2777  0418  0085               	movwf	5
  2778  0419  3F00               	moviw [0]fsr0
  2779  041A  00A6               	movwf	___lwdiv@divisor
  2780  041B  3F01               	moviw [1]fsr0
  2781  041C  00A7               	movwf	___lwdiv@divisor+1
  2782  041D  0843               	movf	sprintf@_val+1,w
  2783  041E  01A9               	clrf	___lwdiv@dividend+1
  2784  041F  07A9               	addwf	___lwdiv@dividend+1,f
  2785  0420  0842               	movf	sprintf@_val,w
  2786  0421  01A8               	clrf	___lwdiv@dividend
  2787  0422  07A8               	addwf	___lwdiv@dividend,f
  2788  0423  3186  2609  3183   	fcall	___lwdiv
  2789  0426  0020               	movlb	0	; select bank0
  2790  0427  0827               	movf	?___lwdiv+1,w
  2791  0428  01B1               	clrf	___lwmod@dividend+1
  2792  0429  07B1               	addwf	___lwmod@dividend+1,f
  2793  042A  0826               	movf	?___lwdiv,w
  2794  042B  01B0               	clrf	___lwmod@dividend
  2795  042C  07B0               	addwf	___lwmod@dividend,f
  2796  042D  3187  2736  3183   	fcall	___lwmod
  2797  0430  0020               	movlb	0	; select bank0
  2798  0431  082E               	movf	?___lwmod,w
  2799  0432  3E30               	addlw	48
  2800  0433  00BC               	movwf	??_sprintf+2
  2801  0434  083C               	movf	??_sprintf+2,w
  2802  0435  00C6               	movwf	sprintf@c
  2803                           
  2804                           ;doprnt.c: 1532: }
  2805                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2806  0436  0846               	movf	sprintf@c,w
  2807  0437  00BA               	movwf	??_sprintf
  2808  0438  0841               	movf	sprintf@sp,w
  2809  0439  0086               	movwf	6
  2810  043A  0187               	clrf	7
  2811  043B  083A               	movf	??_sprintf,w
  2812  043C  0081               	movwf	1
  2813  043D  3001               	movlw	1
  2814  043E  00BA               	movwf	??_sprintf
  2815  043F  083A               	movf	??_sprintf,w
  2816  0440  07C1               	addwf	sprintf@sp,f
  2817  0441  2C02               	goto	l1617
  2818  0442                     l1621:	
  2819                           ;doprnt.c: 1534: }
  2820                           ;doprnt.c: 1542: }
  2821                           ;doprnt.c: 1544: alldone:
  2822                           
  2823                           
  2824                           ;doprnt.c: 1547: *sp = 0;
  2825  0442  0841               	movf	sprintf@sp,w
  2826  0443  0086               	movwf	6
  2827  0444  0187               	clrf	7
  2828  0445  0181               	clrf	1
  2829  0446  0008               	return
  2830  0447                     __end_of_sprintf:	
  2831                           ;doprnt.c: 1549: return 0;
  2832                           ;	Return value of _sprintf is never used
  2833                           
  2834                           
  2835                           	psect	text9
  2836  0736                     __ptext9:	
  2837 ;; *************** function ___lwmod *****************
  2838 ;; Defined at:
  2839 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  divisor         2   14[BANK0 ] unsigned int 
  2842 ;;  dividend        2   16[BANK0 ] unsigned int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  counter         1   19[BANK0 ] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  2   14[BANK0 ] unsigned int 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2854 ;;      Params:         0       4       0       0       0       0       0
  2855 ;;      Locals:         0       1       0       0       0       0       0
  2856 ;;      Temps:          0       1       0       0       0       0       0
  2857 ;;      Totals:         0       6       0       0       0       0       0
  2858 ;;Total ram usage:        6 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    2
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_sprintf
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function ___lwmod
  2870  0736                     ___lwmod:	
  2871                           
  2872                           ;incstack = 0
  2873                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2874  0736  0020               	movlb	0	; select bank0
  2875  0737  082F               	movf	___lwmod@divisor+1,w
  2876  0738  042E               	iorwf	___lwmod@divisor,w
  2877  0739  1903               	skipnz
  2878  073A  2F5E               	goto	l1515
  2879  073B  01B3               	clrf	___lwmod@counter
  2880  073C  0AB3               	incf	___lwmod@counter,f
  2881  073D                     l1505:	
  2882  073D  1BAF               	btfsc	___lwmod@divisor+1,7
  2883  073E  2F49               	goto	l1507
  2884  073F  3001               	movlw	1
  2885  0740                     u935:	
  2886  0740  35AE               	lslf	___lwmod@divisor,f
  2887  0741  0DAF               	rlf	___lwmod@divisor+1,f
  2888  0742  0B89               	decfsz	9,f
  2889  0743  2F40               	goto	u935
  2890  0744  3001               	movlw	1
  2891  0745  00B2               	movwf	??___lwmod
  2892  0746  0832               	movf	??___lwmod,w
  2893  0747  07B3               	addwf	___lwmod@counter,f
  2894  0748  2F3D               	goto	l1505
  2895  0749                     l1507:	
  2896  0749  082F               	movf	___lwmod@divisor+1,w
  2897  074A  0231               	subwf	___lwmod@dividend+1,w
  2898  074B  1D03               	skipz
  2899  074C  2F4F               	goto	u955
  2900  074D  082E               	movf	___lwmod@divisor,w
  2901  074E  0230               	subwf	___lwmod@dividend,w
  2902  074F                     u955:	
  2903  074F  1C03               	skipc
  2904  0750  2F55               	goto	l1511
  2905  0751  082E               	movf	___lwmod@divisor,w
  2906  0752  02B0               	subwf	___lwmod@dividend,f
  2907  0753  082F               	movf	___lwmod@divisor+1,w
  2908  0754  3BB1               	subwfb	___lwmod@dividend+1,f
  2909  0755                     l1511:	
  2910  0755  3001               	movlw	1
  2911  0756                     u965:	
  2912  0756  36AF               	lsrf	___lwmod@divisor+1,f
  2913  0757  0CAE               	rrf	___lwmod@divisor,f
  2914  0758  0B89               	decfsz	9,f
  2915  0759  2F56               	goto	u965
  2916  075A  3001               	movlw	1
  2917  075B  02B3               	subwf	___lwmod@counter,f
  2918  075C  1D03               	btfss	3,2
  2919  075D  2F49               	goto	l1507
  2920  075E                     l1515:	
  2921  075E  0831               	movf	___lwmod@dividend+1,w
  2922  075F  01AF               	clrf	?___lwmod+1
  2923  0760  07AF               	addwf	?___lwmod+1,f
  2924  0761  0830               	movf	___lwmod@dividend,w
  2925  0762  01AE               	clrf	?___lwmod
  2926  0763  07AE               	addwf	?___lwmod,f
  2927  0764  0008               	return
  2928  0765                     __end_of___lwmod:	
  2929                           
  2930                           	psect	text10
  2931  06CF                     __ptext10:	
  2932 ;; *************** function _InitWatchdog *****************
  2933 ;; Defined at:
  2934 ;;		line 119 in file "launcher_functions.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;		None               void
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2948 ;;      Params:         0       0       0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    2
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _InitWatchdog
  2964  06CF                     _InitWatchdog:	
  2965                           
  2966                           ;launcher_functions.c: 122: WDTCONbits.WDTPS = 0x0A;
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  2970  06CF  0021               	movlb	1	; select bank1
  2971  06D0  0817               	movf	23,w	;volatile
  2972  06D1  39C1               	andlw	-63
  2973  06D2  3814               	iorlw	20
  2974  06D3  0097               	movwf	23	;volatile
  2975                           
  2976                           ;launcher_functions.c: 123: WDTCONbits.SWDTEN = 0;
  2977  06D4  1017               	bcf	23,0	;volatile
  2978  06D5  0008               	return
  2979  06D6                     __end_of_InitWatchdog:	
  2980                           
  2981                           	psect	text11
  2982  06AE                     __ptext11:	
  2983 ;; *************** function _InitTimer1 *****************
  2984 ;; Defined at:
  2985 ;;		line 88 in file "launcher_functions.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;		None               void
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2999 ;;      Params:         0       0       0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    2
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           
  3014                           ;psect for function _InitTimer1
  3015  06AE                     _InitTimer1:	
  3016                           
  3017                           ;launcher_functions.c: 90: T1CONbits.TMR1CS = 0;
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  3021  06AE  303F               	movlw	-193
  3022  06AF  0020               	movlb	0	; select bank0
  3023  06B0  0598               	andwf	24,f	;volatile
  3024                           
  3025                           ;launcher_functions.c: 91: T1CONbits.T1CKPS = 2;
  3026  06B1  0818               	movf	24,w	;volatile
  3027  06B2  39CF               	andlw	-49
  3028  06B3  3820               	iorlw	32
  3029  06B4  0098               	movwf	24	;volatile
  3030                           
  3031                           ;launcher_functions.c: 92: T1CONbits.nT1SYNC = 1;
  3032  06B5  1518               	bsf	24,2	;volatile
  3033                           
  3034                           ;launcher_functions.c: 93: T1GCONbits.TMR1GE = 0;
  3035  06B6  1399               	bcf	25,7	;volatile
  3036                           
  3037                           ;launcher_functions.c: 94: TMR1H = 0xFF;
  3038  06B7  30FF               	movlw	255
  3039  06B8  0097               	movwf	23	;volatile
  3040                           
  3041                           ;launcher_functions.c: 95: TMR1L = 0xCD;
  3042  06B9  30CD               	movlw	205
  3043  06BA  0096               	movwf	22	;volatile
  3044                           
  3045                           ;launcher_functions.c: 96: T1CONbits.TMR1ON = 1;
  3046  06BB  1418               	bsf	24,0	;volatile
  3047  06BC  0008               	return
  3048  06BD                     __end_of_InitTimer1:	
  3049                           
  3050                           	psect	text12
  3051  068D                     __ptext12:	
  3052 ;; *************** function _InitSPI *****************
  3053 ;; Defined at:
  3054 ;;		line 100 in file "launcher_functions.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3068 ;;      Params:         0       0       0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    2
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _InitSPI
  3084  068D                     _InitSPI:	
  3085                           
  3086                           ;launcher_functions.c: 103: TRISCbits.TRISC2 = 0;
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  3090  068D  0021               	movlb	1	; select bank1
  3091  068E  110E               	bcf	14,2	;volatile
  3092                           
  3093                           ;launcher_functions.c: 104: TRISCbits.TRISC3 = 0;
  3094  068F  118E               	bcf	14,3	;volatile
  3095                           
  3096                           ;launcher_functions.c: 105: TRISCbits.TRISC4 = 1;
  3097  0690  160E               	bsf	14,4	;volatile
  3098                           
  3099                           ;launcher_functions.c: 106: TRISCbits.TRISC5 = 0;
  3100  0691  128E               	bcf	14,5	;volatile
  3101                           
  3102                           ;launcher_functions.c: 108: LATC2 = 0;
  3103  0692  0022               	movlb	2	; select bank2
  3104  0693  110E               	bcf	14,2	;volatile
  3105                           
  3106                           ;launcher_functions.c: 111: SSPCON1bits.SSPEN=0x00;
  3107  0694  0024               	movlb	4	; select bank4
  3108  0695  1295               	bcf	21,5	;volatile
  3109                           
  3110                           ;launcher_functions.c: 112: SSPCON1bits.SSPM=0x01;
  3111  0696  0815               	movf	21,w	;volatile
  3112  0697  39F0               	andlw	-16
  3113  0698  3801               	iorlw	1
  3114  0699  0095               	movwf	21	;volatile
  3115                           
  3116                           ;launcher_functions.c: 113: SSPCON1bits.CKP=0;
  3117  069A  1215               	bcf	21,4	;volatile
  3118                           
  3119                           ;launcher_functions.c: 114: SSPSTATbits.CKE=1;
  3120  069B  1714               	bsf	20,6	;volatile
  3121                           
  3122                           ;launcher_functions.c: 115: SSPSTATbits.SMP=0;
  3123  069C  1394               	bcf	20,7	;volatile
  3124                           
  3125                           ;launcher_functions.c: 116: SSPCON1bits.SSPEN=0x01;
  3126  069D  1695               	bsf	21,5	;volatile
  3127  069E  0008               	return
  3128  069F                     __end_of_InitSPI:	
  3129                           
  3130                           	psect	text13
  3131  078F                     __ptext13:	
  3132 ;; *************** function _InitGPIO *****************
  3133 ;; Defined at:
  3134 ;;		line 13 in file "launcher_functions.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;		None               void
  3141 ;; Registers used:
  3142 ;;		status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3148 ;;      Params:         0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    2
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function _InitGPIO
  3164  078F                     _InitGPIO:	
  3165                           
  3166                           ;launcher_functions.c: 18: TRISBbits.TRISB3 = 1;
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _InitGPIO: [status,2]
  3170  078F  0021               	movlb	1	; select bank1
  3171  0790  158D               	bsf	13,3	;volatile
  3172                           
  3173                           ;launcher_functions.c: 19: ANSELBbits.ANSB3 = 0;
  3174  0791  0023               	movlb	3	; select bank3
  3175  0792  118D               	bcf	13,3	;volatile
  3176                           
  3177                           ;launcher_functions.c: 20: IOCBNbits.IOCBN3 = 1;
  3178  0793  0027               	movlb	7	; select bank7
  3179  0794  1595               	bsf	21,3	;volatile
  3180                           
  3181                           ;launcher_functions.c: 21: IOCBPbits.IOCBP3 = 1;
  3182  0795  1594               	bsf	20,3	;volatile
  3183                           
  3184                           ;launcher_functions.c: 22: IOCBF = 0x00;
  3185  0796  0196               	clrf	22	;volatile
  3186                           
  3187                           ;launcher_functions.c: 23: INTCONbits.IOCIE = 1;
  3188  0797  158B               	bsf	11,3	;volatile
  3189                           
  3190                           ;launcher_functions.c: 26: TRISAbits.TRISA0 = 1;
  3191  0798  0021               	movlb	1	; select bank1
  3192  0799  140C               	bsf	12,0	;volatile
  3193                           
  3194                           ;launcher_functions.c: 27: TRISAbits.TRISA1 = 1;
  3195  079A  148C               	bsf	12,1	;volatile
  3196                           
  3197                           ;launcher_functions.c: 28: TRISAbits.TRISA2 = 1;
  3198  079B  150C               	bsf	12,2	;volatile
  3199                           
  3200                           ;launcher_functions.c: 29: TRISAbits.TRISA3 = 1;
  3201  079C  158C               	bsf	12,3	;volatile
  3202                           
  3203                           ;launcher_functions.c: 30: TRISAbits.TRISA4 = 0;
  3204  079D  120C               	bcf	12,4	;volatile
  3205                           
  3206                           ;launcher_functions.c: 31: TRISAbits.TRISA5 = 0;
  3207  079E  128C               	bcf	12,5	;volatile
  3208                           
  3209                           ;launcher_functions.c: 32: TRISAbits.TRISA6 = 0;
  3210  079F  130C               	bcf	12,6	;volatile
  3211                           
  3212                           ;launcher_functions.c: 33: TRISAbits.TRISA7 = 0;
  3213  07A0  138C               	bcf	12,7	;volatile
  3214                           
  3215                           ;launcher_functions.c: 36: TRISBbits.TRISB0 = 0;
  3216  07A1  100D               	bcf	13,0	;volatile
  3217                           
  3218                           ;launcher_functions.c: 37: TRISBbits.TRISB1 = 1;
  3219  07A2  148D               	bsf	13,1	;volatile
  3220                           
  3221                           ;launcher_functions.c: 38: TRISBbits.TRISB2 = 0;
  3222  07A3  110D               	bcf	13,2	;volatile
  3223                           
  3224                           ;launcher_functions.c: 40: TRISBbits.TRISB4 = 0;
  3225  07A4  120D               	bcf	13,4	;volatile
  3226                           
  3227                           ;launcher_functions.c: 41: TRISBbits.TRISB5 = 0;
  3228  07A5  128D               	bcf	13,5	;volatile
  3229                           
  3230                           ;launcher_functions.c: 43: PORTBbits.RB0 = 0;
  3231  07A6  0020               	movlb	0	; select bank0
  3232  07A7  100D               	bcf	13,0	;volatile
  3233                           
  3234                           ;launcher_functions.c: 44: PORTBbits.RB4 = 0;
  3235  07A8  120D               	bcf	13,4	;volatile
  3236                           
  3237                           ;launcher_functions.c: 45: PORTBbits.RB5 = 0;
  3238  07A9  128D               	bcf	13,5	;volatile
  3239                           
  3240                           ;launcher_functions.c: 47: ANSELBbits.ANSB0 = 0;
  3241  07AA  0023               	movlb	3	; select bank3
  3242  07AB  100D               	bcf	13,0	;volatile
  3243                           
  3244                           ;launcher_functions.c: 48: ANSELBbits.ANSB1 = 0;
  3245  07AC  108D               	bcf	13,1	;volatile
  3246                           
  3247                           ;launcher_functions.c: 49: ANSELBbits.ANSB2 = 0;
  3248  07AD  110D               	bcf	13,2	;volatile
  3249                           
  3250                           ;launcher_functions.c: 51: ANSELBbits.ANSB4 = 0;
  3251  07AE  120D               	bcf	13,4	;volatile
  3252                           
  3253                           ;launcher_functions.c: 52: ANSELBbits.ANSB5 = 0;
  3254  07AF  128D               	bcf	13,5	;volatile
  3255                           
  3256                           ;launcher_functions.c: 55: TRISCbits.TRISC0 = 0;
  3257  07B0  0021               	movlb	1	; select bank1
  3258  07B1  100E               	bcf	14,0	;volatile
  3259                           
  3260                           ;launcher_functions.c: 56: TRISCbits.TRISC1 = 0;
  3261  07B2  108E               	bcf	14,1	;volatile
  3262  07B3  0008               	return
  3263  07B4                     __end_of_InitGPIO:	
  3264                           
  3265                           	psect	text14
  3266  06C7                     __ptext14:	
  3267 ;; *************** function _InitCLK *****************
  3268 ;; Defined at:
  3269 ;;		line 8 in file "launcher_functions.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3283 ;;      Params:         0       0       0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0
  3286 ;;      Totals:         0       0       0       0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _InitCLK
  3299  06C7                     _InitCLK:	
  3300                           
  3301                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  3305  06C7  3078               	movlw	120
  3306  06C8  0021               	movlb	1	; select bank1
  3307  06C9  0499               	iorwf	25,f	;volatile
  3308                           
  3309                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  3310  06CA  0819               	movf	25,w	;volatile
  3311  06CB  39FC               	andlw	-4
  3312  06CC  3802               	iorlw	2
  3313  06CD  0099               	movwf	25	;volatile
  3314  06CE  0008               	return
  3315  06CF                     __end_of_InitCLK:	
  3316                           
  3317                           	psect	text15
  3318  065D                     __ptext15:	
  3319 ;; *************** function _InitADC *****************
  3320 ;; Defined at:
  3321 ;;		line 65 in file "launcher_functions.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;		None               void
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3335 ;;      Params:         0       0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_main
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           
  3350                           ;psect for function _InitADC
  3351  065D                     _InitADC:	
  3352                           
  3353                           ;launcher_functions.c: 68: TRISAbits.TRISA0 = 1;
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  3357  065D  0021               	movlb	1	; select bank1
  3358  065E  140C               	bsf	12,0	;volatile
  3359                           
  3360                           ;launcher_functions.c: 69: ANSELAbits.ANSA0 = 1;
  3361  065F  0023               	movlb	3	; select bank3
  3362  0660  140C               	bsf	12,0	;volatile
  3363                           
  3364                           ;launcher_functions.c: 72: ADCON1bits.ADCS = 0x05;
  3365  0661  0021               	movlb	1	; select bank1
  3366  0662  081E               	movf	30,w	;volatile
  3367  0663  398F               	andlw	-113
  3368  0664  3850               	iorlw	80
  3369  0665  009E               	movwf	30	;volatile
  3370                           
  3371                           ;launcher_functions.c: 73: ADCON1bits.ADPREF = 0x00;
  3372  0666  30FC               	movlw	-4
  3373  0667  059E               	andwf	30,f	;volatile
  3374                           
  3375                           ;launcher_functions.c: 74: ADCON1bits.ADNREF = 0x00;
  3376  0668  111E               	bcf	30,2	;volatile
  3377                           
  3378                           ;launcher_functions.c: 75: ADCON0bits.CHS = 0x00;
  3379  0669  3083               	movlw	-125
  3380  066A  059D               	andwf	29,f	;volatile
  3381                           
  3382                           ;launcher_functions.c: 76: ADCON2bits.CHSN = 0xF;
  3383  066B  300F               	movlw	15
  3384  066C  049F               	iorwf	31,f	;volatile
  3385                           
  3386                           ;launcher_functions.c: 77: ADCON1bits.ADFM = 0;
  3387  066D  139E               	bcf	30,7	;volatile
  3388                           
  3389                           ;launcher_functions.c: 78: ADCON0bits.ADRMD = 1;
  3390  066E  179D               	bsf	29,7	;volatile
  3391                           
  3392                           ;launcher_functions.c: 79: ADCON0bits.ADON = 1;
  3393  066F  141D               	bsf	29,0	;volatile
  3394                           
  3395                           ;launcher_functions.c: 82: ADIF = 0;
  3396  0670  0020               	movlb	0	; select bank0
  3397  0671  1311               	bcf	17,6	;volatile
  3398                           
  3399                           ;launcher_functions.c: 83: ADIE = 1;
  3400  0672  0021               	movlb	1	; select bank1
  3401  0673  1711               	bsf	17,6	;volatile
  3402                           
  3403                           ;launcher_functions.c: 84: PEIE = 1;
  3404  0674  170B               	bsf	11,6	;volatile
  3405  0675  0008               	return
  3406  0676                     __end_of_InitADC:	
  3407                           
  3408                           	psect	text16
  3409  00D9                     __ptext16:	
  3410 ;; *************** function _DecodeGPS *****************
  3411 ;; Defined at:
  3412 ;;		line 365 in file "launcher_functions.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  messageID       7   16[BANK0 ] unsigned char [7]
  3417 ;;  longitude       6   32[BANK0 ] unsigned int [3]
  3418 ;;  latitude        6   26[BANK0 ] unsigned int [3]
  3419 ;;  x               2   38[BANK0 ] int 
  3420 ;;  status          1   25[BANK0 ] unsigned char 
  3421 ;;  eastWest        1   24[BANK0 ] unsigned char 
  3422 ;;  northSouth      1   23[BANK0 ] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       0       0       0       0       0       0
  3433 ;;      Locals:         0      24       0       0       0       0       0
  3434 ;;      Temps:          0       2       0       0       0       0       0
  3435 ;;      Totals:         0      26       0       0       0       0       0
  3436 ;;Total ram usage:       26 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    3
  3439 ;; This function calls:
  3440 ;;		___lwdiv
  3441 ;;		___wmul
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _DecodeGPS
  3449  00D9                     _DecodeGPS:	
  3450                           
  3451                           ;launcher_functions.c: 368: unsigned char messageID[7] = "$GPGLL";
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3455  00D9  3043               	movlw	low DecodeGPS@F4915
  3456  00DA  0086               	movwf	6
  3457  00DB  3001               	movlw	high DecodeGPS@F4915
  3458  00DC  0087               	movwf	7
  3459  00DD  3030               	movlw	low DecodeGPS@messageID
  3460  00DE  0084               	movwf	4
  3461  00DF  3000               	movlw	high DecodeGPS@messageID
  3462  00E0  0085               	movwf	5
  3463  00E1  3007               	movlw	7
  3464  00E2  0020               	movlb	0	; select bank0
  3465  00E3  00AE               	movwf	??_DecodeGPS
  3466  00E4                     u1200:	
  3467  00E4  0016               	moviw fsr1++
  3468  00E5  001A               	movwi fsr0++
  3469  00E6  0BAE               	decfsz	??_DecodeGPS,f
  3470  00E7  28E4               	goto	u1200
  3471                           
  3472                           ;launcher_functions.c: 369: unsigned int latitude[3] = {0,0,0};
  3473  00E8  30A0               	movlw	low DecodeGPS@F4917
  3474  00E9  0086               	movwf	6
  3475  00EA  3000               	movlw	high DecodeGPS@F4917
  3476  00EB  0087               	movwf	7
  3477  00EC  303A               	movlw	low DecodeGPS@latitude
  3478  00ED  0084               	movwf	4
  3479  00EE  3000               	movlw	high DecodeGPS@latitude
  3480  00EF  0085               	movwf	5
  3481  00F0  3006               	movlw	6
  3482  00F1  00AE               	movwf	??_DecodeGPS
  3483  00F2                     u1210:	
  3484  00F2  0016               	moviw fsr1++
  3485  00F3  001A               	movwi fsr0++
  3486  00F4  0BAE               	decfsz	??_DecodeGPS,f
  3487  00F5  28F2               	goto	u1210
  3488                           
  3489                           ;launcher_functions.c: 370: unsigned int longitude[3] = {0,0,0};
  3490  00F6  30A6               	movlw	low DecodeGPS@F4919
  3491  00F7  0086               	movwf	6
  3492  00F8  3000               	movlw	high DecodeGPS@F4919
  3493  00F9  0087               	movwf	7
  3494  00FA  3040               	movlw	low DecodeGPS@longitude
  3495  00FB  0084               	movwf	4
  3496  00FC  3000               	movlw	high DecodeGPS@longitude
  3497  00FD  0085               	movwf	5
  3498  00FE  3006               	movlw	6
  3499  00FF  00AE               	movwf	??_DecodeGPS
  3500  0100                     u1220:	
  3501  0100  0016               	moviw fsr1++
  3502  0101  001A               	movwi fsr0++
  3503  0102  0BAE               	decfsz	??_DecodeGPS,f
  3504  0103  2900               	goto	u1220
  3505                           
  3506                           ;launcher_functions.c: 371: unsigned char northSouth;
  3507                           ;launcher_functions.c: 372: unsigned char eastWest;
  3508                           ;launcher_functions.c: 373: unsigned char status;
  3509                           ;launcher_functions.c: 374: int x;
  3510                           ;launcher_functions.c: 376: for(x=0;x<6;x++)
  3511  0104  01C6               	clrf	DecodeGPS@x
  3512  0105  01C7               	clrf	DecodeGPS@x+1
  3513  0106  0847               	movf	DecodeGPS@x+1,w
  3514  0107  3A80               	xorlw	128
  3515  0108  00AE               	movwf	??_DecodeGPS
  3516  0109  3080               	movlw	128
  3517  010A  022E               	subwf	??_DecodeGPS,w
  3518  010B  1D03               	skipz
  3519  010C  290F               	goto	u1235
  3520  010D  3006               	movlw	6
  3521  010E  0246               	subwf	DecodeGPS@x,w
  3522  010F                     u1235:	
  3523  010F  1803               	btfsc	3,0
  3524  0110  2931               	goto	l1815
  3525  0111                     l1809:	
  3526                           
  3527                           ;launcher_functions.c: 377: {
  3528                           ;launcher_functions.c: 378: if(gpsMessage[x] != messageID[x])
  3529  0111  0020               	movlb	0	; select bank0
  3530  0112  0846               	movf	DecodeGPS@x,w
  3531  0113  3E30               	addlw	DecodeGPS@messageID& (0+255)
  3532  0114  0086               	movwf	6
  3533  0115  0187               	clrf	7
  3534  0116  0846               	movf	DecodeGPS@x,w
  3535  0117  3EAD               	addlw	_gpsMessage& (0+255)
  3536  0118  0084               	movwf	4
  3537  0119  0185               	clrf	5
  3538  011A  0800               	movf	0,w
  3539  011B  0601               	xorwf	1,w
  3540  011C  1903               	skipnz
  3541  011D  2921               	goto	l1813
  3542                           
  3543                           ;launcher_functions.c: 379: gpsInvalidFlag = 1;
  3544  011E  0021               	movlb	1	; select bank1
  3545  011F  01E9               	clrf	_gpsInvalidFlag^(0+128)
  3546  0120  0AE9               	incf	_gpsInvalidFlag^(0+128),f
  3547  0121                     l1813:	
  3548  0121  3001               	movlw	1
  3549  0122  0020               	movlb	0	; select bank0
  3550  0123  07C6               	addwf	DecodeGPS@x,f
  3551  0124  3000               	movlw	0
  3552  0125  3DC7               	addwfc	DecodeGPS@x+1,f
  3553  0126  0847               	movf	DecodeGPS@x+1,w
  3554  0127  3A80               	xorlw	128
  3555  0128  00AE               	movwf	??_DecodeGPS
  3556  0129  3080               	movlw	128
  3557  012A  022E               	subwf	??_DecodeGPS,w
  3558  012B  1D03               	skipz
  3559  012C  292F               	goto	u1255
  3560  012D  3006               	movlw	6
  3561  012E  0246               	subwf	DecodeGPS@x,w
  3562  012F                     u1255:	
  3563  012F  1C03               	skipc
  3564  0130  2911               	goto	l1809
  3565  0131                     l1815:	
  3566                           
  3567                           ;launcher_functions.c: 380: }
  3568                           ;launcher_functions.c: 383: x = x + 1;
  3569  0131  0020               	movlb	0	; select bank0
  3570  0132  0846               	movf	DecodeGPS@x,w
  3571  0133  3E01               	addlw	1
  3572  0134  00C6               	movwf	DecodeGPS@x
  3573  0135  3000               	movlw	0
  3574  0136  3D47               	addwfc	DecodeGPS@x+1,w
  3575  0137  00C7               	movwf	DecodeGPS@x+1
  3576                           
  3577                           ;launcher_functions.c: 386: if(gpsMessage[x]!= ',')
  3578  0138  0846               	movf	DecodeGPS@x,w
  3579  0139  3EAD               	addlw	_gpsMessage& (0+255)
  3580  013A  0086               	movwf	6
  3581  013B  0187               	clrf	7
  3582  013C  0801               	movf	1,w
  3583  013D  3A2C               	xorlw	44
  3584  013E  1903               	skipnz
  3585  013F  29FE               	goto	l1847
  3586                           
  3587                           ;launcher_functions.c: 387: {
  3588                           ;launcher_functions.c: 388: latitude[0] = (gpsMessage[x++] - 48)*10;
  3589  0140  0846               	movf	DecodeGPS@x,w
  3590  0141  3EAD               	addlw	_gpsMessage& (0+255)
  3591  0142  0086               	movwf	6
  3592  0143  0187               	clrf	7
  3593  0144  0801               	movf	1,w
  3594  0145  3ED0               	addlw	208
  3595  0146  00A0               	movwf	___wmul@multiplier
  3596  0147  30FF               	movlw	255
  3597  0148  1803               	skipnc
  3598  0149  3000               	movlw	0
  3599  014A  00A1               	movwf	___wmul@multiplier+1
  3600  014B  300A               	movlw	10
  3601  014C  00A2               	movwf	___wmul@multiplicand
  3602  014D  3000               	movlw	0
  3603  014E  00A3               	movwf	___wmul@multiplicand+1
  3604  014F  3187  27D6  3180   	fcall	___wmul
  3605  0152  0020               	movlb	0	; select bank0
  3606  0153  0821               	movf	?___wmul+1,w
  3607  0154  01BB               	clrf	DecodeGPS@latitude+1
  3608  0155  07BB               	addwf	DecodeGPS@latitude+1,f
  3609  0156  0820               	movf	?___wmul,w
  3610  0157  01BA               	clrf	DecodeGPS@latitude
  3611  0158  07BA               	addwf	DecodeGPS@latitude,f
  3612  0159  3001               	movlw	1
  3613  015A  07C6               	addwf	DecodeGPS@x,f
  3614  015B  3000               	movlw	0
  3615  015C  3DC7               	addwfc	DecodeGPS@x+1,f
  3616                           
  3617                           ;launcher_functions.c: 389: latitude[0] += (gpsMessage[x++] - 48);
  3618  015D  0846               	movf	DecodeGPS@x,w
  3619  015E  3EAD               	addlw	_gpsMessage& (0+255)
  3620  015F  0086               	movwf	6
  3621  0160  0187               	clrf	7
  3622  0161  0801               	movf	1,w
  3623  0162  3ED0               	addlw	208
  3624  0163  00AE               	movwf	??_DecodeGPS
  3625  0164  30FF               	movlw	255
  3626  0165  1803               	skipnc
  3627  0166  3000               	movlw	0
  3628  0167  00AF               	movwf	??_DecodeGPS+1
  3629  0168  082E               	movf	??_DecodeGPS,w
  3630  0169  07BA               	addwf	DecodeGPS@latitude,f
  3631  016A  082F               	movf	??_DecodeGPS+1,w
  3632  016B  3DBB               	addwfc	DecodeGPS@latitude+1,f
  3633  016C  3001               	movlw	1
  3634  016D  07C6               	addwf	DecodeGPS@x,f
  3635  016E  3000               	movlw	0
  3636  016F  3DC7               	addwfc	DecodeGPS@x+1,f
  3637                           
  3638                           ;launcher_functions.c: 391: latitude[1] = (gpsMessage[x++] - 48)*10;
  3639  0170  0846               	movf	DecodeGPS@x,w
  3640  0171  3EAD               	addlw	_gpsMessage& (0+255)
  3641  0172  0086               	movwf	6
  3642  0173  0187               	clrf	7
  3643  0174  0801               	movf	1,w
  3644  0175  3ED0               	addlw	208
  3645  0176  00A0               	movwf	___wmul@multiplier
  3646  0177  30FF               	movlw	255
  3647  0178  1803               	skipnc
  3648  0179  3000               	movlw	0
  3649  017A  00A1               	movwf	___wmul@multiplier+1
  3650  017B  300A               	movlw	10
  3651  017C  00A2               	movwf	___wmul@multiplicand
  3652  017D  3000               	movlw	0
  3653  017E  00A3               	movwf	___wmul@multiplicand+1
  3654  017F  3187  27D6  3180   	fcall	___wmul
  3655  0182  0020               	movlb	0	; select bank0
  3656  0183  0821               	movf	?___wmul+1,w
  3657  0184  01BD               	clrf	DecodeGPS@latitude+3
  3658  0185  07BD               	addwf	DecodeGPS@latitude+3,f
  3659  0186  0820               	movf	?___wmul,w
  3660  0187  01BC               	clrf	DecodeGPS@latitude+2
  3661  0188  07BC               	addwf	DecodeGPS@latitude+2,f
  3662  0189  3001               	movlw	1
  3663  018A  07C6               	addwf	DecodeGPS@x,f
  3664  018B  3000               	movlw	0
  3665  018C  3DC7               	addwfc	DecodeGPS@x+1,f
  3666                           
  3667                           ;launcher_functions.c: 392: latitude[1] += (gpsMessage[x++] - 48);
  3668  018D  0846               	movf	DecodeGPS@x,w
  3669  018E  3EAD               	addlw	_gpsMessage& (0+255)
  3670  018F  0086               	movwf	6
  3671  0190  0187               	clrf	7
  3672  0191  0801               	movf	1,w
  3673  0192  3ED0               	addlw	208
  3674  0193  00AE               	movwf	??_DecodeGPS
  3675  0194  30FF               	movlw	255
  3676  0195  1803               	skipnc
  3677  0196  3000               	movlw	0
  3678  0197  00AF               	movwf	??_DecodeGPS+1
  3679  0198  082E               	movf	??_DecodeGPS,w
  3680  0199  07BC               	addwf	DecodeGPS@latitude+2,f
  3681  019A  082F               	movf	??_DecodeGPS+1,w
  3682  019B  3DBD               	addwfc	DecodeGPS@latitude+3,f
  3683  019C  3001               	movlw	1
  3684  019D  07C6               	addwf	DecodeGPS@x,f
  3685  019E  3000               	movlw	0
  3686  019F  3DC7               	addwfc	DecodeGPS@x+1,f
  3687                           
  3688                           ;launcher_functions.c: 395: x = x + 1;
  3689  01A0  0846               	movf	DecodeGPS@x,w
  3690  01A1  3E01               	addlw	1
  3691  01A2  00C6               	movwf	DecodeGPS@x
  3692  01A3  3000               	movlw	0
  3693  01A4  3D47               	addwfc	DecodeGPS@x+1,w
  3694  01A5  00C7               	movwf	DecodeGPS@x+1
  3695                           
  3696                           ;launcher_functions.c: 397: latitude[2] = (gpsMessage[x++] - 48)*10;
  3697  01A6  0846               	movf	DecodeGPS@x,w
  3698  01A7  3EAD               	addlw	_gpsMessage& (0+255)
  3699  01A8  0086               	movwf	6
  3700  01A9  0187               	clrf	7
  3701  01AA  0801               	movf	1,w
  3702  01AB  3ED0               	addlw	208
  3703  01AC  00A0               	movwf	___wmul@multiplier
  3704  01AD  30FF               	movlw	255
  3705  01AE  1803               	skipnc
  3706  01AF  3000               	movlw	0
  3707  01B0  00A1               	movwf	___wmul@multiplier+1
  3708  01B1  300A               	movlw	10
  3709  01B2  00A2               	movwf	___wmul@multiplicand
  3710  01B3  3000               	movlw	0
  3711  01B4  00A3               	movwf	___wmul@multiplicand+1
  3712  01B5  3187  27D6  3180   	fcall	___wmul
  3713  01B8  0020               	movlb	0	; select bank0
  3714  01B9  0821               	movf	?___wmul+1,w
  3715  01BA  01BF               	clrf	DecodeGPS@latitude+5
  3716  01BB  07BF               	addwf	DecodeGPS@latitude+5,f
  3717  01BC  0820               	movf	?___wmul,w
  3718  01BD  01BE               	clrf	DecodeGPS@latitude+4
  3719  01BE  07BE               	addwf	DecodeGPS@latitude+4,f
  3720  01BF  3001               	movlw	1
  3721  01C0  07C6               	addwf	DecodeGPS@x,f
  3722  01C1  3000               	movlw	0
  3723  01C2  3DC7               	addwfc	DecodeGPS@x+1,f
  3724                           
  3725                           ;launcher_functions.c: 398: latitude[2] += (gpsMessage[x++] - 48);
  3726  01C3  0846               	movf	DecodeGPS@x,w
  3727  01C4  3EAD               	addlw	_gpsMessage& (0+255)
  3728  01C5  0086               	movwf	6
  3729  01C6  0187               	clrf	7
  3730  01C7  0801               	movf	1,w
  3731  01C8  3ED0               	addlw	208
  3732  01C9  00AE               	movwf	??_DecodeGPS
  3733  01CA  30FF               	movlw	255
  3734  01CB  1803               	skipnc
  3735  01CC  3000               	movlw	0
  3736  01CD  00AF               	movwf	??_DecodeGPS+1
  3737  01CE  082E               	movf	??_DecodeGPS,w
  3738  01CF  07BE               	addwf	DecodeGPS@latitude+4,f
  3739  01D0  082F               	movf	??_DecodeGPS+1,w
  3740  01D1  3DBF               	addwfc	DecodeGPS@latitude+5,f
  3741  01D2  3001               	movlw	1
  3742  01D3  07C6               	addwf	DecodeGPS@x,f
  3743  01D4  3000               	movlw	0
  3744  01D5  3DC7               	addwfc	DecodeGPS@x+1,f
  3745                           
  3746                           ;launcher_functions.c: 399: latitude[2] = (latitude[2]*60)/100;
  3747  01D6  3064               	movlw	100
  3748  01D7  00A6               	movwf	___lwdiv@divisor
  3749  01D8  3000               	movlw	0
  3750  01D9  00A7               	movwf	___lwdiv@divisor+1
  3751  01DA  083F               	movf	DecodeGPS@latitude+5,w
  3752  01DB  01A1               	clrf	___wmul@multiplier+1
  3753  01DC  07A1               	addwf	___wmul@multiplier+1,f
  3754  01DD  083E               	movf	DecodeGPS@latitude+4,w
  3755  01DE  01A0               	clrf	___wmul@multiplier
  3756  01DF  07A0               	addwf	___wmul@multiplier,f
  3757  01E0  303C               	movlw	60
  3758  01E1  00A2               	movwf	___wmul@multiplicand
  3759  01E2  3000               	movlw	0
  3760  01E3  00A3               	movwf	___wmul@multiplicand+1
  3761  01E4  3187  27D6  3180   	fcall	___wmul
  3762  01E7  0020               	movlb	0	; select bank0
  3763  01E8  0821               	movf	?___wmul+1,w
  3764  01E9  01A9               	clrf	___lwdiv@dividend+1
  3765  01EA  07A9               	addwf	___lwdiv@dividend+1,f
  3766  01EB  0820               	movf	?___wmul,w
  3767  01EC  01A8               	clrf	___lwdiv@dividend
  3768  01ED  07A8               	addwf	___lwdiv@dividend,f
  3769  01EE  3186  2609  3180   	fcall	___lwdiv
  3770  01F1  0020               	movlb	0	; select bank0
  3771  01F2  0827               	movf	?___lwdiv+1,w
  3772  01F3  01BF               	clrf	DecodeGPS@latitude+5
  3773  01F4  07BF               	addwf	DecodeGPS@latitude+5,f
  3774  01F5  0826               	movf	?___lwdiv,w
  3775  01F6  01BE               	clrf	DecodeGPS@latitude+4
  3776  01F7  07BE               	addwf	DecodeGPS@latitude+4,f
  3777                           
  3778                           ;launcher_functions.c: 402: x = x + 2;
  3779  01F8  0846               	movf	DecodeGPS@x,w
  3780  01F9  3E02               	addlw	2
  3781  01FA  00C6               	movwf	DecodeGPS@x
  3782  01FB  3000               	movlw	0
  3783  01FC  3D47               	addwfc	DecodeGPS@x+1,w
  3784  01FD  00C7               	movwf	DecodeGPS@x+1
  3785  01FE                     l1847:	
  3786                           
  3787                           ;launcher_functions.c: 403: }
  3788                           ;launcher_functions.c: 406: x = x + 1;
  3789  01FE  0846               	movf	DecodeGPS@x,w
  3790  01FF  3E01               	addlw	1
  3791  0200  00C6               	movwf	DecodeGPS@x
  3792  0201  3000               	movlw	0
  3793  0202  3D47               	addwfc	DecodeGPS@x+1,w
  3794  0203  00C7               	movwf	DecodeGPS@x+1
  3795                           
  3796                           ;launcher_functions.c: 409: if(gpsMessage[x] != ',')
  3797  0204  0846               	movf	DecodeGPS@x,w
  3798  0205  3EAD               	addlw	_gpsMessage& (0+255)
  3799  0206  0086               	movwf	6
  3800  0207  0187               	clrf	7
  3801  0208  0801               	movf	1,w
  3802  0209  3A2C               	xorlw	44
  3803  020A  1903               	skipnz
  3804  020B  2A18               	goto	l1855
  3805                           
  3806                           ;launcher_functions.c: 410: northSouth = gpsMessage[x++];
  3807  020C  0846               	movf	DecodeGPS@x,w
  3808  020D  3EAD               	addlw	_gpsMessage& (0+255)
  3809  020E  0086               	movwf	6
  3810  020F  0187               	clrf	7
  3811  0210  0801               	movf	1,w
  3812  0211  00AE               	movwf	??_DecodeGPS
  3813  0212  082E               	movf	??_DecodeGPS,w
  3814  0213  00B7               	movwf	DecodeGPS@northSouth
  3815  0214  3001               	movlw	1
  3816  0215  07C6               	addwf	DecodeGPS@x,f
  3817  0216  3000               	movlw	0
  3818  0217  3DC7               	addwfc	DecodeGPS@x+1,f
  3819  0218                     l1855:	
  3820                           
  3821                           ;launcher_functions.c: 413: x = x + 1;
  3822  0218  0846               	movf	DecodeGPS@x,w
  3823  0219  3E01               	addlw	1
  3824  021A  00C6               	movwf	DecodeGPS@x
  3825  021B  3000               	movlw	0
  3826  021C  3D47               	addwfc	DecodeGPS@x+1,w
  3827  021D  00C7               	movwf	DecodeGPS@x+1
  3828                           
  3829                           ;launcher_functions.c: 416: if(gpsMessage[x]!= ',')
  3830  021E  0846               	movf	DecodeGPS@x,w
  3831  021F  3EAD               	addlw	_gpsMessage& (0+255)
  3832  0220  0086               	movwf	6
  3833  0221  0187               	clrf	7
  3834  0222  0801               	movf	1,w
  3835  0223  3A2C               	xorlw	44
  3836  0224  1903               	skipnz
  3837  0225  2AFF               	goto	l1891
  3838                           
  3839                           ;launcher_functions.c: 417: {
  3840                           ;launcher_functions.c: 418: longitude[0] = (gpsMessage[x++] - 48)*100;
  3841  0226  0846               	movf	DecodeGPS@x,w
  3842  0227  3EAD               	addlw	_gpsMessage& (0+255)
  3843  0228  0086               	movwf	6
  3844  0229  0187               	clrf	7
  3845  022A  0801               	movf	1,w
  3846  022B  3ED0               	addlw	208
  3847  022C  00A0               	movwf	___wmul@multiplier
  3848  022D  30FF               	movlw	255
  3849  022E  1803               	skipnc
  3850  022F  3000               	movlw	0
  3851  0230  00A1               	movwf	___wmul@multiplier+1
  3852  0231  3064               	movlw	100
  3853  0232  00A2               	movwf	___wmul@multiplicand
  3854  0233  3000               	movlw	0
  3855  0234  00A3               	movwf	___wmul@multiplicand+1
  3856  0235  3187  27D6  3180   	fcall	___wmul
  3857  0238  0020               	movlb	0	; select bank0
  3858  0239  0821               	movf	?___wmul+1,w
  3859  023A  01C1               	clrf	DecodeGPS@longitude+1
  3860  023B  07C1               	addwf	DecodeGPS@longitude+1,f
  3861  023C  0820               	movf	?___wmul,w
  3862  023D  01C0               	clrf	DecodeGPS@longitude
  3863  023E  07C0               	addwf	DecodeGPS@longitude,f
  3864  023F  3001               	movlw	1
  3865  0240  07C6               	addwf	DecodeGPS@x,f
  3866  0241  3000               	movlw	0
  3867  0242  3DC7               	addwfc	DecodeGPS@x+1,f
  3868                           
  3869                           ;launcher_functions.c: 419: longitude[0] += (gpsMessage[x++] - 48)*10;
  3870  0243  0846               	movf	DecodeGPS@x,w
  3871  0244  3EAD               	addlw	_gpsMessage& (0+255)
  3872  0245  0086               	movwf	6
  3873  0246  0187               	clrf	7
  3874  0247  0801               	movf	1,w
  3875  0248  3ED0               	addlw	208
  3876  0249  00A0               	movwf	___wmul@multiplier
  3877  024A  30FF               	movlw	255
  3878  024B  1803               	skipnc
  3879  024C  3000               	movlw	0
  3880  024D  00A1               	movwf	___wmul@multiplier+1
  3881  024E  300A               	movlw	10
  3882  024F  00A2               	movwf	___wmul@multiplicand
  3883  0250  3000               	movlw	0
  3884  0251  00A3               	movwf	___wmul@multiplicand+1
  3885  0252  3187  27D6  3180   	fcall	___wmul
  3886  0255  0020               	movlb	0	; select bank0
  3887  0256  0820               	movf	?___wmul,w
  3888  0257  07C0               	addwf	DecodeGPS@longitude,f
  3889  0258  0821               	movf	?___wmul+1,w
  3890  0259  3DC1               	addwfc	DecodeGPS@longitude+1,f
  3891  025A  3001               	movlw	1
  3892  025B  07C6               	addwf	DecodeGPS@x,f
  3893  025C  3000               	movlw	0
  3894  025D  3DC7               	addwfc	DecodeGPS@x+1,f
  3895                           
  3896                           ;launcher_functions.c: 420: longitude[0] += (gpsMessage[x++] - 48);
  3897  025E  0846               	movf	DecodeGPS@x,w
  3898  025F  3EAD               	addlw	_gpsMessage& (0+255)
  3899  0260  0086               	movwf	6
  3900  0261  0187               	clrf	7
  3901  0262  0801               	movf	1,w
  3902  0263  3ED0               	addlw	208
  3903  0264  00AE               	movwf	??_DecodeGPS
  3904  0265  30FF               	movlw	255
  3905  0266  1803               	skipnc
  3906  0267  3000               	movlw	0
  3907  0268  00AF               	movwf	??_DecodeGPS+1
  3908  0269  082E               	movf	??_DecodeGPS,w
  3909  026A  07C0               	addwf	DecodeGPS@longitude,f
  3910  026B  082F               	movf	??_DecodeGPS+1,w
  3911  026C  3DC1               	addwfc	DecodeGPS@longitude+1,f
  3912  026D  3001               	movlw	1
  3913  026E  07C6               	addwf	DecodeGPS@x,f
  3914  026F  3000               	movlw	0
  3915  0270  3DC7               	addwfc	DecodeGPS@x+1,f
  3916                           
  3917                           ;launcher_functions.c: 422: longitude[1] = (gpsMessage[x++] - 48)*10;
  3918  0271  0846               	movf	DecodeGPS@x,w
  3919  0272  3EAD               	addlw	_gpsMessage& (0+255)
  3920  0273  0086               	movwf	6
  3921  0274  0187               	clrf	7
  3922  0275  0801               	movf	1,w
  3923  0276  3ED0               	addlw	208
  3924  0277  00A0               	movwf	___wmul@multiplier
  3925  0278  30FF               	movlw	255
  3926  0279  1803               	skipnc
  3927  027A  3000               	movlw	0
  3928  027B  00A1               	movwf	___wmul@multiplier+1
  3929  027C  300A               	movlw	10
  3930  027D  00A2               	movwf	___wmul@multiplicand
  3931  027E  3000               	movlw	0
  3932  027F  00A3               	movwf	___wmul@multiplicand+1
  3933  0280  3187  27D6  3180   	fcall	___wmul
  3934  0283  0020               	movlb	0	; select bank0
  3935  0284  0821               	movf	?___wmul+1,w
  3936  0285  01C3               	clrf	DecodeGPS@longitude+3
  3937  0286  07C3               	addwf	DecodeGPS@longitude+3,f
  3938  0287  0820               	movf	?___wmul,w
  3939  0288  01C2               	clrf	DecodeGPS@longitude+2
  3940  0289  07C2               	addwf	DecodeGPS@longitude+2,f
  3941  028A  3001               	movlw	1
  3942  028B  07C6               	addwf	DecodeGPS@x,f
  3943  028C  3000               	movlw	0
  3944  028D  3DC7               	addwfc	DecodeGPS@x+1,f
  3945                           
  3946                           ;launcher_functions.c: 423: longitude[1] += (gpsMessage[x++] - 48);
  3947  028E  0846               	movf	DecodeGPS@x,w
  3948  028F  3EAD               	addlw	_gpsMessage& (0+255)
  3949  0290  0086               	movwf	6
  3950  0291  0187               	clrf	7
  3951  0292  0801               	movf	1,w
  3952  0293  3ED0               	addlw	208
  3953  0294  00AE               	movwf	??_DecodeGPS
  3954  0295  30FF               	movlw	255
  3955  0296  1803               	skipnc
  3956  0297  3000               	movlw	0
  3957  0298  00AF               	movwf	??_DecodeGPS+1
  3958  0299  082E               	movf	??_DecodeGPS,w
  3959  029A  07C2               	addwf	DecodeGPS@longitude+2,f
  3960  029B  082F               	movf	??_DecodeGPS+1,w
  3961  029C  3DC3               	addwfc	DecodeGPS@longitude+3,f
  3962  029D  3001               	movlw	1
  3963  029E  07C6               	addwf	DecodeGPS@x,f
  3964  029F  3000               	movlw	0
  3965  02A0  3DC7               	addwfc	DecodeGPS@x+1,f
  3966                           
  3967                           ;launcher_functions.c: 426: x = x + 1;
  3968  02A1  0846               	movf	DecodeGPS@x,w
  3969  02A2  3E01               	addlw	1
  3970  02A3  00C6               	movwf	DecodeGPS@x
  3971  02A4  3000               	movlw	0
  3972  02A5  3D47               	addwfc	DecodeGPS@x+1,w
  3973  02A6  00C7               	movwf	DecodeGPS@x+1
  3974                           
  3975                           ;launcher_functions.c: 428: longitude[2] = (gpsMessage[x++] - 48)*10;
  3976  02A7  0846               	movf	DecodeGPS@x,w
  3977  02A8  3EAD               	addlw	_gpsMessage& (0+255)
  3978  02A9  0086               	movwf	6
  3979  02AA  0187               	clrf	7
  3980  02AB  0801               	movf	1,w
  3981  02AC  3ED0               	addlw	208
  3982  02AD  00A0               	movwf	___wmul@multiplier
  3983  02AE  30FF               	movlw	255
  3984  02AF  1803               	skipnc
  3985  02B0  3000               	movlw	0
  3986  02B1  00A1               	movwf	___wmul@multiplier+1
  3987  02B2  300A               	movlw	10
  3988  02B3  00A2               	movwf	___wmul@multiplicand
  3989  02B4  3000               	movlw	0
  3990  02B5  00A3               	movwf	___wmul@multiplicand+1
  3991  02B6  3187  27D6  3180   	fcall	___wmul
  3992  02B9  0020               	movlb	0	; select bank0
  3993  02BA  0821               	movf	?___wmul+1,w
  3994  02BB  01C5               	clrf	DecodeGPS@longitude+5
  3995  02BC  07C5               	addwf	DecodeGPS@longitude+5,f
  3996  02BD  0820               	movf	?___wmul,w
  3997  02BE  01C4               	clrf	DecodeGPS@longitude+4
  3998  02BF  07C4               	addwf	DecodeGPS@longitude+4,f
  3999  02C0  3001               	movlw	1
  4000  02C1  07C6               	addwf	DecodeGPS@x,f
  4001  02C2  3000               	movlw	0
  4002  02C3  3DC7               	addwfc	DecodeGPS@x+1,f
  4003                           
  4004                           ;launcher_functions.c: 429: longitude[2] += (gpsMessage[x++] - 48);
  4005  02C4  0846               	movf	DecodeGPS@x,w
  4006  02C5  3EAD               	addlw	_gpsMessage& (0+255)
  4007  02C6  0086               	movwf	6
  4008  02C7  0187               	clrf	7
  4009  02C8  0801               	movf	1,w
  4010  02C9  3ED0               	addlw	208
  4011  02CA  00AE               	movwf	??_DecodeGPS
  4012  02CB  30FF               	movlw	255
  4013  02CC  1803               	skipnc
  4014  02CD  3000               	movlw	0
  4015  02CE  00AF               	movwf	??_DecodeGPS+1
  4016  02CF  082E               	movf	??_DecodeGPS,w
  4017  02D0  07C4               	addwf	DecodeGPS@longitude+4,f
  4018  02D1  082F               	movf	??_DecodeGPS+1,w
  4019  02D2  3DC5               	addwfc	DecodeGPS@longitude+5,f
  4020  02D3  3001               	movlw	1
  4021  02D4  07C6               	addwf	DecodeGPS@x,f
  4022  02D5  3000               	movlw	0
  4023  02D6  3DC7               	addwfc	DecodeGPS@x+1,f
  4024                           
  4025                           ;launcher_functions.c: 430: longitude[2] = (longitude[2]*60)/100;
  4026  02D7  3064               	movlw	100
  4027  02D8  00A6               	movwf	___lwdiv@divisor
  4028  02D9  3000               	movlw	0
  4029  02DA  00A7               	movwf	___lwdiv@divisor+1
  4030  02DB  0845               	movf	DecodeGPS@longitude+5,w
  4031  02DC  01A1               	clrf	___wmul@multiplier+1
  4032  02DD  07A1               	addwf	___wmul@multiplier+1,f
  4033  02DE  0844               	movf	DecodeGPS@longitude+4,w
  4034  02DF  01A0               	clrf	___wmul@multiplier
  4035  02E0  07A0               	addwf	___wmul@multiplier,f
  4036  02E1  303C               	movlw	60
  4037  02E2  00A2               	movwf	___wmul@multiplicand
  4038  02E3  3000               	movlw	0
  4039  02E4  00A3               	movwf	___wmul@multiplicand+1
  4040  02E5  3187  27D6  3180   	fcall	___wmul
  4041  02E8  0020               	movlb	0	; select bank0
  4042  02E9  0821               	movf	?___wmul+1,w
  4043  02EA  01A9               	clrf	___lwdiv@dividend+1
  4044  02EB  07A9               	addwf	___lwdiv@dividend+1,f
  4045  02EC  0820               	movf	?___wmul,w
  4046  02ED  01A8               	clrf	___lwdiv@dividend
  4047  02EE  07A8               	addwf	___lwdiv@dividend,f
  4048  02EF  3186  2609  3180   	fcall	___lwdiv
  4049  02F2  0020               	movlb	0	; select bank0
  4050  02F3  0827               	movf	?___lwdiv+1,w
  4051  02F4  01C5               	clrf	DecodeGPS@longitude+5
  4052  02F5  07C5               	addwf	DecodeGPS@longitude+5,f
  4053  02F6  0826               	movf	?___lwdiv,w
  4054  02F7  01C4               	clrf	DecodeGPS@longitude+4
  4055  02F8  07C4               	addwf	DecodeGPS@longitude+4,f
  4056                           
  4057                           ;launcher_functions.c: 433: x = x + 2;
  4058  02F9  0846               	movf	DecodeGPS@x,w
  4059  02FA  3E02               	addlw	2
  4060  02FB  00C6               	movwf	DecodeGPS@x
  4061  02FC  3000               	movlw	0
  4062  02FD  3D47               	addwfc	DecodeGPS@x+1,w
  4063  02FE  00C7               	movwf	DecodeGPS@x+1
  4064  02FF                     l1891:	
  4065                           
  4066                           ;launcher_functions.c: 434: }
  4067                           ;launcher_functions.c: 437: x = x + 1;
  4068  02FF  0846               	movf	DecodeGPS@x,w
  4069  0300  3E01               	addlw	1
  4070  0301  00C6               	movwf	DecodeGPS@x
  4071  0302  3000               	movlw	0
  4072  0303  3D47               	addwfc	DecodeGPS@x+1,w
  4073  0304  00C7               	movwf	DecodeGPS@x+1
  4074                           
  4075                           ;launcher_functions.c: 440: if(gpsMessage[x] != ',')
  4076  0305  0846               	movf	DecodeGPS@x,w
  4077  0306  3EAD               	addlw	_gpsMessage& (0+255)
  4078  0307  0086               	movwf	6
  4079  0308  0187               	clrf	7
  4080  0309  0801               	movf	1,w
  4081  030A  3A2C               	xorlw	44
  4082  030B  1903               	skipnz
  4083  030C  2B19               	goto	l1899
  4084                           
  4085                           ;launcher_functions.c: 441: eastWest = gpsMessage[x++];
  4086  030D  0846               	movf	DecodeGPS@x,w
  4087  030E  3EAD               	addlw	_gpsMessage& (0+255)
  4088  030F  0086               	movwf	6
  4089  0310  0187               	clrf	7
  4090  0311  0801               	movf	1,w
  4091  0312  00AE               	movwf	??_DecodeGPS
  4092  0313  082E               	movf	??_DecodeGPS,w
  4093  0314  00B8               	movwf	DecodeGPS@eastWest
  4094  0315  3001               	movlw	1
  4095  0316  07C6               	addwf	DecodeGPS@x,f
  4096  0317  3000               	movlw	0
  4097  0318  3DC7               	addwfc	DecodeGPS@x+1,f
  4098  0319                     l1899:	
  4099                           
  4100                           ;launcher_functions.c: 444: x = x + 1;
  4101  0319  0846               	movf	DecodeGPS@x,w
  4102  031A  3E01               	addlw	1
  4103  031B  00C6               	movwf	DecodeGPS@x
  4104  031C  3000               	movlw	0
  4105  031D  3D47               	addwfc	DecodeGPS@x+1,w
  4106  031E  00C7               	movwf	DecodeGPS@x+1
  4107  031F                     l1901:	
  4108                           ;launcher_functions.c: 447: while(gpsMessage[x++] != ','){}
  4109                           
  4110  031F  0847               	movf	DecodeGPS@x+1,w
  4111  0320  00AF               	movwf	??_DecodeGPS+1
  4112  0321  0846               	movf	DecodeGPS@x,w
  4113  0322  00AE               	movwf	??_DecodeGPS
  4114  0323  0AC6               	incf	DecodeGPS@x,f
  4115  0324  1903               	skipnz
  4116  0325  0AC7               	incf	DecodeGPS@x+1,f
  4117  0326  082E               	movf	??_DecodeGPS,w
  4118  0327  3EAD               	addlw	_gpsMessage& (0+255)
  4119  0328  0086               	movwf	6
  4120  0329  0187               	clrf	7
  4121  032A  0801               	movf	1,w
  4122  032B  3A2C               	xorlw	44
  4123  032C  1D03               	skipz
  4124  032D  2B1F               	goto	l1901
  4125                           
  4126                           ;launcher_functions.c: 450: status = gpsMessage[x];
  4127  032E  0846               	movf	DecodeGPS@x,w
  4128  032F  3EAD               	addlw	_gpsMessage& (0+255)
  4129  0330  0086               	movwf	6
  4130  0331  0187               	clrf	7
  4131  0332  0801               	movf	1,w
  4132  0333  00AE               	movwf	??_DecodeGPS
  4133  0334  082E               	movf	??_DecodeGPS,w
  4134  0335  00B9               	movwf	DecodeGPS@status
  4135                           
  4136                           ;launcher_functions.c: 452: if(status == 'A')
  4137  0336  0839               	movf	DecodeGPS@status,w
  4138  0337  3A41               	xorlw	65
  4139  0338  1D03               	skipz
  4140  0339  2B3D               	goto	l321
  4141                           
  4142                           ;launcher_functions.c: 453: gpsInvalidFlag = 0;
  4143  033A  0021               	movlb	1	; select bank1
  4144  033B  01E9               	clrf	_gpsInvalidFlag^(0+128)
  4145  033C  0008               	return
  4146  033D                     l321:	
  4147                           
  4148                           ;launcher_functions.c: 454: else
  4149                           ;launcher_functions.c: 455: gpsInvalidFlag = 1;
  4150  033D  0021               	movlb	1	; select bank1
  4151  033E  01E9               	clrf	_gpsInvalidFlag^(0+128)
  4152  033F  0AE9               	incf	_gpsInvalidFlag^(0+128),f
  4153  0340  0008               	return
  4154  0341                     __end_of_DecodeGPS:	
  4155                           
  4156                           	psect	text17
  4157  07D6                     __ptext17:	
  4158 ;; *************** function ___wmul *****************
  4159 ;; Defined at:
  4160 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4163 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  product         2    4[BANK0 ] unsigned int 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2    0[BANK0 ] unsigned int 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4175 ;;      Params:         0       4       0       0       0       0       0
  4176 ;;      Locals:         0       2       0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0
  4178 ;;      Totals:         0       6       0       0       0       0       0
  4179 ;;Total ram usage:        6 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    2
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_DecodeGPS
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function ___wmul
  4191  07D6                     ___wmul:	
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4195  07D6  0020               	movlb	0	; select bank0
  4196  07D7  01A4               	clrf	___wmul@product
  4197  07D8  01A5               	clrf	___wmul@product+1
  4198  07D9                     l1627:	
  4199  07D9  1C20               	btfss	___wmul@multiplier,0
  4200  07DA  2FDF               	goto	l440
  4201  07DB  0822               	movf	___wmul@multiplicand,w
  4202  07DC  07A4               	addwf	___wmul@product,f
  4203  07DD  0823               	movf	___wmul@multiplicand+1,w
  4204  07DE  3DA5               	addwfc	___wmul@product+1,f
  4205  07DF                     l440:	
  4206  07DF  3001               	movlw	1
  4207  07E0                     u1135:	
  4208  07E0  35A2               	lslf	___wmul@multiplicand,f
  4209  07E1  0DA3               	rlf	___wmul@multiplicand+1,f
  4210  07E2  0B89               	decfsz	9,f
  4211  07E3  2FE0               	goto	u1135
  4212  07E4  3001               	movlw	1
  4213  07E5                     u1145:	
  4214  07E5  36A1               	lsrf	___wmul@multiplier+1,f
  4215  07E6  0CA0               	rrf	___wmul@multiplier,f
  4216  07E7  0B89               	decfsz	9,f
  4217  07E8  2FE5               	goto	u1145
  4218  07E9  0821               	movf	___wmul@multiplier+1,w
  4219  07EA  0420               	iorwf	___wmul@multiplier,w
  4220  07EB  1D03               	skipz
  4221  07EC  2FD9               	goto	l1627
  4222  07ED  0825               	movf	___wmul@product+1,w
  4223  07EE  01A1               	clrf	?___wmul+1
  4224  07EF  07A1               	addwf	?___wmul+1,f
  4225  07F0  0824               	movf	___wmul@product,w
  4226  07F1  01A0               	clrf	?___wmul
  4227  07F2  07A0               	addwf	?___wmul,f
  4228  07F3  0008               	return
  4229  07F4                     __end_of___wmul:	
  4230                           
  4231                           	psect	text18
  4232  0609                     __ptext18:	
  4233 ;; *************** function ___lwdiv *****************
  4234 ;; Defined at:
  4235 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  divisor         2    6[BANK0 ] unsigned int 
  4238 ;;  dividend        2    8[BANK0 ] unsigned int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  quotient        2   11[BANK0 ] unsigned int 
  4241 ;;  counter         1   13[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    6[BANK0 ] unsigned int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4251 ;;      Params:         0       4       0       0       0       0       0
  4252 ;;      Locals:         0       3       0       0       0       0       0
  4253 ;;      Temps:          0       1       0       0       0       0       0
  4254 ;;      Totals:         0       8       0       0       0       0       0
  4255 ;;Total ram usage:        8 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_DecodeGPS
  4262 ;;		_sprintf
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function ___lwdiv
  4268  0609                     ___lwdiv:	
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4272  0609  0020               	movlb	0	; select bank0
  4273  060A  01AB               	clrf	___lwdiv@quotient
  4274  060B  01AC               	clrf	___lwdiv@quotient+1
  4275  060C  0827               	movf	___lwdiv@divisor+1,w
  4276  060D  0426               	iorwf	___lwdiv@divisor,w
  4277  060E  1903               	skipnz
  4278  060F  2E39               	goto	l1493
  4279  0610  01AD               	clrf	___lwdiv@counter
  4280  0611  0AAD               	incf	___lwdiv@counter,f
  4281  0612                     l1481:	
  4282  0612  1BA7               	btfsc	___lwdiv@divisor+1,7
  4283  0613  2E1E               	goto	l1483
  4284  0614  3001               	movlw	1
  4285  0615                     u865:	
  4286  0615  35A6               	lslf	___lwdiv@divisor,f
  4287  0616  0DA7               	rlf	___lwdiv@divisor+1,f
  4288  0617  0B89               	decfsz	9,f
  4289  0618  2E15               	goto	u865
  4290  0619  3001               	movlw	1
  4291  061A  00AA               	movwf	??___lwdiv
  4292  061B  082A               	movf	??___lwdiv,w
  4293  061C  07AD               	addwf	___lwdiv@counter,f
  4294  061D  2E12               	goto	l1481
  4295  061E                     l1483:	
  4296  061E  3001               	movlw	1
  4297  061F                     u885:	
  4298  061F  35AB               	lslf	___lwdiv@quotient,f
  4299  0620  0DAC               	rlf	___lwdiv@quotient+1,f
  4300  0621  0B89               	decfsz	9,f
  4301  0622  2E1F               	goto	u885
  4302  0623  0827               	movf	___lwdiv@divisor+1,w
  4303  0624  0229               	subwf	___lwdiv@dividend+1,w
  4304  0625  1D03               	skipz
  4305  0626  2E29               	goto	u895
  4306  0627  0826               	movf	___lwdiv@divisor,w
  4307  0628  0228               	subwf	___lwdiv@dividend,w
  4308  0629                     u895:	
  4309  0629  1C03               	skipc
  4310  062A  2E30               	goto	l1489
  4311  062B  0826               	movf	___lwdiv@divisor,w
  4312  062C  02A8               	subwf	___lwdiv@dividend,f
  4313  062D  0827               	movf	___lwdiv@divisor+1,w
  4314  062E  3BA9               	subwfb	___lwdiv@dividend+1,f
  4315  062F  142B               	bsf	___lwdiv@quotient,0
  4316  0630                     l1489:	
  4317  0630  3001               	movlw	1
  4318  0631                     u905:	
  4319  0631  36A7               	lsrf	___lwdiv@divisor+1,f
  4320  0632  0CA6               	rrf	___lwdiv@divisor,f
  4321  0633  0B89               	decfsz	9,f
  4322  0634  2E31               	goto	u905
  4323  0635  3001               	movlw	1
  4324  0636  02AD               	subwf	___lwdiv@counter,f
  4325  0637  1D03               	btfss	3,2
  4326  0638  2E1E               	goto	l1483
  4327  0639                     l1493:	
  4328  0639  082C               	movf	___lwdiv@quotient+1,w
  4329  063A  01A7               	clrf	?___lwdiv+1
  4330  063B  07A7               	addwf	?___lwdiv+1,f
  4331  063C  082B               	movf	___lwdiv@quotient,w
  4332  063D  01A6               	clrf	?___lwdiv
  4333  063E  07A6               	addwf	?___lwdiv,f
  4334  063F  0008               	return
  4335  0640                     __end_of___lwdiv:	
  4336                           
  4337                           	psect	intentry
  4338  0004                     __pintentry:	
  4339 ;; *************** function _isr *****************
  4340 ;; Defined at:
  4341 ;;		line 75 in file "launcher_main.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;		None               void
  4348 ;; Registers used:
  4349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4355 ;;      Params:         0       0       0       0       0       0       0
  4356 ;;      Locals:         2       0       0       0       0       0       0
  4357 ;;      Temps:          5       0       0       0       0       0       0
  4358 ;;      Totals:         7       0       0       0       0       0       0
  4359 ;;Total ram usage:        7 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    1
  4362 ;; This function calls:
  4363 ;;		_WriteBuffer
  4364 ;; This function is called by:
  4365 ;;		Interrupt level 1
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369  0004                     _isr:	
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4373  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4374  0005  3180               	pagesel	$
  4375  0006  0020               	movlb	0	; select bank0
  4376  0007  087F               	movf	127,w
  4377  0008  00F6               	movwf	??_isr+4
  4378                           
  4379                           ;launcher_main.c: 78: if (PIR1bits.RCIF)
  4380  0009  1E91               	btfss	17,5	;volatile
  4381  000A  282C               	goto	i1l1973
  4382                           
  4383                           ;launcher_main.c: 79: {
  4384                           ;launcher_main.c: 81: if(OERR)
  4385  000B  0023               	movlb	3	; select bank3
  4386  000C  1C9D               	btfss	29,1	;volatile
  4387  000D  2810               	goto	i1l1961
  4388                           
  4389                           ;launcher_main.c: 82: {
  4390                           ;launcher_main.c: 83: RCSTAbits.CREN = 0;
  4391  000E  121D               	bcf	29,4	;volatile
  4392                           
  4393                           ;launcher_main.c: 84: RCSTAbits.CREN = 1;
  4394  000F  161D               	bsf	29,4	;volatile
  4395  0010                     i1l1961:	
  4396                           
  4397                           ;launcher_main.c: 85: }
  4398                           ;launcher_main.c: 86: gpsMessage[gpsIndex++] = RCREG;
  4399  0010  0819               	movf	25,w	;volatile
  4400  0011  00F2               	movwf	??_isr
  4401  0012  0021               	movlb	1	; select bank1
  4402  0013  086D               	movf	_gpsIndex^(0+128),w
  4403  0014  3EAD               	addlw	_gpsMessage& (0+255)
  4404  0015  0086               	movwf	6
  4405  0016  0187               	clrf	7
  4406  0017  0872               	movf	??_isr,w
  4407  0018  0081               	movwf	1
  4408  0019  3001               	movlw	1
  4409  001A  00F2               	movwf	??_isr
  4410  001B  0872               	movf	??_isr,w
  4411  001C  07ED               	addwf	_gpsIndex^(0+128),f	;volatile
  4412                           
  4413                           ;launcher_main.c: 87: if(gpsMessage[gpsIndex-1] == 0x0A)
  4414  001D  086D               	movf	_gpsIndex^(0+128),w
  4415  001E  3EFF               	addlw	255
  4416  001F  3EAD               	addlw	_gpsMessage& (0+255)
  4417  0020  0086               	movwf	6
  4418  0021  0187               	clrf	7
  4419  0022  0801               	movf	1,w
  4420  0023  3A0A               	xorlw	10
  4421  0024  1D03               	skipz
  4422  0025  2829               	goto	i1l1969
  4423                           
  4424                           ;launcher_main.c: 88: {
  4425                           ;launcher_main.c: 89: messageDoneFlag = 1;
  4426  0026  01AC               	clrf	_messageDoneFlag^(0+128)
  4427  0027  0AAC               	incf	_messageDoneFlag^(0+128),f
  4428                           
  4429                           ;launcher_main.c: 90: }
  4430  0028  282A               	goto	i1l1971
  4431  0029                     i1l1969:	
  4432                           
  4433                           ;launcher_main.c: 91: else
  4434                           ;launcher_main.c: 92: {
  4435                           ;launcher_main.c: 93: messageDoneFlag = 0;
  4436  0029  01AC               	clrf	_messageDoneFlag^(0+128)
  4437  002A                     i1l1971:	
  4438                           
  4439                           ;launcher_main.c: 94: }
  4440                           ;launcher_main.c: 95: PIR1bits.RCIF = 0;
  4441  002A  0020               	movlb	0	; select bank0
  4442  002B  1291               	bcf	17,5	;volatile
  4443  002C                     i1l1973:	
  4444                           
  4445                           ;launcher_main.c: 96: }
  4446                           ;launcher_main.c: 99: if (TMR1IF && TMR1IE)
  4447  002C  1C11               	btfss	17,0	;volatile
  4448  002D  283D               	goto	i1l1983
  4449  002E  0021               	movlb	1	; select bank1
  4450  002F  1C11               	btfss	17,0	;volatile
  4451  0030  283D               	goto	i1l1983
  4452                           
  4453                           ;launcher_main.c: 100: {
  4454                           ;launcher_main.c: 101: TMR1H = 0xFF;
  4455  0031  30FF               	movlw	255
  4456  0032  0020               	movlb	0	; select bank0
  4457  0033  0097               	movwf	23	;volatile
  4458                           
  4459                           ;launcher_main.c: 102: TMR1L = 0xCD;
  4460  0034  30CD               	movlw	205
  4461  0035  0096               	movwf	22	;volatile
  4462                           
  4463                           ;launcher_main.c: 103: TMR1IF = 0;
  4464  0036  1011               	bcf	17,0	;volatile
  4465                           
  4466                           ;launcher_main.c: 105: if(recordModeFlag)
  4467  0037  087D               	movf	_recordModeFlag,w
  4468  0038  1903               	btfsc	3,2
  4469  0039  283D               	goto	i1l1983
  4470                           
  4471                           ;launcher_main.c: 106: {
  4472                           ;launcher_main.c: 107: ADCON0bits.ADGO = 1;
  4473  003A  0021               	movlb	1	; select bank1
  4474  003B  149D               	bsf	29,1	;volatile
  4475  003C  0020               	movlb	0	; select bank0
  4476  003D                     i1l1983:	
  4477                           
  4478                           ;launcher_main.c: 108: }
  4479                           ;launcher_main.c: 109: }
  4480                           ;launcher_main.c: 112: if(PIR1bits.ADIF & PIE1bits.ADIE)
  4481  003D  0021               	movlb	1	; select bank1
  4482  003E  0E11               	swapf	17,w	;volatile
  4483  003F  0C89               	rrf	9,f
  4484  0040  0C89               	rrf	9,f
  4485  0041  3901               	andlw	1
  4486  0042  00F2               	movwf	??_isr
  4487  0043  0020               	movlb	0	; select bank0
  4488  0044  0E11               	swapf	17,w	;volatile
  4489  0045  0C89               	rrf	9,f
  4490  0046  0C89               	rrf	9,f
  4491  0047  3901               	andlw	1
  4492  0048  0572               	andwf	??_isr,w
  4493  0049  1903               	btfsc	3,2
  4494  004A  287B               	goto	i1l1997
  4495                           
  4496                           ;launcher_main.c: 113: {
  4497                           ;launcher_main.c: 114: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  4498  004B  3033               	movlw	51
  4499  004C  0679               	xorwf	_end,w
  4500  004D  047A               	iorwf	_end+1,w
  4501  004E  1903               	skipnz
  4502  004F  2865               	goto	i1l1989
  4503  0050  0879               	movf	_end,w
  4504  0051  3E01               	addlw	1
  4505  0052  00F2               	movwf	??_isr
  4506  0053  3000               	movlw	0
  4507  0054  3D7A               	addwfc	_end+1,w
  4508  0055  00F3               	movwf	??_isr+1
  4509  0056  087C               	movf	_start+1,w
  4510  0057  0673               	xorwf	??_isr+1,w
  4511  0058  1D03               	skipz
  4512  0059  285C               	goto	u143_25
  4513  005A  087B               	movf	_start,w
  4514  005B  0672               	xorwf	??_isr,w
  4515  005C                     u143_25:	
  4516  005C  3000               	movlw	0
  4517  005D  1903               	skipnz
  4518  005E  3001               	movlw	1
  4519  005F  00F4               	movwf	??_isr+2
  4520  0060  01F5               	clrf	??_isr+3
  4521  0061  0874               	movf	??_isr+2,w
  4522  0062  00F7               	movwf	_isr$400
  4523  0063  0875               	movf	??_isr+3,w
  4524  0064  286F               	goto	L4
  4525  0065                     i1l1989:	
  4526  0065  087C               	movf	_start+1,w
  4527  0066  047B               	iorwf	_start,w
  4528  0067  3000               	movlw	0
  4529  0068  1903               	skipnz
  4530  0069  3001               	movlw	1
  4531  006A  00F2               	movwf	??_isr
  4532  006B  01F3               	clrf	??_isr+1
  4533  006C  0872               	movf	??_isr,w
  4534  006D  00F7               	movwf	_isr$400
  4535  006E  0873               	movf	??_isr+1,w
  4536  006F                     L4:	
  4537  006F  00F8               	movwf	_isr$400+1
  4538  0070  0878               	movf	_isr$400+1,w
  4539  0071  0477               	iorwf	_isr$400,w
  4540  0072  1D03               	skipz
  4541  0073  2879               	goto	i1l1995
  4542                           
  4543                           ;launcher_main.c: 115: {
  4544                           ;launcher_main.c: 116: WriteBuffer(ADRESH);
  4545  0074  0021               	movlb	1	; select bank1
  4546  0075  081C               	movf	28,w	;volatile
  4547  0076  3186  2676  3180   	fcall	_WriteBuffer
  4548  0079                     i1l1995:	
  4549                           
  4550                           ;launcher_main.c: 117: }
  4551                           ;launcher_main.c: 118: PIR1bits.ADIF = 0;
  4552  0079  0020               	movlb	0	; select bank0
  4553  007A  1311               	bcf	17,6	;volatile
  4554  007B                     i1l1997:	
  4555                           
  4556                           ;launcher_main.c: 119: }
  4557                           ;launcher_main.c: 121: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  4558  007B  1D8B               	btfss	11,3	;volatile
  4559  007C  28A2               	goto	i1l105
  4560  007D  0027               	movlb	7	; select bank7
  4561  007E  1D96               	btfss	22,3	;volatile
  4562  007F  28A2               	goto	i1l105
  4563                           
  4564                           ;launcher_main.c: 122: {
  4565                           ;launcher_main.c: 123: IOCBFbits.IOCBF3 = 0;
  4566  0080  1196               	bcf	22,3	;volatile
  4567                           
  4568                           ;launcher_main.c: 124: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  4569  0081  0020               	movlb	0	; select bank0
  4570  0082  0C0D               	rrf	13,w	;volatile
  4571  0083  00F2               	movwf	??_isr
  4572  0084  0CF2               	rrf	??_isr,f
  4573  0085  0C72               	rrf	??_isr,w
  4574  0086  3901               	andlw	1
  4575  0087  00F3               	movwf	??_isr+1
  4576  0088  0027               	movlb	7	; select bank7
  4577  0089  0C14               	rrf	20,w	;volatile
  4578  008A  00F4               	movwf	??_isr+2
  4579  008B  0CF4               	rrf	??_isr+2,f
  4580  008C  0C74               	rrf	??_isr+2,w
  4581  008D  3901               	andlw	1
  4582  008E  0573               	andwf	??_isr+1,w
  4583  008F  1903               	btfsc	3,2
  4584  0090  2893               	goto	i1l2007
  4585                           
  4586                           ;launcher_main.c: 125: {
  4587                           ;launcher_main.c: 126: recordModeFlag = 1;
  4588  0091  01FD               	clrf	_recordModeFlag
  4589  0092  0AFD               	incf	_recordModeFlag,f
  4590  0093                     i1l2007:	
  4591                           
  4592                           ;launcher_main.c: 127: }
  4593                           ;launcher_main.c: 128: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  4594  0093  0C15               	rrf	21,w	;volatile
  4595  0094  00F2               	movwf	??_isr
  4596  0095  0CF2               	rrf	??_isr,f
  4597  0096  0C72               	rrf	??_isr,w
  4598  0097  3901               	andlw	1
  4599  0098  00F3               	movwf	??_isr+1
  4600  0099  1003               	clrc
  4601  009A  0020               	movlb	0	; select bank0
  4602  009B  1D8D               	btfss	13,3	;volatile
  4603  009C  1403               	setc
  4604  009D  3000               	movlw	0
  4605  009E  3D09               	addwfc	9,w
  4606  009F  0573               	andwf	??_isr+1,w
  4607  00A0  1D03               	btfss	3,2
  4608                           
  4609                           ;launcher_main.c: 129: {
  4610                           ;launcher_main.c: 130: recordModeFlag = 0;
  4611  00A1  01FD               	clrf	_recordModeFlag
  4612  00A2                     i1l105:	
  4613  00A2  0876               	movf	??_isr+4,w
  4614  00A3  0020               	movlb	0	; select bank0
  4615  00A4  00FF               	movwf	127
  4616  00A5  107E               	bcf	126,0	;clear compiler interrupt flag
  4617  00A6  0009               	retfie
  4618  00A7                     __end_of_isr:	
  4619                           
  4620                           	psect	text20
  4621  0676                     __ptext20:	
  4622 ;; *************** function _WriteBuffer *****************
  4623 ;; Defined at:
  4624 ;;		line 197 in file "launcher_functions.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  data            1    wreg     unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  data            1    1[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;		None               void
  4631 ;; Registers used:
  4632 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4638 ;;      Params:         0       0       0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0       0       0
  4640 ;;      Temps:          1       0       0       0       0       0       0
  4641 ;;      Totals:         2       0       0       0       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_isr
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _WriteBuffer
  4653  0676                     _WriteBuffer:	
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  4657                           ;WriteBuffer@data stored from wreg
  4658  0676  00F1               	movwf	WriteBuffer@data
  4659                           
  4660                           ;launcher_functions.c: 199: buffer[end] = data;
  4661  0677  0871               	movf	WriteBuffer@data,w
  4662  0678  00F0               	movwf	??_WriteBuffer
  4663  0679  0879               	movf	_end,w
  4664  067A  3EA0               	addlw	_buffer& (0+255)
  4665  067B  0086               	movwf	6
  4666  067C  3001               	movlw	1	; select bank3/4
  4667  067D  0087               	movwf	7
  4668  067E  0870               	movf	??_WriteBuffer,w
  4669  067F  0081               	movwf	1
  4670                           
  4671                           ;launcher_functions.c: 201: if (end == 51)
  4672  0680  3033               	movlw	51
  4673  0681  0679               	xorwf	_end,w
  4674  0682  047A               	iorwf	_end+1,w
  4675  0683  1D03               	skipz
  4676  0684  2E88               	goto	i1l1915
  4677                           
  4678                           ;launcher_functions.c: 202: end = 0;
  4679  0685  01F9               	clrf	_end
  4680  0686  01FA               	clrf	_end+1
  4681  0687  0008               	return
  4682  0688                     i1l1915:	
  4683                           
  4684                           ;launcher_functions.c: 203: else
  4685                           ;launcher_functions.c: 204: end++;
  4686  0688  3001               	movlw	1
  4687  0689  07F9               	addwf	_end,f
  4688  068A  3000               	movlw	0
  4689  068B  3DFA               	addwfc	_end+1,f
  4690  068C  0008               	return
  4691  068D                     __end_of_WriteBuffer:	
  4692  007E                     btemp	set	126	;btemp
  4693  007E                     pic14e$flags	set	126
  4694  007E                     wtemp	set	126
  4695  007E                     wtemp0	set	126
  4696  0080                     wtemp1	set	128
  4697  0082                     wtemp2	set	130
  4698  0084                     wtemp3	set	132
  4699  0086                     wtemp4	set	134
  4700  0088                     wtemp5	set	136
  4701  007F                     wtemp6	set	127
  4702  007E                     ttemp	set	126
  4703  007E                     ttemp0	set	126
  4704  0081                     ttemp1	set	129
  4705  0084                     ttemp2	set	132
  4706  0087                     ttemp3	set	135
  4707  007F                     ttemp4	set	127
  4708  007E                     ltemp	set	126
  4709  007E                     ltemp0	set	126
  4710  0082                     ltemp1	set	130
  4711  0086                     ltemp2	set	134
  4712  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    10
    Data        53
    BSS         119
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80      3      78
    BANK2            80      0      42
    BANK3            80      0      51
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 22
		 -> SetupGPS@message(BANK0[22]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1142$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _UpdateGPS->_uart_write_message
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _DecodeGPS->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    7022
                                             76 BANK0      4     0      4
                                              0 BANK1      3     3      0
                          _DecodeGPS
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           23    23      0    1133
                                             23 BANK0     23    23      0
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            37    37      0    2983
                                             39 BANK0     37    37      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1613
                                             20 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DecodeGPS                                           26    26      0    2906
                                             14 BANK0     26    26      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (5) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DecodeGPS
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _SetupGPS
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     109       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      2A      10       52.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      33      12       63.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     109      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 11:32:21 2014

                  _recordModeFlag 007D                 DecodeGPS@latitude 003A                       _SSPSTATbits 0214  
             ___wmul@multiplicand 0022              __size_of_WriteBuffer 0017                       __CFG_LVP$ON 0000  
                             l321 033D                               l263 06BF                               l440 07DF  
                             _GIE 005F                               _RA6 0066                               u905 0631  
                             u835 05D6                               u935 0740                               u865 0615  
                             u955 074F                               u885 061F                               u965 0756  
                             u895 0629                               u985 0568                               _end 0079  
                             _isr 0004                DecodeGPS@messageID 0030                               wreg 0009  
              DecodeGPS@longitude 0040                   DisableGPS@F4903 0136                              l1511 0755  
                            l1505 073D                              l1507 0749                              l1515 075E  
                            l1603 03EF                              l1621 0442                              l1461 05CC  
                            l1463 0606                              l1481 0612                              l1617 0402  
                            l1609 03FE                              l1561 036B                              l1537 0588  
                            l1529 057A                              l1483 061E                              l1627 07D9  
                            l1619 0347                              l1459 0601                              l1547 0592  
                            l1493 0639                              l1901 031F                              l1813 0121  
                            l1581 03B4                              l1549 05B5                              l1815 0131  
                            l1591 03CA                              l1575 037E                              l1559 0369  
                            l1489 0630                              l1809 0111                              l1595 03D0  
                            l1579 039A                              l1773 0473                              l1855 0218  
                            l1847 01FE                              l1783 04B1                              l1943 0519  
                            l1953 0538                              l1891 02FF                              l1939 0508  
                            l1899 0319                              _ADIE 048E                              _ADIF 008E  
                            ?_isr 0070                              STR_1 070A                              STR_2 071D  
                            STR_3 072F                              u1015 05A2                              u1200 00E4  
                            u1210 00F2                              u1220 0100                              u1135 07E0  
                            u1160 0452                              u1145 07E5                              u1235 010F  
                            u1075 03E5                              u1190 064B                              u1255 012F  
                            u1175 0471                              u1185 04AF                              u1517 0501  
                            u1527 050F                              u1537 07BE                              u1547 07CD  
                            u1557 047A                              u1567 04B8                              _PEIE 005E  
                            _RCIE 048D                              _OERR 0CE9                              _main 04D9  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              ltemp 007E                              start 00A7  
                            ttemp 007E                              wtemp 007E                     __CFG_MCLRE$ON 0000  
               ?_compute_checksum 0020                   __end_of_InitADC 0676                   __end_of_InitCLK 06CF  
                 __end_of_InitSPI 069F                ??_compute_checksum 0022                             ??_isr 0072  
                   ?_InitWatchdog 0070                             ?_main 006C                             _LATC2 0872  
                           _IOCBF 0396                   __end_of___lwdiv 0640                             i1l105 00A2  
                 __end_of___lwmod 0765                             _RCREG 0199                             _TMR1H 0017  
                           _TMR1L 0016                             _TXREG 019A                   __end_of_dpowers 070A  
             DecodeGPS@northSouth 0037                             _start 007B                    __CFG_BOREN$OFF 0000  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                   __end_of_sprintf 0447  
          uart_write_message@data 0034            uart_write_message@size 0028                   __initialization 00A9  
                      _InitTimer1 06AE                      __end_of_main 0555                __size_of_DecodeGPS 0268  
                __end_of_InitGPIO 07B4                    ??_InitWatchdog 0020  uart_write_message@ascii_checksum 0035  
                          ??_main 00EA                    __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 04D9  
                          _ADRESH 009C                            i1l2007 0093                            i1l1915 0688  
                          i1l1961 0010                            i1l1971 002A                            i1l1973 002C  
                          i1l1983 003D                            i1l1969 0029                            i1l1995 0079  
                          i1l1989 0065                            i1l1997 007B                            u143_25 005C  
                          _TMR1IE 0488                            _TMR1IF 0088                            _SPBRGH 019C  
                          _SPBRGL 019B                            _SSPBUF 0211                         ??_InitADC 0020  
                       ??_InitCLK 0020                         ??_InitSPI 0020                            ___wmul 07D6  
                __end_of_initUART 06AE                         ??___lwdiv 002A                         ??___lwmod 0032  
                          _buffer 01A0       __size_of_uart_write_message 0072                __size_of_UpdateGPS 001D  
               __end_of_DecodeGPS 0341                         ??_sprintf 003A                    _gpsInvalidFlag 00E9  
         __end_of__initialization 00D5                       ?_InitTimer1 0070                    __pcstackCOMMON 0070  
                    __pidataBANK1 07F4                      __pidataBANK2 0765              __end_of_InitWatchdog 06D6  
                      __pbssBANK1 00A0                        __pbssBANK3 01A0                         ?_InitGPIO 0070  
                 SetupGPS@message 004A                 __end_of_UpdateGPS 065D                        __pmaintext 04D9  
                       ?_SetupGPS 0070                           ?___wmul 0020                     ??_WriteBuffer 0070  
                      __pintentry 0004         UpdateGPS@GPSupdateMessage 0038                __size_of_uart_xmit 000A  
       __size_of_compute_checksum 0042               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                       ?_initUART 0070                           _InitADC 065D                           _InitCLK 06C7  
                         _InitSPI 068D                        _gpsMessage 00AD           __size_of_ToggleSleepGPS 0022  
                     SetupGPS@MID 0066                        ??_SetupGPS 0047                   __size_of___wmul 001E  
                         ___lwdiv 0609                           ___lwmod 0736                           _isr$400 0077  
                         __ptext1 069F                           __ptext2 0640                           __ptext3 07B4  
                         __ptext4 0447                           __ptext5 0555                           __ptext6 06BD  
                         __ptext7 05C7                           __ptext8 0341                           __ptext9 0736  
                       _T1CONbits 0018                           _dpowers 0700               __end_of_WriteBuffer 068D  
                    __size_of_isr 00A3                         _IOCBFbits 0396                         _IOCBNbits 0395  
                       _IOCBPbits 0394                           _sprintf 0341                           clrloop0 06D7  
            end_of_initialization 00D5                        ??_initUART 0020                           init_ram 06DC  
                         initloop 06DD                   WriteBuffer@data 0071                 __end_of_uart_xmit 06C7  
                       _RCSTAbits 019D                      __pstringtext 0700                         _PORTBbits 000D  
                __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E                   DecodeGPS@status 0039  
            uart_xmit@mydata_byte 0020                         _DecodeGPS 00D9                         _TXSTAbits 019E  
                    ??_InitTimer1 0020                       _WriteBuffer 0676                    __end_of___wmul 07F4  
      __end_of_uart_write_message 05C7                      _InitWatchdog 06CF                     SetupGPS@F4906 00DF  
                   SetupGPS@F4908 00E5               start_initialization 00A9                  _compute_checksum 05C7  
                     __end_of_isr 00A7                 compute_checksum@x 0026                __end_of_InitTimer1 06BD  
                      ?_DecodeGPS 0070                    _ToggleSleepGPS 07B4                 __size_of_InitGPIO 0025  
                       SetupGPS@x 006A              compute_checksum@data 0025              compute_checksum@size 0020  
                        ??___wmul 0024                       __pdataBANK1 00DF                       __pdataBANK2 0120  
               __size_of_SetupGPS 0092                         _UpdateGPS 0640          compute_checksum@checksum 0024  
                     __pbssCOMMON 0079                         ___latbits 0001                     __pcstackBANK0 0020  
                   __pcstackBANK1 00EA               __end_of__stringdata 0736               uart_write_message@x 0031  
          __end_of_ToggleSleepGPS 07D6                   _messageDoneFlag 00AC                       sprintf@_val 0042  
                     sprintf@flag 003E                       sprintf@prec 003F                          ?_InitADC 0070  
                        ?_InitCLK 0070                          ?_InitSPI 0070                 __size_of_initUART 000F  
                       __pnvBANK1 00ED                  ___lwdiv@dividend 0028                          ?___lwdiv 0026  
                        ?___lwmod 002E                        ?_UpdateGPS 0070                    UpdateGPS@F4913 0120  
                __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 002B                          ?_sprintf 0034  
      uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070                       ??_DecodeGPS 002E  
                  ___wmul@product 0024                          _LATBbits 010D                         clear_ram0 06D6  
                        _PIE1bits 0091                    DecodeGPS@F4915 0143                    DecodeGPS@F4917 00A0  
                  DecodeGPS@F4919 00A6                          _PIR1bits 0011                         _uart_xmit 06BD  
                      _ADCON0bits 009D                        _ADCON1bits 009E                       __stringdata 070A  
                      _ADCON2bits 009F                 ___wmul@multiplier 0020                          _InitGPIO 078F  
                __size_of_InitADC 0019                  __size_of_InitCLK 0008                  __size_of_InitSPI 0012  
        __end_of_compute_checksum 0609             SetupGPS@startSequence 0060                          _SetupGPS 0447  
                      ?_uart_xmit 0070                      ?_WriteBuffer 0070                       ??_UpdateGPS 0037  
                __size_of___lwdiv 0037                  __size_of___lwmod 002F           _uart_write_message$1094 002D  
         _uart_write_message$1095 002F                        _ANSELAbits 018C                        _ANSELBbits 018D  
                 ___lwdiv@divisor 0026                   ___lwdiv@counter 002D                          __ptext10 06CF  
                        __ptext11 06AE                          __ptext20 0676                          __ptext12 068D  
                        __ptext13 078F                        _T1GCONbits 0019                          __ptext14 06C7  
                        __ptext15 065D                          __ptext16 00D9                          __ptext17 07D6  
                        __ptext18 0609                _uart_write_message 0555                  __size_of_sprintf 0106  
                        _gpsIndex 00ED                          _initUART 069F                     __size_of_main 007C  
             ?_uart_write_message 0028                        DecodeGPS@x 0046                          main@argc 006C  
                        main@argv 006E              ??_uart_write_message 002A                        _INTCONbits 000B  
                     pic14e$flags 007E                          intlevel1 0000                         sprintf@ap 0040  
                       sprintf@sp 0041                  ___lwmod@dividend 0030                 __CFG_CLKOUTEN$OFF 0000  
                      _OSCCONbits 0099                       ??_uart_xmit 0020                          sprintf@c 0046  
                        sprintf@f 0034                   ___lwmod@divisor 002E                   ___lwmod@counter 0033  
                ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215                        _WDTCONbits 0097  
               DecodeGPS@eastWest 0038  
