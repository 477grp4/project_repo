

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 17:43:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011D                     	;# 
   109  011D                     	;# 
   110  011E                     	;# 
   111  011F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0199                     	;# 
   125  0199                     	;# 
   126  0199                     	;# 
   127  019A                     	;# 
   128  019A                     	;# 
   129  019A                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019D                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019E                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  020E                     	;# 
   152  0210                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  028C                     	;# 
   169  028D                     	;# 
   170  028E                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  030C                     	;# 
   180  030D                     	;# 
   181  030E                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  0390                     	;# 
   186  0391                     	;# 
   187  0392                     	;# 
   188  0393                     	;# 
   189  0394                     	;# 
   190  0395                     	;# 
   191  0396                     	;# 
   192  0397                     	;# 
   193  0398                     	;# 
   194  0399                     	;# 
   195  039D                     	;# 
   196  039E                     	;# 
   197  039F                     	;# 
   198  0511                     	;# 
   199  0513                     	;# 
   200  051A                     	;# 
   201  0811                     	;# 
   202  0812                     	;# 
   203  0813                     	;# 
   204  0814                     	;# 
   205  0815                     	;# 
   206  0816                     	;# 
   207  0817                     	;# 
   208  0818                     	;# 
   209  0819                     	;# 
   210  081A                     	;# 
   211  081B                     	;# 
   212  081C                     	;# 
   213  081D                     	;# 
   214  081E                     	;# 
   215  081F                     	;# 
   216  0820                     	;# 
   217  0821                     	;# 
   218  0821                     	;# 
   219  0822                     	;# 
   220  0823                     	;# 
   221  0823                     	;# 
   222  0824                     	;# 
   223  0825                     	;# 
   224  0825                     	;# 
   225  0826                     	;# 
   226  0827                     	;# 
   227  0827                     	;# 
   228  0828                     	;# 
   229  0829                     	;# 
   230  082A                     	;# 
   231  082B                     	;# 
   232  082C                     	;# 
   233  082D                     	;# 
   234  082E                     	;# 
   235  082F                     	;# 
   236  0831                     	;# 
   237  0832                     	;# 
   238  0833                     	;# 
   239  0834                     	;# 
   240  0835                     	;# 
   241  0836                     	;# 
   242  0837                     	;# 
   243  0838                     	;# 
   244  0839                     	;# 
   245  083A                     	;# 
   246  083B                     	;# 
   247  083C                     	;# 
   248  083D                     	;# 
   249  083E                     	;# 
   250  083F                     	;# 
   251  0840                     	;# 
   252  0841                     	;# 
   253  0841                     	;# 
   254  0842                     	;# 
   255  0843                     	;# 
   256  0843                     	;# 
   257  0844                     	;# 
   258  0845                     	;# 
   259  0845                     	;# 
   260  0846                     	;# 
   261  0847                     	;# 
   262  0847                     	;# 
   263  0848                     	;# 
   264  0849                     	;# 
   265  084A                     	;# 
   266  084B                     	;# 
   267  084C                     	;# 
   268  084D                     	;# 
   269  084E                     	;# 
   270  084F                     	;# 
   271  0FE4                     	;# 
   272  0FE5                     	;# 
   273  0FE6                     	;# 
   274  0FE7                     	;# 
   275  0FE8                     	;# 
   276  0FE9                     	;# 
   277  0FEA                     	;# 
   278  0FEB                     	;# 
   279  0FED                     	;# 
   280  0FEE                     	;# 
   281  0FEF                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0014                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009E                     	;# 
   328  009F                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  0111                     	;# 
   333  0112                     	;# 
   334  0113                     	;# 
   335  0114                     	;# 
   336  0115                     	;# 
   337  0116                     	;# 
   338  0117                     	;# 
   339  0118                     	;# 
   340  0119                     	;# 
   341  011D                     	;# 
   342  011D                     	;# 
   343  011E                     	;# 
   344  011F                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  0191                     	;# 
   348  0191                     	;# 
   349  0192                     	;# 
   350  0193                     	;# 
   351  0193                     	;# 
   352  0193                     	;# 
   353  0194                     	;# 
   354  0195                     	;# 
   355  0196                     	;# 
   356  0199                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019A                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019D                     	;# 
   371  019D                     	;# 
   372  019D                     	;# 
   373  019E                     	;# 
   374  019E                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  019F                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  020C                     	;# 
   382  020D                     	;# 
   383  020E                     	;# 
   384  0210                     	;# 
   385  0211                     	;# 
   386  0211                     	;# 
   387  0212                     	;# 
   388  0212                     	;# 
   389  0213                     	;# 
   390  0213                     	;# 
   391  0214                     	;# 
   392  0214                     	;# 
   393  0215                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0216                     	;# 
   397  0216                     	;# 
   398  0217                     	;# 
   399  0217                     	;# 
   400  028C                     	;# 
   401  028D                     	;# 
   402  028E                     	;# 
   403  0291                     	;# 
   404  0291                     	;# 
   405  0292                     	;# 
   406  0293                     	;# 
   407  0298                     	;# 
   408  0298                     	;# 
   409  0299                     	;# 
   410  029A                     	;# 
   411  030C                     	;# 
   412  030D                     	;# 
   413  030E                     	;# 
   414  038C                     	;# 
   415  038D                     	;# 
   416  038E                     	;# 
   417  0390                     	;# 
   418  0391                     	;# 
   419  0392                     	;# 
   420  0393                     	;# 
   421  0394                     	;# 
   422  0395                     	;# 
   423  0396                     	;# 
   424  0397                     	;# 
   425  0398                     	;# 
   426  0399                     	;# 
   427  039D                     	;# 
   428  039E                     	;# 
   429  039F                     	;# 
   430  0511                     	;# 
   431  0513                     	;# 
   432  051A                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  0815                     	;# 
   438  0816                     	;# 
   439  0817                     	;# 
   440  0818                     	;# 
   441  0819                     	;# 
   442  081A                     	;# 
   443  081B                     	;# 
   444  081C                     	;# 
   445  081D                     	;# 
   446  081E                     	;# 
   447  081F                     	;# 
   448  0820                     	;# 
   449  0821                     	;# 
   450  0821                     	;# 
   451  0822                     	;# 
   452  0823                     	;# 
   453  0823                     	;# 
   454  0824                     	;# 
   455  0825                     	;# 
   456  0825                     	;# 
   457  0826                     	;# 
   458  0827                     	;# 
   459  0827                     	;# 
   460  0828                     	;# 
   461  0829                     	;# 
   462  082A                     	;# 
   463  082B                     	;# 
   464  082C                     	;# 
   465  082D                     	;# 
   466  082E                     	;# 
   467  082F                     	;# 
   468  0831                     	;# 
   469  0832                     	;# 
   470  0833                     	;# 
   471  0834                     	;# 
   472  0835                     	;# 
   473  0836                     	;# 
   474  0837                     	;# 
   475  0838                     	;# 
   476  0839                     	;# 
   477  083A                     	;# 
   478  083B                     	;# 
   479  083C                     	;# 
   480  083D                     	;# 
   481  083E                     	;# 
   482  083F                     	;# 
   483  0840                     	;# 
   484  0841                     	;# 
   485  0841                     	;# 
   486  0842                     	;# 
   487  0843                     	;# 
   488  0843                     	;# 
   489  0844                     	;# 
   490  0845                     	;# 
   491  0845                     	;# 
   492  0846                     	;# 
   493  0847                     	;# 
   494  0847                     	;# 
   495  0848                     	;# 
   496  0849                     	;# 
   497  084A                     	;# 
   498  084B                     	;# 
   499  084C                     	;# 
   500  084D                     	;# 
   501  084E                     	;# 
   502  084F                     	;# 
   503  0FE4                     	;# 
   504  0FE5                     	;# 
   505  0FE6                     	;# 
   506  0FE7                     	;# 
   507  0FE8                     	;# 
   508  0FE9                     	;# 
   509  0FEA                     	;# 
   510  0FEB                     	;# 
   511  0FED                     	;# 
   512  0FEE                     	;# 
   513  0FEF                     	;# 
   514  0000                     	;# 
   515  0001                     	;# 
   516  0002                     	;# 
   517  0003                     	;# 
   518  0004                     	;# 
   519  0005                     	;# 
   520  0006                     	;# 
   521  0007                     	;# 
   522  0008                     	;# 
   523  0009                     	;# 
   524  000A                     	;# 
   525  000B                     	;# 
   526  000C                     	;# 
   527  000D                     	;# 
   528  000E                     	;# 
   529  0010                     	;# 
   530  0011                     	;# 
   531  0012                     	;# 
   532  0014                     	;# 
   533  0015                     	;# 
   534  0016                     	;# 
   535  0016                     	;# 
   536  0017                     	;# 
   537  0018                     	;# 
   538  0019                     	;# 
   539  001A                     	;# 
   540  001B                     	;# 
   541  001C                     	;# 
   542  008C                     	;# 
   543  008D                     	;# 
   544  008E                     	;# 
   545  0090                     	;# 
   546  0091                     	;# 
   547  0092                     	;# 
   548  0094                     	;# 
   549  0095                     	;# 
   550  0096                     	;# 
   551  0097                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009A                     	;# 
   555  009B                     	;# 
   556  009B                     	;# 
   557  009C                     	;# 
   558  009D                     	;# 
   559  009E                     	;# 
   560  009F                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011D                     	;# 
   574  011D                     	;# 
   575  011E                     	;# 
   576  011F                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0199                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  020E                     	;# 
   616  0210                     	;# 
   617  0211                     	;# 
   618  0211                     	;# 
   619  0212                     	;# 
   620  0212                     	;# 
   621  0213                     	;# 
   622  0213                     	;# 
   623  0214                     	;# 
   624  0214                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0216                     	;# 
   629  0216                     	;# 
   630  0217                     	;# 
   631  0217                     	;# 
   632  028C                     	;# 
   633  028D                     	;# 
   634  028E                     	;# 
   635  0291                     	;# 
   636  0291                     	;# 
   637  0292                     	;# 
   638  0293                     	;# 
   639  0298                     	;# 
   640  0298                     	;# 
   641  0299                     	;# 
   642  029A                     	;# 
   643  030C                     	;# 
   644  030D                     	;# 
   645  030E                     	;# 
   646  038C                     	;# 
   647  038D                     	;# 
   648  038E                     	;# 
   649  0390                     	;# 
   650  0391                     	;# 
   651  0392                     	;# 
   652  0393                     	;# 
   653  0394                     	;# 
   654  0395                     	;# 
   655  0396                     	;# 
   656  0397                     	;# 
   657  0398                     	;# 
   658  0399                     	;# 
   659  039D                     	;# 
   660  039E                     	;# 
   661  039F                     	;# 
   662  0511                     	;# 
   663  0513                     	;# 
   664  051A                     	;# 
   665  0811                     	;# 
   666  0812                     	;# 
   667  0813                     	;# 
   668  0814                     	;# 
   669  0815                     	;# 
   670  0816                     	;# 
   671  0817                     	;# 
   672  0818                     	;# 
   673  0819                     	;# 
   674  081A                     	;# 
   675  081B                     	;# 
   676  081C                     	;# 
   677  081D                     	;# 
   678  081E                     	;# 
   679  081F                     	;# 
   680  0820                     	;# 
   681  0821                     	;# 
   682  0821                     	;# 
   683  0822                     	;# 
   684  0823                     	;# 
   685  0823                     	;# 
   686  0824                     	;# 
   687  0825                     	;# 
   688  0825                     	;# 
   689  0826                     	;# 
   690  0827                     	;# 
   691  0827                     	;# 
   692  0828                     	;# 
   693  0829                     	;# 
   694  082A                     	;# 
   695  082B                     	;# 
   696  082C                     	;# 
   697  082D                     	;# 
   698  082E                     	;# 
   699  082F                     	;# 
   700  0831                     	;# 
   701  0832                     	;# 
   702  0833                     	;# 
   703  0834                     	;# 
   704  0835                     	;# 
   705  0836                     	;# 
   706  0837                     	;# 
   707  0838                     	;# 
   708  0839                     	;# 
   709  083A                     	;# 
   710  083B                     	;# 
   711  083C                     	;# 
   712  083D                     	;# 
   713  083E                     	;# 
   714  083F                     	;# 
   715  0840                     	;# 
   716  0841                     	;# 
   717  0841                     	;# 
   718  0842                     	;# 
   719  0843                     	;# 
   720  0843                     	;# 
   721  0844                     	;# 
   722  0845                     	;# 
   723  0845                     	;# 
   724  0846                     	;# 
   725  0847                     	;# 
   726  0847                     	;# 
   727  0848                     	;# 
   728  0849                     	;# 
   729  084A                     	;# 
   730  084B                     	;# 
   731  084C                     	;# 
   732  084D                     	;# 
   733  084E                     	;# 
   734  084F                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746                           
   747                           	psect	idataBANK1
   748  0E87                     __pidataBANK1:	
   749                           
   750                           ;initializer for DisableGPS@F4913
   751  0E87  3424               	retlw	36
   752  0E88  3450               	retlw	80
   753  0E89  3453               	retlw	83
   754  0E8A  3452               	retlw	82
   755  0E8B  3446               	retlw	70
   756  0E8C  3431               	retlw	49
   757  0E8D  3431               	retlw	49
   758  0E8E  3437               	retlw	55
   759  0E8F  342C               	retlw	44
   760  0E90  3431               	retlw	49
   761  0E91  3436               	retlw	54
   762  0E92  342A               	retlw	42
   763  0E93  3400               	retlw	0
   764                           
   765                           ;initializer for DecodeGPS@F4926
   766  0E94  3424               	retlw	36
   767  0E95  3447               	retlw	71
   768  0E96  3450               	retlw	80
   769  0E97  3447               	retlw	71
   770  0E98  344C               	retlw	76
   771  0E99  344C               	retlw	76
   772  0E9A  3400               	retlw	0
   773                           
   774                           ;initializer for SetupGPS@F4916
   775  0E9B  3424               	retlw	36
   776  0E9C  3450               	retlw	80
   777  0E9D  3453               	retlw	83
   778  0E9E  3452               	retlw	82
   779  0E9F  3446               	retlw	70
   780  0EA0  3400               	retlw	0
   781                           
   782                           ;initializer for SetupGPS@F4918
   783  0EA1  3431               	retlw	49
   784  0EA2  3430               	retlw	48
   785  0EA3  3433               	retlw	51
   786  0EA4  3400               	retlw	0
   787                           
   788                           ;initializer for _gpsInvalidFlag
   789  0EA5  3401               	retlw	1
   790                           
   791                           ;initializer for _validEastWest
   792  0EA6  3445               	retlw	69
   793                           
   794                           ;initializer for _validNorthSouth
   795  0EA7  344E               	retlw	78
   796                           
   797                           	psect	idataBANK2
   798  0E0B                     __pidataBANK2:	
   799                           
   800                           ;initializer for UpdateGPS@F4923
   801  0E0B  3424               	retlw	36
   802  0E0C  3450               	retlw	80
   803  0E0D  3453               	retlw	83
   804  0E0E  3452               	retlw	82
   805  0E0F  3446               	retlw	70
   806  0E10  3431               	retlw	49
   807  0E11  3430               	retlw	48
   808  0E12  3433               	retlw	51
   809  0E13  342C               	retlw	44
   810  0E14  3430               	retlw	48
   811  0E15  3431               	retlw	49
   812  0E16  342C               	retlw	44
   813  0E17  3430               	retlw	48
   814  0E18  3431               	retlw	49
   815  0E19  342C               	retlw	44
   816  0E1A  3430               	retlw	48
   817  0E1B  3430               	retlw	48
   818  0E1C  342C               	retlw	44
   819  0E1D  3430               	retlw	48
   820  0E1E  3430               	retlw	48
   821  0E1F  342A               	retlw	42
   822  0E20  3400               	retlw	0
   823                           
   824                           	psect	stringtext
   825  0800                     __pstringtext:	
   826  0800                     _dpowers:	
   827  0800  3401               	retlw	1
   828  0801  3400               	retlw	0
   829  0802  340A               	retlw	10
   830  0803  3400               	retlw	0
   831  0804  3464               	retlw	100
   832  0805  3400               	retlw	0
   833  0806  34E8               	retlw	232
   834  0807  3403               	retlw	3
   835  0808  3410               	retlw	16
   836  0809  3427               	retlw	39
   837  080A                     __end_of_dpowers:	
   838  080A                     __stringdata:	
   839  080A                     STR_1:	
   840  080A  3425               	retlw	37	;'%'
   841  080B  3473               	retlw	115	;'s'
   842  080C  3425               	retlw	37	;'%'
   843  080D  3473               	retlw	115	;'s'
   844  080E  342C               	retlw	44	;','
   845  080F  3430               	retlw	48	;'0'
   846  0810  3425               	retlw	37	;'%'
   847  0811  3464               	retlw	100	;'d'
   848  0812  342C               	retlw	44	;','
   849  0813  3430               	retlw	48	;'0'
   850  0814  3430               	retlw	48	;'0'
   851  0815  342C               	retlw	44	;','
   852  0816  3430               	retlw	48	;'0'
   853  0817  3430               	retlw	48	;'0'
   854  0818  342C               	retlw	44	;','
   855  0819  3430               	retlw	48	;'0'
   856  081A  3430               	retlw	48	;'0'
   857  081B  342A               	retlw	42	;'*'
   858  081C  3400               	retlw	0
   859  081D                     STR_2:	
   860  081D  3425               	retlw	37	;'%'
   861  081E  3473               	retlw	115	;'s'
   862  081F  3425               	retlw	37	;'%'
   863  0820  3473               	retlw	115	;'s'
   864  0821  342C               	retlw	44	;','
   865  0822  3430               	retlw	48	;'0'
   866  0823  3431               	retlw	49	;'1'
   867  0824  342C               	retlw	44	;','
   868  0825  3430               	retlw	48	;'0'
   869  0826  3431               	retlw	49	;'1'
   870  0827  342C               	retlw	44	;','
   871  0828  3430               	retlw	48	;'0'
   872  0829  3431               	retlw	49	;'1'
   873  082A  342C               	retlw	44	;','
   874  082B  3430               	retlw	48	;'0'
   875  082C  3430               	retlw	48	;'0'
   876  082D  342A               	retlw	42	;'*'
   877  082E  3400               	retlw	0
   878  082F                     STR_3:	
   879  082F  3428               	retlw	40	;'('
   880  0830  346E               	retlw	110	;'n'
   881  0831  3475               	retlw	117	;'u'
   882  0832  346C               	retlw	108	;'l'
   883  0833  346C               	retlw	108	;'l'
   884  0834  3429               	retlw	41	;')'
   885  0835  3400               	retlw	0
   886  0836                     __end_of__stringdata:	
   887                           
   888                           ; #config settings
   889  0000                     
   890                           	psect	nvBANK1
   891  00E3                     __pnvBANK1:	
   892  00E3                     _gpsIndex:	
   893  00E3                     	ds	1
   894  000B                     _INTCONbits	set	11
   895  0011                     _PIR1bits	set	17
   896  000C                     _PORTAbits	set	12
   897  000D                     _PORTBbits	set	13
   898  0018                     _T1CONbits	set	24
   899  0019                     _T1GCONbits	set	25
   900  0017                     _TMR1H	set	23
   901  0016                     _TMR1L	set	22
   902  008E                     _ADIF	set	142
   903  005F                     _GIE	set	95
   904  005E                     _PEIE	set	94
   905  0066                     _RA6	set	102
   906  0088                     _TMR1IF	set	136
   907  00C0                     _TMR1ON	set	192
   908  009D                     _ADCON0bits	set	157
   909  009E                     _ADCON1bits	set	158
   910  009F                     _ADCON2bits	set	159
   911  009C                     _ADRESH	set	156
   912  0099                     _OSCCONbits	set	153
   913  0091                     _PIE1bits	set	145
   914  008C                     _TRISAbits	set	140
   915  008D                     _TRISBbits	set	141
   916  008E                     _TRISCbits	set	142
   917  0097                     _WDTCONbits	set	151
   918  048E                     _ADIE	set	1166
   919  048D                     _RCIE	set	1165
   920  0488                     _TMR1IE	set	1160
   921  010D                     _LATBbits	set	269
   922  0872                     _LATC2	set	2162
   923  018C                     _ANSELAbits	set	396
   924  018D                     _ANSELBbits	set	397
   925  0199                     _RCREG	set	409
   926  019D                     _RCSTAbits	set	413
   927  019C                     _SPBRGH	set	412
   928  019B                     _SPBRGL	set	411
   929  019A                     _TXREG	set	410
   930  019E                     _TXSTAbits	set	414
   931  0CE9                     _OERR	set	3305
   932  0211                     _SSPBUF	set	529
   933  0215                     _SSPCON1bits	set	533
   934  0214                     _SSPSTATbits	set	532
   935  0393                     _IOCAF	set	915
   936  0393                     _IOCAFbits	set	915
   937  0392                     _IOCANbits	set	914
   938  0391                     _IOCAPbits	set	913
   939  0396                     _IOCBF	set	918
   940  0396                     _IOCBFbits	set	918
   941  0395                     _IOCBNbits	set	917
   942  0394                     _IOCBPbits	set	916
   943                           
   944                           	psect	cinit
   945  00CF                     start_initialization:	
   946  00CF                     __initialization:	
   947                           
   948                           ; Clear objects allocated to COMMON
   949  00CF  01F9               	clrf	__pbssCOMMON& (0+127)
   950  00D0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   951  00D1  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   952  00D2  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   953  00D3  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   954                           
   955                           ; Clear objects allocated to BANK1
   956  00D4  30C1               	movlw	low __pbssBANK1
   957  00D5  0084               	movwf	4
   958  00D6  3000               	movlw	high __pbssBANK1
   959  00D7  0085               	movwf	5
   960  00D8  301E               	movlw	30
   961  00D9  318D  257A  3180   	fcall	clear_ram0
   962                           
   963                           ; Clear objects allocated to BANK2
   964  00DC  3020               	movlw	low __pbssBANK2
   965  00DD  0084               	movwf	4
   966  00DE  3001               	movlw	high __pbssBANK2
   967  00DF  0085               	movwf	5
   968  00E0  3032               	movlw	50
   969  00E1  318D  257A  3180   	fcall	clear_ram0
   970                           
   971                           ; Clear objects allocated to BANK3
   972  00E4  30A0               	movlw	low __pbssBANK3
   973  00E5  0084               	movwf	4
   974  00E6  3001               	movlw	high __pbssBANK3
   975  00E7  0085               	movwf	5
   976  00E8  3033               	movlw	51
   977  00E9  318D  257A  3180   	fcall	clear_ram0
   978                           
   979                           ; Initialize objects allocated to BANK1
   980  00EC  3087               	movlw	low __pidataBANK1
   981  00ED  0084               	movwf	4
   982  00EE  308E               	movlw	(high __pidataBANK1)| (0+128)
   983  00EF  0085               	movwf	5
   984  00F0  30A0               	movlw	low __pdataBANK1
   985  00F1  0086               	movwf	6
   986  00F2  3000               	movlw	high __pdataBANK1
   987  00F3  0087               	movwf	7
   988  00F4  3021               	movlw	33
   989  00F5  318D  2574  3180   	fcall	init_ram
   990                           
   991                           ; Initialize objects allocated to BANK2
   992  00F8  300B               	movlw	low __pidataBANK2
   993  00F9  0084               	movwf	4
   994  00FA  308E               	movlw	(high __pidataBANK2)| (0+128)
   995  00FB  0085               	movwf	5
   996  00FC  3052               	movlw	low __pdataBANK2
   997  00FD  0086               	movwf	6
   998  00FE  3001               	movlw	high __pdataBANK2
   999  00FF  0087               	movwf	7
  1000  0100  3016               	movlw	22
  1001  0101  318D  2574         	fcall	init_ram
  1002  0103                     end_of_initialization:	
  1003                           ;End of C runtime variable initialization code
  1004                           
  1005  0103                     __end_of__initialization:	
  1006  0103  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1007  0104  0020               	movlb	0
  1008  0105  3186  2ECF         	ljmp	_main	;jump to C main() function
  1009                           
  1010                           	psect	bssCOMMON
  1011  0079                     __pbssCOMMON:	
  1012  0079                     _end:	
  1013  0079                     	ds	2
  1014  007B                     _start:	
  1015  007B                     	ds	2
  1016  007D                     _messageDoneFlag:	
  1017  007D                     	ds	1
  1018                           
  1019                           	psect	bssBANK1
  1020  00C1                     __pbssBANK1:	
  1021  00C1                     DecodeGPS@F4928:	
  1022  00C1                     	ds	6
  1023  00C7                     DecodeGPS@F4930:	
  1024  00C7                     	ds	6
  1025  00CD                     _validLatitude:	
  1026  00CD                     	ds	6
  1027  00D3                     _validLongitude:	
  1028  00D3                     	ds	6
  1029  00D9                     _recordEndAdress:	
  1030  00D9                     	ds	4
  1031  00DD                     _recordFlag:	
  1032  00DD                     	ds	1
  1033  00DE                     _strobeFlag:	
  1034  00DE                     	ds	1
  1035                           
  1036                           	psect	dataBANK1
  1037  00A0                     __pdataBANK1:	
  1038  00A0                     DisableGPS@F4913:	
  1039  00A0                     	ds	13
  1040  00AD                     DecodeGPS@F4926:	
  1041  00AD                     	ds	7
  1042  00B4                     SetupGPS@F4916:	
  1043  00B4                     	ds	6
  1044  00BA                     SetupGPS@F4918:	
  1045  00BA                     	ds	4
  1046  00BE                     _gpsInvalidFlag:	
  1047  00BE                     	ds	1
  1048  00BF                     _validEastWest:	
  1049  00BF                     	ds	1
  1050  00C0                     _validNorthSouth:	
  1051  00C0                     	ds	1
  1052                           
  1053                           	psect	bssBANK2
  1054  0120                     __pbssBANK2:	
  1055  0120                     _gpsMessage:	
  1056  0120                     	ds	50
  1057                           
  1058                           	psect	dataBANK2
  1059  0152                     __pdataBANK2:	
  1060  0152                     UpdateGPS@F4923:	
  1061  0152                     	ds	22
  1062                           
  1063                           	psect	bssBANK3
  1064  01A0                     __pbssBANK3:	
  1065  01A0                     _buffer:	
  1066  01A0                     	ds	51
  1067                           
  1068                           	psect	clrtext
  1069  0D7A                     clear_ram0:	
  1070                           ;	Called with FSR0 containing the base address, and
  1071                           ;	WREG with the size to clear
  1072                           
  1073  0D7A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1074  0D7B                     clrloop0:	
  1075  0D7B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1076  0D7C  3101               	addfsr 0,1
  1077  0D7D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1078  0D7E  2D7B               	goto	clrloop0	;have we reached the end yet?
  1079  0D7F  3400               	retlw	0	;all done for this memory range, return
  1080                           
  1081                           	psect	inittext
  1082  0D74                     init_ram:	
  1083  0D74  00FE               	movwf	126
  1084  0D75                     initloop:	
  1085  0D75  0012               	moviw fsr0++
  1086  0D76  001E               	movwi fsr1++
  1087  0D77  0BFE               	decfsz	126,f
  1088  0D78  2D75               	goto	initloop
  1089  0D79  3400               	retlw	0
  1090                           
  1091                           	psect	cstackBANK1
  1092  00DF                     __pcstackBANK1:	
  1093  00DF                     ??_main:	
  1094                           
  1095                           ; 0 bytes @ 0x0
  1096  00DF                     	ds	3
  1097  00E2                     main@periodicCounter:	
  1098                           
  1099                           ; 1 bytes @ 0x3
  1100  00E2                     	ds	1
  1101                           
  1102                           	psect	cstackCOMMON
  1103  0070                     __pcstackCOMMON:	
  1104  0070                     ?_InitCLK:	
  1105  0070                     ?_InitGPIO:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_InitADC:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_InitSPI:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_InitTimer1:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_InitWatchdog:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?_initUART:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_ToggleSleepGPS:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?_SetupGPS:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ?_RecordMode:	
  1130                           ; 0 bytes @ 0x0
  1131                           
  1132  0070                     ?_UpdateGPS:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?_GoToSleep:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_WriteBuffer:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     ??_WriteBuffer:	
  1142                           ; 0 bytes @ 0x0
  1143                           
  1144  0070                     ?_DecodeGPS:	
  1145                           ; 0 bytes @ 0x0
  1146                           
  1147  0070                     ?_isr:	
  1148                           ; 0 bytes @ 0x0
  1149                           
  1150  0070                     ?_WriteSPI:	
  1151                           ; 0 bytes @ 0x0
  1152                           
  1153  0070                     ?_uart_xmit:	
  1154                           ; 0 bytes @ 0x0
  1155                           
  1156  0070                     ?_ReadSPI:	
  1157                           ; 0 bytes @ 0x0
  1158                           
  1159  0070                     ?_ReadStatusSPI:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_ReadBuffer:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165                           
  1166                           ; 1 bytes @ 0x0
  1167  0070                     	ds	1
  1168  0071                     WriteBuffer@data:	
  1169                           
  1170                           ; 1 bytes @ 0x1
  1171  0071                     	ds	1
  1172  0072                     ??_isr:	
  1173                           
  1174                           ; 0 bytes @ 0x2
  1175  0072                     	ds	5
  1176  0077                     _isr$524:	
  1177                           
  1178                           ; 2 bytes @ 0x7
  1179  0077                     	ds	2
  1180                           
  1181                           	psect	cstackBANK0
  1182  0020                     __pcstackBANK0:	
  1183  0020                     ??_InitCLK:	
  1184  0020                     ??_InitGPIO:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0020                     ??_InitADC:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0020                     ??_InitSPI:	
  1191                           ; 0 bytes @ 0x0
  1192                           
  1193  0020                     ??_InitTimer1:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0020                     ??_InitWatchdog:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0020                     ??_initUART:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0020                     ??_ToggleSleepGPS:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0020                     ??_GoToSleep:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0020                     ??_WriteSPI:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0020                     ??_ReadSPI:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0020                     ??_ReadBuffer:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0020                     ??_uart_xmit:	
  1218                           ; 0 bytes @ 0x0
  1219                           
  1220  0020                     ?_compute_checksum:	
  1221                           ; 0 bytes @ 0x0
  1222                           
  1223  0020                     ?___wmul:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0020                     uart_xmit@mydata_byte:	
  1227                           ; 2 bytes @ 0x0
  1228                           
  1229  0020                     compute_checksum@size:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0020                     ___wmul@multiplier:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235                           
  1236                           ; 2 bytes @ 0x0
  1237  0020                     	ds	1
  1238  0021                     ReadSPI@dataByte:	
  1239  0021                     ReadBuffer@read_data:	
  1240                           ; 1 bytes @ 0x1
  1241                           
  1242  0021                     GoToSleep@count:	
  1243                           ; 1 bytes @ 0x1
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x1
  1247  0021                     	ds	1
  1248  0022                     ??_compute_checksum:	
  1249  0022                     WriteSPI@temp:	
  1250                           ; 0 bytes @ 0x2
  1251                           
  1252  0022                     ___wmul@multiplicand:	
  1253                           ; 2 bytes @ 0x2
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0x2
  1257  0022                     	ds	2
  1258  0024                     ??___wmul:	
  1259  0024                     WriteSPI@databyte:	
  1260                           ; 0 bytes @ 0x4
  1261                           
  1262  0024                     compute_checksum@checksum:	
  1263                           ; 1 bytes @ 0x4
  1264                           
  1265  0024                     ___wmul@product:	
  1266                           ; 1 bytes @ 0x4
  1267                           
  1268                           
  1269                           ; 2 bytes @ 0x4
  1270  0024                     	ds	1
  1271  0025                     ??_ReadStatusSPI:	
  1272  0025                     compute_checksum@data:	
  1273                           ; 0 bytes @ 0x5
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x5
  1277  0025                     	ds	1
  1278  0026                     ?___lwdiv:	
  1279  0026                     ReadStatusSPI@dataRead:	
  1280                           ; 2 bytes @ 0x6
  1281                           
  1282  0026                     compute_checksum@x:	
  1283                           ; 1 bytes @ 0x6
  1284                           
  1285  0026                     ___lwdiv@divisor:	
  1286                           ; 2 bytes @ 0x6
  1287                           
  1288                           
  1289                           ; 2 bytes @ 0x6
  1290  0026                     	ds	1
  1291  0027                     ?_WriteOverheadSPI:	
  1292  0027                     WriteOverheadSPI@address:	
  1293                           ; 0 bytes @ 0x7
  1294                           
  1295                           
  1296                           ; 4 bytes @ 0x7
  1297  0027                     	ds	1
  1298  0028                     ?_uart_write_message:	
  1299  0028                     uart_write_message@size:	
  1300                           ; 0 bytes @ 0x8
  1301                           
  1302  0028                     ___lwdiv@dividend:	
  1303                           ; 2 bytes @ 0x8
  1304                           
  1305                           
  1306                           ; 2 bytes @ 0x8
  1307  0028                     	ds	2
  1308  002A                     ??_uart_write_message:	
  1309  002A                     ??___lwdiv:	
  1310                           ; 0 bytes @ 0xA
  1311                           
  1312                           
  1313                           ; 0 bytes @ 0xA
  1314  002A                     	ds	1
  1315  002B                     ??_WriteOverheadSPI:	
  1316  002B                     ___lwdiv@quotient:	
  1317                           ; 0 bytes @ 0xB
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0xB
  1321  002B                     	ds	2
  1322  002D                     ___lwdiv@counter:	
  1323  002D                     _uart_write_message$1286:	
  1324                           ; 1 bytes @ 0xD
  1325                           
  1326                           
  1327                           ; 2 bytes @ 0xD
  1328  002D                     	ds	1
  1329  002E                     ??_DecodeGPS:	
  1330  002E                     ?___lwmod:	
  1331                           ; 0 bytes @ 0xE
  1332                           
  1333  002E                     ___lwmod@divisor:	
  1334                           ; 2 bytes @ 0xE
  1335                           
  1336                           
  1337                           ; 2 bytes @ 0xE
  1338  002E                     	ds	1
  1339  002F                     _uart_write_message$1287:	
  1340                           
  1341                           ; 2 bytes @ 0xF
  1342  002F                     	ds	1
  1343  0030                     ___lwmod@dividend:	
  1344  0030                     DecodeGPS@messageID:	
  1345                           ; 2 bytes @ 0x10
  1346                           
  1347                           
  1348                           ; 7 bytes @ 0x10
  1349  0030                     	ds	1
  1350  0031                     uart_write_message@x:	
  1351  0031                     WriteOverheadSPI@address_bytes:	
  1352                           ; 2 bytes @ 0x11
  1353                           
  1354                           
  1355                           ; 3 bytes @ 0x11
  1356  0031                     	ds	1
  1357  0032                     ??___lwmod:	
  1358                           
  1359                           ; 0 bytes @ 0x12
  1360  0032                     	ds	1
  1361  0033                     uart_write_message@checksum:	
  1362  0033                     ___lwmod@counter:	
  1363                           ; 1 bytes @ 0x13
  1364                           
  1365                           
  1366                           ; 1 bytes @ 0x13
  1367  0033                     	ds	1
  1368  0034                     ?_sprintf:	
  1369  0034                     WriteOverheadSPI@StatusReg:	
  1370                           ; 2 bytes @ 0x14
  1371                           
  1372  0034                     uart_write_message@data:	
  1373                           ; 1 bytes @ 0x14
  1374                           
  1375  0034                     sprintf@f:	
  1376                           ; 1 bytes @ 0x14
  1377                           
  1378                           
  1379                           ; 2 bytes @ 0x14
  1380  0034                     	ds	1
  1381  0035                     ??_RecordMode:	
  1382  0035                     uart_write_message@ascii_checksum:	
  1383                           ; 0 bytes @ 0x15
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x15
  1387  0035                     	ds	2
  1388  0037                     DecodeGPS@northSouth:	
  1389                           
  1390                           ; 1 bytes @ 0x17
  1391  0037                     	ds	1
  1392  0038                     DecodeGPS@eastWest:	
  1393                           
  1394                           ; 1 bytes @ 0x18
  1395  0038                     	ds	1
  1396  0039                     DecodeGPS@status:	
  1397                           
  1398                           ; 1 bytes @ 0x19
  1399  0039                     	ds	1
  1400  003A                     ??_sprintf:	
  1401  003A                     RecordMode@count:	
  1402                           ; 0 bytes @ 0x1A
  1403                           
  1404  003A                     DecodeGPS@latitude:	
  1405                           ; 2 bytes @ 0x1A
  1406                           
  1407                           
  1408                           ; 6 bytes @ 0x1A
  1409  003A                     	ds	2
  1410  003C                     RecordMode@address:	
  1411                           
  1412                           ; 4 bytes @ 0x1C
  1413  003C                     	ds	2
  1414  003E                     sprintf@flag:	
  1415                           
  1416                           ; 1 bytes @ 0x1E
  1417  003E                     	ds	1
  1418  003F                     sprintf@prec:	
  1419                           
  1420                           ; 1 bytes @ 0x1F
  1421  003F                     	ds	1
  1422  0040                     sprintf@ap:	
  1423  0040                     RecordMode@x:	
  1424                           ; 1 bytes @ 0x20
  1425                           
  1426  0040                     DecodeGPS@longitude:	
  1427                           ; 2 bytes @ 0x20
  1428                           
  1429                           
  1430                           ; 6 bytes @ 0x20
  1431  0040                     	ds	1
  1432  0041                     sprintf@sp:	
  1433                           
  1434                           ; 1 bytes @ 0x21
  1435  0041                     	ds	1
  1436  0042                     sprintf@_val:	
  1437                           
  1438                           ; 4 bytes @ 0x22
  1439  0042                     	ds	4
  1440  0046                     sprintf@c:	
  1441  0046                     DecodeGPS@x:	
  1442                           ; 1 bytes @ 0x26
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x26
  1446  0046                     	ds	1
  1447  0047                     ??_SetupGPS:	
  1448                           
  1449                           ; 0 bytes @ 0x27
  1450  0047                     	ds	1
  1451  0048                     ??_UpdateGPS:	
  1452                           
  1453                           ; 0 bytes @ 0x28
  1454  0048                     	ds	2
  1455  004A                     SetupGPS@message:	
  1456                           
  1457                           ; 22 bytes @ 0x2A
  1458  004A                     	ds	1
  1459  004B                     UpdateGPS@GPSupdateMessage:	
  1460                           
  1461                           ; 22 bytes @ 0x2B
  1462  004B                     	ds	21
  1463  0060                     SetupGPS@startSequence:	
  1464                           
  1465                           ; 6 bytes @ 0x40
  1466  0060                     	ds	6
  1467  0066                     SetupGPS@MID:	
  1468                           
  1469                           ; 4 bytes @ 0x46
  1470  0066                     	ds	4
  1471  006A                     SetupGPS@x:	
  1472                           
  1473                           ; 2 bytes @ 0x4A
  1474  006A                     	ds	2
  1475  006C                     ?_main:	
  1476  006C                     main@argc:	
  1477                           ; 2 bytes @ 0x4C
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x4C
  1481  006C                     	ds	2
  1482  006E                     main@argv:	
  1483                           
  1484                           ; 2 bytes @ 0x4E
  1485  006E                     	ds	2
  1486                           
  1487                           	psect	maintext
  1488  06CF                     __pmaintext:	
  1489 ;;
  1490 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1491 ;;
  1492 ;; *************** function _main *****************
  1493 ;; Defined at:
  1494 ;;		line 20 in file "launcher_main.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  argc            2   76[BANK0 ] int 
  1497 ;;  argv            2   78[BANK0 ] PTR PTR unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  periodicCoun    1    3[BANK1 ] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2   76[BANK0 ] int 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 17F/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1509 ;;      Params:         0       4       0       0       0       0       0
  1510 ;;      Locals:         0       0       1       0       0       0       0
  1511 ;;      Temps:          0       0       3       0       0       0       0
  1512 ;;      Totals:         0       4       4       0       0       0       0
  1513 ;;Total ram usage:        8 bytes
  1514 ;; Hardware stack levels required when called:    6
  1515 ;; This function calls:
  1516 ;;		_GoToSleep
  1517 ;;		_InitADC
  1518 ;;		_InitCLK
  1519 ;;		_InitGPIO
  1520 ;;		_InitSPI
  1521 ;;		_InitTimer1
  1522 ;;		_InitWatchdog
  1523 ;;		_RecordMode
  1524 ;;		_SetupGPS
  1525 ;;		_ToggleSleepGPS
  1526 ;;		_UpdateGPS
  1527 ;;		_initUART
  1528 ;; This function is called by:
  1529 ;;		Startup code after reset
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _main
  1535  06CF                     _main:	
  1536                           
  1537                           ;launcher_main.c: 23: InitCLK();
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1541  06CF  318D  2587  3186   	fcall	_InitCLK
  1542                           
  1543                           ;launcher_main.c: 24: InitGPIO();
  1544  06D2  318E  26CA  3186   	fcall	_InitGPIO
  1545                           
  1546                           ;launcher_main.c: 25: InitADC();
  1547  06D5  318E  2650  3186   	fcall	_InitADC
  1548                           
  1549                           ;launcher_main.c: 26: InitSPI();
  1550  06D8  318D  25E6  3186   	fcall	_InitSPI
  1551                           
  1552                           ;launcher_main.c: 27: InitTimer1();
  1553  06DB  318D  25A5  3186   	fcall	_InitTimer1
  1554                           
  1555                           ;launcher_main.c: 28: InitWatchdog();
  1556  06DE  318D  2580  3186   	fcall	_InitWatchdog
  1557                           
  1558                           ;launcher_main.c: 29: initUART();
  1559  06E1  318D  25B4  3186   	fcall	_initUART
  1560                           
  1561                           ;launcher_main.c: 31: unsigned char periodicCounter = 10;
  1562  06E4  300A               	movlw	10
  1563  06E5  0021               	movlb	1	; select bank1
  1564  06E6  00DF               	movwf	??_main^(0+128)
  1565  06E7  085F               	movf	??_main^(0+128),w
  1566  06E8  00E2               	movwf	main@periodicCounter^(0+128)
  1567                           
  1568                           ;launcher_main.c: 32: gpsIndex = 1;
  1569  06E9  3001               	movlw	1
  1570  06EA  00DF               	movwf	??_main^(0+128)
  1571  06EB  085F               	movf	??_main^(0+128),w
  1572  06EC  00E3               	movwf	_gpsIndex^(0+128)	;volatile
  1573                           
  1574                           ;launcher_main.c: 34: INTCONbits.GIE = 1;
  1575  06ED  178B               	bsf	11,7	;volatile
  1576                           
  1577                           ;launcher_main.c: 36: ToggleSleepGPS();
  1578  06EE  318E  26A8  3186   	fcall	_ToggleSleepGPS
  1579                           
  1580                           ;launcher_main.c: 37: SetupGPS();
  1581  06F1  3186  263D  3186   	fcall	_SetupGPS
  1582  06F4                     l2343:	
  1583                           ;launcher_main.c: 39: while(1){
  1584                           
  1585                           
  1586                           ;launcher_main.c: 42: if(strobeFlag)
  1587  06F4  0021               	movlb	1	; select bank1
  1588  06F5  085E               	movf	_strobeFlag^(0+128),w
  1589  06F6  1903               	btfsc	3,2
  1590  06F7  2F09               	goto	l102
  1591                           
  1592                           ;launcher_main.c: 43: {
  1593                           ;launcher_main.c: 45: PORTAbits.RA1 = 1;
  1594  06F8  0020               	movlb	0	; select bank0
  1595  06F9  148C               	bsf	12,1	;volatile
  1596                           
  1597                           ;launcher_main.c: 46: _delay((unsigned long)((100)*(16000000/4000.0)));
  1598  06FA  3003               	movlw	3
  1599  06FB  0021               	movlb	1	; select bank1
  1600  06FC  00E1               	movwf	(??_main^(0+128)+2)
  1601  06FD  3008               	movlw	8
  1602  06FE  00E0               	movwf	(??_main^(0+128)+1)
  1603  06FF  3078               	movlw	120
  1604  0700  00DF               	movwf	??_main^(0+128)
  1605  0701                     u2077:	
  1606  0701  0BDF               	decfsz	??_main^(0+128),f
  1607  0702  2F01               	goto	u2077
  1608  0703  0BE0               	decfsz	(??_main^(0+128)+1),f
  1609  0704  2F01               	goto	u2077
  1610  0705  0BE1               	decfsz	(??_main^(0+128)+2),f
  1611  0706  2F01               	goto	u2077
  1612                           
  1613                           ;launcher_main.c: 47: PORTAbits.RA1 = 0;
  1614  0707  0020               	movlb	0	; select bank0
  1615  0708  108C               	bcf	12,1	;volatile
  1616  0709                     l102:	
  1617                           
  1618                           ;launcher_main.c: 48: }
  1619                           ;launcher_main.c: 50: if(recordFlag)
  1620  0709  0021               	movlb	1	; select bank1
  1621  070A  085D               	movf	_recordFlag^(0+128),w
  1622  070B  1903               	btfsc	3,2
  1623  070C  2F11               	goto	l2353
  1624                           
  1625                           ;launcher_main.c: 51: {
  1626                           ;launcher_main.c: 52: RecordMode();
  1627  070D  3183  23CA  3186   	fcall	_RecordMode
  1628  0710  0021               	movlb	1	; select bank1
  1629  0711                     l2353:	
  1630                           
  1631                           ;launcher_main.c: 53: }
  1632                           ;launcher_main.c: 56: UpdateGPS();
  1633  0711  318E  26F5  3186   	fcall	_UpdateGPS
  1634                           
  1635                           ;launcher_main.c: 58: if(gpsInvalidFlag)
  1636  0714  0021               	movlb	1	; select bank1
  1637  0715  083E               	movf	_gpsInvalidFlag^(0+128),w
  1638  0716  1903               	btfsc	3,2
  1639  0717  2F35               	goto	l2359
  1640                           
  1641                           ;launcher_main.c: 59: {
  1642                           ;launcher_main.c: 60: PORTBbits.PORTB = LATBbits.LATB | 0x20;
  1643  0718  0022               	movlb	2	; select bank2
  1644  0719  080D               	movf	13,w	;volatile
  1645  071A  39FF               	andlw	255
  1646  071B  3820               	iorlw	32
  1647  071C  0021               	movlb	1	; select bank1
  1648  071D  00DF               	movwf	??_main^(0+128)
  1649  071E  0020               	movlb	0	; select bank0
  1650  071F  080D               	movf	13,w	;volatile
  1651  0720  0021               	movlb	1	; select bank1
  1652  0721  065F               	xorwf	??_main^(0+128),w
  1653  0722  3900               	andlw	-256
  1654  0723  065F               	xorwf	??_main^(0+128),w
  1655  0724  0020               	movlb	0	; select bank0
  1656  0725  008D               	movwf	13	;volatile
  1657                           
  1658                           ;launcher_main.c: 61: PORTBbits.PORTB = LATBbits.LATB & 0xEF;
  1659  0726  0022               	movlb	2	; select bank2
  1660  0727  080D               	movf	13,w	;volatile
  1661  0728  39FF               	andlw	255
  1662  0729  39EF               	andlw	239
  1663  072A  0021               	movlb	1	; select bank1
  1664  072B  00DF               	movwf	??_main^(0+128)
  1665  072C  0020               	movlb	0	; select bank0
  1666  072D  080D               	movf	13,w	;volatile
  1667  072E  0021               	movlb	1	; select bank1
  1668  072F  065F               	xorwf	??_main^(0+128),w
  1669  0730  3900               	andlw	-256
  1670  0731  065F               	xorwf	??_main^(0+128),w
  1671  0732  0020               	movlb	0	; select bank0
  1672  0733  008D               	movwf	13	;volatile
  1673                           
  1674                           ;launcher_main.c: 64: }
  1675  0734  2F54               	goto	l2363
  1676  0735                     l2359:	
  1677                           
  1678                           ;launcher_main.c: 65: else
  1679                           ;launcher_main.c: 66: {
  1680                           ;launcher_main.c: 67: PORTBbits.PORTB = LATBbits.LATB | 0x10;
  1681  0735  0022               	movlb	2	; select bank2
  1682  0736  080D               	movf	13,w	;volatile
  1683  0737  39FF               	andlw	255
  1684  0738  3810               	iorlw	16
  1685  0739  0021               	movlb	1	; select bank1
  1686  073A  00DF               	movwf	??_main^(0+128)
  1687  073B  0020               	movlb	0	; select bank0
  1688  073C  080D               	movf	13,w	;volatile
  1689  073D  0021               	movlb	1	; select bank1
  1690  073E  065F               	xorwf	??_main^(0+128),w
  1691  073F  3900               	andlw	-256
  1692  0740  065F               	xorwf	??_main^(0+128),w
  1693  0741  0020               	movlb	0	; select bank0
  1694  0742  008D               	movwf	13	;volatile
  1695                           
  1696                           ;launcher_main.c: 68: PORTBbits.PORTB = LATBbits.LATB & 0xDF;
  1697  0743  0022               	movlb	2	; select bank2
  1698  0744  080D               	movf	13,w	;volatile
  1699  0745  39FF               	andlw	255
  1700  0746  39DF               	andlw	223
  1701  0747  0021               	movlb	1	; select bank1
  1702  0748  00DF               	movwf	??_main^(0+128)
  1703  0749  0020               	movlb	0	; select bank0
  1704  074A  080D               	movf	13,w	;volatile
  1705  074B  0021               	movlb	1	; select bank1
  1706  074C  065F               	xorwf	??_main^(0+128),w
  1707  074D  3900               	andlw	-256
  1708  074E  065F               	xorwf	??_main^(0+128),w
  1709  074F  0020               	movlb	0	; select bank0
  1710  0750  008D               	movwf	13	;volatile
  1711                           
  1712                           ;launcher_main.c: 70: ToggleSleepGPS();
  1713  0751  318E  26A8  3186   	fcall	_ToggleSleepGPS
  1714  0754                     l2363:	
  1715                           
  1716                           ;launcher_main.c: 71: }
  1717                           ;launcher_main.c: 73: if(!recordFlag)
  1718  0754  0021               	movlb	1	; select bank1
  1719  0755  08DD               	movf	_recordFlag^(0+128),f
  1720  0756  1D03               	skipz
  1721  0757  2EF4               	goto	l2343
  1722                           
  1723                           ;launcher_main.c: 74: {
  1724                           ;launcher_main.c: 75: GoToSleep(periodicCounter);
  1725  0758  0862               	movf	main@periodicCounter^(0+128),w
  1726  0759  318D  25D4  3186   	fcall	_GoToSleep
  1727  075C  2EF4               	goto	l2343
  1728  075D                     __end_of_main:	
  1729                           ;launcher_main.c: 80: }
  1730                           ;launcher_main.c: 81: }
  1731                           ;launcher_main.c: 83: return (0);
  1732                           ;	Return value of _main is never used
  1733                           
  1734                           
  1735                           	psect	text1
  1736  0DB4                     __ptext1:	
  1737 ;; *************** function _initUART *****************
  1738 ;; Defined at:
  1739 ;;		line 252 in file "launcher_functions.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;		None               void
  1746 ;; Registers used:
  1747 ;;		wreg, status,2
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         0       0       0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    2
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _initUART
  1769  0DB4                     _initUART:	
  1770                           
  1771                           ;launcher_functions.c: 255: TRISCbits.TRISC6 = 0;
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in _initUART: [wreg+status,2]
  1775  0DB4  0021               	movlb	1	; select bank1
  1776  0DB5  130E               	bcf	14,6	;volatile
  1777                           
  1778                           ;launcher_functions.c: 256: TRISCbits.TRISC7 = 1;
  1779  0DB6  178E               	bsf	14,7	;volatile
  1780                           
  1781                           ;launcher_functions.c: 257: TXSTAbits.BRGH = 0;
  1782  0DB7  0023               	movlb	3	; select bank3
  1783  0DB8  111E               	bcf	30,2	;volatile
  1784                           
  1785                           ;launcher_functions.c: 259: SPBRGH = 0;
  1786  0DB9  019C               	clrf	28	;volatile
  1787                           
  1788                           ;launcher_functions.c: 260: SPBRGL = 51;
  1789  0DBA  3033               	movlw	51
  1790  0DBB  009B               	movwf	27	;volatile
  1791                           
  1792                           ;launcher_functions.c: 261: TXSTAbits.TX9 = 0;
  1793  0DBC  131E               	bcf	30,6	;volatile
  1794                           
  1795                           ;launcher_functions.c: 262: TXSTAbits.SYNC = 0;
  1796  0DBD  121E               	bcf	30,4	;volatile
  1797                           
  1798                           ;launcher_functions.c: 263: TXSTAbits.TXEN = 1;
  1799  0DBE  169E               	bsf	30,5	;volatile
  1800                           
  1801                           ;launcher_functions.c: 265: RCSTAbits.SPEN = 1;
  1802  0DBF  179D               	bsf	29,7	;volatile
  1803                           
  1804                           ;launcher_functions.c: 266: RCSTAbits.RX9 = 0;
  1805  0DC0  131D               	bcf	29,6	;volatile
  1806                           
  1807                           ;launcher_functions.c: 267: RCSTAbits.CREN = 1;
  1808  0DC1  161D               	bsf	29,4	;volatile
  1809  0DC2  0008               	return
  1810  0DC3                     __end_of_initUART:	
  1811                           
  1812                           	psect	text2
  1813  0EF5                     __ptext2:	
  1814 ;; *************** function _UpdateGPS *****************
  1815 ;; Defined at:
  1816 ;;		line 357 in file "launcher_functions.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  GPSupdateMes   22   43[BANK0 ] unsigned char [22]
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1830 ;;      Params:         0       0       0       0       0       0       0
  1831 ;;      Locals:         0      22       0       0       0       0       0
  1832 ;;      Temps:          0       3       0       0       0       0       0
  1833 ;;      Totals:         0      25       0       0       0       0       0
  1834 ;;Total ram usage:       25 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    4
  1837 ;; This function calls:
  1838 ;;		_DecodeGPS
  1839 ;;		_uart_write_message
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _UpdateGPS
  1847  0EF5                     _UpdateGPS:	
  1848                           
  1849                           ;launcher_functions.c: 359: unsigned char GPSupdateMessage[22] = "$PSRF103,01,01,00,00*"
      +                          ;
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in _UpdateGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1853  0EF5  3052               	movlw	low UpdateGPS@F4923
  1854  0EF6  0086               	movwf	6
  1855  0EF7  3001               	movlw	high UpdateGPS@F4923
  1856  0EF8  0087               	movwf	7
  1857  0EF9  304B               	movlw	low UpdateGPS@GPSupdateMessage
  1858  0EFA  0084               	movwf	4
  1859  0EFB  3000               	movlw	high UpdateGPS@GPSupdateMessage
  1860  0EFC  0085               	movwf	5
  1861  0EFD  3016               	movlw	22
  1862  0EFE  0020               	movlb	0	; select bank0
  1863  0EFF  00C8               	movwf	??_UpdateGPS
  1864  0F00                     u1770:	
  1865  0F00  0016               	moviw fsr1++
  1866  0F01  001A               	movwi fsr0++
  1867  0F02  0BC8               	decfsz	??_UpdateGPS,f
  1868  0F03  2F00               	goto	u1770
  1869                           
  1870                           ;launcher_functions.c: 362: RCIE = 1;
  1871  0F04  0021               	movlb	1	; select bank1
  1872  0F05  1691               	bsf	17,5	;volatile
  1873                           
  1874                           ;launcher_functions.c: 363: PEIE = 1;
  1875  0F06  170B               	bsf	11,6	;volatile
  1876                           
  1877                           ;launcher_functions.c: 364: GIE = 1;
  1878  0F07  178B               	bsf	11,7	;volatile
  1879                           
  1880                           ;launcher_functions.c: 366: gpsIndex = 0;
  1881  0F08  01E3               	clrf	_gpsIndex^(0+128)	;volatile
  1882                           
  1883                           ;launcher_functions.c: 367: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1884  0F09  3015               	movlw	21
  1885  0F0A  0020               	movlb	0	; select bank0
  1886  0F0B  00CA               	movwf	??_UpdateGPS+2
  1887  0F0C  304B               	movlw	75
  1888  0F0D  00C9               	movwf	??_UpdateGPS+1
  1889  0F0E  30D1               	movlw	209
  1890  0F0F  00C8               	movwf	??_UpdateGPS
  1891  0F10                     u2087:	
  1892  0F10  0BC8               	decfsz	??_UpdateGPS,f
  1893  0F11  2F10               	goto	u2087
  1894  0F12  0BC9               	decfsz	??_UpdateGPS+1,f
  1895  0F13  2F10               	goto	u2087
  1896  0F14  0BCA               	decfsz	??_UpdateGPS+2,f
  1897  0F15  2F10               	goto	u2087
  1898  0F16  0000               	nop
  1899                           
  1900                           ;launcher_functions.c: 368: uart_write_message(GPSupdateMessage, 22);
  1901  0F17  3016               	movlw	22
  1902  0F18  0020               	movlb	0	; select bank0
  1903  0F19  00A8               	movwf	uart_write_message@size
  1904  0F1A  3000               	movlw	0
  1905  0F1B  00A9               	movwf	uart_write_message@size+1
  1906  0F1C  304B               	movlw	UpdateGPS@GPSupdateMessage& (0+255)
  1907  0F1D  3187  275D  318E   	fcall	_uart_write_message
  1908  0F20                     l2299:	
  1909                           ;launcher_functions.c: 369: while(!messageDoneFlag);
  1910                           
  1911  0F20  087D               	movf	_messageDoneFlag,w
  1912  0F21  1903               	btfsc	3,2
  1913  0F22  2F20               	goto	l2299
  1914                           
  1915                           ;launcher_functions.c: 370: messageDoneFlag = 0;
  1916  0F23  01FD               	clrf	_messageDoneFlag
  1917                           
  1918                           ;launcher_functions.c: 371: DecodeGPS();
  1919  0F24  3181  2107         	fcall	_DecodeGPS
  1920  0F26  0008               	return
  1921  0F27                     __end_of_UpdateGPS:	
  1922                           
  1923                           	psect	text3
  1924  0107                     __ptext3:	
  1925 ;; *************** function _DecodeGPS *****************
  1926 ;; Defined at:
  1927 ;;		line 377 in file "launcher_functions.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  messageID       7   16[BANK0 ] unsigned char [7]
  1932 ;;  longitude       6   32[BANK0 ] unsigned int [3]
  1933 ;;  latitude        6   26[BANK0 ] unsigned int [3]
  1934 ;;  x               2   38[BANK0 ] int 
  1935 ;;  status          1   25[BANK0 ] unsigned char 
  1936 ;;  eastWest        1   24[BANK0 ] unsigned char 
  1937 ;;  northSouth      1   23[BANK0 ] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1947 ;;      Params:         0       0       0       0       0       0       0
  1948 ;;      Locals:         0      24       0       0       0       0       0
  1949 ;;      Temps:          0       2       0       0       0       0       0
  1950 ;;      Totals:         0      26       0       0       0       0       0
  1951 ;;Total ram usage:       26 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    3
  1954 ;; This function calls:
  1955 ;;		___lwdiv
  1956 ;;		___wmul
  1957 ;; This function is called by:
  1958 ;;		_UpdateGPS
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _DecodeGPS
  1964  0107                     _DecodeGPS:	
  1965                           
  1966                           ;launcher_functions.c: 380: unsigned char messageID[7] = "$GPGLL";
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _DecodeGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1970  0107  30AD               	movlw	low DecodeGPS@F4926
  1971  0108  0086               	movwf	6
  1972  0109  3000               	movlw	high DecodeGPS@F4926
  1973  010A  0087               	movwf	7
  1974  010B  3030               	movlw	low DecodeGPS@messageID
  1975  010C  0084               	movwf	4
  1976  010D  3000               	movlw	high DecodeGPS@messageID
  1977  010E  0085               	movwf	5
  1978  010F  3007               	movlw	7
  1979  0110  0020               	movlb	0	; select bank0
  1980  0111  00AE               	movwf	??_DecodeGPS
  1981  0112                     u1470:	
  1982  0112  0016               	moviw fsr1++
  1983  0113  001A               	movwi fsr0++
  1984  0114  0BAE               	decfsz	??_DecodeGPS,f
  1985  0115  2912               	goto	u1470
  1986                           
  1987                           ;launcher_functions.c: 381: unsigned int latitude[3] = {0,0,0};
  1988  0116  30C1               	movlw	low DecodeGPS@F4928
  1989  0117  0086               	movwf	6
  1990  0118  3000               	movlw	high DecodeGPS@F4928
  1991  0119  0087               	movwf	7
  1992  011A  303A               	movlw	low DecodeGPS@latitude
  1993  011B  0084               	movwf	4
  1994  011C  3000               	movlw	high DecodeGPS@latitude
  1995  011D  0085               	movwf	5
  1996  011E  3006               	movlw	6
  1997  011F  00AE               	movwf	??_DecodeGPS
  1998  0120                     u1480:	
  1999  0120  0016               	moviw fsr1++
  2000  0121  001A               	movwi fsr0++
  2001  0122  0BAE               	decfsz	??_DecodeGPS,f
  2002  0123  2920               	goto	u1480
  2003                           
  2004                           ;launcher_functions.c: 382: unsigned int longitude[3] = {0,0,0};
  2005  0124  30C7               	movlw	low DecodeGPS@F4930
  2006  0125  0086               	movwf	6
  2007  0126  3000               	movlw	high DecodeGPS@F4930
  2008  0127  0087               	movwf	7
  2009  0128  3040               	movlw	low DecodeGPS@longitude
  2010  0129  0084               	movwf	4
  2011  012A  3000               	movlw	high DecodeGPS@longitude
  2012  012B  0085               	movwf	5
  2013  012C  3006               	movlw	6
  2014  012D  00AE               	movwf	??_DecodeGPS
  2015  012E                     u1490:	
  2016  012E  0016               	moviw fsr1++
  2017  012F  001A               	movwi fsr0++
  2018  0130  0BAE               	decfsz	??_DecodeGPS,f
  2019  0131  292E               	goto	u1490
  2020                           
  2021                           ;launcher_functions.c: 383: unsigned char northSouth;
  2022                           ;launcher_functions.c: 384: unsigned char eastWest;
  2023                           ;launcher_functions.c: 385: unsigned char status;
  2024                           ;launcher_functions.c: 386: int x;
  2025                           ;launcher_functions.c: 388: for(x=0;x<6;x++)
  2026  0132  01C6               	clrf	DecodeGPS@x
  2027  0133  01C7               	clrf	DecodeGPS@x+1
  2028  0134  0847               	movf	DecodeGPS@x+1,w
  2029  0135  3A80               	xorlw	128
  2030  0136  00AE               	movwf	??_DecodeGPS
  2031  0137  3080               	movlw	128
  2032  0138  022E               	subwf	??_DecodeGPS,w
  2033  0139  1D03               	skipz
  2034  013A  293D               	goto	u1505
  2035  013B  3006               	movlw	6
  2036  013C  0246               	subwf	DecodeGPS@x,w
  2037  013D                     u1505:	
  2038  013D  1803               	btfsc	3,0
  2039  013E  2960               	goto	l1937
  2040  013F                     l1931:	
  2041                           
  2042                           ;launcher_functions.c: 389: {
  2043                           ;launcher_functions.c: 390: if(gpsMessage[x] != messageID[x])
  2044  013F  0020               	movlb	0	; select bank0
  2045  0140  0846               	movf	DecodeGPS@x,w
  2046  0141  3E30               	addlw	DecodeGPS@messageID& (0+255)
  2047  0142  0086               	movwf	6
  2048  0143  0187               	clrf	7
  2049  0144  0846               	movf	DecodeGPS@x,w
  2050  0145  3E20               	addlw	_gpsMessage& (0+255)
  2051  0146  0084               	movwf	4
  2052  0147  3001               	movlw	1	; select bank2/3
  2053  0148  0085               	movwf	5
  2054  0149  0800               	movf	0,w
  2055  014A  0601               	xorwf	1,w
  2056  014B  1903               	skipnz
  2057  014C  2950               	goto	l1935
  2058                           
  2059                           ;launcher_functions.c: 391: gpsInvalidFlag = 1;
  2060  014D  0021               	movlb	1	; select bank1
  2061  014E  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2062  014F  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2063  0150                     l1935:	
  2064  0150  3001               	movlw	1
  2065  0151  0020               	movlb	0	; select bank0
  2066  0152  07C6               	addwf	DecodeGPS@x,f
  2067  0153  3000               	movlw	0
  2068  0154  3DC7               	addwfc	DecodeGPS@x+1,f
  2069  0155  0847               	movf	DecodeGPS@x+1,w
  2070  0156  3A80               	xorlw	128
  2071  0157  00AE               	movwf	??_DecodeGPS
  2072  0158  3080               	movlw	128
  2073  0159  022E               	subwf	??_DecodeGPS,w
  2074  015A  1D03               	skipz
  2075  015B  295E               	goto	u1525
  2076  015C  3006               	movlw	6
  2077  015D  0246               	subwf	DecodeGPS@x,w
  2078  015E                     u1525:	
  2079  015E  1C03               	skipc
  2080  015F  293F               	goto	l1931
  2081  0160                     l1937:	
  2082                           
  2083                           ;launcher_functions.c: 392: }
  2084                           ;launcher_functions.c: 395: x = x + 1;
  2085  0160  0020               	movlb	0	; select bank0
  2086  0161  0846               	movf	DecodeGPS@x,w
  2087  0162  3E01               	addlw	1
  2088  0163  00C6               	movwf	DecodeGPS@x
  2089  0164  3000               	movlw	0
  2090  0165  3D47               	addwfc	DecodeGPS@x+1,w
  2091  0166  00C7               	movwf	DecodeGPS@x+1
  2092                           
  2093                           ;launcher_functions.c: 398: if(gpsMessage[x]!= ',')
  2094  0167  0846               	movf	DecodeGPS@x,w
  2095  0168  3E20               	addlw	_gpsMessage& (0+255)
  2096  0169  0086               	movwf	6
  2097  016A  3001               	movlw	1	; select bank2/3
  2098  016B  0087               	movwf	7
  2099  016C  0801               	movf	1,w
  2100  016D  3A2C               	xorlw	44
  2101  016E  1903               	skipnz
  2102  016F  2A34               	goto	l1969
  2103                           
  2104                           ;launcher_functions.c: 399: {
  2105                           ;launcher_functions.c: 401: latitude[0] = (gpsMessage[x++] - 48)*10;
  2106  0170  0846               	movf	DecodeGPS@x,w
  2107  0171  3E20               	addlw	_gpsMessage& (0+255)
  2108  0172  0086               	movwf	6
  2109  0173  3001               	movlw	1	; select bank2/3
  2110  0174  0087               	movwf	7
  2111  0175  0801               	movf	1,w
  2112  0176  3ED0               	addlw	208
  2113  0177  00A0               	movwf	___wmul@multiplier
  2114  0178  30FF               	movlw	255
  2115  0179  1803               	skipnc
  2116  017A  3000               	movlw	0
  2117  017B  00A1               	movwf	___wmul@multiplier+1
  2118  017C  300A               	movlw	10
  2119  017D  00A2               	movwf	___wmul@multiplicand
  2120  017E  3000               	movlw	0
  2121  017F  00A3               	movwf	___wmul@multiplicand+1
  2122  0180  318E  2669  3181   	fcall	___wmul
  2123  0183  0020               	movlb	0	; select bank0
  2124  0184  0821               	movf	?___wmul+1,w
  2125  0185  01BB               	clrf	DecodeGPS@latitude+1
  2126  0186  07BB               	addwf	DecodeGPS@latitude+1,f
  2127  0187  0820               	movf	?___wmul,w
  2128  0188  01BA               	clrf	DecodeGPS@latitude
  2129  0189  07BA               	addwf	DecodeGPS@latitude,f
  2130  018A  3001               	movlw	1
  2131  018B  07C6               	addwf	DecodeGPS@x,f
  2132  018C  3000               	movlw	0
  2133  018D  3DC7               	addwfc	DecodeGPS@x+1,f
  2134                           
  2135                           ;launcher_functions.c: 402: latitude[0] += (gpsMessage[x++] - 48);
  2136  018E  0846               	movf	DecodeGPS@x,w
  2137  018F  3E20               	addlw	_gpsMessage& (0+255)
  2138  0190  0086               	movwf	6
  2139  0191  3001               	movlw	1	; select bank2/3
  2140  0192  0087               	movwf	7
  2141  0193  0801               	movf	1,w
  2142  0194  3ED0               	addlw	208
  2143  0195  00AE               	movwf	??_DecodeGPS
  2144  0196  30FF               	movlw	255
  2145  0197  1803               	skipnc
  2146  0198  3000               	movlw	0
  2147  0199  00AF               	movwf	??_DecodeGPS+1
  2148  019A  082E               	movf	??_DecodeGPS,w
  2149  019B  07BA               	addwf	DecodeGPS@latitude,f
  2150  019C  082F               	movf	??_DecodeGPS+1,w
  2151  019D  3DBB               	addwfc	DecodeGPS@latitude+1,f
  2152  019E  3001               	movlw	1
  2153  019F  07C6               	addwf	DecodeGPS@x,f
  2154  01A0  3000               	movlw	0
  2155  01A1  3DC7               	addwfc	DecodeGPS@x+1,f
  2156                           
  2157                           ;launcher_functions.c: 405: latitude[1] = (gpsMessage[x++] - 48)*10;
  2158  01A2  0846               	movf	DecodeGPS@x,w
  2159  01A3  3E20               	addlw	_gpsMessage& (0+255)
  2160  01A4  0086               	movwf	6
  2161  01A5  3001               	movlw	1	; select bank2/3
  2162  01A6  0087               	movwf	7
  2163  01A7  0801               	movf	1,w
  2164  01A8  3ED0               	addlw	208
  2165  01A9  00A0               	movwf	___wmul@multiplier
  2166  01AA  30FF               	movlw	255
  2167  01AB  1803               	skipnc
  2168  01AC  3000               	movlw	0
  2169  01AD  00A1               	movwf	___wmul@multiplier+1
  2170  01AE  300A               	movlw	10
  2171  01AF  00A2               	movwf	___wmul@multiplicand
  2172  01B0  3000               	movlw	0
  2173  01B1  00A3               	movwf	___wmul@multiplicand+1
  2174  01B2  318E  2669  3181   	fcall	___wmul
  2175  01B5  0020               	movlb	0	; select bank0
  2176  01B6  0821               	movf	?___wmul+1,w
  2177  01B7  01BD               	clrf	DecodeGPS@latitude+3
  2178  01B8  07BD               	addwf	DecodeGPS@latitude+3,f
  2179  01B9  0820               	movf	?___wmul,w
  2180  01BA  01BC               	clrf	DecodeGPS@latitude+2
  2181  01BB  07BC               	addwf	DecodeGPS@latitude+2,f
  2182  01BC  3001               	movlw	1
  2183  01BD  07C6               	addwf	DecodeGPS@x,f
  2184  01BE  3000               	movlw	0
  2185  01BF  3DC7               	addwfc	DecodeGPS@x+1,f
  2186                           
  2187                           ;launcher_functions.c: 406: latitude[1] += (gpsMessage[x++] - 48);
  2188  01C0  0846               	movf	DecodeGPS@x,w
  2189  01C1  3E20               	addlw	_gpsMessage& (0+255)
  2190  01C2  0086               	movwf	6
  2191  01C3  3001               	movlw	1	; select bank2/3
  2192  01C4  0087               	movwf	7
  2193  01C5  0801               	movf	1,w
  2194  01C6  3ED0               	addlw	208
  2195  01C7  00AE               	movwf	??_DecodeGPS
  2196  01C8  30FF               	movlw	255
  2197  01C9  1803               	skipnc
  2198  01CA  3000               	movlw	0
  2199  01CB  00AF               	movwf	??_DecodeGPS+1
  2200  01CC  082E               	movf	??_DecodeGPS,w
  2201  01CD  07BC               	addwf	DecodeGPS@latitude+2,f
  2202  01CE  082F               	movf	??_DecodeGPS+1,w
  2203  01CF  3DBD               	addwfc	DecodeGPS@latitude+3,f
  2204  01D0  3001               	movlw	1
  2205  01D1  07C6               	addwf	DecodeGPS@x,f
  2206  01D2  3000               	movlw	0
  2207  01D3  3DC7               	addwfc	DecodeGPS@x+1,f
  2208                           
  2209                           ;launcher_functions.c: 409: x = x + 1;
  2210  01D4  0846               	movf	DecodeGPS@x,w
  2211  01D5  3E01               	addlw	1
  2212  01D6  00C6               	movwf	DecodeGPS@x
  2213  01D7  3000               	movlw	0
  2214  01D8  3D47               	addwfc	DecodeGPS@x+1,w
  2215  01D9  00C7               	movwf	DecodeGPS@x+1
  2216                           
  2217                           ;launcher_functions.c: 412: latitude[2] = (gpsMessage[x++] - 48)*10;
  2218  01DA  0846               	movf	DecodeGPS@x,w
  2219  01DB  3E20               	addlw	_gpsMessage& (0+255)
  2220  01DC  0086               	movwf	6
  2221  01DD  3001               	movlw	1	; select bank2/3
  2222  01DE  0087               	movwf	7
  2223  01DF  0801               	movf	1,w
  2224  01E0  3ED0               	addlw	208
  2225  01E1  00A0               	movwf	___wmul@multiplier
  2226  01E2  30FF               	movlw	255
  2227  01E3  1803               	skipnc
  2228  01E4  3000               	movlw	0
  2229  01E5  00A1               	movwf	___wmul@multiplier+1
  2230  01E6  300A               	movlw	10
  2231  01E7  00A2               	movwf	___wmul@multiplicand
  2232  01E8  3000               	movlw	0
  2233  01E9  00A3               	movwf	___wmul@multiplicand+1
  2234  01EA  318E  2669  3181   	fcall	___wmul
  2235  01ED  0020               	movlb	0	; select bank0
  2236  01EE  0821               	movf	?___wmul+1,w
  2237  01EF  01BF               	clrf	DecodeGPS@latitude+5
  2238  01F0  07BF               	addwf	DecodeGPS@latitude+5,f
  2239  01F1  0820               	movf	?___wmul,w
  2240  01F2  01BE               	clrf	DecodeGPS@latitude+4
  2241  01F3  07BE               	addwf	DecodeGPS@latitude+4,f
  2242  01F4  3001               	movlw	1
  2243  01F5  07C6               	addwf	DecodeGPS@x,f
  2244  01F6  3000               	movlw	0
  2245  01F7  3DC7               	addwfc	DecodeGPS@x+1,f
  2246                           
  2247                           ;launcher_functions.c: 413: latitude[2] += (gpsMessage[x++] - 48);
  2248  01F8  0846               	movf	DecodeGPS@x,w
  2249  01F9  3E20               	addlw	_gpsMessage& (0+255)
  2250  01FA  0086               	movwf	6
  2251  01FB  3001               	movlw	1	; select bank2/3
  2252  01FC  0087               	movwf	7
  2253  01FD  0801               	movf	1,w
  2254  01FE  3ED0               	addlw	208
  2255  01FF  00AE               	movwf	??_DecodeGPS
  2256  0200  30FF               	movlw	255
  2257  0201  1803               	skipnc
  2258  0202  3000               	movlw	0
  2259  0203  00AF               	movwf	??_DecodeGPS+1
  2260  0204  082E               	movf	??_DecodeGPS,w
  2261  0205  07BE               	addwf	DecodeGPS@latitude+4,f
  2262  0206  082F               	movf	??_DecodeGPS+1,w
  2263  0207  3DBF               	addwfc	DecodeGPS@latitude+5,f
  2264  0208  3001               	movlw	1
  2265  0209  07C6               	addwf	DecodeGPS@x,f
  2266  020A  3000               	movlw	0
  2267  020B  3DC7               	addwfc	DecodeGPS@x+1,f
  2268                           
  2269                           ;launcher_functions.c: 414: latitude[2] = (latitude[2]*60)/100;
  2270  020C  3064               	movlw	100
  2271  020D  00A6               	movwf	___lwdiv@divisor
  2272  020E  3000               	movlw	0
  2273  020F  00A7               	movwf	___lwdiv@divisor+1
  2274  0210  083F               	movf	DecodeGPS@latitude+5,w
  2275  0211  01A1               	clrf	___wmul@multiplier+1
  2276  0212  07A1               	addwf	___wmul@multiplier+1,f
  2277  0213  083E               	movf	DecodeGPS@latitude+4,w
  2278  0214  01A0               	clrf	___wmul@multiplier
  2279  0215  07A0               	addwf	___wmul@multiplier,f
  2280  0216  303C               	movlw	60
  2281  0217  00A2               	movwf	___wmul@multiplicand
  2282  0218  3000               	movlw	0
  2283  0219  00A3               	movwf	___wmul@multiplicand+1
  2284  021A  318E  2669  3181   	fcall	___wmul
  2285  021D  0020               	movlb	0	; select bank0
  2286  021E  0821               	movf	?___wmul+1,w
  2287  021F  01A9               	clrf	___lwdiv@dividend+1
  2288  0220  07A9               	addwf	___lwdiv@dividend+1,f
  2289  0221  0820               	movf	?___wmul,w
  2290  0222  01A8               	clrf	___lwdiv@dividend
  2291  0223  07A8               	addwf	___lwdiv@dividend,f
  2292  0224  318F  2727  3181   	fcall	___lwdiv
  2293  0227  0020               	movlb	0	; select bank0
  2294  0228  0827               	movf	?___lwdiv+1,w
  2295  0229  01BF               	clrf	DecodeGPS@latitude+5
  2296  022A  07BF               	addwf	DecodeGPS@latitude+5,f
  2297  022B  0826               	movf	?___lwdiv,w
  2298  022C  01BE               	clrf	DecodeGPS@latitude+4
  2299  022D  07BE               	addwf	DecodeGPS@latitude+4,f
  2300                           
  2301                           ;launcher_functions.c: 417: x = x + 2;
  2302  022E  0846               	movf	DecodeGPS@x,w
  2303  022F  3E02               	addlw	2
  2304  0230  00C6               	movwf	DecodeGPS@x
  2305  0231  3000               	movlw	0
  2306  0232  3D47               	addwfc	DecodeGPS@x+1,w
  2307  0233  00C7               	movwf	DecodeGPS@x+1
  2308  0234                     l1969:	
  2309                           
  2310                           ;launcher_functions.c: 418: }
  2311                           ;launcher_functions.c: 421: x = x + 1;
  2312  0234  0846               	movf	DecodeGPS@x,w
  2313  0235  3E01               	addlw	1
  2314  0236  00C6               	movwf	DecodeGPS@x
  2315  0237  3000               	movlw	0
  2316  0238  3D47               	addwfc	DecodeGPS@x+1,w
  2317  0239  00C7               	movwf	DecodeGPS@x+1
  2318                           
  2319                           ;launcher_functions.c: 424: if(gpsMessage[x] != ',')
  2320  023A  0846               	movf	DecodeGPS@x,w
  2321  023B  3E20               	addlw	_gpsMessage& (0+255)
  2322  023C  0086               	movwf	6
  2323  023D  3001               	movlw	1	; select bank2/3
  2324  023E  0087               	movwf	7
  2325  023F  0801               	movf	1,w
  2326  0240  3A2C               	xorlw	44
  2327  0241  1903               	skipnz
  2328  0242  2A50               	goto	l1977
  2329                           
  2330                           ;launcher_functions.c: 425: northSouth = gpsMessage[x++];
  2331  0243  0846               	movf	DecodeGPS@x,w
  2332  0244  3E20               	addlw	_gpsMessage& (0+255)
  2333  0245  0086               	movwf	6
  2334  0246  3001               	movlw	1	; select bank2/3
  2335  0247  0087               	movwf	7
  2336  0248  0801               	movf	1,w
  2337  0249  00AE               	movwf	??_DecodeGPS
  2338  024A  082E               	movf	??_DecodeGPS,w
  2339  024B  00B7               	movwf	DecodeGPS@northSouth
  2340  024C  3001               	movlw	1
  2341  024D  07C6               	addwf	DecodeGPS@x,f
  2342  024E  3000               	movlw	0
  2343  024F  3DC7               	addwfc	DecodeGPS@x+1,f
  2344  0250                     l1977:	
  2345                           
  2346                           ;launcher_functions.c: 428: x = x + 1;
  2347  0250  0846               	movf	DecodeGPS@x,w
  2348  0251  3E01               	addlw	1
  2349  0252  00C6               	movwf	DecodeGPS@x
  2350  0253  3000               	movlw	0
  2351  0254  3D47               	addwfc	DecodeGPS@x+1,w
  2352  0255  00C7               	movwf	DecodeGPS@x+1
  2353                           
  2354                           ;launcher_functions.c: 431: if(gpsMessage[x]!= ',')
  2355  0256  0846               	movf	DecodeGPS@x,w
  2356  0257  3E20               	addlw	_gpsMessage& (0+255)
  2357  0258  0086               	movwf	6
  2358  0259  3001               	movlw	1	; select bank2/3
  2359  025A  0087               	movwf	7
  2360  025B  0801               	movf	1,w
  2361  025C  3A2C               	xorlw	44
  2362  025D  1903               	skipnz
  2363  025E  2B3F               	goto	l2013
  2364                           
  2365                           ;launcher_functions.c: 432: {
  2366                           ;launcher_functions.c: 434: longitude[0] = (gpsMessage[x++] - 48)*100;
  2367  025F  0846               	movf	DecodeGPS@x,w
  2368  0260  3E20               	addlw	_gpsMessage& (0+255)
  2369  0261  0086               	movwf	6
  2370  0262  3001               	movlw	1	; select bank2/3
  2371  0263  0087               	movwf	7
  2372  0264  0801               	movf	1,w
  2373  0265  3ED0               	addlw	208
  2374  0266  00A0               	movwf	___wmul@multiplier
  2375  0267  30FF               	movlw	255
  2376  0268  1803               	skipnc
  2377  0269  3000               	movlw	0
  2378  026A  00A1               	movwf	___wmul@multiplier+1
  2379  026B  3064               	movlw	100
  2380  026C  00A2               	movwf	___wmul@multiplicand
  2381  026D  3000               	movlw	0
  2382  026E  00A3               	movwf	___wmul@multiplicand+1
  2383  026F  318E  2669  3181   	fcall	___wmul
  2384  0272  0020               	movlb	0	; select bank0
  2385  0273  0821               	movf	?___wmul+1,w
  2386  0274  01C1               	clrf	DecodeGPS@longitude+1
  2387  0275  07C1               	addwf	DecodeGPS@longitude+1,f
  2388  0276  0820               	movf	?___wmul,w
  2389  0277  01C0               	clrf	DecodeGPS@longitude
  2390  0278  07C0               	addwf	DecodeGPS@longitude,f
  2391  0279  3001               	movlw	1
  2392  027A  07C6               	addwf	DecodeGPS@x,f
  2393  027B  3000               	movlw	0
  2394  027C  3DC7               	addwfc	DecodeGPS@x+1,f
  2395                           
  2396                           ;launcher_functions.c: 435: longitude[0] += (gpsMessage[x++] - 48)*10;
  2397  027D  0846               	movf	DecodeGPS@x,w
  2398  027E  3E20               	addlw	_gpsMessage& (0+255)
  2399  027F  0086               	movwf	6
  2400  0280  3001               	movlw	1	; select bank2/3
  2401  0281  0087               	movwf	7
  2402  0282  0801               	movf	1,w
  2403  0283  3ED0               	addlw	208
  2404  0284  00A0               	movwf	___wmul@multiplier
  2405  0285  30FF               	movlw	255
  2406  0286  1803               	skipnc
  2407  0287  3000               	movlw	0
  2408  0288  00A1               	movwf	___wmul@multiplier+1
  2409  0289  300A               	movlw	10
  2410  028A  00A2               	movwf	___wmul@multiplicand
  2411  028B  3000               	movlw	0
  2412  028C  00A3               	movwf	___wmul@multiplicand+1
  2413  028D  318E  2669  3181   	fcall	___wmul
  2414  0290  0020               	movlb	0	; select bank0
  2415  0291  0820               	movf	?___wmul,w
  2416  0292  07C0               	addwf	DecodeGPS@longitude,f
  2417  0293  0821               	movf	?___wmul+1,w
  2418  0294  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2419  0295  3001               	movlw	1
  2420  0296  07C6               	addwf	DecodeGPS@x,f
  2421  0297  3000               	movlw	0
  2422  0298  3DC7               	addwfc	DecodeGPS@x+1,f
  2423                           
  2424                           ;launcher_functions.c: 436: longitude[0] += (gpsMessage[x++] - 48);
  2425  0299  0846               	movf	DecodeGPS@x,w
  2426  029A  3E20               	addlw	_gpsMessage& (0+255)
  2427  029B  0086               	movwf	6
  2428  029C  3001               	movlw	1	; select bank2/3
  2429  029D  0087               	movwf	7
  2430  029E  0801               	movf	1,w
  2431  029F  3ED0               	addlw	208
  2432  02A0  00AE               	movwf	??_DecodeGPS
  2433  02A1  30FF               	movlw	255
  2434  02A2  1803               	skipnc
  2435  02A3  3000               	movlw	0
  2436  02A4  00AF               	movwf	??_DecodeGPS+1
  2437  02A5  082E               	movf	??_DecodeGPS,w
  2438  02A6  07C0               	addwf	DecodeGPS@longitude,f
  2439  02A7  082F               	movf	??_DecodeGPS+1,w
  2440  02A8  3DC1               	addwfc	DecodeGPS@longitude+1,f
  2441  02A9  3001               	movlw	1
  2442  02AA  07C6               	addwf	DecodeGPS@x,f
  2443  02AB  3000               	movlw	0
  2444  02AC  3DC7               	addwfc	DecodeGPS@x+1,f
  2445                           
  2446                           ;launcher_functions.c: 439: longitude[1] = (gpsMessage[x++] - 48)*10;
  2447  02AD  0846               	movf	DecodeGPS@x,w
  2448  02AE  3E20               	addlw	_gpsMessage& (0+255)
  2449  02AF  0086               	movwf	6
  2450  02B0  3001               	movlw	1	; select bank2/3
  2451  02B1  0087               	movwf	7
  2452  02B2  0801               	movf	1,w
  2453  02B3  3ED0               	addlw	208
  2454  02B4  00A0               	movwf	___wmul@multiplier
  2455  02B5  30FF               	movlw	255
  2456  02B6  1803               	skipnc
  2457  02B7  3000               	movlw	0
  2458  02B8  00A1               	movwf	___wmul@multiplier+1
  2459  02B9  300A               	movlw	10
  2460  02BA  00A2               	movwf	___wmul@multiplicand
  2461  02BB  3000               	movlw	0
  2462  02BC  00A3               	movwf	___wmul@multiplicand+1
  2463  02BD  318E  2669  3181   	fcall	___wmul
  2464  02C0  0020               	movlb	0	; select bank0
  2465  02C1  0821               	movf	?___wmul+1,w
  2466  02C2  01C3               	clrf	DecodeGPS@longitude+3
  2467  02C3  07C3               	addwf	DecodeGPS@longitude+3,f
  2468  02C4  0820               	movf	?___wmul,w
  2469  02C5  01C2               	clrf	DecodeGPS@longitude+2
  2470  02C6  07C2               	addwf	DecodeGPS@longitude+2,f
  2471  02C7  3001               	movlw	1
  2472  02C8  07C6               	addwf	DecodeGPS@x,f
  2473  02C9  3000               	movlw	0
  2474  02CA  3DC7               	addwfc	DecodeGPS@x+1,f
  2475                           
  2476                           ;launcher_functions.c: 440: longitude[1] += (gpsMessage[x++] - 48);
  2477  02CB  0846               	movf	DecodeGPS@x,w
  2478  02CC  3E20               	addlw	_gpsMessage& (0+255)
  2479  02CD  0086               	movwf	6
  2480  02CE  3001               	movlw	1	; select bank2/3
  2481  02CF  0087               	movwf	7
  2482  02D0  0801               	movf	1,w
  2483  02D1  3ED0               	addlw	208
  2484  02D2  00AE               	movwf	??_DecodeGPS
  2485  02D3  30FF               	movlw	255
  2486  02D4  1803               	skipnc
  2487  02D5  3000               	movlw	0
  2488  02D6  00AF               	movwf	??_DecodeGPS+1
  2489  02D7  082E               	movf	??_DecodeGPS,w
  2490  02D8  07C2               	addwf	DecodeGPS@longitude+2,f
  2491  02D9  082F               	movf	??_DecodeGPS+1,w
  2492  02DA  3DC3               	addwfc	DecodeGPS@longitude+3,f
  2493  02DB  3001               	movlw	1
  2494  02DC  07C6               	addwf	DecodeGPS@x,f
  2495  02DD  3000               	movlw	0
  2496  02DE  3DC7               	addwfc	DecodeGPS@x+1,f
  2497                           
  2498                           ;launcher_functions.c: 443: x = x + 1;
  2499  02DF  0846               	movf	DecodeGPS@x,w
  2500  02E0  3E01               	addlw	1
  2501  02E1  00C6               	movwf	DecodeGPS@x
  2502  02E2  3000               	movlw	0
  2503  02E3  3D47               	addwfc	DecodeGPS@x+1,w
  2504  02E4  00C7               	movwf	DecodeGPS@x+1
  2505                           
  2506                           ;launcher_functions.c: 446: longitude[2] = (gpsMessage[x++] - 48)*10;
  2507  02E5  0846               	movf	DecodeGPS@x,w
  2508  02E6  3E20               	addlw	_gpsMessage& (0+255)
  2509  02E7  0086               	movwf	6
  2510  02E8  3001               	movlw	1	; select bank2/3
  2511  02E9  0087               	movwf	7
  2512  02EA  0801               	movf	1,w
  2513  02EB  3ED0               	addlw	208
  2514  02EC  00A0               	movwf	___wmul@multiplier
  2515  02ED  30FF               	movlw	255
  2516  02EE  1803               	skipnc
  2517  02EF  3000               	movlw	0
  2518  02F0  00A1               	movwf	___wmul@multiplier+1
  2519  02F1  300A               	movlw	10
  2520  02F2  00A2               	movwf	___wmul@multiplicand
  2521  02F3  3000               	movlw	0
  2522  02F4  00A3               	movwf	___wmul@multiplicand+1
  2523  02F5  318E  2669  3181   	fcall	___wmul
  2524  02F8  0020               	movlb	0	; select bank0
  2525  02F9  0821               	movf	?___wmul+1,w
  2526  02FA  01C5               	clrf	DecodeGPS@longitude+5
  2527  02FB  07C5               	addwf	DecodeGPS@longitude+5,f
  2528  02FC  0820               	movf	?___wmul,w
  2529  02FD  01C4               	clrf	DecodeGPS@longitude+4
  2530  02FE  07C4               	addwf	DecodeGPS@longitude+4,f
  2531  02FF  3001               	movlw	1
  2532  0300  07C6               	addwf	DecodeGPS@x,f
  2533  0301  3000               	movlw	0
  2534  0302  3DC7               	addwfc	DecodeGPS@x+1,f
  2535                           
  2536                           ;launcher_functions.c: 447: longitude[2] += (gpsMessage[x++] - 48);
  2537  0303  0846               	movf	DecodeGPS@x,w
  2538  0304  3E20               	addlw	_gpsMessage& (0+255)
  2539  0305  0086               	movwf	6
  2540  0306  3001               	movlw	1	; select bank2/3
  2541  0307  0087               	movwf	7
  2542  0308  0801               	movf	1,w
  2543  0309  3ED0               	addlw	208
  2544  030A  00AE               	movwf	??_DecodeGPS
  2545  030B  30FF               	movlw	255
  2546  030C  1803               	skipnc
  2547  030D  3000               	movlw	0
  2548  030E  00AF               	movwf	??_DecodeGPS+1
  2549  030F  082E               	movf	??_DecodeGPS,w
  2550  0310  07C4               	addwf	DecodeGPS@longitude+4,f
  2551  0311  082F               	movf	??_DecodeGPS+1,w
  2552  0312  3DC5               	addwfc	DecodeGPS@longitude+5,f
  2553  0313  3001               	movlw	1
  2554  0314  07C6               	addwf	DecodeGPS@x,f
  2555  0315  3000               	movlw	0
  2556  0316  3DC7               	addwfc	DecodeGPS@x+1,f
  2557                           
  2558                           ;launcher_functions.c: 448: longitude[2] = (longitude[2]*60)/100;
  2559  0317  3064               	movlw	100
  2560  0318  00A6               	movwf	___lwdiv@divisor
  2561  0319  3000               	movlw	0
  2562  031A  00A7               	movwf	___lwdiv@divisor+1
  2563  031B  0845               	movf	DecodeGPS@longitude+5,w
  2564  031C  01A1               	clrf	___wmul@multiplier+1
  2565  031D  07A1               	addwf	___wmul@multiplier+1,f
  2566  031E  0844               	movf	DecodeGPS@longitude+4,w
  2567  031F  01A0               	clrf	___wmul@multiplier
  2568  0320  07A0               	addwf	___wmul@multiplier,f
  2569  0321  303C               	movlw	60
  2570  0322  00A2               	movwf	___wmul@multiplicand
  2571  0323  3000               	movlw	0
  2572  0324  00A3               	movwf	___wmul@multiplicand+1
  2573  0325  318E  2669  3181   	fcall	___wmul
  2574  0328  0020               	movlb	0	; select bank0
  2575  0329  0821               	movf	?___wmul+1,w
  2576  032A  01A9               	clrf	___lwdiv@dividend+1
  2577  032B  07A9               	addwf	___lwdiv@dividend+1,f
  2578  032C  0820               	movf	?___wmul,w
  2579  032D  01A8               	clrf	___lwdiv@dividend
  2580  032E  07A8               	addwf	___lwdiv@dividend,f
  2581  032F  318F  2727  3181   	fcall	___lwdiv
  2582  0332  0020               	movlb	0	; select bank0
  2583  0333  0827               	movf	?___lwdiv+1,w
  2584  0334  01C5               	clrf	DecodeGPS@longitude+5
  2585  0335  07C5               	addwf	DecodeGPS@longitude+5,f
  2586  0336  0826               	movf	?___lwdiv,w
  2587  0337  01C4               	clrf	DecodeGPS@longitude+4
  2588  0338  07C4               	addwf	DecodeGPS@longitude+4,f
  2589                           
  2590                           ;launcher_functions.c: 451: x = x + 2;
  2591  0339  0846               	movf	DecodeGPS@x,w
  2592  033A  3E02               	addlw	2
  2593  033B  00C6               	movwf	DecodeGPS@x
  2594  033C  3000               	movlw	0
  2595  033D  3D47               	addwfc	DecodeGPS@x+1,w
  2596  033E  00C7               	movwf	DecodeGPS@x+1
  2597  033F                     l2013:	
  2598                           
  2599                           ;launcher_functions.c: 452: }
  2600                           ;launcher_functions.c: 455: x = x + 1;
  2601  033F  0846               	movf	DecodeGPS@x,w
  2602  0340  3E01               	addlw	1
  2603  0341  00C6               	movwf	DecodeGPS@x
  2604  0342  3000               	movlw	0
  2605  0343  3D47               	addwfc	DecodeGPS@x+1,w
  2606  0344  00C7               	movwf	DecodeGPS@x+1
  2607                           
  2608                           ;launcher_functions.c: 458: if(gpsMessage[x] != ',')
  2609  0345  0846               	movf	DecodeGPS@x,w
  2610  0346  3E20               	addlw	_gpsMessage& (0+255)
  2611  0347  0086               	movwf	6
  2612  0348  3001               	movlw	1	; select bank2/3
  2613  0349  0087               	movwf	7
  2614  034A  0801               	movf	1,w
  2615  034B  3A2C               	xorlw	44
  2616  034C  1903               	skipnz
  2617  034D  2B5B               	goto	l2021
  2618                           
  2619                           ;launcher_functions.c: 459: eastWest = gpsMessage[x++];
  2620  034E  0846               	movf	DecodeGPS@x,w
  2621  034F  3E20               	addlw	_gpsMessage& (0+255)
  2622  0350  0086               	movwf	6
  2623  0351  3001               	movlw	1	; select bank2/3
  2624  0352  0087               	movwf	7
  2625  0353  0801               	movf	1,w
  2626  0354  00AE               	movwf	??_DecodeGPS
  2627  0355  082E               	movf	??_DecodeGPS,w
  2628  0356  00B8               	movwf	DecodeGPS@eastWest
  2629  0357  3001               	movlw	1
  2630  0358  07C6               	addwf	DecodeGPS@x,f
  2631  0359  3000               	movlw	0
  2632  035A  3DC7               	addwfc	DecodeGPS@x+1,f
  2633  035B                     l2021:	
  2634                           
  2635                           ;launcher_functions.c: 462: x = x + 1;
  2636  035B  0846               	movf	DecodeGPS@x,w
  2637  035C  3E01               	addlw	1
  2638  035D  00C6               	movwf	DecodeGPS@x
  2639  035E  3000               	movlw	0
  2640  035F  3D47               	addwfc	DecodeGPS@x+1,w
  2641  0360  00C7               	movwf	DecodeGPS@x+1
  2642  0361                     l2023:	
  2643                           ;launcher_functions.c: 465: while(gpsMessage[x++] != ','){}
  2644                           
  2645  0361  0847               	movf	DecodeGPS@x+1,w
  2646  0362  00AF               	movwf	??_DecodeGPS+1
  2647  0363  0846               	movf	DecodeGPS@x,w
  2648  0364  00AE               	movwf	??_DecodeGPS
  2649  0365  0AC6               	incf	DecodeGPS@x,f
  2650  0366  1903               	skipnz
  2651  0367  0AC7               	incf	DecodeGPS@x+1,f
  2652  0368  082E               	movf	??_DecodeGPS,w
  2653  0369  3E20               	addlw	_gpsMessage& (0+255)
  2654  036A  0086               	movwf	6
  2655  036B  3001               	movlw	1	; select bank2/3
  2656  036C  0087               	movwf	7
  2657  036D  0801               	movf	1,w
  2658  036E  3A2C               	xorlw	44
  2659  036F  1D03               	skipz
  2660  0370  2B61               	goto	l2023
  2661                           
  2662                           ;launcher_functions.c: 468: status = gpsMessage[x];
  2663  0371  0846               	movf	DecodeGPS@x,w
  2664  0372  3E20               	addlw	_gpsMessage& (0+255)
  2665  0373  0086               	movwf	6
  2666  0374  3001               	movlw	1	; select bank2/3
  2667  0375  0087               	movwf	7
  2668  0376  0801               	movf	1,w
  2669  0377  00AE               	movwf	??_DecodeGPS
  2670  0378  082E               	movf	??_DecodeGPS,w
  2671  0379  00B9               	movwf	DecodeGPS@status
  2672                           
  2673                           ;launcher_functions.c: 470: if(status == 'A')
  2674  037A  0839               	movf	DecodeGPS@status,w
  2675  037B  3A41               	xorlw	65
  2676  037C  1D03               	skipz
  2677  037D  2B81               	goto	l375
  2678                           
  2679                           ;launcher_functions.c: 471: gpsInvalidFlag = 0;
  2680  037E  0021               	movlb	1	; select bank1
  2681  037F  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2682  0380  2B84               	goto	l2031
  2683  0381                     l375:	
  2684                           
  2685                           ;launcher_functions.c: 472: else
  2686                           ;launcher_functions.c: 473: gpsInvalidFlag = 1;
  2687  0381  0021               	movlb	1	; select bank1
  2688  0382  01BE               	clrf	_gpsInvalidFlag^(0+128)
  2689  0383  0ABE               	incf	_gpsInvalidFlag^(0+128),f
  2690  0384                     l2031:	
  2691                           
  2692                           ;launcher_functions.c: 477: if(!gpsInvalidFlag)
  2693  0384  08BE               	movf	_gpsInvalidFlag^(0+128),f
  2694  0385  1D03               	skipz
  2695  0386  0008               	return
  2696                           
  2697                           ;launcher_functions.c: 478: {
  2698                           ;launcher_functions.c: 480: for(x=0;x<3;x++)
  2699  0387  0020               	movlb	0	; select bank0
  2700  0388  01C6               	clrf	DecodeGPS@x
  2701  0389  01C7               	clrf	DecodeGPS@x+1
  2702  038A  0847               	movf	DecodeGPS@x+1,w
  2703  038B  3A80               	xorlw	128
  2704  038C  00AE               	movwf	??_DecodeGPS
  2705  038D  3080               	movlw	128
  2706  038E  022E               	subwf	??_DecodeGPS,w
  2707  038F  1D03               	skipz
  2708  0390  2B93               	goto	u1605
  2709  0391  3003               	movlw	3
  2710  0392  0246               	subwf	DecodeGPS@x,w
  2711  0393                     u1605:	
  2712  0393  1803               	btfsc	3,0
  2713  0394  2BBD               	goto	l2045
  2714  0395                     l2039:	
  2715                           
  2716                           ;launcher_functions.c: 481: {
  2717                           ;launcher_functions.c: 482: validLatitude[x] = latitude[x];
  2718  0395  0020               	movlb	0	; select bank0
  2719  0396  3546               	lslf	DecodeGPS@x,w
  2720  0397  3E3A               	addlw	DecodeGPS@latitude& (0+255)
  2721  0398  0086               	movwf	6
  2722  0399  0187               	clrf	7
  2723  039A  3546               	lslf	DecodeGPS@x,w
  2724  039B  3ECD               	addlw	_validLatitude& (0+255)
  2725  039C  0084               	movwf	4
  2726  039D  0185               	clrf	5
  2727  039E  3F40               	moviw [0]fsr1
  2728  039F  3F80               	movwi [0]fsr0
  2729  03A0  3F41               	moviw [1]fsr1
  2730  03A1  3F81               	movwi [1]fsr0
  2731                           
  2732                           ;launcher_functions.c: 483: validLongitude[x] = longitude[x];
  2733  03A2  3546               	lslf	DecodeGPS@x,w
  2734  03A3  3E40               	addlw	DecodeGPS@longitude& (0+255)
  2735  03A4  0086               	movwf	6
  2736  03A5  0187               	clrf	7
  2737  03A6  3546               	lslf	DecodeGPS@x,w
  2738  03A7  3ED3               	addlw	_validLongitude& (0+255)
  2739  03A8  0084               	movwf	4
  2740  03A9  0185               	clrf	5
  2741  03AA  3F40               	moviw [0]fsr1
  2742  03AB  3F80               	movwi [0]fsr0
  2743  03AC  3F41               	moviw [1]fsr1
  2744  03AD  3F81               	movwi [1]fsr0
  2745  03AE  3001               	movlw	1
  2746  03AF  07C6               	addwf	DecodeGPS@x,f
  2747  03B0  3000               	movlw	0
  2748  03B1  3DC7               	addwfc	DecodeGPS@x+1,f
  2749  03B2  0847               	movf	DecodeGPS@x+1,w
  2750  03B3  3A80               	xorlw	128
  2751  03B4  00AE               	movwf	??_DecodeGPS
  2752  03B5  3080               	movlw	128
  2753  03B6  022E               	subwf	??_DecodeGPS,w
  2754  03B7  1D03               	skipz
  2755  03B8  2BBB               	goto	u1615
  2756  03B9  3003               	movlw	3
  2757  03BA  0246               	subwf	DecodeGPS@x,w
  2758  03BB                     u1615:	
  2759  03BB  1C03               	skipc
  2760  03BC  2B95               	goto	l2039
  2761  03BD                     l2045:	
  2762                           
  2763                           ;launcher_functions.c: 484: }
  2764                           ;launcher_functions.c: 485: validNorthSouth = northSouth;
  2765  03BD  0020               	movlb	0	; select bank0
  2766  03BE  0837               	movf	DecodeGPS@northSouth,w
  2767  03BF  00AE               	movwf	??_DecodeGPS
  2768  03C0  082E               	movf	??_DecodeGPS,w
  2769  03C1  0021               	movlb	1	; select bank1
  2770  03C2  00C0               	movwf	_validNorthSouth^(0+128)
  2771                           
  2772                           ;launcher_functions.c: 486: validEastWest = eastWest;
  2773  03C3  0020               	movlb	0	; select bank0
  2774  03C4  0838               	movf	DecodeGPS@eastWest,w
  2775  03C5  00AE               	movwf	??_DecodeGPS
  2776  03C6  082E               	movf	??_DecodeGPS,w
  2777  03C7  0021               	movlb	1	; select bank1
  2778  03C8  00BF               	movwf	_validEastWest^(0+128)
  2779  03C9  0008               	return
  2780  03CA                     __end_of_DecodeGPS:	
  2781                           
  2782                           	psect	text4
  2783  0E69                     __ptext4:	
  2784 ;; *************** function ___wmul *****************
  2785 ;; Defined at:
  2786 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2789 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  product         2    4[BANK0 ] unsigned int 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2    0[BANK0 ] unsigned int 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         0       4       0       0       0       0       0
  2802 ;;      Locals:         0       2       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0
  2804 ;;      Totals:         0       6       0       0       0       0       0
  2805 ;;Total ram usage:        6 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    2
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_DecodeGPS
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function ___wmul
  2817  0E69                     ___wmul:	
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2821  0E69  0020               	movlb	0	; select bank0
  2822  0E6A  01A4               	clrf	___wmul@product
  2823  0E6B  01A5               	clrf	___wmul@product+1
  2824  0E6C                     l1731:	
  2825  0E6C  1C20               	btfss	___wmul@multiplier,0
  2826  0E6D  2E72               	goto	l524
  2827  0E6E  0822               	movf	___wmul@multiplicand,w
  2828  0E6F  07A4               	addwf	___wmul@product,f
  2829  0E70  0823               	movf	___wmul@multiplicand+1,w
  2830  0E71  3DA5               	addwfc	___wmul@product+1,f
  2831  0E72                     l524:	
  2832  0E72  3001               	movlw	1
  2833  0E73                     u1125:	
  2834  0E73  35A2               	lslf	___wmul@multiplicand,f
  2835  0E74  0DA3               	rlf	___wmul@multiplicand+1,f
  2836  0E75  0B89               	decfsz	9,f
  2837  0E76  2E73               	goto	u1125
  2838  0E77  3001               	movlw	1
  2839  0E78                     u1135:	
  2840  0E78  36A1               	lsrf	___wmul@multiplier+1,f
  2841  0E79  0CA0               	rrf	___wmul@multiplier,f
  2842  0E7A  0B89               	decfsz	9,f
  2843  0E7B  2E78               	goto	u1135
  2844  0E7C  0821               	movf	___wmul@multiplier+1,w
  2845  0E7D  0420               	iorwf	___wmul@multiplier,w
  2846  0E7E  1D03               	skipz
  2847  0E7F  2E6C               	goto	l1731
  2848  0E80  0825               	movf	___wmul@product+1,w
  2849  0E81  01A1               	clrf	?___wmul+1
  2850  0E82  07A1               	addwf	?___wmul+1,f
  2851  0E83  0824               	movf	___wmul@product,w
  2852  0E84  01A0               	clrf	?___wmul
  2853  0E85  07A0               	addwf	?___wmul,f
  2854  0E86  0008               	return
  2855  0E87                     __end_of___wmul:	
  2856                           
  2857                           	psect	text5
  2858  0EA8                     __ptext5:	
  2859 ;; *************** function _ToggleSleepGPS *****************
  2860 ;; Defined at:
  2861 ;;		line 315 in file "launcher_functions.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		wreg
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2875 ;;      Params:         0       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0
  2877 ;;      Temps:          0       3       0       0       0       0       0
  2878 ;;      Totals:         0       3       0       0       0       0       0
  2879 ;;Total ram usage:        3 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    2
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           
  2890                           ;psect for function _ToggleSleepGPS
  2891  0EA8                     _ToggleSleepGPS:	
  2892                           
  2893                           ;launcher_functions.c: 317: TRISAbits.TRISA6 = 0;
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _ToggleSleepGPS: [wreg]
  2897  0EA8  0021               	movlb	1	; select bank1
  2898  0EA9  130C               	bcf	12,6	;volatile
  2899                           
  2900                           ;launcher_functions.c: 319: RA6 = 0;
  2901  0EAA  0020               	movlb	0	; select bank0
  2902  0EAB  130C               	bcf	12,6	;volatile
  2903                           
  2904                           ;launcher_functions.c: 320: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2905  0EAC  3015               	movlw	21
  2906  0EAD  00A2               	movwf	??_ToggleSleepGPS+2
  2907  0EAE  304B               	movlw	75
  2908  0EAF  00A1               	movwf	??_ToggleSleepGPS+1
  2909  0EB0  30D1               	movlw	209
  2910  0EB1  00A0               	movwf	??_ToggleSleepGPS
  2911  0EB2                     u2097:	
  2912  0EB2  0BA0               	decfsz	??_ToggleSleepGPS,f
  2913  0EB3  2EB2               	goto	u2097
  2914  0EB4  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2915  0EB5  2EB2               	goto	u2097
  2916  0EB6  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2917  0EB7  2EB2               	goto	u2097
  2918  0EB8  0000               	nop
  2919                           
  2920                           ;launcher_functions.c: 321: RA6 = 1;
  2921  0EB9  0020               	movlb	0	; select bank0
  2922  0EBA  170C               	bsf	12,6	;volatile
  2923                           
  2924                           ;launcher_functions.c: 322: _delay((unsigned long)((100)*(16000000/4000.0)));
  2925  0EBB  3003               	movlw	3
  2926  0EBC  00A2               	movwf	??_ToggleSleepGPS+2
  2927  0EBD  3008               	movlw	8
  2928  0EBE  00A1               	movwf	??_ToggleSleepGPS+1
  2929  0EBF  3078               	movlw	120
  2930  0EC0  00A0               	movwf	??_ToggleSleepGPS
  2931  0EC1                     u2107:	
  2932  0EC1  0BA0               	decfsz	??_ToggleSleepGPS,f
  2933  0EC2  2EC1               	goto	u2107
  2934  0EC3  0BA1               	decfsz	??_ToggleSleepGPS+1,f
  2935  0EC4  2EC1               	goto	u2107
  2936  0EC5  0BA2               	decfsz	??_ToggleSleepGPS+2,f
  2937  0EC6  2EC1               	goto	u2107
  2938                           
  2939                           ;launcher_functions.c: 323: RA6 = 0;
  2940  0EC7  0020               	movlb	0	; select bank0
  2941  0EC8  130C               	bcf	12,6	;volatile
  2942  0EC9  0008               	return
  2943  0ECA                     __end_of_ToggleSleepGPS:	
  2944                           
  2945                           	psect	text6
  2946  063D                     __ptext6:	
  2947 ;; *************** function _SetupGPS *****************
  2948 ;; Defined at:
  2949 ;;		line 333 in file "launcher_functions.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  message        22   42[BANK0 ] unsigned char [22]
  2954 ;;  startSequenc    6   64[BANK0 ] unsigned char [6]
  2955 ;;  MID             4   70[BANK0 ] unsigned char [4]
  2956 ;;  x               2   74[BANK0 ] int 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;		None               void
  2959 ;; Registers used:
  2960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2966 ;;      Params:         0       0       0       0       0       0       0
  2967 ;;      Locals:         0      34       0       0       0       0       0
  2968 ;;      Temps:          0       3       0       0       0       0       0
  2969 ;;      Totals:         0      37       0       0       0       0       0
  2970 ;;Total ram usage:       37 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    4
  2973 ;; This function calls:
  2974 ;;		_sprintf
  2975 ;;		_uart_write_message
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _SetupGPS
  2983  063D                     _SetupGPS:	
  2984                           
  2985                           ;launcher_functions.c: 335: int x;
  2986                           ;launcher_functions.c: 336: unsigned char startSequence[6] = "$PSRF";
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2990  063D  30B4               	movlw	low SetupGPS@F4916
  2991  063E  0086               	movwf	6
  2992  063F  3000               	movlw	high SetupGPS@F4916
  2993  0640  0087               	movwf	7
  2994  0641  3060               	movlw	low SetupGPS@startSequence
  2995  0642  0084               	movwf	4
  2996  0643  3000               	movlw	high SetupGPS@startSequence
  2997  0644  0085               	movwf	5
  2998  0645  3006               	movlw	6
  2999  0646  0020               	movlb	0	; select bank0
  3000  0647  00C7               	movwf	??_SetupGPS
  3001  0648                     u1620:	
  3002  0648  0016               	moviw fsr1++
  3003  0649  001A               	movwi fsr0++
  3004  064A  0BC7               	decfsz	??_SetupGPS,f
  3005  064B  2E48               	goto	u1620
  3006                           
  3007                           ;launcher_functions.c: 337: unsigned char MID[4] = "103";
  3008  064C  0021               	movlb	1	; select bank1
  3009  064D  083D               	movf	(SetupGPS@F4918+3)^(0+128),w
  3010  064E  0020               	movlb	0	; select bank0
  3011  064F  00E9               	movwf	SetupGPS@MID+3
  3012  0650  0021               	movlb	1	; select bank1
  3013  0651  083C               	movf	(SetupGPS@F4918+2)^(0+128),w
  3014  0652  0020               	movlb	0	; select bank0
  3015  0653  00E8               	movwf	SetupGPS@MID+2
  3016  0654  0021               	movlb	1	; select bank1
  3017  0655  083B               	movf	(SetupGPS@F4918+1)^(0+128),w
  3018  0656  0020               	movlb	0	; select bank0
  3019  0657  00E7               	movwf	SetupGPS@MID+1
  3020  0658  0021               	movlb	1	; select bank1
  3021  0659  083A               	movf	SetupGPS@F4918^(0+128),w
  3022  065A  0020               	movlb	0	; select bank0
  3023  065B  00E6               	movwf	SetupGPS@MID
  3024                           
  3025                           ;launcher_functions.c: 338: unsigned char message[22];
  3026                           ;launcher_functions.c: 341: for(x = 0; x < 6; x++)
  3027  065C  01EA               	clrf	SetupGPS@x
  3028  065D  01EB               	clrf	SetupGPS@x+1
  3029  065E  086B               	movf	SetupGPS@x+1,w
  3030  065F  3A80               	xorlw	128
  3031  0660  00C7               	movwf	??_SetupGPS
  3032  0661  3080               	movlw	128
  3033  0662  0247               	subwf	??_SetupGPS,w
  3034  0663  1D03               	skipz
  3035  0664  2E67               	goto	u1635
  3036  0665  3006               	movlw	6
  3037  0666  026A               	subwf	SetupGPS@x,w
  3038  0667                     u1635:	
  3039  0667  1803               	btfsc	3,0
  3040  0668  2EA7               	goto	l2201
  3041  0669                     l2191:	
  3042                           
  3043                           ;launcher_functions.c: 342: {
  3044                           ;launcher_functions.c: 343: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3045  0669  3015               	movlw	21
  3046  066A  0020               	movlb	0	; select bank0
  3047  066B  00C9               	movwf	??_SetupGPS+2
  3048  066C  304B               	movlw	75
  3049  066D  00C8               	movwf	??_SetupGPS+1
  3050  066E  30D1               	movlw	209
  3051  066F  00C7               	movwf	??_SetupGPS
  3052  0670                     u2117:	
  3053  0670  0BC7               	decfsz	??_SetupGPS,f
  3054  0671  2E70               	goto	u2117
  3055  0672  0BC8               	decfsz	??_SetupGPS+1,f
  3056  0673  2E70               	goto	u2117
  3057  0674  0BC9               	decfsz	??_SetupGPS+2,f
  3058  0675  2E70               	goto	u2117
  3059  0676  0000               	nop
  3060                           
  3061                           ;launcher_functions.c: 344: sprintf(message, "%s%s,0%d,00,00,00*", startSequence, MID, x
      +                          );
  3062  0677  300A               	movlw	low (STR_1| (0+32768))
  3063  0678  0020               	movlb	0	; select bank0
  3064  0679  00B4               	movwf	sprintf@f
  3065  067A  3088               	movlw	high (STR_1| (0+32768))
  3066  067B  00B5               	movwf	sprintf@f+1
  3067  067C  3060               	movlw	SetupGPS@startSequence& (0+255)
  3068  067D  00C7               	movwf	??_SetupGPS
  3069  067E  0847               	movf	??_SetupGPS,w
  3070  067F  00B6               	movwf	?_sprintf+2
  3071  0680  3066               	movlw	SetupGPS@MID& (0+255)
  3072  0681  00C8               	movwf	??_SetupGPS+1
  3073  0682  0848               	movf	??_SetupGPS+1,w
  3074  0683  00B7               	movwf	?_sprintf+3
  3075  0684  086B               	movf	SetupGPS@x+1,w
  3076  0685  01B9               	clrf	?_sprintf+5
  3077  0686  07B9               	addwf	?_sprintf+5,f
  3078  0687  086A               	movf	SetupGPS@x,w
  3079  0688  01B8               	clrf	?_sprintf+4
  3080  0689  07B8               	addwf	?_sprintf+4,f
  3081  068A  304A               	movlw	SetupGPS@message& (0+255)
  3082  068B  3185  2537  3186   	fcall	_sprintf
  3083                           
  3084                           ;launcher_functions.c: 345: uart_write_message(message, 22);
  3085  068E  3016               	movlw	22
  3086  068F  0020               	movlb	0	; select bank0
  3087  0690  00A8               	movwf	uart_write_message@size
  3088  0691  3000               	movlw	0
  3089  0692  00A9               	movwf	uart_write_message@size+1
  3090  0693  304A               	movlw	SetupGPS@message& (0+255)
  3091  0694  3187  275D  3186   	fcall	_uart_write_message
  3092  0697  3001               	movlw	1
  3093  0698  0020               	movlb	0	; select bank0
  3094  0699  07EA               	addwf	SetupGPS@x,f
  3095  069A  3000               	movlw	0
  3096  069B  3DEB               	addwfc	SetupGPS@x+1,f
  3097  069C  086B               	movf	SetupGPS@x+1,w
  3098  069D  3A80               	xorlw	128
  3099  069E  00C7               	movwf	??_SetupGPS
  3100  069F  3080               	movlw	128
  3101  06A0  0247               	subwf	??_SetupGPS,w
  3102  06A1  1D03               	skipz
  3103  06A2  2EA5               	goto	u1645
  3104  06A3  3006               	movlw	6
  3105  06A4  026A               	subwf	SetupGPS@x,w
  3106  06A5                     u1645:	
  3107  06A5  1C03               	skipc
  3108  06A6  2E69               	goto	l2191
  3109  06A7                     l2201:	
  3110                           
  3111                           ;launcher_functions.c: 346: }
  3112                           ;launcher_functions.c: 348: _delay((unsigned long)((1000)*(16000000/4000.0)));
  3113  06A7  3015               	movlw	21
  3114  06A8  0020               	movlb	0	; select bank0
  3115  06A9  00C9               	movwf	??_SetupGPS+2
  3116  06AA  304B               	movlw	75
  3117  06AB  00C8               	movwf	??_SetupGPS+1
  3118  06AC  30D1               	movlw	209
  3119  06AD  00C7               	movwf	??_SetupGPS
  3120  06AE                     u2127:	
  3121  06AE  0BC7               	decfsz	??_SetupGPS,f
  3122  06AF  2EAE               	goto	u2127
  3123  06B0  0BC8               	decfsz	??_SetupGPS+1,f
  3124  06B1  2EAE               	goto	u2127
  3125  06B2  0BC9               	decfsz	??_SetupGPS+2,f
  3126  06B3  2EAE               	goto	u2127
  3127  06B4  0000               	nop
  3128                           
  3129                           ;launcher_functions.c: 350: sprintf(message, "%s%s,01,01,01,00*", startSequence, MID);
  3130  06B5  301D               	movlw	low (STR_2| (0+32768))
  3131  06B6  0020               	movlb	0	; select bank0
  3132  06B7  00B4               	movwf	sprintf@f
  3133  06B8  3088               	movlw	high (STR_2| (0+32768))
  3134  06B9  00B5               	movwf	sprintf@f+1
  3135  06BA  3060               	movlw	SetupGPS@startSequence& (0+255)
  3136  06BB  00C7               	movwf	??_SetupGPS
  3137  06BC  0847               	movf	??_SetupGPS,w
  3138  06BD  00B6               	movwf	?_sprintf+2
  3139  06BE  3066               	movlw	SetupGPS@MID& (0+255)
  3140  06BF  00C8               	movwf	??_SetupGPS+1
  3141  06C0  0848               	movf	??_SetupGPS+1,w
  3142  06C1  00B7               	movwf	?_sprintf+3
  3143  06C2  304A               	movlw	SetupGPS@message& (0+255)
  3144  06C3  3185  2537  3186   	fcall	_sprintf
  3145                           
  3146                           ;launcher_functions.c: 351: uart_write_message(message, 22);
  3147  06C6  3016               	movlw	22
  3148  06C7  0020               	movlb	0	; select bank0
  3149  06C8  00A8               	movwf	uart_write_message@size
  3150  06C9  3000               	movlw	0
  3151  06CA  00A9               	movwf	uart_write_message@size+1
  3152  06CB  304A               	movlw	SetupGPS@message& (0+255)
  3153  06CC  3187  275D         	fcall	_uart_write_message
  3154  06CE  0008               	return
  3155  06CF                     __end_of_SetupGPS:	
  3156                           
  3157                           	psect	text7
  3158  075D                     __ptext7:	
  3159 ;; *************** function _uart_write_message *****************
  3160 ;; Defined at:
  3161 ;;		line 288 in file "launcher_functions.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  data            1    wreg     PTR unsigned char 
  3164 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3165 ;;  size            2    8[BANK0 ] int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  data            1   20[BANK0 ] PTR unsigned char 
  3168 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3169 ;;  ascii_checks    2   21[BANK0 ] unsigned char [2]
  3170 ;;  x               2   17[BANK0 ] int 
  3171 ;;  checksum        1   19[BANK0 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3181 ;;      Params:         0       2       0       0       0       0       0
  3182 ;;      Locals:         0      10       0       0       0       0       0
  3183 ;;      Temps:          0       3       0       0       0       0       0
  3184 ;;      Totals:         0      15       0       0       0       0       0
  3185 ;;Total ram usage:       15 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		_compute_checksum
  3190 ;;		_uart_xmit
  3191 ;; This function is called by:
  3192 ;;		_SetupGPS
  3193 ;;		_UpdateGPS
  3194 ;;		_DisableGPS
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function _uart_write_message
  3200  075D                     _uart_write_message:	
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in _uart_write_message: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3204                           ;uart_write_message@data stored from wreg
  3205  075D  0020               	movlb	0	; select bank0
  3206  075E  00B4               	movwf	uart_write_message@data
  3207                           
  3208                           ;launcher_functions.c: 290: int x;
  3209                           ;launcher_functions.c: 291: unsigned char checksum;
  3210                           ;launcher_functions.c: 292: unsigned char ascii_checksum[2];
  3211                           ;launcher_functions.c: 294: checksum = compute_checksum(data, size);
  3212  075F  0829               	movf	uart_write_message@size+1,w
  3213  0760  01A1               	clrf	compute_checksum@size+1
  3214  0761  07A1               	addwf	compute_checksum@size+1,f
  3215  0762  0828               	movf	uart_write_message@size,w
  3216  0763  01A0               	clrf	compute_checksum@size
  3217  0764  07A0               	addwf	compute_checksum@size,f
  3218  0765  0834               	movf	uart_write_message@data,w
  3219  0766  318F  275E  3187   	fcall	_compute_checksum
  3220  0769  0020               	movlb	0	; select bank0
  3221  076A  00AA               	movwf	??_uart_write_message
  3222  076B  082A               	movf	??_uart_write_message,w
  3223  076C  00B3               	movwf	uart_write_message@checksum
  3224                           
  3225                           ;launcher_functions.c: 295: ascii_checksum[0] = checksum >> 4;
  3226  076D  0833               	movf	uart_write_message@checksum,w
  3227  076E  00AA               	movwf	??_uart_write_message
  3228  076F  3004               	movlw	4
  3229  0770                     u1335:	
  3230  0770  36AA               	lsrf	??_uart_write_message,f
  3231  0771  0B89               	decfsz	9,f
  3232  0772  2F70               	goto	u1335
  3233  0773  082A               	movf	??_uart_write_message,w
  3234  0774  00AB               	movwf	??_uart_write_message+1
  3235  0775  082B               	movf	??_uart_write_message+1,w
  3236  0776  00B5               	movwf	uart_write_message@ascii_checksum
  3237                           
  3238                           ;launcher_functions.c: 296: ascii_checksum[1] = checksum & 0x0F;
  3239  0777  0833               	movf	uart_write_message@checksum,w
  3240  0778  390F               	andlw	15
  3241  0779  00AA               	movwf	??_uart_write_message
  3242  077A  082A               	movf	??_uart_write_message,w
  3243  077B  00B6               	movwf	uart_write_message@ascii_checksum+1
  3244                           
  3245                           ;launcher_functions.c: 298: ascii_checksum[0] += (ascii_checksum[0] < 10 ? 48 : 55);
  3246  077C  300A               	movlw	10
  3247  077D  0235               	subwf	uart_write_message@ascii_checksum,w
  3248  077E  1C03               	skipc
  3249  077F  2F82               	goto	l1827
  3250  0780  3037               	movlw	55
  3251  0781  2F83               	goto	L1
  3252  0782                     l1827:	
  3253  0782  3030               	movlw	48
  3254  0783                     L1:	
  3255  0783  00AD               	movwf	_uart_write_message$1286
  3256  0784  3000               	movlw	0
  3257  0785  00AE               	movwf	_uart_write_message$1286+1
  3258  0786  082D               	movf	_uart_write_message$1286,w
  3259  0787  00AA               	movwf	??_uart_write_message
  3260  0788  082A               	movf	??_uart_write_message,w
  3261  0789  07B5               	addwf	uart_write_message@ascii_checksum,f
  3262                           
  3263                           ;launcher_functions.c: 299: ascii_checksum[1] += (ascii_checksum[1] < 10 ? 48 : 55);
  3264  078A  300A               	movlw	10
  3265  078B  0236               	subwf	uart_write_message@ascii_checksum+1,w
  3266  078C  1C03               	skipc
  3267  078D  2F90               	goto	l1835
  3268  078E  3037               	movlw	55
  3269  078F  2F91               	goto	L2
  3270  0790                     l1835:	
  3271  0790  3030               	movlw	48
  3272  0791                     L2:	
  3273  0791  00AF               	movwf	_uart_write_message$1287
  3274  0792  3000               	movlw	0
  3275  0793  00B0               	movwf	_uart_write_message$1287+1
  3276  0794  082F               	movf	_uart_write_message$1287,w
  3277  0795  00AA               	movwf	??_uart_write_message
  3278  0796  082A               	movf	??_uart_write_message,w
  3279  0797  07B6               	addwf	uart_write_message@ascii_checksum+1,f
  3280                           
  3281                           ;launcher_functions.c: 301: for(x=0; x<size-1; x++)
  3282  0798  01B1               	clrf	uart_write_message@x
  3283  0799  01B2               	clrf	uart_write_message@x+1
  3284  079A                     l1845:	
  3285  079A  0828               	movf	uart_write_message@size,w
  3286  079B  3EFF               	addlw	255
  3287  079C  00AA               	movwf	??_uart_write_message
  3288  079D  30FF               	movlw	255
  3289  079E  3D29               	addwfc	uart_write_message@size+1,w
  3290  079F  00AB               	movwf	??_uart_write_message+1
  3291  07A0  0832               	movf	uart_write_message@x+1,w
  3292  07A1  3A80               	xorlw	128
  3293  07A2  00AC               	movwf	??_uart_write_message+2
  3294  07A3  082B               	movf	??_uart_write_message+1,w
  3295  07A4  3A80               	xorlw	128
  3296  07A5  022C               	subwf	??_uart_write_message+2,w
  3297  07A6  1D03               	skipz
  3298  07A7  2FAA               	goto	u1365
  3299  07A8  082A               	movf	??_uart_write_message,w
  3300  07A9  0231               	subwf	uart_write_message@x,w
  3301  07AA                     u1365:	
  3302  07AA  1803               	btfsc	3,0
  3303  07AB  2FBD               	goto	l1847
  3304                           
  3305                           ;launcher_functions.c: 302: {
  3306                           ;launcher_functions.c: 303: uart_xmit(data[x]);
  3307  07AC  0020               	movlb	0	; select bank0
  3308  07AD  0831               	movf	uart_write_message@x,w
  3309  07AE  0734               	addwf	uart_write_message@data,w
  3310  07AF  00AA               	movwf	??_uart_write_message
  3311  07B0  082A               	movf	??_uart_write_message,w
  3312  07B1  0086               	movwf	6
  3313  07B2  0187               	clrf	7
  3314  07B3  0801               	movf	1,w
  3315  07B4  318D  258F  3187   	fcall	_uart_xmit
  3316  07B7  3001               	movlw	1
  3317  07B8  0020               	movlb	0	; select bank0
  3318  07B9  07B1               	addwf	uart_write_message@x,f
  3319  07BA  3000               	movlw	0
  3320  07BB  3DB2               	addwfc	uart_write_message@x+1,f
  3321  07BC  2F9A               	goto	l1845
  3322  07BD                     l1847:	
  3323                           
  3324                           ;launcher_functions.c: 304: }
  3325                           ;launcher_functions.c: 305: uart_xmit(ascii_checksum[0]);
  3326  07BD  0020               	movlb	0	; select bank0
  3327  07BE  0835               	movf	uart_write_message@ascii_checksum,w
  3328  07BF  318D  258F  3187   	fcall	_uart_xmit
  3329                           
  3330                           ;launcher_functions.c: 306: uart_xmit(ascii_checksum[1]);
  3331  07C2  0020               	movlb	0	; select bank0
  3332  07C3  0836               	movf	uart_write_message@ascii_checksum+1,w
  3333  07C4  318D  258F  3187   	fcall	_uart_xmit
  3334                           
  3335                           ;launcher_functions.c: 308: uart_xmit(0x0D);
  3336  07C7  300D               	movlw	13
  3337  07C8  318D  258F  3187   	fcall	_uart_xmit
  3338                           
  3339                           ;launcher_functions.c: 309: uart_xmit(0x0A);
  3340  07CB  300A               	movlw	10
  3341  07CC  318D  258F         	fcall	_uart_xmit
  3342  07CE  0008               	return
  3343  07CF                     __end_of_uart_write_message:	
  3344                           
  3345                           	psect	text8
  3346  0D8F                     __ptext8:	
  3347 ;; *************** function _uart_xmit *****************
  3348 ;; Defined at:
  3349 ;;		line 280 in file "launcher_functions.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  mydata_byte     1    wreg     unsigned char 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  mydata_byte     1    0[BANK0 ] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;		None               void
  3356 ;; Registers used:
  3357 ;;		wreg
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         0       0       0       0       0       0       0
  3364 ;;      Locals:         0       1       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0
  3366 ;;      Totals:         0       1       0       0       0       0       0
  3367 ;;Total ram usage:        1 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    2
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_uart_write_message
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _uart_xmit
  3379  0D8F                     _uart_xmit:	
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _uart_xmit: [wreg]
  3383                           ;uart_xmit@mydata_byte stored from wreg
  3384  0D8F  0020               	movlb	0	; select bank0
  3385  0D90  00A0               	movwf	uart_xmit@mydata_byte
  3386  0D91                     l314:	
  3387                           ;launcher_functions.c: 283: while(!TXSTAbits.TRMT);
  3388                           
  3389  0D91  0023               	movlb	3	; select bank3
  3390  0D92  1C9E               	btfss	30,1	;volatile
  3391  0D93  2D91               	goto	l314
  3392                           
  3393                           ;launcher_functions.c: 284: TXREG = mydata_byte;
  3394  0D94  0020               	movlb	0	; select bank0
  3395  0D95  0820               	movf	uart_xmit@mydata_byte,w
  3396  0D96  0023               	movlb	3	; select bank3
  3397  0D97  009A               	movwf	26	;volatile
  3398  0D98  0008               	return
  3399  0D99                     __end_of_uart_xmit:	
  3400                           
  3401                           	psect	text9
  3402  0F5E                     __ptext9:	
  3403 ;; *************** function _compute_checksum *****************
  3404 ;; Defined at:
  3405 ;;		line 269 in file "launcher_functions.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  data            1    wreg     PTR unsigned char 
  3408 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3409 ;;  size            2    0[BANK0 ] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  data            1    5[BANK0 ] PTR unsigned char 
  3412 ;;		 -> UpdateGPS@GPSupdateMessage(22), SetupGPS@message(22), DisableGPS@init_117(13), 
  3413 ;;  x               2    6[BANK0 ] int 
  3414 ;;  checksum        1    4[BANK0 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      unsigned char 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3424 ;;      Params:         0       2       0       0       0       0       0
  3425 ;;      Locals:         0       4       0       0       0       0       0
  3426 ;;      Temps:          0       2       0       0       0       0       0
  3427 ;;      Totals:         0       8       0       0       0       0       0
  3428 ;;Total ram usage:        8 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    2
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_uart_write_message
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function _compute_checksum
  3440  0F5E                     _compute_checksum:	
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _compute_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3444                           ;compute_checksum@data stored from wreg
  3445  0F5E  0020               	movlb	0	; select bank0
  3446  0F5F  00A5               	movwf	compute_checksum@data
  3447                           
  3448                           ;launcher_functions.c: 271: unsigned char checksum = 0;
  3449  0F60  01A4               	clrf	compute_checksum@checksum
  3450                           
  3451                           ;launcher_functions.c: 272: int x;
  3452                           ;launcher_functions.c: 273: for(x=0; x<size; x++)
  3453  0F61  01A6               	clrf	compute_checksum@x
  3454  0F62  01A7               	clrf	compute_checksum@x+1
  3455  0F63                     l1719:	
  3456  0F63  0827               	movf	compute_checksum@x+1,w
  3457  0F64  3A80               	xorlw	128
  3458  0F65  00A2               	movwf	??_compute_checksum
  3459  0F66  0821               	movf	compute_checksum@size+1,w
  3460  0F67  3A80               	xorlw	128
  3461  0F68  0222               	subwf	??_compute_checksum,w
  3462  0F69  1D03               	skipz
  3463  0F6A  2F6D               	goto	u1095
  3464  0F6B  0820               	movf	compute_checksum@size,w
  3465  0F6C  0226               	subwf	compute_checksum@x,w
  3466  0F6D                     u1095:	
  3467  0F6D  1803               	btfsc	3,0
  3468  0F6E  2F9D               	goto	l1721
  3469                           
  3470                           ;launcher_functions.c: 274: {
  3471                           ;launcher_functions.c: 275: if ((data[x] != '$') && (data[x] != '*') && (data[x] != '!')
      +                          )
  3472  0F6F  0020               	movlb	0	; select bank0
  3473  0F70  0826               	movf	compute_checksum@x,w
  3474  0F71  0725               	addwf	compute_checksum@data,w
  3475  0F72  00A2               	movwf	??_compute_checksum
  3476  0F73  0822               	movf	??_compute_checksum,w
  3477  0F74  0086               	movwf	6
  3478  0F75  0187               	clrf	7
  3479  0F76  0801               	movf	1,w
  3480  0F77  3A24               	xorlw	36
  3481  0F78  1903               	skipnz
  3482  0F79  2F98               	goto	l1717
  3483  0F7A  0826               	movf	compute_checksum@x,w
  3484  0F7B  0725               	addwf	compute_checksum@data,w
  3485  0F7C  00A2               	movwf	??_compute_checksum
  3486  0F7D  0822               	movf	??_compute_checksum,w
  3487  0F7E  0086               	movwf	6
  3488  0F7F  0187               	clrf	7
  3489  0F80  0801               	movf	1,w
  3490  0F81  3A2A               	xorlw	42
  3491  0F82  1903               	skipnz
  3492  0F83  2F98               	goto	l1717
  3493  0F84  0826               	movf	compute_checksum@x,w
  3494  0F85  0725               	addwf	compute_checksum@data,w
  3495  0F86  00A2               	movwf	??_compute_checksum
  3496  0F87  0822               	movf	??_compute_checksum,w
  3497  0F88  0086               	movwf	6
  3498  0F89  0187               	clrf	7
  3499  0F8A  0801               	movf	1,w
  3500  0F8B  3A21               	xorlw	33
  3501  0F8C  1903               	skipnz
  3502  0F8D  2F98               	goto	l1717
  3503                           
  3504                           ;launcher_functions.c: 276: checksum ^= data[x];
  3505  0F8E  0826               	movf	compute_checksum@x,w
  3506  0F8F  0725               	addwf	compute_checksum@data,w
  3507  0F90  00A2               	movwf	??_compute_checksum
  3508  0F91  0822               	movf	??_compute_checksum,w
  3509  0F92  0086               	movwf	6
  3510  0F93  0187               	clrf	7
  3511  0F94  0801               	movf	1,w
  3512  0F95  00A3               	movwf	??_compute_checksum+1
  3513  0F96  0823               	movf	??_compute_checksum+1,w
  3514  0F97  06A4               	xorwf	compute_checksum@checksum,f
  3515  0F98                     l1717:	
  3516  0F98  3001               	movlw	1
  3517  0F99  07A6               	addwf	compute_checksum@x,f
  3518  0F9A  3000               	movlw	0
  3519  0F9B  3DA7               	addwfc	compute_checksum@x+1,f
  3520  0F9C  2F63               	goto	l1719
  3521  0F9D                     l1721:	
  3522                           
  3523                           ;launcher_functions.c: 277: }
  3524                           ;launcher_functions.c: 278: return checksum;
  3525  0F9D  0020               	movlb	0	; select bank0
  3526  0F9E  0824               	movf	compute_checksum@checksum,w
  3527  0F9F  0008               	return
  3528  0FA0                     __end_of_compute_checksum:	
  3529                           
  3530                           	psect	text10
  3531  0537                     __ptext10:	
  3532 ;; *************** function _sprintf *****************
  3533 ;; Defined at:
  3534 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  sp              1    wreg     PTR unsigned char 
  3537 ;;		 -> SetupGPS@message(22), 
  3538 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  3539 ;;		 -> STR_2(18), STR_1(19), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  3542 ;;		 -> SetupGPS@message(22), 
  3543 ;;  _val            4   34[BANK0 ] struct .
  3544 ;;  c               1   38[BANK0 ] char 
  3545 ;;  ap              1   32[BANK0 ] PTR void [1]
  3546 ;;		 -> ?_sprintf(2), 
  3547 ;;  prec            1   31[BANK0 ] char 
  3548 ;;  flag            1   30[BANK0 ] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  2   20[BANK0 ] int 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       6       0       0       0       0       0
  3559 ;;      Locals:         0       9       0       0       0       0       0
  3560 ;;      Temps:          0       4       0       0       0       0       0
  3561 ;;      Totals:         0      19       0       0       0       0       0
  3562 ;;Total ram usage:       19 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		___lwdiv
  3567 ;;		___lwmod
  3568 ;; This function is called by:
  3569 ;;		_SetupGPS
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function _sprintf
  3575  0537                     _sprintf:	
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3579                           ;sprintf@sp stored from wreg
  3580  0537  0020               	movlb	0	; select bank0
  3581  0538  00C1               	movwf	sprintf@sp
  3582                           
  3583                           ;doprnt.c: 494: va_list ap;
  3584                           ;doprnt.c: 499: signed char c;
  3585                           ;doprnt.c: 506: signed char prec;
  3586                           ;doprnt.c: 508: unsigned char flag;
  3587                           ;doprnt.c: 527: union {
  3588                           ;doprnt.c: 528: unsigned int _val;
  3589                           ;doprnt.c: 529: struct {
  3590                           ;doprnt.c: 530: const char * _cp;
  3591                           ;doprnt.c: 531: unsigned _len;
  3592                           ;doprnt.c: 532: } _str;
  3593                           ;doprnt.c: 533: } _val;
  3594                           ;doprnt.c: 542: *ap = __va_start();
  3595  0539  3036               	movlw	(?_sprintf+2)& (0+255)
  3596  053A  00BA               	movwf	??_sprintf
  3597  053B  083A               	movf	??_sprintf,w
  3598  053C  00C0               	movwf	sprintf@ap
  3599  053D                     l1917:	
  3600                           ;doprnt.c: 545: while(c = *f++) {
  3601                           
  3602  053D  0835               	movf	sprintf@f+1,w
  3603  053E  00BB               	movwf	??_sprintf+1
  3604  053F  0834               	movf	sprintf@f,w
  3605  0540  00BA               	movwf	??_sprintf
  3606  0541  0AB4               	incf	sprintf@f,f
  3607  0542  1903               	skipnz
  3608  0543  0AB5               	incf	sprintf@f+1,f
  3609  0544  083A               	movf	??_sprintf,w
  3610  0545  0084               	movwf	4
  3611  0546  083B               	movf	??_sprintf+1,w
  3612  0547  0085               	movwf	5
  3613  0548  0800               	movf	0,w	;code access
  3614  0549  00BC               	movwf	??_sprintf+2
  3615  054A  083C               	movf	??_sprintf+2,w
  3616  054B  00C6               	movwf	sprintf@c
  3617  054C  08C6               	movf	sprintf@c,f
  3618  054D  1903               	btfsc	3,2
  3619  054E  2E38               	goto	l1919
  3620                           
  3621                           ;doprnt.c: 547: if(c != '%')
  3622  054F  0846               	movf	sprintf@c,w
  3623  0550  3A25               	xorlw	37
  3624  0551  1903               	skipnz
  3625  0552  2D5F               	goto	l1857
  3626                           
  3627                           ;doprnt.c: 549: {
  3628                           ;doprnt.c: 550: ((*sp++ = (c)));
  3629  0553  0846               	movf	sprintf@c,w
  3630  0554  00BA               	movwf	??_sprintf
  3631  0555  0841               	movf	sprintf@sp,w
  3632  0556  0086               	movwf	6
  3633  0557  0187               	clrf	7
  3634  0558  083A               	movf	??_sprintf,w
  3635  0559  0081               	movwf	1
  3636  055A  3001               	movlw	1
  3637  055B  00BA               	movwf	??_sprintf
  3638  055C  083A               	movf	??_sprintf,w
  3639  055D  07C1               	addwf	sprintf@sp,f
  3640                           
  3641                           ;doprnt.c: 551: continue;
  3642  055E  2D3D               	goto	l1917
  3643  055F                     l1857:	
  3644                           
  3645                           ;doprnt.c: 552: }
  3646                           ;doprnt.c: 557: flag = 0;
  3647  055F  01BE               	clrf	sprintf@flag
  3648                           
  3649                           ;doprnt.c: 644: switch(c = *f++) {
  3650  0560  2D90               	goto	l1877
  3651  0561                     l1859:	
  3652                           ;doprnt.c: 737: case 's':
  3653                           
  3654                           ;doprnt.c: 707: case 'i':
  3655                           ;doprnt.c: 708: break;
  3656                           
  3657                           ;doprnt.c: 706: case 'd':
  3658                           
  3659                           ;doprnt.c: 647: goto alldone;
  3660                           
  3661                           ;doprnt.c: 646: case 0:
  3662                           
  3663                           
  3664                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  3665  0561  0840               	movf	sprintf@ap,w
  3666  0562  0086               	movwf	6
  3667  0563  0187               	clrf	7
  3668  0564  0801               	movf	1,w
  3669  0565  00C2               	movwf	sprintf@_val
  3670  0566  3000               	movlw	0
  3671  0567  00C3               	movwf	sprintf@_val+1
  3672  0568  3001               	movlw	1
  3673  0569  00BA               	movwf	??_sprintf
  3674  056A  083A               	movf	??_sprintf,w
  3675  056B  07C0               	addwf	sprintf@ap,f
  3676                           
  3677                           ;doprnt.c: 749: if(!_val._str._cp)
  3678  056C  0843               	movf	sprintf@_val+1,w
  3679  056D  0442               	iorwf	sprintf@_val,w
  3680  056E  1D03               	skipz
  3681  056F  2D74               	goto	l1873
  3682                           
  3683                           ;doprnt.c: 750: _val._str._cp = "(null)";
  3684  0570  302F               	movlw	low (STR_3| (0+32768))
  3685  0571  00C2               	movwf	sprintf@_val
  3686  0572  3088               	movlw	high (STR_3| (0+32768))
  3687  0573  00C3               	movwf	sprintf@_val+1
  3688  0574                     l1873:	
  3689                           ;doprnt.c: 786: while(*_val._str._cp)
  3690                           
  3691  0574  0842               	movf	sprintf@_val,w
  3692  0575  0084               	movwf	4
  3693  0576  0843               	movf	sprintf@_val+1,w
  3694  0577  0085               	movwf	5
  3695  0578  0800               	movf	0,w	;code access
  3696  0579  3800               	iorlw	0
  3697  057A  1903               	btfsc	3,2
  3698  057B  2D3D               	goto	l1917
  3699                           
  3700                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  3701  057C  0842               	movf	sprintf@_val,w
  3702  057D  0084               	movwf	4
  3703  057E  0843               	movf	sprintf@_val+1,w
  3704  057F  0085               	movwf	5
  3705  0580  0800               	movf	0,w	;code access
  3706  0581  00BA               	movwf	??_sprintf
  3707  0582  0841               	movf	sprintf@sp,w
  3708  0583  0086               	movwf	6
  3709  0584  0187               	clrf	7
  3710  0585  083A               	movf	??_sprintf,w
  3711  0586  0081               	movwf	1
  3712  0587  3001               	movlw	1
  3713  0588  07C2               	addwf	sprintf@_val,f
  3714  0589  3000               	movlw	0
  3715  058A  3DC3               	addwfc	sprintf@_val+1,f
  3716  058B  3001               	movlw	1
  3717  058C  00BA               	movwf	??_sprintf
  3718  058D  083A               	movf	??_sprintf,w
  3719  058E  07C1               	addwf	sprintf@sp,f
  3720  058F  2D74               	goto	l1873
  3721  0590                     l1877:	
  3722                           ;doprnt.c: 831: }
  3723                           
  3724                           ;doprnt.c: 822: continue;
  3725                           
  3726                           ;doprnt.c: 811: default:
  3727                           
  3728                           ;doprnt.c: 788: continue;
  3729                           
  3730  0590  0835               	movf	sprintf@f+1,w
  3731  0591  00BB               	movwf	??_sprintf+1
  3732  0592  0834               	movf	sprintf@f,w
  3733  0593  00BA               	movwf	??_sprintf
  3734  0594  0AB4               	incf	sprintf@f,f
  3735  0595  1903               	skipnz
  3736  0596  0AB5               	incf	sprintf@f+1,f
  3737  0597  083A               	movf	??_sprintf,w
  3738  0598  0084               	movwf	4
  3739  0599  083B               	movf	??_sprintf+1,w
  3740  059A  0085               	movwf	5
  3741  059B  0800               	movf	0,w	;code access
  3742  059C  00C6               	movwf	sprintf@c
  3743                           
  3744                           ; Switch size 1, requested type "space"
  3745                           ; Number of cases is 4, Range of values is 0 to 115
  3746                           ; switch strategies available:
  3747                           ; Name         Instructions Cycles
  3748                           ; simple_byte           13     7 (average)
  3749                           ; direct_byte          238     6 (fixed)
  3750                           ; jumptable            260     6 (fixed)
  3751                           ;	Chosen strategy is simple_byte
  3752  059D  3A00               	xorlw	0	; case 0
  3753  059E  1903               	skipnz
  3754  059F  2E38               	goto	l1919
  3755  05A0  3A64               	xorlw	100	; case 100
  3756  05A1  1903               	skipnz
  3757  05A2  2DAA               	goto	l1879
  3758  05A3  3A0D               	xorlw	13	; case 105
  3759  05A4  1903               	skipnz
  3760  05A5  2DAA               	goto	l1879
  3761  05A6  3A1A               	xorlw	26	; case 115
  3762  05A7  1903               	skipnz
  3763  05A8  2D61               	goto	l1859
  3764  05A9  2D3D               	goto	l1917
  3765  05AA                     l1879:	
  3766                           
  3767                           ;doprnt.c: 1262: {
  3768                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3769  05AA  0840               	movf	sprintf@ap,w
  3770  05AB  0086               	movwf	6
  3771  05AC  0187               	clrf	7
  3772  05AD  3F40               	moviw [0]fsr1
  3773  05AE  00C2               	movwf	sprintf@_val
  3774  05AF  3F41               	moviw [1]fsr1
  3775  05B0  00C3               	movwf	sprintf@_val+1
  3776  05B1  3002               	movlw	2
  3777  05B2  00BA               	movwf	??_sprintf
  3778  05B3  083A               	movf	??_sprintf,w
  3779  05B4  07C0               	addwf	sprintf@ap,f
  3780                           
  3781                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3782  05B5  1FC3               	btfss	sprintf@_val+1,7
  3783  05B6  2DC0               	goto	l1889
  3784                           
  3785                           ;doprnt.c: 1271: flag |= 0x03;
  3786  05B7  3003               	movlw	3
  3787  05B8  00BA               	movwf	??_sprintf
  3788  05B9  083A               	movf	??_sprintf,w
  3789  05BA  04BE               	iorwf	sprintf@flag,f
  3790                           
  3791                           ;doprnt.c: 1272: _val._val = -_val._val;
  3792  05BB  09C2               	comf	sprintf@_val,f
  3793  05BC  09C3               	comf	sprintf@_val+1,f
  3794  05BD  0AC2               	incf	sprintf@_val,f
  3795  05BE  1903               	skipnz
  3796  05BF  0AC3               	incf	sprintf@_val+1,f
  3797  05C0                     l1889:	
  3798                           
  3799                           ;doprnt.c: 1273: }
  3800                           ;doprnt.c: 1275: }
  3801                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3802  05C0  01C6               	clrf	sprintf@c
  3803  05C1  0AC6               	incf	sprintf@c,f
  3804  05C2  0846               	movf	sprintf@c,w
  3805  05C3  3A05               	xorlw	5
  3806  05C4  1903               	btfsc	3,2
  3807  05C5  2DE5               	goto	l1901
  3808  05C6                     l1893:	
  3809                           
  3810                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3811  05C6  0846               	movf	sprintf@c,w
  3812  05C7  00BA               	movwf	??_sprintf
  3813  05C8  01BB               	clrf	??_sprintf+1
  3814  05C9  35BA               	lslf	??_sprintf,f
  3815  05CA  0DBB               	rlf	??_sprintf+1,f
  3816  05CB  3000               	movlw	low (_dpowers| (0+32768))
  3817  05CC  073A               	addwf	??_sprintf,w
  3818  05CD  0084               	movwf	4
  3819  05CE  3088               	movlw	high (_dpowers| (0+32768))
  3820  05CF  3D3B               	addwfc	??_sprintf+1,w
  3821  05D0  0085               	movwf	5
  3822  05D1  3F00               	moviw [0]fsr0
  3823  05D2  00BC               	movwf	??_sprintf+2
  3824  05D3  3F01               	moviw [1]fsr0
  3825  05D4  00BD               	movwf	??_sprintf+3
  3826  05D5  083D               	movf	??_sprintf+3,w
  3827  05D6  0243               	subwf	sprintf@_val+1,w
  3828  05D7  1D03               	skipz
  3829  05D8  2DDB               	goto	u1425
  3830  05D9  083C               	movf	??_sprintf+2,w
  3831  05DA  0242               	subwf	sprintf@_val,w
  3832  05DB                     u1425:	
  3833  05DB  1C03               	btfss	3,0
  3834  05DC  2DE5               	goto	l1901
  3835                           
  3836                           ;doprnt.c: 1316: break;
  3837  05DD  3001               	movlw	1
  3838  05DE  00BA               	movwf	??_sprintf
  3839  05DF  083A               	movf	??_sprintf,w
  3840  05E0  07C6               	addwf	sprintf@c,f
  3841  05E1  0846               	movf	sprintf@c,w
  3842  05E2  3A05               	xorlw	5
  3843  05E3  1D03               	skipz
  3844  05E4  2DC6               	goto	l1893
  3845  05E5                     l1901:	
  3846                           
  3847                           ;doprnt.c: 1431: {
  3848                           ;doprnt.c: 1447: if(flag & 0x03)
  3849  05E5  083E               	movf	sprintf@flag,w
  3850  05E6  3903               	andlw	3
  3851  05E7  1903               	btfsc	3,2
  3852  05E8  2DF4               	goto	l1907
  3853                           
  3854                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3855  05E9  302D               	movlw	45
  3856  05EA  00BA               	movwf	??_sprintf
  3857  05EB  0841               	movf	sprintf@sp,w
  3858  05EC  0086               	movwf	6
  3859  05ED  0187               	clrf	7
  3860  05EE  083A               	movf	??_sprintf,w
  3861  05EF  0081               	movwf	1
  3862  05F0  3001               	movlw	1
  3863  05F1  00BA               	movwf	??_sprintf
  3864  05F2  083A               	movf	??_sprintf,w
  3865  05F3  07C1               	addwf	sprintf@sp,f
  3866  05F4                     l1907:	
  3867                           
  3868                           ;doprnt.c: 1478: }
  3869                           ;doprnt.c: 1481: prec = c;
  3870  05F4  0846               	movf	sprintf@c,w
  3871  05F5  00BA               	movwf	??_sprintf
  3872  05F6  083A               	movf	??_sprintf,w
  3873  05F7  00BF               	movwf	sprintf@prec
  3874  05F8                     l1915:	
  3875                           ;doprnt.c: 1483: while(prec--) {
  3876                           
  3877  05F8  30FF               	movlw	-1
  3878  05F9  00BA               	movwf	??_sprintf
  3879  05FA  083A               	movf	??_sprintf,w
  3880  05FB  07BF               	addwf	sprintf@prec,f
  3881  05FC  083F               	movf	sprintf@prec,w
  3882  05FD  3AFF               	xorlw	255
  3883  05FE  1903               	btfsc	3,2
  3884  05FF  2D3D               	goto	l1917
  3885                           
  3886                           ;doprnt.c: 1487: {
  3887                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3888  0600  300A               	movlw	10
  3889  0601  00AE               	movwf	___lwmod@divisor
  3890  0602  3000               	movlw	0
  3891  0603  00AF               	movwf	___lwmod@divisor+1
  3892  0604  083F               	movf	sprintf@prec,w
  3893  0605  00BA               	movwf	??_sprintf
  3894  0606  01BB               	clrf	??_sprintf+1
  3895  0607  35BA               	lslf	??_sprintf,f
  3896  0608  0DBB               	rlf	??_sprintf+1,f
  3897  0609  3000               	movlw	low (_dpowers| (0+32768))
  3898  060A  073A               	addwf	??_sprintf,w
  3899  060B  0084               	movwf	4
  3900  060C  3088               	movlw	high (_dpowers| (0+32768))
  3901  060D  3D3B               	addwfc	??_sprintf+1,w
  3902  060E  0085               	movwf	5
  3903  060F  3F00               	moviw [0]fsr0
  3904  0610  00A6               	movwf	___lwdiv@divisor
  3905  0611  3F01               	moviw [1]fsr0
  3906  0612  00A7               	movwf	___lwdiv@divisor+1
  3907  0613  0843               	movf	sprintf@_val+1,w
  3908  0614  01A9               	clrf	___lwdiv@dividend+1
  3909  0615  07A9               	addwf	___lwdiv@dividend+1,f
  3910  0616  0842               	movf	sprintf@_val,w
  3911  0617  01A8               	clrf	___lwdiv@dividend
  3912  0618  07A8               	addwf	___lwdiv@dividend,f
  3913  0619  318F  2727  3185   	fcall	___lwdiv
  3914  061C  0020               	movlb	0	; select bank0
  3915  061D  0827               	movf	?___lwdiv+1,w
  3916  061E  01B1               	clrf	___lwmod@dividend+1
  3917  061F  07B1               	addwf	___lwmod@dividend+1,f
  3918  0620  0826               	movf	?___lwdiv,w
  3919  0621  01B0               	clrf	___lwmod@dividend
  3920  0622  07B0               	addwf	___lwmod@dividend,f
  3921  0623  3187  27CF  3185   	fcall	___lwmod
  3922  0626  0020               	movlb	0	; select bank0
  3923  0627  082E               	movf	?___lwmod,w
  3924  0628  3E30               	addlw	48
  3925  0629  00BC               	movwf	??_sprintf+2
  3926  062A  083C               	movf	??_sprintf+2,w
  3927  062B  00C6               	movwf	sprintf@c
  3928                           
  3929                           ;doprnt.c: 1532: }
  3930                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3931  062C  0846               	movf	sprintf@c,w
  3932  062D  00BA               	movwf	??_sprintf
  3933  062E  0841               	movf	sprintf@sp,w
  3934  062F  0086               	movwf	6
  3935  0630  0187               	clrf	7
  3936  0631  083A               	movf	??_sprintf,w
  3937  0632  0081               	movwf	1
  3938  0633  3001               	movlw	1
  3939  0634  00BA               	movwf	??_sprintf
  3940  0635  083A               	movf	??_sprintf,w
  3941  0636  07C1               	addwf	sprintf@sp,f
  3942  0637  2DF8               	goto	l1915
  3943  0638                     l1919:	
  3944                           ;doprnt.c: 1534: }
  3945                           ;doprnt.c: 1542: }
  3946                           ;doprnt.c: 1544: alldone:
  3947                           
  3948                           
  3949                           ;doprnt.c: 1547: *sp = 0;
  3950  0638  0841               	movf	sprintf@sp,w
  3951  0639  0086               	movwf	6
  3952  063A  0187               	clrf	7
  3953  063B  0181               	clrf	1
  3954  063C  0008               	return
  3955  063D                     __end_of_sprintf:	
  3956                           ;doprnt.c: 1549: return 0;
  3957                           ;	Return value of _sprintf is never used
  3958                           
  3959                           
  3960                           	psect	text11
  3961  07CF                     __ptext11:	
  3962 ;; *************** function ___lwmod *****************
  3963 ;; Defined at:
  3964 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  divisor         2   14[BANK0 ] unsigned int 
  3967 ;;  dividend        2   16[BANK0 ] unsigned int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  counter         1   19[BANK0 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2   14[BANK0 ] unsigned int 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3979 ;;      Params:         0       4       0       0       0       0       0
  3980 ;;      Locals:         0       1       0       0       0       0       0
  3981 ;;      Temps:          0       1       0       0       0       0       0
  3982 ;;      Totals:         0       6       0       0       0       0       0
  3983 ;;Total ram usage:        6 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    2
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_sprintf
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function ___lwmod
  3995  07CF                     ___lwmod:	
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3999  07CF  0020               	movlb	0	; select bank0
  4000  07D0  082F               	movf	___lwmod@divisor+1,w
  4001  07D1  042E               	iorwf	___lwmod@divisor,w
  4002  07D2  1903               	skipnz
  4003  07D3  2FF7               	goto	l1785
  4004  07D4  01B3               	clrf	___lwmod@counter
  4005  07D5  0AB3               	incf	___lwmod@counter,f
  4006  07D6                     l1775:	
  4007  07D6  1BAF               	btfsc	___lwmod@divisor+1,7
  4008  07D7  2FE2               	goto	l1777
  4009  07D8  3001               	movlw	1
  4010  07D9                     u1235:	
  4011  07D9  35AE               	lslf	___lwmod@divisor,f
  4012  07DA  0DAF               	rlf	___lwmod@divisor+1,f
  4013  07DB  0B89               	decfsz	9,f
  4014  07DC  2FD9               	goto	u1235
  4015  07DD  3001               	movlw	1
  4016  07DE  00B2               	movwf	??___lwmod
  4017  07DF  0832               	movf	??___lwmod,w
  4018  07E0  07B3               	addwf	___lwmod@counter,f
  4019  07E1  2FD6               	goto	l1775
  4020  07E2                     l1777:	
  4021  07E2  082F               	movf	___lwmod@divisor+1,w
  4022  07E3  0231               	subwf	___lwmod@dividend+1,w
  4023  07E4  1D03               	skipz
  4024  07E5  2FE8               	goto	u1255
  4025  07E6  082E               	movf	___lwmod@divisor,w
  4026  07E7  0230               	subwf	___lwmod@dividend,w
  4027  07E8                     u1255:	
  4028  07E8  1C03               	skipc
  4029  07E9  2FEE               	goto	l1781
  4030  07EA  082E               	movf	___lwmod@divisor,w
  4031  07EB  02B0               	subwf	___lwmod@dividend,f
  4032  07EC  082F               	movf	___lwmod@divisor+1,w
  4033  07ED  3BB1               	subwfb	___lwmod@dividend+1,f
  4034  07EE                     l1781:	
  4035  07EE  3001               	movlw	1
  4036  07EF                     u1265:	
  4037  07EF  36AF               	lsrf	___lwmod@divisor+1,f
  4038  07F0  0CAE               	rrf	___lwmod@divisor,f
  4039  07F1  0B89               	decfsz	9,f
  4040  07F2  2FEF               	goto	u1265
  4041  07F3  3001               	movlw	1
  4042  07F4  02B3               	subwf	___lwmod@counter,f
  4043  07F5  1D03               	btfss	3,2
  4044  07F6  2FE2               	goto	l1777
  4045  07F7                     l1785:	
  4046  07F7  0831               	movf	___lwmod@dividend+1,w
  4047  07F8  01AF               	clrf	?___lwmod+1
  4048  07F9  07AF               	addwf	?___lwmod+1,f
  4049  07FA  0830               	movf	___lwmod@dividend,w
  4050  07FB  01AE               	clrf	?___lwmod
  4051  07FC  07AE               	addwf	?___lwmod,f
  4052  07FD  0008               	return
  4053  07FE                     __end_of___lwmod:	
  4054                           
  4055                           	psect	text12
  4056  0F27                     __ptext12:	
  4057 ;; *************** function ___lwdiv *****************
  4058 ;; Defined at:
  4059 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  divisor         2    6[BANK0 ] unsigned int 
  4062 ;;  dividend        2    8[BANK0 ] unsigned int 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  quotient        2   11[BANK0 ] unsigned int 
  4065 ;;  counter         1   13[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2    6[BANK0 ] unsigned int 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4075 ;;      Params:         0       4       0       0       0       0       0
  4076 ;;      Locals:         0       3       0       0       0       0       0
  4077 ;;      Temps:          0       1       0       0       0       0       0
  4078 ;;      Totals:         0       8       0       0       0       0       0
  4079 ;;Total ram usage:        8 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    2
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_DecodeGPS
  4086 ;;		_sprintf
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function ___lwdiv
  4092  0F27                     ___lwdiv:	
  4093                           
  4094                           ;incstack = 0
  4095                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4096  0F27  0020               	movlb	0	; select bank0
  4097  0F28  01AB               	clrf	___lwdiv@quotient
  4098  0F29  01AC               	clrf	___lwdiv@quotient+1
  4099  0F2A  0827               	movf	___lwdiv@divisor+1,w
  4100  0F2B  0426               	iorwf	___lwdiv@divisor,w
  4101  0F2C  1903               	skipnz
  4102  0F2D  2F57               	goto	l1763
  4103  0F2E  01AD               	clrf	___lwdiv@counter
  4104  0F2F  0AAD               	incf	___lwdiv@counter,f
  4105  0F30                     l1751:	
  4106  0F30  1BA7               	btfsc	___lwdiv@divisor+1,7
  4107  0F31  2F3C               	goto	l1753
  4108  0F32  3001               	movlw	1
  4109  0F33                     u1165:	
  4110  0F33  35A6               	lslf	___lwdiv@divisor,f
  4111  0F34  0DA7               	rlf	___lwdiv@divisor+1,f
  4112  0F35  0B89               	decfsz	9,f
  4113  0F36  2F33               	goto	u1165
  4114  0F37  3001               	movlw	1
  4115  0F38  00AA               	movwf	??___lwdiv
  4116  0F39  082A               	movf	??___lwdiv,w
  4117  0F3A  07AD               	addwf	___lwdiv@counter,f
  4118  0F3B  2F30               	goto	l1751
  4119  0F3C                     l1753:	
  4120  0F3C  3001               	movlw	1
  4121  0F3D                     u1185:	
  4122  0F3D  35AB               	lslf	___lwdiv@quotient,f
  4123  0F3E  0DAC               	rlf	___lwdiv@quotient+1,f
  4124  0F3F  0B89               	decfsz	9,f
  4125  0F40  2F3D               	goto	u1185
  4126  0F41  0827               	movf	___lwdiv@divisor+1,w
  4127  0F42  0229               	subwf	___lwdiv@dividend+1,w
  4128  0F43  1D03               	skipz
  4129  0F44  2F47               	goto	u1195
  4130  0F45  0826               	movf	___lwdiv@divisor,w
  4131  0F46  0228               	subwf	___lwdiv@dividend,w
  4132  0F47                     u1195:	
  4133  0F47  1C03               	skipc
  4134  0F48  2F4E               	goto	l1759
  4135  0F49  0826               	movf	___lwdiv@divisor,w
  4136  0F4A  02A8               	subwf	___lwdiv@dividend,f
  4137  0F4B  0827               	movf	___lwdiv@divisor+1,w
  4138  0F4C  3BA9               	subwfb	___lwdiv@dividend+1,f
  4139  0F4D  142B               	bsf	___lwdiv@quotient,0
  4140  0F4E                     l1759:	
  4141  0F4E  3001               	movlw	1
  4142  0F4F                     u1205:	
  4143  0F4F  36A7               	lsrf	___lwdiv@divisor+1,f
  4144  0F50  0CA6               	rrf	___lwdiv@divisor,f
  4145  0F51  0B89               	decfsz	9,f
  4146  0F52  2F4F               	goto	u1205
  4147  0F53  3001               	movlw	1
  4148  0F54  02AD               	subwf	___lwdiv@counter,f
  4149  0F55  1D03               	btfss	3,2
  4150  0F56  2F3C               	goto	l1753
  4151  0F57                     l1763:	
  4152  0F57  082C               	movf	___lwdiv@quotient+1,w
  4153  0F58  01A7               	clrf	?___lwdiv+1
  4154  0F59  07A7               	addwf	?___lwdiv+1,f
  4155  0F5A  082B               	movf	___lwdiv@quotient,w
  4156  0F5B  01A6               	clrf	?___lwdiv
  4157  0F5C  07A6               	addwf	?___lwdiv,f
  4158  0F5D  0008               	return
  4159  0F5E                     __end_of___lwdiv:	
  4160                           
  4161                           	psect	text13
  4162  03CA                     __ptext13:	
  4163 ;; *************** function _RecordMode *****************
  4164 ;; Defined at:
  4165 ;;		line 510 in file "launcher_functions.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  address         4   28[BANK0 ] long 
  4170 ;;  x               2   32[BANK0 ] int 
  4171 ;;  count           2   26[BANK0 ] int 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;		None               void
  4174 ;; Registers used:
  4175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4181 ;;      Params:         0       0       0       0       0       0       0
  4182 ;;      Locals:         0       8       0       0       0       0       0
  4183 ;;      Temps:          0       5       0       0       0       0       0
  4184 ;;      Totals:         0      13       0       0       0       0       0
  4185 ;;Total ram usage:       13 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    5
  4188 ;; This function calls:
  4189 ;;		_ReadBuffer
  4190 ;;		_WriteOverheadSPI
  4191 ;;		_WriteSPI
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _RecordMode
  4199  03CA                     _RecordMode:	
  4200                           
  4201                           ;launcher_functions.c: 512: long int address = 18;
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _RecordMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4205  03CA  3000               	movlw	0
  4206  03CB  0020               	movlb	0	; select bank0
  4207  03CC  00BF               	movwf	RecordMode@address+3
  4208  03CD  3000               	movlw	0
  4209  03CE  00BE               	movwf	RecordMode@address+2
  4210  03CF  3000               	movlw	0
  4211  03D0  00BD               	movwf	RecordMode@address+1
  4212  03D1  3012               	movlw	18
  4213  03D2  00BC               	movwf	RecordMode@address
  4214                           
  4215                           ;launcher_functions.c: 513: int count = 18;
  4216  03D3  3012               	movlw	18
  4217  03D4  00BA               	movwf	RecordMode@count
  4218  03D5  3000               	movlw	0
  4219  03D6  00BB               	movwf	RecordMode@count+1
  4220                           
  4221                           ;launcher_functions.c: 514: int x;
  4222                           ;launcher_functions.c: 516: (start) = 0;
  4223  03D7  01FB               	clrf	_start
  4224  03D8  01FC               	clrf	_start+1
  4225                           
  4226                           ;launcher_functions.c: 517: (end) = 0;
  4227  03D9  01F9               	clrf	_end
  4228  03DA  01FA               	clrf	_end+1
  4229                           
  4230                           ;launcher_functions.c: 520: WriteOverheadSPI(address);
  4231  03DB  083F               	movf	RecordMode@address+3,w
  4232  03DC  00AA               	movwf	WriteOverheadSPI@address+3
  4233  03DD  083E               	movf	RecordMode@address+2,w
  4234  03DE  00A9               	movwf	WriteOverheadSPI@address+2
  4235  03DF  083D               	movf	RecordMode@address+1,w
  4236  03E0  00A8               	movwf	WriteOverheadSPI@address+1
  4237  03E1  083C               	movf	RecordMode@address,w
  4238  03E2  00A7               	movwf	WriteOverheadSPI@address
  4239  03E3  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4240                           
  4241                           ;launcher_functions.c: 521: for(x=0;x<3;x++)
  4242  03E6  0020               	movlb	0	; select bank0
  4243  03E7  01C0               	clrf	RecordMode@x
  4244  03E8  01C1               	clrf	RecordMode@x+1
  4245  03E9  0841               	movf	RecordMode@x+1,w
  4246  03EA  3A80               	xorlw	128
  4247  03EB  00B5               	movwf	??_RecordMode
  4248  03EC  3080               	movlw	128
  4249  03ED  0235               	subwf	??_RecordMode,w
  4250  03EE  1D03               	skipz
  4251  03EF  2BF2               	goto	u1655
  4252  03F0  3003               	movlw	3
  4253  03F1  0240               	subwf	RecordMode@x,w
  4254  03F2                     u1655:	
  4255  03F2  1803               	btfsc	3,0
  4256  03F3  2C1A               	goto	l2227
  4257  03F4                     l2221:	
  4258                           
  4259                           ;launcher_functions.c: 522: {
  4260                           ;launcher_functions.c: 523: WriteSPI(validLongitude[x]);
  4261  03F4  0020               	movlb	0	; select bank0
  4262  03F5  3540               	lslf	RecordMode@x,w
  4263  03F6  3ED3               	addlw	_validLongitude& (0+255)
  4264  03F7  0086               	movwf	6
  4265  03F8  0187               	clrf	7
  4266  03F9  0801               	movf	1,w
  4267  03FA  318D  25F8  3183   	fcall	_WriteSPI
  4268                           
  4269                           ;launcher_functions.c: 524: WriteSPI(validLongitude[x]>>8);
  4270  03FD  0020               	movlb	0	; select bank0
  4271  03FE  3540               	lslf	RecordMode@x,w
  4272  03FF  3ED3               	addlw	_validLongitude& (0+255)
  4273  0400  0086               	movwf	6
  4274  0401  0187               	clrf	7
  4275  0402  3F40               	moviw [0]fsr1
  4276  0403  00B5               	movwf	??_RecordMode
  4277  0404  3F41               	moviw [1]fsr1
  4278  0405  00B6               	movwf	??_RecordMode+1
  4279  0406  0836               	movf	??_RecordMode+1,w
  4280  0407  318D  25F8  3183   	fcall	_WriteSPI
  4281  040A  3001               	movlw	1
  4282  040B  0020               	movlb	0	; select bank0
  4283  040C  07C0               	addwf	RecordMode@x,f
  4284  040D  3000               	movlw	0
  4285  040E  3DC1               	addwfc	RecordMode@x+1,f
  4286  040F  0841               	movf	RecordMode@x+1,w
  4287  0410  3A80               	xorlw	128
  4288  0411  00B5               	movwf	??_RecordMode
  4289  0412  3080               	movlw	128
  4290  0413  0235               	subwf	??_RecordMode,w
  4291  0414  1D03               	skipz
  4292  0415  2C18               	goto	u1665
  4293  0416  3003               	movlw	3
  4294  0417  0240               	subwf	RecordMode@x,w
  4295  0418                     u1665:	
  4296  0418  1C03               	skipc
  4297  0419  2BF4               	goto	l2221
  4298  041A                     l2227:	
  4299                           
  4300                           ;launcher_functions.c: 525: }
  4301                           ;launcher_functions.c: 526: WriteSPI(validNorthSouth);
  4302  041A  0021               	movlb	1	; select bank1
  4303  041B  0840               	movf	_validNorthSouth^(0+128),w
  4304  041C  318D  25F8  3183   	fcall	_WriteSPI
  4305                           
  4306                           ;launcher_functions.c: 527: for(x=0;x<3;x++)
  4307  041F  0020               	movlb	0	; select bank0
  4308  0420  01C0               	clrf	RecordMode@x
  4309  0421  01C1               	clrf	RecordMode@x+1
  4310  0422  0841               	movf	RecordMode@x+1,w
  4311  0423  3A80               	xorlw	128
  4312  0424  00B5               	movwf	??_RecordMode
  4313  0425  3080               	movlw	128
  4314  0426  0235               	subwf	??_RecordMode,w
  4315  0427  1D03               	skipz
  4316  0428  2C2B               	goto	u1675
  4317  0429  3003               	movlw	3
  4318  042A  0240               	subwf	RecordMode@x,w
  4319  042B                     u1675:	
  4320  042B  1803               	btfsc	3,0
  4321  042C  2C53               	goto	l2241
  4322  042D                     l2235:	
  4323                           
  4324                           ;launcher_functions.c: 528: {
  4325                           ;launcher_functions.c: 529: WriteSPI(validLatitude[x]);
  4326  042D  0020               	movlb	0	; select bank0
  4327  042E  3540               	lslf	RecordMode@x,w
  4328  042F  3ECD               	addlw	_validLatitude& (0+255)
  4329  0430  0086               	movwf	6
  4330  0431  0187               	clrf	7
  4331  0432  0801               	movf	1,w
  4332  0433  318D  25F8  3183   	fcall	_WriteSPI
  4333                           
  4334                           ;launcher_functions.c: 530: WriteSPI(validLatitude[x]>>8);
  4335  0436  0020               	movlb	0	; select bank0
  4336  0437  3540               	lslf	RecordMode@x,w
  4337  0438  3ECD               	addlw	_validLatitude& (0+255)
  4338  0439  0086               	movwf	6
  4339  043A  0187               	clrf	7
  4340  043B  3F40               	moviw [0]fsr1
  4341  043C  00B5               	movwf	??_RecordMode
  4342  043D  3F41               	moviw [1]fsr1
  4343  043E  00B6               	movwf	??_RecordMode+1
  4344  043F  0836               	movf	??_RecordMode+1,w
  4345  0440  318D  25F8  3183   	fcall	_WriteSPI
  4346  0443  3001               	movlw	1
  4347  0444  0020               	movlb	0	; select bank0
  4348  0445  07C0               	addwf	RecordMode@x,f
  4349  0446  3000               	movlw	0
  4350  0447  3DC1               	addwfc	RecordMode@x+1,f
  4351  0448  0841               	movf	RecordMode@x+1,w
  4352  0449  3A80               	xorlw	128
  4353  044A  00B5               	movwf	??_RecordMode
  4354  044B  3080               	movlw	128
  4355  044C  0235               	subwf	??_RecordMode,w
  4356  044D  1D03               	skipz
  4357  044E  2C51               	goto	u1685
  4358  044F  3003               	movlw	3
  4359  0450  0240               	subwf	RecordMode@x,w
  4360  0451                     u1685:	
  4361  0451  1C03               	skipc
  4362  0452  2C2D               	goto	l2235
  4363  0453                     l2241:	
  4364                           
  4365                           ;launcher_functions.c: 531: }
  4366                           ;launcher_functions.c: 532: WriteSPI(validEastWest);
  4367  0453  0021               	movlb	1	; select bank1
  4368  0454  083F               	movf	_validEastWest^(0+128),w
  4369  0455  318D  25F8  3183   	fcall	_WriteSPI
  4370                           
  4371                           ;launcher_functions.c: 534: TMR1IF = 0;
  4372  0458  0020               	movlb	0	; select bank0
  4373  0459  1011               	bcf	17,0	;volatile
  4374                           
  4375                           ;launcher_functions.c: 535: TMR1IE = 1;
  4376  045A  0021               	movlb	1	; select bank1
  4377  045B  1411               	bsf	17,0	;volatile
  4378                           
  4379                           ;launcher_functions.c: 536: TMR1ON = 1;
  4380  045C  0020               	movlb	0	; select bank0
  4381  045D  1418               	bsf	24,0	;volatile
  4382  045E                     l2265:	
  4383                           ;launcher_functions.c: 538: while((recordFlag) && (address < 131072))
  4384                           
  4385  045E  0021               	movlb	1	; select bank1
  4386  045F  085D               	movf	_recordFlag^(0+128),w
  4387  0460  1903               	btfsc	3,2
  4388  0461  2CAF               	goto	l404
  4389  0462  0020               	movlb	0	; select bank0
  4390  0463  083F               	movf	RecordMode@address+3,w
  4391  0464  3A80               	xorlw	128
  4392  0465  00B5               	movwf	??_RecordMode
  4393  0466  3000               	movlw	0
  4394  0467  3A80               	xorlw	128
  4395  0468  0235               	subwf	??_RecordMode,w
  4396  0469  1D03               	skipz
  4397  046A  2C75               	goto	u1723
  4398  046B  3002               	movlw	2
  4399  046C  023E               	subwf	RecordMode@address+2,w
  4400  046D  1D03               	skipz
  4401  046E  2C75               	goto	u1723
  4402  046F  3000               	movlw	0
  4403  0470  023D               	subwf	RecordMode@address+1,w
  4404  0471  1D03               	skipz
  4405  0472  2C75               	goto	u1723
  4406  0473  3000               	movlw	0
  4407  0474  023C               	subwf	RecordMode@address,w
  4408  0475                     u1723:	
  4409  0475  1803               	btfsc	3,0
  4410  0476  2CAE               	goto	u1720
  4411                           
  4412                           ;launcher_functions.c: 539: {
  4413                           ;launcher_functions.c: 540: if(count>=256)
  4414  0477  083B               	movf	RecordMode@count+1,w
  4415  0478  3A80               	xorlw	128
  4416  0479  00B5               	movwf	??_RecordMode
  4417  047A  3081               	movlw	129
  4418  047B  0235               	subwf	??_RecordMode,w
  4419  047C  1D03               	skipz
  4420  047D  2C80               	goto	u1695
  4421  047E  3000               	movlw	0
  4422  047F  023A               	subwf	RecordMode@count,w
  4423  0480                     u1695:	
  4424  0480  1C03               	skipc
  4425  0481  2C92               	goto	l2257
  4426                           
  4427                           ;launcher_functions.c: 541: {
  4428                           ;launcher_functions.c: 542: LATC2 = (0);
  4429  0482  0022               	movlb	2	; select bank2
  4430  0483  110E               	bcf	14,2	;volatile
  4431                           
  4432                           ;launcher_functions.c: 543: count = 0;
  4433  0484  0020               	movlb	0	; select bank0
  4434  0485  01BA               	clrf	RecordMode@count
  4435  0486  01BB               	clrf	RecordMode@count+1
  4436                           
  4437                           ;launcher_functions.c: 544: WriteOverheadSPI(address);
  4438  0487  083F               	movf	RecordMode@address+3,w
  4439  0488  00AA               	movwf	WriteOverheadSPI@address+3
  4440  0489  083E               	movf	RecordMode@address+2,w
  4441  048A  00A9               	movwf	WriteOverheadSPI@address+2
  4442  048B  083D               	movf	RecordMode@address+1,w
  4443  048C  00A8               	movwf	WriteOverheadSPI@address+1
  4444  048D  083C               	movf	RecordMode@address,w
  4445  048E  00A7               	movwf	WriteOverheadSPI@address
  4446  048F  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4447  0492                     l2257:	
  4448                           
  4449                           ;launcher_functions.c: 545: }
  4450                           ;launcher_functions.c: 546: if(!((((start))==((end)))?(1):(0)))
  4451  0492  087A               	movf	_end+1,w
  4452  0493  067C               	xorwf	_start+1,w
  4453  0494  1D03               	skipz
  4454  0495  2C98               	goto	u1705
  4455  0496  0879               	movf	_end,w
  4456  0497  067B               	xorwf	_start,w
  4457  0498                     u1705:	
  4458  0498  1903               	skipnz
  4459  0499  2C5E               	goto	l2265
  4460                           
  4461                           ;launcher_functions.c: 547: {
  4462                           ;launcher_functions.c: 548: WriteSPI(ReadBuffer());
  4463  049A  318E  2638  3183   	fcall	_ReadBuffer
  4464  049D  318D  25F8  3183   	fcall	_WriteSPI
  4465                           
  4466                           ;launcher_functions.c: 549: address++;
  4467  04A0  3001               	movlw	1
  4468  04A1  0020               	movlb	0	; select bank0
  4469  04A2  07BC               	addwf	RecordMode@address,f
  4470  04A3  3000               	movlw	0
  4471  04A4  3DBD               	addwfc	RecordMode@address+1,f
  4472  04A5  3000               	movlw	0
  4473  04A6  3DBE               	addwfc	RecordMode@address+2,f
  4474  04A7  3000               	movlw	0
  4475  04A8  3DBF               	addwfc	RecordMode@address+3,f
  4476                           
  4477                           ;launcher_functions.c: 550: count++;
  4478  04A9  3001               	movlw	1
  4479  04AA  07BA               	addwf	RecordMode@count,f
  4480  04AB  3000               	movlw	0
  4481  04AC  3DBB               	addwfc	RecordMode@count+1,f
  4482  04AD  2C5E               	goto	l2265
  4483  04AE                     u1720:	
  4484  04AE  0021               	movlb	1	; select bank1
  4485  04AF                     l404:	
  4486                           
  4487                           ;launcher_functions.c: 551: }
  4488                           ;launcher_functions.c: 552: }
  4489                           ;launcher_functions.c: 553: LATC2 = (0);
  4490  04AF  0022               	movlb	2	; select bank2
  4491  04B0  110E               	bcf	14,2	;volatile
  4492                           
  4493                           ;launcher_functions.c: 554: TMR1IE = 0;
  4494  04B1  0021               	movlb	1	; select bank1
  4495  04B2  1011               	bcf	17,0	;volatile
  4496                           
  4497                           ;launcher_functions.c: 555: TMR1ON = 0;
  4498  04B3  0020               	movlb	0	; select bank0
  4499  04B4  1018               	bcf	24,0	;volatile
  4500                           
  4501                           ;launcher_functions.c: 556: _delay((unsigned long)((5)*(16000000/4000.0)));
  4502  04B5  301A               	movlw	26
  4503  04B6  00B6               	movwf	??_RecordMode+1
  4504  04B7  30F8               	movlw	248
  4505  04B8  00B5               	movwf	??_RecordMode
  4506  04B9                     u2137:	
  4507  04B9  0BB5               	decfsz	??_RecordMode,f
  4508  04BA  2CB9               	goto	u2137
  4509  04BB  0BB6               	decfsz	??_RecordMode+1,f
  4510  04BC  2CB9               	goto	u2137
  4511  04BD  0000               	nop
  4512                           
  4513                           ;launcher_functions.c: 557: WriteOverheadSPI(0x0000000E);
  4514  04BE  3000               	movlw	0
  4515  04BF  0020               	movlb	0	; select bank0
  4516  04C0  00AA               	movwf	WriteOverheadSPI@address+3
  4517  04C1  3000               	movlw	0
  4518  04C2  00A9               	movwf	WriteOverheadSPI@address+2
  4519  04C3  3000               	movlw	0
  4520  04C4  00A8               	movwf	WriteOverheadSPI@address+1
  4521  04C5  300E               	movlw	14
  4522  04C6  00A7               	movwf	WriteOverheadSPI@address
  4523  04C7  318F  27A0  3183   	fcall	_WriteOverheadSPI
  4524                           
  4525                           ;launcher_functions.c: 558: if(address >= 131072)
  4526  04CA  0020               	movlb	0	; select bank0
  4527  04CB  083F               	movf	RecordMode@address+3,w
  4528  04CC  3A80               	xorlw	128
  4529  04CD  00B5               	movwf	??_RecordMode
  4530  04CE  3000               	movlw	0
  4531  04CF  3A80               	xorlw	128
  4532  04D0  0235               	subwf	??_RecordMode,w
  4533  04D1  1D03               	skipz
  4534  04D2  2CDD               	goto	u1733
  4535  04D3  3002               	movlw	2
  4536  04D4  023E               	subwf	RecordMode@address+2,w
  4537  04D5  1D03               	skipz
  4538  04D6  2CDD               	goto	u1733
  4539  04D7  3000               	movlw	0
  4540  04D8  023D               	subwf	RecordMode@address+1,w
  4541  04D9  1D03               	skipz
  4542  04DA  2CDD               	goto	u1733
  4543  04DB  3000               	movlw	0
  4544  04DC  023C               	subwf	RecordMode@address,w
  4545  04DD                     u1733:	
  4546  04DD  1C03               	skipc
  4547  04DE  2CED               	goto	l2277
  4548                           
  4549                           ;launcher_functions.c: 559: {
  4550                           ;launcher_functions.c: 560: WriteSPI(131072 - 1);
  4551  04DF  30FF               	movlw	255
  4552  04E0  318D  25F8  3183   	fcall	_WriteSPI
  4553                           
  4554                           ;launcher_functions.c: 561: WriteSPI((131072 - 1)>>8);
  4555  04E3  30FF               	movlw	255
  4556  04E4  318D  25F8  3183   	fcall	_WriteSPI
  4557                           
  4558                           ;launcher_functions.c: 562: WriteSPI((131072 - 1)>>16);
  4559  04E7  3001               	movlw	1
  4560  04E8  318D  25F8  3183   	fcall	_WriteSPI
  4561                           
  4562                           ;launcher_functions.c: 563: WriteSPI((131072 - 1)>>24);
  4563  04EB  3000               	movlw	0
  4564  04EC  2D2E               	goto	L3
  4565  04ED                     l2277:	
  4566                           ;launcher_functions.c: 564: }
  4567                           
  4568                           
  4569                           ;launcher_functions.c: 565: else
  4570                           ;launcher_functions.c: 566: {
  4571                           ;launcher_functions.c: 567: WriteSPI(address);
  4572  04ED  0020               	movlb	0	; select bank0
  4573  04EE  083C               	movf	RecordMode@address,w
  4574  04EF  318D  25F8  3183   	fcall	_WriteSPI
  4575                           
  4576                           ;launcher_functions.c: 568: WriteSPI(address>>8);
  4577  04F2  0020               	movlb	0	; select bank0
  4578  04F3  083C               	movf	RecordMode@address,w
  4579  04F4  00B5               	movwf	??_RecordMode
  4580  04F5  083D               	movf	RecordMode@address+1,w
  4581  04F6  00B6               	movwf	??_RecordMode+1
  4582  04F7  083E               	movf	RecordMode@address+2,w
  4583  04F8  00B7               	movwf	??_RecordMode+2
  4584  04F9  083F               	movf	RecordMode@address+3,w
  4585  04FA  00B8               	movwf	??_RecordMode+3
  4586  04FB  3008               	movlw	8
  4587  04FC  00B9               	movwf	??_RecordMode+4
  4588  04FD                     u1745:	
  4589  04FD  37B8               	asrf	??_RecordMode+3,f
  4590  04FE  0CB7               	rrf	??_RecordMode+2,f
  4591  04FF  0CB6               	rrf	??_RecordMode+1,f
  4592  0500  0CB5               	rrf	??_RecordMode,f
  4593  0501  0BB9               	decfsz	??_RecordMode+4,f
  4594  0502  2CFD               	goto	u1745
  4595  0503  0835               	movf	??_RecordMode,w
  4596  0504  318D  25F8  3183   	fcall	_WriteSPI
  4597                           
  4598                           ;launcher_functions.c: 569: WriteSPI(address>>16);
  4599  0507  0020               	movlb	0	; select bank0
  4600  0508  083C               	movf	RecordMode@address,w
  4601  0509  00B5               	movwf	??_RecordMode
  4602  050A  083D               	movf	RecordMode@address+1,w
  4603  050B  00B6               	movwf	??_RecordMode+1
  4604  050C  083E               	movf	RecordMode@address+2,w
  4605  050D  00B7               	movwf	??_RecordMode+2
  4606  050E  083F               	movf	RecordMode@address+3,w
  4607  050F  00B8               	movwf	??_RecordMode+3
  4608  0510  3010               	movlw	16
  4609  0511  00B9               	movwf	??_RecordMode+4
  4610  0512                     u1755:	
  4611  0512  37B8               	asrf	??_RecordMode+3,f
  4612  0513  0CB7               	rrf	??_RecordMode+2,f
  4613  0514  0CB6               	rrf	??_RecordMode+1,f
  4614  0515  0CB5               	rrf	??_RecordMode,f
  4615  0516  0BB9               	decfsz	??_RecordMode+4,f
  4616  0517  2D12               	goto	u1755
  4617  0518  0835               	movf	??_RecordMode,w
  4618  0519  318D  25F8  3183   	fcall	_WriteSPI
  4619                           
  4620                           ;launcher_functions.c: 570: WriteSPI(address>>24);
  4621  051C  0020               	movlb	0	; select bank0
  4622  051D  083C               	movf	RecordMode@address,w
  4623  051E  00B5               	movwf	??_RecordMode
  4624  051F  083D               	movf	RecordMode@address+1,w
  4625  0520  00B6               	movwf	??_RecordMode+1
  4626  0521  083E               	movf	RecordMode@address+2,w
  4627  0522  00B7               	movwf	??_RecordMode+2
  4628  0523  083F               	movf	RecordMode@address+3,w
  4629  0524  00B8               	movwf	??_RecordMode+3
  4630  0525  3018               	movlw	24
  4631  0526  00B9               	movwf	??_RecordMode+4
  4632  0527                     u1765:	
  4633  0527  37B8               	asrf	??_RecordMode+3,f
  4634  0528  0CB7               	rrf	??_RecordMode+2,f
  4635  0529  0CB6               	rrf	??_RecordMode+1,f
  4636  052A  0CB5               	rrf	??_RecordMode,f
  4637  052B  0BB9               	decfsz	??_RecordMode+4,f
  4638  052C  2D27               	goto	u1765
  4639  052D  0835               	movf	??_RecordMode,w
  4640  052E                     L3:	
  4641  052E  318D  25F8         	fcall	_WriteSPI
  4642                           
  4643                           ;launcher_functions.c: 571: }
  4644                           ;launcher_functions.c: 572: LATC2 = (0);
  4645  0530  0022               	movlb	2	; select bank2
  4646  0531  110E               	bcf	14,2	;volatile
  4647                           
  4648                           ;launcher_functions.c: 573: (start) = 0;
  4649  0532  01FB               	clrf	_start
  4650  0533  01FC               	clrf	_start+1
  4651                           
  4652                           ;launcher_functions.c: 574: (end) = 0;
  4653  0534  01F9               	clrf	_end
  4654  0535  01FA               	clrf	_end+1
  4655  0536  0008               	return
  4656  0537                     __end_of_RecordMode:	
  4657                           
  4658                           	psect	text14
  4659  0FA0                     __ptext14:	
  4660 ;; *************** function _WriteOverheadSPI *****************
  4661 ;; Defined at:
  4662 ;;		line 167 in file "launcher_functions.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  address         4    7[BANK0 ] long 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  address_byte    3   17[BANK0 ] unsigned char [3]
  4667 ;;  StatusReg       1   20[BANK0 ] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;		None               void
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0, pclath, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4677 ;;      Params:         0       4       0       0       0       0       0
  4678 ;;      Locals:         0       4       0       0       0       0       0
  4679 ;;      Temps:          0       6       0       0       0       0       0
  4680 ;;      Totals:         0      14       0       0       0       0       0
  4681 ;;Total ram usage:       14 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    4
  4684 ;; This function calls:
  4685 ;;		_ReadStatusSPI
  4686 ;;		_WriteSPI
  4687 ;; This function is called by:
  4688 ;;		_RecordMode
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _WriteOverheadSPI
  4694  0FA0                     _WriteOverheadSPI:	
  4695                           
  4696                           ;launcher_functions.c: 169: unsigned char address_bytes[3];
  4697                           ;launcher_functions.c: 170: unsigned char StatusReg;
  4698                           ;launcher_functions.c: 172: address_bytes[0]=(unsigned char)(address>>8);
  4699                           
  4700                           ;incstack = 0
  4701                           ; Regs used in _WriteOverheadSPI: [wreg+status,2+status,0+pclath+cstack]
  4702  0FA0  0020               	movlb	0	; select bank0
  4703  0FA1  0827               	movf	WriteOverheadSPI@address,w
  4704  0FA2  00AB               	movwf	??_WriteOverheadSPI
  4705  0FA3  0828               	movf	WriteOverheadSPI@address+1,w
  4706  0FA4  00AC               	movwf	??_WriteOverheadSPI+1
  4707  0FA5  0829               	movf	WriteOverheadSPI@address+2,w
  4708  0FA6  00AD               	movwf	??_WriteOverheadSPI+2
  4709  0FA7  082A               	movf	WriteOverheadSPI@address+3,w
  4710  0FA8  00AE               	movwf	??_WriteOverheadSPI+3
  4711  0FA9  3008               	movlw	8
  4712  0FAA  00AF               	movwf	??_WriteOverheadSPI+4
  4713  0FAB                     u1285:	
  4714  0FAB  37AE               	asrf	??_WriteOverheadSPI+3,f
  4715  0FAC  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4716  0FAD  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4717  0FAE  0CAB               	rrf	??_WriteOverheadSPI,f
  4718  0FAF  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4719  0FB0  2FAB               	goto	u1285
  4720  0FB1  082B               	movf	??_WriteOverheadSPI,w
  4721  0FB2  00B0               	movwf	??_WriteOverheadSPI+5
  4722  0FB3  0830               	movf	??_WriteOverheadSPI+5,w
  4723  0FB4  00B1               	movwf	WriteOverheadSPI@address_bytes
  4724                           
  4725                           ;launcher_functions.c: 173: address_bytes[1]=(unsigned char)(address>>4);
  4726  0FB5  0827               	movf	WriteOverheadSPI@address,w
  4727  0FB6  00AB               	movwf	??_WriteOverheadSPI
  4728  0FB7  0828               	movf	WriteOverheadSPI@address+1,w
  4729  0FB8  00AC               	movwf	??_WriteOverheadSPI+1
  4730  0FB9  0829               	movf	WriteOverheadSPI@address+2,w
  4731  0FBA  00AD               	movwf	??_WriteOverheadSPI+2
  4732  0FBB  082A               	movf	WriteOverheadSPI@address+3,w
  4733  0FBC  00AE               	movwf	??_WriteOverheadSPI+3
  4734  0FBD  3004               	movlw	4
  4735  0FBE  00AF               	movwf	??_WriteOverheadSPI+4
  4736  0FBF                     u1295:	
  4737  0FBF  37AE               	asrf	??_WriteOverheadSPI+3,f
  4738  0FC0  0CAD               	rrf	??_WriteOverheadSPI+2,f
  4739  0FC1  0CAC               	rrf	??_WriteOverheadSPI+1,f
  4740  0FC2  0CAB               	rrf	??_WriteOverheadSPI,f
  4741  0FC3  0BAF               	decfsz	??_WriteOverheadSPI+4,f
  4742  0FC4  2FBF               	goto	u1295
  4743  0FC5  082B               	movf	??_WriteOverheadSPI,w
  4744  0FC6  00B0               	movwf	??_WriteOverheadSPI+5
  4745  0FC7  0830               	movf	??_WriteOverheadSPI+5,w
  4746  0FC8  00B2               	movwf	WriteOverheadSPI@address_bytes+1
  4747                           
  4748                           ;launcher_functions.c: 174: address_bytes[2]=(unsigned char)(address);
  4749  0FC9  0827               	movf	WriteOverheadSPI@address,w
  4750  0FCA  00AB               	movwf	??_WriteOverheadSPI
  4751  0FCB  082B               	movf	??_WriteOverheadSPI,w
  4752  0FCC  00B3               	movwf	WriteOverheadSPI@address_bytes+2
  4753  0FCD                     l1793:	
  4754                           ;launcher_functions.c: 176: do
  4755                           
  4756                           
  4757                           ;launcher_functions.c: 177: {
  4758                           ;launcher_functions.c: 178: StatusReg = (ReadStatusSPI() & 0x01);
  4759  0FCD  318D  25C3  318F   	fcall	_ReadStatusSPI
  4760  0FD0  3901               	andlw	1
  4761  0FD1  0020               	movlb	0	; select bank0
  4762  0FD2  00AB               	movwf	??_WriteOverheadSPI
  4763  0FD3  082B               	movf	??_WriteOverheadSPI,w
  4764  0FD4  00B4               	movwf	WriteOverheadSPI@StatusReg
  4765                           
  4766                           ;launcher_functions.c: 179: } while (StatusReg);
  4767  0FD5  08B4               	movf	WriteOverheadSPI@StatusReg,f
  4768  0FD6  1D03               	skipz
  4769  0FD7  2FCD               	goto	l1793
  4770                           
  4771                           ;launcher_functions.c: 182: LATC2 = (1);
  4772  0FD8  0022               	movlb	2	; select bank2
  4773  0FD9  150E               	bsf	14,2	;volatile
  4774                           
  4775                           ;launcher_functions.c: 183: WriteSPI((0x06));
  4776  0FDA  3006               	movlw	6
  4777  0FDB  318D  25F8  318F   	fcall	_WriteSPI
  4778                           
  4779                           ;launcher_functions.c: 184: LATC2 = (0);
  4780  0FDE  0022               	movlb	2	; select bank2
  4781  0FDF  110E               	bcf	14,2	;volatile
  4782  0FE0                     l284:	
  4783                           ;launcher_functions.c: 186: do
  4784                           
  4785                           
  4786                           ;launcher_functions.c: 187: {
  4787                           ;launcher_functions.c: 188: StatusReg = (ReadStatusSPI() & 0x02);
  4788  0FE0  318D  25C3  318F   	fcall	_ReadStatusSPI
  4789  0FE3  3902               	andlw	2
  4790  0FE4  0020               	movlb	0	; select bank0
  4791  0FE5  00AB               	movwf	??_WriteOverheadSPI
  4792  0FE6  082B               	movf	??_WriteOverheadSPI,w
  4793  0FE7  00B4               	movwf	WriteOverheadSPI@StatusReg
  4794                           
  4795                           ;launcher_functions.c: 189: } while (!StatusReg);
  4796  0FE8  0834               	movf	WriteOverheadSPI@StatusReg,w
  4797  0FE9  1903               	btfsc	3,2
  4798  0FEA  2FE0               	goto	l284
  4799                           
  4800                           ;launcher_functions.c: 193: LATC2=(1);
  4801  0FEB  0022               	movlb	2	; select bank2
  4802  0FEC  150E               	bsf	14,2	;volatile
  4803                           
  4804                           ;launcher_functions.c: 194: WriteSPI((0x02));
  4805  0FED  3002               	movlw	2
  4806  0FEE  318D  25F8  318F   	fcall	_WriteSPI
  4807                           
  4808                           ;launcher_functions.c: 195: WriteSPI(address_bytes[0]);
  4809  0FF1  0020               	movlb	0	; select bank0
  4810  0FF2  0831               	movf	WriteOverheadSPI@address_bytes,w
  4811  0FF3  318D  25F8  318F   	fcall	_WriteSPI
  4812                           
  4813                           ;launcher_functions.c: 196: WriteSPI(address_bytes[1]);
  4814  0FF6  0020               	movlb	0	; select bank0
  4815  0FF7  0832               	movf	WriteOverheadSPI@address_bytes+1,w
  4816  0FF8  318D  25F8  318F   	fcall	_WriteSPI
  4817                           
  4818                           ;launcher_functions.c: 197: WriteSPI(address_bytes[2]);
  4819  0FFB  0020               	movlb	0	; select bank0
  4820  0FFC  0833               	movf	WriteOverheadSPI@address_bytes+2,w
  4821  0FFD  318D  25F8         	fcall	_WriteSPI
  4822  0FFF  0008               	return
  4823  1000                     __end_of_WriteOverheadSPI:	
  4824                           ;launcher_functions.c: 199: return;
  4825                           
  4826                           
  4827                           	psect	text15
  4828  0DC3                     __ptext15:	
  4829 ;; *************** function _ReadStatusSPI *****************
  4830 ;; Defined at:
  4831 ;;		line 155 in file "launcher_functions.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  dataRead        1    6[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      unsigned char 
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4845 ;;      Params:         0       0       0       0       0       0       0
  4846 ;;      Locals:         0       1       0       0       0       0       0
  4847 ;;      Temps:          0       1       0       0       0       0       0
  4848 ;;      Totals:         0       2       0       0       0       0       0
  4849 ;;Total ram usage:        2 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    3
  4852 ;; This function calls:
  4853 ;;		_ReadSPI
  4854 ;;		_WriteSPI
  4855 ;; This function is called by:
  4856 ;;		_WriteOverheadSPI
  4857 ;;		_ReadOverheadSPI
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _ReadStatusSPI
  4863  0DC3                     _ReadStatusSPI:	
  4864                           
  4865                           ;launcher_functions.c: 157: unsigned char dataRead;
  4866                           ;launcher_functions.c: 159: LATC2=(1);
  4867                           
  4868                           ;incstack = 0
  4869                           ; Regs used in _ReadStatusSPI: [wreg+status,2+status,0+pclath+cstack]
  4870  0DC3  0022               	movlb	2	; select bank2
  4871  0DC4  150E               	bsf	14,2	;volatile
  4872                           
  4873                           ;launcher_functions.c: 160: WriteSPI((0x05));
  4874  0DC5  3005               	movlw	5
  4875  0DC6  318D  25F8  318D   	fcall	_WriteSPI
  4876                           
  4877                           ;launcher_functions.c: 161: dataRead = ReadSPI();
  4878  0DC9  318D  2599         	fcall	_ReadSPI
  4879  0DCB  0020               	movlb	0	; select bank0
  4880  0DCC  00A5               	movwf	??_ReadStatusSPI
  4881  0DCD  0825               	movf	??_ReadStatusSPI,w
  4882  0DCE  00A6               	movwf	ReadStatusSPI@dataRead
  4883                           
  4884                           ;launcher_functions.c: 162: LATC2=(0);
  4885  0DCF  0022               	movlb	2	; select bank2
  4886  0DD0  110E               	bcf	14,2	;volatile
  4887                           
  4888                           ;launcher_functions.c: 164: return(dataRead);
  4889  0DD1  0020               	movlb	0	; select bank0
  4890  0DD2  0826               	movf	ReadStatusSPI@dataRead,w
  4891  0DD3  0008               	return
  4892  0DD4                     __end_of_ReadStatusSPI:	
  4893                           
  4894                           	psect	text16
  4895  0DF8                     __ptext16:	
  4896 ;; *************** function _WriteSPI *****************
  4897 ;; Defined at:
  4898 ;;		line 135 in file "launcher_functions.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  databyte        1    wreg     unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  databyte        1    4[BANK0 ] unsigned char 
  4903 ;;  temp            2    2[BANK0 ] unsigned int 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;		None               void
  4906 ;; Registers used:
  4907 ;;		wreg
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4913 ;;      Params:         0       0       0       0       0       0       0
  4914 ;;      Locals:         0       3       0       0       0       0       0
  4915 ;;      Temps:          0       2       0       0       0       0       0
  4916 ;;      Totals:         0       5       0       0       0       0       0
  4917 ;;Total ram usage:        5 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    2
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_ReadStatusSPI
  4924 ;;		_WriteOverheadSPI
  4925 ;;		_RecordMode
  4926 ;;		_ReadOverheadSPI
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _WriteSPI
  4932  0DF8                     _WriteSPI:	
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _WriteSPI: [wreg]
  4936                           ;WriteSPI@databyte stored from wreg
  4937  0DF8  0020               	movlb	0	; select bank0
  4938  0DF9  00A4               	movwf	WriteSPI@databyte
  4939                           
  4940                           ;launcher_functions.c: 137: unsigned int temp;
  4941                           ;launcher_functions.c: 138: temp = SSPBUF;
  4942  0DFA  0024               	movlb	4	; select bank4
  4943  0DFB  0811               	movf	17,w	;volatile
  4944  0DFC  0020               	movlb	0	; select bank0
  4945  0DFD  00A0               	movwf	??_WriteSPI
  4946  0DFE  01A1               	clrf	??_WriteSPI+1
  4947  0DFF  0820               	movf	??_WriteSPI,w
  4948  0E00  00A2               	movwf	WriteSPI@temp
  4949  0E01  0821               	movf	??_WriteSPI+1,w
  4950  0E02  00A3               	movwf	WriteSPI@temp+1
  4951                           
  4952                           ;launcher_functions.c: 139: PIR1bits.SSP1IF=0;
  4953  0E03  1191               	bcf	17,3	;volatile
  4954                           
  4955                           ;launcher_functions.c: 140: SSPBUF = databyte;
  4956  0E04  0824               	movf	WriteSPI@databyte,w
  4957  0E05  0024               	movlb	4	; select bank4
  4958  0E06  0091               	movwf	17	;volatile
  4959  0E07                     l267:	
  4960                           ;launcher_functions.c: 141: while(!PIR1bits.SSP1IF);
  4961                           
  4962  0E07  0020               	movlb	0	; select bank0
  4963  0E08  1991               	btfsc	17,3	;volatile
  4964  0E09  0008               	return
  4965  0E0A  2E07               	goto	l267
  4966  0E0B                     __end_of_WriteSPI:	
  4967                           
  4968                           	psect	text17
  4969  0D99                     __ptext17:	
  4970 ;; *************** function _ReadSPI *****************
  4971 ;; Defined at:
  4972 ;;		line 144 in file "launcher_functions.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  dataByte        1    1[BANK0 ] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      unsigned char 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4986 ;;      Params:         0       0       0       0       0       0       0
  4987 ;;      Locals:         0       1       0       0       0       0       0
  4988 ;;      Temps:          0       1       0       0       0       0       0
  4989 ;;      Totals:         0       2       0       0       0       0       0
  4990 ;;Total ram usage:        2 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    2
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_ReadStatusSPI
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           
  5001                           ;psect for function _ReadSPI
  5002  0D99                     _ReadSPI:	
  5003                           
  5004                           ;launcher_functions.c: 146: unsigned char dataByte;
  5005                           ;launcher_functions.c: 148: SSPBUF = 0x00;
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in _ReadSPI: [wreg+status,2]
  5009  0D99  0024               	movlb	4	; select bank4
  5010  0D9A  0191               	clrf	17	;volatile
  5011  0D9B                     l273:	
  5012                           ;launcher_functions.c: 149: while(!SSPSTATbits.BF);
  5013                           
  5014  0D9B  1C14               	btfss	20,0	;volatile
  5015  0D9C  2D9B               	goto	l273
  5016                           
  5017                           ;launcher_functions.c: 150: dataByte = SSPBUF;
  5018  0D9D  0811               	movf	17,w	;volatile
  5019  0D9E  0020               	movlb	0	; select bank0
  5020  0D9F  00A0               	movwf	??_ReadSPI
  5021  0DA0  0820               	movf	??_ReadSPI,w
  5022  0DA1  00A1               	movwf	ReadSPI@dataByte
  5023                           
  5024                           ;launcher_functions.c: 151: PIR1bits.SSP1IF=0;
  5025  0DA2  1191               	bcf	17,3	;volatile
  5026                           
  5027                           ;launcher_functions.c: 152: return (dataByte);
  5028  0DA3  0821               	movf	ReadSPI@dataByte,w
  5029  0DA4  0008               	return
  5030  0DA5                     __end_of_ReadSPI:	
  5031                           
  5032                           	psect	text18
  5033  0E38                     __ptext18:	
  5034 ;; *************** function _ReadBuffer *****************
  5035 ;; Defined at:
  5036 ;;		line 214 in file "launcher_functions.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  read_data       1    1[BANK0 ] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      unsigned char 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5050 ;;      Params:         0       0       0       0       0       0       0
  5051 ;;      Locals:         0       1       0       0       0       0       0
  5052 ;;      Temps:          0       1       0       0       0       0       0
  5053 ;;      Totals:         0       2       0       0       0       0       0
  5054 ;;Total ram usage:        2 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    2
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_RecordMode
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _ReadBuffer
  5066  0E38                     _ReadBuffer:	
  5067                           
  5068                           ;launcher_functions.c: 216: unsigned char read_data;
  5069                           ;launcher_functions.c: 218: read_data = buffer[start];
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in _ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5073  0E38  087B               	movf	_start,w
  5074  0E39  3EA0               	addlw	_buffer& (0+255)
  5075  0E3A  0086               	movwf	6
  5076  0E3B  3001               	movlw	1	; select bank3/4
  5077  0E3C  0087               	movwf	7
  5078  0E3D  0801               	movf	1,w
  5079  0E3E  0020               	movlb	0	; select bank0
  5080  0E3F  00A0               	movwf	??_ReadBuffer
  5081  0E40  0820               	movf	??_ReadBuffer,w
  5082  0E41  00A1               	movwf	ReadBuffer@read_data
  5083                           
  5084                           ;launcher_functions.c: 219: if (start == 51)
  5085  0E42  3033               	movlw	51
  5086  0E43  067B               	xorwf	_start,w
  5087  0E44  047C               	iorwf	_start+1,w
  5088  0E45  1D03               	skipz
  5089  0E46  2E4A               	goto	l1813
  5090                           
  5091                           ;launcher_functions.c: 220: start = 0;
  5092  0E47  01FB               	clrf	_start
  5093  0E48  01FC               	clrf	_start+1
  5094  0E49  2E4E               	goto	l295
  5095  0E4A                     l1813:	
  5096                           
  5097                           ;launcher_functions.c: 221: else
  5098                           ;launcher_functions.c: 222: start++;
  5099  0E4A  3001               	movlw	1
  5100  0E4B  07FB               	addwf	_start,f
  5101  0E4C  3000               	movlw	0
  5102  0E4D  3DFC               	addwfc	_start+1,f
  5103  0E4E                     l295:	
  5104                           
  5105                           ;launcher_functions.c: 223: return read_data;
  5106  0E4E  0821               	movf	ReadBuffer@read_data,w
  5107  0E4F  0008               	return
  5108  0E50                     __end_of_ReadBuffer:	
  5109                           
  5110                           	psect	text19
  5111  0D80                     __ptext19:	
  5112 ;; *************** function _InitWatchdog *****************
  5113 ;; Defined at:
  5114 ;;		line 126 in file "launcher_functions.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;		None               void
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5128 ;;      Params:         0       0       0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0
  5131 ;;      Totals:         0       0       0       0       0       0       0
  5132 ;;Total ram usage:        0 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    2
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function _InitWatchdog
  5144  0D80                     _InitWatchdog:	
  5145                           
  5146                           ;launcher_functions.c: 129: WDTCONbits.WDTPS = 0x0A;
  5147                           
  5148                           ;incstack = 0
  5149                           ; Regs used in _InitWatchdog: [wreg+status,2+status,0]
  5150  0D80  0021               	movlb	1	; select bank1
  5151  0D81  0817               	movf	23,w	;volatile
  5152  0D82  39C1               	andlw	-63
  5153  0D83  3814               	iorlw	20
  5154  0D84  0097               	movwf	23	;volatile
  5155                           
  5156                           ;launcher_functions.c: 130: WDTCONbits.SWDTEN = 0;
  5157  0D85  1017               	bcf	23,0	;volatile
  5158  0D86  0008               	return
  5159  0D87                     __end_of_InitWatchdog:	
  5160                           
  5161                           	psect	text20
  5162  0DA5                     __ptext20:	
  5163 ;; *************** function _InitTimer1 *****************
  5164 ;; Defined at:
  5165 ;;		line 95 in file "launcher_functions.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;		None               void
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5179 ;;      Params:         0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    2
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _InitTimer1
  5195  0DA5                     _InitTimer1:	
  5196                           
  5197                           ;launcher_functions.c: 97: T1CONbits.TMR1CS = 0;
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  5201  0DA5  303F               	movlw	-193
  5202  0DA6  0020               	movlb	0	; select bank0
  5203  0DA7  0598               	andwf	24,f	;volatile
  5204                           
  5205                           ;launcher_functions.c: 98: T1CONbits.T1CKPS = 2;
  5206  0DA8  0818               	movf	24,w	;volatile
  5207  0DA9  39CF               	andlw	-49
  5208  0DAA  3820               	iorlw	32
  5209  0DAB  0098               	movwf	24	;volatile
  5210                           
  5211                           ;launcher_functions.c: 99: T1CONbits.nT1SYNC = 1;
  5212  0DAC  1518               	bsf	24,2	;volatile
  5213                           
  5214                           ;launcher_functions.c: 100: T1GCONbits.TMR1GE = 0;
  5215  0DAD  1399               	bcf	25,7	;volatile
  5216                           
  5217                           ;launcher_functions.c: 101: TMR1H = 0xFF;
  5218  0DAE  30FF               	movlw	255
  5219  0DAF  0097               	movwf	23	;volatile
  5220                           
  5221                           ;launcher_functions.c: 102: TMR1L = 0xCD;
  5222  0DB0  30CD               	movlw	205
  5223  0DB1  0096               	movwf	22	;volatile
  5224                           
  5225                           ;launcher_functions.c: 103: T1CONbits.TMR1ON = 1;
  5226  0DB2  1418               	bsf	24,0	;volatile
  5227  0DB3  0008               	return
  5228  0DB4                     __end_of_InitTimer1:	
  5229                           
  5230                           	psect	text21
  5231  0DE6                     __ptext21:	
  5232 ;; *************** function _InitSPI *****************
  5233 ;; Defined at:
  5234 ;;		line 107 in file "launcher_functions.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;		None               void
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5248 ;;      Params:         0       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    2
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_main
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _InitSPI
  5264  0DE6                     _InitSPI:	
  5265                           
  5266                           ;launcher_functions.c: 110: TRISCbits.TRISC2 = 0;
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _InitSPI: [wreg+status,2+status,0]
  5270  0DE6  0021               	movlb	1	; select bank1
  5271  0DE7  110E               	bcf	14,2	;volatile
  5272                           
  5273                           ;launcher_functions.c: 111: TRISCbits.TRISC3 = 0;
  5274  0DE8  118E               	bcf	14,3	;volatile
  5275                           
  5276                           ;launcher_functions.c: 112: TRISCbits.TRISC4 = 1;
  5277  0DE9  160E               	bsf	14,4	;volatile
  5278                           
  5279                           ;launcher_functions.c: 113: TRISCbits.TRISC5 = 0;
  5280  0DEA  128E               	bcf	14,5	;volatile
  5281                           
  5282                           ;launcher_functions.c: 115: LATC2 = (0);
  5283  0DEB  0022               	movlb	2	; select bank2
  5284  0DEC  110E               	bcf	14,2	;volatile
  5285                           
  5286                           ;launcher_functions.c: 118: SSPCON1bits.SSPEN=0x00;
  5287  0DED  0024               	movlb	4	; select bank4
  5288  0DEE  1295               	bcf	21,5	;volatile
  5289                           
  5290                           ;launcher_functions.c: 119: SSPCON1bits.SSPM=0x01;
  5291  0DEF  0815               	movf	21,w	;volatile
  5292  0DF0  39F0               	andlw	-16
  5293  0DF1  3801               	iorlw	1
  5294  0DF2  0095               	movwf	21	;volatile
  5295                           
  5296                           ;launcher_functions.c: 120: SSPCON1bits.CKP=0;
  5297  0DF3  1215               	bcf	21,4	;volatile
  5298                           
  5299                           ;launcher_functions.c: 121: SSPSTATbits.CKE=1;
  5300  0DF4  1714               	bsf	20,6	;volatile
  5301                           
  5302                           ;launcher_functions.c: 122: SSPSTATbits.SMP=0;
  5303  0DF5  1394               	bcf	20,7	;volatile
  5304                           
  5305                           ;launcher_functions.c: 123: SSPCON1bits.SSPEN=0x01;
  5306  0DF6  1695               	bsf	21,5	;volatile
  5307  0DF7  0008               	return
  5308  0DF8                     __end_of_InitSPI:	
  5309                           
  5310                           	psect	text22
  5311  0ECA                     __ptext22:	
  5312 ;; *************** function _InitGPIO *****************
  5313 ;; Defined at:
  5314 ;;		line 13 in file "launcher_functions.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;		None               void
  5321 ;; Registers used:
  5322 ;;		status,2
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5328 ;;      Params:         0       0       0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    2
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _InitGPIO
  5344  0ECA                     _InitGPIO:	
  5345                           
  5346                           ;launcher_functions.c: 18: TRISAbits.TRISA1 = 1;
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in _InitGPIO: [status,2]
  5350  0ECA  0021               	movlb	1	; select bank1
  5351  0ECB  148C               	bsf	12,1	;volatile
  5352                           
  5353                           ;launcher_functions.c: 19: IOCAPbits.IOCAP1 = 1;
  5354  0ECC  0027               	movlb	7	; select bank7
  5355  0ECD  1491               	bsf	17,1	;volatile
  5356                           
  5357                           ;launcher_functions.c: 20: IOCANbits.IOCAN1 = 1;
  5358  0ECE  1492               	bsf	18,1	;volatile
  5359                           
  5360                           ;launcher_functions.c: 21: IOCAF = 0x00;
  5361  0ECF  0193               	clrf	19	;volatile
  5362                           
  5363                           ;launcher_functions.c: 22: INTCONbits.IOCIE = 1;
  5364  0ED0  158B               	bsf	11,3	;volatile
  5365                           
  5366                           ;launcher_functions.c: 25: TRISBbits.TRISB3 = 1;
  5367  0ED1  0021               	movlb	1	; select bank1
  5368  0ED2  158D               	bsf	13,3	;volatile
  5369                           
  5370                           ;launcher_functions.c: 26: ANSELBbits.ANSB3 = 0;
  5371  0ED3  0023               	movlb	3	; select bank3
  5372  0ED4  118D               	bcf	13,3	;volatile
  5373                           
  5374                           ;launcher_functions.c: 27: IOCBNbits.IOCBN3 = 1;
  5375  0ED5  0027               	movlb	7	; select bank7
  5376  0ED6  1595               	bsf	21,3	;volatile
  5377                           
  5378                           ;launcher_functions.c: 28: IOCBPbits.IOCBP3 = 1;
  5379  0ED7  1594               	bsf	20,3	;volatile
  5380                           
  5381                           ;launcher_functions.c: 29: IOCBF = 0x00;
  5382  0ED8  0196               	clrf	22	;volatile
  5383                           
  5384                           ;launcher_functions.c: 30: INTCONbits.IOCIE = 1;
  5385  0ED9  158B               	bsf	11,3	;volatile
  5386                           
  5387                           ;launcher_functions.c: 33: TRISAbits.TRISA0 = 1;
  5388  0EDA  0021               	movlb	1	; select bank1
  5389  0EDB  140C               	bsf	12,0	;volatile
  5390                           
  5391                           ;launcher_functions.c: 35: TRISAbits.TRISA2 = 1;
  5392  0EDC  150C               	bsf	12,2	;volatile
  5393                           
  5394                           ;launcher_functions.c: 36: TRISAbits.TRISA3 = 1;
  5395  0EDD  158C               	bsf	12,3	;volatile
  5396                           
  5397                           ;launcher_functions.c: 37: TRISAbits.TRISA4 = 0;
  5398  0EDE  120C               	bcf	12,4	;volatile
  5399                           
  5400                           ;launcher_functions.c: 38: TRISAbits.TRISA5 = 0;
  5401  0EDF  128C               	bcf	12,5	;volatile
  5402                           
  5403                           ;launcher_functions.c: 39: TRISAbits.TRISA6 = 0;
  5404  0EE0  130C               	bcf	12,6	;volatile
  5405                           
  5406                           ;launcher_functions.c: 40: TRISAbits.TRISA7 = 0;
  5407  0EE1  138C               	bcf	12,7	;volatile
  5408                           
  5409                           ;launcher_functions.c: 43: TRISBbits.TRISB0 = 0;
  5410  0EE2  100D               	bcf	13,0	;volatile
  5411                           
  5412                           ;launcher_functions.c: 44: TRISBbits.TRISB1 = 1;
  5413  0EE3  148D               	bsf	13,1	;volatile
  5414                           
  5415                           ;launcher_functions.c: 45: TRISBbits.TRISB2 = 0;
  5416  0EE4  110D               	bcf	13,2	;volatile
  5417                           
  5418                           ;launcher_functions.c: 47: TRISBbits.TRISB4 = 0;
  5419  0EE5  120D               	bcf	13,4	;volatile
  5420                           
  5421                           ;launcher_functions.c: 48: TRISBbits.TRISB5 = 0;
  5422  0EE6  128D               	bcf	13,5	;volatile
  5423                           
  5424                           ;launcher_functions.c: 50: PORTBbits.RB0 = 0;
  5425  0EE7  0020               	movlb	0	; select bank0
  5426  0EE8  100D               	bcf	13,0	;volatile
  5427                           
  5428                           ;launcher_functions.c: 51: PORTBbits.RB4 = 0;
  5429  0EE9  120D               	bcf	13,4	;volatile
  5430                           
  5431                           ;launcher_functions.c: 52: PORTBbits.RB5 = 0;
  5432  0EEA  128D               	bcf	13,5	;volatile
  5433                           
  5434                           ;launcher_functions.c: 54: ANSELBbits.ANSB0 = 0;
  5435  0EEB  0023               	movlb	3	; select bank3
  5436  0EEC  100D               	bcf	13,0	;volatile
  5437                           
  5438                           ;launcher_functions.c: 55: ANSELBbits.ANSB1 = 0;
  5439  0EED  108D               	bcf	13,1	;volatile
  5440                           
  5441                           ;launcher_functions.c: 56: ANSELBbits.ANSB2 = 0;
  5442  0EEE  110D               	bcf	13,2	;volatile
  5443                           
  5444                           ;launcher_functions.c: 58: ANSELBbits.ANSB4 = 0;
  5445  0EEF  120D               	bcf	13,4	;volatile
  5446                           
  5447                           ;launcher_functions.c: 59: ANSELBbits.ANSB5 = 0;
  5448  0EF0  128D               	bcf	13,5	;volatile
  5449                           
  5450                           ;launcher_functions.c: 62: TRISCbits.TRISC0 = 0;
  5451  0EF1  0021               	movlb	1	; select bank1
  5452  0EF2  100E               	bcf	14,0	;volatile
  5453                           
  5454                           ;launcher_functions.c: 63: TRISCbits.TRISC1 = 0;
  5455  0EF3  108E               	bcf	14,1	;volatile
  5456  0EF4  0008               	return
  5457  0EF5                     __end_of_InitGPIO:	
  5458                           
  5459                           	psect	text23
  5460  0D87                     __ptext23:	
  5461 ;; *************** function _InitCLK *****************
  5462 ;; Defined at:
  5463 ;;		line 8 in file "launcher_functions.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;		None               void
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5477 ;;      Params:         0       0       0       0       0       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    2
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_main
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function _InitCLK
  5493  0D87                     _InitCLK:	
  5494                           
  5495                           ;launcher_functions.c: 10: OSCCONbits.IRCF = 0xF;
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _InitCLK: [wreg+status,2+status,0]
  5499  0D87  3078               	movlw	120
  5500  0D88  0021               	movlb	1	; select bank1
  5501  0D89  0499               	iorwf	25,f	;volatile
  5502                           
  5503                           ;launcher_functions.c: 11: OSCCONbits.SCS = 2;
  5504  0D8A  0819               	movf	25,w	;volatile
  5505  0D8B  39FC               	andlw	-4
  5506  0D8C  3802               	iorlw	2
  5507  0D8D  0099               	movwf	25	;volatile
  5508  0D8E  0008               	return
  5509  0D8F                     __end_of_InitCLK:	
  5510                           
  5511                           	psect	text24
  5512  0E50                     __ptext24:	
  5513 ;; *************** function _InitADC *****************
  5514 ;; Defined at:
  5515 ;;		line 72 in file "launcher_functions.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;		None               void
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5529 ;;      Params:         0       0       0       0       0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    2
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_main
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function _InitADC
  5545  0E50                     _InitADC:	
  5546                           
  5547                           ;launcher_functions.c: 75: TRISAbits.TRISA0 = 1;
  5548                           
  5549                           ;incstack = 0
  5550                           ; Regs used in _InitADC: [wreg+status,2+status,0]
  5551  0E50  0021               	movlb	1	; select bank1
  5552  0E51  140C               	bsf	12,0	;volatile
  5553                           
  5554                           ;launcher_functions.c: 76: ANSELAbits.ANSA0 = 1;
  5555  0E52  0023               	movlb	3	; select bank3
  5556  0E53  140C               	bsf	12,0	;volatile
  5557                           
  5558                           ;launcher_functions.c: 79: ADCON1bits.ADCS = 0x05;
  5559  0E54  0021               	movlb	1	; select bank1
  5560  0E55  081E               	movf	30,w	;volatile
  5561  0E56  398F               	andlw	-113
  5562  0E57  3850               	iorlw	80
  5563  0E58  009E               	movwf	30	;volatile
  5564                           
  5565                           ;launcher_functions.c: 80: ADCON1bits.ADPREF = 0x00;
  5566  0E59  30FC               	movlw	-4
  5567  0E5A  059E               	andwf	30,f	;volatile
  5568                           
  5569                           ;launcher_functions.c: 81: ADCON1bits.ADNREF = 0x00;
  5570  0E5B  111E               	bcf	30,2	;volatile
  5571                           
  5572                           ;launcher_functions.c: 82: ADCON0bits.CHS = 0x00;
  5573  0E5C  3083               	movlw	-125
  5574  0E5D  059D               	andwf	29,f	;volatile
  5575                           
  5576                           ;launcher_functions.c: 83: ADCON2bits.CHSN = 0xF;
  5577  0E5E  300F               	movlw	15
  5578  0E5F  049F               	iorwf	31,f	;volatile
  5579                           
  5580                           ;launcher_functions.c: 84: ADCON1bits.ADFM = 0;
  5581  0E60  139E               	bcf	30,7	;volatile
  5582                           
  5583                           ;launcher_functions.c: 85: ADCON0bits.ADRMD = 1;
  5584  0E61  179D               	bsf	29,7	;volatile
  5585                           
  5586                           ;launcher_functions.c: 86: ADCON0bits.ADON = 1;
  5587  0E62  141D               	bsf	29,0	;volatile
  5588                           
  5589                           ;launcher_functions.c: 89: ADIF = 0;
  5590  0E63  0020               	movlb	0	; select bank0
  5591  0E64  1311               	bcf	17,6	;volatile
  5592                           
  5593                           ;launcher_functions.c: 90: ADIE = 1;
  5594  0E65  0021               	movlb	1	; select bank1
  5595  0E66  1711               	bsf	17,6	;volatile
  5596                           
  5597                           ;launcher_functions.c: 91: PEIE = 1;
  5598  0E67  170B               	bsf	11,6	;volatile
  5599  0E68  0008               	return
  5600  0E69                     __end_of_InitADC:	
  5601                           
  5602                           	psect	text25
  5603  0DD4                     __ptext25:	
  5604 ;; *************** function _GoToSleep *****************
  5605 ;; Defined at:
  5606 ;;		line 490 in file "launcher_functions.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  count           1    wreg     unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  count           1    1[BANK0 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5620 ;;      Params:         0       0       0       0       0       0       0
  5621 ;;      Locals:         0       1       0       0       0       0       0
  5622 ;;      Temps:          0       1       0       0       0       0       0
  5623 ;;      Totals:         0       2       0       0       0       0       0
  5624 ;;Total ram usage:        2 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    2
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_main
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _GoToSleep
  5636  0DD4                     _GoToSleep:	
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _GoToSleep: [wreg+status,2+status,0]
  5640                           ;GoToSleep@count stored from wreg
  5641  0DD4  0020               	movlb	0	; select bank0
  5642  0DD5  00A1               	movwf	GoToSleep@count
  5643                           
  5644                           ;launcher_functions.c: 492: WDTCONbits.WDTPS = count;
  5645  0DD6  0821               	movf	GoToSleep@count,w
  5646  0DD7  00A0               	movwf	??_GoToSleep
  5647  0DD8  0DA0               	rlf	??_GoToSleep,f
  5648  0DD9  0021               	movlb	1	; select bank1
  5649  0DDA  0817               	movf	23,w	;volatile
  5650  0DDB  0020               	movlb	0	; select bank0
  5651  0DDC  0620               	xorwf	??_GoToSleep,w
  5652  0DDD  39C1               	andlw	-63
  5653  0DDE  0620               	xorwf	??_GoToSleep,w
  5654  0DDF  0021               	movlb	1	; select bank1
  5655  0DE0  0097               	movwf	23	;volatile
  5656                           
  5657                           ;launcher_functions.c: 493: WDTCONbits.SWDTEN = 1;
  5658  0DE1  1417               	bsf	23,0	;volatile
  5659  0DE2  0063               	sleep	;# 
  5660                           
  5661                           ;launcher_functions.c: 495: WDTCONbits.SWDTEN = 0;
  5662  0DE3  0021               	movlb	1	; select bank1
  5663  0DE4  1017               	bcf	23,0	;volatile
  5664  0DE5  0008               	return
  5665  0DE6                     __end_of_GoToSleep:	
  5666                           
  5667                           	psect	intentry
  5668  0004                     __pintentry:	
  5669 ;; *************** function _isr *****************
  5670 ;; Defined at:
  5671 ;;		line 86 in file "launcher_main.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;		None               void
  5678 ;; Registers used:
  5679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5685 ;;      Params:         0       0       0       0       0       0       0
  5686 ;;      Locals:         2       0       0       0       0       0       0
  5687 ;;      Temps:          5       0       0       0       0       0       0
  5688 ;;      Totals:         7       0       0       0       0       0       0
  5689 ;;Total ram usage:        7 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    1
  5692 ;; This function calls:
  5693 ;;		_WriteBuffer
  5694 ;; This function is called by:
  5695 ;;		Interrupt level 1
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699  0004                     _isr:	
  5700                           
  5701                           ;incstack = 0
  5702                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5703  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5704  0005  3180               	pagesel	$
  5705  0006  0020               	movlb	0	; select bank0
  5706  0007  087F               	movf	127,w
  5707  0008  00F6               	movwf	??_isr+4
  5708                           
  5709                           ;launcher_main.c: 89: if (PIR1bits.RCIF)
  5710  0009  1E91               	btfss	17,5	;volatile
  5711  000A  282E               	goto	i1l2385
  5712                           
  5713                           ;launcher_main.c: 90: {
  5714                           ;launcher_main.c: 92: if(OERR)
  5715  000B  0023               	movlb	3	; select bank3
  5716  000C  1C9D               	btfss	29,1	;volatile
  5717  000D  2810               	goto	i1l2373
  5718                           
  5719                           ;launcher_main.c: 93: {
  5720                           ;launcher_main.c: 94: RCSTAbits.CREN = 0;
  5721  000E  121D               	bcf	29,4	;volatile
  5722                           
  5723                           ;launcher_main.c: 95: RCSTAbits.CREN = 1;
  5724  000F  161D               	bsf	29,4	;volatile
  5725  0010                     i1l2373:	
  5726                           
  5727                           ;launcher_main.c: 96: }
  5728                           ;launcher_main.c: 97: gpsMessage[gpsIndex++] = RCREG;
  5729  0010  0819               	movf	25,w	;volatile
  5730  0011  00F2               	movwf	??_isr
  5731  0012  0021               	movlb	1	; select bank1
  5732  0013  0863               	movf	_gpsIndex^(0+128),w
  5733  0014  3E20               	addlw	_gpsMessage& (0+255)
  5734  0015  0086               	movwf	6
  5735  0016  3001               	movlw	1	; select bank2/3
  5736  0017  0087               	movwf	7
  5737  0018  0872               	movf	??_isr,w
  5738  0019  0081               	movwf	1
  5739  001A  3001               	movlw	1
  5740  001B  00F2               	movwf	??_isr
  5741  001C  0872               	movf	??_isr,w
  5742  001D  07E3               	addwf	_gpsIndex^(0+128),f	;volatile
  5743                           
  5744                           ;launcher_main.c: 98: if(gpsMessage[gpsIndex-1] == 0x0A)
  5745  001E  0863               	movf	_gpsIndex^(0+128),w
  5746  001F  3EFF               	addlw	255
  5747  0020  3E20               	addlw	_gpsMessage& (0+255)
  5748  0021  0086               	movwf	6
  5749  0022  3001               	movlw	1	; select bank2/3
  5750  0023  0087               	movwf	7
  5751  0024  0801               	movf	1,w
  5752  0025  3A0A               	xorlw	10
  5753  0026  1D03               	skipz
  5754  0027  282B               	goto	i1l2381
  5755                           
  5756                           ;launcher_main.c: 99: {
  5757                           ;launcher_main.c: 100: messageDoneFlag = 1;
  5758  0028  01FD               	clrf	_messageDoneFlag
  5759  0029  0AFD               	incf	_messageDoneFlag,f
  5760                           
  5761                           ;launcher_main.c: 101: }
  5762  002A  282C               	goto	i1l2383
  5763  002B                     i1l2381:	
  5764                           
  5765                           ;launcher_main.c: 102: else
  5766                           ;launcher_main.c: 103: {
  5767                           ;launcher_main.c: 104: messageDoneFlag = 0;
  5768  002B  01FD               	clrf	_messageDoneFlag
  5769  002C                     i1l2383:	
  5770                           
  5771                           ;launcher_main.c: 105: }
  5772                           ;launcher_main.c: 106: PIR1bits.RCIF = 0;
  5773  002C  0020               	movlb	0	; select bank0
  5774  002D  1291               	bcf	17,5	;volatile
  5775  002E                     i1l2385:	
  5776                           
  5777                           ;launcher_main.c: 107: }
  5778                           ;launcher_main.c: 110: if (TMR1IF && TMR1IE)
  5779  002E  1C11               	btfss	17,0	;volatile
  5780  002F  283D               	goto	i1l2395
  5781  0030  0021               	movlb	1	; select bank1
  5782  0031  1C11               	btfss	17,0	;volatile
  5783  0032  283D               	goto	i1l2395
  5784                           
  5785                           ;launcher_main.c: 111: {
  5786                           ;launcher_main.c: 112: TMR1H = 0xFF;
  5787  0033  30FF               	movlw	255
  5788  0034  0020               	movlb	0	; select bank0
  5789  0035  0097               	movwf	23	;volatile
  5790                           
  5791                           ;launcher_main.c: 113: TMR1L = 0xCD;
  5792  0036  30CD               	movlw	205
  5793  0037  0096               	movwf	22	;volatile
  5794                           
  5795                           ;launcher_main.c: 114: TMR1IF = 0;
  5796  0038  1011               	bcf	17,0	;volatile
  5797                           
  5798                           ;launcher_main.c: 116: if(recordFlag)
  5799  0039  0021               	movlb	1	; select bank1
  5800  003A  085D               	movf	_recordFlag^(0+128),w
  5801  003B  1D03               	skipz
  5802                           
  5803                           ;launcher_main.c: 117: {
  5804                           ;launcher_main.c: 118: ADCON0bits.ADGO = 1;
  5805  003C  149D               	bsf	29,1	;volatile
  5806  003D                     i1l2395:	
  5807                           
  5808                           ;launcher_main.c: 119: }
  5809                           ;launcher_main.c: 120: }
  5810                           ;launcher_main.c: 123: if(PIR1bits.ADIF & PIE1bits.ADIE)
  5811  003D  0021               	movlb	1	; select bank1
  5812  003E  0E11               	swapf	17,w	;volatile
  5813  003F  0C89               	rrf	9,f
  5814  0040  0C89               	rrf	9,f
  5815  0041  3901               	andlw	1
  5816  0042  00F2               	movwf	??_isr
  5817  0043  0020               	movlb	0	; select bank0
  5818  0044  0E11               	swapf	17,w	;volatile
  5819  0045  0C89               	rrf	9,f
  5820  0046  0C89               	rrf	9,f
  5821  0047  3901               	andlw	1
  5822  0048  0572               	andwf	??_isr,w
  5823  0049  1903               	btfsc	3,2
  5824  004A  287B               	goto	i1l2409
  5825                           
  5826                           ;launcher_main.c: 124: {
  5827                           ;launcher_main.c: 125: if(!((((end))==(51))?((((start))==0)?(1):(0)):((((end)+1)==((star
      +                          t)))?(1):(0))))
  5828  004B  3033               	movlw	51
  5829  004C  0679               	xorwf	_end,w
  5830  004D  047A               	iorwf	_end+1,w
  5831  004E  1903               	skipnz
  5832  004F  2865               	goto	i1l2401
  5833  0050  0879               	movf	_end,w
  5834  0051  3E01               	addlw	1
  5835  0052  00F2               	movwf	??_isr
  5836  0053  3000               	movlw	0
  5837  0054  3D7A               	addwfc	_end+1,w
  5838  0055  00F3               	movwf	??_isr+1
  5839  0056  087C               	movf	_start+1,w
  5840  0057  0673               	xorwf	??_isr+1,w
  5841  0058  1D03               	skipz
  5842  0059  285C               	goto	u192_25
  5843  005A  087B               	movf	_start,w
  5844  005B  0672               	xorwf	??_isr,w
  5845  005C                     u192_25:	
  5846  005C  3000               	movlw	0
  5847  005D  1903               	skipnz
  5848  005E  3001               	movlw	1
  5849  005F  00F4               	movwf	??_isr+2
  5850  0060  01F5               	clrf	??_isr+3
  5851  0061  0874               	movf	??_isr+2,w
  5852  0062  00F7               	movwf	_isr$524
  5853  0063  0875               	movf	??_isr+3,w
  5854  0064  286F               	goto	L4
  5855  0065                     i1l2401:	
  5856  0065  087C               	movf	_start+1,w
  5857  0066  047B               	iorwf	_start,w
  5858  0067  3000               	movlw	0
  5859  0068  1903               	skipnz
  5860  0069  3001               	movlw	1
  5861  006A  00F2               	movwf	??_isr
  5862  006B  01F3               	clrf	??_isr+1
  5863  006C  0872               	movf	??_isr,w
  5864  006D  00F7               	movwf	_isr$524
  5865  006E  0873               	movf	??_isr+1,w
  5866  006F                     L4:	
  5867  006F  00F8               	movwf	_isr$524+1
  5868  0070  0878               	movf	_isr$524+1,w
  5869  0071  0477               	iorwf	_isr$524,w
  5870  0072  1D03               	skipz
  5871  0073  2879               	goto	i1l2407
  5872                           
  5873                           ;launcher_main.c: 126: {
  5874                           ;launcher_main.c: 127: WriteBuffer(ADRESH);
  5875  0074  0021               	movlb	1	; select bank1
  5876  0075  081C               	movf	28,w	;volatile
  5877  0076  318E  2621  3180   	fcall	_WriteBuffer
  5878  0079                     i1l2407:	
  5879                           
  5880                           ;launcher_main.c: 128: }
  5881                           ;launcher_main.c: 129: PIR1bits.ADIF = 0;
  5882  0079  0020               	movlb	0	; select bank0
  5883  007A  1311               	bcf	17,6	;volatile
  5884  007B                     i1l2409:	
  5885                           
  5886                           ;launcher_main.c: 130: }
  5887                           ;launcher_main.c: 133: if(INTCONbits.IOCIE && IOCBFbits.IOCBF3)
  5888  007B  1D8B               	btfss	11,3	;volatile
  5889  007C  28A6               	goto	i1l2423
  5890  007D  0027               	movlb	7	; select bank7
  5891  007E  1D96               	btfss	22,3	;volatile
  5892  007F  28A6               	goto	i1l2423
  5893                           
  5894                           ;launcher_main.c: 134: {
  5895                           ;launcher_main.c: 135: IOCBFbits.IOCBF3 = 0;
  5896  0080  1196               	bcf	22,3	;volatile
  5897                           
  5898                           ;launcher_main.c: 136: if(IOCBPbits.IOCBP3 & PORTBbits.RB3)
  5899  0081  0020               	movlb	0	; select bank0
  5900  0082  0C0D               	rrf	13,w	;volatile
  5901  0083  00F2               	movwf	??_isr
  5902  0084  0CF2               	rrf	??_isr,f
  5903  0085  0C72               	rrf	??_isr,w
  5904  0086  3901               	andlw	1
  5905  0087  00F3               	movwf	??_isr+1
  5906  0088  0027               	movlb	7	; select bank7
  5907  0089  0C14               	rrf	20,w	;volatile
  5908  008A  00F4               	movwf	??_isr+2
  5909  008B  0CF4               	rrf	??_isr+2,f
  5910  008C  0C74               	rrf	??_isr+2,w
  5911  008D  3901               	andlw	1
  5912  008E  0573               	andwf	??_isr+1,w
  5913  008F  1903               	btfsc	3,2
  5914  0090  2894               	goto	i1l2419
  5915                           
  5916                           ;launcher_main.c: 137: {
  5917                           ;launcher_main.c: 138: recordFlag = 1;
  5918  0091  0021               	movlb	1	; select bank1
  5919  0092  01DD               	clrf	_recordFlag^(0+128)
  5920  0093  0ADD               	incf	_recordFlag^(0+128),f
  5921  0094                     i1l2419:	
  5922                           
  5923                           ;launcher_main.c: 139: }
  5924                           ;launcher_main.c: 140: if(IOCBNbits.IOCBN3 & !PORTBbits.RB3)
  5925  0094  0027               	movlb	7	; select bank7
  5926  0095  0C15               	rrf	21,w	;volatile
  5927  0096  00F2               	movwf	??_isr
  5928  0097  0CF2               	rrf	??_isr,f
  5929  0098  0C72               	rrf	??_isr,w
  5930  0099  3901               	andlw	1
  5931  009A  00F3               	movwf	??_isr+1
  5932  009B  1003               	clrc
  5933  009C  0020               	movlb	0	; select bank0
  5934  009D  1D8D               	btfss	13,3	;volatile
  5935  009E  1403               	setc
  5936  009F  3000               	movlw	0
  5937  00A0  3D09               	addwfc	9,w
  5938  00A1  0573               	andwf	??_isr+1,w
  5939  00A2  1903               	btfsc	3,2
  5940  00A3  28A6               	goto	i1l2423
  5941                           
  5942                           ;launcher_main.c: 141: {
  5943                           ;launcher_main.c: 142: recordFlag = 0;
  5944  00A4  0021               	movlb	1	; select bank1
  5945  00A5  01DD               	clrf	_recordFlag^(0+128)
  5946  00A6                     i1l2423:	
  5947                           
  5948                           ;launcher_main.c: 143: }
  5949                           ;launcher_main.c: 144: }
  5950                           ;launcher_main.c: 147: if(INTCONbits.IOCIE && IOCAFbits.IOCAF1)
  5951  00A6  1D8B               	btfss	11,3	;volatile
  5952  00A7  28C8               	goto	i1l130
  5953  00A8  0027               	movlb	7	; select bank7
  5954  00A9  1C93               	btfss	19,1	;volatile
  5955  00AA  28C8               	goto	i1l130
  5956                           
  5957                           ;launcher_main.c: 148: {
  5958                           ;launcher_main.c: 149: IOCAFbits.IOCAF1 = 0;
  5959  00AB  1093               	bcf	19,1	;volatile
  5960                           
  5961                           ;launcher_main.c: 150: if(IOCAPbits.IOCAP1 & PORTAbits.RA1)
  5962  00AC  0020               	movlb	0	; select bank0
  5963  00AD  0C0C               	rrf	12,w	;volatile
  5964  00AE  3901               	andlw	1
  5965  00AF  00F2               	movwf	??_isr
  5966  00B0  0027               	movlb	7	; select bank7
  5967  00B1  0C11               	rrf	17,w	;volatile
  5968  00B2  3901               	andlw	1
  5969  00B3  0572               	andwf	??_isr,w
  5970  00B4  1903               	btfsc	3,2
  5971  00B5  28B9               	goto	i1l2433
  5972                           
  5973                           ;launcher_main.c: 151: {
  5974                           ;launcher_main.c: 152: strobeFlag = 1;
  5975  00B6  0021               	movlb	1	; select bank1
  5976  00B7  01DE               	clrf	_strobeFlag^(0+128)
  5977  00B8  0ADE               	incf	_strobeFlag^(0+128),f
  5978  00B9                     i1l2433:	
  5979                           
  5980                           ;launcher_main.c: 153: }
  5981                           ;launcher_main.c: 154: if(IOCANbits.IOCAN1 & !PORTAbits.RA1)
  5982  00B9  0027               	movlb	7	; select bank7
  5983  00BA  0C12               	rrf	18,w	;volatile
  5984  00BB  3901               	andlw	1
  5985  00BC  00F2               	movwf	??_isr
  5986  00BD  1003               	clrc
  5987  00BE  0020               	movlb	0	; select bank0
  5988  00BF  1C8C               	btfss	12,1	;volatile
  5989  00C0  1403               	setc
  5990  00C1  3000               	movlw	0
  5991  00C2  3D09               	addwfc	9,w
  5992  00C3  0572               	andwf	??_isr,w
  5993  00C4  1903               	btfsc	3,2
  5994  00C5  28C8               	goto	i1l130
  5995                           
  5996                           ;launcher_main.c: 155: {
  5997                           ;launcher_main.c: 156: strobeFlag = 0;
  5998  00C6  0021               	movlb	1	; select bank1
  5999  00C7  01DE               	clrf	_strobeFlag^(0+128)
  6000  00C8                     i1l130:	
  6001  00C8  0876               	movf	??_isr+4,w
  6002  00C9  0020               	movlb	0	; select bank0
  6003  00CA  00FF               	movwf	127
  6004  00CB  107E               	bcf	126,0	;clear compiler interrupt flag
  6005  00CC  0009               	retfie
  6006  00CD                     __end_of_isr:	
  6007                           
  6008                           	psect	text27
  6009  0E21                     __ptext27:	
  6010 ;; *************** function _WriteBuffer *****************
  6011 ;; Defined at:
  6012 ;;		line 204 in file "launcher_functions.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  data            1    wreg     unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  data            1    1[COMMON] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;		None               void
  6019 ;; Registers used:
  6020 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6026 ;;      Params:         0       0       0       0       0       0       0
  6027 ;;      Locals:         1       0       0       0       0       0       0
  6028 ;;      Temps:          1       0       0       0       0       0       0
  6029 ;;      Totals:         2       0       0       0       0       0       0
  6030 ;;Total ram usage:        2 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_isr
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function _WriteBuffer
  6041  0E21                     _WriteBuffer:	
  6042                           
  6043                           ;incstack = 0
  6044                           ; Regs used in _WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  6045                           ;WriteBuffer@data stored from wreg
  6046  0E21  00F1               	movwf	WriteBuffer@data
  6047                           
  6048                           ;launcher_functions.c: 206: buffer[end] = data;
  6049  0E22  0871               	movf	WriteBuffer@data,w
  6050  0E23  00F0               	movwf	??_WriteBuffer
  6051  0E24  0879               	movf	_end,w
  6052  0E25  3EA0               	addlw	_buffer& (0+255)
  6053  0E26  0086               	movwf	6
  6054  0E27  3001               	movlw	1	; select bank3/4
  6055  0E28  0087               	movwf	7
  6056  0E29  0870               	movf	??_WriteBuffer,w
  6057  0E2A  0081               	movwf	1
  6058                           
  6059                           ;launcher_functions.c: 208: if (end == 51)
  6060  0E2B  3033               	movlw	51
  6061  0E2C  0679               	xorwf	_end,w
  6062  0E2D  047A               	iorwf	_end+1,w
  6063  0E2E  1D03               	skipz
  6064  0E2F  2E33               	goto	i1l2317
  6065                           
  6066                           ;launcher_functions.c: 209: end = 0;
  6067  0E30  01F9               	clrf	_end
  6068  0E31  01FA               	clrf	_end+1
  6069  0E32  0008               	return
  6070  0E33                     i1l2317:	
  6071                           
  6072                           ;launcher_functions.c: 210: else
  6073                           ;launcher_functions.c: 211: end++;
  6074  0E33  3001               	movlw	1
  6075  0E34  07F9               	addwf	_end,f
  6076  0E35  3000               	movlw	0
  6077  0E36  3DFA               	addwfc	_end+1,f
  6078  0E37  0008               	return
  6079  0E38                     __end_of_WriteBuffer:	
  6080  007E                     btemp	set	126	;btemp
  6081  007E                     pic14e$flags	set	126
  6082  007E                     wtemp	set	126
  6083  007E                     wtemp0	set	126
  6084  0080                     wtemp1	set	128
  6085  0082                     wtemp2	set	130
  6086  0084                     wtemp3	set	132
  6087  0086                     wtemp4	set	134
  6088  0088                     wtemp5	set	136
  6089  007F                     wtemp6	set	127
  6090  007E                     ttemp	set	126
  6091  007E                     ttemp0	set	126
  6092  0081                     ttemp1	set	129
  6093  0084                     ttemp2	set	132
  6094  0087                     ttemp3	set	135
  6095  007F                     ttemp4	set	127
  6096  007E                     ltemp	set	126
  6097  007E                     ltemp0	set	126
  6098  0082                     ltemp1	set	130
  6099  0086                     ltemp2	set	134
  6100  0080                     ltemp3	set	128


Data Sizes:
    Strings     44
    Constant    10
    Data        55
    BSS         136
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80      4      68
    BANK2            80      0      72
    BANK3            80      0      51
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 22
		 -> SetupGPS@message(BANK0[22]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1344$_cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), SetupGPS@MID(BANK0[4]), SetupGPS@startSequence(BANK0[6]), 

    uart_write_message@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 

    compute_checksum@data	PTR unsigned char  size(1) Largest target is 22
		 -> UpdateGPS@GPSupdateMessage(BANK0[22]), SetupGPS@message(BANK0[22]), DisableGPS@init_117(COMMON[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_WriteBuffer

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _UpdateGPS->_DecodeGPS
    _DecodeGPS->___lwdiv
    _SetupGPS->_sprintf
    _uart_write_message->_compute_checksum
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _RecordMode->_WriteOverheadSPI
    _WriteOverheadSPI->_ReadStatusSPI
    _ReadStatusSPI->_WriteSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4    8233
                                             76 BANK0      4     0      4
                                              0 BANK1      4     4      0
                          _GoToSleep
                            _InitADC
                            _InitCLK
                           _InitGPIO
                            _InitSPI
                         _InitTimer1
                       _InitWatchdog
                         _RecordMode
                           _SetupGPS
                     _ToggleSleepGPS
                          _UpdateGPS
                           _initUART
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UpdateGPS                                           25    25      0    4263
                                             40 BANK0     25    25      0
                          _DecodeGPS
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _DecodeGPS                                           26    26      0    3130
                                             14 BANK0     26    26      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _ToggleSleepGPS                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                            37    37      0    2983
                                             39 BANK0     37    37      0
                            _sprintf
                 _uart_write_message
 ---------------------------------------------------------------------------------
 (2) _uart_write_message                                  15    13      2    1105
                                              8 BANK0     15    13      2
                   _compute_checksum
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (3) _uart_xmit                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _compute_checksum                                     8     6      2     340
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    13      6    1613
                                             20 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _RecordMode                                          13    13      0     942
                                             21 BANK0     13    13      0
                         _ReadBuffer
                   _WriteOverheadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteOverheadSPI                                    14    10      4     513
                                              7 BANK0     14    10      4
                      _ReadStatusSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _ReadStatusSPI                                        2     2      0      69
                                              5 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             5     5      0      23
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadBuffer                                           2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitWatchdog                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCLK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GoToSleep                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  7     7      0      46
                                              2 COMMON     7     7      0
                        _WriteBuffer
 ---------------------------------------------------------------------------------
 (6) _WriteBuffer                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GoToSleep
   _InitADC
   _InitCLK
   _InitGPIO
   _InitSPI
   _InitTimer1
   _InitWatchdog
   _RecordMode
     _ReadBuffer
     _WriteOverheadSPI
       _ReadStatusSPI
         _ReadSPI
         _WriteSPI
       _WriteSPI
     _WriteSPI
   _SetupGPS
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _ToggleSleepGPS
   _UpdateGPS
     _DecodeGPS
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _uart_write_message
       _compute_checksum
       _uart_xmit
   _initUART

 _isr (ROOT)
   _WriteBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     11D       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      33      12       63.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0     11D      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 17:43:15 2014

               DecodeGPS@latitude 003A                       _SSPSTATbits 0214               ___wmul@multiplicand 0022  
            __size_of_WriteBuffer 0017                       __CFG_LVP$ON 0000                               l102 0709  
                             l314 0D91                               l404 04AF                               l273 0D9B  
                             l267 0E07                               l284 0FE0                               l524 0E72  
                             l295 0E4E                               l375 0381                               _GIE 005F  
                             _RA6 0066                               _end 0079                               _isr 0004  
              DecodeGPS@messageID 0030                               wreg 0009                DecodeGPS@longitude 0040  
                 DisableGPS@F4913 00A0                              l2021 035B                              l2013 033F  
                            l2031 0384                              l2023 0361                              l2201 06A7  
                            l2221 03F4                              l2045 03BD                              l2039 0395  
                            l2241 0453                              l2235 042D                              l2227 041A  
                            l2191 0669                              l2343 06F4                              l2257 0492  
                            l2265 045E                              l1721 0F9D                              l2353 0711  
                            l1731 0E6C                              l2363 0754                              l1813 0E4A  
                            l2277 04ED                              l1901 05E5                              l1717 0F98  
                            l1751 0F30                              l1719 0F63                              l2359 0735  
                            l1753 0F3C                              l1763 0F57                              l1915 05F8  
                            l1907 05F4                              l1835 0790                              l1827 0782  
                            l1931 013F                              l2299 0F20                              l1781 07EE  
                            l1917 053D                              l1845 079A                              l1759 0F4E  
                            l1775 07D6                              l1919 0638                              l1847 07BD  
                            l1935 0150                              l1793 0FCD                              l1777 07E2  
                            l1785 07F7                              l1873 0574                              l1857 055F  
                            l1937 0160                              l1859 0561                              l1893 05C6  
                            l1877 0590                              l1879 05AA                              l1889 05C0  
                            l1977 0250                              l1969 0234                              _ADIE 048E  
                            _ADIF 008E                              ?_isr 0070            __size_of_ReadStatusSPI 0011  
                            STR_1 080A                              STR_2 081D                              STR_3 082F  
                            u1205 0F4F                              u1125 0E73                              u1135 0E78  
                            u1235 07D9                              u2107 0EC1                              u1165 0F33  
                            u2117 0670                              u1255 07E8                              u1095 0F6D  
                            u1335 0770                              u2127 06AE                              u2137 04B9  
                            u1185 0F3D                              u1265 07EF                              u1425 05DB  
                            u1505 013D                              u1195 0F47                              u1620 0648  
                            u1285 0FAB                              u1365 07AA                              u1605 0393  
                            u1525 015E                              u2077 0701                              u1470 0112  
                            u1295 0FBF                              u1615 03BB                              u2087 0F10  
                            u1720 04AE                              u1480 0120                              u1705 0498  
                            u2097 0EB2                              u1490 012E                              u1723 0475  
                            u1635 0667                              u1733 04DD                              u1645 06A5  
                            u1655 03F2                              u1745 04FD                              u1665 0418  
                            u1770 0F00                              u1755 0512                              u1675 042B  
                            u1765 0527                              u1685 0451                              u1695 0480  
                            _PEIE 005E                              _RCIE 048D                              _OERR 0CE9  
                            _main 06CF                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              ltemp 007E  
                            start 00CD                              ttemp 007E                              wtemp 007E  
                   __CFG_MCLRE$ON 0000                 ?_compute_checksum 0020                   __end_of_InitADC 0E69  
                 __end_of_InitCLK 0D8F                   __end_of_InitSPI 0DF8                   __end_of_ReadSPI 0DA5  
              ??_compute_checksum 0022                             ??_isr 0072                     ?_InitWatchdog 0070  
           ReadStatusSPI@dataRead 0026                             ?_main 006C                             _LATC2 0872  
                           _IOCAF 0393                             _IOCBF 0396                   __end_of___lwdiv 0F5E  
                           i1l130 00C8                   __end_of___lwmod 07FE                             _RCREG 0199  
                           _TMR1H 0017                             _TMR1L 0016                             _TXREG 019A  
               RecordMode@address 003C                   __end_of_dpowers 080A               DecodeGPS@northSouth 0037  
                           _start 007B                    __CFG_BOREN$OFF 0000                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                   __end_of_sprintf 063D            uart_write_message@data 0034  
          uart_write_message@size 0028                        _ReadBuffer 0E38                   __initialization 00CF  
                      _InitTimer1 0DA5                 ?_WriteOverheadSPI 0027                      __end_of_main 075D  
              __size_of_DecodeGPS 02C3                  __end_of_InitGPIO 0EF5                    ??_InitWatchdog 0020  
                   _ReadStatusSPI 0DC3                ??_WriteOverheadSPI 002B  uart_write_message@ascii_checksum 0035  
                          ??_main 00DF                __size_of_GoToSleep 0012                   ReadSPI@dataByte 0021  
                  __CFG_PLLEN$OFF 0000                  __end_of_SetupGPS 06CF     WriteOverheadSPI@address_bytes 0031  
                      _RecordMode 03CA                            _ADRESH 009C                  __end_of_WriteSPI 0E0B  
                          i1l2401 0065                            i1l2317 0E33                            i1l2423 00A6  
                          i1l2407 0079                            i1l2433 00B9                            i1l2409 007B  
                          i1l2419 0094                            i1l2381 002B                            i1l2373 0010  
                          i1l2383 002C                            i1l2385 002E                            i1l2395 003D  
                          u192_25 005C                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _TMR1ON 00C0                            _SPBRGL 019B  
                          _SSPBUF 0211                         ??_InitADC 0020                         ??_InitCLK 0020  
                       ??_InitSPI 0020                         ??_ReadSPI 0020                    ?_ReadStatusSPI 0070  
                          ___wmul 0E69                  __end_of_initUART 0DC3                         ??___lwdiv 002A  
                       ??___lwmod 0032                            _buffer 01A0       __size_of_uart_write_message 0072  
              __size_of_UpdateGPS 0032                       RecordMode@x 0040               main@periodicCounter 00E2  
               __end_of_DecodeGPS 03CA                         ??_sprintf 003A                    _gpsInvalidFlag 00BE  
         __end_of__initialization 0103                 __end_of_GoToSleep 0DE6                       ?_ReadBuffer 0070  
                     ?_InitTimer1 0070                    __pcstackCOMMON 0070                      __pidataBANK1 0E87  
                    __pidataBANK2 0E0B                      WriteSPI@temp 0022                       ?_RecordMode 0070  
            __end_of_InitWatchdog 0D87                        __pbssBANK1 00C1                        __pbssBANK2 0120  
                      __pbssBANK3 01A0                         ?_InitGPIO 0070                   SetupGPS@message 004A  
                 ??_ReadStatusSPI 0025                 __end_of_UpdateGPS 0F27                        __pmaintext 06CF  
                       ?_SetupGPS 0070                           ?___wmul 0020                     ??_WriteBuffer 0070  
                      __pintentry 0004                    _validLongitude 00D3         UpdateGPS@GPSupdateMessage 004B  
                       ?_WriteSPI 0070                __size_of_uart_xmit 000A         __size_of_compute_checksum 0042  
             __size_of_ReadBuffer 0018               __size_of_InitTimer1 000F                        ??_InitGPIO 0020  
                       ?_initUART 0070                           _InitADC 0E50                           _InitCLK 0D87  
                         _InitSPI 0DE6                        _gpsMessage 0120           __size_of_ToggleSleepGPS 0022  
                         _ReadSPI 0D99                       SetupGPS@MID 0066                        ??_SetupGPS 0047  
             __size_of_RecordMode 016D                   __size_of___wmul 001E                           ___lwdiv 0F27  
                         ___lwmod 07CF                           _isr$524 0077                        ??_WriteSPI 0020  
                         __ptext1 0DB4                           __ptext2 0EF5                           __ptext3 0107  
                         __ptext4 0E69                           __ptext5 0EA8                           __ptext6 063D  
                         __ptext7 075D                           __ptext8 0D8F                           __ptext9 0F5E  
                       _T1CONbits 0018                           _dpowers 0800               __end_of_WriteBuffer 0E38  
                    __size_of_isr 00C9                         _IOCAFbits 0393                         _IOCBFbits 0396  
                       _IOCANbits 0392         __size_of_WriteOverheadSPI 0060                         _IOCBNbits 0395  
                       _IOCAPbits 0391                         _IOCBPbits 0394                        _recordFlag 00DD  
                         _sprintf 0537                           clrloop0 0D7B              end_of_initialization 0103  
                      ??_initUART 0020                           init_ram 0D74                           initloop 0D75  
                 WriteBuffer@data 0071                 __end_of_uart_xmit 0D99                         _RCSTAbits 019D  
                WriteSPI@databyte 0024                      __pstringtext 0800                         _PORTAbits 000C  
                       _PORTBbits 000D                  __CFG_FOSC$INTOSC 0000             __size_of_InitWatchdog 0007  
                       _TRISAbits 008C                         _TRISBbits 008D                         _TRISCbits 008E  
         WriteOverheadSPI@address 0027                   DecodeGPS@status 0039              uart_xmit@mydata_byte 0020  
                       _DecodeGPS 0107                         _TXSTAbits 019E                      ??_ReadBuffer 0020  
                      _strobeFlag 00DE                      ??_InitTimer1 0020                         _GoToSleep 0DD4  
                     _WriteBuffer 0E21                    __end_of___wmul 0E87        __end_of_uart_write_message 07CF  
                    _InitWatchdog 0D80                     SetupGPS@F4916 00B4                     SetupGPS@F4918 00BA  
             start_initialization 00CF                  _compute_checksum 0F5E         WriteOverheadSPI@StatusReg 0034  
                    ??_RecordMode 0035                       __end_of_isr 00CD                __end_of_ReadBuffer 0E50  
               compute_checksum@x 0026                __end_of_InitTimer1 0DB4                        ?_DecodeGPS 0070  
                  _ToggleSleepGPS 0EA8                 __size_of_InitGPIO 002B                         SetupGPS@x 006A  
            compute_checksum@data 0025                        ?_GoToSleep 0070              compute_checksum@size 0020  
                        ??___wmul 0024                __end_of_RecordMode 0537                       __pdataBANK1 00A0  
                     __pdataBANK2 0152                 __size_of_SetupGPS 0092                         _UpdateGPS 0EF5  
        compute_checksum@checksum 0024                 __size_of_WriteSPI 0013                       __pbssCOMMON 0079  
                       ___latbits 0001                     __pcstackBANK0 0020                     __pcstackBANK1 00DF  
                _WriteOverheadSPI 0FA0               __end_of__stringdata 0836               uart_write_message@x 0031  
                   _validEastWest 00BF            __end_of_ToggleSleepGPS 0ECA                   _messageDoneFlag 007D  
                     sprintf@_val 0042                       sprintf@flag 003E                       sprintf@prec 003F  
                        ?_InitADC 0070                          ?_InitCLK 0070                          ?_InitSPI 0070  
               __size_of_initUART 000F                          ?_ReadSPI 0070                         __pnvBANK1 00E3  
                   _validLatitude 00CD                  ___lwdiv@dividend 0028             __end_of_ReadStatusSPI 0DD4  
                        ?___lwdiv 0026                          ?___lwmod 002E                        ?_UpdateGPS 0070  
                  UpdateGPS@F4923 0152                  __CFG_WDTE$SWDTEN 0000                  ___lwdiv@quotient 002B  
                        ?_sprintf 0034        uart_write_message@checksum 0033                   ?_ToggleSleepGPS 0070  
                 _validNorthSouth 00C0                       ??_DecodeGPS 002E                    ___wmul@product 0024  
                        _LATBbits 010D                         clear_ram0 0D7A                          _PIE1bits 0091  
                  DecodeGPS@F4930 00C7                    DecodeGPS@F4926 00AD                    DecodeGPS@F4928 00C1  
                        _PIR1bits 0011                       ??_GoToSleep 0020                         _uart_xmit 0D8F  
                      _ADCON0bits 009D                        _ADCON1bits 009E                       __stringdata 080A  
                      _ADCON2bits 009F                 ___wmul@multiplier 0020                   RecordMode@count 003A  
                        _InitGPIO 0ECA                  __size_of_InitADC 0019                  __size_of_InitCLK 0008  
                __size_of_InitSPI 0012                  __size_of_ReadSPI 000C          __end_of_compute_checksum 0FA0  
           SetupGPS@startSequence 0060                          _SetupGPS 063D                        ?_uart_xmit 0070  
                    ?_WriteBuffer 0070                       ??_UpdateGPS 0048                  __size_of___lwdiv 0037  
                __size_of___lwmod 002F                          _WriteSPI 0DF8           _uart_write_message$1286 002D  
         _uart_write_message$1287 002F                        _ANSELAbits 018C                        _ANSELBbits 018D  
             ReadBuffer@read_data 0021                   ___lwdiv@divisor 0026                   ___lwdiv@counter 002D  
                        __ptext10 0537                          __ptext11 07CF                          __ptext20 0DA5  
                        __ptext12 0F27                          __ptext21 0DE6                          __ptext13 03CA  
                      _T1GCONbits 0019                          __ptext22 0ECA                          __ptext14 0FA0  
                        __ptext23 0D87                          __ptext15 0DC3                          __ptext24 0E50  
                        __ptext16 0DF8                          __ptext25 0DD4                          __ptext17 0D99  
                        __ptext18 0E38                          __ptext27 0E21                          __ptext19 0D80  
              _uart_write_message 075D                  __size_of_sprintf 0106                          _gpsIndex 00E3  
                        _initUART 0DB4                     __size_of_main 008E               ?_uart_write_message 0028  
                      DecodeGPS@x 0046          __end_of_WriteOverheadSPI 1000                    GoToSleep@count 0021  
                        main@argc 006C                          main@argv 006E              ??_uart_write_message 002A  
                      _INTCONbits 000B                       pic14e$flags 007E                          intlevel1 0000  
                       sprintf@ap 0040                         sprintf@sp 0041                  ___lwmod@dividend 0030  
               __CFG_CLKOUTEN$OFF 0000                        _OSCCONbits 0099                       ??_uart_xmit 0020  
                        sprintf@c 0046                          sprintf@f 0034                   ___lwmod@divisor 002E  
                 ___lwmod@counter 0033                  ??_ToggleSleepGPS 0020                       _SSPCON1bits 0215  
                      _WDTCONbits 0097                   _recordEndAdress 00D9                 DecodeGPS@eastWest 0038  
